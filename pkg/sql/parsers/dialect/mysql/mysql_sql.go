// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const ELSEIF = 57442
const LOWER_THAN_EQ = 57443
const LE = 57444
const GE = 57445
const NE = 57446
const NULL_SAFE_EQUAL = 57447
const IS = 57448
const LIKE = 57449
const REGEXP = 57450
const IN = 57451
const ASSIGNMENT = 57452
const ILIKE = 57453
const SHIFT_LEFT = 57454
const SHIFT_RIGHT = 57455
const DIV = 57456
const MOD = 57457
const UNARY = 57458
const COLLATE = 57459
const BINARY = 57460
const UNDERSCORE_BINARY = 57461
const INTERVAL = 57462
const OUT = 57463
const INOUT = 57464
const BEGIN = 57465
const START = 57466
const TRANSACTION = 57467
const COMMIT = 57468
const ROLLBACK = 57469
const WORK = 57470
const CONSISTENT = 57471
const SNAPSHOT = 57472
const CHAIN = 57473
const NO = 57474
const RELEASE = 57475
const PRIORITY = 57476
const QUICK = 57477
const BIT = 57478
const TINYINT = 57479
const SMALLINT = 57480
const MEDIUMINT = 57481
const INT = 57482
const INTEGER = 57483
const BIGINT = 57484
const INTNUM = 57485
const REAL = 57486
const DOUBLE = 57487
const FLOAT_TYPE = 57488
const DECIMAL = 57489
const NUMERIC = 57490
const DECIMAL_VALUE = 57491
const TIME = 57492
const TIMESTAMP = 57493
const DATETIME = 57494
const YEAR = 57495
const CHAR = 57496
const VARCHAR = 57497
const BOOL = 57498
const CHARACTER = 57499
const VARBINARY = 57500
const NCHAR = 57501
const TEXT = 57502
const TINYTEXT = 57503
const MEDIUMTEXT = 57504
const LONGTEXT = 57505
const BLOB = 57506
const TINYBLOB = 57507
const MEDIUMBLOB = 57508
const LONGBLOB = 57509
const JSON = 57510
const ENUM = 57511
const UUID = 57512
const GEOMETRY = 57513
const POINT = 57514
const LINESTRING = 57515
const POLYGON = 57516
const GEOMETRYCOLLECTION = 57517
const MULTIPOINT = 57518
const MULTILINESTRING = 57519
const MULTIPOLYGON = 57520
const INT1 = 57521
const INT2 = 57522
const INT3 = 57523
const INT4 = 57524
const INT8 = 57525
const S3OPTION = 57526
const SQL_SMALL_RESULT = 57527
const SQL_BIG_RESULT = 57528
const SQL_BUFFER_RESULT = 57529
const LOW_PRIORITY = 57530
const HIGH_PRIORITY = 57531
const DELAYED = 57532
const CREATE = 57533
const ALTER = 57534
const DROP = 57535
const RENAME = 57536
const ANALYZE = 57537
const ADD = 57538
const RETURNS = 57539
const SCHEMA = 57540
const TABLE = 57541
const SEQUENCE = 57542
const INDEX = 57543
const VIEW = 57544
const TO = 57545
const IGNORE = 57546
const IF = 57547
const PRIMARY = 57548
const COLUMN = 57549
const CONSTRAINT = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const FOREIGN = 57553
const KEY_BLOCK_SIZE = 57554
const SHOW = 57555
const DESCRIBE = 57556
const EXPLAIN = 57557
const DATE = 57558
const ESCAPE = 57559
const REPAIR = 57560
const OPTIMIZE = 57561
const TRUNCATE = 57562
const MAXVALUE = 57563
const PARTITION = 57564
const REORGANIZE = 57565
const LESS = 57566
const THAN = 57567
const PROCEDURE = 57568
const TRIGGER = 57569
const STATUS = 57570
const VARIABLES = 57571
const ROLE = 57572
const PROXY = 57573
const AVG_ROW_LENGTH = 57574
const STORAGE = 57575
const DISK = 57576
const MEMORY = 57577
const CHECKSUM = 57578
const COMPRESSION = 57579
const DATA = 57580
const DIRECTORY = 57581
const DELAY_KEY_WRITE = 57582
const ENCRYPTION = 57583
const ENGINE = 57584
const MAX_ROWS = 57585
const MIN_ROWS = 57586
const PACK_KEYS = 57587
const ROW_FORMAT = 57588
const STATS_AUTO_RECALC = 57589
const STATS_PERSISTENT = 57590
const STATS_SAMPLE_PAGES = 57591
const DYNAMIC = 57592
const COMPRESSED = 57593
const REDUNDANT = 57594
const COMPACT = 57595
const FIXED = 57596
const COLUMN_FORMAT = 57597
const AUTO_RANDOM = 57598
const RESTRICT = 57599
const CASCADE = 57600
const ACTION = 57601
const PARTIAL = 57602
const SIMPLE = 57603
const CHECK = 57604
const ENFORCED = 57605
const RANGE = 57606
const LIST = 57607
const ALGORITHM = 57608
const LINEAR = 57609
const PARTITIONS = 57610
const SUBPARTITION = 57611
const SUBPARTITIONS = 57612
const CLUSTER = 57613
const TYPE = 57614
const ANY = 57615
const SOME = 57616
const EXTERNAL = 57617
const LOCALFILE = 57618
const URL = 57619
const PREPARE = 57620
const DEALLOCATE = 57621
const RESET = 57622
const EXTENSION = 57623
const INCREMENT = 57624
const CYCLE = 57625
const MINVALUE = 57626
const PUBLICATION = 57627
const SUBSCRIPTIONS = 57628
const PUBLICATIONS = 57629
const PROPERTIES = 57630
const PARSER = 57631
const VISIBLE = 57632
const INVISIBLE = 57633
const BTREE = 57634
const HASH = 57635
const RTREE = 57636
const BSI = 57637
const ZONEMAP = 57638
const LEADING = 57639
const BOTH = 57640
const TRAILING = 57641
const UNKNOWN = 57642
const EXPIRE = 57643
const ACCOUNT = 57644
const ACCOUNTS = 57645
const UNLOCK = 57646
const DAY = 57647
const NEVER = 57648
const PUMP = 57649
const MYSQL_COMPATIBILITY_MODE = 57650
const SECOND = 57651
const ASCII = 57652
const COALESCE = 57653
const COLLATION = 57654
const HOUR = 57655
const MICROSECOND = 57656
const MINUTE = 57657
const MONTH = 57658
const QUARTER = 57659
const REPEAT = 57660
const REVERSE = 57661
const ROW_COUNT = 57662
const WEEK = 57663
const REVOKE = 57664
const FUNCTION = 57665
const PRIVILEGES = 57666
const TABLESPACE = 57667
const EXECUTE = 57668
const SUPER = 57669
const GRANT = 57670
const OPTION = 57671
const REFERENCES = 57672
const REPLICATION = 57673
const SLAVE = 57674
const CLIENT = 57675
const USAGE = 57676
const RELOAD = 57677
const FILE = 57678
const TEMPORARY = 57679
const ROUTINE = 57680
const EVENT = 57681
const SHUTDOWN = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const ENGINES = 57689
const LOW_CARDINALITY = 57690
const ADMIN_NAME = 57691
const RANDOM = 57692
const SUSPEND = 57693
const ATTRIBUTE = 57694
const HISTORY = 57695
const REUSE = 57696
const CURRENT = 57697
const OPTIONAL = 57698
const FAILED_LOGIN_ATTEMPTS = 57699
const PASSWORD_LOCK_TIME = 57700
const UNBOUNDED = 57701
const SECONDARY = 57702
const USER = 57703
const IDENTIFIED = 57704
const CIPHER = 57705
const ISSUER = 57706
const X509 = 57707
const SUBJECT = 57708
const SAN = 57709
const REQUIRE = 57710
const SSL = 57711
const NONE = 57712
const PASSWORD = 57713
const MAX_QUERIES_PER_HOUR = 57714
const MAX_UPDATES_PER_HOUR = 57715
const MAX_CONNECTIONS_PER_HOUR = 57716
const MAX_USER_CONNECTIONS = 57717
const FORMAT = 57718
const VERBOSE = 57719
const CONNECTION = 57720
const TRIGGERS = 57721
const PROFILES = 57722
const LOAD = 57723
const INFILE = 57724
const TERMINATED = 57725
const OPTIONALLY = 57726
const ENCLOSED = 57727
const ESCAPED = 57728
const STARTING = 57729
const LINES = 57730
const ROWS = 57731
const IMPORT = 57732
const MODUMP = 57733
const OVER = 57734
const PRECEDING = 57735
const FOLLOWING = 57736
const GROUPS = 57737
const DATABASES = 57738
const TABLES = 57739
const SEQUENCES = 57740
const EXTENDED = 57741
const FULL = 57742
const PROCESSLIST = 57743
const FIELDS = 57744
const COLUMNS = 57745
const OPEN = 57746
const ERRORS = 57747
const WARNINGS = 57748
const INDEXES = 57749
const SCHEMAS = 57750
const NODE = 57751
const LOCKS = 57752
const ROLES = 57753
const TABLE_NUMBER = 57754
const COLUMN_NUMBER = 57755
const TABLE_VALUES = 57756
const TABLE_SIZE = 57757
const NAMES = 57758
const GLOBAL = 57759
const SESSION = 57760
const ISOLATION = 57761
const LEVEL = 57762
const READ = 57763
const WRITE = 57764
const ONLY = 57765
const REPEATABLE = 57766
const COMMITTED = 57767
const UNCOMMITTED = 57768
const SERIALIZABLE = 57769
const LOCAL = 57770
const EVENTS = 57771
const PLUGINS = 57772
const CURRENT_TIMESTAMP = 57773
const DATABASE = 57774
const CURRENT_TIME = 57775
const LOCALTIME = 57776
const LOCALTIMESTAMP = 57777
const UTC_DATE = 57778
const UTC_TIME = 57779
const UTC_TIMESTAMP = 57780
const REPLACE = 57781
const CONVERT = 57782
const SEPARATOR = 57783
const TIMESTAMPDIFF = 57784
const CURRENT_DATE = 57785
const CURRENT_USER = 57786
const CURRENT_ROLE = 57787
const SECOND_MICROSECOND = 57788
const MINUTE_MICROSECOND = 57789
const MINUTE_SECOND = 57790
const HOUR_MICROSECOND = 57791
const HOUR_SECOND = 57792
const HOUR_MINUTE = 57793
const DAY_MICROSECOND = 57794
const DAY_SECOND = 57795
const DAY_MINUTE = 57796
const DAY_HOUR = 57797
const YEAR_MONTH = 57798
const SQL_TSI_HOUR = 57799
const SQL_TSI_DAY = 57800
const SQL_TSI_WEEK = 57801
const SQL_TSI_MONTH = 57802
const SQL_TSI_QUARTER = 57803
const SQL_TSI_YEAR = 57804
const SQL_TSI_SECOND = 57805
const SQL_TSI_MINUTE = 57806
const RECURSIVE = 57807
const CONFIG = 57808
const DRAINER = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const ADDDATE = 57817
const BIT_AND = 57818
const BIT_OR = 57819
const BIT_XOR = 57820
const CAST = 57821
const COUNT = 57822
const APPROX_COUNT_DISTINCT = 57823
const APPROX_PERCENTILE = 57824
const CURDATE = 57825
const CURTIME = 57826
const DATE_ADD = 57827
const DATE_SUB = 57828
const EXTRACT = 57829
const GROUP_CONCAT = 57830
const MAX = 57831
const MID = 57832
const MIN = 57833
const NOW = 57834
const POSITION = 57835
const SESSION_USER = 57836
const STD = 57837
const STDDEV = 57838
const MEDIAN = 57839
const STDDEV_POP = 57840
const STDDEV_SAMP = 57841
const SUBDATE = 57842
const SUBSTR = 57843
const SUBSTRING = 57844
const SUM = 57845
const SYSDATE = 57846
const SYSTEM_USER = 57847
const TRANSLATE = 57848
const TRIM = 57849
const VARIANCE = 57850
const VAR_POP = 57851
const VAR_SAMP = 57852
const AVG = 57853
const RANK = 57854
const NEXTVAL = 57855
const SETVAL = 57856
const CURRVAL = 57857
const LASTVAL = 57858
const ARROW = 57859
const ROW = 57860
const OUTFILE = 57861
const HEADER = 57862
const MAX_FILE_SIZE = 57863
const FORCE_QUOTE = 57864
const PARALLEL = 57865
const UNUSED = 57866
const BINDINGS = 57867
const DO = 57868
const DECLARE = 57869
const LOOP = 57870
const WHILE = 57871
const LEAVE = 57872
const ITERATE = 57873
const UNTIL = 57874
const CALL = 57875
const SPBEGIN = 57876
const BACKEND = 57877
const SERVERS = 57878
const KILL = 57879
const QUERY_RESULT = 57880

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9375

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 109,
	21, 625,
	-2, 606,
	-1, 123,
	218, 842,
	-2, 913,
	-1, 145,
	42, 446,
	218, 446,
	245, 453,
	246, 453,
	424, 446,
	-2, 479,
	-1, 181,
	557, 1572,
	-2, 365,
	-1, 498,
	294, 130,
	399, 130,
	-2, 1486,
	-1, 561,
	67, 1292,
	-2, 1626,
	-1, 562,
	67, 1310,
	-2, 1597,
	-1, 566,
	67, 1311,
	-2, 1625,
	-1, 589,
	67, 1222,
	-2, 1687,
	-1, 590,
	67, 1223,
	-2, 1686,
	-1, 591,
	67, 1224,
	-2, 1676,
	-1, 592,
	67, 1651,
	-2, 1671,
	-1, 593,
	67, 1652,
	-2, 1672,
	-1, 594,
	67, 1653,
	-2, 1678,
	-1, 595,
	67, 1654,
	-2, 1661,
	-1, 596,
	67, 1655,
	-2, 1669,
	-1, 597,
	67, 1656,
	-2, 1679,
	-1, 598,
	67, 1657,
	-2, 1680,
	-1, 599,
	67, 1658,
	-2, 1685,
	-1, 600,
	67, 1659,
	-2, 1690,
	-1, 601,
	67, 1660,
	-2, 1691,
	-1, 603,
	67, 1289,
	-2, 1478,
	-1, 610,
	67, 1298,
	-2, 1504,
	-1, 614,
	67, 1302,
	-2, 1543,
	-1, 615,
	67, 1303,
	-2, 1621,
	-1, 623,
	67, 1313,
	-2, 1606,
	-1, 625,
	67, 1315,
	-2, 1616,
	-1, 626,
	67, 1316,
	-2, 1641,
	-1, 637,
	67, 1200,
	-2, 1681,
	-1, 638,
	67, 1201,
	-2, 1682,
	-1, 639,
	67, 1202,
	-2, 1683,
	-1, 643,
	21, 626,
	-2, 589,
	-1, 712,
	419, 479,
	420, 479,
	-2, 447,
	-1, 754,
	105, 1478,
	116, 1478,
	136, 1478,
	-2, 1453,
	-1, 854,
	21, 626,
	-2, 589,
	-1, 953,
	21, 625,
	-2, 1105,
	-1, 1294,
	67, 1360,
	-2, 1623,
	-1, 1295,
	67, 1361,
	-2, 1624,
	-1, 1427,
	68, 767,
	-2, 773,
	-1, 1750,
	68, 1439,
	137, 1439,
	-2, 1608,
	-1, 1751,
	68, 1439,
	137, 1439,
	-2, 1607,
	-1, 1752,
	68, 1417,
	137, 1417,
	-2, 1594,
	-1, 1753,
	68, 1418,
	137, 1418,
	-2, 1599,
	-1, 1754,
	68, 1419,
	137, 1419,
	-2, 1531,
	-1, 1755,
	68, 1420,
	137, 1420,
	-2, 1525,
	-1, 1756,
	68, 1421,
	137, 1421,
	-2, 1469,
	-1, 1757,
	68, 1422,
	137, 1422,
	-2, 1596,
	-1, 1758,
	68, 1423,
	137, 1423,
	-2, 1529,
	-1, 1759,
	68, 1424,
	137, 1424,
	-2, 1524,
	-1, 1760,
	68, 1425,
	137, 1425,
	-2, 1517,
	-1, 1762,
	68, 1428,
	137, 1428,
	-2, 1641,
	-1, 1763,
	68, 1408,
	137, 1408,
	-2, 1626,
	-1, 1764,
	68, 1437,
	137, 1437,
	-2, 1597,
	-1, 1765,
	68, 1437,
	137, 1437,
	-2, 1625,
	-1, 1766,
	68, 1437,
	137, 1437,
	-2, 1487,
	-1, 1767,
	68, 1435,
	137, 1435,
	-2, 1616,
	-1, 1768,
	68, 1432,
	137, 1432,
	-2, 1509,
	-1, 1769,
	67, 1390,
	68, 1390,
	137, 1390,
	361, 1390,
	362, 1390,
	363, 1390,
	-2, 1468,
	-1, 1770,
	67, 1391,
	68, 1391,
	137, 1391,
	361, 1391,
	362, 1391,
	363, 1391,
	-2, 1470,
	-1, 1771,
	67, 1394,
	68, 1394,
	137, 1394,
	361, 1394,
	362, 1394,
	363, 1394,
	-2, 1598,
	-1, 1772,
	67, 1396,
	68, 1396,
	137, 1396,
	361, 1396,
	362, 1396,
	363, 1396,
	-2, 1581,
	-1, 1773,
	67, 1398,
	68, 1398,
	137, 1398,
	361, 1398,
	362, 1398,
	363, 1398,
	-2, 1530,
	-1, 1774,
	67, 1400,
	68, 1400,
	137, 1400,
	361, 1400,
	362, 1400,
	363, 1400,
	-2, 1513,
	-1, 1775,
	67, 1401,
	68, 1401,
	137, 1401,
	361, 1401,
	362, 1401,
	363, 1401,
	-2, 1514,
	-1, 1776,
	67, 1403,
	68, 1403,
	137, 1403,
	361, 1403,
	362, 1403,
	363, 1403,
	-2, 1467,
	-1, 1777,
	68, 1442,
	137, 1442,
	361, 1442,
	362, 1442,
	363, 1442,
	-2, 1492,
	-1, 1778,
	68, 1442,
	137, 1442,
	361, 1442,
	362, 1442,
	363, 1442,
	-2, 1505,
	-1, 1779,
	68, 1445,
	137, 1445,
	361, 1445,
	362, 1445,
	363, 1445,
	-2, 1488,
	-1, 1780,
	68, 1442,
	137, 1442,
	361, 1442,
	362, 1442,
	363, 1442,
	-2, 1566,
	-1, 1793,
	88, 877,
	132, 877,
	171, 877,
	174, 877,
	258, 877,
	-2, 870,
	-1, 1902,
	21, 625,
	-2, 717,
	-1, 2080,
	88, 877,
	132, 877,
	171, 877,
	174, 877,
	258, 877,
	-2, 871,
	-1, 2092,
	65, 533,
	137, 533,
	-2, 1008,
	-1, 2110,
	279, 1073,
	-2, 1052,
	-1, 2370,
	279, 1073,
	-2, 1053,
	-1, 2503,
	88, 877,
	132, 877,
	171, 877,
	174, 877,
	-2, 956,
	-1, 2506,
	88, 877,
	132, 877,
	171, 877,
	174, 877,
	-2, 956,
	-1, 2516,
	65, 533,
	137, 533,
	-2, 1009,
	-1, 2614,
	88, 877,
	132, 877,
	171, 877,
	174, 877,
	-2, 957,
	-1, 2904,
	68, 928,
	137, 928,
	-2, 877,
	-1, 2908,
	68, 928,
	137, 928,
	-2, 877,
	-1, 2922,
	68, 932,
	137, 932,
	-2, 877,
	-1, 2927,
	68, 933,
	137, 933,
	-2, 877,
}

const yyPrivate = 57344

const yyLast = 34495

var yyAct = [...]int{
	528, 2908, 1213, 1489, 2907, 2887, 172, 2916, 507, 2798,
	509, 2846, 1275, 530, 2816, 2581, 2838, 2674, 2586, 2382,
	2757, 2646, 2758, 1728, 2725, 1087, 2458, 2741, 2745, 2607,
	2668, 644, 2459, 2606, 984, 2690, 2658, 2584, 1204, 417,
	1448, 2635, 1278, 558, 2095, 2613, 2347, 1138, 423, 2576,
	428, 428, 2526, 2175, 1271, 2176, 428, 444, 451, 1546,
	2486, 451, 157, 2371, 2161, 2171, 2394, 1830, 2168, 511,
	2456, 1985, 1638, 1607, 2444, 2197, 2174, 1833, 2322, 462,
	2427, 1748, 2319, 1896, 2317, 2081, 753, 1200, 1746, 506,
	1046, 1521, 1559, 1849, 2393, 2608, 1802, 456, 848, 1738,
	1984, 2345, 2026, 2227, 1634, 1409, 500, 1616, 2266, 501,
	1615, 1608, 1935, 2210, 1539, 1492, 1581, 1633, 1897, 1885,
	1212, 1522, 1064, 1524, 2063, 1062, 690, 2059, 759, 2112,
	1485, 1831, 1417, 53, 168, 8, 1952, 1274, 167, 7,
	6, 1435, 1666, 1801, 508, 1269, 1635, 36, 803, 417,
	510, 1195, 1147, 1169, 1543, 108, 1786, 422, 35, 1744,
	2027, 1324, 1308, 1459, 1260, 1458, 26, 1614, 15, 1076,
	1450, 1645, 172, 13, 172, 865, 794, 795, 518, 1205,
	14, 1096, 1176, 757, 440, 499, 501, 1611, 1095, 1597,
	1020, 1571, 1268, 745, 1904, 1434, 1476, 641, 437, 1330,
	1122, 1329, 464, 1072, 449, 707, 1088, 23, 16, 158,
	10, 1130, 689, 154, 1168, 687, 465, 151, 985, 2260,
	1044, 2260, 450, 448, 1652, 445, 1987, 1642, 2451, 1941,
	446, 1939, 719, 1938, 790, 1936, 792, 447, 643, 746,
	787, 1183, 1179, 791, 787, 786, 156, 1181, 787, 424,
	1108, 922, 923, 924, 921, 922, 923, 924, 921, 2574,
	2223, 2221, 1586, 2664, 2659, 2577, 2457, 1413, 979, 2734,
	1610, 433, 642, 155, 2789, 49, 147, 124, 416, 652,
	1036, 2700, 2599, 454, 155, 155, 763, 1350, 155, 885,
	155, 8, 155, 155, 2598, 7, 1972, 785, 1639, 1980,
	155, 2709, 49, 147, 124, 1227, 2289, 460, 760, 1650,
	155, 762, 1220, 1790, 1916, 155, 461, 49, 147, 124,
	2242, 1224, 919, 1557, 2235, 2701, 107, 1917, 1217, 900,
	152, 1037, 901, 1421, 1422, 1084, 1245, 769, 764, 768,
	770, 152, 1226, 2061, 1953, 152, 107, 152, 645, 1219,
	152, 729, 632, 2834, 631, 633, 634, 152, 635, 636,
	903, 1093, 1094, 2832, 774, 1091, 1472, 152, 767, 1090,
	1093, 1094, 152, 734, 653, 1277, 733, 2761, 2762, 917,
	756, 893, 755, 2594, 895, 912, 1261, 1721, 1104, 1265,
	2666, 1105, 922, 923, 924, 921, 2060, 2735, 2736, 2820,
	2821, 2669, 2670, 2671, 2672, 2460, 2460, 2228, 2727, 2727,
	2730, 2662, 896, 1264, 1967, 2229, 772, 2230, 1280, 868,
	859, 2740, 2469, 775, 1540, 1536, 2788, 428, 2331, 1532,
	2487, 1646, 898, 2333, 1256, 2494, 2323, 428, 858, 1346,
	765, 1876, 1785, 1343, 2682, 2051, 2255, 1345, 1342, 1344,
	1348, 1349, 1594, 451, 451, 1347, 428, 1182, 1180, 738,
	2604, 773, 2066, 2389, 495, 853, 855, 497, 1189, 1188,
	1977, 123, 496, 153, 1107, 888, 735, 915, 916, 2253,
	2328, 2329, 914, 2575, 889, 905, 2827, 2327, 906, 1266,
	2222, 899, 2165, 145, 1878, 2330, 2685, 797, 2601, 766,
	758, 2338, 1881, 1364, 2791, 2792, 2344, 891, 2593, 2836,
	1263, 1082, 868, 2351, 2595, 955, 908, 2760, 2697, 894,
	897, 2402, 2403, 1279, 2075, 2076, 2077, 2078, 852, 2750,
	2088, 453, 452, 857, 2547, 737, 2746, 2901, 2917, 880,
	2855, 2831, 2800, 890, 1651, 2716, 1071, 1286, 1289, 1290,
	2862, 1655, 1657, 1658, 1859, 2539, 1555, 1556, 1287, 2648,
	858, 2409, 902, 854, 2866, 1858, 2796, 2797, 1117, 2800,
	771, 2841, 2072, 2552, 2553, 2530, 1126, 763, 1125, 910,
	911, 878, 2325, 2146, 1086, 1085, 1110, 1069, 904, 449,
	449, 1353, 1354, 1355, 1356, 1357, 1358, 1351, 1352, 760,
	870, 869, 762, 1068, 2918, 2912, 736, 2888, 448, 448,
	445, 445, 2534, 2691, 892, 446, 446, 849, 2305, 1262,
	2924, 1106, 447, 447, 909, 2508, 861, 862, 2572, 988,
	2636, 2637, 2638, 2640, 2639, 1667, 1047, 460, 2724, 1123,
	885, 1640, 2473, 1973, 2259, 1907, 763, 907, 1640, 1643,
	1640, 1848, 1052, 2258, 1056, 989, 1055, 1054, 957, 958,
	959, 960, 455, 1042, 423, 1045, 1836, 2313, 760, 2698,
	1839, 762, 1017, 1654, 877, 873, 874, 2268, 2267, 2199,
	2201, 1059, 787, 787, 863, 787, 2790, 2050, 787, 690,
	2842, 2699, 1732, 870, 869, 1040, 787, 1424, 961, 787,
	684, 685, 686, 1937, 1425, 1093, 1094, 1184, 1734, 1733,
	1653, 2737, 2738, 682, 1641, 1093, 1094, 1083, 1038, 1039,
	1843, 1731, 1423, 884, 654, 655, 1092, 2621, 2324, 2837,
	2334, 2911, 1089, 2867, 2930, 428, 642, 1119, 2683, 1541,
	2256, 2093, 2065, 920, 2647, 2424, 50, 2356, 417, 417,
	417, 2600, 125, 1142, 1142, 1451, 428, 1048, 1049, 1050,
	1051, 50, 1053, 125, 125, 2420, 1057, 125, 1981, 125,
	2326, 125, 125, 451, 1045, 423, 879, 1172, 1172, 125,
	1288, 1535, 758, 1149, 1656, 1533, 997, 998, 172, 125,
	1257, 2923, 1451, 2605, 125, 2069, 2070, 417, 1840, 502,
	1835, 1144, 2532, 920, 1741, 1837, 2531, 1140, 1140, 2068,
	2147, 2149, 2150, 2151, 2148, 2839, 2840, 2929, 1070, 2094,
	885, 1043, 658, 2535, 2536, 1080, 1726, 1742, 1743, 1238,
	1239, 730, 2920, 1098, 1099, 1894, 1101, 1102, 1103, 2200,
	730, 1190, 778, 783, 784, 1211, 1574, 1214, 1842, 1258,
	2902, 1022, 1222, 1846, 1844, 2897, 1838, 1955, 1845, 1024,
	2504, 739, 2891, 2094, 2890, 1677, 922, 923, 924, 921,
	1078, 1079, 1243, 657, 2871, 2342, 1895, 660, 659, 1228,
	1073, 1077, 1077, 1077, 1853, 1142, 920, 1142, 858, 2885,
	643, 922, 923, 924, 921, 922, 923, 924, 921, 1698,
	1118, 2921, 1697, 1073, 1061, 1073, 2848, 2810, 1722, 1972,
	1202, 1203, 2287, 2424, 732, 1097, 2768, 731, 1100, 1648,
	646, 1242, 883, 732, 2898, 1109, 731, 1111, 1788, 1241,
	2763, 1648, 1165, 1648, 1259, 2718, 1895, 1676, 2717, 2714,
	2713, 1725, 1895, 1648, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1193, 1124, 1196, 1197,
	1319, 1320, 1136, 1137, 2712, 2711, 2686, 1328, 1572, 788,
	789, 920, 1150, 2554, 793, 2849, 2811, 1367, 1368, 1369,
	1377, 433, 763, 1276, 882, 2687, 763, 1133, 1134, 1135,
	1383, 1273, 1173, 1384, 1164, 1163, 1218, 1174, 2411, 2687,
	1225, 2343, 2194, 1386, 2719, 1391, 1392, 1806, 2687, 2687,
	2056, 449, 2053, 780, 781, 782, 2032, 1291, 646, 1988,
	1252, 1207, 1270, 1210, 1960, 1787, 1254, 1074, 1918, 1970,
	448, 1964, 445, 2687, 2687, 2687, 1185, 446, 920, 1251,
	1962, 1248, 1918, 1407, 447, 1229, 1247, 428, 1234, 1433,
	1142, 1437, 1639, 1439, 1440, 1957, 885, 883, 428, 1824,
	1950, 690, 1230, 1727, 1449, 1702, 1630, 2412, 1142, 1553,
	1948, 1895, 1060, 1119, 1946, 1944, 1322, 1127, 444, 1410,
	1250, 1249, 643, 1246, 1805, 920, 1267, 1376, 920, 2850,
	1359, 1360, 2519, 1363, 1317, 1318, 1723, 1471, 1806, 2493,
	1958, 1378, 1272, 2357, 2004, 1477, 1477, 1706, 1119, 1963,
	1119, 1705, 1119, 2212, 1385, 428, 1387, 1433, 1433, 1475,
	1696, 1142, 1519, 1531, 1958, 1432, 1310, 1075, 417, 1951,
	1142, 1438, 843, 840, 841, 842, 1018, 2096, 2009, 1949,
	2008, 2007, 2005, 1945, 1945, 1441, 1442, 1443, 851, 1687,
	1686, 1975, 1552, 1806, 1685, 1647, 428, 1433, 1142, 1974,
	1564, 428, 428, 1567, 2361, 1722, 1235, 1906, 1570, 1966,
	1821, 1693, 1576, 1362, 1678, 937, 920, 1629, 1579, 172,
	920, 1429, 172, 172, 1231, 172, 966, 1436, 2250, 920,
	871, 851, 1457, 1515, 1516, 846, 844, 1479, 2352, 1388,
	1366, 1365, 2751, 1065, 2006, 1454, 1537, 1066, 1466, 1467,
	1452, 1453, 1129, 1414, 1131, 656, 1408, 2880, 920, 920,
	1377, 1377, 1618, 920, 1648, 1132, 1074, 1377, 1377, 2868,
	1850, 2425, 1625, 1561, 1542, 1236, 851, 2416, 1563, 2413,
	2261, 1585, 2166, 1961, 1588, 1589, 2752, 1591, 1909, 860,
	1073, 1464, 1936, 1565, 1566, 2622, 1449, 2353, 1436, 1445,
	1142, 1637, 1469, 1465, 2449, 1460, 1470, 1462, 1463, 1473,
	1474, 1480, 1456, 1446, 1077, 1481, 1461, 1482, 2511, 2509,
	1468, 945, 946, 938, 939, 940, 941, 942, 943, 944,
	937, 1550, 1551, 1397, 1128, 1270, 1631, 1995, 1619, 2623,
	1930, 2354, 1478, 925, 938, 939, 940, 941, 942, 943,
	944, 937, 954, 1325, 1660, 1673, 1518, 1520, 1583, 1316,
	963, 1538, 2512, 2510, 1664, 1665, 1075, 1613, 1325, 1177,
	661, 1583, 2010, 2011, 1613, 1313, 1315, 1312, 2214, 1314,
	1558, 1431, 968, 924, 921, 1547, 1548, 1549, 2785, 921,
	1562, 2542, 2541, 763, 922, 923, 924, 921, 1582, 2231,
	763, 531, 540, 2450, 2124, 1580, 2123, 532, 2118, 539,
	533, 537, 536, 534, 535, 760, 2116, 2523, 762, 2280,
	2906, 2865, 760, 449, 2894, 762, 2856, 2602, 495, 1599,
	1381, 497, 1703, 2169, 2851, 1622, 496, 2318, 2801, 1710,
	1689, 1382, 448, 2776, 445, 922, 923, 924, 921, 446,
	2753, 2702, 1628, 1177, 1620, 2660, 447, 2628, 2625, 1623,
	1627, 1624, 541, 1632, 2279, 2864, 2603, 500, 2624, 858,
	1781, 935, 945, 946, 938, 939, 940, 941, 942, 943,
	944, 937, 428, 428, 428, 763, 1803, 922, 923, 924,
	921, 1529, 2513, 1688, 538, 2490, 1810, 1119, 1662, 1663,
	2491, 1668, 922, 923, 924, 921, 1814, 760, 2332, 2246,
	762, 1659, 2226, 2452, 2225, 1661, 922, 923, 924, 921,
	1119, 2141, 2140, 2139, 2895, 1672, 2157, 858, 2136, 2130,
	2127, 1310, 922, 923, 924, 921, 2126, 459, 1602, 2492,
	1601, 427, 427, 1940, 1389, 1390, 1600, 435, 1393, 1394,
	1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	922, 923, 924, 921, 1749, 2156, 2155, 1899, 1899, 1531,
	1899, 2826, 2153, 1825, 936, 935, 945, 946, 938, 939,
	940, 941, 942, 943, 944, 937, 858, 940, 941, 942,
	943, 944, 937, 1142, 428, 1596, 1782, 928, 929, 930,
	931, 932, 933, 934, 926, 2154, 1595, 1720, 1232, 858,
	423, 2152, 1035, 1172, 2582, 1531, 1171, 1171, 1925, 1852,
	1927, 2822, 1829, 2786, 172, 1851, 2722, 1854, 1855, 1856,
	1857, 1817, 2143, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1914, 1789, 1823,
	2684, 1901, 1735, 1905, 2661, 988, 922, 923, 924, 921,
	1903, 2612, 1811, 1675, 2580, 1997, 2578, 2558, 1812, 2556,
	1968, 2142, 2704, 1637, 1729, 1730, 2162, 1815, 1816, 2525,
	1142, 989, 1142, 1822, 1142, 1820, 1931, 2489, 2755, 858,
	922, 923, 924, 921, 2488, 2485, 2478, 1077, 1818, 1932,
	2019, 1819, 763, 2472, 1749, 1986, 1924, 922, 923, 924,
	921, 922, 923, 924, 921, 1879, 1178, 2419, 1142, 2013,
	922, 923, 924, 921, 760, 2417, 2407, 762, 2744, 922,
	923, 924, 921, 2588, 2020, 2406, 1978, 2310, 2673, 1142,
	2309, 2257, 1910, 1911, 1912, 2224, 1915, 2205, 2144, 2022,
	2137, 922, 923, 924, 921, 2133, 922, 923, 924, 921,
	1281, 1282, 1283, 1284, 1285, 2012, 1923, 1921, 1920, 2132,
	2131, 1724, 1140, 588, 587, 2024, 922, 923, 924, 921,
	1604, 858, 1922, 2587, 1982, 1598, 2021, 1420, 2551, 1233,
	996, 1929, 992, 1140, 991, 967, 847, 1999, 2506, 1993,
	2505, 1979, 1681, 2503, 1326, 1327, 922, 923, 924, 921,
	1361, 922, 923, 924, 921, 2477, 2464, 1270, 1371, 1971,
	155, 1969, 2043, 147, 124, 1976, 2455, 2454, 1142, 2443,
	2442, 2073, 2475, 2362, 2285, 1433, 2278, 2270, 2265, 2209,
	2055, 2092, 2052, 1947, 2283, 1989, 1990, 2098, 1943, 2028,
	1942, 1711, 1992, 1701, 2033, 922, 923, 924, 921, 1411,
	1699, 1695, 2107, 1415, 1694, 2003, 1418, 922, 923, 924,
	921, 2057, 1692, 1683, 1680, 2115, 2054, 152, 922, 923,
	924, 921, 2282, 2120, 2121, 2122, 1679, 1603, 1406, 2125,
	1380, 2281, 1379, 1202, 1203, 1370, 155, 1154, 543, 109,
	2047, 2044, 1152, 1899, 109, 922, 923, 924, 921, 2919,
	2879, 2083, 2873, 2158, 922, 923, 924, 921, 850, 2062,
	2863, 2089, 1433, 858, 1531, 1531, 1531, 1531, 856, 2099,
	2860, 2858, 2775, 2720, 986, 858, 1531, 1192, 2644, 1899,
	2632, 2629, 2566, 1197, 2564, 2549, 2548, 876, 1142, 2082,
	2113, 2110, 434, 152, 2113, 109, 2545, 2544, 2538, 428,
	428, 2498, 1201, 1194, 2114, 1436, 1063, 2159, 2119, 2071,
	1411, 2086, 2085, 172, 2100, 2084, 1411, 1411, 172, 8,
	1206, 2104, 2105, 7, 2091, 2097, 2128, 2129, 2190, 1209,
	1198, 2042, 2134, 2135, 1956, 2109, 1908, 1874, 1207, 1377,
	1210, 1377, 2111, 1804, 2241, 1311, 2117, 2245, 2041, 152,
	2164, 1568, 1428, 1142, 1427, 1255, 2252, 1584, 2177, 1221,
	1587, 2138, 1199, 1590, 2101, 1019, 1592, 1016, 2103, 1015,
	2177, 922, 923, 924, 921, 2215, 2102, 1014, 1013, 1012,
	2219, 1011, 1010, 2163, 2167, 2178, 2179, 2180, 2181, 2106,
	1009, 761, 2040, 2189, 1008, 109, 1410, 2193, 1007, 2191,
	1006, 2240, 2192, 1005, 2206, 2203, 1004, 2202, 1003, 1002,
	109, 643, 109, 2238, 1001, 922, 923, 924, 921, 2244,
	1000, 999, 995, 2213, 994, 993, 2273, 2217, 2275, 990,
	2216, 983, 2254, 2249, 982, 980, 979, 858, 978, 977,
	976, 975, 2234, 2321, 974, 973, 2237, 2232, 972, 971,
	970, 2239, 969, 2336, 965, 428, 2039, 2248, 964, 887,
	845, 2263, 2546, 2038, 1809, 858, 858, 858, 2262, 2428,
	2429, 763, 1792, 875, 1531, 1803, 2274, 2360, 763, 922,
	923, 924, 921, 2364, 2806, 2236, 922, 923, 924, 921,
	2269, 2804, 2243, 2392, 2759, 2395, 2431, 2395, 2395, 2276,
	2277, 2074, 1670, 1919, 2400, 1674, 1606, 886, 2290, 1142,
	1142, 2434, 2291, 2292, 2293, 2294, 2312, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2314, 2186, 2433, 2306, 2184,
	2183, 2187, 1749, 2311, 2185, 2182, 2271, 2272, 2905, 1965,
	428, 678, 2307, 2308, 1684, 2321, 2340, 1959, 2188, 2341,
	1891, 1892, 1691, 1433, 1433, 2049, 2404, 2405, 2390, 2391,
	1829, 1829, 1829, 1140, 1140, 2358, 1115, 2348, 2349, 2355,
	1704, 2359, 763, 1707, 1708, 1709, 2082, 1514, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 2316, 1148, 2569, 2398,
	2568, 2396, 2397, 2013, 1887, 1890, 1891, 1892, 1888, 2315,
	1889, 1893, 2453, 425, 647, 648, 649, 650, 1186, 2367,
	95, 1114, 1954, 1116, 1983, 1120, 1121, 646, 2421, 2422,
	1729, 1730, 763, 52, 2567, 1021, 2418, 2415, 2414, 51,
	1215, 1807, 2410, 913, 1783, 1569, 2368, 2037, 881, 428,
	2739, 2432, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	2036, 2363, 2436, 1167, 429, 2365, 2366, 2439, 2440, 2441,
	922, 923, 924, 921, 430, 2108, 1153, 680, 2448, 675,
	2058, 665, 1799, 922, 923, 924, 921, 431, 677, 676,
	109, 109, 761, 432, 1447, 2035, 1426, 1366, 1365, 2465,
	1033, 1034, 1031, 1032, 2813, 663, 2466, 2034, 1877, 669,
	1029, 1030, 2468, 1027, 1028, 2438, 1517, 2467, 922, 923,
	924, 921, 2471, 1113, 1112, 2479, 1626, 1067, 1023, 1433,
	922, 923, 924, 921, 646, 2502, 2423, 1411, 1411, 1411,
	2874, 2794, 647, 648, 649, 650, 1899, 1531, 2516, 2782,
	674, 2435, 2780, 2031, 673, 646, 1451, 2747, 2732, 2731,
	662, 953, 1171, 2729, 668, 2721, 2655, 2481, 2654, 1142,
	2579, 2480, 2462, 2524, 2030, 2484, 922, 923, 924, 921,
	428, 666, 2029, 2461, 2446, 2483, 1026, 2445, 2211, 2392,
	2808, 2807, 2808, 2247, 2497, 2518, 2496, 922, 923, 924,
	921, 1794, 664, 1682, 872, 922, 923, 924, 921, 2025,
	2807, 1433, 2540, 2463, 1081, 858, 681, 159, 3, 60,
	2, 1554, 1146, 2527, 2522, 2499, 2500, 2501, 2390, 2514,
	1, 1419, 922, 923, 924, 921, 2016, 651, 2515, 2571,
	667, 172, 2195, 2196, 2437, 2560, 2198, 1644, 1875, 1784,
	2335, 1058, 683, 1372, 858, 2550, 1240, 777, 1994, 922,
	923, 924, 921, 1996, 867, 1237, 2557, 2555, 866, 864,
	2561, 2014, 2015, 2596, 1323, 2562, 545, 1609, 2160, 2017,
	2018, 922, 923, 924, 921, 2651, 2812, 2559, 1430, 858,
	1142, 1142, 2023, 2845, 1025, 858, 2774, 2615, 2815, 1444,
	2615, 1253, 529, 2573, 2723, 2665, 1321, 2583, 2778, 2667,
	2177, 679, 1411, 2585, 1649, 2045, 2046, 1418, 918, 2517,
	2233, 2597, 703, 581, 556, 2520, 981, 1223, 2521, 922,
	923, 924, 921, 1216, 2288, 858, 858, 2610, 2618, 858,
	858, 2616, 2619, 2611, 1140, 2527, 779, 555, 2495, 2177,
	2067, 2518, 2696, 672, 776, 1449, 1483, 2652, 1882, 704,
	1593, 2663, 1187, 1208, 1191, 2656, 2657, 2620, 2633, 2634,
	2589, 2507, 2642, 2643, 2630, 2350, 2649, 2087, 2915, 2641,
	2904, 1887, 1890, 1891, 1892, 1888, 2886, 1889, 1893, 2681,
	1829, 2872, 2799, 2900, 2830, 2650, 2861, 1560, 2592, 2590,
	2591, 2854, 1560, 1560, 2795, 466, 1534, 1151, 2693, 415,
	743, 2645, 434, 1605, 467, 1808, 2787, 2631, 670, 1791,
	671, 2080, 2079, 858, 2679, 1292, 927, 1309, 2303, 2304,
	962, 505, 1671, 517, 2064, 858, 109, 2688, 2383, 2204,
	59, 58, 57, 56, 1575, 2695, 2694, 180, 2703, 547,
	179, 2771, 2817, 527, 526, 2706, 2710, 525, 524, 523,
	1886, 1884, 1883, 1526, 1525, 1573, 2401, 1847, 2715, 1841,
	1484, 2756, 2707, 2708, 2537, 2626, 2627, 2145, 858, 2533,
	2529, 2408, 2614, 2733, 2369, 2370, 2748, 2376, 2728, 2726,
	1798, 802, 798, 800, 801, 799, 2002, 109, 1998, 1826,
	1828, 109, 2743, 1827, 2346, 1740, 1739, 2742, 1737, 1736,
	2769, 2772, 109, 1041, 2749, 2680, 2482, 1747, 1745, 2754,
	2430, 109, 2426, 2337, 1617, 1416, 2218, 2773, 2220, 2764,
	2765, 2766, 2767, 2048, 1527, 2781, 1523, 2783, 2784, 1880,
	1793, 2779, 2777, 86, 85, 93, 1411, 136, 46, 164,
	163, 1411, 166, 165, 162, 1933, 1934, 161, 2793, 1175,
	160, 2617, 640, 37, 33, 12, 2819, 2802, 11, 2805,
	2803, 34, 21, 22, 20, 1244, 19, 25, 2809, 2818,
	32, 31, 30, 102, 101, 858, 29, 2264, 2823, 100,
	99, 98, 97, 2824, 28, 18, 41, 40, 39, 9,
	92, 90, 2844, 27, 91, 2833, 2835, 88, 89, 2284,
	87, 71, 70, 69, 2847, 2843, 83, 82, 2852, 81,
	858, 80, 79, 78, 77, 702, 68, 67, 66, 65,
	64, 2857, 2853, 2859, 75, 84, 76, 74, 73, 72,
	2819, 2870, 63, 62, 61, 121, 122, 120, 119, 858,
	118, 858, 117, 2818, 2869, 116, 115, 42, 43, 44,
	45, 2876, 2881, 2878, 132, 131, 133, 135, 2847, 2882,
	858, 137, 2825, 134, 2889, 129, 2896, 127, 130, 2899,
	2828, 128, 2893, 1795, 1796, 1797, 126, 54, 17, 24,
	4, 0, 0, 0, 2903, 0, 0, 0, 2910, 0,
	0, 0, 2914, 2913, 0, 0, 0, 1813, 2922, 2399,
	0, 0, 2925, 0, 2927, 1276, 2910, 2928, 0, 2926,
	0, 2914, 155, 0, 49, 147, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 692, 0, 0, 0, 0,
	0, 0, 148, 0, 1276, 0, 1276, 0, 0, 140,
	0, 0, 0, 149, 0, 0, 0, 0, 107, 0,
	0, 0, 2374, 0, 0, 1276, 0, 0, 0, 0,
	0, 1530, 0, 96, 0, 0, 0, 0, 155, 152,
	49, 147, 124, 0, 0, 0, 2384, 0, 0, 0,
	0, 0, 0, 0, 0, 1148, 0, 730, 148, 2377,
	0, 0, 0, 0, 0, 140, 2372, 0, 0, 149,
	0, 2387, 2388, 0, 107, 0, 0, 2373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 96,
	109, 109, 0, 109, 0, 152, 0, 0, 936, 935,
	945, 946, 938, 939, 940, 941, 942, 943, 944, 937,
	0, 0, 111, 112, 2378, 113, 114, 1700, 0, 0,
	0, 922, 923, 924, 921, 0, 0, 948, 761, 952,
	2474, 0, 0, 0, 0, 761, 2877, 2476, 0, 0,
	732, 0, 0, 731, 109, 949, 951, 947, 0, 950,
	936, 935, 945, 946, 938, 939, 940, 941, 942, 943,
	944, 937, 0, 0, 0, 0, 0, 0, 111, 112,
	0, 113, 114, 0, 0, 0, 0, 716, 0, 0,
	123, 146, 153, 0, 94, 693, 936, 935, 945, 946,
	938, 939, 940, 941, 942, 943, 944, 937, 0, 0,
	1350, 0, 145, 139, 138, 2386, 0, 1834, 0, 55,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2380, 0, 0, 0, 123, 146, 153, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 2379, 2381, 0, 0, 145, 139,
	138, 0, 0, 0, 0, 55, 0, 141, 142, 143,
	0, 0, 715, 714, 0, 1411, 0, 0, 2563, 0,
	0, 2565, 0, 0, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 150, 0, 2570, 0, 0, 691, 0,
	0, 0, 2090, 0, 0, 0, 0, 0, 0, 694,
	725, 103, 0, 0, 0, 144, 0, 104, 0, 0,
	0, 0, 0, 141, 142, 143, 0, 0, 0, 2389,
	0, 0, 0, 720, 0, 0, 0, 0, 0, 0,
	0, 2375, 0, 0, 0, 0, 0, 2385, 0, 150,
	0, 0, 1346, 0, 0, 0, 1343, 0, 0, 0,
	1345, 1342, 1344, 1348, 1349, 721, 726, 103, 1347, 0,
	105, 144, 0, 104, 0, 0, 0, 0, 0, 0,
	48, 0, 710, 0, 708, 712, 729, 0, 0, 0,
	709, 706, 705, 0, 711, 696, 697, 695, 698, 699,
	700, 701, 1346, 727, 728, 0, 1343, 0, 0, 0,
	1345, 1342, 1344, 1348, 1349, 723, 724, 0, 1347, 0,
	2207, 2208, 0, 0, 0, 0, 105, 0, 50, 0,
	0, 0, 0, 0, 0, 0, 48, 1902, 1991, 0,
	0, 0, 2678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 2689,
	0, 125, 936, 935, 945, 946, 938, 939, 940, 941,
	942, 943, 944, 937, 818, 0, 0, 0, 0, 2705,
	0, 0, 0, 1530, 50, 0, 0, 0, 0, 0,
	0, 0, 109, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1353, 1354, 1355, 1356, 1357, 1358,
	1351, 1352, 0, 0, 0, 106, 38, 125, 0, 0,
	0, 717, 47, 5, 0, 2678, 110, 0, 0, 0,
	0, 818, 0, 2875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1353, 1354, 1355, 1356, 1357, 1358,
	1351, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 38, 0, 0, 0, 2339, 806, 47, 0,
	0, 0, 110, 936, 935, 945, 946, 938, 939, 940,
	941, 942, 943, 944, 937, 0, 0, 826, 830, 832,
	834, 836, 837, 839, 0, 843, 840, 841, 842, 0,
	0, 821, 822, 823, 824, 804, 805, 827, 0, 807,
	0, 808, 809, 810, 811, 812, 813, 814, 815, 816,
	817, 819, 825, 0, 806, 2678, 0, 0, 796, 0,
	829, 831, 833, 835, 838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 830, 832, 834, 836, 837,
	839, 1560, 843, 840, 841, 842, 0, 0, 821, 822,
	823, 824, 804, 805, 827, 0, 807, 820, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 819, 825,
	2286, 0, 0, 0, 0, 1669, 0, 829, 831, 833,
	835, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 2884, 936,
	935, 945, 946, 938, 939, 940, 941, 942, 943, 944,
	937, 0, 0, 0, 820, 0, 0, 0, 0, 0,
	936, 935, 945, 946, 938, 939, 940, 941, 942, 943,
	944, 937, 0, 0, 0, 0, 0, 0, 0, 0,
	2470, 936, 935, 945, 946, 938, 939, 940, 941, 942,
	943, 944, 937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 1530, 1530, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 2000, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	563, 2543, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 554, 0, 0, 343, 298, 0,
	0, 828, 0, 611, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 0, 0, 544, 588,
	587, 531, 540, 0, 0, 242, 178, 532, 0, 539,
	533, 537, 536, 534, 535, 0, 603, 109, 0, 0,
	0, 0, 0, 503, 516, 2675, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 1530, 0, 0, 0, 564, 0, 515, 0,
	0, 559, 541, 542, 0, 0, 0, 109, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 538, 562, 566, 254, 625, 560,
	372, 237, 0, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 626, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 374, 0, 0,
	609, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 561, 0, 334, 316, 622, 504, 0, 332, 286,
	359, 324, 365, 349, 373, 328, 325, 228, 350, 257,
	297, 239, 241, 253, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 387, 388,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	607, 312, 0, 0, 621, 602, 604, 605, 608, 612,
	613, 614, 615, 616, 618, 620, 624, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	2676, 0, 0, 0, 2677, 0, 623, 0, 0, 0,
	378, 0, 0, 0, 0, 1530, 565, 302, 303, 304,
	305, 610, 0, 247, 398, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 0,
	0, 309, 277, 341, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 291, 0, 0, 632, 606, 631, 633,
	634, 630, 635, 636, 617, 522, 0, 569, 628, 627,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 227, 0, 285, 0, 326, 265,
	595, 574, 575, 576, 521, 577, 572, 573, 596, 567,
	592, 593, 546, 570, 578, 591, 579, 594, 597, 598,
	637, 638, 585, 639, 582, 599, 590, 589, 580, 568,
	600, 601, 553, 548, 583, 584, 571, 586, 549, 550,
	551, 552, 351, 563, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 554, 0, 0,
	343, 298, 0, 0, 0, 0, 611, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 0,
	0, 544, 588, 587, 531, 540, 0, 0, 242, 178,
	532, 0, 539, 533, 537, 536, 534, 535, 0, 603,
	0, 0, 0, 0, 0, 0, 503, 516, 0, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 0, 0, 0, 0, 564,
	0, 515, 0, 0, 559, 541, 542, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 538, 562, 566,
	254, 625, 560, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 626, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	374, 0, 0, 609, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 561, 0, 334, 316, 622, 504,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 1374, 1373, 1375, 386, 267,
	225, 226, 421, 607, 312, 0, 0, 621, 602, 604,
	605, 608, 612, 613, 614, 615, 616, 618, 620, 624,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 565,
	302, 303, 304, 305, 610, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 632,
	606, 631, 633, 634, 630, 635, 636, 617, 522, 0,
	569, 628, 627, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 595, 574, 575, 576, 521, 577, 572,
	573, 596, 567, 592, 593, 546, 570, 578, 591, 579,
	594, 597, 598, 637, 638, 585, 639, 582, 599, 590,
	589, 580, 568, 600, 601, 553, 548, 583, 584, 571,
	586, 549, 550, 551, 552, 351, 563, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	554, 0, 0, 343, 298, 0, 0, 0, 0, 611,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 0, 0, 544, 588, 587, 531, 540, 0,
	0, 242, 178, 532, 0, 539, 533, 537, 536, 534,
	535, 0, 603, 0, 0, 0, 0, 0, 0, 503,
	516, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 0, 0,
	0, 0, 564, 0, 515, 0, 0, 559, 541, 542,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	538, 562, 566, 254, 625, 560, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 626, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 374, 0, 0, 609, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 561, 0, 334,
	316, 622, 504, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 607, 312, 0, 0,
	621, 602, 604, 605, 608, 612, 613, 614, 615, 616,
	618, 620, 624, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 2676, 0, 0, 0,
	2677, 0, 623, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 565, 302, 303, 304, 305, 610, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 632, 606, 631, 633, 634, 630, 635, 636,
	617, 522, 0, 569, 628, 627, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 0, 326, 265, 595, 574, 575, 576,
	521, 577, 572, 573, 596, 567, 592, 593, 546, 570,
	578, 591, 579, 594, 597, 598, 637, 638, 585, 639,
	582, 599, 590, 589, 580, 568, 600, 601, 553, 548,
	583, 584, 571, 586, 549, 550, 551, 552, 351, 563,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 0, 0, 0, 260, 1412, 0, 284,
	0, 0, 0, 554, 0, 0, 343, 298, 0, 0,
	0, 0, 611, 619, 0, 0, 0, 0, 0, 0,
	0, 1544, 0, 0, 512, 0, 0, 544, 588, 587,
	531, 540, 0, 0, 242, 178, 532, 0, 539, 533,
	537, 536, 534, 535, 0, 603, 0, 0, 0, 0,
	0, 0, 503, 516, 0, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 0, 0, 0, 0, 564, 0, 515, 0, 0,
	1545, 541, 542, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 538, 562, 566, 254, 625, 560, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 626, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 374, 0, 0, 609,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	561, 0, 334, 316, 622, 504, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 607,
	312, 0, 0, 621, 602, 604, 605, 608, 612, 613,
	614, 615, 616, 618, 620, 624, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 565, 302, 303, 304, 305,
	610, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 632, 606, 631, 633, 634,
	630, 635, 636, 617, 522, 0, 569, 628, 627, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 595,
	574, 575, 576, 521, 577, 572, 573, 596, 567, 592,
	593, 546, 570, 578, 591, 579, 594, 597, 598, 637,
	638, 585, 639, 582, 599, 590, 589, 580, 568, 600,
	601, 553, 548, 583, 584, 571, 586, 549, 550, 551,
	552, 155, 351, 563, 382, 383, 384, 406, 368, 0,
	418, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 956, 0, 0,
	343, 298, 0, 0, 0, 0, 611, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 0,
	0, 544, 588, 587, 531, 540, 0, 0, 242, 178,
	532, 0, 539, 533, 537, 536, 534, 535, 0, 603,
	0, 0, 0, 0, 0, 0, 503, 516, 0, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 0, 0, 0, 0, 564,
	0, 515, 0, 0, 559, 541, 542, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 538, 562, 566,
	254, 625, 560, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 626, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	374, 0, 0, 609, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 561, 0, 334, 316, 622, 504,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 607, 312, 0, 0, 621, 602, 604,
	605, 608, 612, 613, 614, 615, 616, 618, 620, 624,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 565,
	302, 303, 304, 305, 610, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 632,
	606, 631, 633, 634, 630, 635, 636, 617, 522, 0,
	569, 628, 627, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	125, 326, 265, 595, 574, 575, 576, 521, 577, 572,
	573, 596, 567, 592, 593, 546, 570, 578, 591, 579,
	594, 597, 598, 637, 638, 585, 639, 582, 599, 590,
	589, 580, 568, 600, 601, 553, 548, 583, 584, 571,
	586, 549, 550, 551, 552, 351, 563, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	0, 0, 0, 260, 2883, 0, 284, 0, 0, 0,
	554, 0, 0, 343, 298, 0, 0, 0, 0, 611,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 0, 0, 544, 588, 587, 531, 540, 0,
	0, 242, 178, 532, 0, 539, 533, 537, 536, 534,
	535, 0, 603, 0, 0, 0, 0, 0, 0, 503,
	516, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 0, 0,
	0, 0, 564, 0, 515, 0, 0, 559, 541, 542,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	538, 562, 566, 254, 625, 560, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 626, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 374, 0, 0, 609, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 561, 0, 334,
	316, 622, 504, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 607, 312, 0, 0,
	621, 602, 604, 605, 608, 612, 613, 614, 615, 616,
	618, 620, 624, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 565, 302, 303, 304, 305, 610, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 632, 606, 631, 633, 634, 630, 635, 636,
	617, 522, 0, 569, 628, 627, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 0, 326, 265, 595, 574, 575, 576,
	521, 577, 572, 573, 596, 567, 592, 593, 546, 570,
	578, 591, 579, 594, 597, 598, 637, 638, 585, 639,
	582, 599, 590, 589, 580, 568, 600, 601, 553, 548,
	583, 584, 571, 586, 549, 550, 551, 552, 351, 563,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 0, 0, 0, 260, 1412, 0, 284,
	0, 0, 0, 554, 0, 0, 343, 298, 0, 0,
	0, 0, 611, 619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 544, 588, 587,
	531, 540, 0, 0, 242, 178, 532, 0, 539, 533,
	537, 536, 534, 535, 0, 603, 0, 0, 0, 0,
	0, 0, 503, 516, 0, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 0, 0, 0, 0, 564, 0, 515, 0, 0,
	559, 541, 542, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 538, 562, 566, 254, 625, 560, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 626, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 374, 0, 0, 609,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	561, 0, 334, 316, 622, 504, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 607,
	312, 0, 0, 621, 602, 604, 605, 608, 612, 613,
	614, 615, 616, 618, 620, 624, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 565, 302, 303, 304, 305,
	610, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 632, 606, 631, 633, 634,
	630, 635, 636, 617, 522, 0, 569, 628, 627, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 595,
	574, 575, 576, 521, 577, 572, 573, 596, 567, 592,
	593, 546, 570, 578, 591, 579, 594, 597, 598, 637,
	638, 585, 639, 582, 599, 590, 589, 580, 568, 600,
	601, 553, 548, 583, 584, 571, 586, 549, 550, 551,
	552, 351, 563, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 554, 0, 0, 343,
	298, 0, 0, 0, 0, 611, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 0, 0,
	544, 588, 587, 531, 540, 0, 0, 242, 178, 532,
	0, 539, 533, 537, 536, 534, 535, 0, 603, 0,
	0, 0, 0, 0, 0, 503, 516, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 1170, 0, 0, 0, 564, 0,
	515, 0, 0, 559, 541, 542, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 538, 562, 566, 254,
	625, 560, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 626, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 374,
	0, 0, 609, 0, 0, 0, 347, 0, 0, 283,
	0, 0, 0, 561, 0, 334, 316, 622, 504, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 0,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 607, 312, 0, 0, 621, 602, 604, 605,
	608, 612, 613, 614, 615, 616, 618, 620, 624, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 565, 302,
	303, 304, 305, 610, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 632, 606,
	631, 633, 634, 630, 635, 636, 617, 522, 0, 569,
	628, 627, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 595, 574, 575, 576, 521, 577, 572, 573,
	596, 567, 592, 593, 546, 570, 578, 591, 579, 594,
	597, 598, 637, 638, 585, 639, 582, 599, 590, 589,
	580, 568, 600, 601, 553, 548, 583, 584, 571, 586,
	549, 550, 551, 552, 0, 0, 0, 382, 383, 384,
	406, 368, 0, 418, 351, 563, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 554,
	0, 0, 343, 298, 0, 0, 0, 0, 611, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	512, 0, 0, 544, 588, 587, 531, 540, 0, 0,
	242, 178, 532, 0, 539, 533, 537, 536, 534, 535,
	0, 603, 0, 0, 0, 0, 0, 0, 503, 516,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 0, 0, 0,
	0, 564, 0, 515, 0, 0, 559, 541, 542, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 538,
	562, 566, 254, 625, 560, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	626, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 374, 0, 0, 609, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 561, 0, 334, 316,
	622, 504, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 607, 312, 0, 0, 621,
	602, 604, 605, 608, 612, 613, 614, 615, 616, 618,
	620, 624, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 565, 302, 303, 304, 305, 610, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 632, 606, 631, 633, 634, 630, 635, 636, 617,
	522, 0, 569, 628, 627, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 595, 574, 575, 576, 521,
	577, 572, 573, 596, 567, 592, 593, 546, 570, 578,
	591, 579, 594, 597, 598, 637, 638, 585, 639, 582,
	599, 590, 589, 580, 568, 600, 601, 553, 548, 583,
	584, 571, 586, 549, 550, 551, 552, 351, 563, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 554, 0, 0, 343, 298, 0, 0, 0,
	0, 611, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 0, 0, 544, 588, 587, 531,
	540, 0, 0, 242, 178, 532, 0, 539, 533, 537,
	536, 534, 535, 0, 603, 0, 0, 0, 0, 0,
	0, 503, 516, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	0, 0, 0, 0, 564, 0, 515, 0, 0, 559,
	541, 542, 0, 0, 0, 0, 233, 348, 364, 243,
	339, 377, 248, 346, 238, 313, 336, 0, 0, 235,
	362, 345, 295, 278, 279, 234, 0, 331, 258, 271,
	255, 311, 538, 562, 566, 254, 625, 560, 372, 237,
	0, 371, 310, 358, 363, 296, 290, 236, 360, 294,
	289, 282, 262, 626, 275, 322, 288, 323, 276, 300,
	299, 301, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 374, 0, 0, 609, 0,
	0, 0, 347, 0, 0, 283, 0, 0, 0, 561,
	0, 334, 316, 622, 504, 0, 332, 286, 359, 324,
	365, 349, 373, 328, 325, 228, 350, 257, 297, 239,
	241, 253, 259, 261, 263, 264, 306, 307, 319, 338,
	352, 353, 354, 256, 249, 333, 250, 273, 251, 229,
	340, 252, 231, 320, 357, 0, 269, 329, 293, 232,
	292, 321, 356, 355, 240, 381, 387, 388, 393, 0,
	394, 0, 0, 0, 402, 407, 408, 409, 411, 412,
	413, 414, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 386, 267, 225, 226, 421, 607, 312,
	0, 0, 621, 602, 604, 605, 608, 612, 613, 614,
	615, 616, 618, 620, 624, 420, 0, 0, 0, 0,
	0, 419, 318, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 367, 379,
	397, 400, 0, 0, 0, 230, 399, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 565, 302, 303, 304, 305, 610,
	0, 247, 398, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 266, 272, 410, 274, 246, 317, 268, 376,
	280, 0, 403, 0, 404, 0, 0, 0, 0, 309,
	277, 341, 281, 287, 330, 375, 315, 335, 244, 366,
	342, 291, 0, 0, 632, 606, 631, 633, 634, 630,
	635, 636, 617, 522, 0, 569, 628, 627, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 285, 0, 326, 265, 595, 574,
	575, 576, 521, 577, 572, 573, 596, 567, 592, 593,
	546, 570, 578, 591, 579, 594, 597, 598, 637, 638,
	585, 639, 582, 599, 590, 589, 580, 568, 600, 601,
	553, 548, 583, 584, 571, 586, 549, 550, 551, 552,
	351, 563, 0, 382, 383, 384, 406, 368, 0, 418,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 519, 0, 0, 0, 260, 0,
	0, 284, 0, 0, 0, 554, 0, 0, 343, 298,
	0, 0, 0, 0, 611, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 0, 0, 544,
	588, 587, 531, 540, 0, 0, 242, 178, 532, 0,
	539, 533, 537, 536, 534, 535, 0, 603, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 0, 0, 0, 0, 564, 0, 515,
	0, 0, 559, 541, 542, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 538, 562, 566, 254, 625,
	560, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 626, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 374, 0,
	0, 609, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 561, 0, 334, 316, 622, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 1294,
	1295, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 607, 312, 0, 0, 621, 602, 604, 605, 608,
	612, 613, 614, 615, 616, 618, 620, 624, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 565, 302, 303,
	304, 305, 610, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 632, 606, 631,
	633, 634, 630, 635, 636, 617, 522, 0, 569, 628,
	627, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 595, 574, 575, 576, 521, 577, 572, 573, 596,
	567, 592, 593, 546, 570, 578, 591, 579, 594, 597,
	598, 637, 638, 585, 639, 582, 599, 590, 589, 580,
	568, 600, 601, 553, 548, 583, 584, 571, 586, 549,
	550, 551, 552, 351, 563, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 0, 0,
	0, 260, 0, 0, 284, 0, 0, 0, 554, 0,
	0, 343, 298, 0, 0, 0, 0, 611, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 588, 587, 531, 540, 0, 0, 242,
	178, 532, 0, 539, 533, 537, 536, 534, 535, 0,
	603, 0, 0, 0, 0, 0, 0, 503, 516, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 0, 0, 0, 0,
	564, 0, 515, 0, 0, 559, 541, 542, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 235, 362, 345, 295, 278,
	279, 234, 0, 331, 258, 271, 255, 311, 538, 562,
	566, 254, 625, 560, 372, 237, 0, 371, 310, 358,
	363, 296, 290, 236, 360, 294, 289, 282, 262, 626,
	275, 322, 288, 323, 276, 300, 299, 301, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 374, 0, 0, 609, 0, 0, 0, 347, 0,
	0, 283, 0, 0, 0, 561, 0, 334, 316, 622,
	504, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 607, 312, 0, 0, 621, 602,
	604, 605, 608, 612, 613, 614, 615, 616, 618, 620,
	624, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	565, 302, 303, 304, 305, 610, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	632, 606, 631, 633, 634, 630, 635, 636, 617, 522,
	0, 569, 628, 627, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	285, 0, 326, 265, 595, 574, 575, 576, 521, 577,
	572, 573, 596, 567, 592, 593, 546, 570, 578, 591,
	579, 594, 597, 598, 637, 638, 585, 639, 582, 599,
	590, 589, 580, 568, 600, 601, 553, 548, 583, 584,
	571, 586, 549, 550, 551, 552, 351, 563, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 0, 0, 0, 260, 0, 0, 284, 0, 0,
	0, 554, 0, 0, 343, 298, 0, 0, 0, 0,
	611, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 0, 0, 544, 588, 587, 531, 540,
	0, 0, 242, 178, 532, 0, 539, 533, 537, 536,
	534, 535, 0, 603, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 0,
	0, 0, 0, 564, 0, 515, 0, 0, 559, 541,
	542, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 538, 562, 566, 254, 625, 560, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 626, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 374, 0, 0, 609, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 561, 0,
	334, 316, 622, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 607, 312, 0,
	0, 621, 602, 604, 605, 608, 612, 613, 614, 615,
	616, 618, 620, 624, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 565, 302, 303, 304, 305, 610, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 632, 606, 631, 633, 634, 630, 635,
	636, 617, 522, 0, 569, 628, 627, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 595, 574, 575,
	576, 521, 577, 572, 573, 596, 567, 592, 593, 546,
	570, 578, 591, 579, 594, 597, 598, 637, 638, 585,
	639, 582, 599, 590, 589, 580, 568, 600, 601, 553,
	548, 583, 584, 571, 586, 549, 550, 551, 552, 0,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 155,
	351, 49, 147, 124, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 140, 0, 260, 0,
	149, 284, 0, 0, 0, 107, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 152, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 123, 146, 153,
	0, 94, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 170, 0, 0, 0, 347, 0, 0, 283, 145,
	139, 138, 390, 0, 334, 316, 55, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 141, 142, 143, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	369, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 173, 0, 0, 0, 181, 0,
	0, 0, 144, 0, 182, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 125, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 0, 0, 0, 382, 383, 384, 406,
	368, 351, 183, 38, 171, 174, 176, 175, 0, 47,
	5, 0, 314, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 343,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 987, 0, 0,
	177, 0, 0, 531, 540, 0, 0, 242, 178, 532,
	0, 539, 533, 537, 536, 534, 535, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 538, 361, 389, 254,
	380, 0, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 405, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 283,
	0, 0, 0, 390, 0, 334, 316, 0, 0, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 0,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 385, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 395, 302,
	303, 304, 305, 270, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	221, 222, 223, 224, 0, 0, 0, 382, 383, 384,
	406, 368, 0, 418, 155, 351, 49, 147, 124, 0,
	0, 0, 0, 0, 0, 0, 314, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 343, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 242, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	0, 361, 389, 254, 380, 0, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 405, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 390, 0, 334,
	316, 0, 0, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 385, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 395, 302, 303, 304, 305, 439, 441, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 125, 326, 265, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 0, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 221, 222, 223, 224, 351, 0,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 284,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	806, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	1769, 1771, 1772, 1773, 1774, 1775, 1776, 0, 1780, 1777,
	1778, 1779, 311, 0, 1764, 1765, 1766, 1767, 804, 1750,
	1770, 0, 1751, 310, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1768, 322, 288, 323, 276,
	300, 299, 301, 829, 831, 833, 835, 838, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	1763, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 828, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 343,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 242, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 1836,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 0, 361, 389, 254,
	380, 0, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 405, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 374,
	0, 0, 0, 1835, 0, 1834, 347, 1832, 1837, 283,
	0, 0, 0, 390, 0, 334, 316, 0, 0, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 1838,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 385, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 395, 302,
	303, 304, 305, 270, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	221, 222, 223, 224, 351, 0, 0, 382, 383, 384,
	406, 368, 0, 418, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 1578, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 922, 923, 924, 921, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 742, 0, 284, 0,
	0, 0, 0, 0, 0, 343, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 750, 751, 0,
	0, 0, 0, 242, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 348, 364, 243,
	339, 377, 248, 346, 238, 313, 336, 0, 0, 235,
	362, 345, 295, 278, 279, 234, 0, 331, 258, 271,
	255, 311, 0, 361, 389, 254, 380, 732, 372, 237,
	731, 371, 310, 358, 363, 296, 290, 236, 360, 294,
	289, 282, 262, 405, 275, 322, 288, 323, 276, 300,
	299, 301, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 283, 0, 0, 0, 390,
	0, 334, 316, 0, 0, 0, 332, 286, 359, 324,
	365, 349, 373, 740, 325, 228, 350, 257, 297, 239,
	241, 253, 259, 261, 263, 264, 306, 307, 319, 338,
	352, 353, 354, 256, 249, 333, 250, 273, 251, 229,
	340, 252, 231, 320, 357, 0, 269, 329, 293, 232,
	292, 321, 356, 355, 240, 381, 387, 388, 393, 0,
	394, 0, 0, 0, 402, 407, 408, 409, 411, 412,
	413, 414, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 386, 267, 225, 226, 421, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	385, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 419, 318, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 367, 379,
	397, 400, 0, 0, 0, 230, 399, 0, 0, 0,
	0, 0, 0, 741, 370, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 744, 302, 303, 304, 305, 270,
	0, 247, 398, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 266, 272, 410, 274, 246, 317, 268, 376,
	280, 0, 403, 0, 404, 0, 0, 0, 0, 752,
	747, 748, 281, 287, 330, 375, 315, 335, 244, 366,
	342, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 285, 0, 326, 265, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	0, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 0, 221, 222, 223, 224,
	155, 351, 0, 382, 383, 384, 406, 368, 0, 418,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 107, 0, 0, 343,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 1621, 0,
	177, 0, 0, 0, 0, 0, 0, 242, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 0, 361, 389, 254,
	380, 0, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 405, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 283,
	0, 0, 0, 390, 0, 334, 316, 0, 0, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 0,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 385, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 395, 302,
	303, 304, 305, 270, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 125,
	326, 265, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	221, 222, 223, 224, 155, 351, 0, 382, 383, 384,
	406, 368, 0, 418, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	107, 0, 0, 343, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 1612, 0, 177, 0, 0, 0, 0, 0,
	0, 242, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	0, 361, 389, 254, 380, 0, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 405, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 390, 0, 334,
	316, 0, 0, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 385, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 395, 302, 303, 304, 305, 270, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 125, 326, 265, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 0, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 221, 222, 223, 224, 155, 351,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 107, 0, 0, 343, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 242, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 0, 361, 389, 254, 380, 0,
	372, 237, 0, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 405, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 390, 0, 334, 316, 0, 0, 0, 332, 286,
	359, 324, 365, 349, 373, 328, 325, 228, 350, 257,
	297, 239, 241, 253, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 387, 388,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 385, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 395, 302, 303, 304,
	305, 270, 0, 247, 398, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 0,
	0, 309, 277, 341, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 285, 125, 326, 265,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 0, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 221, 222,
	223, 224, 351, 0, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 750, 751, 0, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 732, 372, 237, 731, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 752, 747, 748, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 343, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 242, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	0, 361, 389, 254, 380, 0, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 405, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 2173, 0, 0, 2172, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 390, 0, 334,
	316, 0, 0, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 385, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 395, 302, 303, 304, 305, 270, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 0, 326, 265, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 0, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 221, 222, 223, 224, 351, 0,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 1145, 0, 284,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	1143, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1141, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	1139, 0, 284, 0, 0, 0, 0, 0, 0, 343,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 1143, 0, 0, 0, 242, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1141, 0, 0, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 0, 361, 389, 254,
	380, 0, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 405, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 283,
	0, 0, 0, 390, 0, 334, 316, 0, 0, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 0,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 385, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 395, 302,
	303, 304, 305, 270, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	221, 222, 223, 224, 351, 0, 0, 382, 383, 384,
	406, 368, 0, 418, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2814, 0, 177, 588, 0, 0, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 343, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 1143,
	0, 0, 0, 242, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2528,
	0, 0, 0, 0, 0, 0, 233, 348, 364, 243,
	339, 377, 248, 346, 238, 313, 336, 0, 0, 235,
	362, 345, 295, 278, 279, 234, 0, 331, 258, 271,
	255, 311, 0, 361, 389, 254, 380, 0, 372, 237,
	0, 371, 310, 358, 363, 296, 290, 236, 360, 294,
	289, 282, 262, 405, 275, 322, 288, 323, 276, 300,
	299, 301, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 283, 0, 0, 0, 390,
	0, 334, 316, 0, 0, 0, 332, 286, 359, 324,
	365, 349, 373, 328, 325, 228, 350, 257, 297, 239,
	241, 253, 259, 261, 263, 264, 306, 307, 319, 338,
	352, 353, 354, 256, 249, 333, 250, 273, 251, 229,
	340, 252, 231, 320, 357, 0, 269, 329, 293, 232,
	292, 321, 356, 355, 240, 381, 387, 388, 393, 0,
	394, 0, 0, 0, 402, 407, 408, 409, 411, 412,
	413, 414, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 386, 267, 225, 226, 421, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	385, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 419, 318, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 367, 379,
	397, 400, 0, 0, 0, 230, 399, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 395, 302, 303, 304, 305, 270,
	0, 247, 398, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 266, 272, 410, 274, 246, 317, 268, 376,
	280, 0, 403, 0, 404, 0, 0, 0, 0, 309,
	277, 341, 281, 287, 330, 375, 315, 335, 244, 366,
	342, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 285, 0, 326, 265, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	0, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 0, 221, 222, 223, 224,
	351, 0, 0, 382, 383, 384, 406, 368, 0, 418,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 284, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 1143, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1141, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 343, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 1900, 0, 0, 0, 242,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 235, 362, 345, 295, 278,
	279, 234, 0, 331, 258, 271, 255, 311, 0, 361,
	389, 254, 380, 0, 372, 237, 0, 371, 310, 358,
	363, 296, 290, 236, 360, 294, 289, 282, 262, 405,
	275, 322, 288, 323, 276, 300, 299, 301, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 283, 0, 0, 0, 390, 0, 334, 316, 0,
	0, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 385, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	395, 302, 303, 304, 305, 270, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	285, 0, 326, 265, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 0, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 0, 221, 222, 223, 224, 351, 0, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 1913, 0, 284, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 1143, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 343, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2892, 0, 177, 0,
	0, 0, 0, 0, 0, 242, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 0, 361, 389, 254, 380, 0,
	372, 237, 0, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 405, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 390, 0, 334, 316, 0, 0, 0, 332, 286,
	359, 324, 365, 349, 373, 328, 325, 228, 350, 257,
	297, 239, 241, 253, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 387, 388,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 385, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 395, 302, 303, 304,
	305, 270, 0, 247, 398, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 0,
	0, 309, 277, 341, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 285, 0, 326, 265,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 0, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 221, 222,
	223, 224, 351, 0, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 588, 0, 0, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 343, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2829, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 242, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	0, 361, 389, 254, 380, 0, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 405, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 390, 0, 334,
	316, 0, 0, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 385, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 395, 302, 303, 304, 305, 270, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 0, 326, 265, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 0, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 221, 222, 223, 224, 351, 0,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 284,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	2770, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 343,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2609, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 242, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 0, 361, 389, 254,
	380, 0, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 405, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 283,
	0, 0, 0, 390, 0, 334, 316, 0, 0, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 0,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 385, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 395, 302,
	303, 304, 305, 270, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	221, 222, 223, 224, 351, 0, 0, 382, 383, 384,
	406, 368, 0, 418, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 2653, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 343, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 242, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 348, 364, 243,
	339, 377, 248, 346, 238, 313, 336, 0, 0, 235,
	362, 345, 295, 278, 279, 234, 0, 331, 258, 271,
	255, 311, 0, 361, 389, 254, 380, 0, 372, 237,
	0, 371, 310, 358, 363, 296, 290, 236, 360, 294,
	289, 282, 262, 405, 275, 322, 288, 323, 276, 300,
	299, 301, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 283, 0, 0, 0, 390,
	0, 334, 316, 0, 0, 0, 332, 286, 359, 324,
	365, 349, 373, 328, 325, 228, 350, 257, 297, 239,
	241, 253, 259, 261, 263, 264, 306, 307, 319, 338,
	352, 353, 354, 256, 249, 333, 250, 273, 251, 229,
	340, 252, 231, 320, 357, 0, 269, 329, 293, 232,
	292, 321, 356, 355, 240, 381, 387, 388, 393, 0,
	394, 0, 0, 0, 402, 407, 408, 409, 411, 412,
	413, 414, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 386, 267, 225, 226, 421, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	385, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 419, 318, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 367, 379,
	397, 400, 0, 0, 0, 230, 399, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 395, 302, 303, 304, 305, 270,
	0, 247, 398, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 266, 272, 410, 274, 246, 317, 268, 376,
	280, 0, 403, 0, 404, 0, 0, 0, 0, 309,
	277, 341, 281, 287, 330, 375, 315, 335, 244, 366,
	342, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 285, 0, 326, 265, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	0, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 0, 221, 222, 223, 224,
	351, 0, 0, 382, 383, 384, 406, 368, 0, 418,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 284, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 343, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 242,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 235, 362, 345, 295, 278,
	279, 234, 0, 331, 258, 271, 255, 311, 0, 361,
	389, 254, 380, 0, 372, 237, 0, 371, 310, 358,
	363, 296, 290, 236, 360, 294, 289, 282, 262, 405,
	275, 322, 288, 323, 276, 300, 299, 301, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 283, 0, 0, 0, 390, 0, 334, 316, 0,
	0, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 385, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	395, 302, 303, 304, 305, 270, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	285, 0, 326, 265, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 0, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 0, 221, 222, 223, 224, 351, 0, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 284, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 2320, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 343, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 242, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 0, 361, 389, 254, 380, 0,
	372, 237, 0, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 405, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 390, 0, 334, 316, 0, 0, 0, 332, 286,
	359, 324, 365, 349, 373, 328, 325, 228, 350, 257,
	297, 239, 241, 253, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 387, 388,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 385, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 395, 302, 303, 304,
	305, 270, 0, 247, 398, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 0,
	0, 309, 277, 341, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 285, 0, 326, 265,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 0, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 221, 222,
	223, 224, 351, 0, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 1143, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 343, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 1900, 0, 0,
	0, 242, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	0, 361, 389, 254, 380, 0, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 405, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 390, 0, 334,
	316, 0, 0, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 385, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 395, 302, 303, 304, 305, 270, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 0, 326, 265, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 0, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 221, 222, 223, 224, 351, 0,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 284,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 343,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 242, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 0, 361, 389, 254,
	380, 0, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 405, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 283,
	0, 0, 0, 390, 0, 334, 316, 0, 0, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 0,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 385, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 395, 302,
	303, 304, 305, 270, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	221, 222, 223, 224, 351, 0, 0, 382, 383, 384,
	406, 368, 0, 418, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 1926, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 0, 0, 0,
	382, 383, 384, 406, 368, 351, 418, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 343, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 242, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	0, 361, 389, 254, 380, 0, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 405, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 390, 0, 334,
	316, 0, 0, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 385, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 395, 302, 303, 304, 305, 270, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 0, 326, 265, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 0, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 221, 222, 223, 224, 351, 0,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 284,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	1143, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 1455, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 343,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 242, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 0, 361, 389, 254,
	380, 0, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 405, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 1166, 0, 0, 0, 347, 0, 0, 283,
	0, 0, 0, 390, 0, 334, 316, 0, 0, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 0,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 385, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 395, 302,
	303, 304, 305, 270, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	221, 222, 223, 224, 351, 0, 0, 382, 383, 384,
	406, 368, 0, 418, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 343, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 242, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 348, 364, 243,
	339, 377, 248, 346, 238, 313, 336, 0, 0, 235,
	362, 345, 295, 278, 279, 234, 0, 331, 258, 271,
	255, 311, 0, 361, 389, 254, 380, 0, 372, 237,
	0, 371, 310, 358, 363, 296, 290, 236, 360, 294,
	289, 282, 262, 405, 275, 322, 288, 323, 276, 300,
	299, 301, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 283, 0, 0, 0, 390,
	0, 334, 316, 0, 0, 0, 332, 286, 359, 324,
	365, 349, 373, 457, 325, 228, 350, 257, 297, 239,
	241, 253, 259, 261, 263, 264, 306, 307, 319, 338,
	352, 353, 354, 256, 249, 333, 250, 273, 251, 229,
	340, 252, 231, 320, 357, 0, 269, 329, 293, 232,
	292, 321, 356, 355, 240, 381, 387, 388, 393, 0,
	394, 0, 0, 0, 402, 407, 408, 409, 411, 412,
	413, 414, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 386, 267, 225, 226, 421, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	385, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 419, 318, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 367, 379,
	397, 400, 0, 0, 0, 230, 399, 0, 0, 0,
	0, 0, 0, 458, 370, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 395, 302, 303, 304, 305, 270,
	0, 247, 398, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 266, 272, 410, 274, 246, 317, 268, 376,
	280, 0, 403, 0, 404, 0, 0, 0, 0, 309,
	277, 341, 281, 287, 330, 375, 315, 335, 244, 366,
	342, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 285, 0, 326, 265, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	0, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 0, 221, 222, 223, 224,
	351, 0, 0, 382, 383, 384, 406, 368, 0, 418,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 284, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 343, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 242,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 235, 362, 345, 295, 278,
	279, 234, 0, 331, 258, 271, 255, 311, 0, 361,
	389, 254, 380, 0, 372, 237, 0, 371, 310, 358,
	363, 296, 290, 236, 360, 294, 289, 282, 262, 405,
	275, 322, 288, 323, 276, 300, 299, 301, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 283, 0, 0, 0, 390, 0, 334, 316, 0,
	0, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 385, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	395, 302, 303, 304, 305, 270, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	285, 0, 326, 265, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 0, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 0, 221, 222, 223, 224, 351, 0, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 284, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 343, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 242, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 0, 361, 389, 254, 380, 0,
	372, 237, 0, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 405, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 390, 0, 334, 316, 0, 0, 0, 332, 286,
	359, 324, 365, 349, 373, 328, 325, 228, 350, 257,
	297, 239, 241, 498, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 387, 388,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 385, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 395, 302, 303, 304,
	305, 270, 0, 247, 398, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 818,
	0, 309, 277, 341, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 291, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, 0, 227, 0, 285, 0, 326, 265,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 0, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 221, 222,
	223, 224, 806, 0, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 826, 830, 832, 834, 836, 837, 839, 1512,
	843, 840, 841, 842, 0, 0, 821, 822, 823, 824,
	804, 805, 827, 0, 807, 0, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 819, 825, 0, 0,
	0, 0, 0, 1514, 0, 829, 831, 833, 835, 838,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 0, 0, 1488, 1487, 0, 0, 1486, 0, 0,
	2909, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 820, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 0, 1493, 1495, 1497,
	0, 1499, 1500, 1501, 1503, 1504, 1505, 1507, 1508, 1509,
	1510, 1512, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 1513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2692,
	0, 0, 1494, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 477, 0, 476, 483,
	473, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 481, 1502, 482, 486, 0, 0, 468, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 491, 0, 1496,
	0, 0, 1491, 0, 0, 0, 1493, 1495, 1497, 0,
	1499, 1500, 1501, 1503, 1504, 1505, 1507, 1508, 1509, 1510,
	1498, 477, 0, 476, 483, 473, 495, 0, 0, 497,
	0, 1502, 0, 0, 496, 480, 481, 0, 482, 486,
	0, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 491, 0, 0, 1493, 1495, 1497, 1513, 1499,
	1500, 1501, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 1498, 497, 0, 828, 0, 0, 496,
	0, 0, 0, 0, 1502, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 0, 1490, 0, 1491, 0, 0, 0, 1493, 1495,
	1497, 0, 1499, 1500, 1501, 1503, 1504, 1505, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 1511, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 469, 471, 470, 0, 0, 0,
	1513, 0, 0, 0, 475, 0, 0, 477, 0, 476,
	483, 473, 0, 0, 0, 0, 479, 0, 0, 0,
	1506, 480, 481, 494, 482, 486, 0, 1496, 468, 0,
	472, 0, 0, 0, 463, 0, 0, 1511, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	471, 470, 0, 0, 1490, 0, 0, 0, 0, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 1506, 0, 472, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	478, 484, 0, 485, 487, 0, 0, 488, 489, 490,
	0, 0, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 478, 484, 0, 485, 487,
	0, 0, 488, 489, 490, 0, 0, 492, 493, 0,
	0, 0, 0, 0, 0, 469, 471, 470, 0, 0,
	0, 0, 0, 0, 0, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 478, 484, 0, 485, 487, 0, 0, 488, 489,
	490, 0, 0, 492, 493,
}

var yyPact = [...]int{
	2922, -1000, -1000, -1000, -310, 10649, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32645, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32645, -306, 32122,
	32122, -1000, -1000, 1770, -1000, 31599, 11714, 32645, 237, 236,
	32645, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 446, -1000, 31076, -1000, -1000, -1000,
	-1000, -1000, -1000, 415, 33926, 33168, 8546, -263, -1000, 2346,
	-116, 579, 583, 728, 728, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2072, 495, 30553, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2919, 157, 495, 13806, -32,
	-34, 2346, 280, 121, -1000, 811, 2978, 143, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8546,
	8546, 10649, -314, 10649, 8546, 32645, 32645, -1000, -1000, -1000,
	-1000, 415, 33926, 8546, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -34,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3451, -1000, 1060, -1000, -1000,
	-1000, -1000, 2013, 1059, 1683, 378, 32645, -1000, 1055, 378,
	-1000, -1000, -1000, 2346, 2346, -1000, 32645, 32645, 25, 1144,
	-1000, 305, 290, 300, 1054, -1000, -1000, -1000, -1000, -1000,
	2399, -1000, 32645, 32645, 2028, 32645, -1000, 1318, 334, 33981,
	2223, 920, 503, 2063, -1000, -1000, 2012, -1000, 134, 165,
	113, 269, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 166,
	-1000, 2227, -1000, -1000, 136, -1000, -1000, 128, -1000, -1000,
	-1000, -35, -1000, -1000, -1000, -1000, -1000, -1000, -123, -1000,
	-1000, 606, 1429, 8546, -1000, 1452, -1000, 2982, -1000, -1000,
	-1000, -1000, 5921, 10115, 10115, 10115, 10115, -1000, -1000, 1902,
	8546, 2011, 2007, -1000, -1000, -1000, -1000, -1000, 1050, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1682, 9592, -1000, 2005, 2003, 2002, 2001, 1998, 1997,
	1994, 1993, 1992, 1991, 1989, 1988, 1987, 1984, 1827, 11180,
	1982, 1681, 1679, 1978, 1977, 1975, 1677, 1827, 1827, 1974,
	1973, 1967, 1962, 1961, 1959, 1956, 1953, 1951, 1947, 1943,
	1935, 1934, 1932, 1931, 1930, 1922, 1920, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	999, -1000, 1918, 2207, 2317, 1846, 2376, 2292, 2289, 2281,
	2279, 1493, -1000, -1000, -1000, -158, -1000, -1000, 570, -1000,
	545, -1000, 32645, 32645, 32645, 414, 414, 414, 414, 414,
	434, 414, 441, 440, 438, 414, -1000, -1000, -1000, -1000,
	-1000, -1000, 529, -1000, -1000, -1000, -1000, 935, 32645, -1000,
	1859, 1090, 2314, 358, 342, 1090, 264, -1000, 1211, 1211,
	1211, 1211, 1090, 293, 339, 2317, 2317, -49, 1211, -66,
	1090, 1090, -66, 1090, 1090, 1090, 172, -303, -1000, -1000,
	-1000, 1211, 341, 1211, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2304, 2303, 415, 32645, 85, 32645, 415, 415, 418,
	1318, 331, 329, 940, 1189, -1000, 1109, 32645, 32645, 32645,
	1109, 1109, 17470, 16947, -1000, 32645, -1000, 2317, 1846, -1000,
	1794, 2218, 1789, 1846, 415, 415, 415, 415, 415, 415,
	415, 415, 32645, 32645, 30030, 415, 7490, 7490, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10649, 1314, 1576,
	140, -88, -308, 164, -1000, -1000, 32645, 2188, 107, -1000,
	-1000, -1000, 1830, -1000, 1856, 1856, 1856, 1856, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1883, 1915, -1000,
	-1000, 1855, 1855, 1855, 1830, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1873, 1873, 1882, 1873, 32645, 8546, 32645, 2212, 282, 1912,
	-1000, 32645, 275, 2317, 2207, 2317, -1000, -1000, 1048, 1489,
	1676, -1000, -1000, 305, 1098, -1000, 744, -1000, -1000, -1000,
	-1000, 32645, 263, -1000, -1000, 1662, 1908, -1000, 403, 785,
	919, -1000, 170, 34137, 26361, 1318, 26361, 32645, -1000, -1000,
	-1000, -1000, -1000, -1000, -39, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 124, -1000,
	8546, 8546, 8546, 8546, 8546, -1000, 463, 9069, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10115, 10115, 10115, 10115, 10115,
	10115, 10115, 10115, 10115, 10115, 10115, 10115, 1898, 1222, 10115,
	10115, 10115, 10115, 2218, 2448, 939, 201, -1000, -1000, -1000,
	-1000, -1000, 1229, 1429, 8546, 8546, 32645, -1000, 2980, 8546,
	8546, 3030, 8546, 2276, 8546, 8546, 8546, 1787, 4351, 32645,
	8546, -1000, 1784, 1782, -1000, -1000, 1322, 8546, -1000, -1000,
	8546, -1000, -1000, 8546, 10115, 8546, -1000, -1000, -1000, 117,
	2276, 2276, 8546, 8546, 2276, 2276, 2276, 1169, 2276, 2276,
	2276, 2276, 2276, 2276, 2276, 2276, 1780, 2317, -263, 6967,
	-1000, -269, 2207, 8546, -1000, -1000, 8546, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1674, -106, 576, 548, 556,
	-1000, 2272, -1000, 1907, 1905, 1045, 32645, 1246, 32645, 26361,
	32645, 1318, 32645, 32645, 414, 414, 414, 32645, 418, -1000,
	32645, 935, 2270, 32645, 2350, 10115, 10115, 29507, 1211, 1090,
	-1000, -1000, 32645, -1000, -1000, -1000, 1211, 32645, 1211, 1211,
	2350, 1211, -1000, -1000, -1000, 1090, 1090, -1000, -1000, -1000,
	-1000, 1211, 1211, -1000, -1000, 2350, 32645, -48, 2350, 2350,
	-58, -1000, -1000, -1000, 32645, 32645, 414, 32645, -1000, 32645,
	-1000, 32645, -1000, -1000, 32645, 33574, 32645, 32645, 2296, -1000,
	26361, 32645, 24269, -1000, -1000, 398, 394, 15901, 351, 26361,
	5397, -1000, -1000, 1109, 1109, 1109, 5397, 5397, 1020, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 932, -1000, 118, 2207,
	-1000, -1000, -1000, -1000, -1000, 32645, 32645, 26361, 1318, 32645,
	32645, 32645, 32645, -1000, 1904, -1000, 2220, 32645, 831, -1000,
	-1000, 13283, 1042, 831, -1000, 1230, -1000, 8546, 10649, -283,
	8546, 10649, 10649, 8546, 10649, -1000, 8546, 89, -1000, -1000,
	-1000, -1000, 1487, -1000, 1476, -1000, -1000, -1000, 1672, 1672,
	-1000, 1427, -1000, -1000, -1000, -1000, 1421, -1000, -1000, 1419,
	-1000, -1000, 1779, 606, -1000, 1667, 2062, -265, -1000, 14854,
	32645, 32645, -1000, -1000, -265, -1000, 14330, 32645, 2207, -1000,
	2207, 32645, -1000, 2313, -1000, 305, 207, -1000, -1000, -1000,
	-1000, -1000, -1000, 1041, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 929, -1000, 32645, -1000, -1000, 170, 26361,
	27407, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 161, -1000,
	-1000, 156, -1000, 429, 52, 1087, -1000, -1000, 88, 151,
	472, 1429, -1000, 1250, 1250, 1255, -1000, 467, -1000, -1000,
	-1000, -1000, 1902, -1000, -1000, -1000, 1161, 1312, -1000, 1423,
	1423, 1046, 1046, 1046, 1046, 1046, 1182, 1182, -1000, -1000,
	-1000, 5921, 1898, 10115, 10115, 10115, 10115, 401, 401, 3593,
	3551, -1000, 8546, 1214, -1000, 8546, 1589, 800, 1038, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1778,
	1766, 1747, 2398, 1765, 8546, -1000, -1000, 1086, 1082, 1081,
	-1000, 1385, 8023, -1000, -1000, -1000, 1764, 1035, 1756, -1000,
	-1000, -1000, 1753, 1052, 834, 1752, 2930, 1745, 928, 8546,
	8546, 1043, 1039, 8546, 8546, 8546, 8546, 1743, 8546, 8546,
	8546, 8546, 8546, 8546, 8546, 8546, -22, -1000, -1000, 1028,
	-1000, 1429, -1000, 1658, -1000, 804, 926, -1000, 1598, -1000,
	-1000, -1000, -1000, 574, 542, 559, 32645, 689, 12237, 32645,
	1859, 2219, 76, -1000, 888, -1000, 52, -136, 683, 2027,
	2396, 32645, 32645, 32645, 2258, 28984, -1000, 1896, 1016, -1000,
	-1000, 8546, -1000, -1000, 2019, 32645, 32645, 2350, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 32645, 2350, 2350, 1090, 1211,
	-1000, -1000, 1211, -1000, -1000, 1211, -1000, 1034, -1000, 32645,
	-1000, -1000, -1000, 1859, 922, -1000, 12760, 630, 433, -1000,
	1125, 1125, 752, 1125, 1125, 1125, 1125, 309, 298, 1125,
	1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125,
	1125, 1125, 1125, 1890, -1000, 75, 2288, 169, 888, 183,
	2538, 805, -1000, -1000, -1000, -1000, 19562, 19562, 15378, 19562,
	-1000, 1100, -1000, -1000, 425, -1000, -1000, 683, -1000, -1000,
	-1000, 1889, 1143, -1000, -1000, 11180, -1000, 5397, 5397, 5397,
	-1000, -1000, 20085, 32645, -1000, -131, -1000, -112, -1000, 891,
	-1000, -1000, 915, 683, 2059, 891, 891, -1000, 12237, 32645,
	-1000, 2350, 7490, -1000, 24269, -1000, -1000, 28453, -1000, 27930,
	2350, 1198, -1000, 10649, 1559, 132, -1000, 160, -316, 129,
	1401, 127, 1429, -1000, -1000, 1742, 1740, 1007, -1000, 1006,
	1735, 1002, 992, -1000, -75, -1000, 2193, 720, -1000, 1887,
	-1000, 987, 2121, -1000, 887, -1000, 1138, 972, -1000, 720,
	963, 2113, 887, -1000, -1000, 1033, 19, -1000, -1000, 32645,
	1662, 961, 27407, 772, -1000, 423, 1023, 1015, -1000, 26361,
	125, 26361, -1000, 26361, -1000, -1000, 279, -1000, 32645, 2196,
	-1000, -1000, -1000, 1592, -333, -1000, -1000, -1000, -1000, -1000,
	951, -1000, 401, 401, 3593, 3294, -1000, 10115, -1000, 10115,
	2400, 1195, -1000, 8546, 1525, 3394, 971, 19039, 32645, -1000,
	-1000, 8546, 8546, -1000, 2378, -1000, -1000, -1000, -1000, 8546,
	8546, 1645, -1000, 32645, -1000, -1000, -1000, -1000, 19039, -1000,
	10115, -1000, 8546, 901, 2351, -22, -22, 2324, 2316, 2295,
	948, -22, 2249, 2237, 2202, 2189, 2015, 2008, 1944, 1900,
	-1000, 1884, 6967, -1000, -75, 8546, 8546, 8546, 2132, -1000,
	-1000, -1000, -1000, -1000, 537, 92, 1734, 875, -1000, -1000,
	32645, -1000, -1000, -1000, 1732, 873, -1000, -1000, -1000, 33569,
	1856, 1856, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1883, -1000, -1000, 1855, 1855, 1855, 1830, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1873, 1873, 1882,
	1873, -1000, 2256, -1000, -25, 1125, 421, 26361, 325, -1000,
	32645, 2057, 215, 2157, 32645, 1868, 1865, 1864, 231, 33569,
	32645, 726, -1000, 1001, 2978, -1000, 32645, 1429, -1000, 1318,
	-1000, 1090, -1000, 2350, 1012, -1000, -1000, 2350, 1090, 1090,
	1211, 32645, -1000, 2251, 33574, -1000, -1000, -1000, -1000, 33569,
	577, -1000, 580, 414, 32645, 1286, 580, 1278, 1861, -1000,
	-1000, -1000, 32645, 32645, 32645, 1276, 1274, -1000, 32645, 1417,
	-1000, 1411, 1125, 1125, 1410, 1657, 1656, 1642, 1125, 1125,
	1409, 1637, 26884, 1404, 1403, 1402, 1552, 1635, 543, 1492,
	1486, 1446, 32645, 1860, 1563, -25, 1125, 167, 1137, 421,
	1316, 16424, 32645, 24269, 24269, 24269, 24269, -1000, 2102, 2097,
	-1000, 2096, 2093, 2115, 32645, 24269, 1859, -1000, 26884, -1000,
	-1000, -1000, 2218, 934, 2161, 618, 8546, 26361, 1634, 351,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32645, 32645,
	1731, -1000, 2381, -1000, 799, -1000, -1000, 977, -1000, 2381,
	1240, -312, 10649, 1217, 1149, -1000, 8546, 10649, 8546, -284,
	155, -286, -1000, -1000, -1000, 1632, -1000, -1000, -1000, 1395,
	-1000, 1393, 2, 15, 1269, -265, 6967, 278, 32645, -265,
	32645, 6967, -1000, 32645, 274, -265, 32645, 1390, -1000, -1000,
	-1000, 2388, 26361, 1318, 1064, 25838, -1000, 133, -1000, 159,
	373, 1628, -1000, 437, 84, -1000, 1135, 1592, -1000, -1000,
	-1000, 10115, -1000, -1000, -1000, -1000, 1429, 8546, 1730, -1000,
	520, 520, 1729, -1000, 1856, 1856, -1000, 1830, 1855, 1830,
	520, 520, 1728, -1000, 1356, 1783, -1000, 1774, 1736, 8546,
	-1000, 1726, 3572, 775, -152, -22, -1000, -1000, -1000, -22,
	-22, -22, -22, -1000, -22, -22, -22, -22, -22, -22,
	-22, -22, 379, -1000, 2, 1429, 1429, -1000, -1000, 2118,
	-1000, 1627, 1624, 689, 33569, 453, 12237, 2179, 283, 1320,
	-1000, -1000, 25315, 359, -1000, -1000, -1000, 447, 110, 1389,
	354, -1000, 32645, 182, 32645, -1000, -1000, -1000, -1000, -1000,
	2157, -1000, 743, 204, 12760, 12760, 12760, 212, 1178, -1000,
	378, 682, 967, 24269, 32645, -1000, 23746, 1725, -1000, 683,
	2350, -1000, 32645, -1000, 2350, 2350, 1090, -1000, 283, -1000,
	2932, -1000, 32645, -1000, 32645, -1000, 32645, 32645, 414, 8546,
	-1000, -1000, -1000, 32645, -1000, 214, -1000, -1000, 19039, 19039,
	-1000, -1000, -1000, -1000, 1622, 1613, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 311, 32645,
	930, -1000, 1134, 1320, 25315, 1132, 1612, 359, -1000, 1604,
	-1000, 628, 32645, 32645, -1000, 776, -1000, 1126, 2025, 2052,
	2025, -1000, -1000, -1000, -1000, 2094, -1000, 2078, -1000, -1000,
	776, -1000, -1000, -1000, -1000, -1000, 618, -1000, 2302, 580,
	580, 580, 1722, 772, 1721, -1000, -1000, -1000, -1000, -1000,
	2379, 2374, 24792, 2379, -1000, -312, 1162, -1000, 1263, 126,
	1371, 32645, -1000, -1000, -1000, 1719, 1718, -271, 6, 2373,
	2362, 2410, -1000, 1708, 771, -265, -1000, -1000, 720, -1000,
	-1000, -1000, -265, -1000, 720, -1000, -1000, 1318, -1000, 152,
	-1000, -1000, -1000, -1000, -1000, -1000, 34, -1000, 32645, -1000,
	1592, 1590, 82, -1000, 1429, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8546, -1000, -1000, -1000, 1724, -1000, -1000, 8546, 1707, 1583,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2325, -1000, 2361, -271, -1000, -1000, -1000,
	-1000, -1000, -1000, 33569, -1000, 1288, -1000, -1000, 1582, 51,
	-1000, -1000, -1000, 1581, 1574, 1376, -1000, -1000, 1420, 964,
	63, -1000, -1000, -1000, -1000, -1000, -1000, 1316, 32645, 1854,
	-1000, 1125, 1125, 1125, 32645, 1695, 723, -1000, 1692, 1690,
	387, 1200, 1199, -1000, 1373, 19562, 24269, 23746, 739, -1000,
	956, -1000, -1000, -1000, 2350, -1000, -1000, 2350, -1000, -1000,
	2932, -1000, -1000, 1293, 10115, -1000, -1000, 1566, 18516, 535,
	572, 1851, -1000, 276, 2409, -1000, 1262, 1261, -1000, 32645,
	-1000, 1850, -1000, 1849, 2017, 245, 1839, 1838, 32645, 1680,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 322,
	905, -1000, 1563, 1556, -1000, 51, 1554, -1000, -1000, -1000,
	32645, 628, 628, 2325, 32645, 6967, -1000, -1000, 8546, 1837,
	-1000, 8546, -1000, -1000, -1000, -1000, -1000, 1835, 2191, -1000,
	-1000, -1000, -1000, -1000, -1000, 8546, 8546, -1000, -1000, 406,
	10649, -287, 148, -1000, -1000, -1000, -273, 1553, -1000, -1000,
	2360, 1551, 1501, 32645, -1000, 720, 720, 683, -1000, -1000,
	-58, -1000, -1000, -1000, 1675, -1000, 1625, -22, -1000, 102,
	8546, -273, -194, -1000, -1000, -1000, -1000, 262, -1000, -1000,
	176, -1000, -1000, 1347, 420, -1000, -1000, 628, 22700, 19039,
	18516, 1548, -1000, 33835, 12760, 124, 33835, 586, 1176, -1000,
	1349, -1000, 1339, -1000, 2350, 739, 956, -1000, -1000, 1040,
	-1000, -1000, -1000, -1000, 3593, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1338, 1834,
	-96, -1000, -1000, 1833, 22700, 22700, 321, 321, 22700, 22700,
	1831, 464, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2317, -1000, -1000, 1429, 32645, 1429, 23223, -1000, 2358, 2356,
	1429, 606, -1000, -312, 32645, 32645, -275, 1336, -1000, 1541,
	9, -1000, -1000, 608, -277, -15, 1, -1000, -1000, -1000,
	1630, -1000, 3828, -1000, -1000, -1000, 606, -275, 32645, 371,
	1537, -1000, -1000, 174, -1000, -1000, 898, -1000, 1830, 8546,
	-1000, -1000, -1000, 374, 33772, -1000, -1000, -1000, -58, 374,
	369, 202, -1000, 1332, -1000, -1000, 2325, -1000, 1564, 8546,
	1827, -184, 22700, 897, 896, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 872, 871, 22700, -1000, -1000, -1000, 265, -1000,
	870, 867, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1826,
	-1000, -1000, 2355, -1000, 1513, 417, 5, 1, -1000, 2353,
	8, 2349, 2348, -1000, -1000, 4874, -266, -13, 301, -1000,
	2226, -1000, -1000, 33, -1000, -1000, -1000, 22700, 2204, 1620,
	248, 2347, 33835, -1000, -1000, 248, -1000, 229, -1000, 1123,
	-1000, 1331, -1000, 2317, -1000, 1580, -1000, 2050, -1000, 100,
	862, -1000, -1000, -1000, -1000, 848, -1000, -1000, -1000, 22177,
	32645, 1501, -1000, 1825, 1324, 6, 4, 2342, -1000, 1501,
	2339, 1501, 1501, 1254, -1000, -1000, -1000, -1000, -1000, 1510,
	-1000, 197, -1000, -1000, 2204, -1000, 2331, 285, -1000, -1000,
	-1000, -1000, 1319, -1000, -1000, 464, -1000, 2047, 2040, 2387,
	-1000, -1000, -1000, -1000, 197, 197, 197, 197, 116, -1000,
	-1000, 839, -1000, -1000, 2284, 17993, -6, -1000, -1000, -1000,
	1508, -1000, 1501, -1000, -1000, 4874, -1000, -1000, 1125, 1458,
	180, -1000, -1000, -1000, 21654, 256, 296, 286, -1000, 419,
	-1000, -1000, -1000, -1000, 2389, -1000, 2406, 541, 541, -1000,
	-1000, 32645, -1000, 32645, -1000, 838, -1000, -1000, -1000, 953,
	-1000, -1000, -1000, -1000, -1000, 1315, -1000, 32645, -1000, 32645,
	254, 1307, 10115, 1824, 10115, 1823, 267, 1813, -1000, -1000,
	-1000, 1341, 288, -1000, -1000, 596, -1000, 1124, -1000, 21131,
	32645, -1000, -1000, 806, 1805, 2330, -1000, 3415, 32645, 3018,
	32645, 1803, 1112, 10115, -1000, -1000, -1000, 32645, 6444, -1000,
	753, -1000, -1000, 368, 258, -1000, 796, -1000, 794, 20608,
	1305, 1416, -1000, -1000, 1429, 32645, 787, -1000, 32645, 250,
	-1000, -1000, -1000, 782, -1000, -1000, -1000, -1000, 368, 2112,
	-1000, 1301, -1000, -1000, 33723, 490, -1000, -1000, 33723, 252,
	-1000, 362, 1802, -1000, -1000, 764, -1000, 32645, 553, 8546,
	-1000, 252, 33835, -1000, 8546, 749, -1000, 33835, 666, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 140, 2427, 209, 138, 2900, 62, 210, 173, 168,
	208, 2899, 2898, 2249, 2243, 2897, 2896, 2891, 2888, 2887,
	2885, 2883, 2881, 2877, 2876, 2875, 2874, 2870, 2869, 2868,
	2867, 2866, 2865, 2862, 2860, 2858, 2857, 2856, 2855, 207,
	2854, 2853, 2852, 2849, 2848, 2847, 2846, 2845, 2844, 2840,
	2839, 2838, 2837, 2836, 2835, 2834, 2833, 2832, 2831, 2829,
	2827, 2826, 2823, 2822, 2821, 2820, 2818, 2817, 2814, 166,
	2813, 2230, 2811, 2810, 2809, 2808, 2807, 2806, 2805, 184,
	2804, 2802, 2801, 2800, 2799, 2796, 2794, 2793, 2792, 2791,
	2790, 2787, 2786, 2785, 2784, 2783, 2782, 180, 2781, 134,
	158, 2778, 2775, 2774, 2773, 2772, 197, 190, 42, 2771,
	37, 2770, 182, 2769, 116, 2767, 112, 2766, 2765, 2764,
	2763, 2762, 2760, 2759, 2758, 2757, 2755, 2754, 2753, 68,
	2750, 2749, 147, 155, 217, 1858, 213, 214, 153, 143,
	91, 2746, 2223, 2744, 121, 194, 123, 23, 2743, 132,
	2735, 128, 31, 25, 206, 107, 40, 125, 98, 2734,
	187, 65, 2733, 80, 2732, 2730, 220, 159, 2728, 88,
	2727, 2726, 2725, 2723, 185, 157, 2719, 2718, 99, 2716,
	2715, 101, 2714, 46, 2713, 131, 2710, 1451, 96, 92,
	2709, 2708, 2706, 81, 2705, 2704, 2703, 2702, 148, 2701,
	2700, 108, 63, 2697, 2695, 2694, 45, 2692, 47, 2691,
	52, 2690, 2689, 2687, 2684, 49, 2683, 2682, 16, 20,
	22, 2681, 19, 2680, 130, 2679, 2677, 2676, 3, 2675,
	191, 170, 74, 113, 2674, 348, 2673, 2672, 2671, 119,
	2670, 503, 2669, 2668, 2667, 2664, 2663, 95, 2662, 189,
	36, 2661, 71, 100, 86, 163, 165, 2660, 2659, 2657,
	93, 83, 54, 0, 2654, 118, 2653, 2652, 2651, 222,
	2650, 198, 169, 196, 122, 205, 188, 2649, 2648, 67,
	2644, 124, 69, 89, 8, 2643, 144, 2642, 799, 142,
	2641, 162, 2640, 120, 2, 111, 2639, 2638, 34, 218,
	2637, 2636, 2635, 85, 2632, 2631, 90, 115, 2630, 2629,
	2628, 33, 2627, 29, 27, 2626, 79, 2625, 216, 2624,
	137, 104, 145, 141, 117, 192, 195, 55, 53, 2623,
	1215, 114, 72, 21, 2621, 193, 2620, 239, 211, 2619,
	154, 2616, 202, 316, 164, 2615, 146, 12, 35, 28,
	2614, 9, 2611, 102, 160, 2610, 2609, 17, 2608, 18,
	2606, 2604, 2603, 2602, 5, 2601, 2596, 2590, 1, 7,
	2588, 4, 178, 2587, 2585, 2581, 2577, 38, 151, 2574,
	87, 179, 2573, 2572, 70, 2571, 2570, 2569, 1497, 2564,
	2563, 2562, 2560, 2558, 2557, 2556, 2544, 2543, 2537, 73,
	43, 2536, 2534, 2533, 2532, 59, 105, 2530, 2528, 2524,
	2523, 30, 136, 2519, 15, 2518, 26, 24, 32, 2515,
	103, 2514, 13, 150, 2512, 2511, 14, 2508, 2506, 10,
	11, 2503, 2496, 94, 2495, 66, 41, 129, 77, 2488,
	64, 167, 110, 2487, 2486, 201, 199, 161, 2484, 133,
	212, 215, 2479, 175, 2478, 2475, 2474, 2467, 2466, 2463,
	713, 2462, 2461, 200, 44, 76, 82, 2460, 2459, 2458,
	60, 127, 84, 78, 171, 2457, 156, 2456, 2454, 75,
	2453, 2452, 2447, 2441, 2440, 152, 2432, 2431, 2430, 2429,
	203, 181, 2424,
}

//line mysql_sql.y:9375
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 484, 488, 488, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 104, 482, 482, 482, 483, 483, 101, 121,
	120, 123, 123, 122, 122, 119, 119, 115, 118, 118,
	117, 117, 116, 111, 113, 113, 112, 114, 114, 102,
	90, 103, 432, 432, 431, 431, 430, 430, 385, 385,
	429, 429, 429, 428, 428, 428, 427, 427, 426, 426,
	425, 425, 423, 423, 424, 422, 421, 421, 421, 419,
	419, 419, 415, 415, 417, 416, 416, 418, 410, 410,
	413, 413, 411, 411, 411, 411, 414, 409, 409, 409,
	408, 408, 89, 89, 89, 332, 332, 88, 88, 346,
	346, 346, 346, 346, 344, 344, 344, 344, 344, 344,
	343, 343, 342, 342, 347, 347, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 80, 80, 80, 80,
	83, 83, 83, 84, 341, 341, 341, 81, 82, 82,
	331, 331, 336, 336, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 340, 340, 340, 338,
	338, 337, 337, 339, 339, 74, 74, 74, 77, 76,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 75,
	75, 75, 75, 75, 75, 70, 70, 70, 70, 70,
	69, 69, 71, 71, 328, 328, 327, 85, 85, 86,
	486, 486, 485, 487, 487, 487, 487, 87, 93, 93,
	93, 93, 93, 93, 93, 92, 92, 95, 95, 94,
	96, 79, 79, 79, 79, 79, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 456, 456, 456, 458, 458,
	267, 268, 489, 270, 266, 266, 266, 452, 452, 453,
	454, 455, 455, 455, 91, 11, 11, 11, 11, 11,
	11, 68, 73, 223, 223, 224, 224, 224, 224, 225,
	225, 225, 225, 225, 226, 227, 227, 66, 72, 72,
	469, 469, 67, 476, 476, 388, 388, 281, 281, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 392, 393, 277, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 46, 45, 45, 45, 317,
	317, 44, 490, 490, 256, 256, 55, 48, 56, 57,
	58, 59, 60, 61, 43, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 64, 64, 404, 404, 492, 492,
	492, 62, 63, 387, 387, 387, 53, 52, 51, 50,
	49, 49, 42, 42, 41, 41, 47, 127, 128, 274,
	274, 274, 276, 276, 272, 491, 491, 359, 359, 275,
	275, 40, 40, 40, 40, 65, 273, 273, 255, 271,
	271, 271, 12, 12, 10, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 23, 24, 26,
	325, 325, 322, 25, 18, 17, 20, 16, 19, 21,
	22, 22, 9, 9, 9, 9, 13, 13, 14, 139,
	139, 188, 188, 464, 464, 460, 460, 461, 461, 461,
	462, 462, 463, 463, 97, 398, 398, 398, 398, 398,
	398, 8, 162, 162, 161, 161, 397, 397, 397, 397,
	397, 397, 329, 329, 441, 441, 441, 442, 160, 160,
	155, 155, 399, 399, 295, 443, 443, 407, 407, 406,
	406, 405, 405, 158, 158, 159, 159, 142, 142, 107,
	107, 412, 412, 412, 412, 420, 420, 384, 384, 215,
	215, 250, 250, 251, 251, 132, 132, 133, 133, 133,
	133, 133, 133, 449, 449, 451, 451, 450, 157, 157,
	153, 153, 154, 154, 154, 152, 152, 151, 150, 150,
	149, 147, 147, 147, 148, 148, 148, 135, 135, 135,
	134, 134, 134, 134, 134, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 136, 136, 457,
	457, 457, 389, 389, 389, 395, 395, 232, 232, 233,
	233, 231, 231, 137, 137, 138, 138, 138, 138, 230,
	230, 229, 140, 140, 146, 145, 145, 141, 141, 141,
	141, 240, 240, 239, 239, 239, 239, 100, 105, 105,
	106, 165, 165, 238, 237, 237, 237, 164, 164, 163,
	163, 156, 156, 144, 144, 144, 144, 236, 143, 234,
	481, 481, 480, 480, 479, 477, 477, 477, 478, 478,
	478, 478, 434, 434, 434, 434, 434, 261, 261, 261,
	265, 265, 264, 264, 264, 264, 264, 269, 7, 7,
	7, 7, 7, 30, 30, 30, 30, 30, 30, 30,
	30, 36, 173, 174, 37, 175, 175, 176, 176, 177,
	177, 178, 179, 180, 180, 180, 180, 35, 166, 166,
	167, 167, 168, 168, 169, 170, 170, 170, 172, 171,
	34, 27, 465, 468, 466, 466, 470, 470, 470, 471,
	471, 471, 472, 472, 28, 124, 129, 129, 126, 131,
	131, 131, 131, 131, 125, 467, 473, 473, 473, 326,
	326, 323, 324, 324, 321, 320, 320, 320, 475, 475,
	474, 474, 474, 262, 262, 29, 316, 316, 318, 319,
	319, 319, 310, 310, 310, 310, 33, 314, 314, 315,
	315, 315, 315, 315, 311, 311, 313, 313, 309, 309,
	309, 309, 309, 32, 130, 130, 308, 308, 306, 306,
	304, 304, 305, 305, 303, 303, 303, 307, 307, 31,
	31, 31, 109, 108, 108, 108, 253, 253, 252, 252,
	110, 38, 200, 200, 373, 373, 373, 373, 373, 391,
	391, 391, 374, 374, 374, 375, 375, 375, 376, 376,
	376, 376, 376, 390, 390, 348, 348, 349, 349, 349,
	352, 352, 365, 365, 366, 366, 364, 364, 371, 371,
	370, 370, 369, 369, 368, 368, 367, 367, 367, 367,
	362, 362, 361, 361, 350, 350, 350, 350, 350, 351,
	351, 351, 360, 360, 363, 363, 206, 206, 207, 207,
	207, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	439, 439, 440, 209, 209, 209, 213, 213, 213, 213,
	213, 213, 208, 208, 210, 210, 189, 189, 187, 187,
	181, 181, 182, 182, 183, 183, 183, 186, 186, 184,
	184, 185, 185, 185, 185, 334, 334, 437, 437, 438,
	438, 433, 433, 433, 436, 436, 436, 436, 436, 435,
	435, 190, 248, 248, 248, 263, 263, 263, 263, 247,
	247, 247, 205, 205, 204, 204, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 333, 333, 278, 278, 279, 279, 222, 221, 221,
	221, 221, 221, 219, 220, 218, 218, 218, 218, 218,
	217, 217, 216, 216, 216, 312, 312, 214, 214, 212,
	212, 212, 211, 211, 211, 372, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	246, 287, 287, 292, 292, 448, 448, 447, 191, 191,
	191, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	201, 201, 201, 357, 357, 357, 357, 357, 358, 358,
	358, 355, 355, 356, 356, 296, 297, 297, 396, 396,
	353, 353, 354, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	403, 403, 403, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 459,
	459, 459, 444, 444, 444, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 244, 244, 244, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 298, 298, 299, 299, 400, 400, 400, 400,
	400, 400, 401, 401, 402, 402, 402, 402, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 285, 241, 241,
	241, 300, 293, 293, 294, 294, 288, 288, 288, 288,
	288, 288, 288, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 289, 289, 291, 291, 302,
	302, 302, 301, 301, 301, 301, 301, 301, 301, 203,
	203, 203, 203, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 193, 193, 193, 193, 197, 197,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 198, 198, 198, 198, 196, 196,
	196, 196, 196, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 98,
	99, 99, 195, 249, 249, 377, 377, 380, 380, 378,
	378, 379, 381, 381, 381, 382, 382, 382, 383, 383,
	383, 386, 386, 254, 254, 254, 260, 260, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 3, 3,
	2, 4, 4, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 2, 4, 3,
	3, 1, 1, 1, 1, 1, 2, 3, 4, 7,
	2, 3, 3, 4, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 2, 2, 1, 2,
	2, 2, 3, 2, 3, 1, 1, 7, 7, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 2, 5, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 3, 3, 2,
	4, 4, 4, 4, 4, 1, 1, 1, 3, 2,
	3, 1, 1, 1, 6, 8, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 4,
	6, 7, 4, 4, 7, 8, 3, 3, 3, 0,
	2, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 4, 3, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	3, 5, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 0, 2, 1, 3, 2, 1, 5, 4,
	4, 2, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	7, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 8, 0, 2, 6, 0,
	2, 2, 3, 3, 4, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 6, 0, 4, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 11,
	9, 11, 2, 2, 4, 5, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 3, 2, 4, 3, 0,
	2, 1, 0, 2, 3, 0, 2, 3, 0, 3,
	2, 4, 3, 0, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 1, 7, 7, 2,
	1, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 5, 6, 4,
	1, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 1, 6, 8, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 2, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -484, -488, -2, -5, 551, -1, -4, -99, -74,
	-7, -101, -102, -8, -97, -9, -10, -12, -78, -92,
	-94, -96, -95, -39, -11, -91, -69, -70, -80, -85,
	-88, -89, -90, -103, -98, -100, -132, -104, 544, -75,
	-76, -77, -30, -29, -28, -27, -124, 550, 408, 12,
	456, -13, -14, -449, -15, 237, -266, -267, -268, -270,
	-489, -40, -41, -42, -49, -50, -51, -52, -53, -62,
	-63, -64, -43, -44, -45, -48, -46, -55, -56, -57,
	-58, -59, -60, -61, -47, -127, -128, -65, -67, -66,
	-72, -68, -73, -126, 212, -71, 61, -81, -82, -83,
	-84, -86, -87, 339, 345, 398, 543, 46, -133, -135,
	554, 140, 141, 143, 144, -31, -32, -33, -34, -35,
	-36, -38, -37, 208, 14, 489, -16, -19, -17, -20,
	-18, -25, -26, -24, -21, -23, -125, -22, 232, 231,
	37, 295, 296, 297, 343, 230, 209, 13, 30, 41,
	321, -134, 67, 210, -136, 10, 556, -6, -3, -2,
	-111, -115, -119, -122, -123, -120, -121, -4, -99, 98,
	222, 545, -263, 335, 546, 548, 547, 70, 78, -257,
	-259, 339, 345, 543, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	459, 530, 531, 532, 533, 319, 320, 486, 249, 273,
	369, 276, 283, 140, 159, 153, 181, 173, 148, 253,
	288, 254, 77, 143, 442, 88, 420, 395, 146, 268,
	270, 272, 275, 255, 169, 164, 267, 251, 162, 256,
	39, 257, 186, 258, 259, 491, 416, 318, 422, 280,
	393, 163, 417, 271, 419, 188, 192, 434, 157, 158,
	424, 436, 185, 229, 42, 488, 241, 437, 190, 184,
	180, 445, 284, 282, 183, 156, 179, 252, 50, 194,
	193, 195, 389, 390, 391, 392, 260, 261, 333, 433,
	176, 165, 323, 149, 22, 440, 236, 421, 346, 262,
	277, 285, 189, 191, 243, 248, 490, 397, 247, 281,
	438, 161, 240, 269, 235, 441, 150, 348, 263, 144,
	274, 435, 444, 49, 361, 155, 147, 226, 141, 245,
	250, 11, 264, 265, 266, 287, 286, 278, 177, 242,
	182, 167, 154, 178, 142, 244, 443, 362, 541, 321,
	378, 175, 172, 246, 219, 439, 423, 145, 382, 363,
	170, 289, 537, 538, 539, 334, 317, 290, 291, 168,
	233, 414, 415, 292, 294, 388, 310, 364, 396, 370,
	365, 201, 298, 426, 428, 187, 540, 299, 300, 301,
	418, 302, 303, 304, 305, -339, -337, -263, 543, 345,
	339, 321, -175, -263, 555, -142, 38, -187, -263, -142,
	-71, -14, -13, -134, -135, -187, 216, -271, 23, 393,
	-79, 394, 212, 67, -263, -9, -8, -97, -69, -132,
	-269, -263, 295, 295, -269, 216, -263, 247, 377, -388,
	222, -343, -316, 248, -342, -318, -345, -319, 31, 208,
	210, 209, 244, 14, 343, 218, 12, 10, 344, 230,
	24, 25, 27, 13, 345, 347, 28, 348, 351, 352,
	353, 41, 356, 357, 237, 70, 78, 73, 255, -174,
	-263, -294, -288, 95, 238, -290, -283, -284, -286, -429,
	-423, -282, 67, 122, 123, 130, 96, -285, -372, 35,
	98, 496, 457, -242, -243, -244, -245, -246, -263, -424,
	-422, 73, 79, 82, 85, 86, 84, 83, 166, 81,
	74, 134, 135, -135, 70, -444, 504, -258, 525, 530,
	531, 532, 533, 524, 46, -394, -402, 215, -400, 133,
	171, 233, 167, 12, 128, 388, 168, 501, 521, 459,
	505, 528, 498, 499, 493, 494, 495, 497, 506, 508,
	520, -403, 516, 526, 527, 514, 529, 72, 71, 519,
	518, 507, 502, 503, 509, 492, 500, 510, 511, 517,
	522, 523, 327, 88, 328, 329, 449, 322, 330, 222,
	393, 55, 331, 332, 333, 334, 335, 456, 336, 56,
	337, 326, 237, 378, 338, 170, 187, 461, 460, 462,
	453, 450, 448, 451, 452, 454, 455, 512, 513, 515,
	-105, -106, 535, -151, -152, -235, 19, 6, 7, 8,
	9, -482, 395, 490, 145, 142, -330, 145, 94, 150,
	149, -330, 298, 243, 340, 219, 319, 378, 302, 247,
	-310, -308, -390, 292, 288, 217, 227, 226, 89, 449,
	215, 354, -460, -461, 205, 206, 207, -451, 482, -450,
	-263, 329, 26, 216, 340, 428, 426, 427, 429, 430,
	431, 432, -54, -404, -387, 423, 422, -275, 415, 421,
	413, 425, 416, 320, 304, 303, 208, 552, 483, -254,
	364, 396, 243, 446, 447, 341, 397, 434, 435, 417,
	88, 174, 171, 219, 216, 319, 449, 378, 302, -460,
	247, 377, 40, -336, 388, -335, -337, 434, 435, 445,
	71, 72, 433, -254, 88, 414, 414, -152, -235, -151,
	-133, -135, -100, -449, 217, 319, 378, 247, 218, 216,
	219, 449, 295, 340, 243, 302, -389, -457, 31, -395,
	202, 203, 204, 32, 33, -1, 102, 556, -288, -288,
	-6, 557, -6, -288, -263, -263, 137, -193, -197, -194,
	-196, -195, -199, -198, 171, 172, 133, 175, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 30, 187,
	233, 167, 168, 169, 170, 188, 153, 173, 487, 196,
	154, 197, 155, 198, 156, 199, 157, 158, 200, 159,
	162, 163, 164, 161, 136, 67, 136, 73, -158, 239,
	-187, 136, -158, -152, -151, -152, -187, -247, -263, 395,
	105, -79, -79, 394, -452, -453, -454, -456, 212, 394,
	393, 136, 15, -269, -269, 65, -187, -318, 247, -343,
	-316, 35, 64, 137, 220, 137, 64, 67, 341, 319,
	378, 342, 449, 216, 354, 219, 247, 355, 319, 378,
	216, 219, 449, 247, 319, 216, 219, 378, 247, 355,
	413, 414, 219, 26, 346, 349, 350, 414, -408, 445,
	137, 94, 91, 92, 93, -288, 112, -301, 105, 106,
	107, 108, 109, 110, 111, 119, 118, 129, 122, 123,
	124, 125, 126, 127, 128, 120, 121, 115, 95, 113,
	117, 114, 97, -135, -288, -294, 46, -286, -286, -286,
	-286, -372, -292, -288, 67, 67, 136, 73, -288, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, -401, 67, 67, -298, -299, 67, 67, -282, -247,
	67, 73, 73, 67, 67, 67, 73, -299, -299, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, -152, 137, 67,
	-107, 38, -154, 21, -136, -135, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 79, 438, 489, 148, 149,
	150, -173, -263, -175, -166, -263, -306, 222, -306, -306,
	-306, -306, 218, -306, 216, 216, 216, -306, -462, 152,
	137, -451, -157, 67, -274, 113, 117, 23, 245, 245,
	-274, 282, -490, -491, 15, 115, -272, -491, -272, -272,
	-274, -492, 218, 424, 42, 246, 245, -153, -154, -153,
	418, 414, -359, 419, 420, -276, -491, -275, -274, -274,
	-275, -274, -274, -274, 216, 219, 449, 302, 553, -490,
	245, -490, 30, 30, -388, -187, -388, 483, -255, -263,
	-388, -388, -463, 221, -318, 247, 247, 137, 105, 23,
	-338, 105, 116, -337, -337, -337, -338, -338, -208, 40,
	-262, 133, -263, 73, -208, 40, -486, -485, -187, -153,
	-136, -135, 68, 68, 68, -388, -388, -388, -388, -388,
	-388, -388, -388, -269, -166, -175, 222, -388, -137, -138,
	124, -288, -263, -137, -3, -113, -112, 99, 100, 102,
	546, 335, 545, 549, 543, -337, 40, -383, 362, 361,
	-377, -379, 67, -378, 67, -378, -378, -378, 67, 67,
	-380, 67, -380, -380, -377, -381, 67, -381, -382, 67,
	-381, -263, -293, -294, -263, 38, -397, 46, -132, 67,
	30, 67, -263, -398, 46, -132, 67, 30, -153, -107,
	-154, 136, 79, 73, -79, 68, 137, -455, 85, 86,
	-458, 185, 177, -263, -93, 73, -7, -8, -9, -10,
	-39, -69, -132, -425, -423, 67, 31, 387, 64, 15,
	-344, 216, 449, 340, 243, 219, 319, -342, -325, -322,
	-320, -262, -318, -321, -320, -347, -247, 414, -108, 399,
	294, -288, -288, -288, -288, -288, 84, 95, 317, 85,
	86, -283, -302, 31, 290, 291, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, -284, -284, -284, -291, -300,
	-372, 67, 115, 113, 117, 114, 97, -286, -286, -284,
	-284, 68, 137, -448, -447, 99, -288, -288, -263, -445,
	-446, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 331, 326, 332, 330, 322, 338, 333, 334,
	170, 480, 481, 474, 475, 476, 477, 478, 479, -293,
	-293, -288, -445, -293, -241, 32, 31, -294, -294, -294,
	68, -288, -459, 315, 314, 316, -155, -263, -293, 68,
	68, 68, 79, -294, -294, -293, -284, -293, -446, -241,
	-241, -294, -294, -241, -241, -241, -241, 124, -241, -241,
	-241, -241, -241, -241, -241, -241, 68, -153, -106, -406,
	-405, -288, 40, 536, -107, -288, -150, -149, -288, -483,
	73, 439, 440, 146, 149, 148, 34, 67, 67, 136,
	-187, 95, -465, -263, -326, -323, -320, -263, -316, -263,
	-263, -306, -306, -306, -187, -463, -450, 34, -156, -263,
	-231, 16, -286, -286, -320, 247, -490, -274, -256, -255,
	-276, -271, -276, -276, -231, -491, -274, -274, -276, -272,
	-231, -263, 414, -231, -231, -359, -273, -263, -273, -306,
	-255, -256, -256, -187, -223, -224, 213, 210, 209, -228,
	359, 249, -307, 253, 77, 254, 395, 255, 218, 257,
	258, 259, 229, 260, 261, 262, 388, 263, 264, 265,
	266, 342, 6, 305, 40, -465, -465, 30, -326, -263,
	-145, -140, -144, -141, -146, -234, -236, -143, 67, -187,
	-135, -263, 31, 387, -341, 387, 31, -316, -335, -331,
	73, 388, -321, -340, 64, 133, -405, -338, -338, -338,
	-340, -340, 132, 137, -487, 438, 439, 205, -107, -189,
	-187, -465, -325, -316, -263, -189, -189, -263, 67, 35,
	-263, -230, 137, -229, 15, -264, -263, 34, 73, 136,
	-230, -114, -112, 101, -288, -6, 545, -288, -6, -6,
	-288, -6, -288, -386, 363, 79, 79, -249, 73, -249,
	79, 79, 79, 68, 73, -329, 64, -399, -295, -443,
	535, -160, 68, -155, -441, -442, -155, -159, -263, -399,
	-160, 68, -441, -107, -107, -263, 23, -79, -453, 136,
	137, -156, -344, -324, -321, -346, 124, -263, -332, 137,
	489, 558, 71, 220, -475, -474, 379, 68, 137, -409,
	221, 456, 73, 559, 201, 84, 317, 85, 86, -372,
	-294, -291, -286, -286, -284, -284, -289, 234, -289, 94,
	-288, -287, -447, 101, -288, 34, 137, 65, 136, 68,
	68, 15, 15, 68, -288, 68, 68, 68, 68, 15,
	15, -288, 68, 136, 68, 68, 68, 68, 65, 68,
	137, 68, 137, -294, -288, 68, 68, -288, -288, -288,
	-294, 68, -288, -288, -288, -288, -288, -288, -288, -288,
	-354, 409, 137, 68, 73, 137, 22, 137, -147, 36,
	37, 147, 150, 150, 149, -174, -176, -177, -178, -179,
	-180, 115, 138, 139, -167, -168, -169, -170, -193, -247,
	172, 175, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 233, 167, 168, 169, 170, 188, 153,
	173, 154, 155, 156, 157, 158, 159, 162, 163, 164,
	161, -263, -157, 35, -468, 366, -476, 137, 40, -474,
	449, -309, 65, -130, 15, -187, -187, -187, -200, 34,
	15, -139, -188, -263, 67, 68, 137, -288, -317, 65,
	-263, -256, -231, -187, -263, -231, -231, -274, -276, -276,
	-272, 136, -255, -157, 137, -183, -190, -184, -186, -247,
	-279, -185, 227, -438, 225, 223, 89, 228, 279, 90,
	218, -225, 218, 90, 224, 228, 223, -226, 218, -260,
	105, -260, -254, 132, -260, -260, -260, -260, 256, 256,
	-260, -260, -260, -260, -260, -260, -260, -260, -260, -260,
	-260, -260, -260, -260, 67, -469, 366, 30, 325, -476,
	-131, 319, 30, -237, -238, -239, -240, 53, 57, 59,
	54, 55, 56, 60, 30, 137, -261, -265, 34, -263,
	73, -261, -135, -140, -145, -261, 67, 220, 67, 105,
	-340, -340, -340, 40, -262, -485, 445, 439, 137, 64,
	-167, -175, -231, -138, -140, -263, 73, -263, 124, -231,
	102, -6, 100, -118, -117, -116, 103, 543, 549, 102,
	102, 102, 68, 68, 68, 137, 68, 68, 68, 137,
	68, 137, -412, 419, 39, 137, 67, 68, 137, 46,
	137, 105, 68, 137, 68, 46, 136, 395, -263, -423,
	68, -346, 137, 220, 136, 136, -322, 345, -262, -324,
	20, 489, -247, 38, -253, -252, 73, 559, 68, -289,
	-289, 94, -286, -283, 68, 102, -288, 100, -191, -193,
	361, 362, -192, -198, 133, 171, 233, 170, 169, 167,
	361, 362, -208, -263, -288, -288, 68, -288, -288, 15,
	-263, -208, -284, -288, -152, 68, -353, -354, -353, 68,
	68, 68, 68, -353, 68, 68, 68, 68, 68, 68,
	68, 68, 67, -405, -412, -288, -288, -149, -148, 43,
	150, 353, 68, 137, -247, 68, 137, -193, 34, -471,
	421, 368, -260, -281, -280, 321, 41, -392, 388, 374,
	375, -323, 247, -263, 64, 309, 310, 311, 312, -304,
	-305, -303, -307, -465, 67, 67, 67, -373, 299, -193,
	-187, -139, -263, 15, 137, -464, 136, -1, -263, -316,
	-274, -231, -491, -231, -274, -274, -276, -263, 34, -224,
	-193, -185, -437, -438, -306, -263, 90, -437, 90, 67,
	-263, -263, -263, 90, 90, -263, 79, 79, -260, -260,
	79, 73, 73, 73, -260, -260, 79, 73, -265, 79,
	79, 79, 79, 40, 73, -213, 40, 267, 271, 268,
	269, 270, 79, 40, 79, 40, 79, 40, -263, 67,
	-439, -440, 73, -471, -260, 325, 105, -281, -129, 77,
	31, -161, 213, 210, -465, -328, -327, -247, -144, -144,
	-144, -144, 53, 53, 53, 58, 53, 58, 53, -239,
	-328, -146, -157, -265, 68, -481, -480, -479, -477, 61,
	221, 62, -293, -324, -277, 73, -331, -187, -187, 68,
	-233, 17, 136, -233, 98, -6, -114, -116, -288, -6,
	-288, 545, 335, 546, 73, 79, 79, -420, 405, 400,
	402, 90, -295, -407, -406, 46, -132, -155, -399, -442,
	-405, -263, 46, -132, -399, -263, 79, 15, -321, -316,
	124, 124, -263, 346, -332, 73, 367, 73, 216, 560,
	137, 105, -253, -283, -288, 68, -201, 158, 157, -201,
	68, -378, -378, -377, -380, -377, -201, -201, 68, 68,
	23, 68, 68, 68, -288, 68, 68, 137, -396, 458,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -297, -296, 239, -420, 44, 45, 73,
	73, -178, -193, 214, -169, 40, -132, -472, 77, -466,
	73, -263, -473, 77, 369, 135, 323, 40, 370, 371,
	385, 318, 79, 79, 376, -467, -263, -162, 319, -187,
	-303, -254, 132, 258, 302, -181, -182, -183, -181, -181,
	-374, 301, 20, 79, 123, -158, 65, 136, -140, -188,
	-263, 124, 68, -231, -263, -231, -231, -274, -132, -205,
	-204, -202, 84, 95, 40, 359, -203, 77, 132, 272,
	250, 273, -222, -278, 64, 365, 223, 89, 90, 347,
	-279, -435, -263, -433, -435, -263, -433, -433, -306, -288,
	-263, -227, 307, 308, -208, -208, 73, 73, -209, 250,
	-189, 68, 137, 105, -472, -466, 105, 73, -473, 73,
	137, -161, -161, -231, 137, 105, -164, -163, 64, 65,
	-165, 64, -163, 53, 53, -231, -479, -478, 23, -438,
	-438, -438, 68, 68, -232, 18, 20, 124, -232, 102,
	100, 102, 102, -263, 68, 68, -384, 537, -416, -418,
	400, 20, 20, 13, 68, -399, -399, -316, -332, 388,
	-187, -252, 73, 560, -288, 68, -288, 68, 73, -152,
	20, -384, -171, -193, -282, 73, -470, 379, 73, 73,
	79, 40, 79, 135, 372, -393, -129, -161, 67, -260,
	-260, -260, -263, 68, 137, 68, 68, -375, 238, 79,
	123, 79, 123, 79, -261, -140, -263, -231, -464, 136,
	-231, -231, -202, 84, -284, 73, -210, -262, 133, -211,
	40, 271, 267, -212, 40, 251, 252, -214, 67, 279,
	13, 90, 90, -187, 67, 67, 65, 289, 67, 67,
	-435, 68, 251, 252, 68, -440, 73, -470, 73, -465,
	-152, -327, -405, -288, 67, -288, 67, 53, 19, 17,
	-288, -294, 222, -6, 546, 335, -215, 538, 73, 20,
	73, -414, 73, -328, -110, -410, -359, 68, 68, -353,
	-356, -355, -358, 406, 281, 412, -294, -215, 488, 20,
	489, 322, 40, 79, 40, 373, -311, -313, -247, 67,
	-208, -210, 73, -206, -207, -228, -183, -109, -108, -206,
	-376, 141, 79, 123, 79, 79, -231, -231, 79, 67,
	-400, -312, 67, -311, -311, -436, 309, 310, 311, 313,
	312, -436, -311, -311, 67, -334, -333, 280, 95, -153,
	-156, -434, -263, 223, 20, 20, -263, -263, -250, 539,
	79, 73, 402, -385, 540, -419, 405, -413, -411, 400,
	401, 402, 403, 68, -357, 97, 372, 376, -288, -250,
	-172, -263, 73, 367, 73, 322, 68, 137, -377, -288,
	-348, 239, 137, -228, -110, -348, -391, 149, 300, 489,
	79, 123, 79, -152, 68, -288, -298, -217, -216, 485,
	-311, 68, 68, 68, 68, -311, 280, 68, 68, 137,
	67, 20, 73, -421, 221, -417, -418, 404, -411, 20,
	402, 20, 20, -357, 535, 410, 411, 410, 411, 34,
	388, -314, -313, -147, 68, -349, 288, 20, -228, -349,
	300, 79, 123, 79, -153, 68, -221, -219, -220, 64,
	417, 277, 278, 68, -314, -314, -314, -314, 68, -263,
	223, -251, -263, -414, -428, 67, 79, -416, -415, -417,
	20, -414, 20, -414, -414, 94, 73, -315, 229, 77,
	489, 307, 308, -147, 20, -350, 281, 282, -351, -363,
	284, 79, -333, -220, 64, -219, 64, 14, 13, -222,
	68, 137, -432, 30, 68, -427, -426, -248, -422, -263,
	405, 406, 73, -414, -357, -260, 73, 306, -247, 67,
	-361, 285, 67, -359, 67, -359, 90, 310, -218, 274,
	275, 30, 149, -218, -263, -431, -430, -429, 68, 137,
	136, 79, -263, -347, -352, 286, 79, -284, 67, -284,
	67, -360, 283, 67, 84, 40, 276, 137, 105, -426,
	-263, 68, -365, 67, 20, 68, -347, 68, -347, 67,
	105, -284, -430, 40, -288, 136, -366, -364, 239, -351,
	68, 68, 68, -347, 79, 68, -263, 68, 137, -263,
	-362, 287, 68, -364, -367, 46, 79, -371, -368, 67,
	-228, 241, 115, -371, -228, -370, -369, 286, 242, 67,
	68, 137, -263, 238, 67, -294, -369, -368, -294, 68,
	68,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 245,
	246, 247, 748, 749, 750, 751, 752, 0, 0, 0,
	0, 522, 523, 0, 494, 0, 0, 0, 0, 0,
	0, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 335, 336,
	337, 338, 339, 340, 0, 270, 266, 206, 207, 208,
	209, 277, 278, 365, 0, 0, 0, 0, 605, -2,
	53, 259, 0, 250, 250, 753, 754, 755, 756, 757,
	758, 759, 760, -2, 535, 0, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 324, 325,
	326, 320, 321, 323, 322, -2, 0, 535, 0, 0,
	0, 625, 0, 0, 640, 662, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1045, 1046, 1047,
	1048, -2, 1512, 1491, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 0, 243, 241, 1491, 1512,
	1572, 1605, 0, 765, 0, 583, 0, 588, 1008, 583,
	271, 524, 525, 625, 625, 492, 0, 306, 0, 1504,
	310, 0, 0, 0, 489, 301, 302, 303, 304, 305,
	0, 747, 0, 0, 297, 0, 265, 1563, 0, 0,
	0, 0, 0, 0, 150, 836, 152, 838, 156, 163,
	0, 0, 168, 169, 172, 173, 174, 175, 176, 0,
	180, 0, 182, 185, 0, 187, 188, 0, 191, 192,
	193, 0, 203, 204, 205, 839, 840, 841, -2, 81,
	763, 1429, 1324, 0, 1331, 1332, 1343, 1354, 1118, 1119,
	1120, 1121, 0, 0, 0, 0, 0, 1128, 1129, 0,
	1143, 1665, 0, 1135, 1136, 1137, 1138, 1139, 90, 102,
	103, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 0, 1297, 1105, 1045, 0, 1673, 0, 1693, 1698,
	1699, 1700, 1701, 1692, 0, 0, 1282, 0, 1272, 0,
	0, -2, -2, 0, 0, 1631, -2, 1670, 1689, 1697,
	1674, 1696, 1667, 1668, 1662, 1663, 1664, 1666, 1675, 1677,
	1688, 0, 1684, 1694, 1695, 0, 0, 104, 105, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1288, -2, 1290, 1291, 1293, 1294, 1295, 1296,
	-2, 1299, 1300, 1301, -2, -2, 1304, 1305, 1306, 1307,
	1308, 1309, 1312, -2, 1314, -2, -2, 1284, 1285, 1286,
	1287, 1276, 1277, 1278, 1279, 1280, 1281, -2, -2, -2,
	625, 698, 0, -2, 0, 0, 0, 645, 648, 651,
	654, 0, 54, 55, 260, 261, 249, 251, 0, 255,
	0, 248, 0, 0, 0, 868, 868, 868, 868, 868,
	0, 868, 0, 0, 0, 868, 843, 844, 845, 866,
	867, 914, 540, 536, 537, 538, 539, 613, 0, 615,
	618, 469, 416, 0, 0, 469, 0, 429, 422, 0,
	0, 0, 469, 0, 0, 620, 620, 0, 472, 479,
	469, 469, -2, 469, 469, 469, 0, 0, 435, 436,
	437, 422, 0, 422, 441, 442, 443, 454, 455, 480,
	1453, 0, 0, 365, 0, 365, 0, 365, 365, 542,
	1563, 0, 0, 217, 1631, 222, 0, 1511, 1577, 1526,
	0, 0, 1544, 0, -2, 0, 287, 620, 0, 626,
	0, 625, 0, 0, 365, 365, 365, 365, 365, 365,
	365, 365, 0, 0, 0, 365, 0, 0, 663, 664,
	659, 660, 661, 665, 666, 5, 6, 19, 0, 0,
	0, 0, 0, 0, 60, 59, 0, 1430, 1448, 1385,
	1386, 1387, 1435, 1389, 1439, 1439, 1439, 1439, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 0, 0, 1428,
	1408, 1437, 1437, 1437, 1435, 1432, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1442, 1442, 1445, 1442, 0, 1322, 0, 0, 0, 0,
	587, 0, 0, 620, -2, 0, 493, 307, 1049, 0,
	0, 311, 312, 0, 0, 327, 0, 330, 315, 316,
	317, 0, 0, 299, 300, 0, 0, 267, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 160, 157,
	164, 167, 177, 184, 0, 196, 198, 201, 158, 165,
	170, 171, 178, 199, 159, 161, 162, 166, 200, 202,
	179, 183, 197, 181, 186, 189, 190, 195, 0, 131,
	0, 0, 0, 0, 0, 1330, 0, 0, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1324, 0, 0, 1124, 1125, 1126,
	1127, 1130, 0, 1144, 0, 0, 0, 1383, 0, 1322,
	1322, 0, 1322, 1318, 0, 0, 0, 0, 0, 0,
	1322, 1258, 0, 0, 1260, 1273, 0, 0, 1262, 1263,
	0, 1266, 1267, 1322, 0, 1322, 1271, 1254, 1255, 0,
	1318, 1318, 0, 0, 1318, 1318, 1318, 1318, 1318, 1318,
	1318, 1318, 1318, 1318, 1318, 1318, 0, 620, 0, 0,
	608, 0, 589, 0, 642, 644, 0, 646, 647, 649,
	650, 652, 653, 655, 656, 56, 0, 0, 253, 0,
	258, 0, 762, 0, 0, 778, 0, 0, 0, 0,
	0, 0, 0, 0, 868, 868, 868, 0, 542, 541,
	0, 614, 0, 0, 671, 0, 0, 0, 422, 469,
	427, 428, 424, 423, 475, 476, 472, 0, 472, 472,
	671, 0, 448, 449, 450, 469, 469, 456, 621, 457,
	458, 472, 0, 477, 478, 671, 0, 0, 671, 671,
	0, 466, 467, 468, 0, 0, 868, 0, 485, 424,
	439, 424, 1454, 1455, 0, 877, 0, 0, 0, 488,
	0, 0, 0, 543, 210, 0, 0, 0, 0, 0,
	0, 239, 240, 0, 0, 0, 0, 0, 230, 233,
	1002, 1003, 833, 834, 234, 235, 279, 280, 0, 589,
	641, 643, 637, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 0, 520, 0, 0, 679, 673,
	675, 742, 90, 679, 8, 77, 74, 0, 19, 0,
	0, 19, 19, 0, 19, 244, 0, 1451, 1449, 1450,
	1388, 1436, 0, 1413, 0, 1414, 1415, 1416, 0, 0,
	1409, 0, 1410, 1411, 1412, 1404, 0, 1405, 1406, 0,
	1407, 242, 0, 1323, 766, 0, 562, 575, 557, 0,
	564, 0, 1009, 544, 575, 546, 0, 564, 589, 611,
	589, 0, 308, 0, 313, 0, 0, 329, 331, 332,
	333, 318, 319, 490, 295, 296, 288, 289, 290, 291,
	292, 293, 294, 298, 100, 0, 268, 269, 0, 0,
	0, 144, 145, 146, 147, 148, 149, 151, 135, 510,
	512, 825, 837, 0, 828, 0, 154, 194, 127, 0,
	0, 1325, 1326, 1327, 1328, 1329, 1333, 0, 1335, 1337,
	1339, 1341, 0, 1359, -2, -2, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1344, 1357,
	1358, 0, 0, 0, 0, 0, 0, 1355, 1355, 1350,
	0, 1122, 0, 1141, 1145, 0, 0, 0, 91, 1317,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 0,
	0, 1324, 0, 0, 0, 1319, 1320, 0, 0, 0,
	1213, 0, 0, 1219, 1220, 1221, 0, 570, 0, 1283,
	1259, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 699, 0,
	579, 581, 582, 0, 609, 622, 627, 628, 631, 52,
	57, 262, 263, 0, 0, 257, 0, -2, 780, 0,
	618, 0, 0, 792, 363, 819, 0, 0, 835, 858,
	864, 0, 0, 0, 892, 0, 616, 0, 0, 711,
	415, 0, 470, 471, 419, 1563, 424, 671, 430, 425,
	431, 474, 432, 433, 434, 0, 671, 671, 469, 472,
	459, 473, 472, 462, 463, 0, 481, 486, 482, 0,
	484, 438, 440, 618, 342, 343, 0, 0, 0, 348,
	1456, 1456, 0, 1456, 1456, 1456, 1456, 0, 0, 1456,
	1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456, 1456,
	1456, 1456, 1456, 0, 878, 360, 0, 0, 363, 809,
	684, 0, 685, 686, 682, 713, 737, 737, 0, 737,
	717, 1008, 211, 212, 0, 214, 215, 216, 223, 218,
	220, 0, 0, 224, 236, 237, 238, 0, 0, 0,
	228, 229, 0, 0, 282, 283, 285, 0, 607, 507,
	1006, 508, 509, 513, 0, 515, 516, 517, 780, 0,
	814, 671, 0, 680, 0, 676, 743, 0, 745, 0,
	671, 0, 75, 19, 0, 68, 65, 0, 0, 0,
	0, 0, 1431, 1384, 1452, 0, 0, 0, 1433, 0,
	0, 0, 0, 58, 591, 551, 0, 556, 572, 0,
	576, 0, 0, 568, 561, 565, 0, 0, 585, 545,
	0, 0, 550, 610, 612, 1050, 0, 314, 328, 0,
	0, 0, 0, 138, 822, 0, 139, 143, 133, 0,
	0, 0, 827, 0, 824, 829, 0, 153, 0, 0,
	128, 129, 883, 888, 0, 1334, 1336, 1338, 1340, 1342,
	0, 1345, 1355, 1355, 1351, 0, 1346, 0, 1348, 0,
	1325, 0, 1146, 0, 0, 0, 0, 0, 0, 1203,
	1204, 0, 0, 1208, 0, 1210, 1211, 1212, 1214, 0,
	0, 0, 1218, 0, 1257, 1275, 1261, 1264, 0, 1268,
	0, 1270, 0, 625, 0, 1180, 1180, 0, 0, 0,
	0, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	1140, 0, 0, 700, 591, 0, 0, 0, 634, 632,
	633, 264, 252, 254, 0, 0, 0, 768, 769, 771,
	0, 774, 775, 776, 0, 781, 782, 784, 785, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1496, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 779, 0, 869, 799, 1456, 367, 0, 0, 821,
	0, 0, 0, -2, 0, 0, 0, 0, 894, 0,
	0, 0, 529, 533, 23, 619, 0, 672, 417, 0,
	418, 469, 426, 671, 1008, 451, 452, 671, 469, 469,
	472, 0, 483, 0, 877, 345, 1014, 1015, 1016, 0,
	0, 1020, 1027, 868, 1075, 0, 1027, 0, 0, 1029,
	1030, 346, 0, 0, 0, 0, 0, 347, 0, 0,
	1457, 0, 1456, 1456, 0, 0, 0, 0, 1456, 1456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 799, 1456, 0, 0, 367,
	806, 0, 0, 0, 0, 0, 0, 704, 0, 0,
	703, 0, 0, 0, 0, 0, 618, 738, 0, 740,
	741, 715, -2, 0, 684, 720, 1322, 0, 0, 0,
	225, 226, 227, 231, 232, 281, 284, 286, 0, 0,
	0, 521, 669, 674, 681, 744, 746, 91, 677, 669,
	0, 78, 19, 77, 69, 70, 0, 19, 0, 0,
	0, 0, 1441, 1440, 1426, 0, 1427, 1438, 1443, 0,
	1446, 0, 595, 0, 0, 575, 577, 0, 0, 575,
	0, 0, 584, 0, 0, 575, 0, 0, 491, 101,
	334, 0, 0, 0, 0, 0, 511, 0, 826, 135,
	0, 0, 155, 0, 0, 886, 0, 888, 1321, 1347,
	1349, 0, 1356, 1352, 1123, 1131, 1142, 0, 0, 1148,
	1160, 1160, 0, 1151, 1439, 1439, 1154, 1435, 1437, 1435,
	1160, 1160, 0, 92, 0, 0, 1209, 0, 0, 0,
	571, 0, 0, 0, 1178, 1180, 1185, 1181, 1186, 1180,
	1180, 1180, 1180, 1191, 1180, 1180, 1180, 1180, 1180, 1180,
	1180, 1180, 1176, 580, 595, 623, 624, 629, 630, 0,
	256, 0, 0, 773, 0, 0, 0, 786, 0, 802,
	800, 801, 0, 816, 368, 369, 370, 371, 0, 0,
	0, 820, 0, 552, 0, 859, 860, 861, 862, 863,
	-2, 872, 0, 0, 1010, 1010, 1010, 902, 0, 893,
	583, 0, -2, 0, 0, 531, 0, 0, 712, 420,
	671, 444, 0, 460, 671, 671, 469, 487, 0, 344,
	-2, 1019, 1039, 1028, 1039, 1076, 1039, 1039, 868, 0,
	349, 350, 351, 0, 353, 0, 961, 962, 0, 0,
	965, 966, 967, 968, 0, 0, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 996, 997, 998, 999,
	1000, 1001, 981, 982, 983, 984, 985, 986, 993, 0,
	0, 990, 0, 802, 0, 0, 0, 816, 808, 0,
	810, 811, 0, 0, 554, 671, 274, 0, 707, 701,
	0, 690, 705, 706, 693, 0, 695, 0, 691, 692,
	671, 683, 714, 739, 716, 719, 721, 722, 728, 0,
	0, 0, 0, 213, 0, 387, 219, 1007, 514, 519,
	667, 0, 0, 667, 73, 76, 0, 71, 0, 0,
	0, 0, 63, 61, 1434, 0, 0, 597, 115, 0,
	0, 0, 573, 0, 578, 575, 560, 569, 559, 566,
	567, 586, 575, 549, 548, 1051, 309, 0, 823, 135,
	140, 141, 142, 136, 134, 830, 0, 832, 0, 884,
	888, 0, 0, 1353, 1147, 1132, 1149, 1161, 1162, 1150,
	1133, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1134, 1205,
	0, 1207, 1215, 1216, 0, 1265, 1269, 0, 0, 0,
	1184, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 625, 1177, 0, 597, 635, 636, 761,
	764, 770, 772, 0, 783, 0, 790, 791, 0, 0,
	794, 795, 804, 0, 0, 0, 373, 374, 0, 0,
	0, 386, 382, 383, 384, 364, 815, 806, 0, 0,
	873, 1456, 1456, 1456, 0, 0, 1011, 1012, 0, 0,
	905, 0, 0, 896, 0, 737, 0, 0, 671, 530,
	533, 534, 617, 421, 671, 464, 461, 671, 341, 1041,
	-2, 1054, 1056, 0, 0, 1059, 1060, 0, 0, 0,
	0, 1097, 1066, 0, 0, 1070, 0, 1371, 1372, 0,
	1074, 0, 1040, 0, 1031, 1040, 0, 0, 1039, 0,
	352, 354, 355, 356, 963, 964, 969, 970, 987, 0,
	0, 989, 0, 0, 357, 0, 0, 358, 362, 807,
	0, 812, 813, 625, 0, 0, 687, 708, 0, 0,
	688, 0, 689, 694, 696, 273, 723, 0, 0, 725,
	726, 727, 718, 221, 657, 0, 0, 678, 658, 0,
	19, 0, 0, 66, 1444, 1447, 599, 0, 596, 116,
	0, 0, 0, 0, 574, 558, 547, 137, 132, 831,
	118, 887, 889, 885, 0, 1217, 0, 1180, 1179, 1173,
	0, 599, 0, 789, 787, 803, 793, 0, 817, 818,
	0, 375, 376, 0, 379, 385, 805, 553, 0, 0,
	0, 0, 865, -2, 0, 0, -2, 908, 0, 903,
	0, 895, 0, 898, 671, 671, -2, 527, 532, 0,
	445, 465, 1055, 1057, 1058, 1061, 1062, 1004, 1005, 1063,
	1102, 1103, 1104, 1064, 1099, 1100, 1101, 1065, 0, 0,
	0, 1369, 1370, 1095, 0, 0, 0, 0, 0, 0,
	0, 1025, 994, 995, 988, 991, 992, 361, 359, 555,
	620, 275, 276, 709, 0, 702, 732, 729, 0, 0,
	668, 670, 67, 72, 0, 0, 601, 0, 598, 0,
	592, 594, 126, 563, 88, 109, 0, 1206, 1256, 1183,
	0, 1174, 0, 1168, 1169, 1170, 1175, 601, 0, 0,
	0, 372, 377, 0, 380, 381, 0, 854, 1435, 0,
	874, 875, 876, 915, -2, 958, 1013, 880, 118, 915,
	899, 0, 906, 0, 904, 897, 625, 528, 0, 0,
	1272, 1090, 0, 0, 0, 1032, 1034, 1035, 1036, 1037,
	1038, 1033, 0, 0, 0, 1024, 1026, 1071, 0, 272,
	0, 0, 733, 735, 730, 731, 62, 64, 79, 0,
	600, 117, 0, 80, 0, 106, 0, 119, 120, 0,
	0, 0, 0, 1182, 1171, 0, 0, 0, 0, 590,
	0, 788, 796, 0, 798, 378, 847, 0, 631, 0,
	917, 0, 877, 960, 882, 917, 891, 0, 901, 0,
	910, 0, 907, 620, 1098, 0, 1069, 1078, 1091, 0,
	0, 847, 847, 847, 847, 0, 1072, 710, 724, 0,
	0, 0, 89, 93, 0, 115, 112, 0, 121, 0,
	0, 0, 0, 0, 1163, 1164, 1166, 1165, 1167, 0,
	797, 846, 855, 856, 631, 879, 0, 954, 959, 881,
	900, 909, 0, 912, 526, 1067, 1077, 1079, 1080, 0,
	1092, 1093, 1094, 1096, 1017, 1018, 1021, 1022, 0, 734,
	736, 0, 603, 593, 82, 0, 0, 110, 111, 113,
	0, 122, 0, 124, 125, 0, 777, 848, 1456, 0,
	0, 852, 853, 857, 0, 942, 0, 0, 948, 0,
	955, 911, 1068, 1081, 0, 1082, 0, 0, 0, 1023,
	602, 0, 890, 0, 94, 0, 96, 98, 99, 1042,
	107, 108, 114, 123, 1172, 0, 850, 0, 918, 0,
	920, 0, 0, 0, 0, 0, 952, 0, 1083, 1085,
	1086, 0, 0, 1084, 604, 83, 84, 0, 95, 0,
	0, 849, 851, 0, 922, 0, 943, 0, 0, 0,
	0, 0, 0, 0, 1087, 1089, 1088, 0, 0, 97,
	1043, 919, 916, 0, 954, 944, 0, 946, 0, 0,
	0, 0, 85, 86, 87, 0, 0, 924, 0, 940,
	945, 947, 949, 0, 953, 951, 1044, 923, 0, 936,
	921, 0, 950, 925, -2, 0, 941, 926, -2, 0,
	934, 0, 0, 927, 935, 0, 930, 0, 0, 0,
	929, 0, -2, 937, 0, 0, 931, -2, 0, 939,
	938,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 127, 119, 3,
	67, 68, 124, 122, 137, 123, 136, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 557, 556,
	106, 105, 107, 3, 558, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 559, 118, 560, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 104,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	120, 121, 126, 128, 131, 132, 133, 134, 135, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:710
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:717
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:723
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:737
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:741
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:756
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:760
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:766
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:834
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:840
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:847
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:855
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:861
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:870
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:880
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:888
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:896
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:922
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:962
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:968
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:972
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:997
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1001
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1020
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1060
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1071
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1077
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1081
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1094
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1102
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1106
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1141
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1147
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1156
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1167
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1171
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1177
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1181
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1187
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1197
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1221
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1240
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1244
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1248
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1257
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1272
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1279
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1284
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1291
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1300
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1324
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1328
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1334
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1340
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1358
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1375
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1398
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1406
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1411
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1415
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1421
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1462
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1485
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1517
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1546
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1561
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1565
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1587
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1591
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1649
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1653
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1805
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1858
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1862
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1889
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1895
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1899
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1930
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1938
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1961
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1991
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1998
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2006
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2029
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2033
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2037
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2043
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2047
		{
			yyVAL.str = yyDollar[1].str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2053
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2057
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2063
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2067
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2093
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2097
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2101
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2105
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2109
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2113
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2117
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2121
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2135
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2139
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2144
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2149
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2192
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2199
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2221
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2225
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2247
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2251
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2257
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2313
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2319
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2341
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2349
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2369
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2387
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2432
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2449
		{
			yyVAL.str = "true"
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2450
		{
			yyVAL.str = "false"
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2491
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2495
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2501
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2508
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2512
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2516
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2522
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2529
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2536
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2543
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2550
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2567
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2571
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2590
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2607
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2613
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2624
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2639
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2644
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2648
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2657
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2685
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2693
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2697
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2701
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2705
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2709
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2713
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2721
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2729
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2733
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2739
		{
			yyVAL.item = nil
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2744
		{
			yyVAL.item = nil
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2782
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2787
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2791
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2795
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2808
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2814
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2819
		{
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2823
		{
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2828
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2863
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2881
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2902
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2935
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2945
		{
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2947
		{
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2979
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2989
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2995
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3007
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3016
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3048
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3060
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3096
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3100
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3105
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3109
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3115
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3128
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3132
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3163
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3167
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3173
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3179
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3183
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3187
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3193
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3197
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3247
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3251
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3257
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3303
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3309
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3341
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3364
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3377
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3388
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3392
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3398
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3403
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3410
		{
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3412
		{
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3415
		{
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3424
		{
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3428
		{
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3433
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3442
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3455
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3463
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3470
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3477
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3497
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3510
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3516
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3520
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3526
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3533
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3539
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3547
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3554
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3561
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3580
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3584
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3593
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3597
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3603
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3612
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3616
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3622
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3626
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3632
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3636
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3642
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3647
		{
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3658
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3662
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3669
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3678
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3684
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3688
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3694
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3698
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3727
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3734
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3752
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3771
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3777
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3784
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3788
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3801
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3805
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3810
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3814
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3821
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3826
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3833
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3839
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3843
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3851
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3855
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3865
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3872
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3881
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3885
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3891
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3903
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3912
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3918
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3922
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3926
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3935
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3941
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3947
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3951
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3957
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3962
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3966
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3970
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3975
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3979
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3983
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3989
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3993
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3997
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4011
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4015
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4025
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4035
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4045
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4057
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4065
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4073
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4082
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4090
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4098
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4106
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4122
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4130
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4138
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4156
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4167
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4181
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4185
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4189
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4198
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4202
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4215
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4224
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4239
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4243
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4249
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4253
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4258
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4262
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4267
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4275
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4289
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4307
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4331
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4350
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4354
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4364
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4368
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4372
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4376
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4382
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4392
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4396
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4402
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4412
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4418
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4424
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4428
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4432
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4442
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4448
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4452
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4458
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4462
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4468
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4472
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4482
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4495
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4501
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4507
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4520
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4531
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4538
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4542
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4558
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4562
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4566
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4571
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4575
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4579
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4583
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4592
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4596
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4600
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4604
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4609
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4613
		{
			yyVAL.str = yyDollar[1].str
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4617
		{
			yyVAL.str = yyDollar[2].str
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4623
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4629
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4633
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4637
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4641
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4645
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4651
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 761:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4684
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4694
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4700
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 764:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4716
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4721
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4727
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4734
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4738
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4744
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4750
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4755
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4759
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4763
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4767
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4774
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4786
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4791
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4797
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4804
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4808
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4814
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4820
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4824
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4828
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4834
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4840
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4846
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4869
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4875
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4885
		{
			yyVAL.str = yyDollar[1].str
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4889
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4895
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4902
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4908
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4916
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4929
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4937
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4952
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4964
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4975
		{
			yyVAL.str = ""
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4979
		{
			yyVAL.str = yyDollar[2].str
		}
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4999
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5005
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5011
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5017
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5026
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5035
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5046
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5054
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5160
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5164
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5170
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5180
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5184
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5190
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5200
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5208
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5213
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5217
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5223
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5230
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5236
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5245
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5252
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5261
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5265
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5271
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5285
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5289
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5293
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5302
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5306
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5310
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5316
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5339
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5361
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5365
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5369
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5373
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5377
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5383
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5387
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5393
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5398
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5403
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5407
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5411
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5425
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5440
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5450
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5463
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5469
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5473
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5483
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5487
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5492
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5496
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5502
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5514
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5523
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5536
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5553
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5561
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5572
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5576
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5581
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5585
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5592
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5603
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5616
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5630
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5638
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5645
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5652
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5659
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5666
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5682
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5689
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5700
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5707
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5718
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5725
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5732
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5739
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5746
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5759
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5773
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5780
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5791
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5804
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5810
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5814
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5820
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5829
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5843
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5849
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5853
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5859
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5866
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5875
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5879
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5888
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5893
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5897
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5902
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5906
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5916
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5920
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5931
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5939
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5947
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5955
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5966
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5975
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5985
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5995
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5999
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6017
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6023
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6027
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6031
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6037
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6041
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6045
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6049
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6053
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6057
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6062
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6066
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6070
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6074
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6078
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6082
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6086
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6090
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6094
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6098
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6102
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6106
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6110
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6118
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6122
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6130
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6134
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6138
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6142
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6146
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6150
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6157
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6161
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6167
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6172
		{
			yyVAL.str = ""
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6176
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6180
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6186
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6190
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6194
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6198
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6202
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6206
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6220
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6224
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6233
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6238
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6244
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6255
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6261
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6265
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6269
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6275
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6284
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6309
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6323
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6329
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6338
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6347
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6357
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6365
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6371
		{
			yyVAL.str = ""
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6385
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6391
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6397
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6411
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6415
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6421
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6427
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6431
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6435
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6441
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6445
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6449
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6453
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6459
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6463
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6467
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6476
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6482
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6486
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6492
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6496
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6500
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6504
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6508
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6512
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6517
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6521
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6525
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6529
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6533
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6545
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6564
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6568
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6573
		{
			yyVAL.str = ""
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6577
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6583
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6587
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6593
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6605
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6612
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6619
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6626
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6633
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6642
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6648
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6654
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6658
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6662
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6666
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6670
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6675
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6682
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6686
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6690
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6699
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6704
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6708
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6724
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6730
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6734
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6742
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6746
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6762
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6778
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6784
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6788
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6792
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6796
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6800
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6804
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6820
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6824
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6828
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6833
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6846
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6850
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6859
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6863
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6867
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6871
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6875
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6881
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6894
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6903
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6909
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6913
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6919
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6928
		{
			t := yyVAL.columnTypeUnion()
			if strings.ToLower(t.InternalType.FamilyString) == "binary" {
				t.InternalType.Scale = -1
			}
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6934
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6951
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6968
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6994
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7006
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7035
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7050
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7067
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7082
		{
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7088
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7092
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7096
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7102
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7106
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7114
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7118
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7128
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7135
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7148
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7155
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7164
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7169
		{
			yyVAL.str = ","
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7173
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7185
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7195
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7216
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7225
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7234
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7244
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7254
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7264
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7274
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7284
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7294
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7304
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7314
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7324
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7334
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7344
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7354
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7371
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7387
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7395
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7403
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7413
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7430
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7438
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7446
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7454
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7462
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7483
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7495
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7506
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7528
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7564
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7576
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7588
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7599
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7607
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7614
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7621
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7633
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7641
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7651
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7661
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7669
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7680
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7689
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7698
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7706
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7716
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7724
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7738
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7748
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7767
		{
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7769
		{
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7810
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7821
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7825
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7829
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7835
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7844
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7850
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7854
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7861
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7865
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7869
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7877
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7881
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7885
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7889
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7895
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7899
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7903
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7907
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7911
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7915
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7919
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7923
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7927
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7931
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7939
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7943
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7947
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7951
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7955
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7959
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7963
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7967
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7971
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7975
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7985
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7991
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7995
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8002
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8006
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8010
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8016
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8020
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8024
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8028
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8032
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8036
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8040
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8046
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8050
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8054
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8058
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8064
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8068
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8081
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8086
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8090
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8094
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8098
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8102
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8106
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8120
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8124
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8131
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8142
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8147
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8153
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8177
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8189
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8202
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8215
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8228
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8241
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8254
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8267
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8280
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8293
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8319
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8334
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8361
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8403
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8451
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8468
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8480
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8500
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8520
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8540
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8569
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8595
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8620
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8644
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8656
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8668
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8680
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8692
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8704
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8716
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8742
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8757
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8765
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8774
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8784
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8807
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8812
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8818
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8825
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8829
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8834
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8838
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8844
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8850
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8857
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8864
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8880
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8887
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8900
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8910
		{
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8912
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8922
		{
			yyVAL.str = ""
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8926
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

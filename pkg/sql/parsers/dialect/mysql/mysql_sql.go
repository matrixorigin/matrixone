// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const ELSEIF = 57442
const LOWER_THAN_EQ = 57443
const LE = 57444
const GE = 57445
const NE = 57446
const NULL_SAFE_EQUAL = 57447
const IS = 57448
const LIKE = 57449
const REGEXP = 57450
const IN = 57451
const ASSIGNMENT = 57452
const ILIKE = 57453
const SHIFT_LEFT = 57454
const SHIFT_RIGHT = 57455
const DIV = 57456
const MOD = 57457
const UNARY = 57458
const COLLATE = 57459
const BINARY = 57460
const UNDERSCORE_BINARY = 57461
const INTERVAL = 57462
const OUT = 57463
const INOUT = 57464
const BEGIN = 57465
const START = 57466
const TRANSACTION = 57467
const COMMIT = 57468
const ROLLBACK = 57469
const WORK = 57470
const CONSISTENT = 57471
const SNAPSHOT = 57472
const CHAIN = 57473
const NO = 57474
const RELEASE = 57475
const PRIORITY = 57476
const QUICK = 57477
const BIT = 57478
const TINYINT = 57479
const SMALLINT = 57480
const MEDIUMINT = 57481
const INT = 57482
const INTEGER = 57483
const BIGINT = 57484
const INTNUM = 57485
const REAL = 57486
const DOUBLE = 57487
const FLOAT_TYPE = 57488
const DECIMAL = 57489
const NUMERIC = 57490
const DECIMAL_VALUE = 57491
const TIME = 57492
const TIMESTAMP = 57493
const DATETIME = 57494
const YEAR = 57495
const CHAR = 57496
const VARCHAR = 57497
const BOOL = 57498
const CHARACTER = 57499
const VARBINARY = 57500
const NCHAR = 57501
const TEXT = 57502
const TINYTEXT = 57503
const MEDIUMTEXT = 57504
const LONGTEXT = 57505
const BLOB = 57506
const TINYBLOB = 57507
const MEDIUMBLOB = 57508
const LONGBLOB = 57509
const JSON = 57510
const ENUM = 57511
const UUID = 57512
const GEOMETRY = 57513
const POINT = 57514
const LINESTRING = 57515
const POLYGON = 57516
const GEOMETRYCOLLECTION = 57517
const MULTIPOINT = 57518
const MULTILINESTRING = 57519
const MULTIPOLYGON = 57520
const INT1 = 57521
const INT2 = 57522
const INT3 = 57523
const INT4 = 57524
const INT8 = 57525
const S3OPTION = 57526
const SQL_SMALL_RESULT = 57527
const SQL_BIG_RESULT = 57528
const SQL_BUFFER_RESULT = 57529
const LOW_PRIORITY = 57530
const HIGH_PRIORITY = 57531
const DELAYED = 57532
const CREATE = 57533
const ALTER = 57534
const DROP = 57535
const RENAME = 57536
const ANALYZE = 57537
const ADD = 57538
const RETURNS = 57539
const SCHEMA = 57540
const TABLE = 57541
const SEQUENCE = 57542
const INDEX = 57543
const VIEW = 57544
const TO = 57545
const IGNORE = 57546
const IF = 57547
const PRIMARY = 57548
const COLUMN = 57549
const CONSTRAINT = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const FOREIGN = 57553
const KEY_BLOCK_SIZE = 57554
const SHOW = 57555
const DESCRIBE = 57556
const EXPLAIN = 57557
const DATE = 57558
const ESCAPE = 57559
const REPAIR = 57560
const OPTIMIZE = 57561
const TRUNCATE = 57562
const MAXVALUE = 57563
const PARTITION = 57564
const REORGANIZE = 57565
const LESS = 57566
const THAN = 57567
const PROCEDURE = 57568
const TRIGGER = 57569
const STATUS = 57570
const VARIABLES = 57571
const ROLE = 57572
const PROXY = 57573
const AVG_ROW_LENGTH = 57574
const STORAGE = 57575
const DISK = 57576
const MEMORY = 57577
const CHECKSUM = 57578
const COMPRESSION = 57579
const DATA = 57580
const DIRECTORY = 57581
const DELAY_KEY_WRITE = 57582
const ENCRYPTION = 57583
const ENGINE = 57584
const MAX_ROWS = 57585
const MIN_ROWS = 57586
const PACK_KEYS = 57587
const ROW_FORMAT = 57588
const STATS_AUTO_RECALC = 57589
const STATS_PERSISTENT = 57590
const STATS_SAMPLE_PAGES = 57591
const DYNAMIC = 57592
const COMPRESSED = 57593
const REDUNDANT = 57594
const COMPACT = 57595
const FIXED = 57596
const COLUMN_FORMAT = 57597
const AUTO_RANDOM = 57598
const RESTRICT = 57599
const CASCADE = 57600
const ACTION = 57601
const PARTIAL = 57602
const SIMPLE = 57603
const CHECK = 57604
const ENFORCED = 57605
const RANGE = 57606
const LIST = 57607
const ALGORITHM = 57608
const LINEAR = 57609
const PARTITIONS = 57610
const SUBPARTITION = 57611
const SUBPARTITIONS = 57612
const CLUSTER = 57613
const TYPE = 57614
const ANY = 57615
const SOME = 57616
const EXTERNAL = 57617
const LOCALFILE = 57618
const URL = 57619
const PREPARE = 57620
const DEALLOCATE = 57621
const RESET = 57622
const EXTENSION = 57623
const INCREMENT = 57624
const CYCLE = 57625
const MINVALUE = 57626
const PUBLICATION = 57627
const SUBSCRIPTIONS = 57628
const PUBLICATIONS = 57629
const PROPERTIES = 57630
const PARSER = 57631
const VISIBLE = 57632
const INVISIBLE = 57633
const BTREE = 57634
const HASH = 57635
const RTREE = 57636
const BSI = 57637
const ZONEMAP = 57638
const LEADING = 57639
const BOTH = 57640
const TRAILING = 57641
const UNKNOWN = 57642
const EXPIRE = 57643
const ACCOUNT = 57644
const ACCOUNTS = 57645
const UNLOCK = 57646
const DAY = 57647
const NEVER = 57648
const PUMP = 57649
const MYSQL_COMPATIBILITY_MODE = 57650
const SECOND = 57651
const ASCII = 57652
const COALESCE = 57653
const COLLATION = 57654
const HOUR = 57655
const MICROSECOND = 57656
const MINUTE = 57657
const MONTH = 57658
const QUARTER = 57659
const REPEAT = 57660
const REVERSE = 57661
const ROW_COUNT = 57662
const WEEK = 57663
const REVOKE = 57664
const FUNCTION = 57665
const PRIVILEGES = 57666
const TABLESPACE = 57667
const EXECUTE = 57668
const SUPER = 57669
const GRANT = 57670
const OPTION = 57671
const REFERENCES = 57672
const REPLICATION = 57673
const SLAVE = 57674
const CLIENT = 57675
const USAGE = 57676
const RELOAD = 57677
const FILE = 57678
const TEMPORARY = 57679
const ROUTINE = 57680
const EVENT = 57681
const SHUTDOWN = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const ENGINES = 57689
const LOW_CARDINALITY = 57690
const ADMIN_NAME = 57691
const RANDOM = 57692
const SUSPEND = 57693
const ATTRIBUTE = 57694
const HISTORY = 57695
const REUSE = 57696
const CURRENT = 57697
const OPTIONAL = 57698
const FAILED_LOGIN_ATTEMPTS = 57699
const PASSWORD_LOCK_TIME = 57700
const UNBOUNDED = 57701
const SECONDARY = 57702
const USER = 57703
const IDENTIFIED = 57704
const CIPHER = 57705
const ISSUER = 57706
const X509 = 57707
const SUBJECT = 57708
const SAN = 57709
const REQUIRE = 57710
const SSL = 57711
const NONE = 57712
const PASSWORD = 57713
const MAX_QUERIES_PER_HOUR = 57714
const MAX_UPDATES_PER_HOUR = 57715
const MAX_CONNECTIONS_PER_HOUR = 57716
const MAX_USER_CONNECTIONS = 57717
const FORMAT = 57718
const VERBOSE = 57719
const CONNECTION = 57720
const TRIGGERS = 57721
const PROFILES = 57722
const LOAD = 57723
const INFILE = 57724
const TERMINATED = 57725
const OPTIONALLY = 57726
const ENCLOSED = 57727
const ESCAPED = 57728
const STARTING = 57729
const LINES = 57730
const ROWS = 57731
const IMPORT = 57732
const MODUMP = 57733
const OVER = 57734
const PRECEDING = 57735
const FOLLOWING = 57736
const GROUPS = 57737
const DATABASES = 57738
const TABLES = 57739
const SEQUENCES = 57740
const EXTENDED = 57741
const FULL = 57742
const PROCESSLIST = 57743
const FIELDS = 57744
const COLUMNS = 57745
const OPEN = 57746
const ERRORS = 57747
const WARNINGS = 57748
const INDEXES = 57749
const SCHEMAS = 57750
const NODE = 57751
const LOCKS = 57752
const ROLES = 57753
const TABLE_NUMBER = 57754
const COLUMN_NUMBER = 57755
const TABLE_VALUES = 57756
const TABLE_SIZE = 57757
const NAMES = 57758
const GLOBAL = 57759
const SESSION = 57760
const ISOLATION = 57761
const LEVEL = 57762
const READ = 57763
const WRITE = 57764
const ONLY = 57765
const REPEATABLE = 57766
const COMMITTED = 57767
const UNCOMMITTED = 57768
const SERIALIZABLE = 57769
const LOCAL = 57770
const EVENTS = 57771
const PLUGINS = 57772
const CURRENT_TIMESTAMP = 57773
const DATABASE = 57774
const CURRENT_TIME = 57775
const LOCALTIME = 57776
const LOCALTIMESTAMP = 57777
const UTC_DATE = 57778
const UTC_TIME = 57779
const UTC_TIMESTAMP = 57780
const REPLACE = 57781
const CONVERT = 57782
const SEPARATOR = 57783
const TIMESTAMPDIFF = 57784
const CURRENT_DATE = 57785
const CURRENT_USER = 57786
const CURRENT_ROLE = 57787
const SECOND_MICROSECOND = 57788
const MINUTE_MICROSECOND = 57789
const MINUTE_SECOND = 57790
const HOUR_MICROSECOND = 57791
const HOUR_SECOND = 57792
const HOUR_MINUTE = 57793
const DAY_MICROSECOND = 57794
const DAY_SECOND = 57795
const DAY_MINUTE = 57796
const DAY_HOUR = 57797
const YEAR_MONTH = 57798
const SQL_TSI_HOUR = 57799
const SQL_TSI_DAY = 57800
const SQL_TSI_WEEK = 57801
const SQL_TSI_MONTH = 57802
const SQL_TSI_QUARTER = 57803
const SQL_TSI_YEAR = 57804
const SQL_TSI_SECOND = 57805
const SQL_TSI_MINUTE = 57806
const RECURSIVE = 57807
const CONFIG = 57808
const DRAINER = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const ADDDATE = 57817
const BIT_AND = 57818
const BIT_OR = 57819
const BIT_XOR = 57820
const CAST = 57821
const COUNT = 57822
const APPROX_COUNT_DISTINCT = 57823
const APPROX_PERCENTILE = 57824
const CURDATE = 57825
const CURTIME = 57826
const DATE_ADD = 57827
const DATE_SUB = 57828
const EXTRACT = 57829
const GROUP_CONCAT = 57830
const MAX = 57831
const MID = 57832
const MIN = 57833
const NOW = 57834
const POSITION = 57835
const SESSION_USER = 57836
const STD = 57837
const STDDEV = 57838
const MEDIAN = 57839
const STDDEV_POP = 57840
const STDDEV_SAMP = 57841
const SUBDATE = 57842
const SUBSTR = 57843
const SUBSTRING = 57844
const SUM = 57845
const SYSDATE = 57846
const SYSTEM_USER = 57847
const TRANSLATE = 57848
const TRIM = 57849
const VARIANCE = 57850
const VAR_POP = 57851
const VAR_SAMP = 57852
const AVG = 57853
const RANK = 57854
const NEXTVAL = 57855
const SETVAL = 57856
const CURRVAL = 57857
const LASTVAL = 57858
const ARROW = 57859
const ROW = 57860
const OUTFILE = 57861
const HEADER = 57862
const MAX_FILE_SIZE = 57863
const FORCE_QUOTE = 57864
const PARALLEL = 57865
const UNUSED = 57866
const BINDINGS = 57867
const DO = 57868
const DECLARE = 57869
const LOOP = 57870
const WHILE = 57871
const LEAVE = 57872
const ITERATE = 57873
const UNTIL = 57874
const CALL = 57875
const SPBEGIN = 57876
const BACKEND = 57877
const SERVERS = 57878
const KILL = 57879
const QUERY_RESULT = 57880

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9384

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 110,
	21, 627,
	-2, 608,
	-1, 124,
	218, 844,
	-2, 915,
	-1, 146,
	42, 448,
	218, 448,
	245, 455,
	246, 455,
	424, 448,
	-2, 481,
	-1, 182,
	557, 1574,
	-2, 366,
	-1, 501,
	294, 130,
	399, 130,
	-2, 1488,
	-1, 564,
	67, 1294,
	-2, 1628,
	-1, 565,
	67, 1312,
	-2, 1599,
	-1, 569,
	67, 1313,
	-2, 1627,
	-1, 592,
	67, 1224,
	-2, 1689,
	-1, 593,
	67, 1225,
	-2, 1688,
	-1, 594,
	67, 1226,
	-2, 1678,
	-1, 595,
	67, 1653,
	-2, 1673,
	-1, 596,
	67, 1654,
	-2, 1674,
	-1, 597,
	67, 1655,
	-2, 1680,
	-1, 598,
	67, 1656,
	-2, 1663,
	-1, 599,
	67, 1657,
	-2, 1671,
	-1, 600,
	67, 1658,
	-2, 1681,
	-1, 601,
	67, 1659,
	-2, 1682,
	-1, 602,
	67, 1660,
	-2, 1687,
	-1, 603,
	67, 1661,
	-2, 1692,
	-1, 604,
	67, 1662,
	-2, 1693,
	-1, 606,
	67, 1291,
	-2, 1480,
	-1, 613,
	67, 1300,
	-2, 1506,
	-1, 617,
	67, 1304,
	-2, 1545,
	-1, 618,
	67, 1305,
	-2, 1623,
	-1, 626,
	67, 1315,
	-2, 1608,
	-1, 628,
	67, 1317,
	-2, 1618,
	-1, 629,
	67, 1318,
	-2, 1643,
	-1, 640,
	67, 1202,
	-2, 1683,
	-1, 641,
	67, 1203,
	-2, 1684,
	-1, 642,
	67, 1204,
	-2, 1685,
	-1, 646,
	21, 628,
	-2, 591,
	-1, 716,
	419, 481,
	420, 481,
	-2, 449,
	-1, 757,
	105, 1480,
	116, 1480,
	136, 1480,
	-2, 1455,
	-1, 857,
	21, 628,
	-2, 591,
	-1, 957,
	21, 627,
	-2, 1107,
	-1, 1298,
	67, 1362,
	-2, 1625,
	-1, 1299,
	67, 1363,
	-2, 1626,
	-1, 1431,
	68, 769,
	-2, 775,
	-1, 1755,
	68, 1441,
	137, 1441,
	-2, 1610,
	-1, 1756,
	68, 1441,
	137, 1441,
	-2, 1609,
	-1, 1757,
	68, 1419,
	137, 1419,
	-2, 1596,
	-1, 1758,
	68, 1420,
	137, 1420,
	-2, 1601,
	-1, 1759,
	68, 1421,
	137, 1421,
	-2, 1533,
	-1, 1760,
	68, 1422,
	137, 1422,
	-2, 1527,
	-1, 1761,
	68, 1423,
	137, 1423,
	-2, 1471,
	-1, 1762,
	68, 1424,
	137, 1424,
	-2, 1598,
	-1, 1763,
	68, 1425,
	137, 1425,
	-2, 1531,
	-1, 1764,
	68, 1426,
	137, 1426,
	-2, 1526,
	-1, 1765,
	68, 1427,
	137, 1427,
	-2, 1519,
	-1, 1767,
	68, 1430,
	137, 1430,
	-2, 1643,
	-1, 1768,
	68, 1410,
	137, 1410,
	-2, 1628,
	-1, 1769,
	68, 1439,
	137, 1439,
	-2, 1599,
	-1, 1770,
	68, 1439,
	137, 1439,
	-2, 1627,
	-1, 1771,
	68, 1439,
	137, 1439,
	-2, 1489,
	-1, 1772,
	68, 1437,
	137, 1437,
	-2, 1618,
	-1, 1773,
	68, 1434,
	137, 1434,
	-2, 1511,
	-1, 1774,
	67, 1392,
	68, 1392,
	137, 1392,
	361, 1392,
	362, 1392,
	363, 1392,
	-2, 1470,
	-1, 1775,
	67, 1393,
	68, 1393,
	137, 1393,
	361, 1393,
	362, 1393,
	363, 1393,
	-2, 1472,
	-1, 1776,
	67, 1396,
	68, 1396,
	137, 1396,
	361, 1396,
	362, 1396,
	363, 1396,
	-2, 1600,
	-1, 1777,
	67, 1398,
	68, 1398,
	137, 1398,
	361, 1398,
	362, 1398,
	363, 1398,
	-2, 1583,
	-1, 1778,
	67, 1400,
	68, 1400,
	137, 1400,
	361, 1400,
	362, 1400,
	363, 1400,
	-2, 1532,
	-1, 1779,
	67, 1402,
	68, 1402,
	137, 1402,
	361, 1402,
	362, 1402,
	363, 1402,
	-2, 1515,
	-1, 1780,
	67, 1403,
	68, 1403,
	137, 1403,
	361, 1403,
	362, 1403,
	363, 1403,
	-2, 1516,
	-1, 1781,
	67, 1405,
	68, 1405,
	137, 1405,
	361, 1405,
	362, 1405,
	363, 1405,
	-2, 1469,
	-1, 1782,
	68, 1444,
	137, 1444,
	361, 1444,
	362, 1444,
	363, 1444,
	-2, 1494,
	-1, 1783,
	68, 1444,
	137, 1444,
	361, 1444,
	362, 1444,
	363, 1444,
	-2, 1507,
	-1, 1784,
	68, 1447,
	137, 1447,
	361, 1447,
	362, 1447,
	363, 1447,
	-2, 1490,
	-1, 1785,
	68, 1444,
	137, 1444,
	361, 1444,
	362, 1444,
	363, 1444,
	-2, 1568,
	-1, 1798,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	258, 879,
	-2, 872,
	-1, 1908,
	21, 627,
	-2, 719,
	-1, 2086,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	258, 879,
	-2, 873,
	-1, 2098,
	65, 535,
	137, 535,
	-2, 1010,
	-1, 2116,
	279, 1075,
	-2, 1054,
	-1, 2376,
	279, 1075,
	-2, 1055,
	-1, 2509,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	-2, 958,
	-1, 2512,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	-2, 958,
	-1, 2522,
	65, 535,
	137, 535,
	-2, 1011,
	-1, 2620,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	-2, 959,
	-1, 2910,
	68, 930,
	137, 930,
	-2, 879,
	-1, 2914,
	68, 930,
	137, 930,
	-2, 879,
	-1, 2928,
	68, 934,
	137, 934,
	-2, 879,
	-1, 2933,
	68, 935,
	137, 935,
	-2, 879,
}

const yyPrivate = 57344

const yyLast = 34232

var yyAct = [...]int{
	531, 2914, 1217, 1494, 2913, 2893, 173, 2922, 510, 2804,
	1279, 512, 533, 2822, 2852, 2844, 2587, 2592, 2680, 2763,
	2388, 2764, 2614, 1733, 2652, 2731, 1092, 2464, 2747, 2751,
	2613, 2674, 2612, 2465, 2696, 988, 647, 2590, 2664, 418,
	1452, 1208, 2641, 561, 2101, 2619, 2353, 1275, 424, 1282,
	429, 429, 2532, 2582, 2181, 158, 429, 445, 454, 1142,
	2182, 454, 1551, 2492, 2167, 2377, 2400, 1836, 1902, 2177,
	2462, 2174, 1526, 1991, 2450, 1612, 2180, 2203, 1643, 2433,
	1753, 514, 465, 2328, 2325, 1564, 2323, 1807, 756, 851,
	2399, 1839, 1050, 1751, 1743, 1204, 1199, 2351, 459, 2233,
	1497, 2032, 1990, 1621, 1454, 2087, 509, 503, 2272, 1639,
	504, 1620, 1855, 1413, 1586, 1613, 53, 1941, 1544, 1066,
	1216, 1638, 762, 1903, 1529, 2069, 2065, 693, 1490, 2216,
	1806, 2118, 1891, 169, 8, 168, 7, 6, 1837, 1421,
	1439, 1958, 806, 1209, 1273, 1640, 513, 36, 1749, 1151,
	418, 1671, 1527, 1791, 423, 1328, 1464, 1278, 1650, 502,
	2033, 1173, 521, 1312, 1100, 1548, 1264, 26, 868, 1024,
	15, 1602, 1081, 173, 14, 173, 1463, 797, 798, 1576,
	1180, 109, 35, 1619, 1272, 32, 1616, 504, 511, 760,
	748, 1438, 1134, 1068, 1910, 438, 13, 1481, 1077, 441,
	1126, 692, 1334, 1333, 451, 644, 1172, 23, 467, 1048,
	1093, 16, 10, 159, 155, 2266, 468, 453, 152, 711,
	1993, 989, 749, 690, 450, 2266, 1657, 446, 793, 1647,
	795, 449, 1534, 646, 2457, 723, 1947, 1944, 1187, 1945,
	794, 1942, 447, 790, 790, 790, 1183, 789, 157, 425,
	1113, 2580, 2229, 448, 2227, 1591, 2670, 2665, 1185, 2583,
	2463, 417, 1417, 983, 2740, 156, 1615, 49, 148, 125,
	766, 645, 434, 926, 927, 928, 925, 2795, 457, 655,
	2604, 156, 428, 428, 889, 149, 2605, 156, 436, 156,
	156, 8, 141, 7, 156, 788, 150, 926, 927, 928,
	925, 108, 1978, 156, 2706, 49, 148, 125, 1040, 1231,
	1224, 2715, 1644, 1101, 1986, 156, 97, 49, 148, 125,
	463, 464, 153, 2248, 2295, 1228, 1221, 1655, 505, 156,
	2241, 49, 148, 125, 156, 763, 765, 1795, 153, 1109,
	156, 1922, 1110, 923, 153, 1562, 1230, 1223, 2707, 1923,
	635, 153, 634, 636, 637, 1265, 638, 639, 1269, 1041,
	153, 1425, 1426, 1089, 2067, 1959, 1249, 2840, 732, 2838,
	108, 916, 153, 1477, 656, 904, 108, 648, 905, 1096,
	1098, 1099, 1268, 1095, 1098, 1099, 153, 772, 767, 771,
	773, 153, 2767, 2768, 2600, 112, 113, 153, 114, 115,
	1281, 921, 897, 759, 758, 899, 907, 926, 927, 928,
	925, 2741, 2742, 1726, 777, 2826, 2827, 2066, 770, 2675,
	2676, 2677, 2678, 2672, 737, 1112, 2466, 736, 429, 2794,
	2733, 2736, 2234, 900, 2733, 2235, 2668, 2236, 429, 861,
	2466, 871, 1284, 1973, 862, 2746, 2475, 2493, 1651, 2339,
	2329, 1537, 2610, 2500, 1260, 2072, 454, 454, 1270, 429,
	2688, 860, 1882, 124, 147, 154, 775, 95, 1186, 1184,
	1541, 856, 858, 778, 1790, 1545, 2261, 1599, 902, 1267,
	2057, 2337, 1193, 1192, 2691, 146, 140, 139, 2395, 2259,
	768, 892, 55, 2171, 1983, 919, 920, 800, 1884, 791,
	792, 124, 918, 154, 796, 893, 2607, 2797, 2798, 498,
	741, 776, 500, 909, 2581, 2228, 910, 499, 959, 2599,
	855, 2344, 1887, 146, 2833, 2601, 2350, 738, 895, 2357,
	761, 2703, 2766, 2334, 2335, 2333, 2756, 903, 2842, 1087,
	898, 901, 871, 2094, 912, 884, 456, 1283, 2336, 769,
	142, 143, 144, 1660, 1662, 1663, 2408, 2409, 857, 455,
	2752, 766, 1656, 861, 894, 914, 915, 2642, 2643, 2644,
	2646, 2645, 1111, 2907, 2553, 2923, 151, 2861, 1560, 1561,
	2837, 1121, 1290, 1293, 1294, 993, 740, 2806, 1266, 2868,
	451, 451, 1076, 1291, 104, 1865, 2802, 2803, 145, 2806,
	105, 2081, 2082, 2083, 2084, 2722, 2545, 2872, 906, 2847,
	450, 450, 2654, 446, 446, 2536, 908, 449, 449, 1864,
	774, 875, 873, 872, 2415, 2540, 763, 765, 447, 447,
	2331, 2078, 766, 1130, 1074, 896, 1645, 1129, 2479, 448,
	448, 1073, 864, 865, 992, 2558, 2559, 882, 2265, 1091,
	1090, 1072, 913, 106, 1645, 2924, 2930, 739, 2894, 2514,
	853, 2697, 1672, 48, 1645, 852, 1046, 424, 1049, 2918,
	859, 2311, 2578, 877, 878, 911, 1051, 881, 2205, 2207,
	1021, 463, 2704, 1842, 2730, 965, 1127, 1979, 790, 2796,
	790, 880, 693, 790, 790, 1849, 889, 763, 765, 866,
	790, 790, 1913, 452, 1648, 961, 962, 963, 964, 1854,
	2152, 50, 1658, 1845, 2705, 1056, 1646, 452, 2264, 1098,
	1099, 1098, 1099, 873, 872, 1943, 2743, 2744, 2848, 1097,
	1060, 645, 1059, 2319, 1058, 2071, 458, 1094, 429, 1659,
	1123, 1428, 2330, 1063, 126, 1088, 2340, 2274, 2273, 1188,
	2056, 418, 418, 418, 2689, 2606, 1146, 1146, 2843, 429,
	126, 50, 1052, 1053, 1054, 1055, 126, 1057, 126, 126,
	2262, 1061, 1737, 126, 1044, 50, 454, 1049, 424, 888,
	1176, 1176, 126, 1987, 883, 2611, 1661, 1153, 2075, 2076,
	1546, 173, 1001, 1002, 126, 2917, 733, 2653, 107, 38,
	418, 1429, 2074, 1144, 1144, 47, 5, 1538, 126, 111,
	1261, 1736, 761, 126, 1427, 1292, 1148, 1841, 2332, 126,
	685, 1047, 1843, 1848, 657, 661, 1540, 2929, 1852, 1850,
	658, 2010, 2627, 1851, 2936, 929, 2541, 2542, 2206, 2873,
	2348, 1846, 2538, 924, 958, 2891, 2537, 1194, 1215, 2430,
	1218, 2935, 967, 2845, 2846, 1226, 1739, 1738, 1026, 846,
	843, 844, 845, 1028, 2426, 2015, 2926, 2014, 2013, 2011,
	687, 688, 689, 1844, 972, 1247, 660, 1083, 1084, 735,
	663, 662, 734, 1232, 1042, 1043, 889, 646, 1961, 1146,
	2362, 1146, 861, 1075, 1746, 1703, 1122, 649, 1702, 1455,
	1085, 2510, 1727, 924, 1197, 1978, 1200, 1201, 1103, 1104,
	1901, 1106, 1107, 1108, 1280, 1065, 1262, 1747, 1748, 733,
	924, 1206, 1207, 2908, 1114, 1115, 2062, 781, 786, 787,
	2059, 2012, 1169, 1102, 2099, 2927, 1105, 2153, 2155, 2156,
	2157, 2154, 2903, 1242, 1243, 1793, 1140, 1141, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1128, 1731, 2100, 1859, 1323, 1324, 2349, 924, 766, 742,
	1119, 1332, 766, 1137, 1138, 1139, 1154, 926, 927, 928,
	925, 1371, 1372, 1373, 1381, 434, 1168, 1177, 1211, 887,
	1214, 1152, 1653, 1167, 1387, 2856, 1455, 1388, 2897, 1222,
	1277, 2896, 735, 1229, 1178, 734, 2877, 1390, 2854, 1395,
	1396, 2904, 2816, 2774, 451, 924, 1078, 1082, 1082, 1082,
	1901, 649, 1189, 2293, 1256, 1579, 1258, 1233, 1079, 1966,
	926, 927, 928, 925, 450, 1246, 1263, 446, 1295, 1078,
	1078, 449, 1792, 1245, 1255, 1924, 1274, 1252, 1411, 1900,
	1644, 429, 447, 1437, 1146, 1441, 2100, 1443, 1444, 2016,
	2017, 2769, 429, 448, 1682, 693, 1238, 1653, 1453, 1234,
	1653, 2724, 1146, 1251, 1830, 1653, 1730, 2855, 1123, 2723,
	646, 2817, 2693, 445, 1254, 2720, 1414, 1380, 1253, 1250,
	926, 927, 928, 925, 1363, 1364, 1271, 1367, 783, 784,
	785, 2719, 1476, 1732, 2718, 1382, 1276, 886, 1175, 1175,
	1482, 1482, 2717, 1123, 1314, 1123, 1123, 2430, 1389, 429,
	1391, 1437, 1437, 1480, 2692, 1146, 1524, 1536, 1080, 1436,
	2693, 2560, 418, 2417, 1146, 1707, 1681, 1635, 1442, 1022,
	2725, 2200, 1321, 1322, 1558, 2038, 1994, 1577, 1811, 854,
	1976, 1445, 1446, 1447, 2693, 1064, 1901, 1326, 889, 1131,
	429, 1437, 1146, 2525, 1569, 429, 429, 1572, 2363, 2499,
	2693, 1970, 1575, 2693, 2218, 2102, 1581, 1981, 1968, 1366,
	887, 2693, 1557, 173, 1980, 1972, 173, 173, 1827, 173,
	1469, 1698, 2367, 2693, 1683, 1634, 1418, 1520, 1521, 941,
	1924, 2886, 2418, 1963, 1484, 1475, 1392, 1956, 1478, 1479,
	1901, 1440, 1954, 1542, 924, 924, 1354, 1952, 1950, 1811,
	1810, 1728, 1584, 1433, 1381, 1381, 1623, 1368, 1412, 1458,
	1711, 1381, 1381, 1710, 1235, 970, 1630, 1566, 1590, 2256,
	1964, 1593, 1594, 1547, 1596, 1568, 1465, 1969, 1467, 1468,
	1570, 1571, 874, 1285, 1286, 1287, 1288, 1289, 1456, 1457,
	1453, 1473, 854, 1449, 1146, 1642, 1450, 1461, 1462, 1485,
	1474, 1460, 1964, 1701, 1692, 1691, 1957, 849, 1466, 1690,
	1652, 1955, 1440, 1434, 1471, 1472, 1951, 1951, 1079, 1811,
	1727, 1486, 1487, 1239, 1448, 1912, 847, 1330, 1331, 924,
	1636, 2757, 924, 1365, 1624, 1942, 1555, 1556, 1483, 2628,
	2517, 1375, 1133, 1069, 2515, 1135, 1523, 1070, 1665, 1274,
	2874, 1525, 1543, 1563, 659, 1856, 1136, 1618, 1669, 1670,
	1552, 1553, 1554, 1435, 1618, 1370, 1369, 2431, 2422, 2419,
	766, 2267, 924, 924, 924, 2758, 1567, 766, 924, 1653,
	2172, 1488, 1415, 2629, 2518, 1967, 1419, 1585, 2516, 1422,
	1587, 1915, 1240, 863, 854, 2358, 2455, 2001, 1350, 1936,
	1588, 1329, 1347, 1320, 2791, 1604, 1349, 1346, 1348, 1352,
	1353, 1329, 2220, 1678, 1351, 925, 1078, 451, 1080, 1317,
	1319, 1316, 1565, 1318, 1132, 2548, 1708, 1565, 1565, 1181,
	1470, 1588, 1628, 1715, 1629, 763, 765, 450, 2547, 1633,
	446, 1082, 763, 765, 449, 1627, 2237, 1625, 944, 945,
	946, 947, 948, 941, 2359, 447, 928, 925, 1401, 1637,
	2130, 503, 766, 861, 1786, 2529, 448, 2129, 2124, 1632,
	664, 926, 927, 928, 925, 2122, 429, 429, 429, 2608,
	1808, 2497, 2458, 2912, 498, 1754, 2871, 500, 2900, 1664,
	1815, 1123, 499, 1415, 926, 927, 928, 925, 2360, 1415,
	1415, 1820, 2163, 2161, 1673, 1946, 2159, 2862, 2149, 1314,
	1666, 2175, 2857, 1677, 2807, 1123, 2782, 2759, 2609, 2901,
	2498, 2708, 861, 926, 927, 928, 925, 763, 765, 2666,
	2870, 2634, 2456, 2631, 2630, 2519, 1667, 1668, 2496, 2338,
	1589, 2162, 2160, 1592, 1835, 2158, 1595, 2148, 2252, 1597,
	1357, 1358, 1359, 1360, 1361, 1362, 1355, 1356, 926, 927,
	928, 925, 1905, 1905, 1536, 1905, 2232, 2003, 1831, 940,
	939, 949, 950, 942, 943, 944, 945, 946, 947, 948,
	941, 861, 2231, 1385, 1787, 2147, 2146, 2145, 1146, 429,
	926, 927, 928, 925, 1386, 2142, 1817, 1818, 2136, 1938,
	2133, 1725, 2132, 993, 861, 424, 1821, 1822, 1176, 2832,
	1536, 1607, 1606, 1931, 1605, 1933, 1858, 1601, 1600, 173,
	1740, 926, 927, 928, 925, 1236, 1754, 1039, 2324, 1794,
	1182, 1907, 2588, 1911, 2828, 1920, 1909, 2792, 1829, 1857,
	2728, 1860, 1861, 1862, 1863, 2690, 2667, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 2618, 992, 2586, 2025, 1974, 2584, 1816, 1642, 1824,
	2564, 1828, 1825, 2562, 1937, 1146, 2168, 1146, 2531, 1146,
	766, 2495, 1930, 1826, 861, 1675, 2494, 2491, 1679, 2484,
	534, 543, 926, 927, 928, 925, 535, 1823, 542, 536,
	540, 539, 537, 538, 2478, 1992, 1988, 1885, 1800, 1801,
	1802, 1928, 2425, 1146, 2019, 926, 927, 928, 925, 2423,
	1935, 2413, 2710, 1181, 1984, 2412, 2286, 1689, 2316, 2026,
	1734, 1735, 2315, 1819, 1146, 1696, 2263, 2230, 1921, 1694,
	926, 927, 928, 925, 2028, 763, 765, 2211, 1916, 1917,
	1918, 544, 1926, 1709, 2761, 2150, 1712, 1713, 1714, 1927,
	1144, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1929,
	2143, 2285, 2018, 2139, 2138, 2030, 861, 926, 927, 928,
	925, 1144, 2137, 541, 1729, 926, 927, 928, 925, 591,
	590, 2005, 1693, 2027, 926, 927, 928, 925, 2060, 1609,
	1985, 949, 950, 942, 943, 944, 945, 946, 947, 948,
	941, 1999, 1975, 1977, 1812, 926, 927, 928, 925, 1982,
	2049, 1152, 1603, 1146, 1082, 1424, 2079, 1237, 1000, 996,
	1437, 995, 1274, 971, 850, 2679, 2098, 2750, 2512, 2511,
	2509, 2483, 2104, 2034, 2594, 2470, 2461, 2460, 2039, 1995,
	1996, 2593, 2449, 156, 2009, 2448, 148, 125, 2113, 2368,
	926, 927, 928, 925, 2557, 2063, 2291, 926, 927, 928,
	925, 2121, 2284, 2276, 926, 927, 928, 925, 2271, 2126,
	2127, 2128, 2215, 1201, 2061, 2131, 2058, 926, 927, 928,
	925, 1998, 462, 1953, 1949, 1948, 1206, 1207, 1716, 1905,
	1706, 2050, 2053, 1704, 1700, 1686, 2089, 1699, 1697, 2164,
	153, 1415, 1415, 1415, 2481, 2095, 1688, 1685, 1437, 861,
	1536, 1536, 1536, 1536, 2289, 1684, 1608, 2105, 1410, 2088,
	1384, 861, 1536, 2068, 1383, 1905, 1175, 926, 927, 928,
	925, 2183, 1374, 1158, 1146, 1156, 2116, 926, 927, 928,
	925, 2925, 2885, 2183, 2107, 429, 429, 1211, 2109, 1214,
	2119, 2879, 2120, 2077, 2119, 2869, 2097, 2288, 2866, 173,
	156, 2864, 2781, 8, 173, 7, 2726, 2103, 990, 1196,
	1440, 926, 927, 928, 925, 2196, 2650, 2638, 2635, 2115,
	926, 927, 928, 925, 2572, 1381, 2570, 1381, 2555, 2554,
	2247, 2134, 2135, 2251, 2123, 2117, 2551, 2140, 2141, 1146,
	2287, 2550, 2258, 942, 943, 944, 945, 946, 947, 948,
	941, 2112, 2144, 2544, 2221, 2170, 2504, 153, 1205, 2225,
	1198, 1067, 2165, 926, 927, 928, 925, 2002, 2169, 2125,
	2106, 2173, 2092, 2091, 2090, 2020, 2021, 1210, 2110, 2111,
	1213, 1202, 2198, 2023, 2024, 1414, 2197, 2047, 2199, 2048,
	2246, 646, 2195, 2208, 2212, 2209, 2029, 1962, 2096, 1914,
	1880, 2244, 2184, 2185, 2186, 2187, 1809, 2250, 2046, 1315,
	926, 927, 928, 925, 2222, 2279, 1415, 2281, 2223, 2051,
	2052, 1422, 2255, 861, 2260, 2219, 153, 1573, 2243, 2327,
	1432, 926, 927, 928, 925, 1431, 2240, 2238, 2245, 2342,
	766, 429, 1259, 1225, 1203, 1754, 1023, 766, 2254, 1020,
	1019, 861, 861, 861, 1018, 1017, 2268, 1016, 1015, 1014,
	1536, 1808, 1680, 2366, 2269, 1013, 1012, 2277, 2278, 2370,
	2280, 2242, 1011, 1835, 1835, 1835, 2275, 1010, 2249, 2398,
	1009, 2401, 1008, 2401, 2401, 2282, 2283, 1007, 1006, 1005,
	2406, 1004, 1003, 2296, 2108, 1146, 1146, 2297, 2298, 2299,
	2300, 2318, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308,
	2312, 999, 998, 997, 2317, 994, 2320, 2213, 2214, 926,
	927, 928, 925, 987, 546, 110, 429, 986, 984, 983,
	110, 2327, 2364, 1997, 982, 981, 980, 2347, 979, 1437,
	1437, 766, 1144, 1144, 2396, 2397, 2361, 2088, 2365, 2354,
	2355, 978, 2346, 977, 2410, 2411, 976, 940, 939, 949,
	950, 942, 943, 944, 945, 946, 947, 948, 941, 975,
	974, 2369, 2322, 2402, 2403, 2371, 2372, 2404, 435, 2019,
	973, 110, 969, 968, 891, 848, 2434, 2435, 2459, 2552,
	1814, 766, 1393, 1394, 1797, 2045, 1397, 1398, 1399, 1400,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 2427, 2428,
	879, 2416, 2044, 2812, 2810, 2421, 2420, 2424, 926, 927,
	928, 925, 2374, 2765, 2043, 429, 2438, 2437, 2080, 1925,
	1611, 2224, 890, 2226, 2440, 926, 927, 928, 925, 2042,
	2442, 96, 2439, 2575, 2041, 2574, 2429, 926, 927, 928,
	925, 1415, 2189, 52, 2454, 2192, 1415, 2445, 2446, 2447,
	2193, 2441, 926, 927, 928, 925, 2373, 926, 927, 928,
	925, 2190, 2194, 2345, 1897, 1898, 2191, 2471, 764, 2573,
	2188, 2911, 110, 51, 2472, 650, 651, 652, 653, 2313,
	2314, 426, 2270, 2040, 2474, 431, 2473, 110, 649, 110,
	2477, 1971, 1965, 2055, 1519, 1437, 2485, 432, 2321, 1190,
	1960, 2508, 1734, 1735, 2290, 2037, 926, 927, 928, 925,
	1989, 1025, 1905, 1536, 2522, 940, 939, 949, 950, 942,
	943, 944, 945, 946, 947, 948, 941, 433, 926, 927,
	928, 925, 430, 2487, 1705, 1146, 1219, 1157, 1788, 2530,
	1574, 885, 2745, 2114, 2064, 1804, 429, 1451, 1565, 1430,
	2489, 1370, 1369, 2490, 2819, 2398, 1037, 1038, 1035, 1036,
	1883, 2524, 1522, 2036, 2503, 2502, 939, 949, 950, 942,
	943, 944, 945, 946, 947, 948, 941, 1437, 1033, 1034,
	2520, 861, 2533, 1031, 1032, 2521, 926, 927, 928, 925,
	1117, 1116, 2528, 917, 2396, 932, 933, 934, 935, 936,
	937, 938, 930, 2183, 2405, 2577, 2035, 173, 2444, 1027,
	2505, 2506, 2507, 1631, 1071, 2880, 2566, 2800, 2788, 2523,
	861, 2556, 2786, 2753, 2738, 2526, 2031, 2737, 2527, 926,
	927, 928, 925, 2561, 2735, 2563, 2727, 2661, 2660, 2602,
	2585, 2567, 2183, 2486, 2568, 2022, 2468, 2476, 2467, 926,
	927, 928, 925, 2565, 2000, 861, 1146, 1146, 2452, 2451,
	1030, 861, 2579, 2621, 1325, 649, 2621, 2217, 926, 927,
	928, 925, 1455, 2253, 2589, 2814, 2813, 926, 927, 928,
	925, 1799, 1687, 1835, 876, 2813, 2814, 926, 927, 928,
	925, 2603, 1893, 1896, 1897, 1898, 1894, 2546, 1895, 1899,
	2469, 861, 861, 1144, 2533, 861, 861, 2622, 2625, 2617,
	1086, 2624, 160, 3, 60, 2616, 2, 2524, 1559, 1150,
	1, 1453, 1423, 2658, 654, 2201, 650, 651, 652, 653,
	2202, 2662, 2663, 2639, 2640, 2595, 2443, 2648, 2649, 649,
	2636, 2204, 1649, 2655, 1881, 1789, 2647, 2341, 1062, 1118,
	686, 1120, 1376, 1124, 1125, 2687, 1244, 110, 110, 764,
	780, 2656, 870, 1241, 869, 2480, 867, 1327, 548, 1614,
	1888, 2166, 2482, 2657, 2699, 2632, 2633, 2818, 2549, 2380,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 2851, 861,
	2780, 1171, 2685, 1893, 1896, 1897, 1898, 1894, 2821, 1895,
	1899, 861, 1257, 2390, 532, 2729, 2694, 2671, 2784, 2673,
	2701, 2591, 2700, 1654, 922, 2239, 2383, 707, 584, 2709,
	559, 2716, 2712, 2378, 985, 1227, 1220, 2294, 2393, 2394,
	957, 695, 782, 2721, 2379, 558, 2501, 2073, 2702, 675,
	779, 708, 1598, 2669, 861, 1191, 1212, 1195, 2626, 2513,
	2739, 2356, 2754, 2093, 2921, 2734, 2732, 2910, 2892, 2878,
	2805, 2906, 2836, 2867, 2598, 2596, 2597, 2860, 2749, 2801,
	469, 2384, 1539, 416, 2748, 746, 2775, 2778, 2651, 1610,
	470, 2755, 1813, 2793, 2637, 673, 2760, 1796, 674, 2086,
	2085, 1296, 931, 733, 2779, 1313, 2770, 2771, 2772, 2773,
	2309, 2310, 2787, 966, 2789, 2790, 508, 1676, 2785, 2783,
	1415, 520, 2070, 2569, 2389, 2210, 2571, 59, 58, 57,
	56, 1580, 181, 550, 2799, 180, 2777, 2823, 530, 529,
	2576, 528, 2825, 527, 2811, 2809, 2808, 526, 1892, 1890,
	1889, 1531, 1530, 1578, 2824, 2815, 2407, 1853, 1847, 1489,
	2762, 861, 2713, 2714, 2543, 2829, 2151, 2539, 2535, 2414,
	2830, 2620, 2392, 1029, 1840, 2375, 2376, 2382, 2850, 1803,
	2839, 2841, 805, 2834, 801, 803, 735, 804, 802, 734,
	2849, 2853, 2008, 2004, 2858, 1832, 861, 1834, 1833, 2386,
	2352, 1745, 1744, 1742, 1741, 1045, 2859, 2863, 2686, 2865,
	2488, 1752, 1750, 2436, 2432, 2343, 2825, 2876, 1280, 1622,
	1420, 2385, 2387, 720, 2054, 861, 1532, 861, 2824, 2875,
	1528, 696, 1886, 1798, 87, 2882, 86, 2884, 2887, 94,
	137, 46, 1354, 165, 164, 2853, 861, 1280, 2888, 1280,
	2895, 167, 2902, 166, 163, 2905, 2899, 1939, 698, 1940,
	162, 1179, 161, 2623, 643, 37, 33, 2831, 1280, 12,
	2909, 11, 34, 21, 2916, 22, 20, 1248, 2920, 2919,
	19, 25, 31, 30, 2928, 103, 1155, 2684, 2931, 102,
	2933, 435, 2916, 2934, 29, 2932, 2395, 2920, 101, 100,
	99, 98, 28, 18, 2695, 41, 40, 39, 2381, 9,
	93, 91, 27, 92, 2391, 110, 89, 90, 719, 718,
	88, 71, 70, 69, 2711, 84, 83, 82, 81, 80,
	79, 77, 78, 706, 68, 717, 67, 66, 65, 64,
	75, 85, 76, 74, 694, 73, 72, 63, 62, 61,
	122, 123, 121, 120, 119, 697, 728, 118, 117, 116,
	42, 43, 821, 2883, 44, 45, 133, 132, 134, 136,
	2684, 138, 135, 130, 128, 131, 110, 129, 127, 724,
	110, 54, 17, 24, 4, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 1350, 0, 0, 0, 1347, 0,
	0, 110, 1349, 1346, 1348, 1352, 1353, 0, 0, 0,
	1351, 725, 729, 940, 939, 949, 950, 942, 943, 944,
	945, 946, 947, 948, 941, 0, 0, 0, 714, 0,
	712, 716, 732, 0, 0, 0, 713, 710, 709, 0,
	715, 700, 701, 699, 702, 703, 704, 705, 0, 730,
	731, 821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 727, 0, 0, 809, 940, 939, 949, 950,
	942, 943, 944, 945, 946, 947, 948, 941, 0, 0,
	2684, 0, 0, 0, 0, 829, 833, 835, 837, 839,
	840, 842, 0, 846, 843, 844, 845, 0, 722, 824,
	825, 826, 827, 807, 808, 830, 0, 810, 0, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 822,
	828, 0, 0, 0, 0, 0, 0, 0, 832, 834,
	836, 838, 841, 0, 0, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1357, 1358, 1359, 1360,
	1361, 1362, 1355, 1356, 809, 0, 0, 0, 799, 0,
	0, 0, 0, 2890, 0, 823, 0, 721, 0, 0,
	0, 0, 0, 0, 829, 833, 835, 837, 839, 840,
	842, 0, 846, 843, 844, 845, 0, 0, 824, 825,
	826, 827, 807, 808, 830, 0, 810, 0, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 822, 828,
	952, 2881, 956, 0, 0, 0, 0, 832, 834, 836,
	838, 841, 0, 2292, 0, 0, 0, 0, 953, 955,
	951, 0, 954, 940, 939, 949, 950, 942, 943, 944,
	945, 946, 947, 948, 941, 0, 0, 0, 0, 0,
	0, 1535, 0, 0, 823, 0, 0, 0, 0, 0,
	0, 940, 939, 949, 950, 942, 943, 944, 945, 946,
	947, 948, 941, 940, 939, 949, 950, 942, 943, 944,
	945, 946, 947, 948, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 2007, 0, 0, 0, 0, 0,
	0, 0, 1674, 0, 0, 0, 0, 110, 0, 0,
	110, 110, 0, 110, 352, 566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 940, 939, 949, 950,
	942, 943, 944, 945, 946, 947, 948, 941, 522, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 764, 557,
	0, 0, 344, 299, 0, 764, 0, 0, 614, 622,
	0, 0, 0, 0, 110, 0, 0, 0, 0, 0,
	515, 0, 0, 547, 591, 590, 534, 543, 0, 0,
	243, 179, 535, 0, 542, 536, 540, 539, 537, 538,
	0, 606, 0, 0, 0, 0, 0, 0, 506, 519,
	2681, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 516, 517, 0, 0, 0,
	0, 567, 0, 518, 0, 0, 562, 544, 545, 0,
	957, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 541,
	565, 569, 255, 628, 563, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	629, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 375, 0, 0, 612, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 564, 0, 335, 317,
	625, 507, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 610, 313, 0, 0, 624,
	605, 607, 608, 611, 615, 616, 617, 618, 619, 621,
	623, 627, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 1908, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 2682, 0, 0, 0, 2683,
	0, 626, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 568, 303, 304, 305, 306, 613, 0, 248, 399,
	328, 1517, 0, 0, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 821, 1519, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 635, 609, 634, 636, 637, 633, 638, 639, 620,
	525, 0, 572, 631, 630, 632, 0, 0, 681, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 598, 577, 578, 579, 524,
	580, 575, 576, 599, 570, 595, 596, 549, 573, 581,
	594, 582, 597, 600, 601, 640, 641, 588, 642, 585,
	602, 593, 592, 583, 571, 603, 604, 556, 551, 586,
	587, 574, 589, 552, 553, 554, 555, 809, 0, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 833, 835,
	837, 839, 840, 842, 0, 846, 843, 844, 845, 0,
	0, 824, 825, 826, 827, 807, 808, 830, 0, 810,
	0, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 822, 828, 0, 683, 0, 678, 0, 668, 0,
	832, 834, 836, 838, 841, 680, 679, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 1507, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 0, 823, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 1498, 1500,
	1502, 0, 1504, 1505, 1506, 1508, 1509, 1510, 1512, 1513,
	1514, 1515, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 665, 0, 0,
	0, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1535, 1535, 1535, 1535, 0, 667,
	0, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 684, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 670, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 110, 0,
	1501, 0, 0, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 682, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 0, 261,
	0, 0, 285, 0, 0, 0, 557, 0, 0, 344,
	299, 0, 0, 0, 0, 614, 622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	547, 591, 590, 534, 543, 0, 0, 243, 179, 535,
	0, 542, 536, 540, 539, 537, 538, 0, 606, 110,
	0, 831, 0, 0, 0, 506, 519, 0, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 1535, 0, 0, 0, 567, 0,
	518, 0, 0, 562, 544, 545, 0, 0, 0, 110,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 541, 565, 569, 255,
	628, 563, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 629, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 0, 0, 0, 375,
	0, 0, 612, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 564, 0, 335, 317, 625, 507, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 1378, 1377, 1379, 387, 268, 226,
	227, 422, 610, 313, 0, 0, 624, 605, 607, 608,
	611, 615, 616, 617, 618, 619, 621, 623, 627, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 626, 0,
	0, 0, 379, 0, 0, 0, 0, 1535, 568, 303,
	304, 305, 306, 613, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 635, 609,
	634, 636, 637, 633, 638, 639, 620, 525, 0, 572,
	631, 630, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 598, 577, 578, 579, 524, 580, 575, 576,
	599, 570, 595, 596, 549, 573, 581, 594, 582, 597,
	600, 601, 640, 641, 588, 642, 585, 602, 593, 592,
	583, 571, 603, 604, 556, 551, 586, 587, 574, 589,
	552, 553, 554, 555, 352, 566, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 557,
	0, 0, 344, 299, 0, 0, 0, 0, 614, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 0, 547, 591, 590, 534, 543, 0, 0,
	243, 179, 535, 0, 542, 536, 540, 539, 537, 538,
	0, 606, 0, 0, 0, 0, 0, 0, 506, 519,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 0, 0, 0,
	0, 567, 0, 518, 0, 0, 562, 544, 545, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 541,
	565, 569, 255, 628, 563, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	629, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 375, 0, 0, 612, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 564, 0, 335, 317,
	625, 507, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 610, 313, 0, 0, 624,
	605, 607, 608, 611, 615, 616, 617, 618, 619, 621,
	623, 627, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 2682, 0, 0, 0, 2683,
	0, 626, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 568, 303, 304, 305, 306, 613, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 635, 609, 634, 636, 637, 633, 638, 639, 620,
	525, 0, 572, 631, 630, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 598, 577, 578, 579, 524,
	580, 575, 576, 599, 570, 595, 596, 549, 573, 581,
	594, 582, 597, 600, 601, 640, 641, 588, 642, 585,
	602, 593, 592, 583, 571, 603, 604, 556, 551, 586,
	587, 574, 589, 552, 553, 554, 555, 352, 566, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 261, 1416, 0, 285, 0,
	0, 0, 557, 0, 0, 344, 299, 0, 0, 0,
	0, 614, 622, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 515, 0, 0, 547, 591, 590, 534,
	543, 0, 0, 243, 179, 535, 0, 542, 536, 540,
	539, 537, 538, 0, 606, 0, 0, 0, 0, 0,
	0, 506, 519, 0, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 517,
	0, 0, 0, 0, 567, 0, 518, 0, 0, 1550,
	544, 545, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 541, 565, 569, 255, 628, 563, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 629, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 375, 0, 0, 612, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 564,
	0, 335, 317, 625, 507, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 610, 313,
	0, 0, 624, 605, 607, 608, 611, 615, 616, 617,
	618, 619, 621, 623, 627, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 626, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 568, 303, 304, 305, 306, 613,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 635, 609, 634, 636, 637, 633,
	638, 639, 620, 525, 0, 572, 631, 630, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 598, 577,
	578, 579, 524, 580, 575, 576, 599, 570, 595, 596,
	549, 573, 581, 594, 582, 597, 600, 601, 640, 641,
	588, 642, 585, 602, 593, 592, 583, 571, 603, 604,
	556, 551, 586, 587, 574, 589, 552, 553, 554, 555,
	156, 352, 566, 383, 384, 385, 407, 369, 0, 419,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 0, 261,
	0, 0, 285, 0, 0, 0, 960, 0, 0, 344,
	299, 0, 0, 0, 0, 614, 622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	547, 591, 590, 534, 543, 0, 0, 243, 179, 535,
	0, 542, 536, 540, 539, 537, 538, 0, 606, 0,
	0, 0, 0, 0, 0, 506, 519, 0, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 0, 0, 0, 0, 567, 0,
	518, 0, 0, 562, 544, 545, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 541, 565, 569, 255,
	628, 563, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 629, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 0, 0, 0, 375,
	0, 0, 612, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 564, 0, 335, 317, 625, 507, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 610, 313, 0, 0, 624, 605, 607, 608,
	611, 615, 616, 617, 618, 619, 621, 623, 627, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 626, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 568, 303,
	304, 305, 306, 613, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 635, 609,
	634, 636, 637, 633, 638, 639, 620, 525, 0, 572,
	631, 630, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 126,
	327, 266, 598, 577, 578, 579, 524, 580, 575, 576,
	599, 570, 595, 596, 549, 573, 581, 594, 582, 597,
	600, 601, 640, 641, 588, 642, 585, 602, 593, 592,
	583, 571, 603, 604, 556, 551, 586, 587, 574, 589,
	552, 553, 554, 555, 352, 566, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 261, 2889, 0, 285, 0, 0, 0, 557,
	0, 0, 344, 299, 0, 0, 0, 0, 614, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 0, 547, 591, 590, 534, 543, 0, 0,
	243, 179, 535, 0, 542, 536, 540, 539, 537, 538,
	0, 606, 0, 0, 0, 0, 0, 0, 506, 519,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 0, 0, 0,
	0, 567, 0, 518, 0, 0, 562, 544, 545, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 541,
	565, 569, 255, 628, 563, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	629, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 375, 0, 0, 612, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 564, 0, 335, 317,
	625, 507, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 610, 313, 0, 0, 624,
	605, 607, 608, 611, 615, 616, 617, 618, 619, 621,
	623, 627, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 626, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 568, 303, 304, 305, 306, 613, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 635, 609, 634, 636, 637, 633, 638, 639, 620,
	525, 0, 572, 631, 630, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 598, 577, 578, 579, 524,
	580, 575, 576, 599, 570, 595, 596, 549, 573, 581,
	594, 582, 597, 600, 601, 640, 641, 588, 642, 585,
	602, 593, 592, 583, 571, 603, 604, 556, 551, 586,
	587, 574, 589, 552, 553, 554, 555, 352, 566, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 261, 1416, 0, 285, 0,
	0, 0, 557, 0, 0, 344, 299, 0, 0, 0,
	0, 614, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 0, 0, 547, 591, 590, 534,
	543, 0, 0, 243, 179, 535, 0, 542, 536, 540,
	539, 537, 538, 0, 606, 0, 0, 0, 0, 0,
	0, 506, 519, 0, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 517,
	0, 0, 0, 0, 567, 0, 518, 0, 0, 562,
	544, 545, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 541, 565, 569, 255, 628, 563, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 629, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 375, 0, 0, 612, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 564,
	0, 335, 317, 625, 507, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 610, 313,
	0, 0, 624, 605, 607, 608, 611, 615, 616, 617,
	618, 619, 621, 623, 627, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 626, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 568, 303, 304, 305, 306, 613,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 635, 609, 634, 636, 637, 633,
	638, 639, 620, 525, 0, 572, 631, 630, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 598, 577,
	578, 579, 524, 580, 575, 576, 599, 570, 595, 596,
	549, 573, 581, 594, 582, 597, 600, 601, 640, 641,
	588, 642, 585, 602, 593, 592, 583, 571, 603, 604,
	556, 551, 586, 587, 574, 589, 552, 553, 554, 555,
	352, 566, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 557, 0, 0, 344, 299,
	0, 0, 0, 0, 614, 622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 0, 0, 547,
	591, 590, 534, 543, 0, 0, 243, 179, 535, 0,
	542, 536, 540, 539, 537, 538, 0, 606, 0, 0,
	0, 0, 0, 0, 506, 519, 0, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 517, 1174, 0, 0, 0, 567, 0, 518,
	0, 0, 562, 544, 545, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 541, 565, 569, 255, 628,
	563, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 629, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 0, 375, 0,
	0, 612, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 564, 0, 335, 317, 625, 507, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 610, 313, 0, 0, 624, 605, 607, 608, 611,
	615, 616, 617, 618, 619, 621, 623, 627, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 626, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 568, 303, 304,
	305, 306, 613, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 635, 609, 634,
	636, 637, 633, 638, 639, 620, 525, 0, 572, 631,
	630, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 598, 577, 578, 579, 524, 580, 575, 576, 599,
	570, 595, 596, 549, 573, 581, 594, 582, 597, 600,
	601, 640, 641, 588, 642, 585, 602, 593, 592, 583,
	571, 603, 604, 556, 551, 586, 587, 574, 589, 552,
	553, 554, 555, 0, 0, 0, 383, 384, 385, 407,
	369, 0, 419, 352, 566, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	0, 261, 0, 0, 285, 0, 0, 0, 557, 0,
	0, 344, 299, 0, 0, 0, 0, 614, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 547, 591, 590, 534, 543, 0, 0, 243,
	179, 535, 0, 542, 536, 540, 539, 537, 538, 0,
	606, 0, 0, 0, 0, 0, 0, 506, 519, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 517, 0, 0, 0, 0,
	567, 0, 518, 0, 0, 562, 544, 545, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 541, 565,
	569, 255, 628, 563, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 629,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	0, 375, 0, 0, 612, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 564, 0, 335, 317, 625,
	507, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 610, 313, 0, 0, 624, 605,
	607, 608, 611, 615, 616, 617, 618, 619, 621, 623,
	627, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	568, 303, 304, 305, 306, 613, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	635, 609, 634, 636, 637, 633, 638, 639, 620, 525,
	0, 572, 631, 630, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 598, 577, 578, 579, 524, 580,
	575, 576, 599, 570, 595, 596, 549, 573, 581, 594,
	582, 597, 600, 601, 640, 641, 588, 642, 585, 602,
	593, 592, 583, 571, 603, 604, 556, 551, 586, 587,
	574, 589, 552, 553, 554, 555, 352, 566, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 557, 0, 0, 344, 299, 0, 0, 0, 0,
	614, 622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 0, 0, 547, 591, 590, 534, 543,
	0, 0, 243, 179, 535, 0, 542, 536, 540, 539,
	537, 538, 0, 606, 0, 0, 0, 0, 0, 0,
	506, 519, 0, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 517, 0,
	0, 0, 0, 567, 0, 518, 0, 0, 562, 544,
	545, 0, 0, 0, 0, 234, 349, 365, 244, 340,
	378, 249, 347, 239, 314, 337, 0, 0, 236, 363,
	346, 296, 279, 280, 235, 0, 332, 259, 272, 256,
	312, 541, 565, 569, 255, 628, 563, 373, 238, 0,
	372, 311, 359, 364, 297, 291, 237, 361, 295, 290,
	283, 263, 629, 276, 323, 289, 324, 277, 301, 300,
	302, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 0, 375, 0, 0, 612, 0, 0,
	0, 348, 0, 0, 284, 0, 0, 0, 564, 0,
	335, 317, 625, 507, 0, 333, 287, 360, 325, 366,
	350, 374, 329, 326, 229, 351, 258, 298, 240, 242,
	254, 260, 262, 264, 265, 307, 308, 320, 339, 353,
	354, 355, 257, 250, 334, 251, 274, 252, 230, 341,
	253, 232, 321, 358, 0, 270, 330, 294, 233, 293,
	322, 357, 356, 241, 382, 388, 389, 394, 0, 395,
	0, 0, 0, 403, 408, 409, 410, 412, 413, 414,
	415, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 387, 268, 226, 227, 422, 610, 313, 0,
	0, 624, 605, 607, 608, 611, 615, 616, 617, 618,
	619, 621, 623, 627, 421, 0, 0, 0, 0, 0,
	420, 319, 0, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 368, 380, 398,
	401, 0, 0, 0, 231, 400, 0, 0, 0, 0,
	0, 0, 0, 626, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 568, 303, 304, 305, 306, 613, 0,
	248, 399, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 267, 273, 411, 275, 247, 318, 269, 377, 281,
	0, 404, 0, 405, 0, 0, 0, 0, 310, 278,
	342, 282, 288, 331, 376, 316, 336, 245, 367, 343,
	292, 0, 0, 635, 609, 634, 636, 637, 633, 638,
	639, 620, 525, 0, 572, 631, 630, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 286, 0, 327, 266, 598, 577, 578,
	579, 524, 580, 575, 576, 599, 570, 595, 596, 549,
	573, 581, 594, 582, 597, 600, 601, 640, 641, 588,
	642, 585, 602, 593, 592, 583, 571, 603, 604, 556,
	551, 586, 587, 574, 589, 552, 553, 554, 555, 352,
	566, 0, 383, 384, 385, 407, 369, 0, 419, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 522, 0, 0, 0, 261, 0, 0,
	285, 0, 0, 0, 557, 0, 0, 344, 299, 0,
	0, 0, 0, 614, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 0, 0, 547, 591,
	590, 534, 543, 0, 0, 243, 179, 535, 0, 542,
	536, 540, 539, 537, 538, 0, 606, 0, 0, 0,
	0, 0, 0, 0, 519, 0, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 517, 0, 0, 0, 0, 567, 0, 518, 0,
	0, 562, 544, 545, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 541, 565, 569, 255, 628, 563,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 629, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 0, 0, 0, 375, 0, 0,
	612, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 564, 0, 335, 317, 625, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 1298, 1299,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	610, 313, 0, 0, 624, 605, 607, 608, 611, 615,
	616, 617, 618, 619, 621, 623, 627, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 626, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 568, 303, 304, 305,
	306, 613, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 635, 609, 634, 636,
	637, 633, 638, 639, 620, 525, 0, 572, 631, 630,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	598, 577, 578, 579, 524, 580, 575, 576, 599, 570,
	595, 596, 549, 573, 581, 594, 582, 597, 600, 601,
	640, 641, 588, 642, 585, 602, 593, 592, 583, 571,
	603, 604, 556, 551, 586, 587, 574, 589, 552, 553,
	554, 555, 352, 566, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 557, 0, 0,
	344, 299, 0, 0, 0, 0, 614, 622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 591, 590, 534, 543, 0, 0, 243, 179,
	535, 0, 542, 536, 540, 539, 537, 538, 0, 606,
	0, 0, 0, 0, 0, 0, 506, 519, 0, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 517, 0, 0, 0, 0, 567,
	0, 518, 0, 0, 562, 544, 545, 0, 0, 0,
	0, 234, 349, 365, 244, 340, 378, 249, 347, 239,
	314, 337, 0, 0, 236, 363, 346, 296, 279, 280,
	235, 0, 332, 259, 272, 256, 312, 541, 565, 569,
	255, 628, 563, 373, 238, 0, 372, 311, 359, 364,
	297, 291, 237, 361, 295, 290, 283, 263, 629, 276,
	323, 289, 324, 277, 301, 300, 302, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	375, 0, 0, 612, 0, 0, 0, 348, 0, 0,
	284, 0, 0, 0, 564, 0, 335, 317, 625, 507,
	0, 333, 287, 360, 325, 366, 350, 374, 329, 326,
	229, 351, 258, 298, 240, 242, 254, 260, 262, 264,
	265, 307, 308, 320, 339, 353, 354, 355, 257, 250,
	334, 251, 274, 252, 230, 341, 253, 232, 321, 358,
	0, 270, 330, 294, 233, 293, 322, 357, 356, 241,
	382, 388, 389, 394, 0, 395, 0, 0, 0, 403,
	408, 409, 410, 412, 413, 414, 415, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 387, 268,
	226, 227, 422, 610, 313, 0, 0, 624, 605, 607,
	608, 611, 615, 616, 617, 618, 619, 621, 623, 627,
	421, 0, 0, 0, 0, 0, 420, 319, 0, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 368, 380, 398, 401, 0, 0, 0,
	231, 400, 0, 0, 0, 0, 0, 0, 0, 626,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 568,
	303, 304, 305, 306, 613, 0, 248, 399, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 267, 273, 411,
	275, 247, 318, 269, 377, 281, 0, 404, 0, 405,
	0, 0, 0, 0, 310, 278, 342, 282, 288, 331,
	376, 316, 336, 245, 367, 343, 292, 0, 0, 635,
	609, 634, 636, 637, 633, 638, 639, 620, 525, 0,
	572, 631, 630, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 286,
	0, 327, 266, 598, 577, 578, 579, 524, 580, 575,
	576, 599, 570, 595, 596, 549, 573, 581, 594, 582,
	597, 600, 601, 640, 641, 588, 642, 585, 602, 593,
	592, 583, 571, 603, 604, 556, 551, 586, 587, 574,
	589, 552, 553, 554, 555, 352, 566, 0, 383, 384,
	385, 407, 369, 0, 419, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	0, 0, 0, 261, 0, 0, 285, 0, 0, 0,
	557, 0, 0, 344, 299, 0, 0, 0, 0, 614,
	622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 0, 0, 547, 591, 590, 534, 543, 0,
	0, 243, 179, 535, 0, 542, 536, 540, 539, 537,
	538, 0, 606, 0, 0, 0, 0, 0, 0, 0,
	519, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 517, 0, 0,
	0, 0, 567, 0, 518, 0, 0, 562, 544, 545,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	541, 565, 569, 255, 628, 563, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 629, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 0, 375, 0, 0, 612, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 564, 0, 335,
	317, 625, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 610, 313, 0, 0,
	624, 605, 607, 608, 611, 615, 616, 617, 618, 619,
	621, 623, 627, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 626, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 568, 303, 304, 305, 306, 613, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 635, 609, 634, 636, 637, 633, 638, 639,
	620, 525, 0, 572, 631, 630, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 598, 577, 578, 579,
	524, 580, 575, 576, 599, 570, 595, 596, 549, 573,
	581, 594, 582, 597, 600, 601, 640, 641, 588, 642,
	585, 602, 593, 592, 583, 571, 603, 604, 556, 551,
	586, 587, 574, 589, 552, 553, 554, 555, 0, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 156, 352,
	49, 148, 125, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 141, 0, 261, 0, 150,
	285, 0, 0, 0, 108, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 153, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 124, 147, 154, 0,
	95, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	171, 0, 0, 0, 348, 0, 0, 284, 146, 140,
	139, 391, 0, 335, 317, 55, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 142, 143, 144, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 370,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 174, 0, 0, 0, 182, 0, 0,
	0, 145, 0, 183, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 126, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 0, 0, 0, 383, 384, 385, 407, 369,
	352, 184, 38, 172, 175, 177, 176, 0, 47, 5,
	0, 315, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 344, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 991, 0, 0, 178,
	0, 0, 534, 543, 0, 0, 243, 179, 535, 0,
	542, 536, 540, 539, 537, 538, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 0, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 541, 362, 390, 255, 381,
	0, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 406, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 391, 0, 335, 317, 0, 0, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 386, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 396, 303, 304,
	305, 306, 271, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 0, 0, 0, 383, 384, 385, 407,
	369, 0, 419, 156, 352, 49, 148, 125, 0, 0,
	0, 0, 0, 0, 0, 315, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 344, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 0,
	362, 390, 255, 381, 0, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	406, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 391, 0, 335, 317,
	0, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 386, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 396, 303, 304, 305, 306, 440, 442, 248, 399,
	328, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 126, 327, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 352, 0, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 821, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 809,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 1774,
	1776, 1777, 1778, 1779, 1780, 1781, 0, 1785, 1782, 1783,
	1784, 312, 0, 1769, 1770, 1771, 1772, 807, 1755, 1775,
	0, 1756, 311, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1773, 323, 289, 324, 277, 301,
	300, 302, 832, 834, 836, 838, 841, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 1768,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 831, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 344, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 1842, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 0, 362, 390, 255, 381,
	0, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 406, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 375, 0,
	0, 0, 1841, 0, 1840, 348, 1838, 1843, 284, 0,
	0, 0, 391, 0, 335, 317, 0, 0, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 1844, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 386, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 396, 303, 304,
	305, 306, 271, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 352, 0, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 0, 0,
	0, 261, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 1583, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 926, 927, 928, 925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 745, 0, 285, 0, 0,
	0, 0, 0, 0, 344, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 753, 754, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 349, 365, 244, 340,
	378, 249, 347, 239, 314, 337, 0, 0, 236, 363,
	346, 296, 279, 280, 235, 0, 332, 259, 272, 256,
	312, 0, 362, 390, 255, 381, 735, 373, 238, 734,
	372, 311, 359, 364, 297, 291, 237, 361, 295, 290,
	283, 263, 406, 276, 323, 289, 324, 277, 301, 300,
	302, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 284, 0, 0, 0, 391, 0,
	335, 317, 0, 0, 0, 333, 287, 360, 325, 366,
	350, 374, 743, 326, 229, 351, 258, 298, 240, 242,
	254, 260, 262, 264, 265, 307, 308, 320, 339, 353,
	354, 355, 257, 250, 334, 251, 274, 252, 230, 341,
	253, 232, 321, 358, 0, 270, 330, 294, 233, 293,
	322, 357, 356, 241, 382, 388, 389, 394, 0, 395,
	0, 0, 0, 403, 408, 409, 410, 412, 413, 414,
	415, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 387, 268, 226, 227, 422, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 386,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	420, 319, 0, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 368, 380, 398,
	401, 0, 0, 0, 231, 400, 0, 0, 0, 0,
	0, 0, 744, 371, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 747, 303, 304, 305, 306, 271, 0,
	248, 399, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 267, 273, 411, 275, 247, 318, 269, 377, 281,
	0, 404, 0, 405, 0, 0, 0, 0, 755, 750,
	751, 282, 288, 331, 376, 316, 336, 245, 367, 343,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 286, 0, 327, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 156,
	352, 0, 383, 384, 385, 407, 369, 0, 419, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 108, 0, 0, 344, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 1626, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 0, 362, 390, 255, 381,
	0, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 406, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 391, 0, 335, 317, 0, 0, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 386, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 396, 303, 304,
	305, 306, 271, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 126, 327,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 156, 352, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 108,
	0, 0, 344, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 1617, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 0,
	362, 390, 255, 381, 0, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	406, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 391, 0, 335, 317,
	0, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 386, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 396, 303, 304, 305, 306, 271, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 126, 327, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 156, 352, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 108, 0, 0, 344, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 0, 362, 390, 255, 381, 0, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 406, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	391, 0, 335, 317, 0, 0, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 386, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 396, 303, 304, 305, 306,
	271, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 286, 126, 327, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 352, 0, 0, 383, 384, 385, 407, 369, 0,
	419, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 285, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 753, 754, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 735, 373, 238, 734, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 755, 750, 751, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 2176, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 344, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 0,
	362, 390, 255, 381, 0, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	406, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 2179, 0, 0, 2178, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 391, 0, 335, 317,
	0, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 386, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 396, 303, 304, 305, 306, 271, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 352, 0, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 1149, 0, 285, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 1147,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1145,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 1143,
	0, 285, 0, 0, 0, 0, 0, 0, 344, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1147, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1145, 0, 0, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 0, 362, 390, 255, 381,
	0, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 406, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 391, 0, 335, 317, 0, 0, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 386, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 396, 303, 304,
	305, 306, 271, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 352, 0, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2820, 0, 178, 591, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 344, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 1147, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2534, 0,
	0, 0, 0, 0, 0, 234, 349, 365, 244, 340,
	378, 249, 347, 239, 314, 337, 0, 0, 236, 363,
	346, 296, 279, 280, 235, 0, 332, 259, 272, 256,
	312, 0, 362, 390, 255, 381, 0, 373, 238, 0,
	372, 311, 359, 364, 297, 291, 237, 361, 295, 290,
	283, 263, 406, 276, 323, 289, 324, 277, 301, 300,
	302, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 284, 0, 0, 0, 391, 0,
	335, 317, 0, 0, 0, 333, 287, 360, 325, 366,
	350, 374, 329, 326, 229, 351, 258, 298, 240, 242,
	254, 260, 262, 264, 265, 307, 308, 320, 339, 353,
	354, 355, 257, 250, 334, 251, 274, 252, 230, 341,
	253, 232, 321, 358, 0, 270, 330, 294, 233, 293,
	322, 357, 356, 241, 382, 388, 389, 394, 0, 395,
	0, 0, 0, 403, 408, 409, 410, 412, 413, 414,
	415, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 387, 268, 226, 227, 422, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 386,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	420, 319, 0, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 368, 380, 398,
	401, 0, 0, 0, 231, 400, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 396, 303, 304, 305, 306, 271, 0,
	248, 399, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 267, 273, 411, 275, 247, 318, 269, 377, 281,
	0, 404, 0, 405, 0, 0, 0, 0, 310, 278,
	342, 282, 288, 331, 376, 316, 336, 245, 367, 343,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 286, 0, 327, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 352,
	0, 0, 383, 384, 385, 407, 369, 0, 419, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	285, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1147, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1145, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1904, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	344, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 1906, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 349, 365, 244, 340, 378, 249, 347, 239,
	314, 337, 0, 0, 236, 363, 346, 296, 279, 280,
	235, 0, 332, 259, 272, 256, 312, 0, 362, 390,
	255, 381, 0, 373, 238, 0, 372, 311, 359, 364,
	297, 291, 237, 361, 295, 290, 283, 263, 406, 276,
	323, 289, 324, 277, 301, 300, 302, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	284, 0, 0, 0, 391, 0, 335, 317, 0, 0,
	0, 333, 287, 360, 325, 366, 350, 374, 329, 326,
	229, 351, 258, 298, 240, 242, 254, 260, 262, 264,
	265, 307, 308, 320, 339, 353, 354, 355, 257, 250,
	334, 251, 274, 252, 230, 341, 253, 232, 321, 358,
	0, 270, 330, 294, 233, 293, 322, 357, 356, 241,
	382, 388, 389, 394, 0, 395, 0, 0, 0, 403,
	408, 409, 410, 412, 413, 414, 415, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 387, 268,
	226, 227, 422, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 386, 0, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 420, 319, 0, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 368, 380, 398, 401, 0, 0, 0,
	231, 400, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 396,
	303, 304, 305, 306, 271, 0, 248, 399, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 267, 273, 411,
	275, 247, 318, 269, 377, 281, 0, 404, 0, 405,
	0, 0, 0, 0, 310, 278, 342, 282, 288, 331,
	376, 316, 336, 245, 367, 343, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 286,
	0, 327, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 352, 0, 0, 383, 384,
	385, 407, 369, 0, 419, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 1919, 0, 285, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1147, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 344, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2898, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 0, 362, 390, 255, 381, 0, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 406, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	391, 0, 335, 317, 0, 0, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 386, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 396, 303, 304, 305, 306,
	271, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 286, 0, 327, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 352, 0, 0, 383, 384, 385, 407, 369, 0,
	419, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 285, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 591, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 0, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 344, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2835, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 0,
	362, 390, 255, 381, 0, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	406, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 391, 0, 335, 317,
	0, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 386, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 396, 303, 304, 305, 306, 271, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 352, 0, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 2776,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 344, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2615, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 0, 362, 390, 255, 381,
	0, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 406, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 391, 0, 335, 317, 0, 0, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 386, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 396, 303, 304,
	305, 306, 271, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 352, 0, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 2659, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 344, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 349, 365, 244, 340,
	378, 249, 347, 239, 314, 337, 0, 0, 236, 363,
	346, 296, 279, 280, 235, 0, 332, 259, 272, 256,
	312, 0, 362, 390, 255, 381, 0, 373, 238, 0,
	372, 311, 359, 364, 297, 291, 237, 361, 295, 290,
	283, 263, 406, 276, 323, 289, 324, 277, 301, 300,
	302, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 284, 0, 0, 0, 391, 0,
	335, 317, 0, 0, 0, 333, 287, 360, 325, 366,
	350, 374, 329, 326, 229, 351, 258, 298, 240, 242,
	254, 260, 262, 264, 265, 307, 308, 320, 339, 353,
	354, 355, 257, 250, 334, 251, 274, 252, 230, 341,
	253, 232, 321, 358, 0, 270, 330, 294, 233, 293,
	322, 357, 356, 241, 382, 388, 389, 394, 0, 395,
	0, 0, 0, 403, 408, 409, 410, 412, 413, 414,
	415, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 387, 268, 226, 227, 422, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 386,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	420, 319, 0, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 368, 380, 398,
	401, 0, 0, 0, 231, 400, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 396, 303, 304, 305, 306, 271, 0,
	248, 399, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 267, 273, 411, 275, 247, 318, 269, 377, 281,
	0, 404, 0, 405, 0, 0, 0, 0, 310, 278,
	342, 282, 288, 331, 376, 316, 336, 245, 367, 343,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 286, 0, 327, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 352,
	0, 0, 383, 384, 385, 407, 369, 0, 419, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	285, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	344, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 349, 365, 244, 340, 378, 249, 347, 239,
	314, 337, 0, 0, 236, 363, 346, 296, 279, 280,
	235, 0, 332, 259, 272, 256, 312, 0, 362, 390,
	255, 381, 0, 373, 238, 0, 372, 311, 359, 364,
	297, 291, 237, 361, 295, 290, 283, 263, 406, 276,
	323, 289, 324, 277, 301, 300, 302, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	284, 0, 0, 0, 391, 0, 335, 317, 0, 0,
	0, 333, 287, 360, 325, 366, 350, 374, 329, 326,
	229, 351, 258, 298, 240, 242, 254, 260, 262, 264,
	265, 307, 308, 320, 339, 353, 354, 355, 257, 250,
	334, 251, 274, 252, 230, 341, 253, 232, 321, 358,
	0, 270, 330, 294, 233, 293, 322, 357, 356, 241,
	382, 388, 389, 394, 0, 395, 0, 0, 0, 403,
	408, 409, 410, 412, 413, 414, 415, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 387, 268,
	226, 227, 422, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 386, 0, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 420, 319, 0, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 368, 380, 398, 401, 0, 0, 0,
	231, 400, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 396,
	303, 304, 305, 306, 271, 0, 248, 399, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 267, 273, 411,
	275, 247, 318, 269, 377, 281, 0, 404, 0, 405,
	0, 0, 0, 0, 310, 278, 342, 282, 288, 331,
	376, 316, 336, 245, 367, 343, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 286,
	0, 327, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 352, 0, 0, 383, 384,
	385, 407, 369, 0, 419, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 2326, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 344, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 0, 362, 390, 255, 381, 0, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 406, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	391, 0, 335, 317, 0, 0, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 386, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 396, 303, 304, 305, 306,
	271, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 286, 0, 327, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 352, 0, 0, 383, 384, 385, 407, 369, 0,
	419, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 285, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 1147, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 0, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 344, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 1906, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 0,
	362, 390, 255, 381, 0, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	406, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 391, 0, 335, 317,
	0, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 386, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 396, 303, 304, 305, 306, 271, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 352, 0, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 344, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 0, 362, 390, 255, 381,
	0, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 406, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 391, 0, 335, 317, 0, 0, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 386, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 396, 303, 304,
	305, 306, 271, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 352, 0, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 1932, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 0, 0, 0, 383,
	384, 385, 407, 369, 352, 419, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 344, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 0,
	362, 390, 255, 381, 0, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	406, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 391, 0, 335, 317,
	0, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 386, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 396, 303, 304, 305, 306, 271, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 352, 0, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 1147,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 1459, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 344, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 0, 362, 390, 255, 381,
	0, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 406, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 1170, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 391, 0, 335, 317, 0, 0, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 386, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 396, 303, 304,
	305, 306, 271, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 352, 0, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 691, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 344, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 349, 365, 244, 340,
	378, 249, 347, 239, 314, 337, 0, 0, 236, 363,
	346, 296, 279, 280, 235, 0, 332, 259, 272, 256,
	312, 0, 362, 390, 255, 381, 0, 373, 238, 0,
	372, 311, 359, 364, 297, 291, 237, 361, 295, 290,
	283, 263, 406, 276, 323, 289, 324, 277, 301, 300,
	302, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 284, 0, 0, 0, 391, 0,
	335, 317, 0, 0, 0, 333, 287, 360, 325, 366,
	350, 374, 460, 326, 229, 351, 258, 298, 240, 242,
	254, 260, 262, 264, 265, 307, 308, 320, 339, 353,
	354, 355, 257, 250, 334, 251, 274, 252, 230, 341,
	253, 232, 321, 358, 0, 270, 330, 294, 233, 293,
	322, 357, 356, 241, 382, 388, 389, 394, 0, 395,
	0, 0, 0, 403, 408, 409, 410, 412, 413, 414,
	415, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 387, 268, 226, 227, 422, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 386,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	420, 319, 0, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 368, 380, 398,
	401, 0, 0, 0, 231, 400, 0, 0, 0, 0,
	0, 0, 461, 371, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 396, 303, 304, 305, 306, 271, 0,
	248, 399, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 267, 273, 411, 275, 247, 318, 269, 377, 281,
	0, 404, 0, 405, 0, 0, 0, 0, 310, 278,
	342, 282, 288, 331, 376, 316, 336, 245, 367, 343,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 286, 0, 327, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 352,
	0, 0, 383, 384, 385, 407, 369, 0, 419, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	285, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	344, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 349, 365, 244, 340, 378, 249, 347, 239,
	314, 337, 0, 0, 236, 363, 346, 296, 279, 280,
	235, 0, 332, 259, 272, 256, 312, 0, 362, 390,
	255, 381, 0, 373, 238, 0, 372, 311, 359, 364,
	297, 291, 237, 361, 295, 290, 283, 263, 406, 276,
	323, 289, 324, 277, 301, 300, 302, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	284, 0, 0, 0, 391, 0, 335, 317, 0, 0,
	0, 333, 287, 360, 325, 366, 350, 374, 329, 326,
	229, 351, 258, 298, 240, 242, 254, 260, 262, 264,
	265, 307, 308, 320, 339, 353, 354, 355, 257, 250,
	334, 251, 274, 252, 230, 341, 253, 232, 321, 358,
	0, 270, 330, 294, 233, 293, 322, 357, 356, 241,
	382, 388, 389, 394, 0, 395, 0, 0, 0, 403,
	408, 409, 410, 412, 413, 414, 415, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 387, 268,
	226, 227, 422, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 386, 0, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 420, 319, 0, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 368, 380, 398, 401, 0, 0, 0,
	231, 400, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 396,
	303, 304, 305, 306, 271, 0, 248, 399, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 267, 273, 411,
	275, 247, 318, 269, 377, 281, 0, 404, 0, 405,
	0, 0, 0, 0, 310, 278, 342, 282, 288, 331,
	376, 316, 336, 245, 367, 343, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 286,
	0, 327, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 352, 0, 0, 383, 384,
	385, 407, 369, 0, 419, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 344, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 0, 362, 390, 255, 381, 0, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 406, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	391, 0, 335, 317, 0, 0, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 501, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 386, 0, 0, 0, 0, 421, 0, 1517, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 1519, 0, 0, 371, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 396, 303, 304, 305, 306,
	271, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	926, 927, 928, 925, 0, 0, 0, 0, 0, 1499,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 156, 405, 49, 148, 125, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 149, 0, 0, 0, 0, 0,
	0, 141, 0, 0, 0, 150, 221, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 1354,
	0, 153, 0, 228, 0, 286, 0, 327, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 0, 0, 0, 383, 384, 385, 407, 369, 0,
	419, 1493, 1492, 0, 0, 1491, 0, 0, 1517, 0,
	1503, 0, 0, 0, 112, 113, 0, 114, 115, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 1519, 0, 0, 1498, 1500, 1502, 0, 1504,
	1505, 1506, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 124, 147, 154, 0, 95, 0, 0, 0,
	0, 1350, 0, 0, 1517, 1347, 0, 1518, 0, 1349,
	1346, 1348, 1352, 1353, 146, 140, 139, 1351, 0, 0,
	0, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 0, 480, 0,
	479, 486, 476, 0, 0, 1499, 0, 0, 0, 142,
	143, 144, 483, 484, 0, 485, 489, 0, 0, 471,
	1511, 0, 0, 0, 0, 0, 0, 1501, 0, 494,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 145, 498, 105,
	1503, 500, 0, 0, 0, 2698, 499, 0, 0, 0,
	0, 1507, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1357, 1358, 1359, 1360, 1361, 1362, 1355,
	1356, 1496, 0, 0, 0, 1498, 1500, 1502, 0, 1504,
	1505, 1506, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 1518, 480, 0,
	479, 486, 476, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 483, 484, 0, 485, 489, 0, 0, 471,
	50, 0, 0, 0, 0, 0, 0, 1496, 0, 494,
	0, 1498, 1500, 1502, 1516, 1504, 1505, 1506, 1508, 1509,
	1510, 1512, 1513, 1514, 1515, 0, 472, 474, 473, 0,
	0, 1495, 0, 126, 0, 0, 478, 0, 498, 0,
	0, 500, 0, 0, 0, 0, 499, 0, 482, 0,
	0, 0, 0, 0, 480, 497, 479, 486, 476, 0,
	1511, 0, 475, 1518, 0, 0, 466, 1501, 483, 484,
	0, 485, 489, 0, 0, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 107, 38, 0,
	0, 0, 0, 0, 47, 0, 0, 0, 111, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 477, 481, 487, 0, 488, 490, 0, 0, 491,
	492, 493, 0, 0, 495, 496, 472, 474, 473, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 474, 473, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 481, 487, 0, 488, 490, 0, 0, 491,
	492, 493, 0, 0, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 481, 487,
	0, 488, 490, 0, 0, 491, 492, 493, 0, 0,
	495, 496,
}

var yyPact = [...]int{
	255, -1000, -1000, -1000, -308, 10438, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32434, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32434, -306, 31911,
	31911, -1000, -1000, 1813, -1000, 31388, 11503, 32434, 264, 251,
	32434, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 520, -1000, 30865, -1000, -1000,
	-1000, -1000, -1000, -1000, 459, 33648, 32957, 8335, -264, -1000,
	2570, -116, 679, 688, 731, 731, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3719, 665, 30342, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2655, 208, 665, 13595,
	-10, -11, 2570, 324, 171, -1000, 896, 33374, 145, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8335, 8335, 10438, -317, 10438, 8335, 32434, 32434, -1000, -1000,
	-1000, -1000, 459, 33648, 8335, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-11, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3061, -1000, 1160, -1000,
	-1000, -1000, -1000, 2158, 1141, 1731, 426, 32434, -1000, 1126,
	426, -1000, -1000, -1000, 2570, 2570, -1000, 32434, 32434, 49,
	1258, -1000, 319, 305, 330, 1116, -1000, -1000, -1000, -1000,
	-1000, -1000, 366, 2519, -1000, 32434, 32434, 2185, 32434, -1000,
	1384, 400, 33798, 2356, 1043, 559, 2208, -1000, -1000, 2157,
	-1000, 150, 186, 159, 297, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 152, -1000, 2417, -1000, -1000, 156, -1000, -1000,
	146, -1000, -1000, -1000, -13, -1000, -1000, -1000, -1000, -1000,
	-1000, -102, -1000, -1000, 706, 1571, 8335, -1000, 2340, -1000,
	3155, -1000, -1000, -1000, -1000, 5710, 9904, 9904, 9904, 9904,
	-1000, -1000, 1999, 8335, 2156, 2155, -1000, -1000, -1000, -1000,
	-1000, 1099, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1730, 9381, -1000, 2153, 2143, 2142,
	2129, 2126, 2124, 2111, 2109, 2108, 2107, 2102, 2101, 2100,
	2096, 1881, 10969, 2088, 1728, 1726, 2086, 2085, 2084, 1725,
	1881, 1881, 2065, 2064, 2062, 2061, 2060, 2055, 2053, 2050,
	2045, 2039, 2038, 2032, 2031, 2030, 2028, 2027, 2023, 2022,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1002, -1000, 2019, 2323, 2438, 1930, 2490,
	2402, 2397, 2377, 2375, 1518, -1000, -1000, -1000, -130, -1000,
	-1000, 736, -1000, 624, -1000, 32434, 32434, 32434, 454, 454,
	454, 454, 454, 497, 454, 518, 516, 514, 454, -1000,
	-1000, -1000, -1000, -1000, -1000, 591, -1000, -1000, -1000, -1000,
	1018, 32434, -1000, 1934, 1200, 2441, 406, 396, 389, 1200,
	310, -1000, 1273, 1273, 1273, 1273, 1200, 321, 404, 2438,
	2438, -35, 1273, -49, 1200, 1200, -49, 1200, 1200, 1200,
	123, -303, -1000, -1000, -1000, 1273, 1273, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2411, 2410, 459, 32434, 98, 32434,
	459, 459, 465, 1384, 390, 386, 1022, 1289, -1000, 1210,
	32434, 32434, 32434, 1210, 1210, 17259, 16736, -1000, 32434, -1000,
	2438, 1930, -1000, 1847, 2319, 1845, 1930, 459, 459, 459,
	459, 459, 459, 459, 459, 32434, 32434, 29819, 459, 7279,
	7279, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10438, 1594, 1500, 144, -77, -311, 206, -1000, -1000, 32434,
	2309, 121, -1000, -1000, -1000, 1882, -1000, 1933, 1933, 1933,
	1933, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1954, 2017, -1000, -1000, 1931, 1931, 1931, 1882, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1950, 1950, 1953, 1950, 32434, 8335, 32434,
	2348, 280, 2016, -1000, 32434, 279, 2438, 2323, 2438, -1000,
	-1000, 1098, 1516, 1724, -1000, -1000, 319, 1225, -1000, 858,
	-1000, -1000, -1000, -1000, 32434, -102, 293, -1000, -1000, 1688,
	2015, -1000, 423, 852, 1021, -1000, 139, 33874, 26150, 1384,
	26150, 32434, -1000, -1000, -1000, -1000, -1000, -1000, -14, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 148, -1000, 8335, 8335, 8335, 8335, 8335, -1000,
	498, 8858, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9904,
	9904, 9904, 9904, 9904, 9904, 9904, 9904, 9904, 9904, 9904,
	9904, 1982, 1276, 9904, 9904, 9904, 9904, 2319, 2446, 1020,
	196, -1000, -1000, -1000, -1000, -1000, 1272, 1571, 8335, 8335,
	32434, -1000, 33269, 8335, 8335, 2712, 8335, 2370, 8335, 8335,
	8335, 1844, 4140, 32434, 8335, -1000, 1836, 1832, -1000, -1000,
	1485, 8335, -1000, -1000, 8335, -1000, -1000, 8335, 9904, 8335,
	-1000, -1000, -1000, 1046, 2370, 2370, 8335, 8335, 2370, 2370,
	2370, 1304, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370,
	1830, 2438, -264, 6756, -1000, -274, 2323, 8335, -1000, -1000,
	8335, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1722,
	-78, 668, 592, 653, -1000, 2365, -1000, 2008, 2003, 1087,
	32434, 1238, 32434, 26150, 32434, 1384, 32434, 32434, 454, 454,
	454, 32434, 465, -1000, 32434, 1018, 2363, 32434, 2506, 9904,
	9904, 29296, 1273, 1200, 1200, -1000, -1000, 32434, -1000, -1000,
	-1000, 1273, 32434, 1273, 1273, 2506, 1273, -1000, -1000, -1000,
	1200, 1200, -1000, -1000, -1000, -1000, 1273, 1273, -1000, -1000,
	2506, 32434, -41, 2506, 2506, -39, -1000, -1000, -1000, 32434,
	32434, 454, 32434, -1000, 32434, 32434, -1000, -1000, 32434, 33292,
	32434, 32434, 2382, -1000, 26150, 32434, 24058, -1000, -1000, 420,
	439, 15690, 402, 26150, 5186, -1000, -1000, 1210, 1210, 1210,
	5186, 5186, 1050, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1007, -1000, 140, 2323, -1000, -1000, -1000, -1000, -1000, 32434,
	32434, 26150, 1384, 32434, 32434, 32434, 32434, -1000, 2000, -1000,
	2355, 32434, 1010, -1000, -1000, 13072, 1086, 1010, -1000, 1300,
	-1000, 8335, 10438, -290, 8335, 10438, 10438, 8335, 10438, -1000,
	8335, 114, -1000, -1000, -1000, -1000, 1509, -1000, 1508, -1000,
	-1000, -1000, 1719, 1719, -1000, 1505, -1000, -1000, -1000, -1000,
	1503, -1000, -1000, 1502, -1000, -1000, 1828, 706, -1000, 1696,
	2206, -269, -1000, 14643, 32434, 32434, -1000, -1000, -269, -1000,
	14119, 32434, 2323, -1000, 2323, 32434, -1000, 2440, -1000, 319,
	229, -1000, -1000, -1000, -1000, -1000, -1000, 1059, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1000, -1000, 32434,
	-1000, -1000, 139, 26150, 27196, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 175, -1000, -1000, 158, -1000, 484, 69, 1212,
	-1000, -1000, 106, 153, 538, 1571, -1000, 1333, 1333, 1291,
	-1000, 469, -1000, -1000, -1000, -1000, 1999, -1000, -1000, -1000,
	1651, 2297, -1000, 1294, 1294, 1070, 1070, 1070, 1070, 1070,
	1861, 1861, -1000, -1000, -1000, 5710, 1982, 9904, 9904, 9904,
	9904, 428, 428, 2988, 3248, -1000, 8335, 1282, -1000, 8335,
	2068, 999, 1058, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1827, 1819, 1860, 2517, 1818, 8335, -1000,
	-1000, 1211, 1207, 1206, -1000, 1694, 7812, -1000, -1000, -1000,
	1810, 1055, 1809, -1000, -1000, -1000, 1806, 1205, 830, 1805,
	2247, 1802, 998, 8335, 8335, 1165, 1162, 8335, 8335, 8335,
	8335, 1800, 8335, 8335, 8335, 8335, 8335, 8335, 8335, 8335,
	4, -1000, -1000, 1153, -1000, 1571, -1000, 1681, -1000, 939,
	966, -1000, 1664, -1000, -1000, -1000, -1000, 664, 622, 707,
	32434, 779, 12026, 32434, 1934, 2353, 108, -1000, 905, -1000,
	69, -112, 749, 2169, 2516, 32434, 32434, 32434, 2361, 28773,
	-1000, 1979, 1152, -1000, -1000, 8335, -1000, -1000, 2165, 32434,
	32434, 2506, 2506, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	32434, 2506, 2506, 1200, 1273, -1000, -1000, 1273, -1000, -1000,
	1273, -1000, 1052, -1000, 32434, -1000, -1000, -1000, 1934, 937,
	-1000, 12549, 605, 491, -1000, 1220, 1220, 831, 1220, 1220,
	1220, 1220, 363, 339, 1220, 1220, 1220, 1220, 1220, 1220,
	1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1973, -1000,
	96, 2380, 173, 905, 203, 2590, 1019, -1000, -1000, -1000,
	-1000, 19351, 19351, 15167, 19351, -1000, 1228, -1000, -1000, 482,
	-1000, -1000, 749, -1000, -1000, -1000, 1972, 1256, -1000, -1000,
	10969, -1000, 5186, 5186, 5186, -1000, -1000, 19874, 32434, -1000,
	-104, -1000, -90, -1000, 908, -1000, -1000, 913, 749, 2205,
	908, 908, -1000, 12026, 32434, -1000, 2506, 7279, -1000, 24058,
	-1000, -1000, 28242, -1000, 27719, 2506, 1267, -1000, 10438, 1469,
	138, -1000, 182, -312, 137, 1373, 134, 1571, -1000, -1000,
	1797, 1796, 1150, -1000, 1149, 1795, 1144, 1139, -1000, -54,
	-1000, 2311, 751, -1000, 1970, -1000, 1135, 2296, -1000, 892,
	-1000, 1250, 1110, -1000, 751, 1103, 2295, 892, -1000, -1000,
	1049, 48, -1000, -1000, 32434, 1688, 1082, 27196, 768, -1000,
	467, 1048, 1041, -1000, 26150, 149, 26150, -1000, 26150, -1000,
	-1000, 294, -1000, 32434, 2322, -1000, -1000, -1000, 1602, -339,
	-1000, -1000, -1000, -1000, -1000, 1078, -1000, 428, 428, 2988,
	2079, -1000, 9904, -1000, 9904, 2436, 1265, -1000, 8335, 1437,
	2972, 698, 18828, 32434, -1000, -1000, 8335, 8335, -1000, 2427,
	-1000, -1000, -1000, -1000, 8335, 8335, 1619, -1000, 32434, -1000,
	-1000, -1000, -1000, 18828, -1000, 9904, -1000, 8335, 878, 2408,
	4, 4, 2388, 2345, 2287, 1077, 4, 2265, 2216, 2211,
	2196, 2184, 2167, 1980, 1959, -1000, 1962, 6756, -1000, -54,
	8335, 8335, 8335, 2300, -1000, -1000, -1000, -1000, -1000, 600,
	127, 1788, 793, -1000, -1000, 32434, -1000, -1000, -1000, 1786,
	789, -1000, -1000, -1000, 3744, 1933, 1933, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1954, -1000, -1000, 1931,
	1931, 1931, 1882, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1950, 1950, 1953, 1950, -1000, 2360, -1000, -4,
	1220, 414, 26150, 384, -1000, 32434, 2204, 292, 2304, 32434,
	1947, 1946, 1945, 244, 3744, 32434, 919, -1000, 1039, 33374,
	-1000, 32434, 1571, -1000, 1384, -1000, 1200, -1000, -1000, 2506,
	1013, -1000, -1000, 2506, 1200, 1200, 1273, 32434, -1000, 2359,
	33292, -1000, -1000, -1000, -1000, 3744, 594, -1000, 623, 454,
	32434, 1355, 623, 1348, 1942, -1000, -1000, -1000, 32434, 32434,
	32434, 1347, 1340, -1000, 32434, 1493, -1000, 1491, 1220, 1220,
	1489, 1679, 1671, 1670, 1220, 1220, 1486, 1667, 26673, 1478,
	1477, 1476, 1438, 1652, 670, 1436, 1433, 1432, 32434, 1935,
	1573, -4, 1220, 168, 1245, 414, 1404, 16213, 32434, 24058,
	24058, 24058, 24058, -1000, 2267, 2239, -1000, 2258, 2242, 2259,
	32434, 24058, 1934, -1000, 26673, -1000, -1000, -1000, 2319, 1073,
	2489, 617, 8335, 26150, 1644, 402, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 32434, 32434, 1784, -1000, 2500, -1000,
	773, -1000, -1000, 1038, -1000, 2500, 1284, -313, 10438, 1269,
	1202, -1000, 8335, 10438, 8335, -291, 180, -294, -1000, -1000,
	-1000, 1634, -1000, -1000, -1000, 1473, -1000, 1457, 27, 35,
	1326, -269, 6756, 284, 32434, -269, 32434, 6756, -1000, 32434,
	277, -269, 32434, 1439, -1000, -1000, -1000, 2508, 26150, 1384,
	1115, 25627, -1000, 143, -1000, 165, 403, 1633, -1000, 502,
	88, -1000, 1236, 1602, -1000, -1000, -1000, 9904, -1000, -1000,
	-1000, -1000, 1571, 8335, 1780, -1000, 590, 590, 1775, -1000,
	1933, 1933, -1000, 1882, 1931, 1882, 590, 590, 1774, -1000,
	1673, 1912, -1000, 1869, 1826, 8335, -1000, 1768, 3195, 886,
	-134, 4, -1000, -1000, -1000, 4, 4, 4, 4, -1000,
	4, 4, 4, 4, 4, 4, 4, 4, 432, -1000,
	27, 1571, 1571, -1000, -1000, 2285, -1000, 1629, 1625, 779,
	3744, 519, 12026, 2308, 271, 1521, -1000, -1000, 25104, 373,
	-1000, -1000, -1000, 495, 163, 1430, 370, -1000, 32434, 202,
	32434, -1000, -1000, -1000, -1000, -1000, 2304, -1000, 708, 224,
	12549, 12549, 12549, 228, 1345, -1000, 426, 825, 1032, 24058,
	32434, -1000, 23535, 1761, -1000, 749, 2506, -1000, 32434, -1000,
	2506, 2506, 1200, -1000, 271, -1000, 2589, -1000, 32434, -1000,
	32434, -1000, 32434, 32434, 454, 8335, -1000, -1000, -1000, 32434,
	-1000, 249, -1000, -1000, 18828, 18828, -1000, -1000, -1000, -1000,
	1622, 1618, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 374, 32434, 1065, -1000, 1234, 1521,
	25104, 1233, 1616, 373, -1000, 1609, -1000, 727, 32434, 32434,
	-1000, 980, -1000, 1232, 2162, 2203, 2162, -1000, -1000, -1000,
	-1000, 2229, -1000, 2221, -1000, -1000, 980, -1000, -1000, -1000,
	-1000, -1000, 617, -1000, 2435, 623, 623, 623, 1757, 768,
	1754, -1000, -1000, -1000, -1000, -1000, 2491, 2488, 24581, 2491,
	-1000, -313, 1264, -1000, 1402, 132, 1350, 32434, -1000, -1000,
	-1000, 1749, 1748, -277, 40, 2478, 2476, 2537, -1000, 1747,
	765, -269, -1000, -1000, 751, -1000, -1000, -1000, -269, -1000,
	751, -1000, -1000, 1384, -1000, 147, -1000, -1000, -1000, -1000,
	-1000, -1000, 58, -1000, 32434, -1000, 1602, 1601, 78, -1000,
	1571, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8335, -1000, -1000, -1000,
	1816, -1000, -1000, 8335, 1743, 1586, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2496,
	-1000, 2473, -277, -1000, -1000, -1000, -1000, -1000, -1000, 3744,
	-1000, 1587, -1000, -1000, 1584, 68, -1000, -1000, -1000, 1583,
	1578, 1429, -1000, -1000, 1411, 1034, 81, -1000, -1000, -1000,
	-1000, -1000, -1000, 1404, 32434, 1929, -1000, 1220, 1220, 1220,
	32434, 1742, 764, -1000, 1741, 1740, 421, 1235, 1231, -1000,
	1426, 19351, 24058, 23535, 883, -1000, 1027, -1000, -1000, -1000,
	2506, -1000, -1000, 2506, -1000, -1000, 2589, -1000, -1000, 1351,
	9904, -1000, -1000, 1575, 18305, 575, 585, 1926, -1000, 327,
	2534, -1000, 1318, 1305, -1000, 32434, -1000, 1914, -1000, 1909,
	2164, 285, 1902, 1901, 32434, 1766, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 394, 1063, -1000, 1573, 1570,
	-1000, 68, 1567, -1000, -1000, -1000, 32434, 727, 727, 2496,
	32434, 6756, -1000, -1000, 8335, 1899, -1000, 8335, -1000, -1000,
	-1000, -1000, -1000, 1897, 2266, -1000, -1000, -1000, -1000, -1000,
	-1000, 8335, 8335, -1000, -1000, 450, 10438, -295, 179, -1000,
	-1000, -1000, -279, 1563, -1000, -1000, 2470, 1560, 1529, 32434,
	-1000, 751, 751, 749, -1000, -1000, -39, -1000, -1000, -1000,
	1753, -1000, 1746, 4, -1000, 113, 8335, -279, -208, -1000,
	-1000, -1000, -1000, 266, -1000, -1000, 184, -1000, -1000, 1409,
	412, -1000, -1000, 727, 22489, 18828, 18305, 1558, -1000, 3735,
	12549, 148, 3735, 691, 1230, -1000, 1425, -1000, 1424, -1000,
	2506, 883, 1027, -1000, -1000, 1068, -1000, -1000, -1000, -1000,
	2988, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1422, 1891, -98, -1000, -1000, 1890,
	22489, 22489, 258, 258, 22489, 22489, 1889, 517, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2438, -1000, -1000, 1571,
	32434, 1571, 23012, -1000, 2468, 2467, 1571, 706, -1000, -313,
	32434, 32434, -282, 1420, -1000, 1543, 34, -1000, -1000, 712,
	-284, 18, 19, -1000, -1000, -1000, 1737, -1000, 3343, -1000,
	-1000, -1000, 706, -282, 32434, 387, 1542, -1000, -1000, 162,
	-1000, -1000, 1056, -1000, 1882, 8335, -1000, -1000, -1000, 422,
	33588, -1000, -1000, -1000, -39, 422, 382, 225, -1000, 1412,
	-1000, -1000, 2496, -1000, 1624, 8335, 1881, -174, 22489, 1044,
	1036, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1033, 1017,
	22489, -1000, -1000, -1000, 325, -1000, 1011, 1003, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1879, -1000, -1000, 2466, -1000,
	1537, 463, 26, 19, -1000, 2464, 29, 2457, 2454, -1000,
	-1000, 4663, -271, 1, 316, -1000, 2358, -1000, -1000, 57,
	-1000, -1000, -1000, 22489, 2316, 1739, 272, 2453, 3735, -1000,
	-1000, 272, -1000, 236, -1000, 1222, -1000, 1408, -1000, 2438,
	-1000, 1656, -1000, 2199, -1000, 115, 993, -1000, -1000, -1000,
	-1000, 945, -1000, -1000, -1000, 21966, 32434, 1529, -1000, 1875,
	1407, 40, 30, 2452, -1000, 1529, 2448, 1529, 1529, 1280,
	-1000, -1000, -1000, -1000, -1000, 1534, -1000, 200, -1000, -1000,
	2316, -1000, 2447, 315, -1000, -1000, -1000, -1000, 1405, -1000,
	-1000, 517, -1000, 2190, 2189, 2512, -1000, -1000, -1000, -1000,
	200, 200, 200, 200, 141, -1000, -1000, 944, -1000, -1000,
	2374, 17782, 10, -1000, -1000, -1000, 1531, -1000, 1529, -1000,
	-1000, 4663, -1000, -1000, 1220, 1506, 218, -1000, -1000, -1000,
	21443, 295, 302, 300, -1000, 448, -1000, -1000, -1000, -1000,
	2523, -1000, 2521, 579, 579, -1000, -1000, 32434, -1000, 32434,
	-1000, 940, -1000, -1000, -1000, 859, -1000, -1000, -1000, -1000,
	-1000, 1403, -1000, 32434, -1000, 32434, 291, 1398, 9904, 1874,
	9904, 1871, 306, 1868, -1000, -1000, -1000, 1416, 331, -1000,
	-1000, 702, -1000, 1215, -1000, 20920, 32434, -1000, -1000, 938,
	1864, 2445, -1000, 3183, 32434, 2935, 32434, 1855, 1096, 9904,
	-1000, -1000, -1000, 32434, 6233, -1000, 709, -1000, -1000, 419,
	303, -1000, 933, -1000, 930, 20397, 1379, 1421, -1000, -1000,
	1571, 32434, 874, -1000, 32434, 286, -1000, -1000, -1000, 855,
	-1000, -1000, -1000, -1000, 419, 2275, -1000, 1374, -1000, -1000,
	33502, 554, -1000, -1000, 33502, 289, -1000, 413, 1854, -1000,
	-1000, 798, -1000, 32434, 589, 8335, -1000, 289, 3735, -1000,
	8335, 783, -1000, 3735, 766, -1000, -1000,
}

var yyPgo = [...]int{
	0, 137, 2562, 213, 135, 3024, 55, 212, 196, 170,
	211, 3023, 3022, 2323, 2293, 3021, 3018, 3017, 3015, 3014,
	3013, 3012, 3011, 3009, 3008, 3007, 3006, 3005, 3004, 3001,
	3000, 2999, 2998, 2997, 2994, 2993, 2992, 2991, 2990, 207,
	2989, 2988, 2987, 2986, 2985, 2983, 2982, 2981, 2980, 2979,
	2978, 2977, 2976, 2974, 2973, 2972, 2971, 2970, 2969, 2968,
	2967, 2966, 2965, 2963, 2962, 2961, 2960, 2957, 2956, 2953,
	167, 2952, 2281, 2951, 2950, 2949, 2947, 2946, 2945, 2943,
	199, 2942, 2941, 2940, 2939, 2938, 2934, 2929, 2925, 2923,
	2922, 185, 2921, 2920, 2917, 2916, 2915, 2913, 174, 2912,
	133, 182, 2911, 2909, 2906, 2905, 2904, 205, 169, 49,
	2903, 37, 2902, 180, 2901, 114, 2900, 117, 2899, 2897,
	2894, 2893, 2891, 2884, 2883, 2881, 2880, 2879, 2876, 2874,
	71, 2873, 2872, 147, 181, 218, 2164, 214, 206, 161,
	130, 72, 2870, 2331, 2866, 152, 194, 124, 23, 2864,
	139, 2860, 122, 36, 26, 210, 103, 40, 119, 89,
	2859, 186, 69, 2855, 79, 2854, 2853, 209, 148, 2852,
	93, 2851, 2850, 2848, 2845, 159, 154, 2844, 2843, 94,
	2842, 2841, 97, 2840, 46, 2838, 138, 2837, 232, 87,
	85, 2835, 2833, 2832, 80, 2828, 2827, 2825, 2824, 142,
	2822, 2819, 108, 65, 2817, 2816, 2815, 45, 2811, 59,
	2809, 52, 2808, 2807, 2806, 2804, 53, 2803, 2802, 15,
	19, 21, 2800, 20, 2799, 128, 2798, 2797, 2796, 3,
	2793, 179, 104, 74, 129, 2792, 377, 2791, 2790, 2789,
	132, 2788, 1227, 2787, 2783, 2781, 2779, 2778, 22, 2777,
	171, 38, 2776, 73, 102, 88, 156, 176, 2775, 2773,
	2772, 112, 68, 47, 0, 2771, 123, 2770, 2769, 2768,
	217, 2767, 195, 172, 197, 193, 219, 164, 2765, 2764,
	67, 2762, 125, 81, 106, 8, 2761, 188, 2757, 328,
	151, 2756, 163, 2753, 120, 2, 115, 2751, 2750, 35,
	221, 2745, 2742, 2741, 105, 2740, 2739, 92, 100, 2738,
	2737, 2735, 32, 2734, 30, 28, 2733, 82, 2732, 216,
	2730, 157, 109, 144, 140, 121, 184, 191, 60, 54,
	2729, 1324, 118, 78, 24, 2728, 190, 2725, 222, 192,
	2723, 165, 2722, 208, 321, 166, 2720, 145, 10, 34,
	29, 2719, 9, 2717, 101, 160, 2716, 2715, 18, 2714,
	17, 2713, 2712, 2711, 2710, 5, 2709, 2708, 2707, 1,
	7, 2704, 4, 162, 2703, 2701, 2699, 2698, 41, 96,
	2697, 95, 143, 2696, 2695, 70, 2693, 2692, 2691, 1862,
	2690, 2689, 2688, 2687, 2686, 2685, 2682, 2677, 2676, 2675,
	75, 43, 2674, 2670, 2668, 2667, 62, 113, 2665, 2664,
	2663, 2661, 31, 141, 2659, 16, 2658, 27, 25, 33,
	2657, 99, 2655, 12, 146, 2654, 2652, 13, 2648, 2640,
	11, 14, 2638, 2627, 90, 2623, 66, 42, 131, 91,
	2621, 64, 183, 111, 2619, 2618, 203, 202, 155, 2617,
	116, 201, 223, 2616, 168, 2614, 2613, 2612, 2610, 2606,
	2602, 820, 2600, 2598, 200, 44, 76, 84, 2597, 2595,
	2594, 63, 126, 86, 83, 158, 2592, 153, 2591, 2586,
	77, 2580, 2575, 2574, 2572, 2570, 149, 2569, 2568, 2566,
	2564, 198, 313, 2560,
}

//line mysql_sql.y:9384
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 485, 489, 489, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 105, 483, 483, 483, 484, 484, 102, 122,
	121, 124, 124, 123, 123, 120, 120, 116, 119, 119,
	118, 118, 117, 112, 114, 114, 113, 115, 115, 103,
	91, 104, 433, 433, 432, 432, 431, 431, 386, 386,
	430, 430, 430, 429, 429, 429, 428, 428, 427, 427,
	426, 426, 424, 424, 425, 423, 422, 422, 422, 420,
	420, 420, 416, 416, 418, 417, 417, 419, 411, 411,
	414, 414, 412, 412, 412, 412, 415, 410, 410, 410,
	409, 409, 90, 90, 90, 333, 333, 89, 89, 347,
	347, 347, 347, 347, 345, 345, 345, 345, 345, 345,
	344, 344, 343, 343, 348, 348, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 81, 81, 81, 81,
	84, 84, 84, 85, 342, 342, 342, 82, 83, 83,
	332, 332, 337, 337, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 341, 341, 341, 339,
	339, 338, 338, 340, 340, 75, 75, 75, 78, 77,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 76,
	76, 76, 76, 76, 76, 71, 71, 71, 71, 71,
	70, 70, 72, 72, 329, 329, 328, 86, 86, 87,
	487, 487, 486, 488, 488, 488, 488, 88, 94, 94,
	94, 94, 94, 94, 94, 93, 93, 96, 96, 95,
	97, 80, 80, 80, 80, 80, 80, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 457, 457, 457, 459,
	459, 268, 269, 490, 271, 267, 267, 267, 453, 453,
	454, 455, 456, 456, 456, 92, 11, 11, 11, 11,
	11, 11, 69, 74, 224, 224, 225, 225, 225, 225,
	226, 226, 226, 226, 226, 227, 228, 228, 67, 73,
	73, 470, 470, 68, 477, 477, 389, 389, 282, 282,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 393, 394, 278, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 46, 45, 45,
	45, 318, 318, 44, 491, 491, 257, 257, 56, 55,
	48, 57, 58, 59, 60, 61, 62, 43, 54, 54,
	54, 54, 54, 54, 54, 54, 65, 65, 405, 405,
	493, 493, 493, 63, 64, 388, 388, 388, 53, 52,
	51, 50, 49, 49, 42, 42, 41, 41, 47, 128,
	129, 275, 275, 275, 277, 277, 273, 492, 492, 360,
	360, 276, 276, 40, 40, 40, 40, 66, 274, 274,
	256, 272, 272, 272, 12, 12, 10, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 23,
	24, 26, 326, 326, 323, 25, 18, 17, 20, 16,
	19, 21, 22, 22, 9, 9, 9, 9, 13, 13,
	14, 140, 140, 189, 189, 465, 465, 461, 461, 462,
	462, 462, 463, 463, 464, 464, 98, 399, 399, 399,
	399, 399, 399, 8, 163, 163, 162, 162, 398, 398,
	398, 398, 398, 398, 330, 330, 442, 442, 442, 443,
	161, 161, 156, 156, 400, 400, 296, 444, 444, 408,
	408, 407, 407, 406, 406, 159, 159, 160, 160, 143,
	143, 108, 108, 413, 413, 413, 413, 421, 421, 385,
	385, 216, 216, 251, 251, 252, 252, 133, 133, 134,
	134, 134, 134, 134, 134, 450, 450, 452, 452, 451,
	158, 158, 154, 154, 155, 155, 155, 153, 153, 152,
	151, 151, 150, 148, 148, 148, 149, 149, 149, 136,
	136, 136, 135, 135, 135, 135, 135, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 137,
	137, 458, 458, 458, 390, 390, 390, 396, 396, 233,
	233, 234, 234, 232, 232, 138, 138, 139, 139, 139,
	139, 231, 231, 230, 141, 141, 147, 146, 146, 142,
	142, 142, 142, 241, 241, 240, 240, 240, 240, 101,
	106, 106, 107, 166, 166, 239, 238, 238, 238, 165,
	165, 164, 164, 157, 157, 145, 145, 145, 145, 237,
	144, 235, 482, 482, 481, 481, 480, 478, 478, 478,
	479, 479, 479, 479, 435, 435, 435, 435, 435, 262,
	262, 262, 266, 266, 265, 265, 265, 265, 265, 270,
	7, 7, 7, 7, 7, 30, 30, 30, 30, 30,
	30, 30, 30, 36, 174, 175, 37, 176, 176, 177,
	177, 178, 178, 179, 180, 181, 181, 181, 181, 35,
	167, 167, 168, 168, 169, 169, 170, 171, 171, 171,
	173, 172, 34, 27, 466, 469, 467, 467, 471, 471,
	471, 472, 472, 472, 473, 473, 28, 125, 130, 130,
	127, 132, 132, 132, 132, 132, 126, 468, 474, 474,
	474, 327, 327, 324, 325, 325, 322, 321, 321, 321,
	476, 476, 475, 475, 475, 263, 263, 29, 317, 317,
	319, 320, 320, 320, 311, 311, 311, 311, 33, 315,
	315, 316, 316, 316, 316, 316, 312, 312, 314, 314,
	310, 310, 310, 310, 310, 32, 131, 131, 309, 309,
	307, 307, 305, 305, 306, 306, 304, 304, 304, 308,
	308, 31, 31, 31, 110, 109, 109, 109, 254, 254,
	253, 253, 111, 38, 201, 201, 374, 374, 374, 374,
	374, 392, 392, 392, 375, 375, 375, 376, 376, 376,
	377, 377, 377, 377, 377, 391, 391, 349, 349, 350,
	350, 350, 353, 353, 366, 366, 367, 367, 365, 365,
	372, 372, 371, 371, 370, 370, 369, 369, 368, 368,
	368, 368, 363, 363, 362, 362, 351, 351, 351, 351,
	351, 352, 352, 352, 361, 361, 364, 364, 207, 207,
	208, 208, 208, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 440, 440, 441, 210, 210, 210, 214, 214,
	214, 214, 214, 214, 209, 209, 211, 211, 190, 190,
	188, 188, 182, 182, 183, 183, 184, 184, 184, 187,
	187, 185, 185, 186, 186, 186, 186, 335, 335, 438,
	438, 439, 439, 434, 434, 434, 437, 437, 437, 437,
	437, 436, 436, 191, 249, 249, 249, 264, 264, 264,
	264, 248, 248, 248, 206, 206, 205, 205, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 334, 334, 279, 279, 280, 280, 223,
	222, 222, 222, 222, 222, 220, 221, 219, 219, 219,
	219, 219, 218, 218, 217, 217, 217, 313, 313, 215,
	215, 213, 213, 213, 212, 212, 212, 373, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 247, 288, 288, 293, 293, 449, 449, 448,
	192, 192, 192, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 202, 202, 202, 358, 358, 358, 358, 358,
	359, 359, 359, 356, 356, 357, 357, 297, 298, 298,
	397, 397, 354, 354, 355, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 404, 404, 404, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 460, 460, 460, 445, 445, 445, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 245, 245, 245, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 299, 299, 300, 300, 401, 401,
	401, 401, 401, 401, 402, 402, 403, 403, 403, 403,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 286,
	242, 242, 242, 301, 294, 294, 295, 295, 289, 289,
	289, 289, 289, 289, 289, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 290, 290, 292,
	292, 303, 303, 303, 302, 302, 302, 302, 302, 302,
	302, 204, 204, 204, 204, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 194, 194, 194, 194,
	198, 198, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 199, 199, 199, 199,
	197, 197, 197, 197, 197, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 99, 100, 100, 196, 250, 250, 378, 378, 381,
	381, 379, 379, 380, 382, 382, 382, 383, 383, 383,
	384, 384, 384, 387, 387, 255, 255, 255, 261, 261,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 3, 3,
	2, 4, 4, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 2, 4, 3,
	3, 1, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 1, 3, 2, 2, 2, 1,
	2, 2, 2, 3, 2, 3, 1, 1, 7, 7,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 5,
	3, 3, 2, 4, 4, 4, 4, 4, 1, 1,
	1, 3, 3, 1, 1, 1, 6, 8, 0, 1,
	1, 1, 1, 5, 5, 0, 1, 1, 3, 3,
	3, 4, 6, 7, 4, 4, 7, 8, 3, 3,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 4, 3, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 6, 3, 5, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 0, 2, 1, 3, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 7, 1, 3, 0,
	1, 1, 3, 1, 3, 0, 1, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 7, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 8, 0, 2,
	6, 0, 2, 2, 3, 3, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 1, 7,
	7, 2, 1, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 1, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 5, 0, 1, 3, 0, 1,
	0, 2, 0, 1, 6, 8, 6, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -485, -489, -2, -5, 551, -1, -4, -100, -75,
	-7, -102, -103, -8, -98, -9, -10, -12, -79, -93,
	-95, -97, -96, -39, -11, -92, -70, -71, -81, -86,
	-89, -90, -91, -104, -99, -101, -133, -105, 544, -76,
	-77, -78, -30, -29, -28, -27, -125, 550, 408, 12,
	456, -13, -14, -450, -15, 237, -267, -268, -269, -271,
	-490, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -128, -129, -66, -68,
	-67, -73, -69, -74, -127, 212, -72, 61, -82, -83,
	-84, -85, -87, -88, 339, 345, 398, 543, 46, -134,
	-136, 554, 140, 141, 143, 144, -31, -32, -33, -34,
	-35, -36, -38, -37, 208, 14, 489, -16, -19, -17,
	-20, -18, -25, -26, -24, -21, -23, -126, -22, 232,
	231, 37, 295, 296, 297, 343, 230, 209, 13, 30,
	41, 321, -135, 67, 210, -137, 10, 556, -6, -3,
	-2, -112, -116, -120, -123, -124, -121, -122, -4, -100,
	98, 222, 545, -264, 335, 546, 548, 547, 70, 78,
	-258, -260, 339, 345, 543, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 459, 530, 531, 532, 533, 319, 320, 486, 249,
	273, 369, 276, 283, 140, 159, 153, 181, 173, 148,
	253, 288, 254, 77, 143, 442, 88, 420, 395, 146,
	268, 270, 272, 275, 255, 169, 164, 267, 251, 162,
	256, 39, 257, 186, 258, 259, 491, 416, 318, 422,
	280, 393, 163, 417, 271, 419, 188, 192, 434, 157,
	158, 424, 436, 185, 229, 42, 488, 241, 437, 190,
	184, 180, 445, 284, 282, 183, 156, 179, 252, 50,
	194, 193, 195, 389, 390, 391, 392, 260, 261, 333,
	433, 176, 165, 323, 149, 22, 440, 236, 421, 346,
	262, 277, 285, 189, 191, 243, 248, 490, 397, 247,
	281, 438, 161, 240, 269, 235, 441, 150, 348, 263,
	144, 274, 435, 444, 49, 361, 155, 147, 226, 141,
	245, 250, 11, 264, 265, 266, 287, 286, 278, 177,
	242, 182, 167, 154, 178, 142, 244, 443, 362, 541,
	321, 378, 175, 172, 246, 219, 439, 423, 145, 382,
	363, 170, 289, 537, 538, 539, 334, 317, 290, 291,
	168, 233, 414, 415, 292, 294, 388, 310, 364, 396,
	370, 365, 201, 298, 426, 428, 187, 540, 299, 300,
	301, 418, 302, 303, 304, 305, -340, -338, -264, 543,
	345, 339, 321, -176, -264, 555, -143, 38, -188, -264,
	-143, -72, -14, -13, -135, -136, -188, 216, -272, 23,
	393, -80, 394, 212, 67, -264, -9, -91, -8, -98,
	-70, -133, 398, -270, -264, 295, 295, -270, 216, -264,
	247, 377, -389, 222, -344, -317, 248, -343, -319, -346,
	-320, 31, 208, 210, 209, 244, 14, 343, 218, 12,
	10, 344, 230, 24, 25, 27, 13, 345, 347, 28,
	348, 351, 352, 353, 41, 356, 357, 237, 70, 78,
	73, 255, -175, -264, -295, -289, 95, 238, -291, -284,
	-285, -287, -430, -424, -283, 67, 122, 123, 130, 96,
	-286, -373, 35, 98, 496, 457, -243, -244, -245, -246,
	-247, -264, -425, -423, 73, 79, 82, 85, 86, 84,
	83, 166, 81, 74, 134, 135, -136, 70, -445, 504,
	-259, 525, 530, 531, 532, 533, 524, 46, -395, -403,
	215, -401, 133, 171, 233, 167, 12, 128, 388, 168,
	501, 521, 459, 505, 528, 498, 499, 493, 494, 495,
	497, 506, 508, 520, -404, 516, 526, 527, 514, 529,
	72, 71, 519, 518, 507, 502, 503, 509, 492, 500,
	510, 511, 517, 522, 523, 327, 88, 328, 329, 449,
	322, 330, 222, 393, 55, 331, 332, 333, 334, 335,
	456, 336, 56, 337, 326, 237, 378, 338, 170, 187,
	461, 460, 462, 453, 450, 448, 451, 452, 454, 455,
	512, 513, 515, -106, -107, 535, -152, -153, -236, 19,
	6, 7, 8, 9, -483, 395, 490, 145, 142, -331,
	145, 94, 150, 149, -331, 298, 243, 340, 219, 319,
	378, 302, 247, -311, -309, -391, 292, 288, 217, 227,
	226, 89, 449, 215, 354, -461, -462, 205, 206, 207,
	-452, 482, -451, -264, 329, 26, 216, 340, 243, 428,
	426, 427, 429, 430, 431, 432, -54, -405, -388, 423,
	422, -276, 415, 421, 413, 425, 416, 320, 304, 303,
	208, 552, 483, -255, 364, 396, 446, 447, 341, 397,
	434, 435, 417, 88, 174, 171, 219, 216, 319, 449,
	378, 302, -461, 247, 377, 40, -337, 388, -336, -338,
	434, 435, 445, 71, 72, 433, -255, 88, 414, 414,
	-153, -236, -152, -134, -136, -101, -450, 217, 319, 378,
	247, 218, 216, 219, 449, 295, 340, 243, 302, -390,
	-458, 31, -396, 202, 203, 204, 32, 33, -1, 102,
	556, -289, -289, -6, 557, -6, -289, -264, -264, 137,
	-194, -198, -195, -197, -196, -200, -199, 171, 172, 133,
	175, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 30, 187, 233, 167, 168, 169, 170, 188, 153,
	173, 487, 196, 154, 197, 155, 198, 156, 199, 157,
	158, 200, 159, 162, 163, 164, 161, 136, 67, 136,
	73, -159, 239, -188, 136, -159, -153, -152, -153, -188,
	-248, -264, 395, 105, -80, -80, 394, -453, -454, -455,
	-457, 212, 394, 393, 136, 255, 15, -270, -270, 65,
	-188, -319, 247, -344, -317, 35, 64, 137, 220, 137,
	64, 67, 341, 319, 378, 342, 449, 216, 354, 219,
	247, 355, 319, 378, 216, 219, 449, 247, 319, 216,
	219, 378, 247, 355, 413, 414, 219, 26, 346, 349,
	350, 414, -409, 445, 137, 94, 91, 92, 93, -289,
	112, -302, 105, 106, 107, 108, 109, 110, 111, 119,
	118, 129, 122, 123, 124, 125, 126, 127, 128, 120,
	121, 115, 95, 113, 117, 114, 97, -136, -289, -295,
	46, -287, -287, -287, -287, -373, -293, -289, 67, 67,
	136, 73, -289, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, -402, 67, 67, -299, -300,
	67, 67, -283, -248, 67, 73, 73, 67, 67, 67,
	73, -300, -300, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, -153, 137, 67, -108, 38, -155, 21, -137, -136,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 79,
	438, 489, 148, 149, 150, -174, -264, -176, -167, -264,
	-307, 222, -307, -307, -307, -307, 218, -307, 216, 216,
	216, -307, -463, 152, 137, -452, -158, 67, -275, 113,
	117, 23, 245, 245, 245, -275, 282, -491, -492, 15,
	115, -273, -492, -273, -273, -275, -493, 218, 424, 42,
	246, 245, -154, -155, -154, 418, 414, -360, 419, 420,
	-277, -492, -276, -275, -275, -276, -275, -275, -275, 216,
	219, 449, 302, 553, -491, -491, 30, 30, -389, -188,
	-389, 483, -256, -264, -389, -389, -464, 221, -319, 247,
	247, 137, 105, 23, -339, 105, 116, -338, -338, -338,
	-339, -339, -209, 40, -263, 133, -264, 73, -209, 40,
	-487, -486, -188, -154, -137, -136, 68, 68, 68, -389,
	-389, -389, -389, -389, -389, -389, -389, -270, -167, -176,
	222, -389, -138, -139, 124, -289, -264, -138, -3, -114,
	-113, 99, 100, 102, 546, 335, 545, 549, 543, -338,
	40, -384, 362, 361, -378, -380, 67, -379, 67, -379,
	-379, -379, 67, 67, -381, 67, -381, -381, -378, -382,
	67, -382, -383, 67, -382, -264, -294, -295, -264, 38,
	-398, 46, -133, 67, 30, 67, -264, -399, 46, -133,
	67, 30, -154, -108, -155, 136, 79, 73, -80, 68,
	137, -456, 85, 86, -459, 185, 177, -264, -94, 73,
	-7, -8, -9, -10, -39, -70, -133, -426, -424, 67,
	31, 387, 64, 15, -345, 216, 449, 340, 243, 219,
	319, -343, -326, -323, -321, -263, -319, -322, -321, -348,
	-248, 414, -109, 399, 294, -289, -289, -289, -289, -289,
	84, 95, 317, 85, 86, -284, -303, 31, 290, 291,
	-285, -285, -285, -285, -285, -285, -285, -285, -285, -285,
	-285, -285, -292, -301, -373, 67, 115, 113, 117, 114,
	97, -287, -287, -285, -285, 68, 137, -449, -448, 99,
	-289, -289, -264, -446, -447, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 331, 326, 332, 330,
	322, 338, 333, 334, 170, 480, 481, 474, 475, 476,
	477, 478, 479, -294, -294, -289, -446, -294, -242, 32,
	31, -295, -295, -295, 68, -289, -460, 315, 314, 316,
	-156, -264, -294, 68, 68, 68, 79, -295, -295, -294,
	-285, -294, -447, -242, -242, -295, -295, -242, -242, -242,
	-242, 124, -242, -242, -242, -242, -242, -242, -242, -242,
	68, -154, -107, -407, -406, -289, 40, 536, -108, -289,
	-151, -150, -289, -484, 73, 439, 440, 146, 149, 148,
	34, 67, 67, 136, -188, 95, -466, -264, -327, -324,
	-321, -264, -317, -264, -264, -307, -307, -307, -188, -464,
	-451, 34, -157, -264, -232, 16, -287, -287, -321, 247,
	-491, -275, -275, -257, -256, -277, -272, -277, -277, -232,
	-492, -275, -275, -277, -273, -232, -264, 414, -232, -232,
	-360, -274, -264, -274, -307, -256, -257, -257, -188, -224,
	-225, 213, 210, 209, -229, 359, 249, -308, 253, 77,
	254, 395, 255, 218, 257, 258, 259, 229, 260, 261,
	262, 388, 263, 264, 265, 266, 342, 6, 305, 40,
	-466, -466, 30, -327, -264, -146, -141, -145, -142, -147,
	-235, -237, -144, 67, -188, -136, -264, 31, 387, -342,
	387, 31, -317, -336, -332, 73, 388, -322, -341, 64,
	133, -406, -339, -339, -339, -341, -341, 132, 137, -488,
	438, 439, 205, -108, -190, -188, -466, -326, -317, -264,
	-190, -190, -264, 67, 35, -264, -231, 137, -230, 15,
	-265, -264, 34, 73, 136, -231, -115, -113, 101, -289,
	-6, 545, -289, -6, -6, -289, -6, -289, -387, 363,
	79, 79, -250, 73, -250, 79, 79, 79, 68, 73,
	-330, 64, -400, -296, -444, 535, -161, 68, -156, -442,
	-443, -156, -160, -264, -400, -161, 68, -442, -108, -108,
	-264, 23, -80, -454, 136, 137, -157, -345, -325, -322,
	-347, 124, -264, -333, 137, 489, 558, 71, 220, -476,
	-475, 379, 68, 137, -410, 221, 456, 73, 559, 201,
	84, 317, 85, 86, -373, -295, -292, -287, -287, -285,
	-285, -290, 234, -290, 94, -289, -288, -448, 101, -289,
	34, 137, 65, 136, 68, 68, 15, 15, 68, -289,
	68, 68, 68, 68, 15, 15, -289, 68, 136, 68,
	68, 68, 68, 65, 68, 137, 68, 137, -295, -289,
	68, 68, -289, -289, -289, -295, 68, -289, -289, -289,
	-289, -289, -289, -289, -289, -355, 409, 137, 68, 73,
	137, 22, 137, -148, 36, 37, 147, 150, 150, 149,
	-175, -177, -178, -179, -180, -181, 115, 138, 139, -168,
	-169, -170, -171, -194, -248, 172, 175, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 233, 167,
	168, 169, 170, 188, 153, 173, 154, 155, 156, 157,
	158, 159, 162, 163, 164, 161, -264, -158, 35, -469,
	366, -477, 137, 40, -475, 449, -310, 65, -131, 15,
	-188, -188, -188, -201, 34, 15, -140, -189, -264, 67,
	68, 137, -289, -318, 65, -264, -257, -232, -232, -188,
	-264, -232, -232, -275, -277, -277, -273, 136, -256, -158,
	137, -184, -191, -185, -187, -248, -280, -186, 227, -439,
	225, 223, 89, 228, 279, 90, 218, -226, 218, 90,
	224, 228, 223, -227, 218, -261, 105, -261, -255, 132,
	-261, -261, -261, -261, 256, 256, -261, -261, -261, -261,
	-261, -261, -261, -261, -261, -261, -261, -261, -261, -261,
	67, -470, 366, 30, 325, -477, -132, 319, 30, -238,
	-239, -240, -241, 53, 57, 59, 54, 55, 56, 60,
	30, 137, -262, -266, 34, -264, 73, -262, -136, -141,
	-146, -262, 67, 220, 67, 105, -341, -341, -341, 40,
	-263, -486, 445, 439, 137, 64, -168, -176, -232, -139,
	-141, -264, 73, -264, 124, -232, 102, -6, 100, -119,
	-118, -117, 103, 543, 549, 102, 102, 102, 68, 68,
	68, 137, 68, 68, 68, 137, 68, 137, -413, 419,
	39, 137, 67, 68, 137, 46, 137, 105, 68, 137,
	68, 46, 136, 395, -264, -424, 68, -347, 137, 220,
	136, 136, -323, 345, -263, -325, 20, 489, -248, 38,
	-254, -253, 73, 559, 68, -290, -290, 94, -287, -284,
	68, 102, -289, 100, -192, -194, 361, 362, -193, -199,
	133, 171, 233, 170, 169, 167, 361, 362, -209, -264,
	-289, -289, 68, -289, -289, 15, -264, -209, -285, -289,
	-153, 68, -354, -355, -354, 68, 68, 68, 68, -354,
	68, 68, 68, 68, 68, 68, 68, 68, 67, -406,
	-413, -289, -289, -150, -149, 43, 150, 353, 68, 137,
	-248, 68, 137, -194, 34, -472, 421, 368, -261, -282,
	-281, 321, 41, -393, 388, 374, 375, -324, 247, -264,
	64, 309, 310, 311, 312, -305, -306, -304, -308, -466,
	67, 67, 67, -374, 299, -194, -188, -140, -264, 15,
	137, -465, 136, -1, -264, -317, -275, -232, -492, -232,
	-275, -275, -277, -264, 34, -225, -194, -186, -438, -439,
	-307, -264, 90, -438, 90, 67, -264, -264, -264, 90,
	90, -264, 79, 79, -261, -261, 79, 73, 73, 73,
	-261, -261, 79, 73, -266, 79, 79, 79, 79, 40,
	73, -214, 40, 267, 271, 268, 269, 270, 79, 40,
	79, 40, 79, 40, -264, 67, -440, -441, 73, -472,
	-261, 325, 105, -282, -130, 77, 31, -162, 213, 210,
	-466, -329, -328, -248, -145, -145, -145, -145, 53, 53,
	53, 58, 53, 58, 53, -240, -329, -147, -158, -266,
	68, -482, -481, -480, -478, 61, 221, 62, -294, -325,
	-278, 73, -332, -188, -188, 68, -234, 17, 136, -234,
	98, -6, -115, -117, -289, -6, -289, 545, 335, 546,
	73, 79, 79, -421, 405, 400, 402, 90, -296, -408,
	-407, 46, -133, -156, -400, -443, -406, -264, 46, -133,
	-400, -264, 79, 15, -322, -317, 124, 124, -264, 346,
	-333, 73, 367, 73, 216, 560, 137, 105, -254, -284,
	-289, 68, -202, 158, 157, -202, 68, -379, -379, -378,
	-381, -378, -202, -202, 68, 68, 23, 68, 68, 68,
	-289, 68, 68, 137, -397, 458, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -298,
	-297, 239, -421, 44, 45, 73, 73, -179, -194, 214,
	-170, 40, -133, -473, 77, -467, 73, -264, -474, 77,
	369, 135, 323, 40, 370, 371, 385, 318, 79, 79,
	376, -468, -264, -163, 319, -188, -304, -255, 132, 258,
	302, -182, -183, -184, -182, -182, -375, 301, 20, 79,
	123, -159, 65, 136, -141, -189, -264, 124, 68, -232,
	-264, -232, -232, -275, -133, -206, -205, -203, 84, 95,
	40, 359, -204, 77, 132, 272, 250, 273, -223, -279,
	64, 365, 223, 89, 90, 347, -280, -436, -264, -434,
	-436, -264, -434, -434, -307, -289, -264, -228, 307, 308,
	-209, -209, 73, 73, -210, 250, -190, 68, 137, 105,
	-473, -467, 105, 73, -474, 73, 137, -162, -162, -232,
	137, 105, -165, -164, 64, 65, -166, 64, -164, 53,
	53, -232, -480, -479, 23, -439, -439, -439, 68, 68,
	-233, 18, 20, 124, -233, 102, 100, 102, 102, -264,
	68, 68, -385, 537, -417, -419, 400, 20, 20, 13,
	68, -400, -400, -317, -333, 388, -188, -253, 73, 560,
	-289, 68, -289, 68, 73, -153, 20, -385, -172, -194,
	-283, 73, -471, 379, 73, 73, 79, 40, 79, 135,
	372, -394, -130, -162, 67, -261, -261, -261, -264, 68,
	137, 68, 68, -376, 238, 79, 123, 79, 123, 79,
	-262, -141, -264, -232, -465, 136, -232, -232, -203, 84,
	-285, 73, -211, -263, 133, -212, 40, 271, 267, -213,
	40, 251, 252, -215, 67, 279, 13, 90, 90, -188,
	67, 67, 65, 289, 67, 67, -436, 68, 251, 252,
	68, -441, 73, -471, 73, -466, -153, -328, -406, -289,
	67, -289, 67, 53, 19, 17, -289, -295, 222, -6,
	546, 335, -216, 538, 73, 20, 73, -415, 73, -329,
	-111, -411, -360, 68, 68, -354, -357, -356, -359, 406,
	281, 412, -295, -216, 488, 20, 489, 322, 40, 79,
	40, 373, -312, -314, -248, 67, -209, -211, 73, -207,
	-208, -229, -184, -110, -109, -207, -377, 141, 79, 123,
	79, 79, -232, -232, 79, 67, -401, -313, 67, -312,
	-312, -437, 309, 310, 311, 313, 312, -437, -312, -312,
	67, -335, -334, 280, 95, -154, -157, -435, -264, 223,
	20, 20, -264, -264, -251, 539, 79, 73, 402, -386,
	540, -420, 405, -414, -412, 400, 401, 402, 403, 68,
	-358, 97, 372, 376, -289, -251, -173, -264, 73, 367,
	73, 322, 68, 137, -378, -289, -349, 239, 137, -229,
	-111, -349, -392, 149, 300, 489, 79, 123, 79, -153,
	68, -289, -299, -218, -217, 485, -312, 68, 68, 68,
	68, -312, 280, 68, 68, 137, 67, 20, 73, -422,
	221, -418, -419, 404, -412, 20, 402, 20, 20, -358,
	535, 410, 411, 410, 411, 34, 388, -315, -314, -148,
	68, -350, 288, 20, -229, -350, 300, 79, 123, 79,
	-154, 68, -222, -220, -221, 64, 417, 277, 278, 68,
	-315, -315, -315, -315, 68, -264, 223, -252, -264, -415,
	-429, 67, 79, -417, -416, -418, 20, -415, 20, -415,
	-415, 94, 73, -316, 229, 77, 489, 307, 308, -148,
	20, -351, 281, 282, -352, -364, 284, 79, -334, -221,
	64, -220, 64, 14, 13, -223, 68, 137, -433, 30,
	68, -428, -427, -249, -423, -264, 405, 406, 73, -415,
	-358, -261, 73, 306, -248, 67, -362, 285, 67, -360,
	67, -360, 90, 310, -219, 274, 275, 30, 149, -219,
	-264, -432, -431, -430, 68, 137, 136, 79, -264, -348,
	-353, 286, 79, -285, 67, -285, 67, -361, 283, 67,
	84, 40, 276, 137, 105, -427, -264, 68, -366, 67,
	20, 68, -348, 68, -348, 67, 105, -285, -431, 40,
	-289, 136, -367, -365, 239, -352, 68, 68, 68, -348,
	79, 68, -264, 68, 137, -264, -363, 287, 68, -365,
	-368, 46, 79, -372, -369, 67, -229, 241, 115, -372,
	-229, -371, -370, 286, 242, 67, 68, 137, -264, 238,
	67, -295, -370, -369, -295, 68, 68,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 245,
	246, 247, 750, 751, 752, 753, 754, 0, 0, 0,
	0, 524, 525, 0, 496, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 336,
	337, 338, 339, 340, 341, 0, 270, 266, 206, 207,
	208, 209, 277, 278, 366, 0, 0, 0, 0, 607,
	-2, 53, 259, 0, 250, 250, 755, 756, 757, 758,
	759, 760, 761, 762, -2, 537, 0, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 325,
	326, 327, 321, 322, 324, 323, -2, 0, 537, 0,
	0, 0, 627, 0, 0, 642, 664, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1047, 1048,
	1049, 1050, -2, 1514, 1493, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 0, 243, 241, 1493,
	1514, 1574, 1607, 0, 767, 0, 585, 0, 590, 1010,
	585, 271, 526, 527, 627, 627, 494, 0, 307, 0,
	1506, 311, 0, 0, 0, 491, 301, 302, 303, 304,
	305, 306, 0, 0, 749, 0, 0, 297, 0, 265,
	1565, 0, 0, 0, 0, 0, 0, 150, 838, 152,
	840, 156, 163, 0, 0, 168, 169, 172, 173, 174,
	175, 176, 0, 180, 0, 182, 185, 0, 187, 188,
	0, 191, 192, 193, 0, 203, 204, 205, 841, 842,
	843, -2, 81, 765, 1431, 1326, 0, 1333, 1334, 1345,
	1356, 1120, 1121, 1122, 1123, 0, 0, 0, 0, 0,
	1130, 1131, 0, 1145, 1667, 0, 1137, 1138, 1139, 1140,
	1141, 90, 102, 103, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 0, 1299, 1107, 1047, 0, 1675,
	0, 1695, 1700, 1701, 1702, 1703, 1694, 0, 0, 1284,
	0, 1274, 0, 0, -2, -2, 0, 0, 1633, -2,
	1672, 1691, 1699, 1676, 1698, 1669, 1670, 1664, 1665, 1666,
	1668, 1677, 1679, 1690, 0, 1686, 1696, 1697, 0, 0,
	104, 105, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1290, -2, 1292, 1293, 1295,
	1296, 1297, 1298, -2, 1301, 1302, 1303, -2, -2, 1306,
	1307, 1308, 1309, 1310, 1311, 1314, -2, 1316, -2, -2,
	1286, 1287, 1288, 1289, 1278, 1279, 1280, 1281, 1282, 1283,
	-2, -2, -2, 627, 700, 0, -2, 0, 0, 0,
	647, 650, 653, 656, 0, 54, 55, 260, 261, 249,
	251, 0, 255, 0, 248, 0, 0, 0, 870, 870,
	870, 870, 870, 0, 870, 0, 0, 0, 870, 845,
	846, 847, 868, 869, 916, 542, 538, 539, 540, 541,
	615, 0, 617, 620, 471, 418, 0, 0, 0, 471,
	0, 432, 424, 0, 0, 0, 471, 0, 0, 622,
	622, 0, 474, 481, 471, 471, -2, 471, 471, 471,
	0, 0, 438, 439, 440, 424, 424, 443, 444, 445,
	456, 457, 482, 1455, 0, 0, 366, 0, 366, 0,
	366, 366, 544, 1565, 0, 0, 217, 1633, 222, 0,
	1513, 1579, 1528, 0, 0, 1546, 0, -2, 0, 287,
	622, 0, 628, 0, 627, 0, 0, 366, 366, 366,
	366, 366, 366, 366, 366, 0, 0, 0, 366, 0,
	0, 665, 666, 661, 662, 663, 667, 668, 5, 6,
	19, 0, 0, 0, 0, 0, 0, 60, 59, 0,
	1432, 1450, 1387, 1388, 1389, 1437, 1391, 1441, 1441, 1441,
	1441, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	0, 0, 1430, 1410, 1439, 1439, 1439, 1437, 1434, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1444, 1444, 1447, 1444, 0, 1324, 0,
	0, 0, 0, 589, 0, 0, 622, -2, 0, 495,
	308, 1051, 0, 0, 312, 313, 0, 0, 328, 0,
	331, 316, 317, 318, 0, 130, 0, 299, 300, 0,
	0, 267, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 160, 157, 164, 167, 177, 184, 0, 196,
	198, 201, 158, 165, 170, 171, 178, 199, 159, 161,
	162, 166, 200, 202, 179, 183, 197, 181, 186, 189,
	190, 195, 0, 131, 0, 0, 0, 0, 0, 1332,
	0, 0, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1326, 0,
	0, 1126, 1127, 1128, 1129, 1132, 0, 1146, 0, 0,
	0, 1385, 0, 1324, 1324, 0, 1324, 1320, 0, 0,
	0, 0, 0, 0, 1324, 1260, 0, 0, 1262, 1275,
	0, 0, 1264, 1265, 0, 1268, 1269, 1324, 0, 1324,
	1273, 1256, 1257, 0, 1320, 1320, 0, 0, 1320, 1320,
	1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320,
	0, 622, 0, 0, 610, 0, 591, 0, 644, 646,
	0, 648, 649, 651, 652, 654, 655, 657, 658, 56,
	0, 0, 253, 0, 258, 0, 764, 0, 0, 780,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 870,
	870, 0, 544, 543, 0, 616, 0, 0, 673, 0,
	0, 0, 424, 471, 471, 430, 431, 426, 425, 477,
	478, 474, 0, 474, 474, 673, 0, 450, 451, 452,
	471, 471, 458, 623, 459, 460, 474, 0, 479, 480,
	673, 0, 0, 673, 673, 0, 468, 469, 470, 0,
	0, 870, 0, 487, 426, 426, 1456, 1457, 0, 879,
	0, 0, 0, 490, 0, 0, 0, 545, 210, 0,
	0, 0, 0, 0, 0, 239, 240, 0, 0, 0,
	0, 0, 230, 233, 1004, 1005, 835, 836, 234, 235,
	279, 280, 0, 591, 643, 645, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 520, 0, 522,
	0, 0, 681, 675, 677, 744, 90, 681, 8, 77,
	74, 0, 19, 0, 0, 19, 19, 0, 19, 244,
	0, 1453, 1451, 1452, 1390, 1438, 0, 1415, 0, 1416,
	1417, 1418, 0, 0, 1411, 0, 1412, 1413, 1414, 1406,
	0, 1407, 1408, 0, 1409, 242, 0, 1325, 768, 0,
	564, 577, 559, 0, 566, 0, 1011, 546, 577, 548,
	0, 566, 591, 613, 591, 0, 309, 0, 314, 0,
	0, 330, 332, 333, 334, 319, 320, 492, 295, 296,
	288, 289, 290, 291, 292, 293, 294, 298, 100, 0,
	268, 269, 0, 0, 0, 144, 145, 146, 147, 148,
	149, 151, 135, 512, 514, 827, 839, 0, 830, 0,
	154, 194, 127, 0, 0, 1327, 1328, 1329, 1330, 1331,
	1335, 0, 1337, 1339, 1341, 1343, 0, 1361, -2, -2,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1346, 1359, 1360, 0, 0, 0, 0, 0,
	0, 1357, 1357, 1352, 0, 1124, 0, 1143, 1147, 0,
	0, 0, 91, 1319, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 0, 0, 1326, 0, 0, 0, 1321,
	1322, 0, 0, 0, 1215, 0, 0, 1221, 1222, 1223,
	0, 572, 0, 1285, 1261, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 699, 701, 0, 581, 583, 584, 0, 611, 624,
	629, 630, 633, 52, 57, 262, 263, 0, 0, 257,
	0, -2, 782, 0, 620, 0, 0, 794, 364, 821,
	0, 0, 837, 860, 866, 0, 0, 0, 894, 0,
	618, 0, 0, 713, 417, 0, 472, 473, 421, 1565,
	426, 673, 673, 433, 427, 434, 476, 435, 436, 437,
	0, 673, 673, 471, 474, 461, 475, 474, 464, 465,
	0, 483, 488, 484, 0, 486, 441, 442, 620, 343,
	344, 0, 0, 0, 349, 1458, 1458, 0, 1458, 1458,
	1458, 1458, 0, 0, 1458, 1458, 1458, 1458, 1458, 1458,
	1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 0, 880,
	361, 0, 0, 364, 811, 686, 0, 687, 688, 684,
	715, 739, 739, 0, 739, 719, 1010, 211, 212, 0,
	214, 215, 216, 223, 218, 220, 0, 0, 224, 236,
	237, 238, 0, 0, 0, 228, 229, 0, 0, 282,
	283, 285, 0, 609, 509, 1008, 510, 511, 515, 0,
	517, 518, 519, 782, 0, 816, 673, 0, 682, 0,
	678, 745, 0, 747, 0, 673, 0, 75, 19, 0,
	68, 65, 0, 0, 0, 0, 0, 1433, 1386, 1454,
	0, 0, 0, 1435, 0, 0, 0, 0, 58, 593,
	553, 0, 558, 574, 0, 578, 0, 0, 570, 563,
	567, 0, 0, 587, 547, 0, 0, 552, 612, 614,
	1052, 0, 315, 329, 0, 0, 0, 0, 138, 824,
	0, 139, 143, 133, 0, 0, 0, 829, 0, 826,
	831, 0, 153, 0, 0, 128, 129, 885, 890, 0,
	1336, 1338, 1340, 1342, 1344, 0, 1347, 1357, 1357, 1353,
	0, 1348, 0, 1350, 0, 1327, 0, 1148, 0, 0,
	0, 0, 0, 0, 1205, 1206, 0, 0, 1210, 0,
	1212, 1213, 1214, 1216, 0, 0, 0, 1220, 0, 1259,
	1277, 1263, 1266, 0, 1270, 0, 1272, 0, 627, 0,
	1182, 1182, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 1142, 0, 0, 702, 593,
	0, 0, 0, 636, 634, 635, 264, 252, 254, 0,
	0, 0, 770, 771, 773, 0, 776, 777, 778, 0,
	783, 784, 786, 787, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1498, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 781, 0, 871, 801,
	1458, 368, 0, 0, 823, 0, 0, 0, -2, 0,
	0, 0, 0, 896, 0, 0, 0, 531, 535, 23,
	621, 0, 674, 419, 0, 420, 471, 428, 429, 673,
	1010, 453, 454, 673, 471, 471, 474, 0, 485, 0,
	879, 346, 1016, 1017, 1018, 0, 0, 1022, 1029, 870,
	1077, 0, 1029, 0, 0, 1031, 1032, 347, 0, 0,
	0, 0, 0, 348, 0, 0, 1459, 0, 1458, 1458,
	0, 0, 0, 0, 1458, 1458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 1458, 0, 0, 368, 808, 0, 0, 0,
	0, 0, 0, 706, 0, 0, 705, 0, 0, 0,
	0, 0, 620, 740, 0, 742, 743, 717, -2, 0,
	686, 722, 1324, 0, 0, 0, 225, 226, 227, 231,
	232, 281, 284, 286, 0, 0, 0, 523, 671, 676,
	683, 746, 748, 91, 679, 671, 0, 78, 19, 77,
	69, 70, 0, 19, 0, 0, 0, 0, 1443, 1442,
	1428, 0, 1429, 1440, 1445, 0, 1448, 0, 597, 0,
	0, 577, 579, 0, 0, 577, 0, 0, 586, 0,
	0, 577, 0, 0, 493, 101, 335, 0, 0, 0,
	0, 0, 513, 0, 828, 135, 0, 0, 155, 0,
	0, 888, 0, 890, 1323, 1349, 1351, 0, 1358, 1354,
	1125, 1133, 1144, 0, 0, 1150, 1162, 1162, 0, 1153,
	1441, 1441, 1156, 1437, 1439, 1437, 1162, 1162, 0, 92,
	0, 0, 1211, 0, 0, 0, 573, 0, 0, 0,
	1180, 1182, 1187, 1183, 1188, 1182, 1182, 1182, 1182, 1193,
	1182, 1182, 1182, 1182, 1182, 1182, 1182, 1182, 1178, 582,
	597, 625, 626, 631, 632, 0, 256, 0, 0, 775,
	0, 0, 0, 788, 0, 804, 802, 803, 0, 818,
	369, 370, 371, 372, 0, 0, 0, 822, 0, 554,
	0, 861, 862, 863, 864, 865, -2, 874, 0, 0,
	1012, 1012, 1012, 904, 0, 895, 585, 0, -2, 0,
	0, 533, 0, 0, 714, 422, 673, 446, 0, 462,
	673, 673, 471, 489, 0, 345, -2, 1021, 1041, 1030,
	1041, 1078, 1041, 1041, 870, 0, 350, 351, 352, 0,
	354, 0, 963, 964, 0, 0, 967, 968, 969, 970,
	0, 0, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 998, 999, 1000, 1001, 1002, 1003, 983, 984,
	985, 986, 987, 988, 995, 0, 0, 992, 0, 804,
	0, 0, 0, 818, 810, 0, 812, 813, 0, 0,
	556, 673, 274, 0, 709, 703, 0, 692, 707, 708,
	695, 0, 697, 0, 693, 694, 673, 685, 716, 741,
	718, 721, 723, 724, 730, 0, 0, 0, 0, 213,
	0, 388, 219, 1009, 516, 521, 669, 0, 0, 669,
	73, 76, 0, 71, 0, 0, 0, 0, 63, 61,
	1436, 0, 0, 599, 115, 0, 0, 0, 575, 0,
	580, 577, 562, 571, 561, 568, 569, 588, 577, 551,
	550, 1053, 310, 0, 825, 135, 140, 141, 142, 136,
	134, 832, 0, 834, 0, 886, 890, 0, 0, 1355,
	1149, 1134, 1151, 1163, 1164, 1152, 1135, 1154, 1155, 1157,
	1158, 1159, 1160, 1161, 1136, 1207, 0, 1209, 1217, 1218,
	0, 1267, 1271, 0, 0, 0, 1186, 1189, 1190, 1191,
	1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 627,
	1179, 0, 599, 637, 638, 763, 766, 772, 774, 0,
	785, 0, 792, 793, 0, 0, 796, 797, 806, 0,
	0, 0, 374, 375, 0, 0, 0, 387, 383, 384,
	385, 365, 817, 808, 0, 0, 875, 1458, 1458, 1458,
	0, 0, 1013, 1014, 0, 0, 907, 0, 0, 898,
	0, 739, 0, 0, 673, 532, 535, 536, 619, 423,
	673, 466, 463, 673, 342, 1043, -2, 1056, 1058, 0,
	0, 1061, 1062, 0, 0, 0, 0, 1099, 1068, 0,
	0, 1072, 0, 1373, 1374, 0, 1076, 0, 1042, 0,
	1033, 1042, 0, 0, 1041, 0, 353, 355, 356, 357,
	965, 966, 971, 972, 989, 0, 0, 991, 0, 0,
	358, 0, 0, 359, 363, 809, 0, 814, 815, 627,
	0, 0, 689, 710, 0, 0, 690, 0, 691, 696,
	698, 273, 725, 0, 0, 727, 728, 729, 720, 221,
	659, 0, 0, 680, 660, 0, 19, 0, 0, 66,
	1446, 1449, 601, 0, 598, 116, 0, 0, 0, 0,
	576, 560, 549, 137, 132, 833, 118, 889, 891, 887,
	0, 1219, 0, 1182, 1181, 1175, 0, 601, 0, 791,
	789, 805, 795, 0, 819, 820, 0, 376, 377, 0,
	380, 386, 807, 555, 0, 0, 0, 0, 867, -2,
	0, 0, -2, 910, 0, 905, 0, 897, 0, 900,
	673, 673, -2, 529, 534, 0, 447, 467, 1057, 1059,
	1060, 1063, 1064, 1006, 1007, 1065, 1104, 1105, 1106, 1066,
	1101, 1102, 1103, 1067, 0, 0, 0, 1371, 1372, 1097,
	0, 0, 0, 0, 0, 0, 0, 1027, 996, 997,
	990, 993, 994, 362, 360, 557, 622, 275, 276, 711,
	0, 704, 734, 731, 0, 0, 670, 672, 67, 72,
	0, 0, 603, 0, 600, 0, 594, 596, 126, 565,
	88, 109, 0, 1208, 1258, 1185, 0, 1176, 0, 1170,
	1171, 1172, 1177, 603, 0, 0, 0, 373, 378, 0,
	381, 382, 0, 856, 1437, 0, 876, 877, 878, 917,
	-2, 960, 1015, 882, 118, 917, 901, 0, 908, 0,
	906, 899, 627, 530, 0, 0, 1274, 1092, 0, 0,
	0, 1034, 1036, 1037, 1038, 1039, 1040, 1035, 0, 0,
	0, 1026, 1028, 1073, 0, 272, 0, 0, 735, 737,
	732, 733, 62, 64, 79, 0, 602, 117, 0, 80,
	0, 106, 0, 119, 120, 0, 0, 0, 0, 1184,
	1173, 0, 0, 0, 0, 592, 0, 790, 798, 0,
	800, 379, 849, 0, 633, 0, 919, 0, 879, 962,
	884, 919, 893, 0, 903, 0, 912, 0, 909, 622,
	1100, 0, 1071, 1080, 1093, 0, 0, 849, 849, 849,
	849, 0, 1074, 712, 726, 0, 0, 0, 89, 93,
	0, 115, 112, 0, 121, 0, 0, 0, 0, 0,
	1165, 1166, 1168, 1167, 1169, 0, 799, 848, 857, 858,
	633, 881, 0, 956, 961, 883, 902, 911, 0, 914,
	528, 1069, 1079, 1081, 1082, 0, 1094, 1095, 1096, 1098,
	1019, 1020, 1023, 1024, 0, 736, 738, 0, 605, 595,
	82, 0, 0, 110, 111, 113, 0, 122, 0, 124,
	125, 0, 779, 850, 1458, 0, 0, 854, 855, 859,
	0, 944, 0, 0, 950, 0, 957, 913, 1070, 1083,
	0, 1084, 0, 0, 0, 1025, 604, 0, 892, 0,
	94, 0, 96, 98, 99, 1044, 107, 108, 114, 123,
	1174, 0, 852, 0, 920, 0, 922, 0, 0, 0,
	0, 0, 954, 0, 1085, 1087, 1088, 0, 0, 1086,
	606, 83, 84, 0, 95, 0, 0, 851, 853, 0,
	924, 0, 945, 0, 0, 0, 0, 0, 0, 0,
	1089, 1091, 1090, 0, 0, 97, 1045, 921, 918, 0,
	956, 946, 0, 948, 0, 0, 0, 0, 85, 86,
	87, 0, 0, 926, 0, 942, 947, 949, 951, 0,
	955, 953, 1046, 925, 0, 938, 923, 0, 952, 927,
	-2, 0, 943, 928, -2, 0, 936, 0, 0, 929,
	937, 0, 932, 0, 0, 0, 931, 0, -2, 939,
	0, 0, 933, -2, 0, 941, 940,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 127, 119, 3,
	67, 68, 124, 122, 137, 123, 136, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 557, 556,
	106, 105, 107, 3, 558, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 559, 118, 560, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 104,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	120, 121, 126, 128, 131, 132, 133, 134, 135, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:710
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:717
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:723
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:737
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:741
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:756
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:760
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:766
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:834
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:840
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:847
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:855
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:861
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:870
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:880
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:888
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:896
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:922
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:962
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:968
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:972
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:997
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1001
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1020
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1060
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1071
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1077
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1081
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1094
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1102
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1106
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1141
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1147
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1156
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1167
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1171
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1177
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1181
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1187
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1197
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1221
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1240
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1244
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1248
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1257
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1272
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1279
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1284
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1291
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1300
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1324
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1328
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1334
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1340
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1358
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1375
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1398
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1406
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1411
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1415
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1421
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1462
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1485
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1517
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1546
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1561
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1565
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1587
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1591
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1649
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1653
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1805
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1858
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1862
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1889
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1895
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1899
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1930
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1938
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1961
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1991
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1998
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2006
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2029
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2033
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2037
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2043
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2047
		{
			yyVAL.str = yyDollar[1].str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2053
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2057
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2063
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2067
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2093
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2097
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2101
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2105
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2109
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2113
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2117
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2121
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2135
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2139
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2144
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2149
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2192
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2199
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2221
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2225
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2247
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2251
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2257
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2313
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2319
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2358
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2378
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2429
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2433
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2439
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2450
		{
			yyVAL.str = "true"
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2451
		{
			yyVAL.str = "false"
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2492
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2496
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2502
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2509
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2513
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2517
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2523
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2544
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2551
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2568
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2572
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2591
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2608
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2614
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2640
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2645
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2649
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2658
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2674
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2682
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2686
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2690
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2694
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2734
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2740
		{
			yyVAL.item = nil
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2745
		{
			yyVAL.item = nil
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2789
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2793
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2797
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2810
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2821
		{
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2825
		{
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2830
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2840
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2858
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2870
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2876
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2882
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2894
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2931
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2944
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2954
		{
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2956
		{
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2975
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2984
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2988
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2992
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2998
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3004
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3010
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3016
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3025
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3035
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3051
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3105
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3109
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3114
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3118
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3124
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3141
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3152
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3160
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3172
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3176
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3182
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3188
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3192
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3196
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3202
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3206
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3247
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3256
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3260
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3350
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3357
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3397
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3401
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3407
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3412
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3419
		{
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3421
		{
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3424
		{
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3433
		{
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3437
		{
		}
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3442
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3451
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3464
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3472
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3479
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3486
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3506
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3519
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3525
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3529
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3535
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3542
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3548
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3556
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3570
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3589
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3593
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3602
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3606
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3625
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3631
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3635
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3641
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3645
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3651
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3656
		{
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3660
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3667
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3671
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3678
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3687
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3693
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3697
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3703
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3707
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3736
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3743
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3761
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3780
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3786
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3793
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3797
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3810
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3814
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3819
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3823
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3830
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3835
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3842
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3848
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3852
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3856
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3860
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3864
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3868
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3874
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3881
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3890
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3894
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3900
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3912
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3921
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3927
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3931
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3935
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3944
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3950
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3956
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3960
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3966
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3971
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3975
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3979
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3984
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3988
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3992
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3998
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4002
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4006
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4020
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4024
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4044
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4054
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4066
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4074
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4082
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4091
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4099
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4107
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4115
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4123
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4131
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4139
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4147
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4155
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4165
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4176
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4190
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4194
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4198
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4203
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4207
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4233
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4242
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4248
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4252
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4258
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4262
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4267
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4271
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4276
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4284
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4290
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4298
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4316
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4331
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4359
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4363
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4373
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4377
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4381
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4385
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4391
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4401
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4405
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4411
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4427
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4433
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4437
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4441
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4451
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4457
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4461
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4467
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4471
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4477
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4481
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4491
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4504
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4516
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4547
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4551
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4557
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4567
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4571
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4575
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4580
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4584
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4588
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4592
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4601
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4605
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4609
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4613
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4618
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4622
		{
			yyVAL.str = yyDollar[1].str
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4626
		{
			yyVAL.str = yyDollar[2].str
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4632
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4638
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4642
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4646
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4650
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4654
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4660
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 763:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4703
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4709
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 766:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4725
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4730
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4736
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4743
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4747
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4753
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4759
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4764
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4768
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4772
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4776
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4783
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4795
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4800
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4813
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4817
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4829
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4833
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4837
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4843
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4855
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4866
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4878
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4884
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4894
		{
			yyVAL.str = yyDollar[1].str
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4898
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4904
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4917
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4925
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4931
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4938
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4946
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4961
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4984
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4988
		{
			yyVAL.str = yyDollar[2].str
		}
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4994
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5008
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5014
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5020
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5026
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5035
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5044
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5049
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5055
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5063
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5169
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5173
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5179
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5189
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5193
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5199
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5209
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5213
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5217
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5226
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5232
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5239
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5245
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5254
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5261
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5270
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5274
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5280
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5294
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5302
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5307
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5311
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5315
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5325
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5348
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5370
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5374
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5378
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5382
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5386
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5392
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5396
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5402
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5407
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5428
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5434
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5449
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5459
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5463
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5472
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5478
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5482
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5488
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5492
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5496
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5501
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5505
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5511
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5523
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5532
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5545
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5552
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5562
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5581
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5585
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5590
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5594
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5601
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5612
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5625
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5639
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5647
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5654
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5661
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5668
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5679
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5683
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5691
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5698
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5709
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5716
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5727
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5734
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5741
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5748
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5755
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5759
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5764
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5768
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5782
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5789
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5800
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5813
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5819
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5823
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5829
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5848
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5852
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5858
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5862
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5868
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5875
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5884
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5888
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5893
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5897
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5902
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5906
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5911
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5915
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5925
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5929
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5940
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5948
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5956
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5964
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5975
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5984
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5994
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6004
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6008
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6026
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6032
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6036
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6040
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6046
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6050
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6054
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6058
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6062
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6066
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6071
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6075
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6079
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6083
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6087
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6091
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6095
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6099
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6103
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6107
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6111
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6115
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6119
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6123
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6127
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6131
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6135
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6139
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6143
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6147
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6151
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6155
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6166
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6170
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6181
		{
			yyVAL.str = ""
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6185
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6189
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6195
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6199
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6203
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6207
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6211
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6215
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6229
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6233
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6242
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6247
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6253
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6260
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6264
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6274
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6278
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6284
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6293
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6318
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6332
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6338
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6347
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6356
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6366
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6374
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6380
		{
			yyVAL.str = ""
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6384
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6394
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6400
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6406
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6420
		{
			yyVAL.str = ""
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6424
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6430
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6436
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6440
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6444
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6450
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6458
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6468
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6472
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6476
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6485
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6491
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6495
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6501
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6505
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6509
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6513
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6517
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6521
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6526
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6530
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6534
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6538
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6542
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6546
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6550
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6554
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6567
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6573
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6577
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6582
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6586
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6592
		{
			yyVAL.str = ""
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6596
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6602
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6614
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6621
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6628
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6635
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6642
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6651
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6657
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6663
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6667
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6671
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6675
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6679
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6684
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6691
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6695
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6699
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6708
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6713
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6717
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6733
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6739
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6743
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6747
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6751
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6755
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6759
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6763
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6767
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6771
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6775
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6779
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6783
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6787
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6793
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6797
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6801
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6805
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6809
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6813
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6817
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6821
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6829
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6833
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6837
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6842
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6850
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6855
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6859
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6868
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6872
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6876
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6880
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6884
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6890
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6903
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6912
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6918
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6922
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6928
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6937
		{
			t := yyVAL.columnTypeUnion()
			if strings.ToLower(t.InternalType.FamilyString) == "binary" {
				t.InternalType.Scale = -1
			}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6943
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6977
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6990
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7003
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7015
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7044
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7059
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7076
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7091
		{
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7097
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7101
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7105
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7111
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7115
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7127
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7131
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7137
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7144
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7157
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7164
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7173
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7178
		{
			yyVAL.str = ","
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7182
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7194
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7204
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7215
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7225
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7234
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7243
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7253
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7263
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7273
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7283
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7303
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7313
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7323
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7333
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7343
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7353
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7363
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7380
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7388
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7396
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7404
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7412
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7422
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7430
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7439
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7447
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7455
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7463
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7471
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7482
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7504
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7515
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7537
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7573
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7585
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7597
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7608
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7616
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7623
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7630
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7642
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7650
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7660
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7670
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7678
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7689
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7698
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7707
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7715
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7725
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7733
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7747
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7757
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7776
		{
		}
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7778
		{
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7819
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7830
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7834
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7838
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7844
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7853
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7859
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7863
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7870
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7874
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7878
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7886
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7890
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7894
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7898
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7904
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7908
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7912
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7916
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7920
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7924
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7928
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7932
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7936
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7940
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7948
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7952
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7956
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7960
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7964
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7968
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7972
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7976
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7980
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7984
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7994
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8000
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8004
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8011
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8015
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8019
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8025
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8029
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8033
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8037
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8041
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8045
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8049
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8055
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8059
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8063
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8067
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8073
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8077
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8090
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8095
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8099
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8103
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8107
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8111
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8115
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8129
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8133
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8140
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8151
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8156
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8174
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8198
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8211
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8237
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8250
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8263
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8289
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8302
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8315
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8328
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8343
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8370
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8412
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8460
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8477
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8489
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8509
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8529
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8549
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8578
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8591
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8604
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8617
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8641
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8653
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8665
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8677
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8689
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8701
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8713
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8725
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8738
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8751
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8766
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8774
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8783
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8793
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8816
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8821
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8827
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8834
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8838
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8843
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8847
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8853
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8859
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8866
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8882
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8889
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8896
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8905
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8909
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8913
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8919
		{
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8931
		{
			yyVAL.str = ""
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8935
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

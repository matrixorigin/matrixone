// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const INTEGRAL = 57420
const HEX = 57421
const BIT_LITERAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const NULL = 57425
const TRUE = 57426
const FALSE = 57427
const LOWER_THAN_CHARSET = 57428
const CHARSET = 57429
const UNIQUE = 57430
const KEY = 57431
const OR = 57432
const PIPE_CONCAT = 57433
const XOR = 57434
const AND = 57435
const NOT = 57436
const BETWEEN = 57437
const CASE = 57438
const WHEN = 57439
const THEN = 57440
const ELSE = 57441
const END = 57442
const ELSEIF = 57443
const LOWER_THAN_EQ = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT = 57453
const ILIKE = 57454
const SHIFT_LEFT = 57455
const SHIFT_RIGHT = 57456
const DIV = 57457
const MOD = 57458
const UNARY = 57459
const COLLATE = 57460
const BINARY = 57461
const UNDERSCORE_BINARY = 57462
const INTERVAL = 57463
const OUT = 57464
const INOUT = 57465
const BEGIN = 57466
const START = 57467
const TRANSACTION = 57468
const COMMIT = 57469
const ROLLBACK = 57470
const WORK = 57471
const CONSISTENT = 57472
const SNAPSHOT = 57473
const CHAIN = 57474
const NO = 57475
const RELEASE = 57476
const PRIORITY = 57477
const QUICK = 57478
const BIT = 57479
const TINYINT = 57480
const SMALLINT = 57481
const MEDIUMINT = 57482
const INT = 57483
const INTEGER = 57484
const BIGINT = 57485
const INTNUM = 57486
const REAL = 57487
const DOUBLE = 57488
const FLOAT_TYPE = 57489
const DECIMAL = 57490
const NUMERIC = 57491
const DECIMAL_VALUE = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const UUID = 57513
const GEOMETRY = 57514
const POINT = 57515
const LINESTRING = 57516
const POLYGON = 57517
const GEOMETRYCOLLECTION = 57518
const MULTIPOINT = 57519
const MULTILINESTRING = 57520
const MULTIPOLYGON = 57521
const INT1 = 57522
const INT2 = 57523
const INT3 = 57524
const INT4 = 57525
const INT8 = 57526
const S3OPTION = 57527
const SQL_SMALL_RESULT = 57528
const SQL_BIG_RESULT = 57529
const SQL_BUFFER_RESULT = 57530
const LOW_PRIORITY = 57531
const HIGH_PRIORITY = 57532
const DELAYED = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const RETURNS = 57540
const SCHEMA = 57541
const TABLE = 57542
const SEQUENCE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const CONSTRAINT = 57551
const SPATIAL = 57552
const FULLTEXT = 57553
const FOREIGN = 57554
const KEY_BLOCK_SIZE = 57555
const SHOW = 57556
const DESCRIBE = 57557
const EXPLAIN = 57558
const DATE = 57559
const ESCAPE = 57560
const REPAIR = 57561
const OPTIMIZE = 57562
const TRUNCATE = 57563
const MAXVALUE = 57564
const PARTITION = 57565
const REORGANIZE = 57566
const LESS = 57567
const THAN = 57568
const PROCEDURE = 57569
const TRIGGER = 57570
const STATUS = 57571
const VARIABLES = 57572
const ROLE = 57573
const PROXY = 57574
const AVG_ROW_LENGTH = 57575
const STORAGE = 57576
const DISK = 57577
const MEMORY = 57578
const CHECKSUM = 57579
const COMPRESSION = 57580
const DATA = 57581
const DIRECTORY = 57582
const DELAY_KEY_WRITE = 57583
const ENCRYPTION = 57584
const ENGINE = 57585
const MAX_ROWS = 57586
const MIN_ROWS = 57587
const PACK_KEYS = 57588
const ROW_FORMAT = 57589
const STATS_AUTO_RECALC = 57590
const STATS_PERSISTENT = 57591
const STATS_SAMPLE_PAGES = 57592
const DYNAMIC = 57593
const COMPRESSED = 57594
const REDUNDANT = 57595
const COMPACT = 57596
const FIXED = 57597
const COLUMN_FORMAT = 57598
const AUTO_RANDOM = 57599
const RESTRICT = 57600
const CASCADE = 57601
const ACTION = 57602
const PARTIAL = 57603
const SIMPLE = 57604
const CHECK = 57605
const ENFORCED = 57606
const RANGE = 57607
const LIST = 57608
const ALGORITHM = 57609
const LINEAR = 57610
const PARTITIONS = 57611
const SUBPARTITION = 57612
const SUBPARTITIONS = 57613
const CLUSTER = 57614
const TYPE = 57615
const ANY = 57616
const SOME = 57617
const EXTERNAL = 57618
const LOCALFILE = 57619
const URL = 57620
const PREPARE = 57621
const DEALLOCATE = 57622
const RESET = 57623
const EXTENSION = 57624
const INCREMENT = 57625
const CYCLE = 57626
const MINVALUE = 57627
const PUBLICATION = 57628
const SUBSCRIPTIONS = 57629
const PUBLICATIONS = 57630
const PROPERTIES = 57631
const PARSER = 57632
const VISIBLE = 57633
const INVISIBLE = 57634
const BTREE = 57635
const HASH = 57636
const RTREE = 57637
const BSI = 57638
const ZONEMAP = 57639
const LEADING = 57640
const BOTH = 57641
const TRAILING = 57642
const UNKNOWN = 57643
const EXPIRE = 57644
const ACCOUNT = 57645
const ACCOUNTS = 57646
const UNLOCK = 57647
const DAY = 57648
const NEVER = 57649
const PUMP = 57650
const MYSQL_COMPATIBILITY_MODE = 57651
const SECOND = 57652
const ASCII = 57653
const COALESCE = 57654
const COLLATION = 57655
const HOUR = 57656
const MICROSECOND = 57657
const MINUTE = 57658
const MONTH = 57659
const QUARTER = 57660
const REPEAT = 57661
const REVERSE = 57662
const ROW_COUNT = 57663
const WEEK = 57664
const REVOKE = 57665
const FUNCTION = 57666
const PRIVILEGES = 57667
const TABLESPACE = 57668
const EXECUTE = 57669
const SUPER = 57670
const GRANT = 57671
const OPTION = 57672
const REFERENCES = 57673
const REPLICATION = 57674
const SLAVE = 57675
const CLIENT = 57676
const USAGE = 57677
const RELOAD = 57678
const FILE = 57679
const TEMPORARY = 57680
const ROUTINE = 57681
const EVENT = 57682
const SHUTDOWN = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const ENGINES = 57690
const LOW_CARDINALITY = 57691
const ADMIN_NAME = 57692
const RANDOM = 57693
const SUSPEND = 57694
const ATTRIBUTE = 57695
const HISTORY = 57696
const REUSE = 57697
const CURRENT = 57698
const OPTIONAL = 57699
const FAILED_LOGIN_ATTEMPTS = 57700
const PASSWORD_LOCK_TIME = 57701
const UNBOUNDED = 57702
const SECONDARY = 57703
const USER = 57704
const IDENTIFIED = 57705
const CIPHER = 57706
const ISSUER = 57707
const X509 = 57708
const SUBJECT = 57709
const SAN = 57710
const REQUIRE = 57711
const SSL = 57712
const NONE = 57713
const PASSWORD = 57714
const MAX_QUERIES_PER_HOUR = 57715
const MAX_UPDATES_PER_HOUR = 57716
const MAX_CONNECTIONS_PER_HOUR = 57717
const MAX_USER_CONNECTIONS = 57718
const FORMAT = 57719
const VERBOSE = 57720
const CONNECTION = 57721
const TRIGGERS = 57722
const PROFILES = 57723
const LOAD = 57724
const INFILE = 57725
const TERMINATED = 57726
const OPTIONALLY = 57727
const ENCLOSED = 57728
const ESCAPED = 57729
const STARTING = 57730
const LINES = 57731
const ROWS = 57732
const IMPORT = 57733
const MODUMP = 57734
const OVER = 57735
const PRECEDING = 57736
const FOLLOWING = 57737
const GROUPS = 57738
const DATABASES = 57739
const TABLES = 57740
const SEQUENCES = 57741
const EXTENDED = 57742
const FULL = 57743
const PROCESSLIST = 57744
const FIELDS = 57745
const COLUMNS = 57746
const OPEN = 57747
const ERRORS = 57748
const WARNINGS = 57749
const INDEXES = 57750
const SCHEMAS = 57751
const NODE = 57752
const LOCKS = 57753
const ROLES = 57754
const TABLE_NUMBER = 57755
const COLUMN_NUMBER = 57756
const TABLE_VALUES = 57757
const TABLE_SIZE = 57758
const NAMES = 57759
const GLOBAL = 57760
const PERSIST = 57761
const SESSION = 57762
const ISOLATION = 57763
const LEVEL = 57764
const READ = 57765
const WRITE = 57766
const ONLY = 57767
const REPEATABLE = 57768
const COMMITTED = 57769
const UNCOMMITTED = 57770
const SERIALIZABLE = 57771
const LOCAL = 57772
const EVENTS = 57773
const PLUGINS = 57774
const CURRENT_TIMESTAMP = 57775
const DATABASE = 57776
const CURRENT_TIME = 57777
const LOCALTIME = 57778
const LOCALTIMESTAMP = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const REPLACE = 57783
const CONVERT = 57784
const SEPARATOR = 57785
const TIMESTAMPDIFF = 57786
const CURRENT_DATE = 57787
const CURRENT_USER = 57788
const CURRENT_ROLE = 57789
const SECOND_MICROSECOND = 57790
const MINUTE_MICROSECOND = 57791
const MINUTE_SECOND = 57792
const HOUR_MICROSECOND = 57793
const HOUR_SECOND = 57794
const HOUR_MINUTE = 57795
const DAY_MICROSECOND = 57796
const DAY_SECOND = 57797
const DAY_MINUTE = 57798
const DAY_HOUR = 57799
const YEAR_MONTH = 57800
const SQL_TSI_HOUR = 57801
const SQL_TSI_DAY = 57802
const SQL_TSI_WEEK = 57803
const SQL_TSI_MONTH = 57804
const SQL_TSI_QUARTER = 57805
const SQL_TSI_YEAR = 57806
const SQL_TSI_SECOND = 57807
const SQL_TSI_MINUTE = 57808
const RECURSIVE = 57809
const CONFIG = 57810
const DRAINER = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ADDDATE = 57819
const BIT_AND = 57820
const BIT_OR = 57821
const BIT_XOR = 57822
const CAST = 57823
const COUNT = 57824
const APPROX_COUNT_DISTINCT = 57825
const APPROX_PERCENTILE = 57826
const CURDATE = 57827
const CURTIME = 57828
const DATE_ADD = 57829
const DATE_SUB = 57830
const EXTRACT = 57831
const GROUP_CONCAT = 57832
const MAX = 57833
const MID = 57834
const MIN = 57835
const NOW = 57836
const POSITION = 57837
const SESSION_USER = 57838
const STD = 57839
const STDDEV = 57840
const MEDIAN = 57841
const STDDEV_POP = 57842
const STDDEV_SAMP = 57843
const SUBDATE = 57844
const SUBSTR = 57845
const SUBSTRING = 57846
const SUM = 57847
const SYSDATE = 57848
const SYSTEM_USER = 57849
const TRANSLATE = 57850
const TRIM = 57851
const VARIANCE = 57852
const VAR_POP = 57853
const VAR_SAMP = 57854
const AVG = 57855
const RANK = 57856
const ROW_NUMBER = 57857
const DENSE_RANK = 57858
const NEXTVAL = 57859
const SETVAL = 57860
const CURRVAL = 57861
const LASTVAL = 57862
const ARROW = 57863
const ROW = 57864
const OUTFILE = 57865
const HEADER = 57866
const MAX_FILE_SIZE = 57867
const FORCE_QUOTE = 57868
const PARALLEL = 57869
const UNUSED = 57870
const BINDINGS = 57871
const DO = 57872
const DECLARE = 57873
const LOOP = 57874
const WHILE = 57875
const LEAVE = 57876
const ITERATE = 57877
const UNTIL = 57878
const CALL = 57879
const SPBEGIN = 57880
const BACKEND = 57881
const SERVERS = 57882
const KILL = 57883
const QUERY_RESULT = 57884

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9542

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 110,
	21, 635,
	-2, 616,
	-1, 124,
	219, 852,
	-2, 923,
	-1, 146,
	42, 458,
	219, 458,
	246, 465,
	247, 465,
	425, 458,
	-2, 491,
	-1, 182,
	561, 1594,
	-2, 376,
	-1, 504,
	295, 130,
	400, 130,
	-2, 1506,
	-1, 567,
	68, 1309,
	-2, 1648,
	-1, 568,
	68, 1327,
	-2, 1619,
	-1, 572,
	68, 1328,
	-2, 1647,
	-1, 597,
	68, 1239,
	-2, 1710,
	-1, 598,
	68, 1240,
	-2, 1709,
	-1, 599,
	68, 1241,
	-2, 1699,
	-1, 600,
	68, 1674,
	-2, 1694,
	-1, 601,
	68, 1675,
	-2, 1695,
	-1, 602,
	68, 1676,
	-2, 1701,
	-1, 603,
	68, 1677,
	-2, 1684,
	-1, 604,
	68, 1678,
	-2, 1692,
	-1, 605,
	68, 1679,
	-2, 1702,
	-1, 606,
	68, 1680,
	-2, 1703,
	-1, 607,
	68, 1681,
	-2, 1708,
	-1, 608,
	68, 1682,
	-2, 1713,
	-1, 609,
	68, 1683,
	-2, 1714,
	-1, 611,
	68, 1306,
	-2, 1498,
	-1, 615,
	68, 1311,
	-2, 1507,
	-1, 618,
	68, 1315,
	-2, 1525,
	-1, 622,
	68, 1319,
	-2, 1565,
	-1, 623,
	68, 1320,
	-2, 1643,
	-1, 631,
	68, 1330,
	-2, 1628,
	-1, 632,
	68, 1331,
	-2, 1673,
	-1, 633,
	68, 1332,
	-2, 1638,
	-1, 634,
	68, 1333,
	-2, 1663,
	-1, 645,
	68, 1217,
	-2, 1704,
	-1, 646,
	68, 1218,
	-2, 1705,
	-1, 647,
	68, 1219,
	-2, 1706,
	-1, 651,
	21, 636,
	-2, 599,
	-1, 721,
	420, 491,
	421, 491,
	-2, 459,
	-1, 763,
	106, 1498,
	117, 1498,
	137, 1498,
	-2, 1473,
	-1, 863,
	21, 636,
	-2, 599,
	-1, 963,
	21, 635,
	-2, 1117,
	-1, 1307,
	68, 1377,
	-2, 1645,
	-1, 1308,
	68, 1378,
	-2, 1646,
	-1, 1442,
	69, 777,
	-2, 783,
	-1, 1771,
	69, 1459,
	138, 1459,
	-2, 1630,
	-1, 1772,
	69, 1459,
	138, 1459,
	-2, 1629,
	-1, 1773,
	69, 1437,
	138, 1437,
	-2, 1616,
	-1, 1774,
	69, 1438,
	138, 1438,
	-2, 1621,
	-1, 1775,
	69, 1439,
	138, 1439,
	-2, 1553,
	-1, 1776,
	69, 1440,
	138, 1440,
	-2, 1547,
	-1, 1777,
	69, 1441,
	138, 1441,
	-2, 1489,
	-1, 1778,
	69, 1442,
	138, 1442,
	-2, 1618,
	-1, 1779,
	69, 1443,
	138, 1443,
	-2, 1551,
	-1, 1780,
	69, 1444,
	138, 1444,
	-2, 1546,
	-1, 1781,
	69, 1445,
	138, 1445,
	-2, 1539,
	-1, 1783,
	69, 1448,
	138, 1448,
	-2, 1663,
	-1, 1784,
	69, 1428,
	138, 1428,
	-2, 1648,
	-1, 1785,
	69, 1457,
	138, 1457,
	-2, 1619,
	-1, 1786,
	69, 1457,
	138, 1457,
	-2, 1647,
	-1, 1787,
	69, 1457,
	138, 1457,
	-2, 1508,
	-1, 1788,
	69, 1455,
	138, 1455,
	-2, 1638,
	-1, 1789,
	69, 1452,
	138, 1452,
	-2, 1530,
	-1, 1790,
	68, 1410,
	69, 1410,
	138, 1410,
	362, 1410,
	363, 1410,
	364, 1410,
	-2, 1488,
	-1, 1791,
	68, 1411,
	69, 1411,
	138, 1411,
	362, 1411,
	363, 1411,
	364, 1411,
	-2, 1490,
	-1, 1792,
	68, 1414,
	69, 1414,
	138, 1414,
	362, 1414,
	363, 1414,
	364, 1414,
	-2, 1620,
	-1, 1793,
	68, 1416,
	69, 1416,
	138, 1416,
	362, 1416,
	363, 1416,
	364, 1416,
	-2, 1603,
	-1, 1794,
	68, 1418,
	69, 1418,
	138, 1418,
	362, 1418,
	363, 1418,
	364, 1418,
	-2, 1552,
	-1, 1795,
	68, 1420,
	69, 1420,
	138, 1420,
	362, 1420,
	363, 1420,
	364, 1420,
	-2, 1535,
	-1, 1796,
	68, 1421,
	69, 1421,
	138, 1421,
	362, 1421,
	363, 1421,
	364, 1421,
	-2, 1536,
	-1, 1797,
	68, 1423,
	69, 1423,
	138, 1423,
	362, 1423,
	363, 1423,
	364, 1423,
	-2, 1487,
	-1, 1798,
	69, 1462,
	138, 1462,
	362, 1462,
	363, 1462,
	364, 1462,
	-2, 1513,
	-1, 1799,
	69, 1462,
	138, 1462,
	362, 1462,
	363, 1462,
	364, 1462,
	-2, 1526,
	-1, 1800,
	69, 1465,
	138, 1465,
	362, 1465,
	363, 1465,
	364, 1465,
	-2, 1509,
	-1, 1801,
	69, 1462,
	138, 1462,
	362, 1462,
	363, 1462,
	364, 1462,
	-2, 1588,
	-1, 1814,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	259, 887,
	-2, 880,
	-1, 1928,
	21, 635,
	-2, 727,
	-1, 2107,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	259, 887,
	-2, 881,
	-1, 2119,
	66, 545,
	138, 545,
	-2, 1018,
	-1, 2141,
	280, 1085,
	-2, 1064,
	-1, 2408,
	280, 1085,
	-2, 1065,
	-1, 2541,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	-2, 966,
	-1, 2544,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	-2, 966,
	-1, 2554,
	66, 545,
	138, 545,
	-2, 1019,
	-1, 2653,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	-2, 967,
	-1, 2954,
	69, 938,
	138, 938,
	-2, 887,
	-1, 2958,
	69, 938,
	138, 938,
	-2, 887,
	-1, 2972,
	69, 942,
	138, 942,
	-2, 887,
	-1, 2977,
	69, 943,
	138, 943,
	-2, 887,
}

const yyPrivate = 57344

const yyLast = 34914

var yyAct = [...]int{
	534, 1226, 2966, 2957, 1505, 2958, 173, 2937, 513, 2848,
	1288, 515, 536, 2896, 2866, 2888, 2420, 2625, 523, 2620,
	2777, 2804, 2685, 2805, 1749, 1100, 2792, 2769, 2646, 2497,
	2788, 2707, 2734, 2498, 2645, 994, 652, 2623, 2697, 421,
	1463, 2778, 2780, 2674, 564, 1217, 2122, 2652, 427, 1291,
	432, 432, 2380, 1151, 2615, 2564, 432, 448, 457, 2208,
	1564, 457, 2209, 2210, 1561, 2194, 2409, 2432, 2525, 2202,
	1853, 2495, 517, 2012, 1657, 1769, 1626, 2483, 2205, 2466,
	158, 2231, 2356, 2353, 1823, 1856, 2351, 2647, 1284, 1922,
	2378, 1058, 1539, 1465, 2431, 1906, 1874, 2108, 462, 1767,
	857, 1509, 1142, 2137, 1759, 2261, 1208, 506, 468, 507,
	512, 1578, 2300, 2011, 1424, 1635, 1634, 1962, 1213, 2244,
	1627, 1557, 1600, 1911, 1652, 1653, 1923, 698, 1542, 1074,
	768, 53, 2090, 754, 36, 762, 1492, 2143, 2086, 1854,
	2381, 6, 1501, 1540, 1822, 1225, 169, 8, 1450, 812,
	421, 168, 7, 1218, 1979, 1685, 1282, 516, 1432, 1654,
	1182, 109, 1807, 1765, 1160, 426, 2383, 1321, 2382, 35,
	1475, 2053, 420, 173, 1474, 173, 1664, 803, 804, 1337,
	2054, 1273, 1076, 524, 514, 505, 507, 14, 874, 766,
	1032, 454, 1633, 1616, 26, 1630, 1189, 1590, 1089, 15,
	753, 13, 1281, 1449, 1930, 441, 1085, 649, 1134, 1343,
	697, 1342, 470, 23, 32, 16, 444, 10, 1101, 471,
	1056, 159, 1181, 155, 152, 995, 2294, 695, 1108, 1671,
	456, 2294, 2014, 1661, 2490, 1109, 1968, 1966, 1965, 1963,
	1196, 651, 1192, 800, 452, 796, 795, 796, 796, 157,
	716, 453, 428, 799, 1121, 801, 449, 1194, 451, 2613,
	932, 933, 934, 931, 2257, 2255, 156, 1605, 49, 148,
	125, 450, 932, 933, 934, 931, 2703, 2698, 437, 2616,
	2496, 1428, 728, 1287, 989, 772, 149, 2782, 1629, 650,
	2638, 460, 156, 141, 49, 148, 125, 150, 660, 794,
	2637, 895, 1048, 108, 8, 2744, 2839, 156, 156, 7,
	156, 1999, 156, 1658, 156, 769, 1363, 2753, 97, 2007,
	466, 2323, 1669, 771, 153, 1811, 508, 156, 156, 1943,
	49, 148, 125, 1274, 1240, 467, 1278, 156, 156, 49,
	148, 125, 929, 1117, 2276, 2269, 1118, 108, 1944, 2745,
	153, 1237, 1576, 1049, 1436, 1437, 1258, 1980, 1233, 2088,
	1277, 1106, 1107, 1097, 108, 153, 153, 737, 153, 653,
	153, 1488, 1239, 1290, 640, 1230, 639, 641, 642, 903,
	643, 644, 905, 1104, 2884, 153, 153, 1103, 1106, 1107,
	927, 2808, 2809, 765, 661, 153, 1232, 112, 113, 2882,
	114, 115, 1377, 910, 922, 2785, 911, 764, 2785, 2835,
	906, 2784, 2087, 2783, 2633, 2784, 2834, 2783, 2833, 1740,
	2870, 2871, 778, 773, 777, 779, 2499, 2705, 2262, 1120,
	2771, 432, 2771, 2774, 913, 742, 1279, 2263, 741, 2264,
	2701, 432, 867, 2708, 2709, 2710, 2711, 2499, 877, 783,
	1994, 1293, 868, 776, 2787, 1558, 2508, 1276, 2838, 457,
	457, 2526, 432, 1550, 1554, 124, 147, 154, 1359, 95,
	1195, 1193, 1356, 1901, 862, 864, 1358, 1355, 1357, 1361,
	1362, 1269, 899, 1665, 1360, 2533, 2726, 146, 140, 139,
	2365, 124, 1806, 154, 55, 806, 2093, 797, 798, 2367,
	2289, 781, 802, 2078, 501, 901, 908, 503, 784, 2643,
	2004, 1613, 502, 146, 1202, 1201, 2287, 904, 907, 924,
	965, 746, 767, 2357, 898, 774, 925, 926, 2614, 866,
	877, 2807, 2719, 2427, 861, 2720, 2841, 2842, 743, 2632,
	1095, 900, 2362, 2363, 2256, 2634, 782, 2198, 2361, 1904,
	2714, 1907, 142, 143, 144, 1903, 1292, 2364, 1670, 2729,
	2640, 2102, 2103, 2104, 2105, 909, 867, 1275, 2877, 863,
	2440, 2441, 2377, 2741, 890, 2387, 2797, 1119, 151, 772,
	454, 454, 1129, 2115, 775, 2886, 1574, 1575, 2722, 2951,
	1299, 1302, 1303, 2585, 2793, 2967, 104, 745, 920, 921,
	145, 1300, 105, 2675, 2676, 2677, 2679, 2678, 459, 769,
	458, 2905, 2881, 902, 1674, 1676, 1677, 771, 2850, 2721,
	2912, 1366, 1367, 1368, 1369, 1370, 1371, 1364, 1365, 879,
	878, 1084, 2760, 452, 452, 2577, 2916, 912, 998, 2687,
	453, 453, 2447, 1884, 2359, 449, 449, 451, 451, 1883,
	772, 2568, 2512, 999, 1659, 106, 780, 2293, 881, 2099,
	450, 450, 870, 871, 1659, 48, 1659, 2846, 2847, 744,
	2850, 1054, 427, 1057, 2590, 2591, 1138, 1137, 1859, 888,
	769, 1082, 2891, 887, 1081, 1029, 1080, 2572, 771, 883,
	884, 796, 2968, 796, 796, 796, 2962, 698, 2974, 796,
	2938, 2179, 2735, 796, 967, 968, 969, 970, 858, 971,
	2339, 879, 878, 872, 50, 1964, 2743, 455, 1672, 2840,
	1099, 1098, 2546, 1660, 2742, 1686, 455, 1197, 1673, 2611,
	1059, 2000, 466, 2768, 1105, 1135, 1106, 1107, 1933, 1873,
	1662, 1102, 1872, 432, 895, 1131, 1096, 126, 1862, 1064,
	2292, 1106, 1107, 2233, 2235, 650, 421, 421, 421, 421,
	2347, 2639, 1155, 1155, 1068, 432, 1060, 1061, 1062, 1063,
	1559, 1065, 1067, 126, 1066, 1069, 50, 2092, 2719, 461,
	2727, 2720, 457, 1057, 427, 50, 1185, 1185, 126, 126,
	2008, 126, 1162, 126, 2290, 126, 2368, 173, 1071, 1007,
	1008, 889, 2892, 107, 38, 2887, 421, 767, 126, 126,
	47, 5, 1858, 2077, 111, 2358, 1157, 1860, 126, 126,
	1551, 1553, 2961, 1301, 2686, 2715, 1753, 894, 738, 2716,
	2096, 2097, 2360, 1439, 2722, 1052, 935, 1055, 1270, 915,
	2302, 2301, 916, 2644, 2095, 964, 1440, 1675, 1251, 1252,
	1153, 1153, 1752, 973, 1224, 662, 1227, 1203, 1755, 1754,
	1438, 1235, 1149, 1150, 663, 2721, 1050, 1051, 1861, 2973,
	918, 1034, 2375, 2660, 2917, 978, 1863, 1036, 690, 2570,
	1271, 1256, 2120, 2569, 787, 792, 793, 1083, 1241, 1145,
	1146, 1147, 1148, 930, 1093, 1155, 2463, 1155, 867, 2573,
	2574, 651, 1111, 1112, 2980, 1114, 1115, 1116, 1091, 1092,
	1809, 740, 1762, 2234, 739, 1130, 692, 693, 694, 1466,
	1206, 895, 1209, 1210, 1073, 666, 1982, 2889, 2890, 2180,
	2182, 2183, 2184, 2181, 2935, 1763, 1764, 1122, 1123, 1198,
	1255, 2979, 914, 1086, 1090, 1090, 1090, 2970, 1254, 1178,
	1215, 1216, 2952, 893, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1086, 1086, 1136, 1110,
	1332, 1333, 1113, 930, 1747, 2459, 665, 1341, 919, 1717,
	668, 667, 1716, 2947, 2941, 1289, 1380, 1381, 1382, 772,
	1390, 1163, 1231, 772, 1466, 2031, 1238, 437, 2376, 1396,
	2940, 917, 1397, 1177, 1220, 2121, 1223, 454, 1808, 1186,
	930, 2542, 1176, 1399, 1404, 1405, 2971, 1265, 1187, 2921,
	1743, 1667, 1286, 852, 849, 850, 851, 747, 2898, 2036,
	2860, 2035, 2034, 2032, 2815, 932, 933, 934, 931, 1999,
	2810, 1921, 2762, 1267, 932, 933, 934, 931, 1304, 654,
	1921, 930, 2948, 1667, 1242, 1422, 789, 790, 791, 432,
	452, 1448, 1155, 1452, 738, 1454, 1455, 453, 2083, 1667,
	432, 2715, 449, 698, 451, 2779, 1464, 1264, 2080, 2761,
	1155, 2321, 1261, 1243, 1260, 2758, 1131, 450, 1667, 1247,
	1746, 448, 1425, 2757, 651, 2033, 1263, 2899, 1262, 2861,
	1259, 654, 1920, 2731, 1593, 1389, 1280, 2392, 1878, 2731,
	1487, 2763, 1184, 1184, 2756, 1285, 2463, 2755, 1493, 1493,
	1447, 1131, 2730, 1131, 1131, 1372, 1373, 432, 1376, 1448,
	1448, 1491, 2592, 1155, 1537, 1549, 1391, 1696, 2449, 2228,
	421, 1323, 1155, 2059, 1330, 1331, 1987, 740, 1827, 1398,
	739, 1400, 2015, 1997, 2731, 1087, 1945, 1991, 1456, 1457,
	1458, 1989, 2731, 932, 933, 934, 931, 1984, 930, 432,
	1448, 1155, 1453, 1583, 432, 432, 1586, 1977, 1283, 2121,
	1272, 1589, 1658, 2731, 1975, 1595, 2731, 1480, 1532, 1533,
	1846, 2731, 173, 1375, 1748, 173, 173, 1973, 173, 1971,
	1721, 1945, 1486, 1649, 1572, 1489, 1490, 2450, 1921, 1695,
	1921, 1495, 930, 1072, 1569, 1570, 1335, 1139, 2900, 1401,
	1030, 930, 1827, 2037, 2038, 1429, 1985, 1591, 2557, 1580,
	1990, 1826, 2393, 1390, 1390, 1637, 1985, 1744, 1423, 1547,
	1390, 1390, 1725, 1724, 1715, 1644, 1978, 1555, 1565, 1566,
	1567, 1568, 892, 1976, 1706, 1494, 1088, 1294, 1295, 1296,
	1297, 1298, 1467, 1468, 1472, 1473, 1972, 1560, 1972, 1464,
	2246, 2123, 1604, 1155, 1656, 1607, 1608, 860, 1610, 1460,
	1582, 1482, 1483, 1461, 2002, 1584, 1585, 1471, 1705, 431,
	431, 1496, 1704, 2001, 1993, 439, 1477, 1497, 1498, 1666,
	1827, 1339, 1340, 895, 1485, 1248, 1743, 1374, 1843, 1650,
	1571, 930, 930, 930, 1638, 1384, 1086, 1932, 1476, 1712,
	1478, 1479, 2532, 930, 2397, 893, 1679, 1697, 1648, 1598,
	1481, 1444, 1244, 1484, 976, 880, 1536, 1683, 1684, 1538,
	1556, 1090, 860, 855, 853, 1451, 947, 2388, 1632, 2798,
	2284, 2661, 2549, 1577, 2547, 1632, 1077, 930, 1426, 664,
	1078, 930, 1430, 1469, 772, 1433, 1379, 1378, 1667, 537,
	546, 772, 1087, 1581, 1249, 538, 2930, 545, 539, 543,
	542, 540, 541, 454, 1599, 1601, 860, 950, 951, 952,
	953, 954, 947, 2799, 769, 2662, 2550, 1143, 2548, 2918,
	1141, 769, 771, 1875, 1722, 2464, 1618, 2389, 1144, 771,
	2454, 1729, 2451, 1402, 1403, 2295, 1451, 1406, 1407, 1408,
	1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 2200,
	547, 1988, 1642, 1641, 1643, 1639, 452, 1935, 1647, 869,
	1963, 2488, 506, 453, 867, 1802, 2022, 1957, 449, 1602,
	451, 2390, 1338, 1651, 1283, 2248, 772, 432, 432, 432,
	1410, 1824, 544, 450, 1338, 1646, 1692, 1446, 1190, 1426,
	1602, 1831, 1131, 1088, 2832, 669, 1426, 1426, 934, 931,
	931, 1329, 1836, 1140, 2580, 2579, 769, 1687, 2265, 1678,
	2155, 2046, 2154, 1680, 771, 2149, 1131, 1326, 1328, 1325,
	2147, 1327, 2561, 867, 1867, 2915, 2956, 501, 1394, 1323,
	503, 1681, 1682, 2969, 2944, 502, 1691, 1603, 2906, 1395,
	1606, 2901, 2851, 1609, 2823, 2641, 1611, 932, 933, 934,
	931, 1770, 946, 945, 955, 956, 948, 949, 950, 951,
	952, 953, 954, 947, 2800, 1925, 1925, 1549, 1925, 2746,
	2914, 1719, 2699, 465, 955, 956, 948, 949, 950, 951,
	952, 953, 954, 947, 867, 2642, 1833, 1834, 932, 933,
	934, 931, 1155, 432, 2667, 1803, 1837, 1838, 948, 949,
	950, 951, 952, 953, 954, 947, 2664, 2663, 867, 427,
	1852, 2551, 1185, 2529, 1549, 2366, 2280, 1952, 2530, 1954,
	1739, 1741, 1742, 173, 2190, 1876, 2260, 1879, 1880, 1881,
	1882, 2259, 2174, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1756, 1810, 1845,
	1936, 1937, 1938, 1939, 2188, 1927, 998, 1931, 2531, 1929,
	2173, 2186, 2176, 1848, 2189, 1877, 1832, 2172, 2169, 1995,
	2163, 999, 1656, 932, 933, 934, 931, 2160, 2159, 1155,
	1941, 1155, 1689, 1155, 2491, 1693, 1844, 1839, 867, 1851,
	859, 1850, 1621, 1620, 2187, 1770, 1619, 1615, 772, 1614,
	865, 2185, 2175, 1958, 1949, 1245, 1951, 1047, 2203, 2352,
	1842, 2876, 2621, 1956, 2872, 2836, 2766, 1155, 2040, 1905,
	2728, 886, 2700, 2651, 1703, 2748, 2619, 2617, 769, 1750,
	1751, 2596, 1710, 2047, 1840, 2594, 771, 1841, 1155, 2195,
	2563, 2528, 2945, 932, 933, 934, 931, 1090, 2049, 2527,
	1723, 2524, 2489, 1726, 1727, 1728, 2517, 1942, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 2511, 2712, 2013, 2005,
	2039, 1947, 1950, 2458, 1948, 2009, 2456, 2445, 2444, 2051,
	2344, 2343, 867, 2291, 2258, 932, 933, 934, 931, 2239,
	2026, 2048, 946, 945, 955, 956, 948, 949, 950, 951,
	952, 953, 954, 947, 1700, 1153, 2177, 2006, 2170, 932,
	933, 934, 931, 1828, 932, 933, 934, 931, 2166, 2020,
	1967, 2165, 2164, 2024, 2070, 1745, 1153, 1996, 1623, 1155,
	1617, 1998, 2100, 1435, 2314, 2003, 1448, 932, 933, 934,
	931, 2544, 2119, 596, 595, 2543, 1959, 1246, 2125, 938,
	939, 940, 941, 942, 943, 944, 936, 2016, 2017, 932,
	933, 934, 931, 2541, 2134, 2030, 2084, 1006, 1191, 2081,
	867, 932, 933, 934, 931, 1002, 1001, 977, 2146, 1190,
	2313, 932, 933, 934, 931, 2516, 2151, 2152, 856, 2153,
	2503, 2019, 1708, 2156, 1493, 2110, 2494, 156, 2493, 1210,
	148, 125, 2482, 932, 933, 934, 931, 2481, 1925, 2398,
	2319, 2312, 1426, 1426, 1426, 1426, 2116, 2055, 2191, 2304,
	2071, 2299, 2060, 2089, 421, 1215, 1216, 2074, 1448, 867,
	1549, 1549, 1549, 1549, 2243, 2082, 2109, 2079, 1184, 1974,
	1970, 867, 1549, 1969, 1730, 1925, 1707, 1720, 2141, 2128,
	1718, 1714, 1713, 2130, 1155, 153, 2929, 1852, 2802, 2126,
	1711, 2144, 1283, 1702, 1699, 2144, 432, 432, 2145, 932,
	933, 934, 931, 1220, 1698, 1223, 1622, 2098, 1421, 1420,
	173, 932, 933, 934, 931, 173, 2118, 2124, 1419, 1393,
	1392, 1383, 8, 1167, 2161, 2162, 156, 7, 1165, 2923,
	2167, 2168, 1127, 2224, 2913, 2910, 1390, 2908, 1390, 2136,
	2140, 2275, 2822, 2142, 2279, 2764, 2211, 2148, 2197, 996,
	1155, 1205, 2683, 2286, 1161, 2856, 2791, 2671, 2211, 2668,
	2158, 549, 110, 2605, 2171, 2127, 2603, 110, 2587, 2023,
	2586, 2583, 2582, 2131, 2132, 2576, 2536, 2041, 2042, 932,
	933, 934, 931, 1214, 153, 2044, 2045, 2199, 2201, 2196,
	2249, 1207, 1075, 2223, 1425, 2253, 2192, 2150, 2050, 2274,
	2225, 2227, 2226, 2212, 2213, 2214, 2215, 2240, 2237, 651,
	2113, 2584, 2627, 2272, 2112, 438, 2111, 1219, 110, 2278,
	1426, 2133, 2129, 2072, 2073, 1433, 2247, 1222, 2236, 2251,
	2307, 2288, 2309, 2250, 867, 932, 933, 934, 931, 1211,
	2355, 2069, 1451, 1983, 1934, 1899, 1825, 1324, 2268, 153,
	2370, 2271, 432, 2266, 2273, 1587, 1443, 1830, 2626, 2283,
	1442, 1268, 867, 867, 867, 1694, 772, 1234, 1212, 2270,
	1031, 1549, 1824, 772, 2396, 2282, 2277, 1028, 2296, 2297,
	2400, 932, 933, 934, 931, 2589, 1027, 1026, 2305, 2306,
	867, 2303, 1025, 1024, 2430, 1023, 2433, 1022, 2433, 2433,
	2310, 2311, 1021, 1020, 2308, 2438, 2514, 2346, 932, 933,
	934, 931, 1155, 1155, 2317, 770, 1019, 1018, 1017, 110,
	1016, 1770, 1015, 932, 933, 934, 931, 2340, 1014, 932,
	933, 934, 931, 2348, 110, 2345, 110, 932, 933, 934,
	931, 1013, 1012, 432, 1011, 1010, 2371, 1009, 2355, 1852,
	1852, 1852, 1005, 2384, 2385, 2373, 2395, 1448, 1448, 2109,
	1004, 2429, 2428, 2394, 1003, 2442, 2443, 772, 2391, 1000,
	2350, 2399, 993, 992, 2324, 2401, 2402, 2405, 2325, 2326,
	2327, 2328, 990, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2436, 2434, 2435, 2406, 2374, 989, 2040, 2316, 988,
	1153, 1153, 2315, 987, 986, 985, 2492, 984, 983, 982,
	981, 980, 979, 975, 974, 897, 854, 772, 2467, 2468,
	2404, 932, 933, 934, 931, 932, 933, 934, 931, 2473,
	1813, 2453, 2068, 2452, 2457, 2460, 2461, 885, 2854, 2806,
	2252, 2470, 2254, 432, 2471, 1126, 2101, 1128, 1445, 1132,
	1133, 1946, 2455, 2462, 2448, 932, 933, 934, 931, 1459,
	1426, 1625, 2475, 2955, 896, 1426, 2403, 2067, 2474, 2478,
	2479, 2480, 2472, 2217, 2066, 2487, 2216, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 2608, 2065, 2607, 1180, 2220,
	932, 933, 934, 931, 2221, 2927, 2504, 932, 933, 934,
	931, 2298, 2218, 2505, 1992, 96, 52, 2219, 2507, 932,
	933, 934, 931, 1986, 51, 429, 1499, 2222, 2510, 1917,
	1918, 2076, 2606, 2318, 2518, 2138, 1531, 2139, 2540, 945,
	955, 956, 948, 949, 950, 951, 952, 953, 954, 947,
	2506, 2349, 1925, 1549, 2554, 946, 945, 955, 956, 948,
	949, 950, 951, 952, 953, 954, 947, 2064, 1579, 434,
	435, 1199, 2520, 1579, 1579, 1981, 433, 1155, 436, 2010,
	2018, 2562, 2523, 2522, 2341, 2342, 1750, 1751, 432, 1033,
	932, 933, 934, 931, 1228, 1804, 1588, 2430, 891, 2786,
	2135, 2535, 2063, 2556, 946, 945, 955, 956, 948, 949,
	950, 951, 952, 953, 954, 947, 2085, 110, 110, 770,
	1448, 1820, 1462, 1441, 867, 932, 933, 934, 931, 1379,
	1378, 2537, 2538, 2539, 2863, 2560, 1902, 2437, 1535, 2428,
	1125, 2552, 1124, 2062, 923, 2553, 2477, 2610, 2555, 2061,
	173, 1045, 1046, 1645, 2558, 1043, 1044, 2559, 1079, 2599,
	1041, 1042, 2925, 867, 2588, 2565, 932, 933, 934, 931,
	2058, 1035, 932, 933, 934, 931, 2593, 1039, 1040, 2598,
	2597, 2635, 2595, 2924, 2844, 2601, 2829, 2600, 2827, 2794,
	963, 2776, 2775, 932, 933, 934, 931, 867, 1155, 1155,
	2773, 2765, 2694, 867, 2693, 2618, 2654, 2519, 2057, 2654,
	2501, 2211, 946, 945, 955, 956, 948, 949, 950, 951,
	952, 953, 954, 947, 2500, 2622, 2485, 1038, 654, 2484,
	2612, 932, 933, 934, 931, 2636, 655, 656, 657, 658,
	2245, 1466, 2857, 867, 867, 2056, 2281, 867, 867, 654,
	2211, 2649, 2658, 2657, 2650, 2655, 1913, 1916, 1917, 1918,
	1914, 2556, 1915, 1919, 1464, 1815, 2691, 1701, 932, 933,
	934, 931, 2858, 2857, 2695, 2696, 882, 2672, 2673, 2858,
	2578, 2681, 2682, 2669, 2502, 2688, 1153, 2565, 2052, 2680,
	1852, 1094, 655, 656, 657, 658, 2043, 60, 2725, 1166,
	2, 2513, 1573, 2021, 2689, 654, 2665, 2666, 2515, 1159,
	2718, 932, 933, 934, 931, 1334, 160, 3, 2737, 932,
	933, 934, 931, 1, 1434, 1037, 932, 933, 934, 931,
	659, 2229, 867, 2713, 2717, 2723, 2230, 2476, 932, 933,
	934, 931, 2232, 1908, 867, 1663, 1900, 1805, 2628, 2369,
	1070, 2739, 2320, 2732, 691, 2738, 1816, 1817, 1818, 1385,
	1253, 786, 2747, 876, 1250, 2750, 2754, 1913, 1916, 1917,
	1918, 1914, 875, 1915, 1919, 873, 1336, 551, 2759, 1628,
	2193, 1835, 2690, 2862, 2895, 2821, 2865, 1266, 535, 2767,
	2704, 2825, 867, 2781, 2706, 2624, 1668, 928, 2772, 2770,
	2267, 2795, 946, 945, 955, 956, 948, 949, 950, 951,
	952, 953, 954, 947, 712, 587, 562, 2790, 991, 1236,
	2789, 1229, 2322, 788, 2816, 2819, 2796, 561, 2534, 2094,
	2740, 680, 785, 2801, 713, 1612, 2702, 1200, 1221, 1164,
	1204, 2659, 1426, 2545, 438, 2820, 2811, 2812, 2813, 2814,
	2386, 1426, 2114, 2828, 2602, 2830, 2831, 2604, 2826, 2824,
	2965, 2954, 2936, 2922, 2849, 2950, 2880, 2911, 110, 2631,
	2629, 2609, 1161, 2630, 2904, 2845, 2843, 472, 1552, 419,
	751, 2684, 1624, 2869, 473, 2852, 1829, 2855, 2853, 2837,
	2670, 678, 2859, 1812, 679, 2868, 2107, 2106, 1305, 937,
	1322, 2337, 2338, 972, 511, 867, 1690, 2091, 2421, 2873,
	2238, 2781, 59, 2874, 58, 57, 56, 1594, 181, 553,
	180, 2818, 2894, 2867, 2883, 2885, 533, 532, 531, 110,
	530, 529, 1912, 110, 2893, 2897, 1910, 1909, 2902, 1544,
	867, 1543, 1592, 2439, 110, 2157, 1871, 1864, 1500, 2803,
	2903, 2907, 2751, 2909, 110, 2752, 2575, 2178, 2571, 2567,
	2869, 2920, 2446, 2653, 2407, 2408, 2414, 1819, 811, 867,
	807, 867, 2868, 809, 2919, 810, 808, 2029, 2025, 2926,
	1847, 2928, 2931, 2379, 1761, 1760, 1758, 1757, 1053, 2897,
	867, 2932, 2878, 2724, 2939, 2875, 2946, 2521, 1768, 2949,
	2943, 1766, 2469, 2465, 827, 1636, 1431, 2075, 1545, 1541,
	1814, 87, 86, 94, 137, 46, 2953, 165, 164, 2960,
	167, 166, 2963, 2964, 163, 1960, 1961, 1289, 2972, 162,
	1188, 2975, 161, 2656, 2976, 2733, 2978, 2960, 2977, 648,
	37, 33, 2964, 12, 11, 34, 21, 22, 20, 1257,
	483, 19, 482, 489, 479, 2749, 1289, 25, 1289, 31,
	30, 103, 102, 29, 486, 487, 101, 488, 492, 100,
	99, 474, 958, 98, 962, 28, 18, 1289, 41, 40,
	39, 497, 9, 93, 91, 827, 27, 92, 89, 90,
	959, 961, 957, 88, 960, 946, 945, 955, 956, 948,
	949, 950, 951, 952, 953, 954, 947, 71, 815, 978,
	70, 501, 69, 84, 503, 83, 82, 81, 80, 502,
	79, 2117, 77, 78, 711, 68, 67, 66, 835, 839,
	841, 843, 845, 846, 848, 65, 852, 849, 850, 851,
	64, 75, 830, 831, 832, 833, 813, 814, 836, 85,
	816, 76, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 828, 834, 74, 73, 72, 63, 62, 61,
	1688, 838, 840, 842, 844, 847, 946, 945, 955, 956,
	948, 949, 950, 951, 952, 953, 954, 947, 122, 815,
	123, 121, 120, 805, 946, 945, 955, 956, 948, 949,
	950, 951, 952, 953, 954, 947, 1548, 119, 829, 835,
	839, 841, 843, 845, 846, 848, 118, 852, 849, 850,
	851, 117, 116, 830, 831, 832, 833, 813, 814, 836,
	42, 816, 43, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 828, 834, 2241, 2242, 44, 45, 475,
	477, 476, 838, 840, 842, 844, 847, 133, 132, 481,
	134, 136, 138, 110, 135, 130, 110, 110, 128, 110,
	131, 485, 129, 127, 54, 354, 17, 24, 500, 4,
	0, 0, 0, 0, 0, 478, 317, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 770, 2934, 287, 0, 0, 0,
	0, 770, 0, 0, 346, 301, 0, 0, 0, 0,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 178, 2027, 2028, 537, 546,
	0, 0, 243, 179, 538, 0, 545, 539, 543, 542,
	540, 541, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 484, 490, 0, 491, 493,
	0, 0, 494, 495, 496, 0, 963, 498, 499, 547,
	0, 2372, 0, 0, 0, 234, 351, 367, 244, 342,
	380, 249, 349, 239, 316, 339, 0, 0, 236, 365,
	348, 298, 281, 282, 235, 0, 334, 260, 273, 257,
	314, 544, 364, 392, 256, 383, 0, 375, 238, 0,
	374, 313, 361, 366, 299, 293, 237, 363, 297, 292,
	285, 264, 408, 277, 325, 291, 326, 278, 303, 302,
	304, 0, 0, 837, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 350, 1579, 0, 286, 0, 0, 0, 393, 0,
	337, 319, 0, 0, 0, 335, 289, 362, 327, 368,
	352, 376, 331, 328, 229, 353, 259, 300, 240, 242,
	254, 261, 263, 265, 266, 309, 310, 322, 341, 355,
	356, 357, 258, 250, 336, 251, 275, 252, 230, 343,
	253, 232, 323, 360, 837, 271, 332, 296, 233, 295,
	324, 359, 358, 241, 384, 390, 391, 396, 0, 397,
	0, 0, 0, 405, 410, 411, 412, 414, 415, 416,
	417, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 389, 269, 226, 227, 425, 255, 315, 0,
	0, 0, 2509, 0, 0, 0, 0, 0, 311, 388,
	0, 0, 0, 418, 424, 0, 0, 0, 0, 0,
	423, 321, 0, 340, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 0, 347, 370, 382, 400,
	403, 0, 0, 0, 231, 402, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 398, 305, 306, 307, 308, 272, 0,
	248, 401, 330, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 700, 0, 0, 394,
	395, 268, 274, 413, 276, 247, 320, 270, 379, 283,
	0, 406, 0, 407, 0, 0, 0, 0, 312, 279,
	280, 344, 284, 290, 333, 378, 318, 338, 245, 369,
	345, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 221, 0, 2581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 288, 0, 329, 267, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 686, 0, 0, 222, 223,
	224, 225, 0, 0, 0, 385, 386, 387, 409, 371,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 739, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 839, 841, 843,
	845, 846, 848, 0, 852, 849, 850, 851, 0, 725,
	830, 831, 832, 833, 813, 814, 836, 701, 816, 0,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	828, 834, 0, 0, 0, 0, 0, 0, 0, 838,
	840, 842, 844, 847, 703, 0, 0, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 683, 0, 673, 829, 0, 0, 0,
	0, 0, 685, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 671,
	0, 0, 0, 677, 724, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	699, 1548, 1548, 1548, 1548, 0, 0, 0, 0, 0,
	0, 702, 733, 1548, 682, 0, 0, 0, 681, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 672, 730, 734, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	689, 0, 0, 110, 719, 0, 717, 721, 737, 0,
	0, 0, 718, 715, 714, 0, 720, 705, 706, 704,
	707, 708, 709, 710, 675, 735, 0, 736, 0, 0,
	0, 354, 569, 0, 0, 0, 0, 0, 731, 732,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 262,
	0, 0, 287, 0, 0, 0, 0, 560, 0, 0,
	346, 301, 0, 0, 0, 727, 619, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 0,
	0, 550, 596, 595, 537, 546, 687, 110, 243, 179,
	538, 0, 545, 539, 543, 542, 540, 541, 0, 611,
	0, 0, 0, 0, 0, 0, 509, 522, 0, 526,
	0, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 0, 726, 110, 0, 570,
	0, 521, 0, 0, 565, 547, 548, 0, 0, 0,
	0, 234, 351, 367, 244, 342, 380, 249, 349, 239,
	316, 339, 0, 0, 236, 365, 348, 298, 281, 282,
	235, 0, 334, 260, 273, 257, 314, 544, 568, 572,
	256, 633, 566, 375, 238, 0, 374, 313, 361, 366,
	299, 293, 237, 363, 297, 292, 285, 264, 634, 277,
	325, 291, 326, 278, 303, 302, 304, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 0, 0, 0,
	377, 0, 0, 617, 0, 0, 0, 350, 0, 0,
	286, 0, 0, 0, 567, 0, 337, 319, 630, 510,
	0, 335, 289, 362, 327, 368, 352, 376, 331, 328,
	229, 353, 259, 300, 240, 242, 254, 261, 263, 265,
	266, 309, 310, 322, 341, 355, 356, 357, 258, 250,
	336, 251, 275, 252, 230, 343, 253, 232, 323, 360,
	0, 271, 332, 296, 233, 295, 324, 359, 358, 241,
	384, 390, 391, 396, 0, 397, 0, 0, 0, 405,
	410, 411, 412, 414, 415, 416, 417, 0, 0, 0,
	0, 399, 0, 0, 0, 1387, 1386, 1388, 389, 269,
	226, 227, 425, 615, 315, 0, 0, 629, 610, 612,
	613, 616, 620, 621, 622, 623, 624, 626, 628, 632,
	424, 0, 0, 0, 0, 0, 423, 321, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 370, 382, 400, 403, 0, 0, 0,
	231, 402, 0, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 381, 1548, 0, 0, 0, 0, 571,
	305, 306, 307, 308, 618, 0, 248, 401, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 268, 274, 413,
	276, 247, 320, 270, 379, 283, 0, 406, 0, 407,
	0, 0, 0, 0, 312, 279, 280, 344, 284, 290,
	333, 378, 318, 338, 245, 369, 345, 294, 0, 0,
	640, 614, 639, 641, 642, 638, 643, 644, 625, 528,
	0, 575, 636, 635, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 0, 0, 228, 0,
	288, 0, 329, 267, 603, 580, 581, 582, 527, 583,
	578, 579, 604, 573, 600, 601, 552, 576, 584, 599,
	585, 602, 605, 606, 645, 646, 591, 647, 588, 607,
	598, 597, 586, 574, 608, 609, 559, 554, 589, 590,
	577, 592, 593, 594, 555, 556, 557, 558, 354, 569,
	0, 385, 386, 387, 409, 371, 0, 422, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 262, 1427, 0, 287,
	0, 0, 0, 0, 560, 0, 0, 346, 301, 0,
	0, 0, 0, 619, 627, 0, 0, 0, 0, 0,
	0, 0, 1562, 0, 0, 518, 0, 0, 550, 596,
	595, 537, 546, 0, 0, 243, 179, 538, 0, 545,
	539, 543, 542, 540, 541, 0, 611, 0, 0, 0,
	0, 0, 0, 509, 522, 0, 526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 0, 0, 0, 0, 570, 0, 521, 0,
	0, 1563, 547, 548, 0, 0, 0, 0, 234, 351,
	367, 244, 342, 380, 249, 349, 239, 316, 339, 0,
	0, 236, 365, 348, 298, 281, 282, 235, 0, 334,
	260, 273, 257, 314, 544, 568, 572, 256, 633, 566,
	375, 238, 0, 374, 313, 361, 366, 299, 293, 237,
	363, 297, 292, 285, 264, 634, 277, 325, 291, 326,
	278, 303, 302, 304, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 0, 0, 377, 0, 0,
	617, 0, 0, 0, 350, 0, 0, 286, 0, 0,
	0, 567, 0, 337, 319, 630, 510, 0, 335, 289,
	362, 327, 368, 352, 376, 331, 328, 229, 353, 259,
	300, 240, 242, 254, 261, 263, 265, 266, 309, 310,
	322, 341, 355, 356, 357, 258, 250, 336, 251, 275,
	252, 230, 343, 253, 232, 323, 360, 0, 271, 332,
	296, 233, 295, 324, 359, 358, 241, 384, 390, 391,
	396, 0, 397, 0, 0, 0, 405, 410, 411, 412,
	414, 415, 416, 417, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 389, 269, 226, 227, 425,
	615, 315, 0, 0, 629, 610, 612, 613, 616, 620,
	621, 622, 623, 624, 626, 628, 632, 424, 0, 0,
	0, 0, 0, 423, 321, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	370, 382, 400, 403, 0, 0, 0, 231, 402, 0,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 571, 305, 306, 307,
	308, 618, 0, 248, 401, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 268, 274, 413, 276, 247, 320,
	270, 379, 283, 0, 406, 0, 407, 0, 0, 0,
	0, 312, 279, 280, 344, 284, 290, 333, 378, 318,
	338, 245, 369, 345, 294, 0, 0, 640, 614, 639,
	641, 642, 638, 643, 644, 625, 528, 0, 575, 636,
	635, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 288, 0, 329,
	267, 603, 580, 581, 582, 527, 583, 578, 579, 604,
	573, 600, 601, 552, 576, 584, 599, 585, 602, 605,
	606, 645, 646, 591, 647, 588, 607, 598, 597, 586,
	574, 608, 609, 559, 554, 589, 590, 577, 592, 593,
	594, 555, 556, 557, 558, 156, 354, 569, 385, 386,
	387, 409, 371, 0, 422, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 262, 0, 0, 287, 0, 0,
	0, 0, 966, 0, 0, 346, 301, 0, 0, 0,
	0, 619, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 0, 0, 550, 596, 595, 537,
	546, 0, 0, 243, 179, 538, 0, 545, 539, 543,
	542, 540, 541, 0, 611, 0, 0, 0, 0, 0,
	0, 509, 522, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	0, 0, 0, 0, 570, 0, 521, 0, 0, 565,
	547, 548, 0, 0, 0, 0, 234, 351, 367, 244,
	342, 380, 249, 349, 239, 316, 339, 0, 0, 236,
	365, 348, 298, 281, 282, 235, 0, 334, 260, 273,
	257, 314, 544, 568, 572, 256, 633, 566, 375, 238,
	0, 374, 313, 361, 366, 299, 293, 237, 363, 297,
	292, 285, 264, 634, 277, 325, 291, 326, 278, 303,
	302, 304, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 0, 0, 0, 377, 0, 0, 617, 0,
	0, 0, 350, 0, 0, 286, 0, 0, 0, 567,
	0, 337, 319, 630, 510, 0, 335, 289, 362, 327,
	368, 352, 376, 331, 328, 229, 353, 259, 300, 240,
	242, 254, 261, 263, 265, 266, 309, 310, 322, 341,
	355, 356, 357, 258, 250, 336, 251, 275, 252, 230,
	343, 253, 232, 323, 360, 0, 271, 332, 296, 233,
	295, 324, 359, 358, 241, 384, 390, 391, 396, 0,
	397, 0, 0, 0, 405, 410, 411, 412, 414, 415,
	416, 417, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 389, 269, 226, 227, 425, 615, 315,
	0, 0, 629, 610, 612, 613, 616, 620, 621, 622,
	623, 624, 626, 628, 632, 424, 0, 0, 0, 0,
	0, 423, 321, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 370, 382,
	400, 403, 0, 0, 0, 231, 402, 0, 0, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 571, 305, 306, 307, 308, 618,
	0, 248, 401, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 268, 274, 413, 276, 247, 320, 270, 379,
	283, 0, 406, 0, 407, 0, 0, 0, 0, 312,
	279, 280, 344, 284, 290, 333, 378, 318, 338, 245,
	369, 345, 294, 0, 0, 640, 614, 639, 641, 642,
	638, 643, 644, 625, 528, 0, 575, 636, 635, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 288, 126, 329, 267, 603,
	580, 581, 582, 527, 583, 578, 579, 604, 573, 600,
	601, 552, 576, 584, 599, 585, 602, 605, 606, 645,
	646, 591, 647, 588, 607, 598, 597, 586, 574, 608,
	609, 559, 554, 589, 590, 577, 592, 593, 594, 555,
	556, 557, 558, 354, 569, 0, 385, 386, 387, 409,
	371, 0, 422, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 262, 2933, 0, 287, 0, 0, 0, 0, 560,
	0, 0, 346, 301, 0, 0, 0, 0, 619, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 0, 0, 550, 596, 595, 537, 546, 0, 0,
	243, 179, 538, 0, 545, 539, 543, 542, 540, 541,
	0, 611, 0, 0, 0, 0, 0, 0, 509, 522,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 0, 0, 0,
	0, 570, 0, 521, 0, 0, 565, 547, 548, 0,
	0, 0, 0, 234, 351, 367, 244, 342, 380, 249,
	349, 239, 316, 339, 0, 0, 236, 365, 348, 298,
	281, 282, 235, 0, 334, 260, 273, 257, 314, 544,
	568, 572, 256, 633, 566, 375, 238, 0, 374, 313,
	361, 366, 299, 293, 237, 363, 297, 292, 285, 264,
	634, 277, 325, 291, 326, 278, 303, 302, 304, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 0,
	0, 0, 377, 0, 0, 617, 0, 0, 0, 350,
	0, 0, 286, 0, 0, 0, 567, 0, 337, 319,
	630, 510, 0, 335, 289, 362, 327, 368, 352, 376,
	331, 328, 229, 353, 259, 300, 240, 242, 254, 261,
	263, 265, 266, 309, 310, 322, 341, 355, 356, 357,
	258, 250, 336, 251, 275, 252, 230, 343, 253, 232,
	323, 360, 0, 271, 332, 296, 233, 295, 324, 359,
	358, 241, 384, 390, 391, 396, 0, 397, 0, 0,
	0, 405, 410, 411, 412, 414, 415, 416, 417, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	389, 269, 226, 227, 425, 615, 315, 0, 0, 629,
	610, 612, 613, 616, 620, 621, 622, 623, 624, 626,
	628, 632, 424, 0, 0, 0, 0, 0, 423, 321,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 370, 382, 400, 403, 0,
	0, 0, 231, 402, 0, 0, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 571, 305, 306, 307, 308, 618, 0, 248, 401,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 268,
	274, 413, 276, 247, 320, 270, 379, 283, 0, 406,
	0, 407, 0, 0, 0, 0, 312, 279, 280, 344,
	284, 290, 333, 378, 318, 338, 245, 369, 345, 294,
	0, 0, 640, 614, 639, 641, 642, 638, 643, 644,
	625, 528, 0, 575, 636, 635, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 288, 0, 329, 267, 603, 580, 581, 582,
	527, 583, 578, 579, 604, 573, 600, 601, 552, 576,
	584, 599, 585, 602, 605, 606, 645, 646, 591, 647,
	588, 607, 598, 597, 586, 574, 608, 609, 559, 554,
	589, 590, 577, 592, 593, 594, 555, 556, 557, 558,
	354, 569, 0, 385, 386, 387, 409, 371, 0, 422,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 262, 1427,
	0, 287, 0, 0, 0, 0, 560, 0, 0, 346,
	301, 0, 0, 0, 0, 619, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 0, 0,
	550, 596, 595, 537, 546, 0, 0, 243, 179, 538,
	0, 545, 539, 543, 542, 540, 541, 0, 611, 0,
	0, 0, 0, 0, 0, 509, 522, 0, 526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 0, 0, 0, 0, 570, 0,
	521, 0, 0, 565, 547, 548, 0, 0, 0, 0,
	234, 351, 367, 244, 342, 380, 249, 349, 239, 316,
	339, 0, 0, 236, 365, 348, 298, 281, 282, 235,
	0, 334, 260, 273, 257, 314, 544, 568, 572, 256,
	633, 566, 375, 238, 0, 374, 313, 361, 366, 299,
	293, 237, 363, 297, 292, 285, 264, 634, 277, 325,
	291, 326, 278, 303, 302, 304, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 377,
	0, 0, 617, 0, 0, 0, 350, 0, 0, 286,
	0, 0, 0, 567, 0, 337, 319, 630, 510, 0,
	335, 289, 362, 327, 368, 352, 376, 331, 328, 229,
	353, 259, 300, 240, 242, 254, 261, 263, 265, 266,
	309, 310, 322, 341, 355, 356, 357, 258, 250, 336,
	251, 275, 252, 230, 343, 253, 232, 323, 360, 0,
	271, 332, 296, 233, 295, 324, 359, 358, 241, 384,
	390, 391, 396, 0, 397, 0, 0, 0, 405, 410,
	411, 412, 414, 415, 416, 417, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 389, 269, 226,
	227, 425, 615, 315, 0, 0, 629, 610, 612, 613,
	616, 620, 621, 622, 623, 624, 626, 628, 632, 424,
	0, 0, 0, 0, 0, 423, 321, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 370, 382, 400, 403, 0, 0, 0, 231,
	402, 0, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 571, 305,
	306, 307, 308, 618, 0, 248, 401, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 268, 274, 413, 276,
	247, 320, 270, 379, 283, 0, 406, 0, 407, 0,
	0, 0, 0, 312, 279, 280, 344, 284, 290, 333,
	378, 318, 338, 245, 369, 345, 294, 0, 0, 640,
	614, 639, 641, 642, 638, 643, 644, 625, 528, 0,
	575, 636, 635, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 288,
	0, 329, 267, 603, 580, 581, 582, 527, 583, 578,
	579, 604, 573, 600, 601, 552, 576, 584, 599, 585,
	602, 605, 606, 645, 646, 591, 647, 588, 607, 598,
	597, 586, 574, 608, 609, 559, 554, 589, 590, 577,
	592, 593, 594, 555, 556, 557, 558, 354, 569, 0,
	385, 386, 387, 409, 371, 0, 422, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 262, 0, 0, 287, 0,
	0, 0, 0, 560, 0, 0, 346, 301, 0, 0,
	0, 0, 619, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 0, 0, 550, 596, 595,
	537, 546, 0, 0, 243, 179, 538, 0, 545, 539,
	543, 542, 540, 541, 0, 611, 0, 0, 0, 0,
	0, 0, 509, 522, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 1183, 0, 0, 0, 570, 0, 521, 0, 0,
	565, 547, 548, 0, 0, 0, 0, 234, 351, 367,
	244, 342, 380, 249, 349, 239, 316, 339, 0, 0,
	236, 365, 348, 298, 281, 282, 235, 0, 334, 260,
	273, 257, 314, 544, 568, 572, 256, 633, 566, 375,
	238, 0, 374, 313, 361, 366, 299, 293, 237, 363,
	297, 292, 285, 264, 634, 277, 325, 291, 326, 278,
	303, 302, 304, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 0, 0, 0, 377, 0, 0, 617,
	0, 0, 0, 350, 0, 0, 286, 0, 0, 0,
	567, 0, 337, 319, 630, 510, 0, 335, 289, 362,
	327, 368, 352, 376, 331, 328, 229, 353, 259, 300,
	240, 242, 254, 261, 263, 265, 266, 309, 310, 322,
	341, 355, 356, 357, 258, 250, 336, 251, 275, 252,
	230, 343, 253, 232, 323, 360, 0, 271, 332, 296,
	233, 295, 324, 359, 358, 241, 384, 390, 391, 396,
	0, 397, 0, 0, 0, 405, 410, 411, 412, 414,
	415, 416, 417, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 389, 269, 226, 227, 425, 615,
	315, 0, 0, 629, 610, 612, 613, 616, 620, 621,
	622, 623, 624, 626, 628, 632, 424, 0, 0, 0,
	0, 0, 423, 321, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 370,
	382, 400, 403, 0, 0, 0, 231, 402, 0, 0,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 571, 305, 306, 307, 308,
	618, 0, 248, 401, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 268, 274, 413, 276, 247, 320, 270,
	379, 283, 0, 406, 0, 407, 0, 0, 0, 0,
	312, 279, 280, 344, 284, 290, 333, 378, 318, 338,
	245, 369, 345, 294, 0, 0, 640, 614, 639, 641,
	642, 638, 643, 644, 625, 528, 0, 575, 636, 635,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 288, 0, 329, 267,
	603, 580, 581, 582, 527, 583, 578, 579, 604, 573,
	600, 601, 552, 576, 584, 599, 585, 602, 605, 606,
	645, 646, 591, 647, 588, 607, 598, 597, 586, 574,
	608, 609, 559, 554, 589, 590, 577, 592, 593, 594,
	555, 556, 557, 558, 0, 0, 0, 385, 386, 387,
	409, 371, 0, 422, 354, 569, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 262, 0, 0, 287, 0, 0, 0, 0,
	560, 0, 0, 346, 301, 0, 0, 0, 0, 619,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 550, 596, 595, 537, 546, 0,
	0, 243, 179, 538, 0, 545, 539, 543, 542, 540,
	541, 0, 611, 0, 0, 0, 0, 0, 0, 509,
	522, 0, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 0, 0,
	0, 0, 570, 0, 521, 0, 0, 565, 547, 548,
	0, 0, 0, 0, 234, 351, 367, 244, 342, 380,
	249, 349, 239, 316, 339, 0, 0, 236, 365, 348,
	298, 281, 282, 235, 0, 334, 260, 273, 257, 314,
	544, 568, 572, 256, 633, 566, 375, 238, 0, 374,
	313, 361, 366, 299, 293, 237, 363, 297, 292, 285,
	264, 634, 277, 325, 291, 326, 278, 303, 302, 304,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 0, 0, 377, 0, 0, 617, 0, 0, 0,
	350, 0, 0, 286, 0, 0, 0, 567, 0, 337,
	319, 630, 510, 0, 335, 289, 362, 327, 368, 352,
	376, 331, 328, 229, 353, 259, 300, 240, 242, 254,
	261, 263, 265, 266, 309, 310, 322, 341, 355, 356,
	357, 258, 250, 336, 251, 275, 252, 230, 343, 253,
	232, 323, 360, 0, 271, 332, 296, 233, 295, 324,
	359, 358, 241, 384, 390, 391, 396, 0, 397, 0,
	0, 0, 405, 410, 411, 412, 414, 415, 416, 417,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 389, 269, 226, 227, 425, 615, 315, 0, 0,
	629, 610, 612, 613, 616, 620, 621, 622, 623, 624,
	626, 628, 632, 424, 0, 0, 0, 0, 0, 423,
	321, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 370, 382, 400, 403,
	0, 0, 0, 231, 402, 0, 0, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 571, 305, 306, 307, 308, 618, 0, 248,
	401, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	268, 274, 413, 276, 247, 320, 270, 379, 283, 0,
	406, 0, 407, 0, 0, 0, 0, 312, 279, 280,
	344, 284, 290, 333, 378, 318, 338, 245, 369, 345,
	294, 0, 0, 640, 614, 639, 641, 642, 638, 643,
	644, 625, 528, 0, 575, 636, 635, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 288, 0, 329, 267, 603, 580, 581,
	582, 527, 583, 578, 579, 604, 573, 600, 601, 552,
	576, 584, 599, 585, 602, 605, 606, 645, 646, 591,
	647, 588, 607, 598, 597, 586, 574, 608, 609, 559,
	554, 589, 590, 577, 592, 593, 594, 555, 556, 557,
	558, 354, 569, 0, 385, 386, 387, 409, 371, 0,
	422, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 262,
	0, 0, 287, 0, 0, 0, 0, 560, 0, 0,
	346, 301, 0, 0, 0, 0, 619, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 0,
	0, 550, 596, 595, 537, 546, 0, 0, 243, 179,
	538, 0, 545, 539, 543, 542, 540, 541, 0, 611,
	0, 0, 0, 0, 0, 0, 509, 522, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 0, 0, 0, 0, 570,
	0, 521, 0, 0, 565, 547, 548, 0, 0, 0,
	0, 234, 351, 367, 244, 342, 380, 249, 349, 239,
	316, 339, 0, 0, 236, 365, 348, 298, 281, 282,
	235, 0, 334, 260, 273, 257, 314, 544, 568, 572,
	256, 633, 566, 375, 238, 0, 374, 313, 361, 366,
	299, 293, 237, 363, 297, 292, 285, 264, 634, 277,
	325, 291, 326, 278, 303, 302, 304, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 0, 0, 0,
	377, 0, 0, 617, 0, 0, 0, 350, 0, 0,
	286, 0, 0, 0, 567, 0, 337, 319, 630, 510,
	0, 335, 289, 362, 327, 368, 352, 376, 331, 328,
	229, 353, 259, 300, 240, 242, 254, 261, 263, 265,
	266, 309, 310, 322, 341, 355, 356, 357, 258, 250,
	336, 251, 275, 252, 230, 343, 253, 232, 323, 360,
	0, 271, 332, 296, 233, 295, 324, 359, 358, 241,
	384, 390, 391, 396, 0, 397, 0, 0, 0, 405,
	410, 411, 412, 414, 415, 416, 417, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 389, 269,
	226, 227, 425, 615, 315, 0, 0, 629, 610, 612,
	613, 616, 620, 621, 622, 623, 624, 626, 628, 632,
	424, 0, 0, 0, 0, 0, 423, 321, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 370, 382, 400, 403, 0, 0, 0,
	231, 402, 0, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 571,
	305, 306, 307, 308, 618, 0, 248, 401, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 268, 274, 413,
	276, 247, 320, 270, 379, 283, 0, 406, 0, 407,
	0, 0, 0, 0, 312, 279, 280, 344, 284, 290,
	333, 378, 318, 338, 245, 369, 345, 294, 0, 0,
	640, 614, 639, 641, 642, 638, 643, 644, 625, 528,
	0, 575, 636, 635, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	288, 0, 329, 267, 603, 580, 581, 582, 527, 583,
	578, 579, 604, 573, 600, 601, 552, 576, 584, 599,
	585, 602, 605, 606, 645, 646, 591, 647, 588, 607,
	598, 597, 586, 574, 608, 609, 559, 554, 589, 590,
	577, 592, 593, 594, 555, 556, 557, 558, 354, 569,
	0, 385, 386, 387, 409, 371, 0, 422, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 0, 525, 0, 0, 0, 262, 0, 0, 287,
	0, 0, 0, 0, 560, 0, 0, 346, 301, 0,
	0, 0, 0, 619, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 0, 0, 550, 596,
	595, 537, 546, 0, 0, 243, 179, 538, 0, 545,
	539, 543, 542, 540, 541, 0, 611, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 0, 0, 0, 0, 570, 0, 521, 0,
	0, 565, 547, 548, 0, 0, 0, 0, 234, 351,
	367, 244, 342, 380, 249, 349, 239, 316, 339, 0,
	0, 236, 365, 348, 298, 281, 282, 235, 0, 334,
	260, 273, 257, 314, 544, 568, 572, 256, 633, 566,
	375, 238, 0, 374, 313, 361, 366, 299, 293, 237,
	363, 297, 292, 285, 264, 634, 277, 325, 291, 326,
	278, 303, 302, 304, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 0, 0, 377, 0, 0,
	617, 0, 0, 0, 350, 0, 0, 286, 0, 0,
	0, 567, 0, 337, 319, 630, 0, 0, 335, 289,
	362, 327, 368, 352, 376, 331, 328, 229, 353, 259,
	300, 240, 242, 254, 261, 263, 265, 266, 309, 310,
	322, 341, 355, 356, 357, 258, 250, 336, 251, 275,
	252, 230, 343, 253, 232, 323, 360, 0, 271, 332,
	296, 233, 295, 324, 359, 358, 241, 384, 1307, 1308,
	396, 0, 397, 0, 0, 0, 405, 410, 411, 412,
	414, 415, 416, 417, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 389, 269, 226, 227, 425,
	615, 315, 0, 0, 629, 610, 612, 613, 616, 620,
	621, 622, 623, 624, 626, 628, 632, 424, 0, 0,
	0, 0, 0, 423, 321, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	370, 382, 400, 403, 0, 0, 0, 231, 402, 0,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 571, 305, 306, 307,
	308, 618, 0, 248, 401, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 268, 274, 413, 276, 247, 320,
	270, 379, 283, 0, 406, 0, 407, 0, 0, 0,
	0, 312, 279, 280, 344, 284, 290, 333, 378, 318,
	338, 245, 369, 345, 294, 0, 0, 640, 614, 639,
	641, 642, 638, 643, 644, 625, 528, 0, 575, 636,
	635, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 288, 0, 329,
	267, 603, 580, 581, 582, 527, 583, 578, 579, 604,
	573, 600, 601, 552, 576, 584, 599, 585, 602, 605,
	606, 645, 646, 591, 647, 588, 607, 598, 597, 586,
	574, 608, 609, 559, 554, 589, 590, 577, 592, 593,
	594, 555, 556, 557, 558, 354, 569, 0, 385, 386,
	387, 409, 371, 0, 422, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 262, 0, 0, 287, 0, 0, 0,
	0, 560, 0, 0, 346, 301, 0, 0, 0, 0,
	619, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 550, 596, 595, 537, 546,
	0, 0, 243, 179, 538, 0, 545, 539, 543, 542,
	540, 541, 0, 611, 0, 0, 0, 0, 0, 0,
	509, 522, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 0,
	0, 0, 0, 570, 0, 521, 0, 0, 565, 547,
	548, 0, 0, 0, 0, 234, 351, 367, 244, 342,
	380, 249, 349, 239, 316, 339, 0, 0, 236, 365,
	348, 298, 281, 282, 235, 0, 334, 260, 273, 257,
	314, 544, 568, 572, 256, 633, 566, 375, 238, 0,
	374, 313, 361, 366, 299, 293, 237, 363, 297, 292,
	285, 264, 634, 277, 325, 291, 326, 278, 303, 302,
	304, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 0, 0, 377, 0, 0, 617, 0, 0,
	0, 350, 0, 0, 286, 0, 0, 0, 567, 0,
	337, 319, 630, 510, 0, 335, 289, 362, 327, 368,
	352, 376, 331, 328, 229, 353, 259, 300, 240, 242,
	254, 261, 263, 265, 266, 309, 310, 322, 341, 355,
	356, 357, 258, 250, 336, 251, 275, 252, 230, 343,
	253, 232, 323, 360, 0, 271, 332, 296, 233, 295,
	324, 359, 358, 241, 384, 390, 391, 396, 0, 397,
	0, 0, 0, 405, 410, 411, 412, 414, 415, 416,
	417, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 389, 269, 226, 227, 425, 615, 315, 0,
	0, 629, 610, 612, 613, 616, 620, 621, 622, 623,
	624, 626, 628, 632, 424, 0, 0, 0, 0, 0,
	423, 321, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 370, 382, 400,
	403, 0, 0, 0, 231, 402, 0, 0, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 571, 305, 306, 307, 308, 618, 0,
	248, 401, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 268, 274, 413, 276, 247, 320, 270, 379, 283,
	0, 406, 0, 407, 0, 0, 0, 0, 312, 279,
	280, 344, 284, 290, 333, 378, 318, 338, 245, 369,
	345, 294, 0, 0, 640, 614, 639, 641, 642, 638,
	643, 644, 625, 528, 0, 575, 636, 635, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 288, 0, 329, 267, 603, 580,
	581, 582, 527, 583, 578, 579, 604, 573, 600, 601,
	552, 576, 584, 599, 585, 602, 605, 606, 645, 646,
	591, 647, 588, 607, 598, 597, 586, 574, 608, 609,
	559, 554, 589, 590, 577, 592, 593, 594, 555, 556,
	557, 558, 354, 569, 0, 385, 386, 387, 409, 371,
	0, 422, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	262, 0, 0, 287, 0, 0, 0, 0, 560, 0,
	0, 346, 301, 0, 0, 0, 0, 619, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 550, 596, 595, 537, 546, 0, 0, 243,
	179, 538, 0, 545, 539, 543, 542, 540, 541, 0,
	611, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 0, 0, 0, 0,
	570, 0, 521, 0, 0, 565, 547, 548, 0, 0,
	0, 0, 234, 351, 367, 244, 342, 380, 249, 349,
	239, 316, 339, 0, 0, 236, 365, 348, 298, 281,
	282, 235, 0, 334, 260, 273, 257, 314, 544, 568,
	572, 256, 633, 566, 375, 238, 0, 374, 313, 361,
	366, 299, 293, 237, 363, 297, 292, 285, 264, 634,
	277, 325, 291, 326, 278, 303, 302, 304, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 0, 0,
	0, 377, 0, 0, 617, 0, 0, 0, 350, 0,
	0, 286, 0, 0, 0, 567, 0, 337, 319, 630,
	0, 0, 335, 289, 362, 327, 368, 352, 376, 331,
	328, 229, 353, 259, 300, 240, 242, 254, 261, 263,
	265, 266, 309, 310, 322, 341, 355, 356, 357, 258,
	250, 336, 251, 275, 252, 230, 343, 253, 232, 323,
	360, 0, 271, 332, 296, 233, 295, 324, 359, 358,
	241, 384, 390, 391, 396, 0, 397, 0, 0, 0,
	405, 410, 411, 412, 414, 415, 416, 417, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 389,
	269, 226, 227, 425, 615, 315, 0, 0, 629, 610,
	612, 613, 616, 620, 621, 622, 623, 624, 626, 628,
	632, 424, 0, 0, 0, 0, 0, 423, 321, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 370, 382, 400, 403, 0, 0,
	0, 231, 402, 0, 0, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	571, 305, 306, 307, 308, 618, 0, 248, 401, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 268, 274,
	413, 276, 247, 320, 270, 379, 283, 0, 406, 0,
	407, 0, 0, 0, 0, 312, 279, 280, 344, 284,
	290, 333, 378, 318, 338, 245, 369, 345, 294, 0,
	0, 640, 614, 639, 641, 642, 638, 643, 644, 625,
	528, 0, 575, 636, 635, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 288, 0, 329, 267, 603, 580, 581, 582, 527,
	583, 578, 579, 604, 573, 600, 601, 552, 576, 584,
	599, 585, 602, 605, 606, 645, 646, 591, 647, 588,
	607, 598, 597, 586, 574, 608, 609, 559, 554, 589,
	590, 577, 592, 593, 594, 555, 556, 557, 558, 0,
	0, 0, 385, 386, 387, 409, 371, 0, 422, 156,
	354, 49, 148, 125, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 141, 0, 262, 0,
	150, 287, 0, 0, 0, 0, 108, 0, 0, 346,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 153, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 351, 367, 244, 342, 380, 249, 349, 239, 316,
	339, 0, 0, 236, 365, 348, 298, 281, 282, 235,
	0, 334, 260, 273, 257, 314, 0, 364, 392, 256,
	383, 0, 375, 238, 0, 374, 313, 361, 366, 299,
	293, 237, 363, 297, 292, 285, 264, 408, 277, 325,
	291, 326, 278, 303, 302, 304, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 124, 147,
	154, 0, 95, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 171, 0, 0, 0, 350, 0, 0, 286,
	146, 140, 139, 393, 0, 337, 319, 55, 0, 0,
	335, 289, 362, 327, 368, 352, 376, 331, 328, 229,
	353, 259, 300, 240, 242, 254, 261, 263, 265, 266,
	309, 310, 322, 341, 355, 356, 357, 258, 250, 336,
	251, 275, 252, 230, 343, 253, 232, 323, 360, 0,
	271, 332, 296, 233, 295, 324, 359, 358, 241, 384,
	390, 391, 396, 0, 397, 142, 143, 144, 405, 410,
	411, 412, 414, 415, 416, 417, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 389, 269, 226,
	227, 372, 255, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 388, 174, 0, 0, 418, 182,
	0, 0, 0, 145, 0, 183, 321, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 370, 382, 400, 403, 0, 0, 0, 231,
	402, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 398, 305,
	306, 307, 308, 272, 0, 248, 401, 330, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 0,
	0, 0, 0, 0, 394, 395, 268, 274, 413, 276,
	247, 320, 270, 379, 283, 0, 406, 0, 407, 0,
	0, 0, 0, 312, 279, 280, 344, 284, 290, 333,
	378, 318, 338, 245, 369, 345, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 288,
	126, 329, 267, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 0, 0, 222, 223, 224, 225, 0, 0, 0,
	385, 386, 387, 409, 371, 0, 184, 38, 172, 175,
	177, 176, 0, 47, 5, 0, 0, 111, 156, 354,
	49, 148, 125, 0, 0, 0, 0, 0, 0, 0,
	317, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 346, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 447, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	351, 367, 244, 342, 380, 249, 349, 239, 316, 339,
	0, 0, 236, 365, 348, 298, 281, 282, 235, 0,
	334, 260, 273, 257, 314, 0, 364, 392, 256, 383,
	0, 375, 238, 0, 374, 313, 361, 366, 299, 293,
	237, 363, 297, 292, 285, 264, 408, 277, 325, 291,
	326, 278, 303, 302, 304, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 286, 0,
	0, 0, 393, 0, 337, 319, 0, 0, 0, 335,
	289, 362, 327, 368, 352, 376, 331, 328, 229, 353,
	259, 300, 240, 242, 254, 261, 263, 265, 266, 309,
	310, 322, 341, 355, 356, 357, 258, 250, 336, 251,
	275, 252, 230, 343, 253, 232, 323, 360, 0, 271,
	332, 296, 233, 295, 324, 359, 358, 241, 384, 390,
	391, 396, 0, 397, 0, 0, 0, 405, 410, 411,
	412, 414, 415, 416, 417, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 389, 269, 226, 227,
	425, 255, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 388, 0, 0, 0, 418, 424, 0,
	0, 0, 0, 0, 423, 321, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 370, 382, 400, 403, 0, 0, 0, 231, 402,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 398, 305, 306,
	307, 308, 443, 445, 248, 401, 330, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 268, 274, 413, 276, 247,
	320, 270, 379, 283, 0, 406, 0, 407, 0, 0,
	0, 0, 312, 279, 280, 344, 284, 290, 333, 378,
	318, 338, 245, 369, 345, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 288, 126,
	329, 267, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 0, 222, 223, 224, 225, 354, 0, 0, 385,
	386, 387, 409, 371, 0, 422, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 346, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 815,
	0, 0, 0, 0, 0, 0, 234, 351, 367, 244,
	342, 380, 249, 349, 239, 316, 339, 0, 0, 1790,
	1792, 1793, 1794, 1795, 1796, 1797, 0, 1801, 1798, 1799,
	1800, 314, 0, 1785, 1786, 1787, 1788, 813, 1771, 1791,
	0, 1772, 313, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1789, 325, 291, 326, 278, 303,
	302, 304, 838, 840, 842, 844, 847, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 286, 0, 0, 0, 1784,
	0, 337, 319, 0, 0, 0, 335, 289, 362, 327,
	368, 352, 376, 331, 328, 229, 353, 259, 300, 240,
	242, 254, 261, 263, 265, 266, 309, 310, 322, 341,
	355, 356, 357, 258, 250, 336, 251, 275, 252, 230,
	343, 253, 232, 323, 360, 0, 271, 332, 296, 233,
	295, 324, 359, 358, 241, 384, 390, 391, 396, 0,
	397, 0, 0, 0, 405, 410, 411, 412, 414, 415,
	416, 417, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 389, 269, 226, 227, 425, 255, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	388, 0, 0, 0, 418, 424, 0, 0, 0, 0,
	0, 423, 321, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 370, 382,
	400, 403, 0, 0, 0, 231, 402, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 398, 305, 306, 307, 308, 272,
	0, 248, 401, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 268, 274, 413, 276, 247, 320, 270, 379,
	283, 0, 406, 0, 407, 0, 0, 0, 0, 312,
	279, 280, 344, 284, 290, 333, 378, 318, 338, 245,
	369, 345, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 837, 288, 0, 329, 267, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 0, 0, 222,
	223, 224, 225, 354, 0, 0, 385, 386, 387, 409,
	371, 0, 422, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 346, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 1859, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 351, 367, 244, 342, 380, 249,
	349, 239, 316, 339, 0, 0, 236, 365, 348, 298,
	281, 282, 235, 0, 334, 260, 273, 257, 314, 0,
	364, 392, 256, 383, 0, 375, 238, 0, 374, 313,
	361, 366, 299, 293, 237, 363, 297, 292, 285, 264,
	408, 277, 325, 291, 326, 278, 303, 302, 304, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 377, 0, 0, 0, 1858, 1849, 1857, 350,
	1855, 1860, 286, 0, 0, 0, 393, 0, 337, 319,
	0, 0, 0, 335, 289, 362, 327, 368, 352, 376,
	331, 328, 229, 353, 259, 300, 240, 242, 254, 261,
	263, 265, 266, 309, 310, 322, 341, 355, 356, 357,
	258, 250, 336, 251, 275, 252, 230, 343, 253, 232,
	323, 360, 1861, 271, 332, 296, 233, 295, 324, 359,
	358, 241, 384, 390, 391, 396, 0, 397, 0, 0,
	0, 405, 410, 411, 412, 414, 415, 416, 417, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	389, 269, 226, 227, 425, 255, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 388, 0, 0,
	0, 418, 424, 0, 0, 0, 0, 0, 423, 321,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 370, 382, 400, 403, 0,
	0, 0, 231, 402, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 398, 305, 306, 307, 308, 272, 0, 248, 401,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 268,
	274, 413, 276, 247, 320, 270, 379, 283, 0, 406,
	0, 407, 0, 0, 0, 0, 312, 279, 280, 344,
	284, 290, 333, 378, 318, 338, 245, 369, 345, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 288, 0, 329, 267, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 0, 222, 223, 224, 225,
	354, 0, 0, 385, 386, 387, 409, 371, 0, 422,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 346,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 1859,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 351, 367, 244, 342, 380, 249, 349, 239, 316,
	339, 0, 0, 236, 365, 348, 298, 281, 282, 235,
	0, 334, 260, 273, 257, 314, 0, 364, 392, 256,
	383, 0, 375, 238, 0, 374, 313, 361, 366, 299,
	293, 237, 363, 297, 292, 285, 264, 408, 277, 325,
	291, 326, 278, 303, 302, 304, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 377,
	0, 0, 0, 1858, 0, 1857, 350, 1855, 1860, 286,
	0, 0, 0, 393, 0, 337, 319, 0, 0, 0,
	335, 289, 362, 327, 368, 352, 376, 331, 328, 229,
	353, 259, 300, 240, 242, 254, 261, 263, 265, 266,
	309, 310, 322, 341, 355, 356, 357, 258, 250, 336,
	251, 275, 252, 230, 343, 253, 232, 323, 360, 1861,
	271, 332, 296, 233, 295, 324, 359, 358, 241, 384,
	390, 391, 396, 0, 397, 0, 0, 0, 405, 410,
	411, 412, 414, 415, 416, 417, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 389, 269, 226,
	227, 425, 255, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 388, 0, 0, 0, 418, 424,
	0, 0, 0, 0, 0, 423, 321, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 370, 382, 400, 403, 0, 0, 0, 231,
	402, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 398, 305,
	306, 307, 308, 272, 0, 248, 401, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 268, 274, 413, 276,
	247, 320, 270, 379, 283, 0, 406, 0, 407, 0,
	0, 0, 0, 312, 279, 280, 344, 284, 290, 333,
	378, 318, 338, 245, 369, 345, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 288,
	0, 329, 267, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 0, 0, 222, 223, 224, 225, 354, 0, 0,
	385, 386, 387, 409, 371, 0, 422, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 262, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 346, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1597, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 932, 933,
	934, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 351, 367,
	244, 342, 380, 249, 349, 239, 316, 339, 0, 0,
	236, 365, 348, 298, 281, 282, 235, 0, 334, 260,
	273, 257, 314, 0, 364, 392, 256, 383, 0, 375,
	238, 0, 374, 313, 361, 366, 299, 293, 237, 363,
	297, 292, 285, 264, 408, 277, 325, 291, 326, 278,
	303, 302, 304, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 286, 0, 0, 0,
	393, 0, 337, 319, 0, 0, 0, 335, 289, 362,
	327, 368, 352, 376, 331, 328, 229, 353, 259, 300,
	240, 242, 254, 261, 263, 265, 266, 309, 310, 322,
	341, 355, 356, 357, 258, 250, 336, 251, 275, 252,
	230, 343, 253, 232, 323, 360, 0, 271, 332, 296,
	233, 295, 324, 359, 358, 241, 384, 390, 391, 396,
	0, 397, 0, 0, 0, 405, 410, 411, 412, 414,
	415, 416, 417, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 389, 269, 226, 227, 425, 255,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 388, 0, 0, 0, 418, 424, 0, 0, 0,
	0, 0, 423, 321, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 370,
	382, 400, 403, 0, 0, 0, 231, 402, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 398, 305, 306, 307, 308,
	272, 0, 248, 401, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 268, 274, 413, 276, 247, 320, 270,
	379, 283, 0, 406, 0, 407, 0, 0, 0, 0,
	312, 279, 280, 344, 284, 290, 333, 378, 318, 338,
	245, 369, 345, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 288, 0, 329, 267,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 0,
	222, 223, 224, 225, 354, 0, 0, 385, 386, 387,
	409, 371, 0, 422, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 750, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 346, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 759, 760, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 351, 367, 244, 342, 380,
	249, 349, 239, 316, 339, 0, 0, 236, 365, 348,
	298, 281, 282, 235, 0, 334, 260, 273, 257, 314,
	0, 364, 392, 256, 383, 740, 375, 238, 739, 374,
	313, 361, 366, 299, 293, 237, 363, 297, 292, 285,
	264, 408, 277, 325, 291, 326, 278, 303, 302, 304,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 286, 0, 0, 0, 393, 0, 337,
	319, 0, 0, 0, 335, 289, 362, 327, 368, 352,
	376, 748, 328, 229, 353, 259, 300, 240, 242, 254,
	261, 263, 265, 266, 309, 310, 322, 341, 355, 356,
	357, 258, 250, 336, 251, 275, 252, 230, 343, 253,
	232, 323, 360, 0, 271, 332, 296, 233, 295, 324,
	359, 358, 241, 384, 390, 391, 396, 0, 397, 0,
	0, 0, 405, 410, 411, 412, 414, 415, 416, 417,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 389, 269, 226, 227, 425, 255, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 388, 0,
	0, 0, 418, 424, 0, 0, 0, 0, 0, 423,
	321, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 370, 382, 400, 403,
	0, 0, 0, 231, 402, 0, 0, 0, 0, 0,
	0, 749, 373, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 752, 305, 306, 307, 308, 272, 0, 248,
	401, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	268, 274, 413, 276, 247, 320, 270, 379, 283, 0,
	406, 0, 407, 0, 0, 0, 0, 761, 755, 756,
	757, 284, 290, 333, 378, 318, 338, 245, 369, 345,
	758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 288, 0, 329, 267, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 0, 0, 222, 223, 224,
	225, 354, 0, 0, 385, 386, 387, 409, 371, 0,
	422, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	346, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 351, 367, 244, 342, 380, 249, 349, 239,
	316, 339, 0, 0, 236, 365, 348, 298, 281, 282,
	235, 0, 334, 260, 273, 257, 314, 0, 364, 392,
	256, 383, 0, 375, 238, 0, 374, 313, 361, 366,
	299, 293, 237, 363, 297, 292, 285, 264, 408, 277,
	325, 291, 326, 278, 303, 302, 304, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	377, 0, 0, 0, 1870, 1868, 0, 350, 0, 1869,
	286, 0, 0, 0, 393, 0, 337, 319, 0, 0,
	0, 335, 289, 362, 327, 368, 352, 376, 331, 328,
	229, 353, 259, 300, 240, 242, 254, 261, 263, 265,
	266, 309, 310, 322, 341, 355, 356, 357, 258, 250,
	336, 251, 275, 252, 230, 343, 253, 232, 323, 360,
	0, 271, 332, 296, 233, 295, 324, 359, 358, 241,
	384, 390, 391, 396, 0, 397, 0, 0, 0, 405,
	410, 411, 412, 414, 415, 416, 417, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 389, 269,
	226, 227, 425, 255, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 388, 0, 0, 0, 418,
	424, 0, 0, 0, 0, 0, 423, 321, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 370, 382, 400, 403, 0, 0, 0,
	231, 402, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 398,
	305, 306, 307, 308, 272, 0, 248, 401, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 268, 274, 413,
	276, 247, 320, 270, 379, 283, 0, 406, 0, 407,
	0, 0, 0, 0, 312, 279, 280, 344, 284, 290,
	333, 378, 318, 338, 245, 369, 345, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	288, 0, 329, 267, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 0, 222, 223, 224, 225, 156, 354,
	0, 385, 386, 387, 409, 371, 0, 422, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	287, 0, 0, 0, 0, 108, 0, 0, 346, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 1640, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	351, 367, 244, 342, 380, 249, 349, 239, 316, 339,
	0, 0, 236, 365, 348, 298, 281, 282, 235, 0,
	334, 260, 273, 257, 314, 0, 364, 392, 256, 383,
	0, 375, 238, 0, 374, 313, 361, 366, 299, 293,
	237, 363, 297, 292, 285, 264, 408, 277, 325, 291,
	326, 278, 303, 302, 304, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 286, 0,
	0, 0, 393, 0, 337, 319, 0, 0, 0, 335,
	289, 362, 327, 368, 352, 376, 331, 328, 229, 353,
	259, 300, 240, 242, 254, 261, 263, 265, 266, 309,
	310, 322, 341, 355, 356, 357, 258, 250, 336, 251,
	275, 252, 230, 343, 253, 232, 323, 360, 0, 271,
	332, 296, 233, 295, 324, 359, 358, 241, 384, 390,
	391, 396, 0, 397, 0, 0, 0, 405, 410, 411,
	412, 414, 415, 416, 417, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 389, 269, 226, 227,
	425, 255, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 388, 0, 0, 0, 418, 424, 0,
	0, 0, 0, 0, 423, 321, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 370, 382, 400, 403, 0, 0, 0, 231, 402,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 398, 305, 306,
	307, 308, 272, 0, 248, 401, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 268, 274, 413, 276, 247,
	320, 270, 379, 283, 0, 406, 0, 407, 0, 0,
	0, 0, 312, 279, 280, 344, 284, 290, 333, 378,
	318, 338, 245, 369, 345, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 288, 126,
	329, 267, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 0, 222, 223, 224, 225, 156, 354, 0, 385,
	386, 387, 409, 371, 0, 422, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 287, 0,
	0, 0, 0, 108, 0, 0, 346, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 1631, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 351, 367,
	244, 342, 380, 249, 349, 239, 316, 339, 0, 0,
	236, 365, 348, 298, 281, 282, 235, 0, 334, 260,
	273, 257, 314, 0, 364, 392, 256, 383, 0, 375,
	238, 0, 374, 313, 361, 366, 299, 293, 237, 363,
	297, 292, 285, 264, 408, 277, 325, 291, 326, 278,
	303, 302, 304, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 286, 0, 0, 0,
	393, 0, 337, 319, 0, 0, 0, 335, 289, 362,
	327, 368, 352, 376, 331, 328, 229, 353, 259, 300,
	240, 242, 254, 261, 263, 265, 266, 309, 310, 322,
	341, 355, 356, 357, 258, 250, 336, 251, 275, 252,
	230, 343, 253, 232, 323, 360, 0, 271, 332, 296,
	233, 295, 324, 359, 358, 241, 384, 390, 391, 396,
	0, 397, 0, 0, 0, 405, 410, 411, 412, 414,
	415, 416, 417, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 389, 269, 226, 227, 425, 255,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 388, 0, 0, 0, 418, 424, 0, 0, 0,
	0, 0, 423, 321, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 370,
	382, 400, 403, 0, 0, 0, 231, 402, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 398, 305, 306, 307, 308,
	272, 0, 248, 401, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 268, 274, 413, 276, 247, 320, 270,
	379, 283, 0, 406, 0, 407, 0, 0, 0, 0,
	312, 279, 280, 344, 284, 290, 333, 378, 318, 338,
	245, 369, 345, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 288, 126, 329, 267,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 0,
	222, 223, 224, 225, 156, 354, 0, 385, 386, 387,
	409, 371, 0, 422, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 287, 0, 0, 0,
	0, 108, 0, 0, 346, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 351, 367, 244, 342,
	380, 249, 349, 239, 316, 339, 0, 0, 236, 365,
	348, 298, 281, 282, 235, 0, 334, 260, 273, 257,
	314, 0, 364, 392, 256, 383, 0, 375, 238, 0,
	374, 313, 361, 366, 299, 293, 237, 363, 297, 292,
	285, 264, 408, 277, 325, 291, 326, 278, 303, 302,
	304, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 286, 0, 0, 0, 393, 0,
	337, 319, 0, 0, 0, 335, 289, 362, 327, 368,
	352, 376, 331, 328, 229, 353, 259, 300, 240, 242,
	254, 261, 263, 265, 266, 309, 310, 322, 341, 355,
	356, 357, 258, 250, 336, 251, 275, 252, 230, 343,
	253, 232, 323, 360, 0, 271, 332, 296, 233, 295,
	324, 359, 358, 241, 384, 390, 391, 396, 0, 397,
	0, 0, 0, 405, 410, 411, 412, 414, 415, 416,
	417, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 389, 269, 226, 227, 425, 255, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 388,
	0, 0, 0, 418, 424, 0, 0, 0, 0, 0,
	423, 321, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 370, 382, 400,
	403, 0, 0, 0, 231, 402, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 398, 305, 306, 307, 308, 272, 0,
	248, 401, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 268, 274, 413, 276, 247, 320, 270, 379, 283,
	0, 406, 0, 407, 0, 0, 0, 0, 312, 279,
	280, 344, 284, 290, 333, 378, 318, 338, 245, 369,
	345, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 288, 126, 329, 267, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 0, 222, 223,
	224, 225, 354, 0, 0, 385, 386, 387, 409, 371,
	0, 422, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 346, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 759, 760, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 351, 367, 244, 342, 380, 249, 349,
	239, 316, 339, 0, 0, 236, 365, 348, 298, 281,
	282, 235, 0, 334, 260, 273, 257, 314, 0, 364,
	392, 256, 383, 740, 375, 238, 739, 374, 313, 361,
	366, 299, 293, 237, 363, 297, 292, 285, 264, 408,
	277, 325, 291, 326, 278, 303, 302, 304, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 286, 0, 0, 0, 393, 0, 337, 319, 0,
	0, 0, 335, 289, 362, 327, 368, 352, 376, 331,
	328, 229, 353, 259, 300, 240, 242, 254, 261, 263,
	265, 266, 309, 310, 322, 341, 355, 356, 357, 258,
	250, 336, 251, 275, 252, 230, 343, 253, 232, 323,
	360, 0, 271, 332, 296, 233, 295, 324, 359, 358,
	241, 384, 390, 391, 396, 0, 397, 0, 0, 0,
	405, 410, 411, 412, 414, 415, 416, 417, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 389,
	269, 226, 227, 425, 255, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 388, 0, 0, 0,
	418, 424, 0, 0, 0, 0, 0, 423, 321, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 370, 382, 400, 403, 0, 0,
	0, 231, 402, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	398, 305, 306, 307, 308, 272, 0, 248, 401, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 268, 274,
	413, 276, 247, 320, 270, 379, 283, 0, 406, 0,
	407, 0, 0, 0, 0, 761, 755, 756, 757, 284,
	290, 333, 378, 318, 338, 245, 369, 345, 758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 288, 0, 329, 267, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 0, 0, 222, 223, 224, 225, 354,
	0, 0, 385, 386, 387, 409, 371, 0, 422, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 2204,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 346, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	351, 367, 244, 342, 380, 249, 349, 239, 316, 339,
	0, 0, 236, 365, 348, 298, 281, 282, 235, 0,
	334, 260, 273, 257, 314, 0, 364, 392, 256, 383,
	0, 375, 238, 0, 374, 313, 361, 366, 299, 293,
	237, 363, 297, 292, 285, 264, 408, 277, 325, 291,
	326, 278, 303, 302, 304, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 2207,
	0, 0, 2206, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 286, 0,
	0, 0, 393, 0, 337, 319, 0, 0, 0, 335,
	289, 362, 327, 368, 352, 376, 331, 328, 229, 353,
	259, 300, 240, 242, 254, 261, 263, 265, 266, 309,
	310, 322, 341, 355, 356, 357, 258, 250, 336, 251,
	275, 252, 230, 343, 253, 232, 323, 360, 0, 271,
	332, 296, 233, 295, 324, 359, 358, 241, 384, 390,
	391, 396, 0, 397, 0, 0, 0, 405, 410, 411,
	412, 414, 415, 416, 417, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 389, 269, 226, 227,
	425, 255, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 388, 0, 0, 0, 418, 424, 0,
	0, 0, 0, 0, 423, 321, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 370, 382, 400, 403, 0, 0, 0, 231, 402,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 398, 305, 306,
	307, 308, 272, 0, 248, 401, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 268, 274, 413, 276, 247,
	320, 270, 379, 283, 0, 406, 0, 407, 0, 0,
	0, 0, 312, 279, 280, 344, 284, 290, 333, 378,
	318, 338, 245, 369, 345, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 288, 0,
	329, 267, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 0, 222, 223, 224, 225, 354, 0, 0, 385,
	386, 387, 409, 371, 0, 422, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 1158, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 346, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 1156,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1154,
	0, 0, 0, 0, 0, 0, 234, 351, 367, 244,
	342, 380, 249, 349, 239, 316, 339, 0, 0, 236,
	365, 348, 298, 281, 282, 235, 0, 334, 260, 273,
	257, 314, 0, 364, 392, 256, 383, 0, 375, 238,
	0, 374, 313, 361, 366, 299, 293, 237, 363, 297,
	292, 285, 264, 408, 277, 325, 291, 326, 278, 303,
	302, 304, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 286, 0, 0, 0, 393,
	0, 337, 319, 0, 0, 0, 335, 289, 362, 327,
	368, 352, 376, 331, 328, 229, 353, 259, 300, 240,
	242, 254, 261, 263, 265, 266, 309, 310, 322, 341,
	355, 356, 357, 258, 250, 336, 251, 275, 252, 230,
	343, 253, 232, 323, 360, 0, 271, 332, 296, 233,
	295, 324, 359, 358, 241, 384, 390, 391, 396, 0,
	397, 0, 0, 0, 405, 410, 411, 412, 414, 415,
	416, 417, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 389, 269, 226, 227, 425, 255, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	388, 0, 0, 0, 418, 424, 0, 0, 0, 0,
	0, 423, 321, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 370, 382,
	400, 403, 0, 0, 0, 231, 402, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 398, 305, 306, 307, 308, 272,
	0, 248, 401, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 268, 274, 413, 276, 247, 320, 270, 379,
	283, 0, 406, 0, 407, 0, 0, 0, 0, 312,
	279, 280, 344, 284, 290, 333, 378, 318, 338, 245,
	369, 345, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 288, 0, 329, 267, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 0, 0, 222,
	223, 224, 225, 354, 0, 0, 385, 386, 387, 409,
	371, 0, 422, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 1152, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 346, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 1156, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 0, 234, 351, 367, 244, 342, 380, 249,
	349, 239, 316, 339, 0, 0, 236, 365, 348, 298,
	281, 282, 235, 0, 334, 260, 273, 257, 314, 0,
	364, 392, 256, 383, 0, 375, 238, 0, 374, 313,
	361, 366, 299, 293, 237, 363, 297, 292, 285, 264,
	408, 277, 325, 291, 326, 278, 303, 302, 304, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 286, 0, 0, 0, 393, 0, 337, 319,
	0, 0, 0, 335, 289, 362, 327, 368, 352, 376,
	331, 328, 229, 353, 259, 300, 240, 242, 254, 261,
	263, 265, 266, 309, 310, 322, 341, 355, 356, 357,
	258, 250, 336, 251, 275, 252, 230, 343, 253, 232,
	323, 360, 0, 271, 332, 296, 233, 295, 324, 359,
	358, 241, 384, 390, 391, 396, 0, 397, 0, 0,
	0, 405, 410, 411, 412, 414, 415, 416, 417, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	389, 269, 226, 227, 425, 255, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 388, 0, 0,
	0, 418, 424, 0, 0, 0, 0, 0, 423, 321,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 370, 382, 400, 403, 0,
	0, 0, 231, 402, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 398, 305, 306, 307, 308, 272, 0, 248, 401,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 268,
	274, 413, 276, 247, 320, 270, 379, 283, 0, 406,
	0, 407, 0, 0, 0, 0, 312, 279, 280, 344,
	284, 290, 333, 378, 318, 338, 245, 369, 345, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 288, 0, 329, 267, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 0, 222, 223, 224, 225,
	354, 0, 0, 385, 386, 387, 409, 371, 0, 422,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 346,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2864, 0,
	178, 596, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 351, 367, 244, 342, 380, 249, 349, 239, 316,
	339, 0, 0, 236, 365, 348, 298, 281, 282, 235,
	0, 334, 260, 273, 257, 314, 0, 364, 392, 256,
	383, 0, 375, 238, 0, 374, 313, 361, 366, 299,
	293, 237, 363, 297, 292, 285, 264, 408, 277, 325,
	291, 326, 278, 303, 302, 304, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 286,
	0, 0, 0, 393, 0, 337, 319, 0, 0, 0,
	335, 289, 362, 327, 368, 352, 376, 331, 328, 229,
	353, 259, 300, 240, 242, 254, 261, 263, 265, 266,
	309, 310, 322, 341, 355, 356, 357, 258, 250, 336,
	251, 275, 252, 230, 343, 253, 232, 323, 360, 0,
	271, 332, 296, 233, 295, 324, 359, 358, 241, 384,
	390, 391, 396, 0, 397, 0, 0, 0, 405, 410,
	411, 412, 414, 415, 416, 417, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 389, 269, 226,
	227, 425, 255, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 388, 0, 0, 0, 418, 424,
	0, 0, 0, 0, 0, 423, 321, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 370, 382, 400, 403, 0, 0, 0, 231,
	402, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 398, 305,
	306, 307, 308, 272, 0, 248, 401, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 268, 274, 413, 276,
	247, 320, 270, 379, 283, 0, 406, 0, 407, 0,
	0, 0, 0, 312, 279, 280, 344, 284, 290, 333,
	378, 318, 338, 245, 369, 345, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 288,
	0, 329, 267, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 0, 0, 222, 223, 224, 225, 354, 0, 0,
	385, 386, 387, 409, 371, 0, 422, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 346, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1156, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2566, 0, 0, 0, 0, 0, 0, 234, 351, 367,
	244, 342, 380, 249, 349, 239, 316, 339, 0, 0,
	236, 365, 348, 298, 281, 282, 235, 0, 334, 260,
	273, 257, 314, 0, 364, 392, 256, 383, 0, 375,
	238, 0, 374, 313, 361, 366, 299, 293, 237, 363,
	297, 292, 285, 264, 408, 277, 325, 291, 326, 278,
	303, 302, 304, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 286, 0, 0, 0,
	393, 0, 337, 319, 0, 0, 0, 335, 289, 362,
	327, 368, 352, 376, 331, 328, 229, 353, 259, 300,
	240, 242, 254, 261, 263, 265, 266, 309, 310, 322,
	341, 355, 356, 357, 258, 250, 336, 251, 275, 252,
	230, 343, 253, 232, 323, 360, 0, 271, 332, 296,
	233, 295, 324, 359, 358, 241, 384, 390, 391, 396,
	0, 397, 0, 0, 0, 405, 410, 411, 412, 414,
	415, 416, 417, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 389, 269, 226, 227, 425, 255,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 388, 0, 0, 0, 418, 424, 0, 0, 0,
	0, 0, 423, 321, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 370,
	382, 400, 403, 0, 0, 0, 231, 402, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 398, 305, 306, 307, 308,
	272, 0, 248, 401, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 268, 274, 413, 276, 247, 320, 270,
	379, 283, 0, 406, 0, 407, 0, 0, 0, 0,
	312, 279, 280, 344, 284, 290, 333, 378, 318, 338,
	245, 369, 345, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 288, 0, 329, 267,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 0,
	222, 223, 224, 225, 354, 0, 0, 385, 386, 387,
	409, 371, 0, 422, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 346, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1156, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 0, 0,
	0, 0, 0, 0, 234, 351, 367, 244, 342, 380,
	249, 349, 239, 316, 339, 0, 0, 236, 365, 348,
	298, 281, 282, 235, 0, 334, 260, 273, 257, 314,
	0, 364, 392, 256, 383, 0, 375, 238, 0, 374,
	313, 361, 366, 299, 293, 237, 363, 297, 292, 285,
	264, 408, 277, 325, 291, 326, 278, 303, 302, 304,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 286, 0, 0, 0, 393, 0, 337,
	319, 0, 0, 0, 335, 289, 362, 327, 368, 352,
	376, 331, 328, 229, 353, 259, 300, 240, 242, 254,
	261, 263, 265, 266, 309, 310, 322, 341, 355, 356,
	357, 258, 250, 336, 251, 275, 252, 230, 343, 253,
	232, 323, 360, 0, 271, 332, 296, 233, 295, 324,
	359, 358, 241, 384, 390, 391, 396, 0, 397, 0,
	0, 0, 405, 410, 411, 412, 414, 415, 416, 417,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 389, 269, 226, 227, 425, 255, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 388, 0,
	0, 0, 418, 424, 0, 0, 0, 0, 0, 423,
	321, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 370, 382, 400, 403,
	0, 0, 0, 231, 402, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 398, 305, 306, 307, 308, 272, 0, 248,
	401, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	268, 274, 413, 276, 247, 320, 270, 379, 283, 0,
	406, 0, 407, 0, 0, 0, 0, 312, 279, 280,
	344, 284, 290, 333, 378, 318, 338, 245, 369, 345,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 288, 0, 329, 267, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 0, 0, 222, 223, 224,
	225, 354, 0, 0, 385, 386, 387, 409, 371, 0,
	422, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 262,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	346, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 1926, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 351, 367, 244, 342, 380, 249, 349, 239,
	316, 339, 0, 0, 236, 365, 348, 298, 281, 282,
	235, 0, 334, 260, 273, 257, 314, 0, 364, 392,
	256, 383, 0, 375, 238, 0, 374, 313, 361, 366,
	299, 293, 237, 363, 297, 292, 285, 264, 408, 277,
	325, 291, 326, 278, 303, 302, 304, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	286, 0, 0, 0, 393, 0, 337, 319, 0, 0,
	0, 335, 289, 362, 327, 368, 352, 376, 331, 328,
	229, 353, 259, 300, 240, 242, 254, 261, 263, 265,
	266, 309, 310, 322, 341, 355, 356, 357, 258, 250,
	336, 251, 275, 252, 230, 343, 253, 232, 323, 360,
	0, 271, 332, 296, 233, 295, 324, 359, 358, 241,
	384, 390, 391, 396, 0, 397, 0, 0, 0, 405,
	410, 411, 412, 414, 415, 416, 417, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 389, 269,
	226, 227, 425, 255, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 388, 0, 0, 0, 418,
	424, 0, 0, 0, 0, 0, 423, 321, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 370, 382, 400, 403, 0, 0, 0,
	231, 402, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 398,
	305, 306, 307, 308, 272, 0, 248, 401, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 268, 274, 413,
	276, 247, 320, 270, 379, 283, 0, 406, 0, 407,
	0, 0, 0, 0, 312, 279, 280, 344, 284, 290,
	333, 378, 318, 338, 245, 369, 345, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	288, 0, 329, 267, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 0, 222, 223, 224, 225, 354, 0,
	0, 385, 386, 387, 409, 371, 0, 422, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 1940, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 346, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1156, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 351,
	367, 244, 342, 380, 249, 349, 239, 316, 339, 0,
	0, 236, 365, 348, 298, 281, 282, 235, 0, 334,
	260, 273, 257, 314, 0, 364, 392, 256, 383, 0,
	375, 238, 0, 374, 313, 361, 366, 299, 293, 237,
	363, 297, 292, 285, 264, 408, 277, 325, 291, 326,
	278, 303, 302, 304, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 286, 0, 0,
	0, 393, 0, 337, 319, 0, 0, 0, 335, 289,
	362, 327, 368, 352, 376, 331, 328, 229, 353, 259,
	300, 240, 242, 254, 261, 263, 265, 266, 309, 310,
	322, 341, 355, 356, 357, 258, 250, 336, 251, 275,
	252, 230, 343, 253, 232, 323, 360, 0, 271, 332,
	296, 233, 295, 324, 359, 358, 241, 384, 390, 391,
	396, 0, 397, 0, 0, 0, 405, 410, 411, 412,
	414, 415, 416, 417, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 389, 269, 226, 227, 425,
	255, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 388, 0, 0, 0, 418, 424, 0, 0,
	0, 0, 0, 423, 321, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	370, 382, 400, 403, 0, 0, 0, 231, 402, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 398, 305, 306, 307,
	308, 272, 0, 248, 401, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 268, 274, 413, 276, 247, 320,
	270, 379, 283, 0, 406, 0, 407, 0, 0, 0,
	0, 312, 279, 280, 344, 284, 290, 333, 378, 318,
	338, 245, 369, 345, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 288, 0, 329,
	267, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 0,
	0, 222, 223, 224, 225, 354, 0, 0, 385, 386,
	387, 409, 371, 0, 422, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 346, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2942, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 351, 367, 244, 342,
	380, 249, 349, 239, 316, 339, 0, 0, 236, 365,
	348, 298, 281, 282, 235, 0, 334, 260, 273, 257,
	314, 0, 364, 392, 256, 383, 0, 375, 238, 0,
	374, 313, 361, 366, 299, 293, 237, 363, 297, 292,
	285, 264, 408, 277, 325, 291, 326, 278, 303, 302,
	304, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 286, 0, 0, 0, 393, 0,
	337, 319, 0, 0, 0, 335, 289, 362, 327, 368,
	352, 376, 331, 328, 229, 353, 259, 300, 240, 242,
	254, 261, 263, 265, 266, 309, 310, 322, 341, 355,
	356, 357, 258, 250, 336, 251, 275, 252, 230, 343,
	253, 232, 323, 360, 0, 271, 332, 296, 233, 295,
	324, 359, 358, 241, 384, 390, 391, 396, 0, 397,
	0, 0, 0, 405, 410, 411, 412, 414, 415, 416,
	417, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 389, 269, 226, 227, 425, 255, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 388,
	0, 0, 0, 418, 424, 0, 0, 0, 0, 0,
	423, 321, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 370, 382, 400,
	403, 0, 0, 0, 231, 402, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 398, 305, 306, 307, 308, 272, 0,
	248, 401, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 268, 274, 413, 276, 247, 320, 270, 379, 283,
	0, 406, 0, 407, 0, 0, 0, 0, 312, 279,
	280, 344, 284, 290, 333, 378, 318, 338, 245, 369,
	345, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 288, 0, 329, 267, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 0, 222, 223,
	224, 225, 354, 0, 0, 385, 386, 387, 409, 371,
	0, 422, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 346, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 596, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 351, 367, 244, 342, 380, 249, 349,
	239, 316, 339, 0, 0, 236, 365, 348, 298, 281,
	282, 235, 0, 334, 260, 273, 257, 314, 0, 364,
	392, 256, 383, 0, 375, 238, 0, 374, 313, 361,
	366, 299, 293, 237, 363, 297, 292, 285, 264, 408,
	277, 325, 291, 326, 278, 303, 302, 304, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 286, 0, 0, 0, 393, 0, 337, 319, 0,
	0, 0, 335, 289, 362, 327, 368, 352, 376, 331,
	328, 229, 353, 259, 300, 240, 242, 254, 261, 263,
	265, 266, 309, 310, 322, 341, 355, 356, 357, 258,
	250, 336, 251, 275, 252, 230, 343, 253, 232, 323,
	360, 0, 271, 332, 296, 233, 295, 324, 359, 358,
	241, 384, 390, 391, 396, 0, 397, 0, 0, 0,
	405, 410, 411, 412, 414, 415, 416, 417, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 389,
	269, 226, 227, 425, 255, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 388, 0, 0, 0,
	418, 424, 0, 0, 0, 0, 0, 423, 321, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 370, 382, 400, 403, 0, 0,
	0, 231, 402, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	398, 305, 306, 307, 308, 272, 0, 248, 401, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 268, 274,
	413, 276, 247, 320, 270, 379, 283, 0, 406, 0,
	407, 0, 0, 0, 0, 312, 279, 280, 344, 284,
	290, 333, 378, 318, 338, 245, 369, 345, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 288, 0, 329, 267, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 0, 0, 222, 223, 224, 225, 354,
	0, 0, 385, 386, 387, 409, 371, 0, 422, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 346, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2879, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	351, 367, 244, 342, 380, 249, 349, 239, 316, 339,
	0, 0, 236, 365, 348, 298, 281, 282, 235, 0,
	334, 260, 273, 257, 314, 0, 364, 392, 256, 383,
	0, 375, 238, 0, 374, 313, 361, 366, 299, 293,
	237, 363, 297, 292, 285, 264, 408, 277, 325, 291,
	326, 278, 303, 302, 304, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 286, 0,
	0, 0, 393, 0, 337, 319, 0, 0, 0, 335,
	289, 362, 327, 368, 352, 376, 331, 328, 229, 353,
	259, 300, 240, 242, 254, 261, 263, 265, 266, 309,
	310, 322, 341, 355, 356, 357, 258, 250, 336, 251,
	275, 252, 230, 343, 253, 232, 323, 360, 0, 271,
	332, 296, 233, 295, 324, 359, 358, 241, 384, 390,
	391, 396, 0, 397, 0, 0, 0, 405, 410, 411,
	412, 414, 415, 416, 417, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 389, 269, 226, 227,
	425, 255, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 388, 0, 0, 0, 418, 424, 0,
	0, 0, 0, 0, 423, 321, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 370, 382, 400, 403, 0, 0, 0, 231, 402,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 398, 305, 306,
	307, 308, 272, 0, 248, 401, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 268, 274, 413, 276, 247,
	320, 270, 379, 283, 0, 406, 0, 407, 0, 0,
	0, 0, 312, 279, 280, 344, 284, 290, 333, 378,
	318, 338, 245, 369, 345, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 288, 0,
	329, 267, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 0, 222, 223, 224, 225, 354, 0, 0, 385,
	386, 387, 409, 371, 0, 422, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 346, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 351, 367, 244,
	342, 380, 249, 349, 239, 316, 339, 0, 0, 236,
	365, 348, 298, 281, 282, 235, 0, 334, 260, 273,
	257, 314, 0, 364, 392, 256, 383, 0, 375, 238,
	0, 374, 313, 361, 366, 299, 293, 237, 363, 297,
	292, 285, 264, 408, 277, 325, 291, 326, 278, 303,
	302, 304, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 2817,
	0, 0, 350, 0, 0, 286, 0, 0, 0, 393,
	0, 337, 319, 0, 0, 0, 335, 289, 362, 327,
	368, 352, 376, 331, 328, 229, 353, 259, 300, 240,
	242, 254, 261, 263, 265, 266, 309, 310, 322, 341,
	355, 356, 357, 258, 250, 336, 251, 275, 252, 230,
	343, 253, 232, 323, 360, 0, 271, 332, 296, 233,
	295, 324, 359, 358, 241, 384, 390, 391, 396, 0,
	397, 0, 0, 0, 405, 410, 411, 412, 414, 415,
	416, 417, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 389, 269, 226, 227, 425, 255, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	388, 0, 0, 0, 418, 424, 0, 0, 0, 0,
	0, 423, 321, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 370, 382,
	400, 403, 0, 0, 0, 231, 402, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 398, 305, 306, 307, 308, 272,
	0, 248, 401, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 268, 274, 413, 276, 247, 320, 270, 379,
	283, 0, 406, 0, 407, 0, 0, 0, 0, 312,
	279, 280, 344, 284, 290, 333, 378, 318, 338, 245,
	369, 345, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 288, 0, 329, 267, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 0, 0, 222,
	223, 224, 225, 354, 0, 0, 385, 386, 387, 409,
	371, 0, 422, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 346, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2648, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 351, 367, 244, 342, 380, 249,
	349, 239, 316, 339, 0, 0, 236, 365, 348, 298,
	281, 282, 235, 0, 334, 260, 273, 257, 314, 0,
	364, 392, 256, 383, 0, 375, 238, 0, 374, 313,
	361, 366, 299, 293, 237, 363, 297, 292, 285, 264,
	408, 277, 325, 291, 326, 278, 303, 302, 304, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 286, 0, 0, 0, 393, 0, 337, 319,
	0, 0, 0, 335, 289, 362, 327, 368, 352, 376,
	331, 328, 229, 353, 259, 300, 240, 242, 254, 261,
	263, 265, 266, 309, 310, 322, 341, 355, 356, 357,
	258, 250, 336, 251, 275, 252, 230, 343, 253, 232,
	323, 360, 0, 271, 332, 296, 233, 295, 324, 359,
	358, 241, 384, 390, 391, 396, 0, 397, 0, 0,
	0, 405, 410, 411, 412, 414, 415, 416, 417, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	389, 269, 226, 227, 425, 255, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 388, 0, 0,
	0, 418, 424, 0, 0, 0, 0, 0, 423, 321,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 370, 382, 400, 403, 0,
	0, 0, 231, 402, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 398, 305, 306, 307, 308, 272, 0, 248, 401,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 268,
	274, 413, 276, 247, 320, 270, 379, 283, 0, 406,
	0, 407, 0, 0, 0, 0, 312, 279, 280, 344,
	284, 290, 333, 378, 318, 338, 245, 369, 345, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 288, 0, 329, 267, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 0, 222, 223, 224, 225,
	354, 0, 0, 385, 386, 387, 409, 371, 0, 422,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 346,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 351, 367, 244, 342, 380, 249, 349, 239, 316,
	339, 0, 0, 236, 365, 348, 298, 281, 282, 235,
	0, 334, 260, 273, 257, 314, 0, 364, 392, 256,
	383, 0, 375, 238, 0, 374, 313, 361, 366, 299,
	293, 237, 363, 297, 292, 285, 264, 408, 277, 325,
	291, 326, 278, 303, 302, 304, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 2692, 0, 0, 350, 0, 0, 286,
	0, 0, 0, 393, 0, 337, 319, 0, 0, 0,
	335, 289, 362, 327, 368, 352, 376, 331, 328, 229,
	353, 259, 300, 240, 242, 254, 261, 263, 265, 266,
	309, 310, 322, 341, 355, 356, 357, 258, 250, 336,
	251, 275, 252, 230, 343, 253, 232, 323, 360, 0,
	271, 332, 296, 233, 295, 324, 359, 358, 241, 384,
	390, 391, 396, 0, 397, 0, 0, 0, 405, 410,
	411, 412, 414, 415, 416, 417, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 389, 269, 226,
	227, 425, 255, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 388, 0, 0, 0, 418, 424,
	0, 0, 0, 0, 0, 423, 321, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 370, 382, 400, 403, 0, 0, 0, 231,
	402, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 398, 305,
	306, 307, 308, 272, 0, 248, 401, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 268, 274, 413, 276,
	247, 320, 270, 379, 283, 0, 406, 0, 407, 0,
	0, 0, 0, 312, 279, 280, 344, 284, 290, 333,
	378, 318, 338, 245, 369, 345, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 288,
	0, 329, 267, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 0, 0, 222, 223, 224, 225, 354, 0, 0,
	385, 386, 387, 409, 371, 0, 422, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 346, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 351, 367,
	244, 342, 380, 249, 349, 239, 316, 339, 0, 0,
	236, 365, 348, 298, 281, 282, 235, 0, 334, 260,
	273, 257, 314, 0, 364, 392, 256, 383, 0, 375,
	238, 0, 374, 313, 361, 366, 299, 293, 237, 363,
	297, 292, 285, 264, 408, 277, 325, 291, 326, 278,
	303, 302, 304, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 286, 0, 0, 0,
	393, 0, 337, 319, 0, 0, 0, 335, 289, 362,
	327, 368, 352, 376, 331, 328, 229, 353, 259, 300,
	240, 242, 254, 261, 263, 265, 266, 309, 310, 322,
	341, 355, 356, 357, 258, 250, 336, 251, 275, 252,
	230, 343, 253, 232, 323, 360, 0, 271, 332, 296,
	233, 295, 324, 359, 358, 241, 384, 390, 391, 396,
	0, 397, 0, 0, 0, 405, 410, 411, 412, 414,
	415, 416, 417, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 389, 269, 226, 227, 425, 255,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 388, 0, 0, 0, 418, 424, 0, 0, 0,
	0, 0, 423, 321, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 370,
	382, 400, 403, 0, 0, 0, 231, 402, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 398, 305, 306, 307, 308,
	272, 0, 248, 401, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 268, 274, 413, 276, 247, 320, 270,
	379, 283, 0, 406, 0, 407, 0, 0, 0, 0,
	312, 279, 280, 344, 284, 290, 333, 378, 318, 338,
	245, 369, 345, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 288, 0, 329, 267,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 0,
	222, 223, 224, 225, 354, 0, 0, 385, 386, 387,
	409, 371, 0, 422, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 346, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 351, 367, 244, 342, 380,
	249, 349, 239, 316, 339, 0, 0, 236, 365, 348,
	298, 281, 282, 235, 0, 334, 260, 273, 257, 314,
	0, 364, 392, 256, 383, 0, 375, 238, 0, 374,
	313, 361, 366, 299, 293, 237, 363, 297, 292, 285,
	264, 408, 277, 325, 291, 326, 278, 303, 302, 304,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 286, 0, 0, 0, 393, 0, 337,
	319, 0, 0, 0, 335, 289, 362, 327, 368, 352,
	376, 331, 328, 229, 353, 259, 300, 240, 242, 254,
	261, 263, 265, 266, 309, 310, 322, 341, 355, 356,
	357, 258, 250, 336, 251, 275, 252, 230, 343, 253,
	232, 323, 360, 0, 271, 332, 296, 233, 295, 324,
	359, 358, 241, 384, 390, 391, 396, 0, 397, 0,
	0, 0, 405, 410, 411, 412, 414, 415, 416, 417,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 389, 269, 226, 227, 425, 255, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 388, 0,
	0, 0, 418, 424, 0, 0, 0, 0, 0, 423,
	321, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 370, 382, 400, 403,
	0, 0, 0, 231, 402, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 398, 305, 306, 307, 308, 272, 0, 248,
	401, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	268, 274, 413, 276, 247, 320, 270, 379, 283, 0,
	406, 0, 407, 0, 0, 0, 0, 312, 279, 280,
	344, 284, 290, 333, 378, 318, 338, 245, 369, 345,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 288, 0, 329, 267, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 0, 0, 222, 223, 224,
	225, 354, 0, 0, 385, 386, 387, 409, 371, 0,
	422, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	346, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 351, 367, 244, 342, 380, 249, 349, 239,
	316, 339, 0, 0, 236, 365, 348, 298, 281, 282,
	235, 0, 334, 260, 273, 257, 314, 0, 364, 392,
	256, 383, 0, 375, 238, 0, 374, 313, 361, 366,
	299, 293, 237, 363, 297, 292, 285, 264, 408, 277,
	325, 291, 326, 278, 303, 302, 304, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	286, 0, 0, 0, 393, 0, 337, 319, 0, 0,
	0, 335, 289, 362, 327, 368, 352, 376, 331, 328,
	229, 353, 259, 300, 240, 242, 254, 261, 263, 265,
	266, 309, 310, 322, 341, 355, 356, 357, 258, 250,
	336, 251, 275, 252, 230, 343, 253, 232, 323, 360,
	0, 271, 332, 296, 233, 295, 324, 359, 358, 241,
	384, 390, 391, 396, 0, 397, 0, 0, 0, 405,
	410, 411, 412, 414, 415, 416, 417, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 389, 269,
	226, 227, 425, 255, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 388, 0, 0, 0, 418,
	424, 0, 0, 0, 0, 0, 423, 321, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 370, 382, 400, 403, 0, 0, 0,
	231, 402, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 398,
	305, 306, 307, 308, 272, 0, 248, 401, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 268, 274, 413,
	276, 247, 320, 270, 379, 283, 0, 406, 0, 407,
	0, 0, 0, 0, 312, 279, 280, 344, 284, 290,
	333, 378, 318, 338, 245, 369, 345, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	288, 0, 329, 267, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 0, 222, 223, 224, 225, 354, 0,
	0, 385, 386, 387, 409, 371, 0, 422, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 346, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 2354, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 351,
	367, 244, 342, 380, 249, 349, 239, 316, 339, 0,
	0, 236, 365, 348, 298, 281, 282, 235, 0, 334,
	260, 273, 257, 314, 0, 364, 392, 256, 383, 0,
	375, 238, 0, 374, 313, 361, 366, 299, 293, 237,
	363, 297, 292, 285, 264, 408, 277, 325, 291, 326,
	278, 303, 302, 304, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 286, 0, 0,
	0, 393, 0, 337, 319, 0, 0, 0, 335, 289,
	362, 327, 368, 352, 376, 331, 328, 229, 353, 259,
	300, 240, 242, 254, 261, 263, 265, 266, 309, 310,
	322, 341, 355, 356, 357, 258, 250, 336, 251, 275,
	252, 230, 343, 253, 232, 323, 360, 0, 271, 332,
	296, 233, 295, 324, 359, 358, 241, 384, 390, 391,
	396, 0, 397, 0, 0, 0, 405, 410, 411, 412,
	414, 415, 416, 417, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 389, 269, 226, 227, 425,
	255, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 388, 0, 0, 0, 418, 424, 0, 0,
	0, 0, 0, 423, 321, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	370, 382, 400, 403, 0, 0, 0, 231, 402, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 398, 305, 306, 307,
	308, 272, 0, 248, 401, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 268, 274, 413, 276, 247, 320,
	270, 379, 283, 0, 406, 0, 407, 0, 0, 0,
	0, 312, 279, 280, 344, 284, 290, 333, 378, 318,
	338, 245, 369, 345, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 288, 0, 329,
	267, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 0,
	0, 222, 223, 224, 225, 354, 0, 0, 385, 386,
	387, 409, 371, 0, 422, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 346, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 351, 367, 244, 342,
	380, 249, 349, 239, 316, 339, 0, 0, 236, 365,
	348, 298, 281, 282, 235, 0, 334, 260, 273, 257,
	314, 0, 364, 392, 256, 383, 0, 375, 238, 0,
	374, 313, 361, 366, 299, 293, 237, 363, 297, 292,
	285, 264, 408, 277, 325, 291, 326, 278, 303, 302,
	304, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 286, 0, 0, 0, 393, 0,
	337, 319, 0, 0, 0, 335, 289, 362, 327, 368,
	352, 376, 331, 328, 229, 353, 259, 300, 240, 242,
	254, 261, 263, 265, 266, 309, 310, 322, 341, 355,
	356, 357, 258, 250, 336, 251, 275, 252, 230, 343,
	253, 232, 323, 360, 0, 271, 332, 296, 233, 295,
	324, 359, 358, 241, 384, 390, 391, 396, 0, 397,
	0, 0, 0, 405, 410, 411, 412, 414, 415, 416,
	417, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 389, 269, 226, 227, 425, 255, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 388,
	0, 0, 0, 418, 424, 0, 0, 0, 0, 0,
	423, 321, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 370, 382, 400,
	403, 0, 0, 0, 231, 402, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 398, 305, 306, 307, 308, 272, 0,
	248, 401, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 268, 274, 413, 276, 247, 320, 270, 379, 283,
	0, 406, 0, 407, 0, 0, 0, 0, 312, 279,
	280, 344, 284, 290, 333, 378, 318, 338, 245, 369,
	345, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 288, 0, 329, 267, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 0, 222, 223,
	224, 225, 354, 0, 0, 385, 386, 387, 409, 371,
	0, 422, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 346, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 1156, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 351, 367, 244, 342, 380, 249, 349,
	239, 316, 339, 0, 0, 236, 365, 348, 298, 281,
	282, 235, 0, 334, 260, 273, 257, 314, 0, 364,
	392, 256, 383, 0, 375, 238, 0, 374, 313, 361,
	366, 299, 293, 237, 363, 297, 292, 285, 264, 408,
	277, 325, 291, 326, 278, 303, 302, 304, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 286, 0, 0, 0, 393, 0, 337, 319, 0,
	0, 0, 335, 289, 362, 327, 368, 352, 376, 331,
	328, 229, 353, 259, 300, 240, 242, 254, 261, 263,
	265, 266, 309, 310, 322, 341, 355, 356, 357, 258,
	250, 336, 251, 275, 252, 230, 343, 253, 232, 323,
	360, 0, 271, 332, 296, 233, 295, 324, 359, 358,
	241, 384, 390, 391, 396, 0, 397, 0, 0, 0,
	405, 410, 411, 412, 414, 415, 416, 417, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 389,
	269, 226, 227, 425, 255, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 388, 0, 0, 0,
	418, 424, 0, 0, 0, 0, 0, 423, 321, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 370, 382, 400, 403, 0, 0,
	0, 231, 402, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	398, 305, 306, 307, 308, 272, 0, 248, 401, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 268, 274,
	413, 276, 247, 320, 270, 379, 283, 0, 406, 0,
	407, 0, 0, 0, 0, 312, 279, 280, 344, 284,
	290, 333, 378, 318, 338, 245, 369, 345, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 288, 0, 329, 267, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 0, 0, 222, 223, 224, 225, 354,
	0, 0, 385, 386, 387, 409, 371, 0, 422, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 346, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1926, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	351, 367, 244, 342, 380, 249, 349, 239, 316, 339,
	0, 0, 236, 365, 348, 298, 281, 282, 235, 0,
	334, 260, 273, 257, 314, 0, 364, 392, 256, 383,
	0, 375, 238, 0, 374, 313, 361, 366, 299, 293,
	237, 363, 297, 292, 285, 264, 408, 277, 325, 291,
	326, 278, 303, 302, 304, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 286, 0,
	0, 0, 393, 0, 337, 319, 0, 0, 0, 335,
	289, 362, 327, 368, 352, 376, 331, 328, 229, 353,
	259, 300, 240, 242, 254, 261, 263, 265, 266, 309,
	310, 322, 341, 355, 356, 357, 258, 250, 336, 251,
	275, 252, 230, 343, 253, 232, 323, 360, 0, 271,
	332, 296, 233, 295, 324, 359, 358, 241, 384, 390,
	391, 396, 0, 397, 0, 0, 0, 405, 410, 411,
	412, 414, 415, 416, 417, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 389, 269, 226, 227,
	425, 255, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 388, 0, 0, 0, 418, 424, 0,
	0, 0, 0, 0, 423, 321, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 370, 382, 400, 403, 0, 0, 0, 231, 402,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 398, 305, 306,
	307, 308, 272, 0, 248, 401, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 268, 274, 413, 276, 247,
	320, 270, 379, 283, 0, 406, 0, 407, 0, 0,
	0, 0, 312, 279, 280, 344, 284, 290, 333, 378,
	318, 338, 245, 369, 345, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 288, 0,
	329, 267, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 0, 222, 223, 224, 225, 354, 0, 0, 385,
	386, 387, 409, 371, 0, 422, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 346, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 351, 367, 244,
	342, 380, 249, 349, 239, 316, 339, 0, 0, 236,
	365, 348, 298, 281, 282, 235, 0, 334, 260, 273,
	257, 314, 0, 364, 392, 256, 383, 0, 375, 238,
	0, 374, 313, 361, 366, 299, 293, 237, 363, 297,
	292, 285, 264, 408, 277, 325, 291, 326, 278, 303,
	302, 304, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 286, 0, 0, 0, 393,
	0, 337, 319, 0, 0, 0, 335, 289, 362, 327,
	368, 352, 376, 331, 328, 229, 353, 259, 300, 240,
	242, 254, 261, 263, 265, 266, 309, 310, 322, 341,
	355, 356, 357, 258, 250, 336, 251, 275, 252, 230,
	343, 253, 232, 323, 360, 0, 271, 332, 296, 233,
	295, 324, 359, 358, 241, 384, 390, 391, 396, 0,
	397, 0, 0, 0, 405, 410, 411, 412, 414, 415,
	416, 417, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 389, 269, 226, 227, 425, 255, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	388, 0, 0, 0, 418, 424, 0, 0, 0, 0,
	0, 423, 321, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 370, 382,
	400, 403, 0, 0, 0, 231, 402, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 398, 305, 306, 307, 308, 272,
	0, 248, 401, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 268, 274, 413, 276, 247, 320, 270, 379,
	283, 0, 406, 0, 407, 0, 0, 0, 0, 312,
	279, 280, 344, 284, 290, 333, 378, 318, 338, 245,
	369, 345, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 288, 0, 329, 267, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 0, 0, 222,
	223, 224, 225, 354, 0, 0, 385, 386, 387, 409,
	371, 0, 422, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 346, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 351, 367, 244, 342, 380, 249,
	349, 239, 316, 339, 0, 0, 236, 365, 348, 298,
	281, 282, 235, 0, 334, 260, 273, 257, 314, 0,
	364, 392, 256, 383, 0, 375, 238, 0, 374, 313,
	361, 366, 299, 293, 237, 363, 297, 292, 285, 264,
	408, 277, 325, 291, 326, 278, 303, 302, 304, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 286, 0, 0, 0, 393, 0, 337, 319,
	0, 0, 0, 335, 289, 362, 327, 368, 352, 376,
	331, 328, 229, 353, 259, 300, 240, 242, 254, 261,
	263, 265, 266, 309, 310, 322, 341, 355, 356, 357,
	258, 250, 336, 251, 275, 252, 230, 343, 253, 232,
	323, 360, 0, 271, 332, 296, 233, 295, 324, 359,
	358, 241, 384, 390, 391, 396, 0, 397, 0, 0,
	0, 405, 410, 411, 412, 414, 415, 416, 417, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	389, 269, 226, 227, 425, 255, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 388, 0, 0,
	0, 418, 424, 0, 0, 0, 0, 0, 423, 321,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 370, 382, 400, 403, 0,
	0, 0, 231, 402, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 398, 305, 306, 307, 308, 272, 0, 248, 401,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 268,
	274, 413, 276, 247, 320, 270, 379, 283, 0, 406,
	0, 407, 0, 0, 0, 0, 312, 279, 280, 344,
	284, 290, 333, 378, 318, 338, 245, 369, 345, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 288, 0, 329, 267, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 0, 222, 223, 224, 225,
	354, 0, 0, 385, 386, 387, 409, 371, 0, 422,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 346,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 1953, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 351, 367, 244, 342, 380, 249, 349, 239, 316,
	339, 0, 0, 236, 365, 348, 298, 281, 282, 235,
	0, 334, 260, 273, 257, 314, 0, 364, 392, 256,
	383, 0, 375, 238, 0, 374, 313, 361, 366, 299,
	293, 237, 363, 297, 292, 285, 264, 408, 277, 325,
	291, 326, 278, 303, 302, 304, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 286,
	0, 0, 0, 393, 0, 337, 319, 0, 0, 0,
	335, 289, 362, 327, 368, 352, 376, 331, 328, 229,
	353, 259, 300, 240, 242, 254, 261, 263, 265, 266,
	309, 310, 322, 341, 355, 356, 357, 258, 250, 336,
	251, 275, 252, 230, 343, 253, 232, 323, 360, 0,
	271, 332, 296, 233, 295, 324, 359, 358, 241, 384,
	390, 391, 396, 0, 397, 0, 0, 0, 405, 410,
	411, 412, 414, 415, 416, 417, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 389, 269, 226,
	227, 425, 255, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 388, 0, 0, 0, 418, 424,
	0, 0, 0, 0, 0, 423, 321, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 370, 382, 400, 403, 0, 0, 0, 231,
	402, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 398, 305,
	306, 307, 308, 272, 0, 248, 401, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 268, 274, 413, 276,
	247, 320, 270, 379, 283, 0, 406, 0, 407, 0,
	0, 0, 0, 312, 279, 280, 344, 284, 290, 333,
	378, 318, 338, 245, 369, 345, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 288,
	0, 329, 267, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 0, 0, 222, 223, 224, 225, 0, 0, 0,
	385, 386, 387, 409, 371, 354, 422, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 346, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 351, 367, 244, 342,
	380, 249, 349, 239, 316, 339, 0, 0, 236, 365,
	348, 298, 281, 282, 235, 0, 334, 260, 273, 257,
	314, 0, 364, 392, 256, 383, 0, 375, 238, 0,
	374, 313, 361, 366, 299, 293, 237, 363, 297, 292,
	285, 264, 408, 277, 325, 291, 326, 278, 303, 302,
	304, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 286, 0, 0, 0, 393, 0,
	337, 319, 0, 0, 0, 335, 289, 362, 327, 368,
	352, 376, 331, 328, 229, 353, 259, 300, 240, 242,
	254, 261, 263, 265, 266, 309, 310, 322, 341, 355,
	356, 357, 258, 250, 336, 251, 275, 252, 230, 343,
	253, 232, 323, 360, 0, 271, 332, 296, 233, 295,
	324, 359, 358, 241, 384, 390, 391, 396, 0, 397,
	0, 0, 0, 405, 410, 411, 412, 414, 415, 416,
	417, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 389, 269, 226, 227, 425, 255, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 388,
	0, 0, 0, 418, 424, 0, 0, 0, 0, 0,
	423, 321, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 370, 382, 400,
	403, 0, 0, 0, 231, 402, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 398, 305, 306, 307, 308, 272, 0,
	248, 401, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 268, 274, 413, 276, 247, 320, 270, 379, 283,
	0, 406, 0, 407, 0, 0, 0, 0, 312, 279,
	280, 344, 284, 290, 333, 378, 318, 338, 245, 369,
	345, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 288, 0, 329, 267, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 0, 222, 223,
	224, 225, 354, 0, 0, 385, 386, 387, 409, 371,
	0, 422, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 346, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 351, 367, 244, 342, 380, 249, 349,
	239, 316, 339, 0, 0, 236, 365, 348, 298, 281,
	282, 235, 0, 334, 260, 273, 257, 314, 0, 364,
	392, 256, 383, 0, 375, 238, 0, 374, 313, 361,
	366, 299, 293, 237, 363, 297, 292, 285, 264, 408,
	277, 325, 291, 326, 278, 303, 302, 304, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 286, 0, 0, 0, 393, 0, 337, 319, 0,
	0, 0, 335, 289, 362, 327, 368, 352, 376, 331,
	328, 229, 353, 259, 300, 240, 242, 254, 261, 263,
	265, 266, 309, 310, 322, 341, 355, 356, 357, 258,
	250, 336, 251, 275, 252, 230, 343, 253, 232, 323,
	360, 0, 271, 332, 296, 233, 295, 324, 359, 358,
	241, 384, 390, 391, 396, 0, 397, 0, 0, 0,
	405, 410, 411, 412, 414, 415, 416, 417, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 389,
	269, 226, 227, 425, 255, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 388, 0, 0, 0,
	418, 424, 0, 0, 0, 0, 0, 423, 321, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 370, 382, 400, 403, 0, 0,
	0, 231, 402, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	398, 305, 306, 307, 308, 272, 0, 248, 401, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 268, 274,
	413, 276, 247, 320, 270, 379, 283, 0, 406, 0,
	407, 0, 0, 0, 0, 312, 279, 280, 344, 284,
	290, 333, 378, 318, 338, 245, 369, 345, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 288, 0, 329, 267, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 0, 0, 222, 223, 224, 225, 354,
	0, 0, 385, 386, 387, 409, 371, 0, 422, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 346, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1156, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	351, 367, 244, 342, 380, 249, 349, 239, 316, 339,
	0, 0, 236, 365, 348, 298, 281, 282, 235, 0,
	334, 260, 273, 257, 314, 0, 364, 392, 256, 383,
	0, 375, 238, 0, 374, 313, 361, 366, 299, 293,
	237, 363, 297, 292, 285, 264, 408, 277, 325, 291,
	326, 278, 303, 302, 304, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 286, 0,
	0, 0, 393, 0, 337, 319, 0, 0, 0, 335,
	289, 362, 327, 368, 352, 376, 1470, 328, 229, 353,
	259, 300, 240, 242, 254, 261, 263, 265, 266, 309,
	310, 322, 341, 355, 356, 357, 258, 250, 336, 251,
	275, 252, 230, 343, 253, 232, 323, 360, 0, 271,
	332, 296, 233, 295, 324, 359, 358, 241, 384, 390,
	391, 396, 0, 397, 0, 0, 0, 405, 410, 411,
	412, 414, 415, 416, 417, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 389, 269, 226, 227,
	425, 255, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 388, 0, 0, 0, 418, 424, 0,
	0, 0, 0, 0, 423, 321, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 370, 382, 400, 403, 0, 0, 0, 231, 402,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 398, 305, 306,
	307, 308, 272, 0, 248, 401, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 268, 274, 413, 276, 247,
	320, 270, 379, 283, 0, 406, 0, 407, 0, 0,
	0, 0, 312, 279, 280, 344, 284, 290, 333, 378,
	318, 338, 245, 369, 345, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 288, 0,
	329, 267, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 0, 222, 223, 224, 225, 354, 0, 0, 385,
	386, 387, 409, 371, 0, 422, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 346, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 351, 367, 244,
	342, 380, 249, 349, 239, 316, 339, 0, 0, 236,
	365, 348, 298, 281, 282, 235, 0, 334, 260, 273,
	257, 314, 0, 364, 392, 256, 383, 0, 375, 238,
	0, 374, 313, 361, 366, 299, 293, 237, 363, 297,
	292, 285, 264, 408, 277, 325, 291, 326, 278, 303,
	302, 304, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 1179, 0,
	0, 0, 350, 0, 0, 286, 0, 0, 0, 393,
	0, 337, 319, 0, 0, 0, 335, 289, 362, 327,
	368, 352, 376, 331, 328, 229, 353, 259, 300, 240,
	242, 254, 261, 263, 265, 266, 309, 310, 322, 341,
	355, 356, 357, 258, 250, 336, 251, 275, 252, 230,
	343, 253, 232, 323, 360, 0, 271, 332, 296, 233,
	295, 324, 359, 358, 241, 384, 390, 391, 396, 0,
	397, 0, 0, 0, 405, 410, 411, 412, 414, 415,
	416, 417, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 389, 269, 226, 227, 425, 255, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	388, 0, 0, 0, 418, 424, 0, 0, 0, 0,
	0, 423, 321, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 370, 382,
	400, 403, 0, 0, 0, 231, 402, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 398, 305, 306, 307, 308, 272,
	0, 248, 401, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 268, 274, 413, 276, 247, 320, 270, 379,
	283, 0, 406, 0, 407, 0, 0, 0, 0, 312,
	279, 280, 344, 284, 290, 333, 378, 318, 338, 245,
	369, 345, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 288, 0, 329, 267, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 0, 0, 222,
	223, 224, 225, 354, 0, 0, 385, 386, 387, 409,
	371, 0, 422, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 346, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 351, 367, 244, 342, 380, 249,
	349, 239, 316, 339, 0, 0, 236, 365, 348, 298,
	281, 282, 235, 0, 334, 260, 273, 257, 314, 0,
	364, 392, 256, 383, 0, 375, 238, 0, 374, 313,
	361, 366, 299, 293, 237, 363, 297, 292, 285, 264,
	408, 277, 325, 291, 326, 278, 303, 302, 304, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 286, 0, 0, 0, 393, 0, 337, 319,
	0, 0, 0, 335, 289, 362, 327, 368, 352, 376,
	331, 328, 229, 353, 259, 300, 240, 242, 254, 261,
	263, 265, 266, 309, 310, 322, 341, 355, 356, 357,
	258, 250, 336, 251, 275, 252, 230, 343, 253, 232,
	323, 360, 0, 271, 332, 296, 233, 295, 324, 359,
	358, 241, 384, 390, 391, 396, 0, 397, 0, 0,
	0, 405, 410, 411, 412, 414, 415, 416, 417, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	389, 269, 226, 227, 425, 255, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 388, 0, 0,
	0, 418, 424, 0, 0, 0, 0, 0, 423, 321,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 370, 382, 400, 403, 0,
	0, 0, 231, 402, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 398, 305, 306, 307, 308, 272, 0, 248, 401,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 268,
	274, 413, 276, 247, 320, 270, 379, 283, 0, 406,
	0, 407, 0, 0, 0, 0, 312, 279, 280, 344,
	284, 290, 333, 378, 318, 338, 245, 369, 345, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 0, 0,
	228, 0, 288, 0, 329, 267, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 0, 222, 223, 224, 225,
	354, 0, 0, 385, 386, 387, 409, 371, 0, 422,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 346,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 351, 367, 244, 342, 380, 249, 349, 239, 316,
	339, 0, 0, 236, 365, 348, 298, 281, 282, 235,
	0, 334, 260, 273, 257, 314, 0, 364, 392, 256,
	383, 0, 375, 238, 0, 374, 313, 361, 366, 299,
	293, 237, 363, 297, 292, 285, 264, 408, 277, 325,
	291, 326, 278, 303, 302, 304, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 286,
	0, 0, 0, 393, 0, 337, 319, 0, 0, 0,
	335, 289, 362, 327, 368, 352, 376, 463, 328, 229,
	353, 259, 300, 240, 242, 254, 261, 263, 265, 266,
	309, 310, 322, 341, 355, 356, 357, 258, 250, 336,
	251, 275, 252, 230, 343, 253, 232, 323, 360, 0,
	271, 332, 296, 233, 295, 324, 359, 358, 241, 384,
	390, 391, 396, 0, 397, 0, 0, 0, 405, 410,
	411, 412, 414, 415, 416, 417, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 389, 269, 226,
	227, 425, 255, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 388, 0, 0, 0, 418, 424,
	0, 0, 0, 0, 0, 423, 321, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 370, 382, 400, 403, 0, 0, 0, 231,
	402, 0, 0, 0, 0, 0, 0, 464, 373, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 398, 305,
	306, 307, 308, 272, 0, 248, 401, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 268, 274, 413, 276,
	247, 320, 270, 379, 283, 0, 406, 0, 407, 0,
	0, 0, 0, 312, 279, 280, 344, 284, 290, 333,
	378, 318, 338, 245, 369, 345, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 288,
	0, 329, 267, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 0, 0, 222, 223, 224, 225, 354, 0, 0,
	385, 386, 387, 409, 371, 0, 422, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 346, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 351, 367,
	244, 342, 380, 249, 349, 239, 316, 339, 0, 0,
	236, 365, 348, 298, 281, 282, 235, 0, 334, 260,
	273, 257, 314, 0, 364, 392, 256, 383, 0, 375,
	238, 0, 374, 313, 361, 366, 299, 293, 237, 363,
	297, 292, 285, 264, 408, 277, 325, 291, 326, 278,
	303, 302, 304, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 440, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 286, 0, 0, 0,
	393, 0, 337, 319, 0, 0, 0, 335, 289, 362,
	327, 368, 352, 376, 331, 328, 229, 353, 259, 300,
	240, 242, 254, 261, 263, 265, 266, 309, 310, 322,
	341, 355, 356, 357, 258, 250, 336, 251, 275, 252,
	230, 343, 253, 232, 323, 360, 0, 271, 332, 296,
	233, 295, 324, 359, 358, 241, 384, 390, 391, 396,
	0, 397, 0, 0, 0, 405, 410, 411, 412, 414,
	415, 416, 417, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 389, 269, 226, 227, 425, 255,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 388, 0, 0, 0, 418, 424, 0, 0, 0,
	0, 0, 423, 321, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 370,
	382, 400, 403, 0, 0, 0, 231, 402, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 398, 305, 306, 307, 308,
	272, 0, 248, 401, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 268, 274, 413, 276, 247, 320, 270,
	379, 283, 0, 406, 0, 407, 0, 0, 0, 0,
	312, 279, 280, 344, 284, 290, 333, 378, 318, 338,
	245, 369, 345, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 288, 0, 329, 267,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 0,
	222, 223, 224, 225, 354, 0, 0, 385, 386, 387,
	409, 371, 0, 422, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 262, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 346, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 351, 367, 244, 342, 380,
	249, 349, 239, 316, 339, 0, 0, 236, 365, 348,
	298, 281, 282, 235, 0, 334, 260, 273, 257, 314,
	0, 364, 392, 256, 383, 0, 375, 238, 0, 374,
	313, 361, 366, 299, 293, 237, 363, 297, 292, 285,
	264, 408, 277, 325, 291, 326, 278, 303, 302, 304,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 286, 0, 0, 0, 393, 0, 337,
	319, 0, 0, 0, 335, 289, 362, 327, 368, 352,
	376, 331, 328, 229, 353, 259, 300, 240, 242, 254,
	261, 263, 265, 266, 309, 310, 322, 341, 355, 356,
	357, 258, 250, 336, 251, 275, 252, 230, 343, 253,
	232, 323, 360, 0, 271, 332, 296, 233, 295, 324,
	359, 358, 241, 384, 390, 391, 396, 0, 397, 0,
	0, 0, 405, 410, 411, 412, 414, 415, 416, 417,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 389, 269, 226, 227, 425, 255, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 388, 0,
	0, 0, 418, 424, 0, 0, 0, 0, 0, 423,
	321, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 370, 382, 400, 403,
	0, 0, 0, 231, 402, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 398, 305, 306, 307, 308, 272, 0, 248,
	401, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	268, 274, 413, 276, 247, 320, 270, 379, 283, 0,
	406, 0, 407, 0, 0, 0, 0, 312, 279, 280,
	344, 284, 290, 333, 378, 318, 338, 245, 369, 345,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 288, 0, 329, 267, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 0, 0, 222, 223, 224,
	225, 354, 0, 0, 385, 386, 387, 409, 371, 0,
	422, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	346, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 351, 367, 244, 342, 380, 249, 349, 239,
	316, 339, 0, 0, 236, 365, 348, 298, 281, 282,
	235, 0, 334, 260, 273, 257, 314, 0, 364, 392,
	256, 383, 0, 375, 238, 0, 374, 313, 361, 366,
	299, 293, 237, 363, 297, 292, 285, 264, 408, 277,
	325, 291, 326, 278, 303, 302, 304, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	286, 0, 0, 0, 393, 0, 337, 319, 0, 0,
	0, 335, 289, 362, 327, 368, 352, 376, 331, 328,
	229, 353, 259, 300, 240, 242, 254, 261, 263, 265,
	266, 309, 310, 322, 341, 355, 356, 357, 258, 250,
	336, 251, 275, 252, 230, 343, 253, 232, 323, 360,
	0, 271, 332, 296, 233, 295, 324, 359, 358, 241,
	384, 390, 391, 396, 0, 397, 0, 0, 0, 405,
	410, 411, 412, 414, 415, 416, 417, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 389, 269,
	226, 227, 425, 255, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 388, 0, 0, 0, 418,
	424, 0, 0, 0, 0, 0, 423, 321, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 370, 382, 400, 403, 0, 0, 0,
	231, 402, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 398,
	305, 306, 307, 308, 272, 0, 248, 401, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 268, 274, 413,
	276, 247, 320, 270, 379, 283, 0, 406, 0, 407,
	0, 0, 0, 0, 312, 279, 280, 344, 284, 290,
	333, 378, 318, 338, 245, 369, 345, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	288, 0, 329, 267, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 0, 222, 223, 224, 225, 354, 0,
	0, 385, 386, 387, 409, 371, 0, 422, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 346, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 351,
	367, 244, 342, 380, 249, 349, 239, 316, 339, 0,
	0, 236, 365, 348, 298, 281, 282, 235, 0, 334,
	260, 273, 257, 314, 0, 364, 392, 256, 383, 0,
	375, 238, 0, 374, 313, 361, 366, 299, 293, 237,
	363, 297, 292, 285, 264, 408, 277, 325, 291, 326,
	278, 303, 302, 304, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 286, 0, 0,
	0, 393, 0, 337, 319, 0, 0, 0, 335, 289,
	362, 327, 368, 352, 376, 331, 328, 229, 353, 259,
	300, 240, 242, 504, 261, 263, 265, 266, 309, 310,
	322, 341, 355, 356, 357, 258, 250, 336, 251, 275,
	252, 230, 343, 253, 232, 323, 360, 0, 271, 332,
	296, 233, 295, 324, 359, 358, 241, 384, 390, 391,
	396, 0, 397, 0, 0, 0, 405, 410, 411, 412,
	414, 415, 416, 417, 0, 1363, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 389, 269, 226, 227, 425,
	255, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 388, 0, 0, 0, 418, 424, 0, 0,
	0, 0, 0, 423, 321, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	370, 382, 400, 403, 0, 0, 0, 231, 402, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 398, 305, 306, 307,
	308, 272, 0, 248, 401, 330, 932, 933, 934, 931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 268, 274, 413, 276, 247, 320,
	270, 379, 283, 0, 406, 156, 407, 49, 148, 125,
	0, 312, 279, 280, 344, 284, 290, 333, 378, 318,
	338, 245, 369, 345, 294, 149, 0, 0, 0, 0,
	0, 0, 141, 0, 0, 0, 150, 1359, 221, 0,
	0, 1356, 108, 0, 0, 1358, 1355, 1357, 1361, 1362,
	0, 0, 0, 1360, 0, 1363, 0, 97, 0, 0,
	0, 0, 0, 153, 0, 228, 0, 288, 0, 329,
	267, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 0,
	0, 222, 223, 224, 225, 0, 0, 0, 385, 386,
	387, 409, 371, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 113, 0, 114,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1366, 1367, 1368, 1369, 1370, 1371, 1364, 1365, 1531, 0,
	0, 0, 0, 0, 124, 147, 154, 1359, 95, 0,
	0, 1356, 0, 1529, 0, 1358, 1355, 1357, 1361, 1362,
	0, 0, 0, 1360, 0, 0, 146, 140, 139, 0,
	0, 0, 0, 55, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 2959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 142, 143, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 145,
	0, 105, 0, 1511, 0, 0, 0, 0, 0, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1366, 1367, 1368, 1369, 1370, 1371, 1364, 1365, 1504, 1503,
	1506, 0, 1502, 0, 0, 0, 0, 1515, 483, 0,
	482, 489, 479, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 486, 487, 106, 488, 492, 0, 0, 474,
	0, 0, 0, 2736, 48, 0, 0, 0, 1508, 497,
	0, 0, 1510, 1512, 1514, 1529, 1516, 1517, 1518, 1520,
	1521, 1522, 1524, 1525, 1526, 1527, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 501,
	0, 0, 503, 0, 0, 0, 0, 502, 0, 1531,
	0, 0, 0, 50, 0, 0, 0, 1508, 0, 0,
	0, 1510, 1512, 1514, 1530, 1516, 1517, 1518, 1520, 1521,
	1522, 1524, 1525, 1526, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 126, 1511, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 1528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 1508, 0, 0, 1507, 1510,
	1512, 1514, 0, 1516, 1517, 1518, 1520, 1521, 1522, 1524,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 38, 0, 0, 0, 1523, 0, 47,
	1528, 0, 0, 111, 1513, 483, 0, 482, 489, 479,
	2412, 0, 0, 0, 0, 0, 0, 1507, 0, 486,
	487, 1530, 488, 492, 0, 0, 474, 475, 477, 476,
	0, 0, 0, 0, 0, 2422, 497, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 2415, 485,
	0, 0, 0, 1513, 0, 2410, 500, 0, 1528, 0,
	2425, 2426, 0, 478, 0, 0, 2411, 469, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2416, 1523, 0, 0, 0, 0, 1508,
	0, 1513, 0, 1510, 1512, 1514, 0, 1516, 1517, 1518,
	1520, 1521, 1522, 1524, 1525, 1526, 1527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 484, 490, 1530, 491, 493, 0, 0,
	494, 495, 496, 0, 0, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2424, 0, 1857, 0, 0, 0,
	0, 0, 1528, 0, 475, 477, 476, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, 1507,
	0, 2418, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 2417, 2419, 0, 0, 0, 1523, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2413, 0, 0, 0, 0, 0, 2423, 0, 0, 480,
	484, 490, 0, 491, 493, 0, 0, 494, 495, 496,
	0, 0, 498, 499,
}

var yyPact = [...]int{
	256, -1000, -1000, -1000, -311, 9839, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33060, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33060, -307, 32533,
	32533, -1000, -1000, 1867, -1000, 32006, 10388, 33060, 314, 312,
	33060, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 562, -1000, 31479, -1000, -1000,
	-1000, -1000, -1000, -1000, 509, 34378, 33587, 7720, -250, -1000,
	2626, -98, 709, 721, 830, 830, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3645, 710, 30952, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3590, 218, 710, 13023,
	-8, -22, 2626, 300, 205, -1000, 853, 34005, 143, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7720, 7720, 9839, -318, 9839, 7720, 33060, 33060, -1000, -1000,
	-1000, -1000, 509, 34378, 7720, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -22, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2995,
	-1000, 1207, -1000, -1000, -1000, -1000, 2198, 1206, 1794, 468,
	33060, -1000, 1205, 468, -1000, -1000, -1000, 2626, 2626, -1000,
	33060, 33060, 56, 1333, -1000, 327, 318, 317, 1198, -1000,
	-1000, -1000, -1000, -1000, -1000, 402, 2601, -1000, 33060, 33060,
	2221, 33060, -1000, 1436, 431, 2980, 2403, 1187, 606, 2249,
	-1000, -1000, 2197, -1000, 182, 162, 186, 622, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 184, -1000, 2458, -1000, -1000,
	172, -1000, -1000, 176, -1000, -1000, -1000, -25, -1000, -1000,
	-1000, -1000, -1000, -1000, -105, -1000, -1000, 755, 1435, 7720,
	-1000, 1723, -1000, 2916, -1000, -1000, -1000, -1000, 5075, 9301,
	9301, 9301, 9301, -1000, -1000, 2031, 7720, 2196, 2195, -1000,
	-1000, -1000, -1000, -1000, 1197, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1783, 8774, -1000,
	2194, 2193, 2192, 2191, 2190, 2189, 2187, 2186, 2185, 2181,
	2178, 2164, 2155, 2154, 1931, 3204, 2151, 1782, 1781, 2146,
	2142, 2134, 1773, 1931, 1931, 2129, 2127, 2126, 2124, 2123,
	2110, 2104, 2102, 2100, 2099, 2098, 2085, 2084, 2079, 2077,
	2075, 2074, 2069, 2068, 2059, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1082, -1000,
	2052, 2391, 2490, 1966, 2547, 2486, 2469, 2464, 2460, 1607,
	-1000, -1000, -1000, -138, -1000, -1000, 717, -1000, 684, -1000,
	33060, 33060, 33060, 507, 507, 507, 507, 507, 530, 507,
	557, 555, 547, 507, -1000, -1000, -1000, -1000, -1000, -1000,
	645, -1000, -1000, -1000, -1000, 1075, 33060, -1000, 1974, 1242,
	2475, 440, 438, 435, 1242, 348, -1000, 1357, 1357, 1357,
	1357, 1242, 321, 474, 2490, 2490, -32, 1357, -51, 1242,
	1242, -51, 1242, 1242, 1242, 126, -303, -1000, -1000, -1000,
	1357, 1357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2452,
	2450, 509, 33060, 97, 33060, 509, 509, 513, 1436, 429,
	428, 1079, 1377, -1000, 1291, 33060, 33060, 33060, 33060, 1291,
	1291, 17242, 16715, -1000, 33060, -1000, 2490, 1966, -1000, 1909,
	2570, 1904, 1966, 509, 509, 509, 509, 509, 509, 509,
	509, 33060, 33060, 30425, 509, 6656, 6656, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9839, 1759, 1747, 139,
	-79, -313, 180, -1000, -1000, 33060, 2371, 152, -1000, -1000,
	-1000, 1933, -1000, 1973, 1973, 1973, 1973, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2021, 2050, -1000, -1000,
	1965, 1965, 1965, 1933, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1999,
	1999, 2009, 1999, 33060, 7720, 33060, 2396, 328, 2049, -1000,
	33060, 304, 2490, 2391, 2490, -1000, -1000, 1195, 1605, 1753,
	-1000, -1000, 327, 1236, -1000, 762, -1000, -1000, -1000, -1000,
	33060, -105, 282, -1000, -1000, 1751, 2043, -1000, 450, 815,
	1165, -1000, 116, 34555, 26201, 1436, 26201, 33060, -1000, -1000,
	-1000, -1000, -1000, -1000, -42, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 156, -1000,
	7720, 7720, 7720, 7720, 7720, -1000, 505, 8247, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9301, 9301, 9301, 9301, 9301,
	9301, 9301, 9301, 9301, 9301, 9301, 9301, 2029, 1383, 9301,
	9301, 9301, 9301, 2570, 2586, 1078, 216, -1000, -1000, -1000,
	-1000, -1000, 1352, 1435, 7720, 7720, 33060, -1000, 33894, 7720,
	7720, 33724, 7720, 2438, 7720, 7720, 7720, 1902, 4020, 33060,
	7720, -1000, 1901, 1900, -1000, -1000, 1439, 7720, -1000, -1000,
	7720, -1000, -1000, 7720, 9301, 7720, -1000, -1000, -1000, 145,
	2438, 2438, 7720, 7720, 2438, 2438, 2438, 1335, 2438, 2438,
	2438, 2438, 2438, 2438, 2438, 2438, 1899, 1890, 1889, 2490,
	-250, 6129, -1000, -259, 2391, 7720, -1000, -1000, 7720, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1739, -87, 713,
	683, 697, -1000, 2429, -1000, 2042, 2038, 1194, 33060, 1371,
	33060, 26201, 33060, 1436, 33060, 33060, 507, 507, 507, 33060,
	513, -1000, 33060, 1075, 2428, 33060, 2565, 9301, 9301, 29898,
	1357, 1242, 1242, -1000, -1000, 33060, -1000, -1000, -1000, 1357,
	33060, 1357, 1357, 2565, 1357, -1000, -1000, -1000, 1242, 1242,
	-1000, -1000, -1000, -1000, 1357, 1357, -1000, -1000, 2565, 33060,
	-44, 2565, 2565, -59, -1000, -1000, -1000, 33060, 33060, 507,
	33060, -1000, 33060, 33060, -1000, -1000, 33060, 34168, 33060, 29371,
	2448, -1000, 26201, 33060, 24093, -1000, -1000, 432, 433, 15661,
	381, 26201, 4547, -1000, -1000, 1291, 1291, 1291, 1291, 4547,
	4547, 1177, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1066,
	-1000, 146, 2391, -1000, -1000, -1000, -1000, -1000, 33060, 33060,
	26201, 1436, 33060, 33060, 33060, 33060, -1000, 2037, -1000, 2401,
	33060, 1089, -1000, -1000, 12496, 1192, 1089, -1000, 1368, -1000,
	7720, 9839, -282, 7720, 9839, 9839, 7720, 9839, -1000, 7720,
	147, -1000, -1000, -1000, -1000, 1599, -1000, 1597, -1000, -1000,
	-1000, 1736, 1736, -1000, 1596, -1000, -1000, -1000, -1000, 1593,
	-1000, -1000, 1592, -1000, -1000, 1887, 755, -1000, 1734, 2246,
	-251, -1000, 14606, 33060, 33060, -1000, -1000, -251, -1000, 14078,
	33060, 2391, -1000, 2391, 33060, -1000, 2470, -1000, 327, 235,
	-1000, -1000, -1000, -1000, -1000, -1000, 1191, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1065, -1000, 33060, -1000,
	-1000, 116, 26201, 27255, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 175, -1000, -1000, 161, -1000, 519, 103, 1230, -1000,
	-1000, 100, 155, 526, 1435, -1000, 1384, 1384, 1385, -1000,
	529, -1000, -1000, -1000, -1000, 2031, -1000, -1000, -1000, 1433,
	2259, -1000, 1262, 1262, 1216, 1216, 1216, 1216, 1216, 1455,
	1455, -1000, -1000, -1000, 5075, 2029, 9301, 9301, 9301, 9301,
	490, 490, 2997, 3015, -1000, 7720, 1364, -1000, 7720, 2081,
	1071, 1190, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1885, 1875, 1769, 2592, 1874, 7720, -1000, -1000,
	1223, 1219, 1185, -1000, 1857, 7193, -1000, -1000, -1000, 1871,
	1182, 1863, -1000, -1000, -1000, 1862, 1175, 913, 1861, 1413,
	1858, 1062, 7720, 7720, 1174, 1173, 7720, 7720, 7720, 7720,
	1855, 7720, 7720, 7720, 7720, 7720, 7720, 7720, 7720, 9,
	9, 9, -1000, -1000, 1168, -1000, 1435, -1000, 1731, -1000,
	952, 1056, -1000, 1673, -1000, -1000, -1000, -1000, 704, 675,
	708, 33060, 796, 10915, 33060, 1974, 2400, 125, -1000, 870,
	-1000, 103, -126, 783, 2214, 2590, 33060, 33060, 33060, 2427,
	28844, -1000, 2028, 1162, -1000, -1000, 7720, -1000, -1000, 2041,
	33060, 33060, 2565, 2565, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33060, 2565, 2565, 1242, 1357, -1000, -1000, 1357, -1000,
	-1000, 1357, -1000, 1171, -1000, 33060, -1000, -1000, -1000, 1974,
	1052, -1000, 11442, 13550, 523, -1000, 518, 1297, 1297, 975,
	1297, 1297, 1297, 1297, 392, 386, 1297, 1297, 1297, 1297,
	1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297,
	2027, -1000, 106, 2446, 229, 223, 870, 231, 2653, 1072,
	-1000, -1000, -1000, -1000, 19350, 19350, 15134, 19350, -1000, 1249,
	-1000, -1000, 517, -1000, -1000, 783, -1000, -1000, -1000, 2026,
	1331, -1000, -1000, 3204, -1000, 4547, 4547, 4547, 4547, -1000,
	-1000, 19877, 33060, -1000, -118, -1000, -93, -1000, 1018, -1000,
	-1000, 1044, 783, 2236, 1018, 1018, -1000, 10915, 33060, -1000,
	2565, 6656, -1000, 24093, -1000, -1000, 28309, -1000, 27782, 2565,
	1344, -1000, 9839, 1725, 135, -1000, 168, -315, 134, 1697,
	133, 1435, -1000, -1000, 1854, 1851, 1130, -1000, 1128, 1850,
	1115, 1108, -1000, -63, -1000, 2376, 788, -1000, 2025, -1000,
	1098, 2316, -1000, 1008, -1000, 1325, 1092, -1000, 788, 1088,
	2307, 1008, -1000, -1000, 1157, 54, -1000, -1000, 33060, 1751,
	1084, 27255, 901, -1000, 510, 1156, 1147, -1000, 26201, 164,
	26201, -1000, 26201, -1000, -1000, 299, -1000, 33060, 2381, -1000,
	-1000, -1000, 1674, -331, -1000, -1000, -1000, -1000, -1000, 1083,
	-1000, 490, 490, 2997, 2325, -1000, 9301, -1000, 9301, 2574,
	1343, -1000, 7720, 1702, 2914, 861, 18823, 33060, -1000, -1000,
	7720, 7720, -1000, 2567, -1000, -1000, -1000, -1000, 7720, 7720,
	1476, -1000, 33060, -1000, -1000, -1000, -1000, 18823, -1000, 9301,
	-1000, 7720, 1030, 2559, 9, 9, 2516, 2479, 2441, 1074,
	9, 2420, 2414, 2373, 2338, 2267, 2255, 2248, 2213, -1000,
	2023, -1000, -1000, 6129, -1000, -63, 7720, 7720, 7720, 2328,
	-1000, -1000, -1000, -1000, -1000, 662, 149, 1848, 940, -1000,
	-1000, 33060, -1000, -1000, -1000, 1846, 930, -1000, -1000, -1000,
	3632, 1973, 1973, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2021, -1000, -1000, 1965, 1965, 1965, 1933, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1999, 1999,
	2009, 1999, -1000, 2422, -1000, -10, 1297, 455, 26201, 411,
	-1000, 33060, 2231, 251, 2336, 33060, 1998, 1996, 1992, 283,
	3632, 33060, 867, -1000, 1134, 34005, -1000, 33060, 1435, -1000,
	1436, -1000, 1242, -1000, -1000, 2565, 1140, -1000, -1000, 2565,
	1242, 1242, 1357, 33060, -1000, 2406, 34168, -1000, 2331, 33060,
	-1000, -1000, 3632, 588, -1000, 657, 507, 33060, 1409, 657,
	1404, 1979, -1000, -1000, -1000, 33060, 33060, -1000, 33060, 1401,
	1399, -1000, 33060, 33060, 1578, -1000, 1577, 1297, 1297, 1570,
	1728, 1727, 1724, 1297, 1297, 1568, 1714, 26728, 1567, 1560,
	1532, 1602, 1712, 661, 1601, 1594, 1564, 33060, 1978, 1645,
	-10, 1297, 221, 33060, 1323, 455, 1610, 16188, 33060, 24093,
	24093, 24093, 24093, -1000, 2272, 2269, -1000, 2298, 2285, 2313,
	33060, 24093, 1974, -1000, 26728, -1000, -1000, -1000, 2570, 1070,
	2542, 691, 7720, 26201, 1695, 381, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33060, 33060, 1845, -1000, 2563,
	-1000, 912, -1000, -1000, 1133, -1000, 2563, 1356, -312, 9839,
	1347, 1336, -1000, 7720, 9839, 7720, -284, 208, -286, -1000,
	-1000, -1000, 1690, -1000, -1000, -1000, 1531, -1000, 1526, 22,
	36, 1397, -251, 6129, 298, 33060, -251, 33060, 6129, -1000,
	33060, 297, -251, 33060, 1516, -1000, -1000, -1000, 2571, 26201,
	1436, 1225, 25674, -1000, 169, -1000, 173, 426, 1689, -1000,
	533, 93, -1000, 1309, 1674, -1000, -1000, -1000, 9301, -1000,
	-1000, -1000, -1000, 1435, 7720, 1832, -1000, 682, 682, 1830,
	-1000, 1973, 1973, -1000, 1933, 1965, 1933, 682, 682, 1822,
	-1000, 1791, 2183, -1000, 2179, 2095, 7720, -1000, 1821, 2623,
	943, -139, 9, -1000, -1000, -1000, 9, 9, 9, 9,
	-1000, 9, 9, 9, 9, 9, 9, 9, 9, 470,
	-1000, 22, 1435, 1435, -1000, -1000, 2380, -1000, 1687, 1686,
	796, 3632, 545, 10915, 2351, 302, 1611, -1000, -1000, 25147,
	445, -1000, -1000, -1000, 508, 171, 1515, 419, -1000, 33060,
	231, 33060, -1000, -1000, -1000, -1000, -1000, 2336, -1000, 739,
	269, 11969, 11969, 11969, 273, 1327, -1000, 468, 1041, 1095,
	24093, 33060, -1000, 23566, 1820, -1000, 783, 2565, -1000, 33060,
	-1000, 2565, 2565, 1242, -1000, 302, -1000, -1000, -1000, 33060,
	2331, 34530, -1000, 33060, -1000, 33060, -1000, 33060, 33060, 507,
	7720, -1000, -1000, -1000, 33060, -1000, 262, -1000, -1000, -1000,
	-1000, 18823, 18823, -1000, -1000, -1000, -1000, 1684, 1683, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 391, 33060, 1069, -1000, 1306, 1611, 25147, 1304, 1291,
	1682, 445, -1000, 1679, -1000, 837, 33060, 33060, -1000, 978,
	-1000, 1299, 2203, 2226, 2203, -1000, -1000, -1000, -1000, 2268,
	-1000, 2225, -1000, -1000, 978, -1000, -1000, -1000, -1000, -1000,
	691, -1000, 2463, 657, 657, 657, 1818, 901, 1813, -1000,
	-1000, -1000, -1000, -1000, 2551, 2546, 24620, 2551, -1000, -312,
	1338, -1000, 1631, 131, 1561, 33060, -1000, -1000, -1000, 1809,
	1807, -261, 46, 2544, 2530, 2611, -1000, 1801, 882, -251,
	-1000, -1000, 788, -1000, -1000, -1000, -251, -1000, 788, -1000,
	-1000, 1436, -1000, 163, -1000, -1000, -1000, -1000, -1000, -1000,
	67, -1000, 33060, -1000, 1674, 1672, 88, -1000, 1435, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7720, -1000, -1000, -1000, 2087, -1000,
	-1000, 7720, 1796, 1662, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2549, -1000, 2527,
	-261, -1000, -1000, -1000, -1000, -1000, -1000, 3632, -1000, 1295,
	-1000, -1000, 1657, 81, -1000, -1000, -1000, 1655, 1647, 1513,
	-1000, -1000, 1558, 1186, 112, -1000, -1000, -1000, -1000, -1000,
	-1000, 1610, 1958, -1000, 1297, 1297, 1297, 33060, 1774, 873,
	-1000, -1000, -1000, -1000, 1756, 1752, 483, 1274, 1272, -1000,
	1511, 19350, 24093, 23566, 903, -1000, 1091, -1000, -1000, -1000,
	2565, -1000, -1000, 2565, -1000, -1000, -1000, -1000, 34530, -1000,
	-1000, 1417, 9301, -1000, -1000, 1646, 18296, 611, 647, 1957,
	-1000, 355, 2607, -1000, 1394, 1393, -1000, 33060, -1000, 1954,
	-1000, 1953, 1995, 303, 1952, 1950, 33060, 2066, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 422, 1063, -1000,
	1645, 1641, -1000, 81, 1637, 4547, -1000, -1000, -1000, 33060,
	837, 837, 2549, 33060, 6129, -1000, -1000, 7720, 1948, -1000,
	7720, -1000, -1000, -1000, -1000, -1000, 1945, 2318, -1000, -1000,
	-1000, -1000, -1000, -1000, 7720, 7720, -1000, -1000, 506, 9839,
	-291, 192, -1000, -1000, -1000, -263, 1633, -1000, -1000, 2525,
	1632, 1618, 33060, -1000, 788, 788, 783, -1000, -1000, -59,
	-1000, -1000, -1000, 2039, -1000, 1993, 9, -1000, 132, 7720,
	-263, -190, -1000, -1000, -1000, -1000, 270, -1000, -1000, 237,
	-1000, -1000, 1485, 469, -1000, -1000, 22512, 18823, 18296, 1629,
	-1000, 34419, 11969, 156, 34419, 731, 1271, -1000, 1507, -1000,
	1506, -1000, 2565, 903, 1091, -1000, -1000, 1199, -1000, -1000,
	-1000, -1000, 2997, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1494, 1941, -76, -1000,
	-1000, 1939, 22512, 22512, 293, 293, 22512, 22512, 1934, 543,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2490,
	-1000, -1000, 1435, 33060, 1435, 23039, -1000, 2524, 2522, 1435,
	755, -1000, -312, 33060, 33060, -266, 1472, -1000, 1628, 37,
	-1000, -1000, 758, -268, 21, 42, -1000, -1000, -1000, 1678,
	-1000, 452, -1000, -1000, -1000, 755, -266, 33060, 412, 1626,
	-1000, -1000, 236, -1000, -1000, 1053, -1000, 1933, 7720, -1000,
	-1000, -1000, 462, 34275, -1000, -1000, -1000, -59, 462, 423,
	225, -1000, 1469, -1000, -1000, 2549, -1000, 1636, 7720, 1931,
	-170, 22512, 1048, 1045, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1024, 1016, 22512, -1000, -1000, -1000, 351, -1000, 1010,
	973, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1927, -1000,
	-1000, 2521, -1000, 1622, 511, 25, 42, -1000, 2520, 30,
	2512, 2511, -1000, -1000, 698, -252, 2, 0, -6, -1000,
	-1000, -1000, 7720, -1000, 2405, -1000, -1000, 65, -1000, -1000,
	-1000, 22512, 2390, 1937, 305, 2509, 34419, -1000, -1000, 305,
	-1000, 275, -1000, 1269, -1000, 1464, -1000, 2490, -1000, 1869,
	-1000, 2224, -1000, 113, 971, -1000, -1000, -1000, -1000, 965,
	-1000, -1000, -1000, 21985, 33060, 1618, -1000, 1924, 1444, 46,
	27, 2508, -1000, 1618, 2506, 1618, 1618, 1379, -1000, 6,
	4, -3, -1000, -1000, -1000, -1000, 1621, -1000, 228, -1000,
	-1000, 2390, -1000, 2504, 385, -1000, -1000, -1000, -1000, 1442,
	-1000, -1000, 543, -1000, 2223, 1940, 2599, -1000, -1000, -1000,
	-1000, 228, 228, 228, 228, 185, -1000, -1000, 961, -1000,
	-1000, 2444, 17769, 14, -1000, -1000, -1000, 1620, -1000, 1618,
	-1000, -1000, 698, -1000, -1000, -1000, -1000, -1000, 1297, 1617,
	261, -1000, -1000, -1000, 21458, 326, 331, 316, -1000, 494,
	-1000, -1000, -1000, -1000, 2606, -1000, 2568, 652, 652, -1000,
	-1000, 33060, -1000, 33060, -1000, 959, -1000, -1000, -1000, 1081,
	-1000, -1000, -1000, -1000, -1000, 1441, -1000, 33060, -1000, 33060,
	324, 1438, 9301, 1919, 9301, 1917, 336, 1916, -1000, -1000,
	-1000, 1465, 359, -1000, -1000, 736, -1000, 1293, -1000, 20931,
	33060, -1000, -1000, 950, 1911, 2503, -1000, 2433, 33060, 2276,
	33060, 1868, 1270, 9301, -1000, -1000, -1000, 33060, 5602, -1000,
	797, -1000, -1000, 460, 333, -1000, 931, -1000, 915, 20404,
	1434, 1653, -1000, -1000, 1435, 33060, 914, -1000, 33060, 301,
	-1000, -1000, -1000, 883, -1000, -1000, -1000, -1000, 460, 2266,
	-1000, 1426, -1000, -1000, 34217, 580, -1000, -1000, 34217, 308,
	-1000, 449, 1445, -1000, -1000, 878, -1000, 33060, 630, 7720,
	-1000, 308, 34419, -1000, 7720, 872, -1000, 34419, 835, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 141, 2656, 221, 151, 3219, 80, 217, 201, 199,
	215, 3217, 3216, 2364, 2356, 3214, 3213, 3212, 3210, 3208,
	3205, 3204, 3202, 3201, 3200, 3198, 3197, 3188, 3187, 3172,
	3170, 3162, 3161, 3156, 3147, 3132, 3131, 3130, 3128, 213,
	3109, 3108, 3107, 3106, 3105, 3104, 3091, 3089, 3081, 3080,
	3075, 3067, 3066, 3065, 3064, 3063, 3062, 3060, 3058, 3057,
	3056, 3055, 3053, 3052, 3050, 3047, 3033, 3029, 3028, 3027,
	194, 3026, 2355, 3024, 3023, 3022, 3020, 3019, 3018, 3016,
	216, 3015, 3013, 3010, 3009, 3006, 3003, 3002, 3001, 3000,
	2999, 214, 2997, 2991, 2989, 2988, 2987, 2986, 187, 2985,
	146, 169, 2984, 2983, 2981, 2980, 2979, 207, 190, 49,
	2973, 37, 2972, 196, 2970, 122, 2969, 117, 2966, 2965,
	2964, 2961, 2960, 2958, 2957, 2955, 2954, 2953, 2952, 2951,
	69, 2950, 95, 134, 161, 224, 2011, 223, 222, 160,
	144, 92, 2949, 2365, 2948, 143, 204, 128, 24, 2947,
	158, 2946, 130, 36, 25, 218, 115, 40, 129, 100,
	2945, 195, 78, 79, 2943, 2942, 220, 163, 2941, 99,
	2938, 2937, 2933, 2928, 185, 165, 2927, 2926, 104, 2925,
	2924, 90, 2923, 52, 168, 139, 166, 2920, 1239, 84,
	111, 140, 2918, 2917, 75, 2916, 2915, 2913, 2910, 149,
	2908, 2907, 112, 66, 2906, 2905, 2904, 47, 2903, 53,
	2902, 55, 2899, 2898, 2897, 2896, 54, 2895, 2892, 15,
	21, 23, 2889, 16, 2888, 142, 2887, 2886, 2885, 103,
	2883, 4, 2882, 197, 93, 77, 119, 2881, 369, 2879,
	2877, 2876, 123, 2872, 402, 2871, 2870, 2868, 2867, 2866,
	87, 2863, 193, 38, 2861, 73, 113, 135, 170, 174,
	2860, 2859, 2858, 96, 89, 88, 0, 2857, 126, 2856,
	2855, 2854, 230, 2852, 205, 198, 136, 182, 250, 228,
	2850, 2848, 70, 2847, 132, 72, 42, 110, 8, 18,
	184, 2846, 326, 155, 2844, 167, 2843, 145, 1, 120,
	2842, 2841, 35, 225, 2840, 2839, 2838, 97, 2837, 2836,
	91, 101, 2834, 2833, 2831, 34, 2830, 28, 30, 2829,
	108, 2826, 219, 2824, 283, 125, 156, 148, 124, 202,
	203, 63, 62, 2822, 1359, 121, 74, 22, 2821, 200,
	2820, 133, 102, 2819, 64, 2818, 212, 335, 181, 2817,
	159, 10, 32, 26, 2815, 9, 2814, 171, 180, 2813,
	2810, 20, 41, 2809, 17, 2807, 2806, 2805, 2804, 7,
	2803, 2802, 2801, 5, 2, 2800, 3, 183, 2792, 2790,
	2783, 2781, 45, 106, 2780, 118, 153, 2778, 2777, 71,
	2776, 2775, 2774, 1553, 2772, 2771, 2770, 2769, 2768, 2767,
	2763, 2762, 2761, 2759, 76, 44, 2758, 2756, 2755, 2754,
	60, 114, 2740, 2737, 2736, 2735, 31, 154, 2734, 19,
	2731, 29, 27, 33, 2730, 105, 2729, 12, 157, 2728,
	2727, 14, 2726, 2725, 11, 13, 2724, 2723, 94, 2722,
	67, 43, 137, 85, 2720, 65, 192, 116, 2719, 2717,
	211, 209, 179, 2716, 131, 210, 227, 2715, 188, 2712,
	2704, 2703, 2701, 2700, 2699, 878, 2694, 2690, 208, 46,
	59, 83, 2689, 2687, 2686, 68, 138, 86, 82, 176,
	2685, 162, 2682, 2677, 81, 2676, 2671, 2670, 2664, 2663,
	164, 2649, 2642, 2640, 2637, 206, 235, 2631,
}

//line mysql_sql.y:9542
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 489, 493, 493, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 105, 487, 487, 487, 488, 488, 102, 122,
	121, 124, 124, 123, 123, 120, 120, 116, 119, 119,
	118, 118, 117, 112, 114, 114, 113, 115, 115, 103,
	91, 104, 437, 437, 436, 436, 435, 435, 390, 390,
	434, 434, 434, 433, 433, 433, 432, 432, 431, 431,
	430, 430, 428, 428, 429, 427, 426, 426, 426, 424,
	424, 424, 420, 420, 422, 421, 421, 423, 415, 415,
	418, 418, 416, 416, 416, 416, 419, 414, 414, 414,
	413, 413, 90, 90, 90, 336, 336, 89, 89, 350,
	350, 350, 350, 350, 348, 348, 348, 348, 348, 348,
	347, 347, 346, 346, 351, 351, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 81, 81, 81, 81,
	84, 84, 84, 85, 345, 345, 345, 82, 83, 83,
	335, 335, 340, 340, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 344, 344, 344,
	342, 342, 341, 341, 343, 343, 75, 75, 75, 78,
	77, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	76, 76, 76, 76, 76, 76, 71, 71, 71, 71,
	71, 70, 70, 72, 72, 332, 332, 331, 86, 86,
	87, 491, 491, 490, 492, 492, 492, 492, 88, 94,
	94, 94, 94, 94, 94, 94, 93, 93, 96, 96,
	95, 97, 80, 80, 80, 80, 80, 80, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 461, 461, 461,
	463, 463, 270, 271, 494, 273, 269, 269, 269, 457,
	457, 458, 459, 460, 460, 460, 92, 11, 11, 11,
	11, 11, 11, 69, 74, 224, 224, 225, 225, 225,
	225, 225, 225, 225, 229, 229, 229, 228, 226, 226,
	226, 226, 226, 226, 227, 230, 230, 67, 73, 73,
	73, 474, 474, 68, 481, 481, 393, 393, 284, 284,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 397, 398, 280, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 46, 45, 45,
	45, 321, 321, 44, 495, 495, 259, 259, 56, 55,
	48, 57, 58, 59, 60, 61, 62, 43, 54, 54,
	54, 54, 54, 54, 54, 54, 65, 65, 409, 409,
	497, 497, 497, 63, 64, 392, 392, 392, 53, 52,
	51, 50, 49, 49, 42, 42, 41, 41, 47, 128,
	129, 277, 277, 277, 279, 279, 275, 496, 496, 364,
	364, 278, 278, 40, 40, 40, 40, 66, 276, 276,
	258, 274, 274, 274, 12, 12, 10, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 23,
	24, 26, 329, 329, 326, 25, 18, 17, 20, 16,
	19, 21, 22, 22, 9, 9, 9, 9, 13, 13,
	14, 140, 140, 189, 189, 469, 469, 465, 465, 466,
	466, 466, 467, 467, 468, 468, 98, 403, 403, 403,
	403, 403, 403, 8, 162, 162, 402, 402, 402, 402,
	402, 402, 333, 333, 446, 446, 446, 447, 161, 161,
	156, 156, 404, 404, 299, 448, 448, 412, 412, 411,
	411, 410, 410, 159, 159, 160, 160, 143, 143, 108,
	108, 417, 417, 417, 417, 425, 425, 389, 389, 216,
	216, 253, 253, 254, 254, 133, 133, 134, 134, 134,
	134, 134, 134, 454, 454, 456, 456, 455, 158, 158,
	154, 154, 155, 155, 155, 153, 153, 152, 151, 151,
	150, 148, 148, 148, 149, 149, 149, 136, 136, 136,
	135, 135, 135, 135, 135, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 137, 137, 462,
	462, 462, 394, 394, 394, 400, 400, 235, 235, 236,
	236, 234, 234, 138, 138, 139, 139, 139, 139, 233,
	233, 232, 141, 141, 147, 146, 146, 142, 142, 142,
	142, 243, 243, 242, 242, 242, 242, 101, 106, 106,
	107, 165, 165, 241, 240, 240, 240, 164, 164, 163,
	163, 157, 157, 145, 145, 145, 145, 239, 144, 237,
	486, 486, 485, 485, 484, 482, 482, 482, 483, 483,
	483, 483, 439, 439, 439, 439, 439, 264, 264, 264,
	268, 268, 267, 267, 267, 267, 267, 272, 7, 7,
	7, 7, 7, 30, 30, 30, 30, 30, 30, 30,
	30, 36, 173, 174, 37, 175, 175, 176, 176, 177,
	177, 178, 179, 180, 180, 180, 180, 35, 166, 166,
	167, 167, 168, 168, 169, 170, 170, 170, 172, 171,
	34, 27, 470, 473, 471, 471, 475, 475, 475, 476,
	476, 476, 477, 477, 28, 125, 130, 130, 127, 132,
	132, 132, 132, 132, 126, 472, 478, 478, 478, 330,
	330, 327, 328, 328, 325, 324, 324, 324, 480, 480,
	479, 479, 479, 265, 265, 29, 320, 320, 322, 323,
	323, 323, 314, 314, 314, 314, 33, 318, 318, 319,
	319, 319, 319, 319, 315, 315, 317, 317, 313, 313,
	313, 313, 313, 32, 131, 131, 312, 312, 310, 310,
	308, 308, 309, 309, 307, 307, 307, 311, 311, 31,
	31, 31, 110, 109, 109, 109, 256, 256, 255, 255,
	111, 38, 201, 201, 378, 378, 378, 378, 378, 396,
	396, 396, 379, 379, 379, 380, 380, 380, 381, 381,
	381, 381, 381, 395, 395, 352, 352, 353, 353, 353,
	356, 356, 370, 370, 371, 371, 369, 369, 376, 376,
	375, 375, 374, 374, 373, 373, 372, 372, 372, 372,
	367, 367, 366, 366, 354, 354, 354, 354, 354, 355,
	355, 355, 365, 365, 368, 368, 207, 207, 208, 208,
	208, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	444, 444, 445, 210, 210, 210, 214, 214, 214, 214,
	214, 214, 209, 209, 211, 211, 190, 190, 188, 188,
	181, 181, 182, 182, 183, 183, 183, 187, 187, 186,
	186, 184, 184, 185, 185, 185, 185, 338, 338, 442,
	442, 443, 443, 438, 438, 438, 441, 441, 441, 441,
	441, 440, 440, 191, 251, 251, 251, 266, 266, 266,
	266, 250, 250, 250, 206, 206, 205, 205, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 337, 337, 281, 281, 282, 282, 223,
	222, 222, 222, 222, 222, 220, 221, 219, 219, 219,
	219, 219, 218, 218, 217, 217, 217, 316, 316, 215,
	215, 213, 213, 213, 212, 212, 212, 377, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 249, 249, 249, 291, 291, 296, 296, 453,
	453, 452, 192, 192, 192, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 202, 202, 202, 361, 361, 361,
	361, 362, 362, 362, 362, 363, 363, 363, 359, 359,
	360, 360, 300, 301, 301, 401, 401, 357, 357, 358,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 408, 408, 408,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 464, 464, 464, 449,
	449, 449, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 247, 247, 247, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 302,
	302, 303, 303, 405, 405, 405, 405, 405, 405, 406,
	406, 407, 407, 407, 407, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 289, 244, 244, 244, 304, 297,
	297, 298, 298, 292, 292, 292, 292, 292, 292, 292,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 293, 293, 295, 295, 306, 306, 306, 305,
	305, 305, 305, 305, 305, 305, 204, 204, 204, 204,
	286, 286, 286, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 194, 194, 194, 194, 198, 198,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 199, 199, 199, 199, 197, 197,
	197, 197, 197, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 99,
	100, 100, 196, 252, 252, 382, 382, 385, 385, 383,
	383, 384, 386, 386, 386, 387, 387, 387, 388, 388,
	388, 391, 391, 257, 257, 257, 263, 263, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 1, 2, 3,
	4, 7, 2, 3, 3, 4, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 7, 4, 1, 3, 2, 2, 2,
	1, 3, 3, 4, 0, 1, 2, 1, 2, 2,
	1, 2, 3, 2, 3, 1, 1, 7, 7, 8,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 5,
	3, 3, 2, 4, 4, 4, 4, 4, 1, 1,
	1, 3, 3, 1, 1, 1, 6, 8, 0, 1,
	1, 1, 1, 5, 5, 0, 1, 1, 3, 3,
	3, 4, 6, 7, 4, 4, 7, 8, 3, 3,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 4, 3, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 6, 3, 5, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 1, 3, 2, 1, 5, 4,
	4, 2, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	7, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 8, 0, 2, 6, 0,
	2, 2, 3, 3, 4, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 6, 0, 4, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 11,
	9, 11, 2, 2, 4, 5, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 3, 2, 4, 3, 0,
	2, 1, 0, 2, 3, 0, 2, 3, 0, 3,
	2, 4, 3, 0, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 7,
	7, 2, 1, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 1, 4, 4, 4, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 1, 6,
	8, 6, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 4, 4, 4,
	3, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 2,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -489, -493, -2, -5, 555, -1, -4, -100, -75,
	-7, -102, -103, -8, -98, -9, -10, -12, -79, -93,
	-95, -97, -96, -39, -11, -92, -70, -71, -81, -86,
	-89, -90, -91, -104, -99, -101, -133, -105, 548, -76,
	-77, -78, -30, -29, -28, -27, -125, 554, 409, 12,
	458, -13, -14, -454, -15, 238, -269, -270, -271, -273,
	-494, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -128, -129, -66, -68,
	-67, -73, -69, -74, -127, 213, -72, 62, -82, -83,
	-84, -85, -87, -88, 340, 346, 399, 547, 47, -134,
	-136, 558, 141, 142, 144, 145, -31, -32, -33, -34,
	-35, -36, -38, -37, 209, 14, 491, -16, -19, -17,
	-20, -18, -25, -26, -24, -21, -23, -126, -22, 233,
	232, 37, 296, 297, 298, 344, 231, 210, 13, 30,
	41, 322, -135, 68, 211, -137, 10, 560, -6, -3,
	-2, -112, -116, -120, -123, -124, -121, -122, -4, -100,
	99, 223, 549, -266, 336, 550, 552, 551, 71, 79,
	-260, -262, 340, 346, 547, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 461, 534, 535, 536, 537, 320, 321, 488, 250,
	274, 370, 277, 284, 141, 160, 154, 182, 174, 149,
	254, 289, 255, 78, 144, 444, 89, 421, 396, 147,
	269, 271, 273, 276, 256, 323, 170, 165, 268, 252,
	163, 257, 39, 258, 187, 259, 260, 493, 417, 319,
	423, 281, 394, 164, 418, 272, 420, 189, 193, 435,
	436, 158, 159, 425, 438, 186, 230, 42, 490, 242,
	439, 191, 185, 181, 447, 285, 283, 184, 157, 180,
	253, 51, 195, 194, 196, 390, 391, 392, 393, 261,
	262, 334, 434, 177, 166, 324, 150, 22, 442, 237,
	422, 347, 263, 278, 286, 190, 192, 244, 249, 492,
	398, 248, 282, 440, 162, 241, 270, 236, 443, 151,
	349, 264, 145, 275, 437, 446, 50, 362, 156, 148,
	227, 142, 246, 251, 11, 265, 266, 267, 288, 287,
	279, 178, 243, 183, 168, 155, 179, 143, 245, 445,
	363, 545, 322, 379, 176, 173, 247, 220, 441, 424,
	146, 383, 364, 171, 290, 541, 542, 543, 335, 318,
	291, 292, 169, 234, 415, 416, 293, 295, 389, 311,
	365, 397, 371, 366, 202, 299, 427, 429, 188, 544,
	300, 301, 302, 419, 303, 304, 305, 306, 339, -343,
	-341, -266, 547, 346, 340, 322, -175, -266, 559, -143,
	38, -188, -266, -143, -72, -14, -13, -135, -136, -188,
	217, -274, 23, 394, -80, 395, 213, 68, -266, -9,
	-91, -8, -98, -70, -133, 399, -272, -266, 296, 296,
	-272, 217, -266, 248, 378, -393, 223, -347, -320, 249,
	-346, -322, -349, -323, 31, 209, 211, 210, 245, 14,
	344, 219, 12, 10, 345, 231, 24, 25, 27, 13,
	346, 348, 28, 349, 352, 353, 354, 41, 357, 358,
	238, 71, 79, 74, 256, -174, -266, -298, -292, 96,
	239, -294, -287, -288, -290, -434, -428, -285, 68, 123,
	124, 131, 97, -289, -377, 35, 99, 498, 459, -245,
	-246, -247, -248, -249, -266, -429, -427, 74, 80, 83,
	86, 87, 85, 84, 167, 82, 75, 135, 136, -136,
	71, -449, 506, -261, 527, 534, 535, 536, 537, 526,
	47, -399, -407, 216, -405, 134, 172, 234, 168, 12,
	129, 389, 169, 503, 523, 461, 507, 530, 500, 501,
	495, 496, 497, 499, 508, 510, 522, -408, 518, 528,
	529, 516, 531, 532, 533, 73, 72, 521, 520, 509,
	504, 505, 511, 494, 502, 512, 513, 519, 524, 525,
	328, 89, 329, 330, 451, 323, 331, 223, 394, 56,
	332, 333, 334, 335, 336, 458, 337, 57, 338, 327,
	238, 379, 339, 171, 188, 463, 462, 464, 455, 452,
	450, 453, 454, 456, 457, 514, 515, 517, -106, -107,
	539, -152, -153, -238, 19, 6, 7, 8, 9, -487,
	396, 492, 146, 143, -334, 146, 95, 151, 150, -334,
	299, 244, 341, 220, 320, 379, 303, 248, -314, -312,
	-395, 293, 289, 218, 228, 227, 90, 451, 216, 355,
	-465, -466, 206, 207, 208, -456, 484, -455, -266, 330,
	26, 217, 341, 244, 429, 427, 428, 430, 431, 432,
	433, -54, -409, -392, 424, 423, -278, 416, 422, 414,
	426, 417, 321, 305, 304, 209, 556, 485, -257, 365,
	397, 448, 449, 342, 398, 435, 437, 418, 89, 175,
	172, 220, 217, 320, 451, 379, 303, -465, 248, 378,
	40, -340, 389, -339, -341, 435, 436, 437, 447, 72,
	73, 434, -257, 89, 415, 415, -153, -238, -152, -134,
	-136, -101, -454, 218, 320, 379, 248, 219, 217, 220,
	451, 296, 341, 244, 303, -394, -462, 31, -400, 203,
	204, 205, 32, 33, -1, 103, 560, -292, -292, -6,
	561, -6, -292, -266, -266, 138, -194, -198, -195, -197,
	-196, -200, -199, 172, 173, 134, 176, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 30, 188, 234,
	168, 169, 170, 171, 189, 154, 174, 489, 197, 155,
	198, 156, 199, 157, 200, 158, 159, 201, 160, 163,
	164, 165, 162, 137, 68, 137, 74, -159, 240, -188,
	137, -159, -153, -152, -153, -188, -250, -266, 396, 106,
	-80, -80, 395, -457, -458, -459, -461, 213, 395, 394,
	137, 256, 15, -272, -272, 66, -188, -322, 248, -347,
	-320, 35, 65, 138, 221, 138, 65, 68, 342, 320,
	379, 343, 451, 217, 355, 220, 248, 356, 320, 379,
	217, 220, 451, 248, 320, 217, 220, 379, 248, 356,
	414, 415, 220, 26, 347, 350, 351, 415, -413, 447,
	138, 95, 92, 93, 94, -292, 113, -305, 106, 107,
	108, 109, 110, 111, 112, 120, 119, 130, 123, 124,
	125, 126, 127, 128, 129, 121, 122, 116, 96, 114,
	118, 115, 98, -136, -292, -298, 47, -290, -290, -290,
	-290, -377, -296, -292, 68, 68, 137, 74, -292, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, -406, 68, 68, -302, -303, 68, 68, -285, -250,
	68, 74, 74, 68, 68, 68, 74, -303, -303, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, -153,
	138, 68, -108, 38, -155, 21, -137, -136, 20, 31,
	32, 31, 32, 31, 32, 31, 32, 80, 440, 491,
	149, 150, 151, -173, -266, -175, -166, -266, -310, 223,
	-310, -310, -310, -310, 219, -310, 217, 217, 217, -310,
	-467, 153, 138, -456, -158, 68, -277, 114, 118, 23,
	246, 246, 246, -277, 283, -495, -496, 15, 116, -275,
	-496, -275, -275, -277, -497, 219, 425, 42, 247, 246,
	-154, -155, -154, 419, 415, -364, 420, 421, -279, -496,
	-278, -277, -277, -278, -277, -277, -277, 217, 220, 451,
	303, 557, -495, -495, 30, 30, -393, -188, -393, 485,
	-258, -266, -393, -393, -468, 222, -322, 248, 248, 138,
	106, 23, -342, 106, 117, -341, -341, -341, -341, -342,
	-342, -209, 40, -265, 134, -266, 74, -209, 40, -491,
	-490, -188, -154, -137, -136, 69, 69, 69, -393, -393,
	-393, -393, -393, -393, -393, -393, -272, -166, -175, 223,
	-393, -138, -139, 125, -292, -266, -138, -3, -114, -113,
	100, 101, 103, 550, 336, 549, 553, 547, -341, 40,
	-388, 363, 362, -382, -384, 68, -383, 68, -383, -383,
	-383, 68, 68, -385, 68, -385, -385, -382, -386, 68,
	-386, -387, 68, -386, -266, -297, -298, -266, 38, -402,
	47, -133, 68, 30, 68, -266, -403, 47, -133, 68,
	30, -154, -108, -155, 137, 80, 74, -80, 69, 138,
	-460, 86, 87, -463, 186, 178, -266, -94, 74, -7,
	-8, -9, -10, -39, -70, -133, -430, -428, 68, 31,
	388, 65, 15, -348, 217, 451, 341, 244, 220, 320,
	-346, -329, -326, -324, -265, -322, -325, -324, -351, -250,
	415, -109, 400, 295, -292, -292, -292, -292, -292, 85,
	96, 318, 86, 87, -287, -306, 31, 291, 292, -288,
	-288, -288, -288, -288, -288, -288, -288, -288, -288, -288,
	-288, -295, -304, -377, 68, 116, 114, 118, 115, 98,
	-290, -290, -288, -288, 69, 138, -453, -452, 100, -292,
	-292, -266, -450, -451, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 332, 327, 333, 331, 323,
	339, 334, 335, 171, 482, 483, 476, 477, 478, 479,
	480, 481, -297, -297, -292, -450, -297, -244, 32, 31,
	-298, -298, -298, 69, -292, -464, 316, 315, 317, -156,
	-266, -297, 69, 69, 69, 80, -298, -298, -297, -288,
	-297, -451, -244, -244, -298, -298, -244, -244, -244, -244,
	125, -244, -244, -244, -244, -244, -244, -244, -244, 69,
	69, 69, -154, -107, -411, -410, -292, 40, 540, -108,
	-292, -151, -150, -292, -488, 74, 441, 442, 147, 150,
	149, 34, 68, 68, 137, -188, 96, -470, -266, -330,
	-327, -324, -266, -320, -266, -266, -310, -310, -310, -188,
	-468, -455, 34, -157, -266, -234, 16, -290, -290, -324,
	248, -495, -277, -277, -259, -258, -279, -274, -279, -279,
	-234, -496, -277, -277, -279, -275, -234, -266, 415, -234,
	-234, -364, -276, -266, -276, -310, -258, -259, -259, -188,
	-224, -225, 214, 211, 210, -231, 212, 360, 250, -311,
	254, 78, 255, 396, 256, 219, 258, 259, 260, 230,
	261, 262, 263, 389, 264, 265, 266, 267, 343, 6,
	306, 40, -470, -470, 30, 30, -330, -266, -146, -141,
	-145, -142, -147, -237, -239, -144, 68, -188, -136, -266,
	31, 388, -345, 388, 31, -320, -339, -335, 74, 389,
	-325, -344, 65, 134, -410, -342, -342, -342, -342, -344,
	-344, 133, 138, -492, 440, 441, 206, -108, -190, -188,
	-470, -329, -320, -266, -190, -190, -266, 68, 35, -266,
	-233, 138, -232, 15, -267, -266, 34, 74, 137, -233,
	-115, -113, 102, -292, -6, 549, -292, -6, -6, -292,
	-6, -292, -391, 364, 80, 80, -252, 74, -252, 80,
	80, 80, 69, 74, -333, 65, -404, -299, -448, 539,
	-161, 69, -156, -446, -447, -156, -160, -266, -404, -161,
	69, -446, -108, -108, -266, 23, -80, -458, 137, 138,
	-157, -348, -328, -325, -350, 125, -266, -336, 138, 491,
	562, 72, 221, -480, -479, 380, 69, 138, -414, 222,
	458, 74, 563, 202, 85, 318, 86, 87, -377, -298,
	-295, -290, -290, -288, -288, -293, 235, -293, 95, -292,
	-291, -452, 102, -292, 34, 138, 66, 137, 69, 69,
	15, 15, 69, -292, 69, 69, 69, 69, 15, 15,
	-292, 69, 137, 69, 69, 69, 69, 66, 69, 138,
	69, 138, -298, -292, 69, 69, -292, -292, -292, -298,
	69, -292, -292, -292, -292, -292, -292, -292, -292, -358,
	410, -358, -358, 138, 69, 74, 138, 22, 138, -148,
	36, 37, 148, 151, 151, 150, -174, -176, -177, -178,
	-179, -180, 116, 139, 140, -167, -168, -169, -170, -194,
	-250, 173, 176, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 234, 168, 169, 170, 171, 189,
	154, 174, 155, 156, 157, 158, 159, 160, 163, 164,
	165, 162, -266, -158, 35, -473, 367, -481, 138, 40,
	-479, 451, -313, 66, -131, 15, -188, -188, -188, -201,
	34, 15, -140, -189, -266, 68, 69, 138, -292, -321,
	66, -266, -259, -234, -234, -188, -266, -234, -234, -277,
	-279, -279, -275, 137, -258, -158, 138, -187, -191, 225,
	-184, -186, -250, -282, -185, 228, -443, 226, 224, 90,
	229, 280, 91, 219, -226, 219, 91, -266, 225, 229,
	224, -227, 219, 221, -263, 106, -263, -257, 133, -263,
	-263, -263, -263, 257, 257, -263, -263, -263, -263, -263,
	-263, -263, -263, -263, -263, -263, -263, -263, -263, 68,
	-474, 367, 30, 326, 326, -481, -132, 320, 30, -240,
	-241, -242, -243, 54, 58, 60, 55, 56, 57, 61,
	30, 138, -264, -268, 34, -266, 74, -264, -136, -141,
	-146, -264, 68, 221, 68, 106, -344, -344, -344, -344,
	40, -265, -490, 447, 441, 138, 65, -167, -175, -234,
	-139, -141, -266, 74, -266, 125, -234, 103, -6, 101,
	-119, -118, -117, 104, 547, 553, 103, 103, 103, 69,
	69, 69, 138, 69, 69, 69, 138, 69, 138, -417,
	420, 39, 138, 68, 69, 138, 47, 138, 106, 69,
	138, 69, 47, 137, 396, -266, -428, 69, -350, 138,
	221, 137, 137, -326, 346, -265, -328, 20, 491, -250,
	38, -256, -255, 74, 563, 69, -293, -293, 95, -290,
	-287, 69, 103, -292, 101, -192, -194, 362, 363, -193,
	-199, 134, 172, 234, 171, 170, 168, 362, 363, -209,
	-266, -292, -292, 69, -292, -292, 15, -266, -209, -288,
	-292, -153, 69, -357, -358, -357, 69, 69, 69, 69,
	-357, 69, 69, 69, 69, 69, 69, 69, 69, 68,
	-410, -417, -292, -292, -150, -149, 43, 151, 354, 69,
	138, -250, 69, 138, -194, 34, -476, 422, 369, -263,
	-284, -283, 322, 41, -397, 389, 375, 376, -327, 248,
	-266, 65, 310, 311, 312, 313, -308, -309, -307, -311,
	-470, 68, 68, 68, -378, 300, -194, -188, -140, -266,
	15, 138, -469, 137, -1, -266, -320, -277, -234, -496,
	-234, -277, -277, -279, -266, 34, -225, -229, 44, 46,
	-191, -194, -185, -442, -443, -310, -266, 91, -442, 91,
	68, -266, -266, -266, 91, 91, -266, -228, -276, 80,
	80, -263, -263, 80, 74, 74, 74, -263, -263, 80,
	74, -268, 80, 80, 80, 80, 40, 74, -214, 40,
	268, 272, 269, 270, 271, 80, 40, 80, 40, 80,
	40, -266, 68, -444, -445, 74, -476, -263, 326, -341,
	106, -284, -130, 78, 31, -162, 214, 211, -470, -332,
	-331, -250, -145, -145, -145, -145, 54, 54, 54, 59,
	54, 59, 54, -242, -332, -147, -158, -268, 69, -486,
	-485, -484, -482, 62, 222, 63, -297, -328, -280, 74,
	-335, -188, -188, 69, -236, 17, 137, -236, 99, -6,
	-115, -117, -292, -6, -292, 549, 336, 550, 74, 80,
	80, -425, 406, 401, 403, 91, -299, -412, -411, 47,
	-133, -156, -404, -447, -410, -266, 47, -133, -404, -266,
	80, 15, -325, -320, 125, 125, -266, 347, -336, 74,
	368, 74, 217, 564, 138, 106, -256, -287, -292, 69,
	-202, 159, 158, -202, 69, -383, -383, -382, -385, -382,
	-202, -202, 69, 69, 23, 69, 69, 69, -292, 69,
	69, 138, -401, 460, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -301, -300, 240,
	-425, 44, 45, 74, 74, -178, -194, 215, -169, 40,
	-133, -477, 78, -471, 74, -266, -478, 78, 370, 136,
	324, 40, 371, 372, 386, 319, 80, 80, 377, -472,
	-266, -132, -188, -307, -257, 133, 259, 303, -181, -182,
	-183, -191, -184, -186, -181, -181, -379, 302, 20, 80,
	124, -159, 66, 137, -141, -189, -266, 125, 69, -234,
	-266, -234, -234, -277, -133, -250, -229, -206, -205, -203,
	85, 96, 40, 360, -204, 78, 133, 273, 251, 274,
	-223, -281, 65, 366, 224, 90, 91, 348, -282, -440,
	-266, -438, -440, -266, -438, -438, -310, -292, -266, -230,
	308, 309, -209, -209, 74, 74, -210, 251, -190, 69,
	138, 106, -477, -471, 106, -342, 74, -478, 74, 138,
	-162, -162, -234, 138, 106, -164, -163, 65, 66, -165,
	65, -163, 54, 54, -234, -484, -483, 23, -443, -443,
	-443, 69, 69, -235, 18, 20, 125, -235, 103, 101,
	103, 103, -266, 69, 69, -389, 541, -421, -423, 401,
	20, 20, 13, 69, -404, -404, -320, -336, 389, -188,
	-255, 74, 564, -292, 69, -292, 69, 74, -153, 20,
	-389, -171, -194, -285, 74, -475, 380, 74, 74, 80,
	40, 80, 136, 373, -398, -130, 68, -263, -263, -263,
	-266, 69, 138, 69, 69, -380, 239, 80, 124, 80,
	124, 80, -264, -141, -266, -234, -469, 137, -234, -234,
	-203, 85, -288, 74, -211, -265, 134, -212, 40, 272,
	268, -213, 40, 252, 253, -215, 68, 280, 13, 91,
	91, -188, 68, 68, 66, 290, 68, 68, -440, 69,
	252, 253, 69, -445, 74, -475, 74, -344, -470, -153,
	-331, -410, -292, 68, -292, 68, 54, 19, 17, -292,
	-298, 223, -6, 550, 336, -216, 542, 74, 20, 74,
	-419, 74, -332, -111, -415, -364, 69, 69, -357, -360,
	-359, -363, 407, 282, 413, -298, -216, 490, 20, 491,
	323, 40, 80, 40, 374, -315, -317, -250, 68, -209,
	-211, 74, -207, -208, -231, -183, -110, -109, -207, -381,
	142, 80, 124, 80, 80, -234, -234, 80, 68, -405,
	-316, 68, -315, -315, -441, 310, 311, 312, 314, 313,
	-441, -315, -315, 68, -338, -337, 281, 96, -154, -157,
	-439, -266, 224, 20, 20, -266, -266, -253, 543, 80,
	74, 403, -390, 544, -424, 406, -418, -416, 401, 402,
	403, 404, 69, -362, 98, 373, 377, -286, -289, 80,
	83, 167, 136, -253, -172, -266, 74, 368, 74, 323,
	69, 138, -382, -292, -352, 240, 138, -231, -111, -352,
	-396, 150, 301, 491, 80, 124, 80, -153, 69, -292,
	-302, -218, -217, 487, -315, 69, 69, 69, 69, -315,
	281, 69, 69, 138, 68, 20, 74, -426, 222, -422,
	-423, 405, -416, 20, 403, 20, 20, -361, -362, 377,
	-286, -289, 539, 411, 411, 411, 34, 389, -318, -317,
	-148, 69, -353, 289, 20, -231, -353, 301, 80, 124,
	80, -154, 69, -222, -220, -221, 65, 418, 278, 279,
	69, -318, -318, -318, -318, 69, -266, 224, -254, -266,
	-419, -433, 68, 80, -421, -420, -422, 20, -419, 20,
	-419, -419, 95, 412, 412, 412, 74, -319, 230, 78,
	491, 308, 309, -148, 20, -354, 282, 283, -355, -368,
	285, 80, -337, -221, 65, -220, 65, 14, 13, -223,
	69, 138, -437, 30, 69, -432, -431, -251, -427, -266,
	406, 407, 74, -419, -361, -263, 74, 307, -250, 68,
	-366, 286, 68, -364, 68, -364, 91, 311, -219, 275,
	276, 30, 150, -219, -266, -436, -435, -434, 69, 138,
	137, 80, -266, -351, -356, 287, 80, -288, 68, -288,
	68, -365, 284, 68, 85, 40, 277, 138, 106, -431,
	-266, 69, -370, 68, 20, 69, -351, 69, -351, 68,
	106, -288, -435, 40, -292, 137, -371, -369, 240, -355,
	69, 69, 69, -351, 80, 69, -266, 69, 138, -266,
	-367, 288, 69, -369, -372, 47, 80, -376, -373, 68,
	-231, 242, 116, -376, -231, -375, -374, 287, 243, 68,
	69, 138, -266, 239, 68, -298, -374, -373, -298, 69,
	69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 246,
	247, 248, 758, 759, 760, 761, 762, 0, 0, 0,
	0, 534, 535, 0, 506, 0, 0, 0, 0, 0,
	0, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 337,
	338, 339, 340, 341, 342, 0, 271, 267, 206, 207,
	208, 209, 278, 279, 376, 0, 0, 0, 0, 615,
	-2, 53, 260, 0, 251, 251, 763, 764, 765, 766,
	767, 768, 769, 770, -2, 547, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 326,
	327, 328, 322, 323, 325, 324, -2, 0, 547, 0,
	0, 0, 635, 0, 0, 650, 672, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1057, 1058,
	1059, 1060, -2, 1534, 1512, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 0,
	244, 242, 1512, 1534, 1594, 1627, 0, 775, 0, 593,
	0, 598, 1018, 593, 272, 536, 537, 635, 635, 504,
	0, 308, 0, 1525, 312, 0, 0, 0, 501, 302,
	303, 304, 305, 306, 307, 0, 0, 757, 0, 0,
	298, 0, 266, 1585, 0, 0, 0, 0, 0, 0,
	150, 846, 152, 848, 156, 163, 0, 0, 168, 169,
	172, 173, 174, 175, 176, 0, 180, 0, 182, 185,
	0, 187, 188, 0, 191, 192, 193, 0, 203, 204,
	205, 849, 850, 851, -2, 81, 773, 1449, 1341, 0,
	1348, 1349, 1360, 1371, 1130, 1131, 1132, 1133, 0, 0,
	0, 0, 0, 1140, 1141, 0, 1157, 1688, 0, 1147,
	1148, 1149, 1150, 1151, 90, 102, 103, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 0, 1314, 1117,
	1057, 0, 1696, 0, 1716, 1721, 1722, 1723, 1724, 1715,
	0, 0, 1299, 0, 1289, 0, 0, -2, -2, 0,
	0, 1653, -2, 1693, 1712, 1720, 1697, 1719, 1690, 1691,
	1685, 1686, 1687, 1689, 1698, 1700, 1711, 0, 1707, 1717,
	1718, 0, 0, 0, 0, 104, 105, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1305, -2, 1307, 1308, 1310, -2, 1312, 1313, -2, 1316,
	1317, 1318, -2, -2, 1321, 1322, 1323, 1324, 1325, 1326,
	1329, -2, -2, -2, -2, 1301, 1302, 1303, 1304, 1293,
	1294, 1295, 1296, 1297, 1298, -2, -2, -2, 635, 708,
	0, -2, 0, 0, 0, 655, 658, 661, 664, 0,
	54, 55, 261, 262, 250, 252, 0, 256, 0, 249,
	0, 0, 0, 878, 878, 878, 878, 878, 0, 878,
	0, 0, 0, 878, 853, 854, 855, 876, 877, 924,
	552, 548, 549, 550, 551, 623, 0, 625, 628, 481,
	428, 0, 0, 0, 481, 0, 442, 434, 0, 0,
	0, 481, 0, 0, 630, 630, 0, 484, 491, 481,
	481, -2, 481, 481, 481, 0, 0, 448, 449, 450,
	434, 434, 453, 454, 455, 466, 467, 492, 1473, 0,
	0, 376, 0, 376, 0, 376, 376, 554, 1585, 0,
	0, 217, 1653, 222, 0, 1532, 1533, 1599, 1548, 0,
	0, 1566, 0, -2, 0, 288, 630, 0, 636, 0,
	635, 0, 0, 376, 376, 376, 376, 376, 376, 376,
	376, 0, 0, 0, 376, 0, 0, 673, 674, 669,
	670, 671, 675, 676, 5, 6, 19, 0, 0, 0,
	0, 0, 0, 60, 59, 0, 1450, 1468, 1405, 1406,
	1407, 1455, 1409, 1459, 1459, 1459, 1459, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 0, 0, 1448, 1428,
	1457, 1457, 1457, 1455, 1452, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1462,
	1462, 1465, 1462, 0, 1339, 0, 0, 0, 0, 597,
	0, 0, 630, -2, 0, 505, 309, 1061, 0, 0,
	313, 314, 0, 0, 329, 0, 332, 317, 318, 319,
	0, 130, 0, 300, 301, 0, 0, 268, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 160, 157,
	164, 167, 177, 184, 0, 196, 198, 201, 158, 165,
	170, 171, 178, 199, 159, 161, 162, 166, 200, 202,
	179, 183, 197, 181, 186, 189, 190, 195, 0, 131,
	0, 0, 0, 0, 0, 1347, 0, 0, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1341, 0, 0, 1136, 1137, 1138,
	1139, 1142, 0, 1158, 0, 0, 0, 1403, 0, 1339,
	1339, 0, 1339, 1335, 0, 0, 0, 0, 0, 0,
	1339, 1275, 0, 0, 1277, 1290, 0, 0, 1279, 1280,
	0, 1283, 1284, 1339, 0, 1339, 1288, 1271, 1272, 0,
	1335, 1335, 0, 0, 1335, 1335, 1335, 1335, 1335, 1335,
	1335, 1335, 1335, 1335, 1335, 1335, 0, 0, 0, 630,
	0, 0, 618, 0, 599, 0, 652, 654, 0, 656,
	657, 659, 660, 662, 663, 665, 666, 56, 0, 0,
	254, 0, 259, 0, 772, 0, 0, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 878, 878, 878, 0,
	554, 553, 0, 624, 0, 0, 681, 0, 0, 0,
	434, 481, 481, 440, 441, 436, 435, 487, 488, 484,
	0, 484, 484, 681, 0, 460, 461, 462, 481, 481,
	468, 631, 469, 470, 484, 0, 489, 490, 681, 0,
	0, 681, 681, 0, 478, 479, 480, 0, 0, 878,
	0, 497, 436, 436, 1474, 1475, 0, 887, 0, 0,
	0, 500, 0, 0, 0, 555, 210, 0, 0, 0,
	0, 0, 0, 240, 241, 0, 0, 0, 0, 0,
	0, 231, 234, 1012, 1013, 843, 844, 235, 236, 280,
	281, 0, 599, 651, 653, 647, 648, 649, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 532, 0,
	0, 689, 683, 685, 752, 90, 689, 8, 77, 74,
	0, 19, 0, 0, 19, 19, 0, 19, 245, 0,
	1471, 1469, 1470, 1408, 1456, 0, 1433, 0, 1434, 1435,
	1436, 0, 0, 1429, 0, 1430, 1431, 1432, 1424, 0,
	1425, 1426, 0, 1427, 243, 0, 1340, 776, 0, 572,
	585, 567, 0, 574, 0, 1019, 556, 585, 558, 0,
	574, 599, 621, 599, 0, 310, 0, 315, 0, 0,
	331, 333, 334, 335, 320, 321, 502, 296, 297, 289,
	290, 291, 292, 293, 294, 295, 299, 100, 0, 269,
	270, 0, 0, 0, 144, 145, 146, 147, 148, 149,
	151, 135, 522, 524, 835, 847, 0, 838, 0, 154,
	194, 127, 0, 0, 1342, 1343, 1344, 1345, 1346, 1350,
	0, 1352, 1354, 1356, 1358, 0, 1376, -2, -2, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1361, 1374, 1375, 0, 0, 0, 0, 0, 0,
	1372, 1372, 1367, 0, 1134, 0, 1155, 1159, 0, 0,
	0, 91, 1334, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 0, 0, 1341, 0, 0, 0, 1336, 1337,
	0, 0, 0, 1230, 0, 0, 1236, 1237, 1238, 0,
	580, 0, 1300, 1276, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 709, 0, 589, 591, 592, 0, 619,
	632, 637, 638, 641, 52, 57, 263, 264, 0, 0,
	258, 0, -2, 790, 0, 628, 0, 0, 802, 374,
	829, 0, 0, 845, 868, 874, 0, 0, 0, 902,
	0, 626, 0, 0, 721, 427, 0, 482, 483, 431,
	1585, 436, 681, 681, 443, 437, 444, 486, 445, 446,
	447, 0, 681, 681, 481, 484, 471, 485, 484, 474,
	475, 0, 493, 498, 494, 0, 496, 451, 452, 628,
	344, 345, 0, 0, 0, 350, 0, 1476, 1476, 0,
	1476, 1476, 1476, 1476, 0, 0, 1476, 1476, 1476, 1476,
	1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476,
	0, 888, 371, 0, 0, 0, 374, 819, 694, 0,
	695, 696, 692, 723, 747, 747, 0, 747, 727, 1018,
	211, 212, 0, 214, 215, 216, 223, 218, 220, 0,
	0, 224, 237, 238, 239, 0, 0, 0, 0, 229,
	230, 0, 0, 283, 284, 286, 0, 617, 519, 1016,
	520, 521, 525, 0, 527, 528, 529, 790, 0, 824,
	681, 0, 690, 0, 686, 753, 0, 755, 0, 681,
	0, 75, 19, 0, 68, 65, 0, 0, 0, 0,
	0, 1451, 1404, 1472, 0, 0, 0, 1453, 0, 0,
	0, 0, 58, 601, 563, 0, 566, 582, 0, 586,
	0, 0, 578, 571, 575, 0, 0, 595, 557, 0,
	0, 562, 620, 622, 1062, 0, 316, 330, 0, 0,
	0, 0, 138, 832, 0, 139, 143, 133, 0, 0,
	0, 837, 0, 834, 839, 0, 153, 0, 0, 128,
	129, 893, 898, 0, 1351, 1353, 1355, 1357, 1359, 0,
	1362, 1372, 1372, 1368, 0, 1363, 0, 1365, 0, 1342,
	0, 1160, 0, 0, 0, 0, 0, 0, 1220, 1221,
	0, 0, 1225, 0, 1227, 1228, 1229, 1231, 0, 0,
	0, 1235, 0, 1274, 1292, 1278, 1281, 0, 1285, 0,
	1287, 0, 635, 0, 1197, 1197, 0, 0, 0, 0,
	1197, 0, 0, 0, 0, 0, 0, 0, 0, 1152,
	0, 1153, 1154, 0, 710, 601, 0, 0, 0, 644,
	642, 643, 265, 253, 255, 0, 0, 0, 778, 779,
	781, 0, 784, 785, 786, 0, 791, 792, 794, 795,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1517, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 789, 0, 879, 809, 1476, 378, 0, 0,
	831, 0, 0, 0, -2, 0, 0, 0, 0, 904,
	0, 0, 0, 541, 545, 23, 629, 0, 682, 429,
	0, 430, 481, 438, 439, 681, 1018, 463, 464, 681,
	481, 481, 484, 0, 495, 0, 887, 347, 354, 0,
	1027, 1028, 0, 0, 1032, 1039, 878, 1087, 0, 1039,
	0, 0, 1041, 1042, 348, 0, 0, 360, 0, 0,
	0, 349, 0, 0, 0, 1477, 0, 1476, 1476, 0,
	0, 0, 0, 1476, 1476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	809, 1476, 0, 0, 0, 378, 816, 0, 0, 0,
	0, 0, 0, 714, 0, 0, 713, 0, 0, 0,
	0, 0, 628, 748, 0, 750, 751, 725, -2, 0,
	694, 730, 1339, 0, 0, 0, 225, 226, 227, 228,
	232, 233, 282, 285, 287, 0, 0, 0, 533, 679,
	684, 691, 754, 756, 91, 687, 679, 0, 78, 19,
	77, 69, 70, 0, 19, 0, 0, 0, 0, 1461,
	1460, 1446, 0, 1447, 1458, 1463, 0, 1466, 0, 605,
	0, 0, 585, 587, 0, 0, 585, 0, 0, 594,
	0, 0, 585, 0, 0, 503, 101, 336, 0, 0,
	0, 0, 0, 523, 0, 836, 135, 0, 0, 155,
	0, 0, 896, 0, 898, 1338, 1364, 1366, 0, 1373,
	1369, 1135, 1143, 1156, 0, 0, 1162, 1174, 1174, 0,
	1165, 1459, 1459, 1168, 1455, 1457, 1455, 1174, 1174, 0,
	92, 0, 0, 1226, 0, 0, 0, 581, 0, 0,
	0, 1195, 1197, 1202, 1198, 1203, 1197, 1197, 1197, 1197,
	1208, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1193,
	590, 605, 633, 634, 639, 640, 0, 257, 0, 0,
	783, 0, 0, 0, 796, 0, 812, 810, 811, 0,
	826, 379, 380, 381, 382, 0, 0, 0, 830, 0,
	819, 0, 869, 870, 871, 872, 873, -2, 882, 0,
	0, 1020, 1020, 1020, 912, 0, 903, 593, 0, -2,
	0, 0, 543, 0, 0, 722, 432, 681, 456, 0,
	472, 681, 681, 481, 499, 0, 346, 352, 355, 0,
	354, -2, 1031, 1051, 1040, 1051, 1088, 1051, 1051, 878,
	0, 358, 359, 361, 0, 363, 0, 351, 357, 971,
	972, 0, 0, 975, 976, 977, 978, 0, 0, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 1006,
	1007, 1008, 1009, 1010, 1011, 991, 992, 993, 994, 995,
	996, 1003, 0, 0, 1000, 0, 812, 0, 0, 0,
	0, 826, 818, 0, 820, 821, 0, 0, 564, 681,
	275, 0, 717, 711, 0, 700, 715, 716, 703, 0,
	705, 0, 701, 702, 681, 693, 724, 749, 726, 729,
	731, 732, 738, 0, 0, 0, 0, 213, 0, 398,
	219, 1017, 526, 531, 677, 0, 0, 677, 73, 76,
	0, 71, 0, 0, 0, 0, 63, 61, 1454, 0,
	0, 607, 115, 0, 0, 0, 583, 0, 588, 585,
	570, 579, 569, 576, 577, 596, 585, 561, 560, 1063,
	311, 0, 833, 135, 140, 141, 142, 136, 134, 840,
	0, 842, 0, 894, 898, 0, 0, 1370, 1161, 1144,
	1163, 1175, 1176, 1164, 1145, 1166, 1167, 1169, 1170, 1171,
	1172, 1173, 1146, 1222, 0, 1224, 1232, 1233, 0, 1282,
	1286, 0, 0, 0, 1201, 1204, 1205, 1206, 1207, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 635, 1194, 0,
	607, 645, 646, 771, 774, 780, 782, 0, 793, 0,
	800, 801, 0, 0, 804, 805, 814, 0, 0, 0,
	384, 385, 0, 0, 0, 397, 393, 394, 395, 375,
	825, 816, 0, 883, 1476, 1476, 1476, 0, 0, 1021,
	1022, 1024, 1025, 1026, 0, 0, 915, 0, 0, 906,
	0, 747, 0, 0, 681, 542, 545, 546, 627, 433,
	681, 476, 473, 681, 343, 356, 353, 1053, -2, 1066,
	1068, 0, 0, 1071, 1072, 0, 0, 0, 0, 1109,
	1078, 0, 0, 1082, 0, 1388, 1389, 0, 1086, 0,
	1052, 0, 1043, 1052, 0, 0, 1051, 0, 362, 364,
	365, 366, 973, 974, 979, 980, 997, 0, 0, 999,
	0, 0, 367, 0, 0, 0, 368, 373, 817, 0,
	822, 823, 635, 0, 0, 697, 718, 0, 0, 698,
	0, 699, 704, 706, 274, 733, 0, 0, 735, 736,
	737, 728, 221, 667, 0, 0, 688, 668, 0, 19,
	0, 0, 66, 1464, 1467, 609, 0, 606, 116, 0,
	0, 0, 0, 584, 568, 559, 137, 132, 841, 118,
	897, 899, 895, 0, 1234, 0, 1197, 1196, 1190, 0,
	609, 0, 799, 797, 813, 803, 0, 827, 828, 0,
	386, 387, 0, 390, 396, 815, 0, 0, 0, 0,
	875, -2, 0, 0, -2, 918, 0, 913, 0, 905,
	0, 908, 681, 681, -2, 539, 544, 0, 457, 477,
	1067, 1069, 1070, 1073, 1074, 1014, 1015, 1075, 1114, 1115,
	1116, 1076, 1111, 1112, 1113, 1077, 0, 0, 0, 1386,
	1387, 1107, 0, 0, 0, 0, 0, 0, 0, 1037,
	1004, 1005, 998, 1001, 1002, 372, 369, 370, 565, 630,
	276, 277, 719, 0, 712, 742, 739, 0, 0, 678,
	680, 67, 72, 0, 0, 611, 0, 608, 0, 602,
	604, 126, 573, 88, 109, 0, 1223, 1273, 1200, 0,
	1191, 0, 1185, 1186, 1187, 1192, 611, 0, 0, 0,
	383, 388, 0, 391, 392, 0, 864, 1455, 0, 884,
	885, 886, 925, -2, 968, 1023, 890, 118, 925, 909,
	0, 916, 0, 914, 907, 635, 540, 0, 0, 1289,
	1102, 0, 0, 0, 1044, 1046, 1047, 1048, 1049, 1050,
	1045, 0, 0, 0, 1036, 1038, 1083, 0, 273, 0,
	0, 743, 745, 740, 741, 62, 64, 79, 0, 610,
	117, 0, 80, 0, 106, 0, 119, 120, 0, 0,
	0, 0, 1199, 1188, 0, 0, 0, 0, 0, 1390,
	1391, 1392, 0, 600, 0, 798, 806, 0, 808, 389,
	857, 0, 641, 0, 927, 0, 887, 970, 892, 927,
	901, 0, 911, 0, 920, 0, 917, 630, 1110, 0,
	1081, 1090, 1103, 0, 0, 857, 857, 857, 857, 0,
	1084, 720, 734, 0, 0, 0, 89, 93, 0, 115,
	112, 0, 121, 0, 0, 0, 0, 0, 1177, 0,
	0, 0, 1181, 1182, 1183, 1184, 0, 807, 856, 865,
	866, 641, 889, 0, 964, 969, 891, 910, 919, 0,
	922, 538, 1079, 1089, 1091, 1092, 0, 1104, 1105, 1106,
	1108, 1029, 1030, 1033, 1034, 0, 744, 746, 0, 613,
	603, 82, 0, 0, 110, 111, 113, 0, 122, 0,
	124, 125, 0, 1178, 1179, 1180, 787, 858, 1476, 0,
	0, 862, 863, 867, 0, 952, 0, 0, 958, 0,
	965, 921, 1080, 1093, 0, 1094, 0, 0, 0, 1035,
	612, 0, 900, 0, 94, 0, 96, 98, 99, 1054,
	107, 108, 114, 123, 1189, 0, 860, 0, 928, 0,
	930, 0, 0, 0, 0, 0, 962, 0, 1095, 1097,
	1098, 0, 0, 1096, 614, 83, 84, 0, 95, 0,
	0, 859, 861, 0, 932, 0, 953, 0, 0, 0,
	0, 0, 0, 0, 1099, 1101, 1100, 0, 0, 97,
	1055, 929, 926, 0, 964, 954, 0, 956, 0, 0,
	0, 0, 85, 86, 87, 0, 0, 934, 0, 950,
	955, 957, 959, 0, 963, 961, 1056, 933, 0, 946,
	931, 0, 960, 935, -2, 0, 951, 936, -2, 0,
	944, 0, 0, 937, 945, 0, 940, 0, 0, 0,
	939, 0, -2, 947, 0, 0, 941, -2, 0, 949,
	948,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 97, 3, 3, 3, 128, 120, 3,
	68, 69, 125, 123, 138, 124, 137, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 561, 560,
	107, 106, 108, 3, 562, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 563, 119, 564, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 98, 99, 100, 101, 102, 103, 104,
	105, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 121, 122, 127, 129, 132, 133, 134, 135, 136,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:713
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:720
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:726
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:734
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:740
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:744
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:759
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:763
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:778
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:810
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:817
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:837
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:843
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:850
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:858
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:864
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:873
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:883
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:891
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:899
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:907
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:917
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:925
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:935
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:951
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:965
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:971
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:975
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1000
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1004
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1023
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1029
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1050
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1063
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1074
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1080
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1084
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1090
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1097
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1105
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1109
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1123
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1127
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1131
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1144
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1150
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1159
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1170
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1174
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1180
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1184
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1190
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1194
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1200
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1224
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1243
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1247
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1251
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1260
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1267
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1275
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1282
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1287
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1294
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1303
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1327
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1331
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1337
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1343
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1361
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1378
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1401
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1405
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1409
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1424
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1437
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1448
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1461
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1465
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1475
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1507
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1528
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1537
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1541
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1545
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1549
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1553
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1557
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1564
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1568
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1574
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1581
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1590
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1594
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1600
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1604
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1608
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1612
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1616
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1620
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1624
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1628
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1632
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1636
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1808
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1815
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1822
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1831
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1861
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1885
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1892
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1898
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1902
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1916
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1925
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1934
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1942
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1950
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1973
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2032
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2041
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2045
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2049
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2055
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2059
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2065
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2069
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2075
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2079
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2090
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2101
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2105
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2109
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2113
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2117
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2121
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2125
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2129
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2133
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2143
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2147
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2151
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2194
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2204
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2211
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2222
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2233
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2237
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2253
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2259
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2263
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2269
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2279
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2283
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2287
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2331
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2348
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2358
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2374
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2441
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2445
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2457
		{
			yyVAL.str = yyDollar[1].str
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2462
		{
			yyVAL.str = "true"
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2463
		{
			yyVAL.str = "false"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2504
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2508
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2514
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2521
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2525
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2529
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2533
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2537
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2546
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2556
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2562
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2568
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2586
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2600
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2607
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2614
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2638
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2642
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2669
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2677
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2690
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2696
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2707
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2740
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2756
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2760
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2764
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2768
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2772
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2776
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2780
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2788
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2792
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2800
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2808
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2812
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2822
		{
			yyVAL.item = nil
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2827
		{
			yyVAL.item = nil
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2866
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2879
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2892
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2903
		{
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2907
		{
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2946
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2958
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2970
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2989
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2997
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3009
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3019
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3036
		{
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3038
		{
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3066
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3070
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3165
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3178
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3187
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3191
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3196
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3200
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3206
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3219
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3223
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3254
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3258
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3264
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3270
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3274
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3278
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3284
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3288
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3338
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3342
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3376
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3388
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3394
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3455
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3479
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3483
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3489
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3494
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3501
		{
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3503
		{
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3506
		{
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3515
		{
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3519
		{
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3524
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3533
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3540
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3546
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3554
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3561
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3568
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3588
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3598
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3602
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3608
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3615
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3621
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3629
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3643
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3662
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3666
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3675
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3679
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3694
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3698
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3704
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3708
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3714
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3718
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3724
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3729
		{
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3740
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3744
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3751
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3760
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3766
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3770
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3776
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3780
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3789
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3802
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3809
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3816
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3834
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3870
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3883
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3887
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3892
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3896
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3903
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3908
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3915
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3921
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3925
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3933
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3937
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3941
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3954
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3963
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3967
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3973
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3985
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3994
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4000
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4008
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4017
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4023
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4029
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4033
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4039
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4044
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4048
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4052
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4057
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4061
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4071
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4075
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4079
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4093
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4097
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4107
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4117
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4127
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4139
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4147
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4155
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4164
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4172
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4180
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4188
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4196
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4204
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4212
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4220
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4238
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4249
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4263
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4267
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4271
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4284
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4306
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4315
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4321
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4325
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4331
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4335
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4340
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4344
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4349
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4357
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4363
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4371
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4379
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4389
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4395
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4404
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4413
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4422
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4432
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4436
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4446
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4450
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4454
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4458
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4474
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4478
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4484
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4500
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4506
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4510
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4514
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4524
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4530
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4534
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4544
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4550
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4554
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4564
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4577
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4589
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4602
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4620
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4624
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4648
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4653
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4665
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4674
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4678
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4682
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4686
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4691
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4695
		{
			yyVAL.str = yyDollar[1].str
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4699
		{
			yyVAL.str = yyDollar[2].str
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4705
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4711
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4715
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4719
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4723
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4727
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4733
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 771:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4766
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4776
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4782
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 774:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4788
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4798
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4803
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4809
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4816
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4820
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4826
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4832
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4837
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4841
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4856
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4868
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4873
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4879
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4886
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4890
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4896
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4902
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4906
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4910
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4916
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4928
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4939
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4951
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4957
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4967
		{
			yyVAL.str = yyDollar[1].str
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4971
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4977
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4998
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5034
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5046
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5057
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5061
		{
			yyVAL.str = yyDollar[2].str
		}
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5067
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5081
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5087
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5093
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5108
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5117
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5122
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5128
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5136
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5242
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5246
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5252
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5262
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5266
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5272
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5282
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5286
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5290
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5299
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5305
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5312
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5318
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5327
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5334
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5343
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5347
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5353
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5367
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5375
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5380
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5388
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5398
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5421
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5443
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5447
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5451
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5455
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5459
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5465
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5469
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5475
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5480
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5485
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5493
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5497
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5501
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5507
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5522
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5532
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5536
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5545
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5551
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5555
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5561
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5565
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5569
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5574
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5578
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5596
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5605
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5618
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5625
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5635
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5643
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5654
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5658
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5663
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5667
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5674
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5685
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5698
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5712
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5720
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5727
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5734
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5741
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5748
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5764
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5771
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5782
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5789
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5800
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5814
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5821
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5828
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5832
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5841
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5855
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5862
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5873
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5882
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5886
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5892
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5896
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5902
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5911
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5925
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5931
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5935
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5941
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5948
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5957
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5961
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5970
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5975
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5979
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5984
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5988
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5998
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6002
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6021
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6029
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6037
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6048
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6057
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6067
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6077
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6081
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6099
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6105
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6109
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6113
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6119
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6123
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6127
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6131
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6135
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6139
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6144
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6148
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6152
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6156
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6160
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6164
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6168
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6172
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6180
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6184
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6188
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6192
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6196
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6200
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6204
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6208
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6212
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6216
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6220
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6224
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6228
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6232
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6239
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6243
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6249
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6254
		{
			yyVAL.str = ""
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6258
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6262
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6268
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6302
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6306
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6315
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6320
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6326
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6333
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6337
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6343
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6347
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6351
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6357
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6361
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6367
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6376
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6401
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6415
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6421
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6430
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6439
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6449
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6457
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6463
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6477
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6483
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6489
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6503
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6507
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6513
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6519
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6523
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6527
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6533
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6545
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6551
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6555
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6559
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6568
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6574
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6578
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6584
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6588
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6592
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6596
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6600
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6604
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6609
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6613
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6617
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6621
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6625
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6629
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6633
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6637
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6650
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6656
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6660
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6665
		{
			yyVAL.str = ""
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6669
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6675
		{
			yyVAL.str = ""
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6679
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6685
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6697
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6704
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6711
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6718
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6725
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6734
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6740
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6746
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6762
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6767
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6791
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6796
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6800
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6816
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6822
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6838
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6842
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6846
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6850
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6854
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6858
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6866
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6870
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6876
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6880
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6884
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6888
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6892
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6896
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6900
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6904
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6908
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6912
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6916
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6920
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6925
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6938
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6942
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6951
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6955
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6959
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6963
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6967
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6973
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6981
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6989
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7002
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7011
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7017
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7021
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7027
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7036
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7048
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7065
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7082
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7095
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7120
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7149
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7164
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7181
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7196
		{
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7203
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7207
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7211
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7217
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7221
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7225
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7229
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7235
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7239
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7243
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7249
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7257
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7271
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7278
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7287
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7292
		{
			yyVAL.str = ","
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7296
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7308
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7334
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7345
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7355
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7364
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7373
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7383
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7393
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7403
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7413
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7423
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7433
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7443
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7453
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7463
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7483
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7493
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7510
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7518
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7526
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7534
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7542
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7552
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7560
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7569
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7577
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7585
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7593
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7601
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7612
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7622
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7634
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7645
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7667
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7703
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7715
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7727
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7738
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7746
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7753
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7760
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7772
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7780
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7790
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7800
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7808
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7819
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7828
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7837
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7845
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7855
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7863
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7877
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7887
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7906
		{
		}
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7908
		{
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7949
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7960
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7964
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7968
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7974
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7983
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7989
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7993
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8000
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8004
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8008
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8016
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8020
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8024
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8028
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8034
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8038
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8042
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8046
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8050
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8054
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8058
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8062
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8066
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8070
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8078
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8082
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8086
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8090
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8094
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8098
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8102
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8106
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8110
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8114
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8124
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8130
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8134
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8141
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8145
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8149
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8155
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8159
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8163
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8167
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8171
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8175
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8179
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8185
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8189
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8193
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8197
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8203
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8216
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8221
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8227
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8231
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8244
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8249
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8253
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8257
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8261
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8265
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8269
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8283
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8287
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8294
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8305
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8310
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8316
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8328
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8340
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8352
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8365
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8378
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8391
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8404
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8417
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8430
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8443
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8456
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8469
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8482
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8497
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8524
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8566
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8614
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8631
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8643
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8663
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8683
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8719
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8732
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8745
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8758
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8771
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8783
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8795
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8807
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8831
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8843
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8855
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8867
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8879
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8892
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8905
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8920
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8928
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8937
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8947
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8970
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8975
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8981
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8988
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8992
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8997
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9001
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9007
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9013
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9020
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9027
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9036
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9043
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9050
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9059
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9063
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9067
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9073
		{
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9075
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9085
		{
			yyVAL.str = ""
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9089
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

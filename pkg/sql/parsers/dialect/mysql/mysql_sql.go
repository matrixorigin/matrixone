// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const ILIKE = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_BINARY = 57459
const INTERVAL = 57460
const BEGIN = 57461
const START = 57462
const TRANSACTION = 57463
const COMMIT = 57464
const ROLLBACK = 57465
const WORK = 57466
const CONSISTENT = 57467
const SNAPSHOT = 57468
const CHAIN = 57469
const NO = 57470
const RELEASE = 57471
const PRIORITY = 57472
const QUICK = 57473
const BIT = 57474
const TINYINT = 57475
const SMALLINT = 57476
const MEDIUMINT = 57477
const INT = 57478
const INTEGER = 57479
const BIGINT = 57480
const INTNUM = 57481
const REAL = 57482
const DOUBLE = 57483
const FLOAT_TYPE = 57484
const DECIMAL = 57485
const NUMERIC = 57486
const DECIMAL_VALUE = 57487
const TIME = 57488
const TIMESTAMP = 57489
const DATETIME = 57490
const YEAR = 57491
const CHAR = 57492
const VARCHAR = 57493
const BOOL = 57494
const CHARACTER = 57495
const VARBINARY = 57496
const NCHAR = 57497
const TEXT = 57498
const TINYTEXT = 57499
const MEDIUMTEXT = 57500
const LONGTEXT = 57501
const BLOB = 57502
const TINYBLOB = 57503
const MEDIUMBLOB = 57504
const LONGBLOB = 57505
const JSON = 57506
const ENUM = 57507
const UUID = 57508
const GEOMETRY = 57509
const POINT = 57510
const LINESTRING = 57511
const POLYGON = 57512
const GEOMETRYCOLLECTION = 57513
const MULTIPOINT = 57514
const MULTILINESTRING = 57515
const MULTIPOLYGON = 57516
const INT1 = 57517
const INT2 = 57518
const INT3 = 57519
const INT4 = 57520
const INT8 = 57521
const S3OPTION = 57522
const SQL_SMALL_RESULT = 57523
const SQL_BIG_RESULT = 57524
const SQL_BUFFER_RESULT = 57525
const LOW_PRIORITY = 57526
const HIGH_PRIORITY = 57527
const DELAYED = 57528
const CREATE = 57529
const ALTER = 57530
const DROP = 57531
const RENAME = 57532
const ANALYZE = 57533
const ADD = 57534
const RETURNS = 57535
const SCHEMA = 57536
const TABLE = 57537
const INDEX = 57538
const VIEW = 57539
const TO = 57540
const IGNORE = 57541
const IF = 57542
const PRIMARY = 57543
const COLUMN = 57544
const CONSTRAINT = 57545
const SPATIAL = 57546
const FULLTEXT = 57547
const FOREIGN = 57548
const KEY_BLOCK_SIZE = 57549
const SHOW = 57550
const DESCRIBE = 57551
const EXPLAIN = 57552
const DATE = 57553
const ESCAPE = 57554
const REPAIR = 57555
const OPTIMIZE = 57556
const TRUNCATE = 57557
const MAXVALUE = 57558
const PARTITION = 57559
const REORGANIZE = 57560
const LESS = 57561
const THAN = 57562
const PROCEDURE = 57563
const TRIGGER = 57564
const STATUS = 57565
const VARIABLES = 57566
const ROLE = 57567
const PROXY = 57568
const AVG_ROW_LENGTH = 57569
const STORAGE = 57570
const DISK = 57571
const MEMORY = 57572
const CHECKSUM = 57573
const COMPRESSION = 57574
const DATA = 57575
const DIRECTORY = 57576
const DELAY_KEY_WRITE = 57577
const ENCRYPTION = 57578
const ENGINE = 57579
const MAX_ROWS = 57580
const MIN_ROWS = 57581
const PACK_KEYS = 57582
const ROW_FORMAT = 57583
const STATS_AUTO_RECALC = 57584
const STATS_PERSISTENT = 57585
const STATS_SAMPLE_PAGES = 57586
const DYNAMIC = 57587
const COMPRESSED = 57588
const REDUNDANT = 57589
const COMPACT = 57590
const FIXED = 57591
const COLUMN_FORMAT = 57592
const AUTO_RANDOM = 57593
const RESTRICT = 57594
const CASCADE = 57595
const ACTION = 57596
const PARTIAL = 57597
const SIMPLE = 57598
const CHECK = 57599
const ENFORCED = 57600
const RANGE = 57601
const LIST = 57602
const ALGORITHM = 57603
const LINEAR = 57604
const PARTITIONS = 57605
const SUBPARTITION = 57606
const SUBPARTITIONS = 57607
const CLUSTER = 57608
const TYPE = 57609
const ANY = 57610
const SOME = 57611
const EXTERNAL = 57612
const LOCALFILE = 57613
const URL = 57614
const PREPARE = 57615
const DEALLOCATE = 57616
const RESET = 57617
const EXTENSION = 57618
const PROPERTIES = 57619
const PARSER = 57620
const VISIBLE = 57621
const INVISIBLE = 57622
const BTREE = 57623
const HASH = 57624
const RTREE = 57625
const BSI = 57626
const ZONEMAP = 57627
const LEADING = 57628
const BOTH = 57629
const TRAILING = 57630
const UNKNOWN = 57631
const EXPIRE = 57632
const ACCOUNT = 57633
const ACCOUNTS = 57634
const UNLOCK = 57635
const DAY = 57636
const NEVER = 57637
const PUMP = 57638
const MYSQL_COMPATBILITY_MODE = 57639
const SECOND = 57640
const ASCII = 57641
const COALESCE = 57642
const COLLATION = 57643
const HOUR = 57644
const MICROSECOND = 57645
const MINUTE = 57646
const MONTH = 57647
const QUARTER = 57648
const REPEAT = 57649
const REVERSE = 57650
const ROW_COUNT = 57651
const WEEK = 57652
const REVOKE = 57653
const FUNCTION = 57654
const PRIVILEGES = 57655
const TABLESPACE = 57656
const EXECUTE = 57657
const SUPER = 57658
const GRANT = 57659
const OPTION = 57660
const REFERENCES = 57661
const REPLICATION = 57662
const SLAVE = 57663
const CLIENT = 57664
const USAGE = 57665
const RELOAD = 57666
const FILE = 57667
const TEMPORARY = 57668
const ROUTINE = 57669
const EVENT = 57670
const SHUTDOWN = 57671
const NULLX = 57672
const AUTO_INCREMENT = 57673
const APPROXNUM = 57674
const SIGNED = 57675
const UNSIGNED = 57676
const ZEROFILL = 57677
const ENGINES = 57678
const LOW_CARDINALITY = 57679
const ADMIN_NAME = 57680
const RANDOM = 57681
const SUSPEND = 57682
const ATTRIBUTE = 57683
const HISTORY = 57684
const REUSE = 57685
const CURRENT = 57686
const OPTIONAL = 57687
const FAILED_LOGIN_ATTEMPTS = 57688
const PASSWORD_LOCK_TIME = 57689
const UNBOUNDED = 57690
const SECONDARY = 57691
const USER = 57692
const IDENTIFIED = 57693
const CIPHER = 57694
const ISSUER = 57695
const X509 = 57696
const SUBJECT = 57697
const SAN = 57698
const REQUIRE = 57699
const SSL = 57700
const NONE = 57701
const PASSWORD = 57702
const MAX_QUERIES_PER_HOUR = 57703
const MAX_UPDATES_PER_HOUR = 57704
const MAX_CONNECTIONS_PER_HOUR = 57705
const MAX_USER_CONNECTIONS = 57706
const FORMAT = 57707
const VERBOSE = 57708
const CONNECTION = 57709
const TRIGGERS = 57710
const PROFILES = 57711
const LOAD = 57712
const INFILE = 57713
const TERMINATED = 57714
const OPTIONALLY = 57715
const ENCLOSED = 57716
const ESCAPED = 57717
const STARTING = 57718
const LINES = 57719
const ROWS = 57720
const IMPORT = 57721
const MODUMP = 57722
const OVER = 57723
const PRECEDING = 57724
const FOLLOWING = 57725
const GROUPS = 57726
const DATABASES = 57727
const TABLES = 57728
const EXTENDED = 57729
const FULL = 57730
const PROCESSLIST = 57731
const FIELDS = 57732
const COLUMNS = 57733
const OPEN = 57734
const ERRORS = 57735
const WARNINGS = 57736
const INDEXES = 57737
const SCHEMAS = 57738
const NODE = 57739
const LOCKS = 57740
const TABLE_NUMBER = 57741
const COLUMN_NUMBER = 57742
const TABLE_VALUES = 57743
const NAMES = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const LOCAL = 57756
const EVENTS = 57757
const PLUGINS = 57758
const CURRENT_TIMESTAMP = 57759
const DATABASE = 57760
const CURRENT_TIME = 57761
const LOCALTIME = 57762
const LOCALTIMESTAMP = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const REPLACE = 57767
const CONVERT = 57768
const SEPARATOR = 57769
const TIMESTAMPDIFF = 57770
const CURRENT_DATE = 57771
const CURRENT_USER = 57772
const CURRENT_ROLE = 57773
const SECOND_MICROSECOND = 57774
const MINUTE_MICROSECOND = 57775
const MINUTE_SECOND = 57776
const HOUR_MICROSECOND = 57777
const HOUR_SECOND = 57778
const HOUR_MINUTE = 57779
const DAY_MICROSECOND = 57780
const DAY_SECOND = 57781
const DAY_MINUTE = 57782
const DAY_HOUR = 57783
const YEAR_MONTH = 57784
const SQL_TSI_HOUR = 57785
const SQL_TSI_DAY = 57786
const SQL_TSI_WEEK = 57787
const SQL_TSI_MONTH = 57788
const SQL_TSI_QUARTER = 57789
const SQL_TSI_YEAR = 57790
const SQL_TSI_SECOND = 57791
const SQL_TSI_MINUTE = 57792
const RECURSIVE = 57793
const CONFIG = 57794
const DRAINER = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const ADDDATE = 57803
const BIT_AND = 57804
const BIT_OR = 57805
const BIT_XOR = 57806
const CAST = 57807
const COUNT = 57808
const APPROX_COUNT_DISTINCT = 57809
const APPROX_PERCENTILE = 57810
const CURDATE = 57811
const CURTIME = 57812
const DATE_ADD = 57813
const DATE_SUB = 57814
const EXTRACT = 57815
const GROUP_CONCAT = 57816
const MAX = 57817
const MID = 57818
const MIN = 57819
const NOW = 57820
const POSITION = 57821
const SESSION_USER = 57822
const STD = 57823
const STDDEV = 57824
const MEDIAN = 57825
const STDDEV_POP = 57826
const STDDEV_SAMP = 57827
const SUBDATE = 57828
const SUBSTR = 57829
const SUBSTRING = 57830
const SUM = 57831
const SYSDATE = 57832
const SYSTEM_USER = 57833
const TRANSLATE = 57834
const TRIM = 57835
const VARIANCE = 57836
const VAR_POP = 57837
const VAR_SAMP = 57838
const AVG = 57839
const ARROW = 57840
const ROW = 57841
const OUTFILE = 57842
const HEADER = 57843
const MAX_FILE_SIZE = 57844
const FORCE_QUOTE = 57845
const PARALLEL = 57846
const UNUSED = 57847
const BINDINGS = 57848
const DO = 57849
const DECLARE = 57850
const KILL = 57851
const QUERY_RESULT = 57852

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8487

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 94,
	21, 553,
	-2, 534,
	-1, 102,
	213, 750,
	-2, 797,
	-1, 121,
	42, 384,
	213, 384,
	240, 391,
	241, 391,
	412, 384,
	-2, 414,
	-1, 434,
	289, 93,
	388, 93,
	-2, 1541,
	-1, 492,
	67, 1165,
	-2, 1681,
	-1, 493,
	67, 1183,
	-2, 1652,
	-1, 497,
	67, 1184,
	-2, 1680,
	-1, 519,
	67, 1098,
	-2, 1732,
	-1, 520,
	67, 1099,
	-2, 1731,
	-1, 521,
	67, 1100,
	-2, 1721,
	-1, 522,
	67, 1696,
	-2, 1716,
	-1, 523,
	67, 1697,
	-2, 1717,
	-1, 524,
	67, 1698,
	-2, 1723,
	-1, 525,
	67, 1699,
	-2, 1706,
	-1, 526,
	67, 1700,
	-2, 1714,
	-1, 527,
	67, 1701,
	-2, 1724,
	-1, 528,
	67, 1702,
	-2, 1725,
	-1, 529,
	67, 1703,
	-2, 1730,
	-1, 530,
	67, 1704,
	-2, 1735,
	-1, 531,
	67, 1705,
	-2, 1736,
	-1, 533,
	67, 1162,
	-2, 1533,
	-1, 540,
	67, 1171,
	-2, 1559,
	-1, 544,
	67, 1175,
	-2, 1598,
	-1, 545,
	67, 1176,
	-2, 1676,
	-1, 553,
	67, 1186,
	-2, 1661,
	-1, 555,
	67, 1188,
	-2, 1671,
	-1, 556,
	67, 1189,
	-2, 1694,
	-1, 567,
	67, 1080,
	-2, 1726,
	-1, 568,
	67, 1081,
	-2, 1727,
	-1, 569,
	67, 1082,
	-2, 1728,
	-1, 576,
	21, 554,
	-2, 517,
	-1, 631,
	407, 414,
	408, 414,
	-2, 385,
	-1, 676,
	103, 1533,
	114, 1533,
	134, 1533,
	-2, 1326,
	-1, 718,
	21, 554,
	-2, 517,
	-1, 817,
	21, 553,
	-2, 987,
	-1, 1144,
	67, 1233,
	-2, 1678,
	-1, 1145,
	67, 1234,
	-2, 1679,
	-1, 1306,
	1, 776,
	68, 776,
	528, 776,
	-2, 783,
	-1, 1440,
	134, 1336,
	-2, 1334,
	-1, 1442,
	134, 678,
	-2, 1331,
	-1, 1443,
	134, 679,
	-2, 1332,
	-1, 1738,
	68, 1312,
	135, 1312,
	-2, 1663,
	-1, 1739,
	68, 1308,
	135, 1308,
	-2, 1662,
	-1, 1740,
	68, 1290,
	135, 1290,
	-2, 1649,
	-1, 1741,
	68, 1291,
	135, 1291,
	-2, 1654,
	-1, 1742,
	68, 1292,
	135, 1292,
	-2, 1586,
	-1, 1743,
	68, 1293,
	135, 1293,
	-2, 1580,
	-1, 1744,
	68, 1294,
	135, 1294,
	-2, 1524,
	-1, 1745,
	68, 1295,
	135, 1295,
	-2, 1651,
	-1, 1746,
	68, 1296,
	135, 1296,
	-2, 1584,
	-1, 1747,
	68, 1297,
	135, 1297,
	-2, 1579,
	-1, 1748,
	68, 1298,
	135, 1298,
	-2, 1572,
	-1, 1750,
	68, 1301,
	135, 1301,
	-2, 1694,
	-1, 1751,
	68, 1281,
	135, 1281,
	-2, 1681,
	-1, 1752,
	68, 1310,
	135, 1310,
	-2, 1652,
	-1, 1753,
	68, 1310,
	135, 1310,
	-2, 1680,
	-1, 1754,
	68, 1310,
	135, 1310,
	-2, 1542,
	-1, 1755,
	68, 1308,
	135, 1308,
	-2, 1671,
	-1, 1756,
	68, 1305,
	135, 1305,
	-2, 1564,
	-1, 1757,
	67, 1263,
	68, 1263,
	135, 1263,
	350, 1263,
	351, 1263,
	352, 1263,
	-2, 1523,
	-1, 1758,
	67, 1264,
	68, 1264,
	135, 1264,
	350, 1264,
	351, 1264,
	352, 1264,
	-2, 1525,
	-1, 1759,
	67, 1267,
	68, 1267,
	135, 1267,
	350, 1267,
	351, 1267,
	352, 1267,
	-2, 1653,
	-1, 1760,
	67, 1269,
	68, 1269,
	135, 1269,
	350, 1269,
	351, 1269,
	352, 1269,
	-2, 1636,
	-1, 1761,
	67, 1271,
	68, 1271,
	135, 1271,
	350, 1271,
	351, 1271,
	352, 1271,
	-2, 1585,
	-1, 1762,
	67, 1273,
	68, 1273,
	135, 1273,
	350, 1273,
	351, 1273,
	352, 1273,
	-2, 1568,
	-1, 1763,
	67, 1274,
	68, 1274,
	135, 1274,
	350, 1274,
	351, 1274,
	352, 1274,
	-2, 1569,
	-1, 1764,
	67, 1276,
	68, 1276,
	135, 1276,
	350, 1276,
	351, 1276,
	352, 1276,
	-2, 1522,
	-1, 1765,
	68, 1315,
	135, 1315,
	350, 1315,
	351, 1315,
	352, 1315,
	-2, 1547,
	-1, 1766,
	68, 1315,
	135, 1315,
	350, 1315,
	351, 1315,
	352, 1315,
	-2, 1560,
	-1, 1767,
	68, 1318,
	135, 1318,
	350, 1318,
	351, 1318,
	352, 1318,
	-2, 1543,
	-1, 1768,
	68, 1315,
	135, 1315,
	350, 1315,
	351, 1315,
	352, 1315,
	-2, 1621,
	-1, 1781,
	1, 777,
	68, 777,
	528, 777,
	-2, 783,
	-1, 1840,
	21, 553,
	-2, 645,
	-1, 2020,
	65, 460,
	135, 460,
	-2, 892,
	-1, 2320,
	87, 783,
	130, 783,
	167, 783,
	170, 783,
	-2, 840,
	-1, 2322,
	274, 955,
	-2, 934,
	-1, 2333,
	87, 783,
	130, 783,
	167, 783,
	170, 783,
	-2, 840,
	-1, 2336,
	65, 460,
	135, 460,
	-2, 893,
	-1, 2385,
	87, 783,
	130, 783,
	167, 783,
	170, 783,
	-2, 841,
	-1, 2413,
	274, 955,
	-2, 935,
	-1, 2824,
	68, 812,
	135, 812,
	-2, 783,
	-1, 2828,
	68, 812,
	135, 812,
	-2, 783,
	-1, 2842,
	68, 816,
	135, 816,
	-2, 783,
	-1, 2847,
	68, 817,
	135, 817,
	-2, 783,
}

const yyPrivate = 57344

const yyLast = 30526

var yyAct = [...]int{
	464, 2386, 2828, 1211, 2836, 2827, 2800, 445, 2773, 1125,
	2665, 466, 2742, 2789, 2425, 2725, 2626, 2726, 443, 1837,
	2382, 2360, 2606, 2556, 2268, 2563, 2380, 2461, 2639, 845,
	1398, 1728, 1031, 2550, 2567, 2269, 2614, 983, 490, 142,
	142, 1833, 2381, 1121, 577, 142, 381, 388, 2480, 2316,
	388, 2459, 1994, 2435, 2414, 2207, 2455, 1313, 145, 2023,
	2384, 2434, 1128, 2203, 1067, 1871, 2042, 1426, 2043, 2304,
	946, 1351, 2326, 675, 1736, 1832, 447, 1381, 393, 2208,
	2266, 1912, 1359, 2212, 1632, 1880, 1879, 399, 1953, 2260,
	436, 2064, 572, 2243, 437, 2182, 386, 31, 1265, 2179,
	1790, 712, 2177, 1734, 2084, 612, 1911, 962, 2201, 1263,
	1628, 1433, 1437, 442, 1427, 438, 1434, 1440, 1627, 2078,
	2128, 141, 141, 1282, 1374, 1354, 1821, 372, 1352, 572,
	681, 1315, 3, 1991, 1789, 1996, 1210, 1326, 2389, 960,
	1782, 142, 685, 42, 1325, 1302, 385, 19, 1124, 382,
	8, 1290, 383, 6, 1268, 1874, 881, 706, 1660, 1273,
	1119, 1629, 684, 30, 1432, 1058, 384, 7, 1732, 1040,
	1378, 446, 93, 1774, 705, 973, 679, 1639, 1324, 435,
	1716, 404, 454, 1110, 1158, 729, 1323, 377, 42, 926,
	1421, 1403, 1835, 1023, 1118, 635, 707, 1174, 667, 1842,
	374, 1301, 969, 611, 1339, 574, 1181, 1180, 401, 1010,
	668, 984, 387, 402, 944, 16, 444, 9, 627, 1057,
	609, 4, 1646, 714, 131, 576, 134, 135, 2122, 38,
	123, 103, 2122, 31, 1914, 1636, 137, 396, 136, 2546,
	2456, 1872, 2267, 1286, 2648, 1429, 575, 128, 846, 840,
	2656, 585, 2373, 749, 116, 1899, 135, 135, 129, 38,
	123, 103, 391, 92, 135, 1633, 135, 370, 135, 704,
	38, 123, 103, 1907, 135, 1012, 2372, 2683, 77, 42,
	135, 135, 397, 19, 132, 2151, 8, 1644, 135, 6,
	38, 123, 103, 996, 1077, 997, 1858, 783, 135, 30,
	2276, 1859, 571, 7, 649, 682, 2714, 1111, 1392, 1115,
	1074, 1362, 1363, 132, 132, 980, 2099, 92, 989, 990,
	1095, 132, 1875, 1070, 1993, 132, 1013, 645, 138, 2729,
	2730, 1076, 1335, 1114, 92, 776, 1201, 132, 132, 764,
	1063, 765, 2712, 586, 562, 132, 561, 563, 564, 1127,
	565, 566, 2466, 124, 125, 132, 126, 127, 781, 690,
	689, 691, 678, 677, 757, 398, 759, 987, 1954, 767,
	986, 989, 990, 2548, 142, 722, 1992, 786, 787, 788,
	785, 2649, 2650, 2746, 2747, 2551, 2552, 2553, 2554, 688,
	388, 388, 1216, 142, 760, 721, 2270, 2655, 650, 2085,
	2641, 2641, 2086, 1116, 2087, 2644, 2458, 2270, 1894, 732,
	723, 1130, 2562, 2284, 578, 717, 719, 2305, 1640, 1371,
	1375, 102, 122, 133, 1113, 75, 1367, 2312, 1106, 2183,
	2472, 2115, 2378, 1814, 1773, 762, 2193, 693, 1713, 1257,
	1256, 1986, 121, 115, 114, 1999, 779, 780, 2191, 44,
	2432, 102, 819, 133, 778, 686, 720, 652, 432, 1904,
	753, 433, 2728, 752, 2039, 1816, 2475, 2117, 716, 2658,
	2659, 2465, 121, 2375, 1884, 740, 694, 2467, 2716, 732,
	2707, 1197, 390, 755, 744, 1194, 978, 389, 2531, 1196,
	1193, 1195, 1199, 1200, 763, 758, 761, 1198, 2187, 2568,
	2188, 2189, 718, 1649, 1651, 1652, 2820, 117, 118, 119,
	1129, 2837, 2755, 1645, 687, 2190, 998, 2663, 2664, 754,
	2667, 42, 42, 774, 775, 651, 769, 130, 770, 2711,
	1112, 1390, 1391, 2762, 1006, 2615, 2616, 2617, 2619, 2618,
	2007, 2008, 2009, 2010, 2667, 87, 680, 2690, 2524, 120,
	2811, 88, 2515, 682, 968, 789, 772, 1136, 1139, 1140,
	2493, 2492, 766, 2628, 818, 1069, 725, 726, 1137, 2718,
	2719, 2673, 827, 2005, 1019, 1018, 2792, 2519, 982, 981,
	1000, 742, 692, 734, 733, 967, 966, 756, 943, 945,
	2838, 2185, 2832, 1634, 833, 1634, 2801, 2481, 2296, 2844,
	713, 1661, 737, 738, 89, 1634, 2066, 2068, 741, 957,
	947, 612, 2070, 397, 37, 2638, 1011, 1900, 923, 749,
	1849, 682, 768, 1637, 2288, 951, 2120, 955, 2121, 954,
	1204, 1205, 1206, 1207, 1208, 1209, 1202, 1203, 825, 953,
	392, 727, 2173, 1648, 1846, 875, 989, 990, 2657, 606,
	607, 608, 1008, 734, 733, 988, 2130, 2129, 773, 39,
	1016, 948, 949, 950, 985, 952, 821, 822, 823, 824,
	572, 572, 572, 1848, 1847, 1035, 1035, 1366, 142, 1647,
	2216, 771, 989, 990, 1365, 979, 2651, 2652, 2717, 654,
	1845, 2793, 104, 1635, 388, 945, 1061, 1061, 575, 748,
	39, 1364, 1088, 1089, 655, 1064, 1689, 2374, 1037, 1688,
	2184, 2591, 2850, 2473, 1998, 2831, 1072, 1042, 1033, 1033,
	39, 104, 104, 2194, 1376, 2311, 1650, 579, 1908, 104,
	976, 104, 1830, 104, 1014, 1015, 1093, 992, 993, 104,
	995, 90, 91, 95, 2627, 104, 104, 855, 856, 1035,
	2118, 1035, 722, 104, 2379, 1078, 2795, 970, 974, 974,
	1041, 2067, 743, 104, 1370, 2843, 1931, 2002, 2003, 2849,
	2186, 1368, 1126, 1107, 2517, 970, 784, 970, 2516, 784,
	1138, 2001, 784, 2520, 2521, 680, 1726, 2213, 2216, 928,
	2221, 1092, 921, 918, 919, 920, 658, 975, 1936, 1091,
	1935, 1934, 1932, 1887, 2217, 930, 2840, 2821, 2240, 1068,
	2816, 1060, 1060, 1075, 576, 2790, 2791, 2804, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1007, 959, 1179, 1102, 1169, 1170, 784, 1831, 801, 749,
	999, 1225, 1001, 784, 657, 1316, 2803, 991, 660, 659,
	994, 2778, 1231, 2775, 786, 787, 788, 785, 2321, 1722,
	2022, 1123, 2021, 1933, 1238, 1239, 1029, 1030, 1672, 1406,
	42, 1233, 1873, 2841, 1642, 572, 1017, 2817, 1899, 42,
	1026, 1027, 1028, 1101, 1642, 1316, 1098, 1004, 1005, 1097,
	1009, 1891, 1776, 786, 787, 788, 785, 1120, 2736, 1725,
	1131, 1132, 1133, 1134, 1135, 1141, 1055, 1043, 1079, 1056,
	370, 1104, 2217, 1642, 2731, 1084, 1062, 2210, 1642, 1109,
	2776, 2211, 2214, 1279, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1080, 2720, 2592, 2594, 2595, 2596, 2593, 1671, 786,
	787, 788, 785, 1108, 1176, 1177, 1178, 142, 576, 1300,
	1035, 1213, 1100, 1306, 1099, 1219, 1117, 1224, 1096, 612,
	2691, 1280, 1314, 1122, 1831, 2477, 1035, 1831, 2688, 1861,
	1008, 1305, 1212, 2215, 1215, 381, 2687, 646, 1226, 1258,
	2686, 2477, 2022, 1264, 2149, 1937, 1938, 1775, 1232, 1404,
	1234, 2685, 1261, 646, 1160, 2675, 2541, 1340, 1340, 1861,
	1008, 1272, 1008, 1283, 2240, 142, 1300, 1300, 1988, 1861,
	1035, 1361, 1633, 2540, 747, 2476, 2364, 1727, 971, 2089,
	2013, 572, 1338, 1035, 1307, 1308, 1309, 2692, 579, 1297,
	1167, 1168, 2061, 1977, 1299, 2477, 2487, 1693, 1304, 749,
	1624, 1284, 1975, 2477, 1214, 1288, 746, 2477, 1291, 1300,
	1035, 1388, 1397, 142, 142, 1270, 1271, 648, 2477, 958,
	647, 1408, 2676, 2542, 1235, 142, 697, 702, 703, 1342,
	1172, 1225, 1425, 648, 706, 1322, 647, 1225, 1225, 1275,
	1794, 1278, 2477, 2090, 1400, 1253, 2090, 1345, 1973, 1331,
	1332, 1346, 1347, 1971, 1959, 1414, 1020, 2815, 1303, 1831,
	1978, 1442, 2777, 1844, 970, 1915, 1314, 1372, 1329, 1976,
	1035, 1897, 1889, 707, 1319, 1330, 972, 747, 1287, 2339,
	1328, 2222, 1885, 1881, 1336, 1337, 974, 1793, 1723, 1697,
	1281, 2080, 1333, 1377, 1394, 1399, 1399, 715, 1396, 1284,
	1443, 1696, 1641, 2014, 924, 1284, 1284, 1399, 1085, 2024,
	1902, 1901, 1893, 1810, 1387, 1972, 1685, 1673, 1303, 656,
	1972, 784, 1311, 1625, 1334, 1654, 1310, 1623, 1411, 1321,
	715, 2114, 784, 1296, 1081, 1327, 922, 1922, 1794, 1882,
	1317, 1318, 831, 735, 1658, 1659, 1343, 1423, 1344, 1886,
	1882, 715, 2226, 1423, 1794, 1722, 784, 604, 1120, 2112,
	1385, 1386, 1341, 963, 1175, 2796, 2787, 964, 784, 1642,
	1350, 1349, 1995, 1024, 971, 1086, 1218, 1217, 2677, 1373,
	1382, 1383, 1384, 2113, 1025, 2241, 1022, 2808, 42, 1401,
	2236, 2123, 1393, 699, 700, 701, 2040, 1631, 1892, 1851,
	1694, 724, 2704, 682, 1395, 1298, 1175, 1701, 1667, 682,
	785, 1236, 1237, 2527, 1412, 1240, 1241, 1242, 1243, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1430, 1435, 2526,
	1436, 2330, 1622, 1621, 1441, 800, 799, 809, 810, 802,
	803, 804, 805, 806, 807, 808, 801, 661, 1664, 1630,
	2325, 1668, 1626, 467, 476, 436, 722, 1769, 468, 2088,
	475, 469, 473, 472, 470, 471, 1021, 1244, 142, 142,
	142, 1791, 972, 788, 785, 2510, 1737, 786, 787, 788,
	785, 653, 1008, 1229, 2826, 1653, 1924, 1662, 2807, 2756,
	2178, 1803, 1679, 1230, 682, 2751, 1683, 804, 805, 806,
	807, 808, 801, 1008, 2810, 1160, 706, 1655, 786, 787,
	788, 785, 477, 1695, 2695, 2608, 1698, 1699, 1700, 1361,
	2586, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 2585,
	1711, 1666, 802, 803, 804, 805, 806, 807, 808, 801,
	1656, 1657, 474, 2584, 2602, 707, 2600, 2809, 1035, 142,
	1785, 1786, 1787, 809, 810, 802, 803, 804, 805, 806,
	807, 808, 801, 722, 2598, 1061, 2588, 1361, 2376, 2309,
	1866, 2581, 1868, 1802, 2575, 1838, 1838, 2572, 1838, 2571,
	1225, 1300, 2601, 1737, 2599, 2308, 479, 94, 1946, 2192,
	1841, 1856, 1795, 1839, 1166, 1843, 2168, 1770, 2167, 2108,
	2082, 1806, 2597, 1721, 2587, 1783, 2377, 2310, 1718, 1163,
	1165, 1162, 1720, 1164, 1800, 792, 793, 794, 795, 796,
	797, 798, 790, 1804, 1805, 1719, 1715, 896, 2723, 371,
	2417, 1041, 94, 1714, 1731, 1082, 974, 941, 1865, 1807,
	1808, 1777, 2142, 1729, 1730, 1812, 1877, 1883, 2361, 1681,
	786, 787, 788, 785, 2427, 708, 709, 710, 1284, 1284,
	1284, 1801, 1798, 786, 787, 788, 785, 2420, 1799, 432,
	2842, 2748, 433, 2415, 1809, 2722, 2607, 2706, 2430, 2431,
	1060, 1811, 2671, 1817, 2416, 2670, 2653, 2141, 2636, 2530,
	2589, 682, 2818, 2582, 2578, 1863, 2577, 786, 787, 788,
	785, 2576, 1680, 2512, 1870, 2474, 2457, 2196, 2359, 786,
	787, 788, 785, 1852, 1853, 1854, 2357, 2343, 1857, 683,
	2421, 2319, 2307, 94, 786, 787, 788, 785, 884, 2306,
	1864, 1862, 874, 799, 809, 810, 802, 803, 804, 805,
	806, 807, 808, 801, 1878, 2303, 904, 908, 910, 912,
	914, 915, 917, 2293, 921, 918, 919, 920, 2287, 1913,
	899, 900, 901, 902, 882, 883, 905, 2237, 885, 2172,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	897, 903, 2566, 2166, 1895, 2119, 2083, 2678, 2073, 907,
	909, 911, 913, 916, 1035, 1724, 1035, 1717, 1035, 518,
	517, 2555, 1415, 722, 786, 787, 788, 785, 2429, 1413,
	2209, 800, 799, 809, 810, 802, 803, 804, 805, 806,
	807, 808, 801, 1909, 1293, 898, 1083, 854, 850, 2536,
	1691, 849, 832, 1035, 1940, 2423, 711, 2367, 2333, 1905,
	2332, 2320, 2298, 2297, 2366, 2292, 1947, 2280, 2259, 2290,
	1035, 786, 787, 788, 785, 2145, 2258, 2422, 2424, 786,
	787, 788, 785, 2144, 2227, 1939, 786, 787, 788, 785,
	1949, 786, 787, 788, 785, 2147, 1033, 786, 787, 788,
	785, 2140, 1948, 2143, 2132, 786, 787, 788, 785, 1968,
	2127, 2077, 1987, 1033, 1974, 1967, 1970, 1969, 1702, 1951,
	1966, 1692, 1690, 1687, 1926, 786, 787, 788, 785, 1965,
	1686, 786, 787, 788, 785, 1684, 1906, 786, 787, 788,
	785, 1678, 786, 787, 788, 785, 2432, 580, 581, 582,
	583, 786, 787, 788, 785, 1675, 1035, 1920, 2418, 1964,
	579, 1674, 1120, 1923, 2428, 1228, 1955, 1227, 1898, 2020,
	1047, 1960, 1941, 1942, 1903, 2026, 1896, 1944, 1945, 135,
	1979, 786, 787, 788, 785, 94, 94, 683, 1045, 1950,
	2839, 2035, 1989, 2786, 2780, 1916, 1917, 2763, 2760, 722,
	1361, 1361, 1361, 1361, 1963, 2758, 2694, 847, 1930, 1046,
	2624, 722, 1361, 135, 2612, 2609, 123, 103, 1284, 2044,
	2604, 1981, 1982, 1291, 2543, 2534, 786, 787, 788, 785,
	1035, 2044, 2533, 2532, 1272, 1676, 132, 2012, 2529, 2523,
	2508, 142, 142, 1260, 2350, 2348, 2331, 2038, 2314, 2153,
	1269, 2018, 1262, 2094, 961, 817, 2060, 2017, 1919, 1983,
	1980, 1962, 2016, 1225, 2015, 2027, 1274, 2095, 1277, 31,
	132, 1266, 1225, 1838, 1888, 829, 1850, 2057, 1792, 1161,
	1035, 132, 1420, 786, 787, 788, 785, 2028, 1270, 1271,
	906, 1402, 1295, 2106, 1267, 2032, 2033, 1105, 1071, 925,
	1783, 2004, 2011, 2019, 1303, 2025, 1275, 873, 1278, 872,
	786, 787, 788, 785, 2029, 42, 871, 870, 2031, 19,
	1961, 2030, 8, 2075, 2076, 6, 2091, 2037, 2045, 2046,
	2047, 2048, 2107, 2041, 2034, 30, 2056, 2058, 2101, 7,
	1958, 869, 786, 787, 788, 785, 1283, 868, 2071, 867,
	2103, 576, 2059, 866, 865, 864, 2074, 863, 862, 861,
	860, 2069, 786, 787, 788, 785, 2100, 859, 2111, 722,
	2081, 2116, 858, 857, 853, 2181, 852, 851, 848, 2092,
	844, 843, 2096, 2102, 1284, 931, 2104, 142, 1284, 1737,
	2110, 2105, 2098, 841, 840, 839, 722, 722, 722, 1797,
	2784, 2124, 1361, 1791, 838, 2225, 837, 836, 835, 834,
	2133, 2229, 2125, 2135, 830, 2137, 2206, 2206, 2206, 2181,
	2126, 2152, 2134, 828, 751, 2154, 2155, 2156, 2157, 2131,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2138, 2139,
	2244, 2245, 2146, 1779, 739, 2198, 2199, 2200, 800, 799,
	809, 810, 802, 803, 804, 805, 806, 807, 808, 801,
	1957, 1940, 2250, 600, 2768, 2169, 1956, 2176, 2766, 2197,
	2136, 1300, 2174, 2223, 1952, 1300, 2727, 2247, 2006, 1860,
	1417, 750, 786, 787, 788, 785, 1943, 1044, 786, 787,
	788, 785, 371, 2249, 2050, 2049, 786, 787, 788, 785,
	2220, 142, 1921, 2224, 2825, 2218, 2219, 2053, 786, 787,
	788, 785, 2054, 2233, 1670, 1669, 2093, 2238, 2235, 94,
	2234, 2248, 2232, 94, 786, 787, 788, 785, 2051, 2265,
	2255, 2256, 2257, 2052, 94, 2252, 786, 787, 788, 785,
	2228, 2278, 1419, 94, 2230, 2231, 2055, 2281, 1827, 1828,
	1890, 2264, 2170, 2171, 2239, 2353, 2275, 2352, 1418, 1985,
	2175, 2279, 76, 41, 40, 1784, 2274, 1254, 2277, 2251,
	1171, 786, 787, 788, 785, 1876, 2283, 2282, 1910, 1035,
	1035, 1729, 1730, 2285, 2286, 139, 602, 927, 1065, 589,
	2324, 2351, 786, 787, 788, 785, 599, 598, 1771, 745,
	2561, 2036, 1361, 2336, 1990, 367, 368, 369, 1312, 1294,
	1818, 2315, 1823, 1826, 1827, 1828, 1824, 592, 1825, 1829,
	2739, 722, 1033, 2317, 1815, 366, 1218, 1217, 2301, 1348,
	2299, 1003, 2302, 1823, 1826, 1827, 1828, 1824, 2289, 1825,
	1829, 2044, 939, 940, 1002, 2291, 2355, 937, 938, 935,
	936, 933, 934, 777, 722, 2254, 1620, 965, 597, 1838,
	929, 2322, 596, 2328, 2344, 2338, 2329, 2323, 587, 580,
	581, 582, 583, 2335, 2044, 2327, 2334, 2327, 2781, 2701,
	2699, 2661, 579, 590, 2646, 2342, 2645, 2643, 2569, 2345,
	2544, 2454, 2079, 2453, 2370, 722, 2358, 2272, 2271, 2346,
	2262, 932, 722, 579, 588, 2261, 2436, 2438, 1316, 2436,
	2436, 2109, 2356, 2770, 2769, 977, 1677, 736, 603, 2369,
	2362, 2769, 2206, 2770, 2363, 2525, 2273, 49, 1389, 1314,
	2365, 2451, 1039, 1, 1292, 2337, 584, 1284, 2062, 2063,
	2347, 2340, 591, 2349, 2341, 2371, 2253, 2065, 1638, 1813,
	1772, 2195, 956, 2471, 2468, 605, 1220, 2354, 2433, 1090,
	2437, 2368, 2448, 696, 731, 2411, 812, 2483, 816, 1087,
	2439, 2440, 730, 728, 2445, 2444, 2338, 1173, 481, 1428,
	2605, 2441, 2450, 813, 815, 811, 2449, 814, 800, 799,
	809, 810, 802, 803, 804, 805, 806, 807, 808, 801,
	2738, 2772, 1035, 2693, 2741, 1103, 465, 2637, 2469, 2547,
	601, 2697, 2549, 142, 2460, 1643, 2511, 1360, 782, 2097,
	2484, 2485, 2438, 2488, 2489, 2490, 2491, 2442, 623, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2486, 512, 2317, 2446, 2447, 2509, 2433,
	488, 2513, 842, 1073, 1066, 2150, 698, 487, 722, 2313,
	2000, 2478, 595, 695, 2570, 624, 1712, 2545, 1255, 1276,
	1259, 2539, 2835, 2824, 2538, 2535, 2537, 683, 2799, 2479,
	2779, 2666, 2819, 683, 2710, 2761, 2464, 2603, 2462, 2463,
	2565, 2754, 94, 2662, 403, 2528, 1369, 570, 665, 2625,
	2564, 1416, 1796, 2654, 2611, 593, 1778, 594, 1781, 1780,
	722, 1142, 791, 722, 722, 722, 1159, 2294, 2583, 2573,
	2574, 2295, 826, 2631, 2634, 2579, 2580, 441, 1665, 453,
	1997, 2426, 2072, 48, 47, 1838, 2613, 46, 45, 2621,
	2622, 2623, 1407, 1438, 2610, 483, 2635, 144, 2620, 1439,
	2633, 2743, 463, 2629, 1035, 1035, 462, 2630, 461, 460,
	2560, 2647, 1822, 2642, 2640, 1820, 1819, 1356, 817, 1355,
	1405, 2724, 2681, 2682, 2522, 2590, 2518, 2514, 2660, 2672,
	2385, 2412, 2413, 2419, 880, 142, 2668, 2669, 876, 878,
	879, 877, 1929, 722, 1925, 2204, 2205, 1033, 1033, 2202,
	942, 2470, 2300, 1735, 1733, 722, 2246, 2242, 1424, 1289,
	1984, 1357, 1353, 2443, 573, 2674, 32, 27, 5, 2684,
	2680, 29, 28, 14, 15, 13, 1094, 12, 18, 26,
	25, 2689, 24, 86, 85, 23, 84, 83, 82, 81,
	22, 11, 722, 80, 2696, 2700, 79, 2702, 2703, 2698,
	78, 21, 73, 2560, 20, 74, 71, 72, 59, 58,
	57, 69, 2708, 68, 67, 66, 65, 1399, 64, 622,
	56, 2713, 2715, 2737, 55, 2745, 54, 53, 70, 2721,
	63, 62, 61, 60, 52, 51, 2744, 50, 2705, 101,
	722, 2732, 2733, 2734, 2735, 100, 99, 98, 97, 2753,
	96, 33, 34, 2749, 35, 2679, 36, 2752, 2750, 111,
	1126, 2757, 110, 2759, 112, 113, 108, 106, 109, 107,
	2764, 105, 2767, 2765, 43, 10, 17, 2774, 2, 0,
	0, 2771, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 722, 0, 0, 0, 0, 0, 0, 2783, 0,
	2785, 0, 0, 0, 0, 0, 0, 2745, 2798, 1126,
	0, 1126, 2788, 0, 2794, 1840, 0, 722, 2744, 2797,
	0, 0, 2802, 0, 0, 0, 2806, 0, 0, 0,
	0, 0, 2782, 2774, 2812, 0, 0, 1126, 0, 0,
	0, 0, 0, 0, 0, 0, 2822, 0, 0, 0,
	2560, 0, 0, 0, 2823, 0, 2830, 0, 0, 0,
	2834, 0, 0, 1360, 2833, 0, 0, 0, 0, 0,
	0, 0, 0, 2845, 2830, 2847, 2846, 0, 2848, 2834,
	800, 799, 809, 810, 802, 803, 804, 805, 806, 807,
	808, 801, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 800, 799, 809, 810, 802, 803, 804, 805,
	806, 807, 808, 801, 455, 0, 0, 0, 219, 0,
	0, 244, 0, 0, 0, 486, 0, 0, 304, 258,
	2148, 0, 2814, 0, 541, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 480,
	518, 517, 467, 476, 0, 0, 200, 468, 0, 475,
	469, 473, 472, 470, 471, 0, 533, 0, 0, 0,
	0, 0, 0, 439, 452, 2557, 456, 0, 800, 799,
	809, 810, 802, 803, 804, 805, 806, 807, 808, 801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	450, 0, 0, 0, 0, 495, 0, 451, 0, 0,
	458, 477, 478, 0, 0, 191, 309, 325, 201, 300,
	338, 206, 307, 196, 273, 296, 0, 0, 193, 323,
	306, 255, 238, 239, 192, 0, 291, 217, 230, 213,
	271, 474, 493, 497, 212, 555, 491, 333, 195, 0,
	332, 270, 319, 324, 256, 250, 194, 321, 254, 249,
	242, 221, 556, 234, 282, 248, 283, 235, 260, 259,
	261, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 0, 335, 0, 0, 539, 0, 0, 0,
	308, 0, 0, 243, 0, 0, 0, 492, 0, 294,
	276, 552, 440, 0, 292, 246, 320, 284, 326, 310,
	334, 288, 285, 186, 311, 215, 257, 197, 199, 211,
	218, 220, 222, 223, 266, 267, 279, 299, 313, 314,
	315, 214, 207, 293, 208, 232, 209, 187, 301, 210,
	189, 280, 318, 0, 228, 289, 253, 190, 252, 281,
	317, 316, 198, 342, 348, 349, 353, 0, 354, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 347, 226, 183, 184, 330,
	537, 272, 0, 0, 551, 532, 534, 535, 538, 542,
	543, 544, 545, 546, 548, 550, 554, 297, 0, 0,
	0, 0, 0, 237, 278, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	328, 340, 357, 360, 0, 0, 0, 188, 359, 94,
	2558, 0, 0, 0, 2559, 0, 553, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 496, 262, 263, 264,
	265, 540, 0, 205, 358, 287, 1360, 1360, 1360, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 352, 225, 231, 0, 233, 204, 277, 227,
	337, 240, 0, 363, 0, 0, 0, 0, 269, 236,
	302, 241, 247, 290, 336, 275, 295, 202, 327, 303,
	251, 0, 0, 562, 536, 561, 563, 564, 560, 565,
	566, 547, 459, 0, 500, 558, 557, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 245, 0, 286, 224, 525, 505, 506,
	507, 457, 508, 503, 504, 526, 498, 522, 523, 482,
	501, 509, 521, 510, 524, 527, 528, 567, 568, 516,
	569, 513, 529, 520, 519, 511, 499, 530, 531, 485,
	484, 514, 515, 502, 1918, 0, 0, 343, 344, 345,
	365, 329, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 800, 799, 809,
	810, 802, 803, 804, 805, 806, 807, 808, 801, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 800, 799,
	809, 810, 802, 803, 804, 805, 806, 807, 808, 801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1555, 1597,
	0, 0, 1544, 312, 1501, 1557, 1474, 1490, 1565, 1491,
	1492, 1530, 1453, 1512, 274, 1488, 94, 0, 94, 0,
	0, 0, 1547, 1445, 1477, 1478, 1447, 1484, 1448, 1475,
	1503, 219, 1473, 1515, 244, 1527, 1487, 1508, 1563, 0,
	0, 304, 258, 0, 0, 1506, 1549, 1509, 1535, 1500,
	1531, 1461, 1523, 1558, 1489, 0, 1528, 1559, 0, 0,
	0, 0, 708, 709, 710, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 1526, 1553, 1486, 0, 203,
	1556, 1507, 1529, 0, 0, 1446, 1524, 0, 1451, 1454,
	1564, 1551, 1481, 1482, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 1510, 1532, 1497, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 1479, 0, 1520, 0,
	0, 0, 1456, 1452, 0, 1502, 0, 0, 191, 309,
	325, 201, 300, 338, 206, 307, 196, 273, 296, 0,
	1596, 193, 323, 306, 255, 238, 239, 192, 1360, 291,
	217, 230, 213, 271, 0, 322, 350, 212, 341, 1455,
	333, 195, 1591, 332, 270, 319, 324, 256, 250, 194,
	321, 254, 249, 242, 221, 364, 234, 282, 248, 283,
	235, 260, 259, 261, 1575, 1576, 1577, 1578, 1579, 361,
	1587, 1588, 0, 1592, 1593, 1594, 1460, 0, 1480, 1533,
	0, 1444, 1618, 1542, 1550, 1499, 335, 1552, 1496, 1495,
	1582, 0, 1581, 308, 1583, 1584, 243, 1548, 1476, 1485,
	351, 1483, 294, 276, 1554, 1519, 1595, 292, 246, 320,
	284, 326, 310, 334, 288, 285, 186, 311, 215, 257,
	197, 199, 211, 218, 220, 222, 223, 266, 267, 279,
	299, 313, 314, 315, 214, 207, 293, 208, 232, 209,
	187, 301, 210, 189, 280, 318, 1580, 228, 289, 253,
	190, 252, 281, 317, 316, 198, 342, 348, 349, 353,
	0, 354, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 1589, 1201, 1590, 347, 226,
	183, 184, 330, 0, 272, 0, 1619, 1545, 1449, 1459,
	1457, 1493, 1521, 1522, 268, 346, 1537, 1541, 1538, 1566,
	297, 0, 0, 0, 0, 0, 237, 278, 1539, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1450, 0, 305, 328, 340, 357, 360, 1598, 1599, 1600,
	188, 359, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 331,
	1494, 1467, 1505, 339, 1470, 1468, 1536, 1469, 1525, 355,
	262, 263, 264, 265, 229, 0, 205, 358, 287, 1516,
	1498, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1517, 1609,
	1610, 1611, 1612, 1613, 1472, 352, 225, 231, 0, 233,
	204, 277, 227, 337, 240, 1543, 363, 1614, 1615, 1616,
	1617, 269, 236, 302, 241, 247, 290, 336, 275, 295,
	202, 327, 303, 251, 0, 0, 1466, 1471, 1465, 1513,
	1514, 1560, 1561, 1562, 1534, 1458, 1546, 0, 1462, 1464,
	1463, 1197, 0, 0, 0, 1194, 0, 0, 0, 1196,
	1193, 1195, 1199, 1200, 0, 0, 0, 1198, 0, 0,
	1540, 0, 0, 1518, 185, 0, 245, 1567, 286, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 1585, 1586,
	343, 344, 345, 365, 329, 455, 216, 1608, 0, 219,
	0, 0, 244, 0, 0, 0, 486, 0, 0, 304,
	258, 0, 0, 0, 0, 541, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 448, 0, 0,
	480, 518, 517, 467, 476, 0, 0, 200, 468, 0,
	475, 469, 473, 472, 470, 471, 0, 533, 0, 0,
	0, 0, 0, 0, 439, 452, 0, 456, 0, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1204, 1205, 1206, 1207, 1208, 1209, 1202, 1203, 0, 0,
	449, 450, 0, 0, 0, 0, 495, 0, 451, 0,
	0, 458, 477, 478, 0, 0, 191, 309, 325, 201,
	300, 338, 206, 307, 196, 273, 296, 0, 0, 193,
	323, 306, 255, 238, 239, 192, 0, 291, 217, 230,
	213, 271, 474, 493, 497, 212, 555, 491, 333, 195,
	0, 332, 270, 319, 324, 256, 250, 194, 321, 254,
	249, 242, 221, 556, 234, 282, 248, 283, 235, 260,
	259, 261, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 0, 0, 335, 0, 0, 539, 0, 0,
	0, 308, 0, 0, 243, 0, 0, 0, 492, 0,
	294, 276, 552, 440, 0, 292, 246, 320, 284, 326,
	310, 334, 288, 285, 186, 311, 215, 257, 197, 199,
	211, 218, 220, 222, 223, 266, 267, 279, 299, 313,
	314, 315, 214, 207, 293, 208, 232, 209, 187, 301,
	210, 189, 280, 318, 0, 228, 289, 253, 190, 252,
	281, 317, 316, 198, 342, 348, 349, 353, 0, 354,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 1222, 1221, 1223, 347, 226, 183, 184,
	330, 537, 272, 0, 0, 551, 532, 534, 535, 538,
	542, 543, 544, 545, 546, 548, 550, 554, 297, 0,
	0, 0, 0, 0, 237, 278, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 328, 340, 357, 360, 0, 0, 0, 188, 359,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 496, 262, 263,
	264, 265, 540, 0, 205, 358, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 225, 231, 0, 233, 204, 277,
	227, 337, 240, 0, 363, 0, 0, 0, 0, 269,
	236, 302, 241, 247, 290, 336, 275, 295, 202, 327,
	303, 251, 0, 0, 562, 536, 561, 563, 564, 560,
	565, 566, 547, 459, 0, 500, 558, 557, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 245, 0, 286, 224, 525, 505,
	506, 507, 457, 508, 503, 504, 526, 498, 522, 523,
	482, 501, 509, 521, 510, 524, 527, 528, 567, 568,
	516, 569, 513, 529, 520, 519, 511, 499, 530, 531,
	485, 484, 514, 515, 502, 312, 494, 0, 343, 344,
	345, 365, 329, 0, 216, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 0, 0, 219, 0, 0, 244, 0, 0, 0,
	486, 0, 0, 304, 258, 0, 0, 0, 0, 541,
	549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 448, 0, 0, 480, 518, 517, 467, 476, 0,
	0, 200, 468, 0, 475, 469, 473, 472, 470, 471,
	0, 533, 0, 0, 0, 0, 0, 0, 439, 452,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 450, 0, 0, 0, 0,
	495, 0, 451, 0, 0, 458, 477, 478, 0, 0,
	191, 309, 325, 201, 300, 338, 206, 307, 196, 273,
	296, 0, 0, 193, 323, 306, 255, 238, 239, 192,
	0, 291, 217, 230, 213, 271, 474, 493, 497, 212,
	555, 491, 333, 195, 0, 332, 270, 319, 324, 256,
	250, 194, 321, 254, 249, 242, 221, 556, 234, 282,
	248, 283, 235, 260, 259, 261, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 0, 335, 0,
	0, 539, 0, 0, 0, 308, 0, 0, 243, 0,
	0, 0, 492, 0, 294, 276, 552, 440, 0, 292,
	246, 320, 284, 326, 310, 334, 288, 285, 186, 311,
	215, 257, 197, 199, 211, 218, 220, 222, 223, 266,
	267, 279, 299, 313, 314, 315, 214, 207, 293, 208,
	232, 209, 187, 301, 210, 189, 280, 318, 0, 228,
	289, 253, 190, 252, 281, 317, 316, 198, 342, 348,
	349, 353, 0, 354, 0, 0, 0, 362, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	347, 226, 183, 184, 330, 537, 272, 0, 0, 551,
	532, 534, 535, 538, 542, 543, 544, 545, 546, 548,
	550, 554, 297, 0, 0, 0, 0, 0, 237, 278,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 328, 340, 357, 360, 0,
	0, 0, 188, 359, 0, 2558, 0, 0, 0, 2559,
	0, 553, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 496, 262, 263, 264, 265, 540, 0, 205, 358,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 225, 231,
	0, 233, 204, 277, 227, 337, 240, 0, 363, 0,
	0, 0, 0, 269, 236, 302, 241, 247, 290, 336,
	275, 295, 202, 327, 303, 251, 0, 0, 562, 536,
	561, 563, 564, 560, 565, 566, 547, 459, 0, 500,
	558, 557, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 245, 0,
	286, 224, 525, 505, 506, 507, 457, 508, 503, 504,
	526, 498, 522, 523, 482, 501, 509, 521, 510, 524,
	527, 528, 567, 568, 516, 569, 513, 529, 520, 519,
	511, 499, 530, 531, 485, 484, 514, 515, 502, 312,
	494, 0, 343, 344, 345, 365, 329, 0, 216, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 0, 0, 0, 219, 1285, 0,
	244, 0, 0, 0, 486, 0, 0, 304, 258, 0,
	0, 0, 0, 541, 549, 0, 0, 0, 0, 0,
	0, 0, 1379, 0, 0, 448, 0, 0, 480, 518,
	517, 467, 476, 0, 0, 200, 468, 0, 475, 469,
	473, 472, 470, 471, 0, 533, 0, 0, 0, 0,
	0, 0, 439, 452, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 450,
	0, 0, 0, 0, 495, 0, 451, 0, 0, 1380,
	477, 478, 0, 0, 191, 309, 325, 201, 300, 338,
	206, 307, 196, 273, 296, 0, 0, 193, 323, 306,
	255, 238, 239, 192, 0, 291, 217, 230, 213, 271,
	474, 493, 497, 212, 555, 491, 333, 195, 0, 332,
	270, 319, 324, 256, 250, 194, 321, 254, 249, 242,
	221, 556, 234, 282, 248, 283, 235, 260, 259, 261,
	0, 0, 0, 0, 0, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 0, 335, 0, 0, 539, 0, 0, 0, 308,
	0, 0, 243, 0, 0, 0, 492, 0, 294, 276,
	552, 440, 0, 292, 246, 320, 284, 326, 310, 334,
	288, 285, 186, 311, 215, 257, 197, 199, 211, 218,
	220, 222, 223, 266, 267, 279, 299, 313, 314, 315,
	214, 207, 293, 208, 232, 209, 187, 301, 210, 189,
	280, 318, 0, 228, 289, 253, 190, 252, 281, 317,
	316, 198, 342, 348, 349, 353, 0, 354, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 347, 226, 183, 184, 330, 537,
	272, 0, 0, 551, 532, 534, 535, 538, 542, 543,
	544, 545, 546, 548, 550, 554, 297, 0, 0, 0,
	0, 0, 237, 278, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 328,
	340, 357, 360, 0, 0, 0, 188, 359, 0, 0,
	0, 0, 0, 0, 0, 553, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 496, 262, 263, 264, 265,
	540, 0, 205, 358, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 225, 231, 0, 233, 204, 277, 227, 337,
	240, 0, 363, 0, 0, 0, 0, 269, 236, 302,
	241, 247, 290, 336, 275, 295, 202, 327, 303, 251,
	0, 0, 562, 536, 561, 563, 564, 560, 565, 566,
	547, 459, 0, 500, 558, 557, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 245, 0, 286, 224, 525, 505, 506, 507,
	457, 508, 503, 504, 526, 498, 522, 523, 482, 501,
	509, 521, 510, 524, 527, 528, 567, 568, 516, 569,
	513, 529, 520, 519, 511, 499, 530, 531, 485, 484,
	514, 515, 502, 135, 312, 494, 343, 344, 345, 365,
	329, 0, 216, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	0, 0, 219, 0, 0, 244, 0, 0, 0, 820,
	0, 0, 304, 258, 0, 0, 0, 0, 541, 549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	448, 0, 0, 480, 518, 517, 467, 476, 0, 0,
	200, 468, 0, 475, 469, 473, 472, 470, 471, 0,
	533, 0, 0, 0, 0, 0, 0, 439, 452, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 450, 0, 0, 0, 0, 495,
	0, 451, 0, 0, 458, 477, 478, 0, 0, 191,
	309, 325, 201, 300, 338, 206, 307, 196, 273, 296,
	0, 0, 193, 323, 306, 255, 238, 239, 192, 0,
	291, 217, 230, 213, 271, 474, 493, 497, 212, 555,
	491, 333, 195, 0, 332, 270, 319, 324, 256, 250,
	194, 321, 254, 249, 242, 221, 556, 234, 282, 248,
	283, 235, 260, 259, 261, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 0, 335, 0, 0,
	539, 0, 0, 0, 308, 0, 0, 243, 0, 0,
	0, 492, 0, 294, 276, 552, 440, 0, 292, 246,
	320, 284, 326, 310, 334, 288, 285, 186, 311, 215,
	257, 197, 199, 211, 218, 220, 222, 223, 266, 267,
	279, 299, 313, 314, 315, 214, 207, 293, 208, 232,
	209, 187, 301, 210, 189, 280, 318, 0, 228, 289,
	253, 190, 252, 281, 317, 316, 198, 342, 348, 349,
	353, 0, 354, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 347,
	226, 183, 184, 330, 537, 272, 0, 0, 551, 532,
	534, 535, 538, 542, 543, 544, 545, 546, 548, 550,
	554, 297, 0, 0, 0, 0, 0, 237, 278, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 328, 340, 357, 360, 0, 0,
	0, 188, 359, 0, 0, 0, 0, 0, 0, 0,
	553, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	496, 262, 263, 264, 265, 540, 0, 205, 358, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 225, 231, 0,
	233, 204, 277, 227, 337, 240, 0, 363, 0, 0,
	0, 0, 269, 236, 302, 241, 247, 290, 336, 275,
	295, 202, 327, 303, 251, 0, 0, 562, 536, 561,
	563, 564, 560, 565, 566, 547, 459, 0, 500, 558,
	557, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 245, 104, 286,
	224, 525, 505, 506, 507, 457, 508, 503, 504, 526,
	498, 522, 523, 482, 501, 509, 521, 510, 524, 527,
	528, 567, 568, 516, 569, 513, 529, 520, 519, 511,
	499, 530, 531, 485, 484, 514, 515, 502, 312, 494,
	0, 343, 344, 345, 365, 329, 0, 216, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 0, 0, 0, 219, 2813, 0, 244,
	0, 0, 0, 486, 0, 0, 304, 258, 0, 0,
	0, 0, 541, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 480, 518, 517,
	467, 476, 0, 0, 200, 468, 0, 475, 469, 473,
	472, 470, 471, 0, 533, 0, 0, 0, 0, 0,
	0, 439, 452, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 450, 0,
	0, 0, 0, 495, 0, 451, 0, 0, 458, 477,
	478, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 474,
	493, 497, 212, 555, 491, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	556, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 0,
	0, 335, 0, 0, 539, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 492, 0, 294, 276, 552,
	440, 0, 292, 246, 320, 284, 326, 310, 334, 288,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 348, 349, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 537, 272,
	0, 0, 551, 532, 534, 535, 538, 542, 543, 544,
	545, 546, 548, 550, 554, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 496, 262, 263, 264, 265, 540,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 0, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 0, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	0, 562, 536, 561, 563, 564, 560, 565, 566, 547,
	459, 0, 500, 558, 557, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 245, 0, 286, 224, 525, 505, 506, 507, 457,
	508, 503, 504, 526, 498, 522, 523, 482, 501, 509,
	521, 510, 524, 527, 528, 567, 568, 516, 569, 513,
	529, 520, 519, 511, 499, 530, 531, 485, 484, 514,
	515, 502, 312, 494, 0, 343, 344, 345, 365, 329,
	0, 216, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 0, 0,
	219, 1285, 0, 244, 0, 0, 0, 486, 0, 0,
	304, 258, 0, 0, 0, 0, 541, 549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 480, 518, 517, 467, 476, 0, 0, 200, 468,
	0, 475, 469, 473, 472, 470, 471, 0, 533, 0,
	0, 0, 0, 0, 0, 439, 452, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 450, 0, 0, 0, 0, 495, 0, 451,
	0, 0, 458, 477, 478, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 474, 493, 497, 212, 555, 491, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 556, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 0, 335, 0, 0, 539, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 492,
	0, 294, 276, 552, 440, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 537, 272, 0, 0, 551, 532, 534, 535,
	538, 542, 543, 544, 545, 546, 548, 550, 554, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 553, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 496, 262,
	263, 264, 265, 540, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 562, 536, 561, 563, 564,
	560, 565, 566, 547, 459, 0, 500, 558, 557, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 0, 286, 224, 525,
	505, 506, 507, 457, 508, 503, 504, 526, 498, 522,
	523, 482, 501, 509, 521, 510, 524, 527, 528, 567,
	568, 516, 569, 513, 529, 520, 519, 511, 499, 530,
	531, 485, 484, 514, 515, 502, 312, 494, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 0, 0, 0, 219, 0, 0, 244, 0, 0,
	0, 486, 0, 0, 304, 258, 0, 0, 0, 0,
	541, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 480, 518, 517, 467, 476,
	0, 0, 200, 468, 0, 475, 469, 473, 472, 470,
	471, 0, 533, 0, 0, 0, 0, 0, 0, 439,
	452, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 450, 1059, 0, 0,
	0, 495, 0, 451, 0, 0, 458, 477, 478, 0,
	0, 191, 309, 325, 201, 300, 338, 206, 307, 196,
	273, 296, 0, 0, 193, 323, 306, 255, 238, 239,
	192, 0, 291, 217, 230, 213, 271, 474, 493, 497,
	212, 555, 491, 333, 195, 0, 332, 270, 319, 324,
	256, 250, 194, 321, 254, 249, 242, 221, 556, 234,
	282, 248, 283, 235, 260, 259, 261, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 0, 0, 335,
	0, 0, 539, 0, 0, 0, 308, 0, 0, 243,
	0, 0, 0, 492, 0, 294, 276, 552, 440, 0,
	292, 246, 320, 284, 326, 310, 334, 288, 285, 186,
	311, 215, 257, 197, 199, 211, 218, 220, 222, 223,
	266, 267, 279, 299, 313, 314, 315, 214, 207, 293,
	208, 232, 209, 187, 301, 210, 189, 280, 318, 0,
	228, 289, 253, 190, 252, 281, 317, 316, 198, 342,
	348, 349, 353, 0, 354, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 347, 226, 183, 184, 330, 537, 272, 0, 0,
	551, 532, 534, 535, 538, 542, 543, 544, 545, 546,
	548, 550, 554, 297, 0, 0, 0, 0, 0, 237,
	278, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 328, 340, 357, 360,
	0, 0, 0, 188, 359, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 496, 262, 263, 264, 265, 540, 0, 205,
	358, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 225,
	231, 0, 233, 204, 277, 227, 337, 240, 0, 363,
	0, 0, 0, 0, 269, 236, 302, 241, 247, 290,
	336, 275, 295, 202, 327, 303, 251, 0, 0, 562,
	536, 561, 563, 564, 560, 565, 566, 547, 459, 0,
	500, 558, 557, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 245,
	0, 286, 224, 525, 505, 506, 507, 457, 508, 503,
	504, 526, 498, 522, 523, 482, 501, 509, 521, 510,
	524, 527, 528, 567, 568, 516, 569, 513, 529, 520,
	519, 511, 499, 530, 531, 485, 484, 514, 515, 502,
	0, 0, 0, 343, 344, 345, 365, 329, 0, 216,
	312, 494, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 455, 0, 0, 0, 219, 0,
	0, 244, 0, 0, 0, 486, 0, 0, 304, 258,
	0, 0, 0, 0, 541, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 480,
	518, 517, 467, 476, 0, 0, 200, 468, 0, 475,
	469, 473, 472, 470, 471, 0, 533, 0, 0, 0,
	0, 0, 0, 439, 452, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	450, 0, 0, 0, 0, 495, 0, 451, 0, 0,
	458, 477, 478, 0, 0, 191, 309, 325, 201, 300,
	338, 206, 307, 196, 273, 296, 0, 0, 193, 323,
	306, 255, 238, 239, 192, 0, 291, 217, 230, 213,
	271, 474, 493, 497, 212, 555, 491, 333, 195, 0,
	332, 270, 319, 324, 256, 250, 194, 321, 254, 249,
	242, 221, 556, 234, 282, 248, 283, 235, 260, 259,
	261, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 0, 335, 0, 0, 539, 0, 0, 0,
	308, 0, 0, 243, 0, 0, 0, 492, 0, 294,
	276, 552, 440, 0, 292, 246, 320, 284, 326, 310,
	334, 288, 285, 186, 311, 215, 257, 197, 199, 211,
	218, 220, 222, 223, 266, 267, 279, 299, 313, 314,
	315, 214, 207, 293, 208, 232, 209, 187, 301, 210,
	189, 280, 318, 0, 228, 289, 253, 190, 252, 281,
	317, 316, 198, 342, 348, 349, 353, 0, 354, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 347, 226, 183, 184, 330,
	537, 272, 0, 0, 551, 532, 534, 535, 538, 542,
	543, 544, 545, 546, 548, 550, 554, 297, 0, 0,
	0, 0, 0, 237, 278, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	328, 340, 357, 360, 0, 0, 0, 188, 359, 0,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 496, 262, 263, 264,
	265, 540, 0, 205, 358, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 225, 231, 0, 233, 204, 277, 227,
	337, 240, 0, 363, 0, 0, 0, 0, 269, 236,
	302, 241, 247, 290, 336, 275, 295, 202, 327, 303,
	251, 0, 0, 562, 536, 561, 563, 564, 560, 565,
	566, 547, 459, 0, 500, 558, 557, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 245, 0, 286, 224, 525, 505, 506,
	507, 457, 508, 503, 504, 526, 498, 522, 523, 482,
	501, 509, 521, 510, 524, 527, 528, 567, 568, 516,
	569, 513, 529, 520, 519, 511, 499, 530, 531, 485,
	484, 514, 515, 502, 312, 494, 0, 343, 344, 345,
	365, 329, 0, 216, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	0, 0, 219, 0, 0, 244, 0, 0, 0, 486,
	0, 0, 304, 258, 0, 0, 0, 0, 541, 549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	448, 0, 0, 480, 518, 517, 467, 476, 0, 0,
	200, 468, 0, 475, 469, 473, 472, 470, 471, 0,
	533, 0, 0, 0, 0, 0, 0, 439, 452, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 450, 0, 0, 0, 0, 495,
	0, 451, 0, 0, 458, 477, 478, 0, 0, 191,
	309, 325, 201, 300, 338, 206, 307, 196, 273, 296,
	0, 0, 193, 323, 306, 255, 238, 239, 192, 0,
	291, 217, 230, 213, 271, 474, 493, 497, 212, 555,
	491, 333, 195, 0, 332, 270, 319, 324, 256, 250,
	194, 321, 254, 249, 242, 221, 556, 234, 282, 248,
	283, 235, 260, 259, 261, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 0, 335, 0, 0,
	539, 0, 0, 0, 308, 0, 0, 243, 0, 0,
	0, 492, 0, 294, 276, 552, 440, 0, 292, 246,
	320, 284, 326, 310, 334, 288, 285, 186, 311, 215,
	257, 197, 199, 211, 218, 220, 222, 223, 266, 267,
	279, 299, 313, 314, 315, 214, 207, 293, 208, 232,
	209, 187, 301, 210, 189, 280, 318, 0, 228, 289,
	253, 190, 252, 281, 317, 316, 198, 342, 348, 349,
	353, 0, 354, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 347,
	226, 183, 184, 330, 537, 272, 0, 0, 551, 532,
	534, 535, 538, 542, 543, 544, 545, 546, 548, 550,
	554, 297, 0, 0, 0, 0, 0, 237, 278, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 328, 340, 357, 360, 0, 0,
	0, 188, 359, 0, 0, 0, 0, 0, 0, 0,
	553, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	496, 262, 263, 264, 265, 540, 0, 205, 358, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 225, 231, 0,
	233, 204, 277, 227, 337, 240, 0, 363, 0, 0,
	0, 0, 269, 236, 302, 241, 247, 290, 336, 275,
	295, 202, 327, 303, 251, 0, 0, 562, 536, 561,
	563, 564, 560, 565, 566, 547, 459, 0, 500, 558,
	557, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 245, 0, 286,
	224, 525, 505, 506, 507, 457, 508, 503, 504, 526,
	498, 522, 523, 482, 501, 509, 521, 510, 524, 527,
	528, 567, 568, 516, 569, 513, 529, 520, 519, 511,
	499, 530, 531, 485, 484, 514, 515, 502, 312, 494,
	0, 343, 344, 345, 365, 329, 0, 216, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 1143, 0,
	0, 0, 455, 0, 0, 0, 219, 0, 0, 244,
	0, 0, 0, 486, 0, 0, 304, 258, 0, 0,
	0, 0, 541, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 480, 518, 517,
	467, 476, 0, 0, 200, 468, 0, 475, 469, 473,
	472, 470, 471, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 450, 0,
	0, 0, 0, 495, 0, 451, 0, 0, 458, 477,
	478, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 474,
	493, 497, 212, 555, 491, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	556, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 0,
	0, 335, 0, 0, 539, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 492, 0, 294, 276, 552,
	0, 0, 292, 246, 320, 284, 326, 310, 334, 288,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 1144, 1145, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 537, 272,
	0, 0, 551, 532, 534, 535, 538, 542, 543, 544,
	545, 546, 548, 550, 554, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 496, 262, 263, 264, 265, 540,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 0, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 0, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	0, 562, 536, 561, 563, 564, 560, 565, 566, 547,
	459, 0, 500, 558, 557, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 245, 0, 286, 224, 525, 505, 506, 507, 457,
	508, 503, 504, 526, 498, 522, 523, 482, 501, 509,
	521, 510, 524, 527, 528, 567, 568, 516, 569, 513,
	529, 520, 519, 511, 499, 530, 531, 485, 484, 514,
	515, 502, 312, 494, 0, 343, 344, 345, 365, 329,
	0, 216, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 486, 0, 0,
	304, 258, 0, 0, 0, 0, 541, 549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 518, 517, 467, 476, 0, 0, 200, 468,
	0, 475, 469, 473, 472, 470, 471, 0, 533, 0,
	0, 0, 0, 0, 0, 439, 452, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 450, 0, 0, 0, 0, 495, 0, 451,
	0, 0, 458, 477, 478, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 474, 493, 497, 212, 555, 491, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 556, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 0, 335, 0, 0, 539, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 492,
	0, 294, 276, 552, 440, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 537, 272, 0, 0, 551, 532, 534, 535,
	538, 542, 543, 544, 545, 546, 548, 550, 554, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 553, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 496, 262,
	263, 264, 265, 540, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 562, 536, 561, 563, 564,
	560, 565, 566, 547, 459, 0, 500, 558, 557, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 0, 286, 224, 525,
	505, 506, 507, 457, 508, 503, 504, 526, 498, 522,
	523, 482, 501, 509, 521, 510, 524, 527, 528, 567,
	568, 516, 569, 513, 529, 520, 519, 511, 499, 530,
	531, 485, 484, 514, 515, 502, 312, 494, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 0, 0, 0, 219, 0, 0, 244, 0, 0,
	0, 486, 0, 0, 304, 258, 0, 0, 0, 0,
	541, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 480, 518, 517, 467, 476,
	0, 0, 200, 468, 0, 475, 469, 473, 472, 470,
	471, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	452, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 450, 0, 0, 0,
	0, 495, 0, 451, 0, 0, 458, 477, 478, 0,
	0, 191, 309, 325, 201, 300, 338, 206, 307, 196,
	273, 296, 0, 0, 193, 323, 306, 255, 238, 239,
	192, 0, 291, 217, 230, 213, 271, 474, 493, 497,
	212, 555, 491, 333, 195, 0, 332, 270, 319, 324,
	256, 250, 194, 321, 254, 249, 242, 221, 556, 234,
	282, 248, 283, 235, 260, 259, 261, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 0, 0, 335,
	0, 0, 539, 0, 0, 0, 308, 0, 0, 243,
	0, 0, 0, 492, 0, 294, 276, 552, 0, 0,
	292, 246, 320, 284, 326, 310, 334, 288, 285, 186,
	311, 215, 257, 197, 199, 211, 218, 220, 222, 223,
	266, 267, 279, 299, 313, 314, 315, 214, 207, 293,
	208, 232, 209, 187, 301, 210, 189, 280, 318, 0,
	228, 289, 253, 190, 252, 281, 317, 316, 198, 342,
	348, 349, 353, 0, 354, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 347, 226, 183, 184, 330, 537, 272, 0, 0,
	551, 532, 534, 535, 538, 542, 543, 544, 545, 546,
	548, 550, 554, 297, 0, 0, 0, 0, 0, 237,
	278, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 328, 340, 357, 360,
	0, 0, 0, 188, 359, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 496, 262, 263, 264, 265, 540, 0, 205,
	358, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 225,
	231, 0, 233, 204, 277, 227, 337, 240, 0, 363,
	0, 0, 0, 0, 269, 236, 302, 241, 247, 290,
	336, 275, 295, 202, 327, 303, 251, 0, 0, 562,
	536, 561, 563, 564, 560, 565, 566, 547, 459, 0,
	500, 558, 557, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 245,
	0, 286, 224, 525, 505, 506, 507, 457, 508, 503,
	504, 526, 498, 522, 523, 482, 501, 509, 521, 510,
	524, 527, 528, 567, 568, 516, 569, 513, 529, 520,
	519, 511, 499, 530, 531, 485, 484, 514, 515, 502,
	0, 0, 0, 343, 344, 345, 365, 329, 0, 216,
	135, 312, 38, 123, 103, 0, 0, 0, 0, 0,
	0, 0, 274, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 304,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 309, 325, 201,
	300, 338, 206, 307, 196, 273, 296, 0, 0, 193,
	323, 306, 255, 238, 239, 192, 0, 291, 217, 230,
	213, 271, 0, 322, 350, 212, 341, 0, 333, 195,
	0, 332, 270, 319, 324, 256, 250, 194, 321, 254,
	249, 242, 221, 364, 234, 282, 248, 283, 235, 260,
	259, 261, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 243, 0, 0, 0, 351, 0,
	294, 276, 0, 0, 0, 292, 246, 320, 284, 326,
	310, 334, 288, 285, 186, 311, 215, 257, 197, 199,
	211, 218, 220, 222, 223, 266, 267, 279, 299, 313,
	314, 315, 214, 207, 293, 208, 232, 209, 187, 301,
	210, 189, 280, 318, 0, 228, 289, 253, 190, 252,
	281, 317, 316, 198, 342, 348, 349, 353, 0, 354,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 347, 226, 183, 184,
	330, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 346, 0, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 237, 278, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 328, 340, 357, 360, 0, 0, 0, 188, 359,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 355, 262, 263,
	264, 265, 376, 378, 205, 358, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 225, 231, 0, 233, 204, 277,
	227, 337, 240, 0, 363, 0, 0, 0, 0, 269,
	236, 302, 241, 247, 290, 336, 275, 295, 202, 327,
	303, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 245, 104, 286, 224, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	0, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 312, 0, 0, 343, 344,
	345, 365, 329, 0, 216, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 896, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 304, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 884, 0, 0, 0, 0,
	191, 309, 325, 201, 300, 338, 206, 307, 196, 273,
	296, 0, 0, 1757, 1759, 1760, 1761, 1762, 1763, 1764,
	0, 1768, 1765, 1766, 1767, 271, 0, 1752, 1753, 1754,
	1755, 882, 1738, 1758, 0, 1739, 270, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1756, 282,
	248, 283, 235, 260, 259, 261, 907, 909, 911, 913,
	916, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 243, 0,
	0, 0, 1751, 0, 294, 276, 0, 0, 0, 292,
	246, 320, 284, 326, 310, 334, 288, 285, 186, 311,
	215, 257, 197, 199, 211, 218, 220, 222, 223, 266,
	267, 279, 299, 313, 314, 315, 214, 207, 293, 208,
	232, 209, 187, 301, 210, 189, 280, 318, 0, 228,
	289, 253, 190, 252, 281, 317, 316, 198, 342, 348,
	349, 353, 0, 354, 0, 0, 0, 362, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	347, 226, 183, 184, 330, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 346, 0, 0,
	0, 0, 297, 0, 0, 0, 0, 0, 237, 278,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 328, 340, 357, 360, 0,
	0, 0, 188, 359, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 355, 262, 263, 264, 265, 229, 0, 205, 358,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 225, 231,
	0, 233, 204, 277, 227, 337, 240, 0, 363, 0,
	0, 0, 0, 269, 236, 302, 241, 247, 290, 336,
	275, 295, 202, 327, 303, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 906, 245, 0,
	286, 224, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 0, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 312,
	0, 0, 343, 344, 345, 365, 329, 0, 216, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 304, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 2213, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 309, 325, 201, 300, 338,
	206, 307, 196, 273, 296, 0, 0, 193, 323, 306,
	255, 238, 239, 192, 0, 291, 217, 230, 213, 271,
	0, 322, 350, 212, 341, 0, 333, 195, 0, 332,
	270, 319, 324, 256, 250, 194, 321, 254, 249, 242,
	221, 364, 234, 282, 248, 283, 235, 260, 259, 261,
	0, 0, 0, 0, 0, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 335, 0, 0, 0, 2210, 0, 2209, 308,
	2211, 2214, 243, 0, 0, 0, 351, 0, 294, 276,
	0, 0, 0, 292, 246, 320, 284, 326, 310, 334,
	288, 285, 186, 311, 215, 257, 197, 199, 211, 218,
	220, 222, 223, 266, 267, 279, 299, 313, 314, 315,
	214, 207, 293, 208, 232, 209, 187, 301, 210, 189,
	280, 318, 2215, 228, 289, 253, 190, 252, 281, 317,
	316, 198, 342, 348, 349, 353, 0, 354, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 347, 226, 183, 184, 330, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 346, 0, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 237, 278, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 328,
	340, 357, 360, 0, 0, 0, 188, 359, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 355, 262, 263, 264, 265,
	229, 0, 205, 358, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 225, 231, 0, 233, 204, 277, 227, 337,
	240, 0, 363, 0, 0, 0, 0, 269, 236, 302,
	241, 247, 290, 336, 275, 295, 202, 327, 303, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 245, 0, 286, 224, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 0, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 312, 0, 0, 343, 344, 345, 365,
	329, 0, 216, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 219, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 304, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 1410, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 786, 787, 788, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 309,
	325, 201, 300, 338, 206, 307, 196, 273, 296, 0,
	0, 193, 323, 306, 255, 238, 239, 192, 0, 291,
	217, 230, 213, 271, 0, 322, 350, 212, 341, 0,
	333, 195, 0, 332, 270, 319, 324, 256, 250, 194,
	321, 254, 249, 242, 221, 364, 234, 282, 248, 283,
	235, 260, 259, 261, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 243, 0, 0, 0,
	351, 0, 294, 276, 0, 0, 0, 292, 246, 320,
	284, 326, 310, 334, 288, 285, 186, 311, 215, 257,
	197, 199, 211, 218, 220, 222, 223, 266, 267, 279,
	299, 313, 314, 315, 214, 207, 293, 208, 232, 209,
	187, 301, 210, 189, 280, 318, 0, 228, 289, 253,
	190, 252, 281, 317, 316, 198, 342, 348, 349, 353,
	0, 354, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 347, 226,
	183, 184, 330, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 346, 0, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 237, 278, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 328, 340, 357, 360, 0, 0, 0,
	188, 359, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 355,
	262, 263, 264, 265, 229, 0, 205, 358, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 352, 225, 231, 0, 233,
	204, 277, 227, 337, 240, 0, 363, 0, 0, 0,
	0, 269, 236, 302, 241, 247, 290, 336, 275, 295,
	202, 327, 303, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 245, 0, 286, 224,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 0, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 312, 0, 0,
	343, 344, 345, 365, 329, 0, 216, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 664, 0, 244, 0,
	0, 0, 0, 0, 0, 304, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 672, 673, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 309, 325, 201, 300, 338, 206, 307,
	196, 273, 296, 0, 0, 193, 323, 306, 255, 238,
	239, 192, 0, 291, 217, 230, 213, 271, 0, 322,
	350, 212, 341, 648, 333, 195, 647, 332, 270, 319,
	324, 256, 250, 194, 321, 254, 249, 242, 221, 364,
	234, 282, 248, 283, 235, 260, 259, 261, 0, 0,
	0, 0, 0, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	243, 0, 0, 0, 351, 0, 294, 276, 0, 0,
	0, 292, 246, 320, 284, 326, 310, 334, 662, 285,
	186, 311, 215, 257, 197, 199, 211, 218, 220, 222,
	223, 266, 267, 279, 299, 313, 314, 315, 214, 207,
	293, 208, 232, 209, 187, 301, 210, 189, 280, 318,
	0, 228, 289, 253, 190, 252, 281, 317, 316, 198,
	342, 348, 349, 353, 0, 354, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 347, 226, 183, 184, 330, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 346,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	237, 278, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 328, 340, 357,
	360, 0, 0, 0, 188, 359, 0, 0, 0, 0,
	0, 0, 663, 331, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 666, 262, 263, 264, 265, 229, 0,
	205, 358, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	225, 231, 0, 233, 204, 277, 227, 337, 240, 0,
	363, 0, 0, 0, 0, 674, 669, 670, 241, 247,
	290, 336, 275, 295, 202, 327, 303, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	245, 0, 286, 224, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 0, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 135, 312, 0, 343, 344, 345, 365, 329, 0,
	216, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 92, 0, 0,
	304, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 1431,
	0, 143, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 0, 322, 350, 212, 341, 0, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 364, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 351,
	0, 294, 276, 0, 0, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 346, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 355, 262,
	263, 264, 265, 229, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 104, 286, 224, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 135, 312, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 244, 0,
	0, 0, 92, 0, 0, 304, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 1422, 0, 143, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 309, 325, 201, 300, 338, 206, 307,
	196, 273, 296, 0, 0, 193, 323, 306, 255, 238,
	239, 192, 0, 291, 217, 230, 213, 271, 0, 322,
	350, 212, 341, 0, 333, 195, 0, 332, 270, 319,
	324, 256, 250, 194, 321, 254, 249, 242, 221, 364,
	234, 282, 248, 283, 235, 260, 259, 261, 0, 0,
	0, 0, 0, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	243, 0, 0, 0, 351, 0, 294, 276, 0, 0,
	0, 292, 246, 320, 284, 326, 310, 334, 288, 285,
	186, 311, 215, 257, 197, 199, 211, 218, 220, 222,
	223, 266, 267, 279, 299, 313, 314, 315, 214, 207,
	293, 208, 232, 209, 187, 301, 210, 189, 280, 318,
	0, 228, 289, 253, 190, 252, 281, 317, 316, 198,
	342, 348, 349, 353, 0, 354, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 347, 226, 183, 184, 330, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 346,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	237, 278, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 328, 340, 357,
	360, 0, 0, 0, 188, 359, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 355, 262, 263, 264, 265, 229, 0,
	205, 358, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	225, 231, 0, 233, 204, 277, 227, 337, 240, 0,
	363, 0, 0, 0, 0, 269, 236, 302, 241, 247,
	290, 336, 275, 295, 202, 327, 303, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	245, 104, 286, 224, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 0, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 135, 312, 0, 343, 344, 345, 365, 329, 0,
	216, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 92, 0, 0,
	304, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 0, 322, 350, 212, 341, 0, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 364, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 351,
	0, 294, 276, 0, 0, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 346, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 355, 262,
	263, 264, 265, 229, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 104, 286, 224, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 312, 0, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 304, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 672, 673, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 309, 325, 201, 300, 338, 206, 307, 196,
	273, 296, 0, 0, 193, 323, 306, 255, 238, 239,
	192, 0, 291, 217, 230, 213, 271, 0, 322, 350,
	212, 341, 648, 333, 195, 647, 332, 270, 319, 324,
	256, 250, 194, 321, 254, 249, 242, 221, 364, 234,
	282, 248, 283, 235, 260, 259, 261, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 243,
	0, 0, 0, 351, 0, 294, 276, 0, 0, 0,
	292, 246, 320, 284, 326, 310, 334, 288, 285, 186,
	311, 215, 257, 197, 199, 211, 218, 220, 222, 223,
	266, 267, 279, 299, 313, 314, 315, 214, 207, 293,
	208, 232, 209, 187, 301, 210, 189, 280, 318, 0,
	228, 289, 253, 190, 252, 281, 317, 316, 198, 342,
	348, 349, 353, 0, 354, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 347, 226, 183, 184, 330, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 346, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 237,
	278, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 328, 340, 357, 360,
	0, 0, 0, 188, 359, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 355, 262, 263, 264, 265, 229, 0, 205,
	358, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 225,
	231, 0, 233, 204, 277, 227, 337, 240, 0, 363,
	0, 0, 0, 0, 674, 669, 670, 241, 247, 290,
	336, 275, 295, 202, 327, 303, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 245,
	0, 286, 224, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 0, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	312, 0, 0, 343, 344, 345, 365, 329, 0, 216,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 1038,
	0, 244, 0, 0, 0, 0, 0, 0, 304, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 1036, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 191, 309, 325, 201, 300,
	338, 206, 307, 196, 273, 296, 0, 0, 193, 323,
	306, 255, 238, 239, 192, 0, 291, 217, 230, 213,
	271, 0, 322, 350, 212, 341, 0, 333, 195, 0,
	332, 270, 319, 324, 256, 250, 194, 321, 254, 249,
	242, 221, 364, 234, 282, 248, 283, 235, 260, 259,
	261, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 243, 0, 0, 0, 351, 0, 294,
	276, 0, 0, 0, 292, 246, 320, 284, 326, 310,
	334, 288, 285, 186, 311, 215, 257, 197, 199, 211,
	218, 220, 222, 223, 266, 267, 279, 299, 313, 314,
	315, 214, 207, 293, 208, 232, 209, 187, 301, 210,
	189, 280, 318, 0, 228, 289, 253, 190, 252, 281,
	317, 316, 198, 342, 348, 349, 353, 0, 354, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 347, 226, 183, 184, 330,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 346, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 237, 278, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	328, 340, 357, 360, 0, 0, 0, 188, 359, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 355, 262, 263, 264,
	265, 229, 0, 205, 358, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 225, 231, 0, 233, 204, 277, 227,
	337, 240, 0, 363, 0, 0, 0, 0, 269, 236,
	302, 241, 247, 290, 336, 275, 295, 202, 327, 303,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 245, 0, 286, 224, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 0,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 312, 0, 0, 343, 344, 345,
	365, 329, 0, 216, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 1032, 0, 244, 0, 0, 0, 0,
	0, 0, 304, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 1036, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 191,
	309, 325, 201, 300, 338, 206, 307, 196, 273, 296,
	0, 0, 193, 323, 306, 255, 238, 239, 192, 0,
	291, 217, 230, 213, 271, 0, 322, 350, 212, 341,
	0, 333, 195, 0, 332, 270, 319, 324, 256, 250,
	194, 321, 254, 249, 242, 221, 364, 234, 282, 248,
	283, 235, 260, 259, 261, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 243, 0, 0,
	0, 351, 0, 294, 276, 0, 0, 0, 292, 246,
	320, 284, 326, 310, 334, 288, 285, 186, 311, 215,
	257, 197, 199, 211, 218, 220, 222, 223, 266, 267,
	279, 299, 313, 314, 315, 214, 207, 293, 208, 232,
	209, 187, 301, 210, 189, 280, 318, 0, 228, 289,
	253, 190, 252, 281, 317, 316, 198, 342, 348, 349,
	353, 0, 354, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 347,
	226, 183, 184, 330, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 346, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 237, 278, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 328, 340, 357, 360, 0, 0,
	0, 188, 359, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	355, 262, 263, 264, 265, 229, 0, 205, 358, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 225, 231, 0,
	233, 204, 277, 227, 337, 240, 0, 363, 0, 0,
	0, 0, 269, 236, 302, 241, 247, 290, 336, 275,
	295, 202, 327, 303, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 245, 0, 286,
	224, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 0, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 312, 0,
	0, 343, 344, 345, 365, 329, 0, 216, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 304, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2740, 0, 143, 518, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 0,
	322, 350, 212, 341, 0, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	364, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 351, 0, 294, 276, 0,
	0, 0, 292, 246, 320, 284, 326, 310, 334, 288,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 348, 349, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	346, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 355, 262, 263, 264, 265, 229,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 0, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 0, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 245, 0, 286, 224, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 0, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 312, 0, 0, 343, 344, 345, 365, 329,
	0, 216, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	304, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 1036, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 0, 322, 350, 212, 341, 0, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 364, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 351,
	0, 294, 276, 0, 0, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 346, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 355, 262,
	263, 264, 265, 229, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 0, 286, 224, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 312, 0, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 304, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 1036, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2318, 0, 0, 0,
	0, 191, 309, 325, 201, 300, 338, 206, 307, 196,
	273, 296, 0, 0, 193, 323, 306, 255, 238, 239,
	192, 0, 291, 217, 230, 213, 271, 0, 322, 350,
	212, 341, 0, 333, 195, 0, 332, 270, 319, 324,
	256, 250, 194, 321, 254, 249, 242, 221, 364, 234,
	282, 248, 283, 235, 260, 259, 261, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 243,
	0, 0, 0, 351, 0, 294, 276, 0, 0, 0,
	292, 246, 320, 284, 326, 310, 334, 288, 285, 186,
	311, 215, 257, 197, 199, 211, 218, 220, 222, 223,
	266, 267, 279, 299, 313, 314, 315, 214, 207, 293,
	208, 232, 209, 187, 301, 210, 189, 280, 318, 0,
	228, 289, 253, 190, 252, 281, 317, 316, 198, 342,
	348, 349, 353, 0, 354, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 347, 226, 183, 184, 330, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 346, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 237,
	278, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 328, 340, 357, 360,
	0, 0, 0, 188, 359, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 355, 262, 263, 264, 265, 229, 0, 205,
	358, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 225,
	231, 0, 233, 204, 277, 227, 337, 240, 0, 363,
	0, 0, 0, 0, 269, 236, 302, 241, 247, 290,
	336, 275, 295, 202, 327, 303, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 245,
	0, 286, 224, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 0, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	312, 0, 0, 343, 344, 345, 365, 329, 0, 216,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 1855,
	0, 244, 0, 0, 0, 0, 0, 0, 304, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 1036, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 309, 325, 201, 300,
	338, 206, 307, 196, 273, 296, 0, 0, 193, 323,
	306, 255, 238, 239, 192, 0, 291, 217, 230, 213,
	271, 0, 322, 350, 212, 341, 0, 333, 195, 0,
	332, 270, 319, 324, 256, 250, 194, 321, 254, 249,
	242, 221, 364, 234, 282, 248, 283, 235, 260, 259,
	261, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 243, 0, 0, 0, 351, 0, 294,
	276, 0, 0, 0, 292, 246, 320, 284, 326, 310,
	334, 288, 285, 186, 311, 215, 257, 197, 199, 211,
	218, 220, 222, 223, 266, 267, 279, 299, 313, 314,
	315, 214, 207, 293, 208, 232, 209, 187, 301, 210,
	189, 280, 318, 0, 228, 289, 253, 190, 252, 281,
	317, 316, 198, 342, 348, 349, 353, 0, 354, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 347, 226, 183, 184, 330,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 346, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 237, 278, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	328, 340, 357, 360, 0, 0, 0, 188, 359, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 355, 262, 263, 264,
	265, 229, 0, 205, 358, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 225, 231, 0, 233, 204, 277, 227,
	337, 240, 0, 363, 0, 0, 0, 0, 269, 236,
	302, 241, 247, 290, 336, 275, 295, 202, 327, 303,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 245, 0, 286, 224, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 0,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 312, 0, 0, 343, 344, 345,
	365, 329, 0, 216, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 304, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2805, 0, 143, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	309, 325, 201, 300, 338, 206, 307, 196, 273, 296,
	0, 0, 193, 323, 306, 255, 238, 239, 192, 0,
	291, 217, 230, 213, 271, 0, 322, 350, 212, 341,
	0, 333, 195, 0, 332, 270, 319, 324, 256, 250,
	194, 321, 254, 249, 242, 221, 364, 234, 282, 248,
	283, 235, 260, 259, 261, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 243, 0, 0,
	0, 351, 0, 294, 276, 0, 0, 0, 292, 246,
	320, 284, 326, 310, 334, 288, 285, 186, 311, 215,
	257, 197, 199, 211, 218, 220, 222, 223, 266, 267,
	279, 299, 313, 314, 315, 214, 207, 293, 208, 232,
	209, 187, 301, 210, 189, 280, 318, 0, 228, 289,
	253, 190, 252, 281, 317, 316, 198, 342, 348, 349,
	353, 0, 354, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 347,
	226, 183, 184, 330, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 346, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 237, 278, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 328, 340, 357, 360, 0, 0,
	0, 188, 359, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	355, 262, 263, 264, 265, 229, 0, 205, 358, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 225, 231, 0,
	233, 204, 277, 227, 337, 240, 0, 363, 0, 0,
	0, 0, 269, 236, 302, 241, 247, 290, 336, 275,
	295, 202, 327, 303, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 245, 0, 286,
	224, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 0, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 312, 0,
	0, 343, 344, 345, 365, 329, 0, 216, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 304, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 518, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 0,
	322, 350, 212, 341, 0, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	364, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 351, 0, 294, 276, 0,
	0, 0, 292, 246, 320, 284, 326, 310, 334, 288,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 348, 349, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	346, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 355, 262, 263, 264, 265, 229,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 0, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 0, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 245, 0, 286, 224, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 0, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 312, 0, 0, 343, 344, 345, 365, 329,
	0, 216, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	304, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2709, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 0, 322, 350, 212, 341, 0, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 364, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 351,
	0, 294, 276, 0, 0, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 346, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 355, 262,
	263, 264, 265, 229, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 0, 286, 224, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 312, 0, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 304, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2383, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 309, 325, 201, 300, 338, 206, 307, 196,
	273, 296, 0, 0, 193, 323, 306, 255, 238, 239,
	192, 0, 291, 217, 230, 213, 271, 0, 322, 350,
	212, 341, 0, 333, 195, 0, 332, 270, 319, 324,
	256, 250, 194, 321, 254, 249, 242, 221, 364, 234,
	282, 248, 283, 235, 260, 259, 261, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 243,
	0, 0, 0, 351, 0, 294, 276, 0, 0, 0,
	292, 246, 320, 284, 326, 310, 334, 288, 285, 186,
	311, 215, 257, 197, 199, 211, 218, 220, 222, 223,
	266, 267, 279, 299, 313, 314, 315, 214, 207, 293,
	208, 232, 209, 187, 301, 210, 189, 280, 318, 0,
	228, 289, 253, 190, 252, 281, 317, 316, 198, 342,
	348, 349, 353, 0, 354, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 347, 226, 183, 184, 330, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 346, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 237,
	278, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 328, 340, 357, 360,
	0, 0, 0, 188, 359, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 355, 262, 263, 264, 265, 229, 0, 205,
	358, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 225,
	231, 0, 233, 204, 277, 227, 337, 240, 0, 363,
	0, 0, 0, 0, 269, 236, 302, 241, 247, 290,
	336, 275, 295, 202, 327, 303, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 245,
	0, 286, 224, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 0, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	312, 0, 0, 343, 344, 345, 365, 329, 0, 216,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 304, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 309, 325, 201, 300,
	338, 206, 307, 196, 273, 296, 0, 0, 193, 323,
	306, 255, 238, 239, 192, 0, 291, 217, 230, 213,
	271, 0, 322, 350, 212, 341, 0, 333, 195, 0,
	332, 270, 319, 324, 256, 250, 194, 321, 254, 249,
	242, 221, 364, 234, 282, 248, 283, 235, 260, 259,
	261, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 2632, 0, 0,
	308, 0, 0, 243, 0, 0, 0, 351, 0, 294,
	276, 0, 0, 0, 292, 246, 320, 284, 326, 310,
	334, 288, 285, 186, 311, 215, 257, 197, 199, 211,
	218, 220, 222, 223, 266, 267, 279, 299, 313, 314,
	315, 214, 207, 293, 208, 232, 209, 187, 301, 210,
	189, 280, 318, 0, 228, 289, 253, 190, 252, 281,
	317, 316, 198, 342, 348, 349, 353, 0, 354, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 347, 226, 183, 184, 330,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 346, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 237, 278, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	328, 340, 357, 360, 0, 0, 0, 188, 359, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 355, 262, 263, 264,
	265, 229, 0, 205, 358, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 225, 231, 0, 233, 204, 277, 227,
	337, 240, 0, 363, 0, 0, 0, 0, 269, 236,
	302, 241, 247, 290, 336, 275, 295, 202, 327, 303,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 245, 0, 286, 224, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 0,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 312, 0, 0, 343, 344, 345,
	365, 329, 0, 216, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 304, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	309, 325, 201, 300, 338, 206, 307, 196, 273, 296,
	0, 0, 193, 323, 306, 255, 238, 239, 192, 0,
	291, 217, 230, 213, 271, 0, 322, 350, 212, 341,
	0, 333, 195, 0, 332, 270, 319, 324, 256, 250,
	194, 321, 254, 249, 242, 221, 364, 234, 282, 248,
	283, 235, 260, 259, 261, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 2452, 0, 0, 308, 0, 0, 243, 0, 0,
	0, 351, 0, 294, 276, 0, 0, 0, 292, 246,
	320, 284, 326, 310, 334, 288, 285, 186, 311, 215,
	257, 197, 199, 211, 218, 220, 222, 223, 266, 267,
	279, 299, 313, 314, 315, 214, 207, 293, 208, 232,
	209, 187, 301, 210, 189, 280, 318, 0, 228, 289,
	253, 190, 252, 281, 317, 316, 198, 342, 348, 349,
	353, 0, 354, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 347,
	226, 183, 184, 330, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 346, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 237, 278, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 328, 340, 357, 360, 0, 0,
	0, 188, 359, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	355, 262, 263, 264, 265, 229, 0, 205, 358, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 225, 231, 0,
	233, 204, 277, 227, 337, 240, 0, 363, 0, 0,
	0, 0, 269, 236, 302, 241, 247, 290, 336, 275,
	295, 202, 327, 303, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 245, 0, 286,
	224, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 0, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 312, 0,
	0, 343, 344, 345, 365, 329, 0, 216, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 304, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 0,
	322, 350, 212, 341, 0, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	364, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 351, 0, 294, 276, 0,
	0, 0, 292, 246, 320, 284, 326, 310, 334, 288,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 348, 349, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	346, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 355, 262, 263, 264, 265, 229,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 0, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 0, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 245, 0, 286, 224, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 0, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 312, 0, 0, 343, 344, 345, 365, 329,
	0, 216, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	304, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 0, 322, 350, 212, 341, 0, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 364, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 351,
	0, 294, 276, 0, 0, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 346, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 355, 262,
	263, 264, 265, 229, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 0, 286, 224, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 312, 0, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 304, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 309, 325, 201, 300, 338, 206, 307, 196,
	273, 296, 0, 0, 193, 323, 306, 255, 238, 239,
	192, 0, 291, 217, 230, 213, 271, 0, 322, 350,
	212, 341, 0, 333, 195, 0, 332, 270, 319, 324,
	256, 250, 194, 321, 254, 249, 242, 221, 364, 234,
	282, 248, 283, 235, 260, 259, 261, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 243,
	0, 0, 0, 351, 0, 294, 276, 0, 0, 0,
	292, 246, 320, 284, 326, 310, 334, 288, 285, 186,
	311, 215, 257, 197, 199, 211, 218, 220, 222, 223,
	266, 267, 279, 299, 313, 314, 315, 214, 207, 293,
	208, 232, 209, 187, 301, 210, 189, 280, 318, 0,
	228, 289, 253, 190, 252, 281, 317, 316, 198, 342,
	348, 349, 353, 0, 354, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 347, 226, 183, 184, 330, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 346, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 237,
	278, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 328, 340, 357, 360,
	0, 0, 0, 188, 359, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 355, 262, 263, 264, 265, 229, 0, 205,
	358, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 225,
	231, 0, 233, 204, 277, 227, 337, 240, 0, 363,
	0, 0, 0, 0, 269, 236, 302, 241, 247, 290,
	336, 275, 295, 202, 327, 303, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 245,
	0, 286, 224, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 0, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	312, 0, 0, 343, 344, 345, 365, 329, 0, 216,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 304, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 2180, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 309, 325, 201, 300,
	338, 206, 307, 196, 273, 296, 0, 0, 193, 323,
	306, 255, 238, 239, 192, 0, 291, 217, 230, 213,
	271, 0, 322, 350, 212, 341, 0, 333, 195, 0,
	332, 270, 319, 324, 256, 250, 194, 321, 254, 249,
	242, 221, 364, 234, 282, 248, 283, 235, 260, 259,
	261, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 243, 0, 0, 0, 351, 0, 294,
	276, 0, 0, 0, 292, 246, 320, 284, 326, 310,
	334, 288, 285, 186, 311, 215, 257, 197, 199, 211,
	218, 220, 222, 223, 266, 267, 279, 299, 313, 314,
	315, 214, 207, 293, 208, 232, 209, 187, 301, 210,
	189, 280, 318, 0, 228, 289, 253, 190, 252, 281,
	317, 316, 198, 342, 348, 349, 353, 0, 354, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 347, 226, 183, 184, 330,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 346, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 237, 278, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	328, 340, 357, 360, 0, 0, 0, 188, 359, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 355, 262, 263, 264,
	265, 229, 0, 205, 358, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 225, 231, 0, 233, 204, 277, 227,
	337, 240, 0, 363, 0, 0, 0, 0, 269, 236,
	302, 241, 247, 290, 336, 275, 295, 202, 327, 303,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 245, 0, 286, 224, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 0,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 312, 0, 0, 343, 344, 345,
	365, 329, 0, 216, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 304, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 1036, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	309, 325, 201, 300, 338, 206, 307, 196, 273, 296,
	0, 0, 193, 323, 306, 255, 238, 239, 192, 0,
	291, 217, 230, 213, 271, 0, 322, 350, 212, 341,
	0, 333, 195, 0, 332, 270, 319, 324, 256, 250,
	194, 321, 254, 249, 242, 221, 364, 234, 282, 248,
	283, 235, 260, 259, 261, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 243, 0, 0,
	0, 351, 0, 294, 276, 0, 0, 0, 292, 246,
	320, 284, 326, 310, 334, 288, 285, 186, 311, 215,
	257, 197, 199, 211, 218, 220, 222, 223, 266, 267,
	279, 299, 313, 314, 315, 214, 207, 293, 208, 232,
	209, 187, 301, 210, 189, 280, 318, 0, 228, 289,
	253, 190, 252, 281, 317, 316, 198, 342, 348, 349,
	353, 0, 354, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 347,
	226, 183, 184, 330, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 346, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 237, 278, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 328, 340, 357, 360, 0, 0,
	0, 188, 359, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	355, 262, 263, 264, 265, 229, 0, 205, 358, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 225, 231, 0,
	233, 204, 277, 227, 337, 240, 0, 363, 0, 0,
	0, 0, 269, 236, 302, 241, 247, 290, 336, 275,
	295, 202, 327, 303, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 245, 0, 286,
	224, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 0, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 312, 0,
	0, 343, 344, 345, 365, 329, 0, 216, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 304, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 0,
	322, 350, 212, 341, 0, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	364, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 351, 0, 294, 276, 0,
	0, 0, 292, 246, 320, 284, 326, 310, 334, 288,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 348, 349, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	346, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 355, 262, 263, 264, 265, 229,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 0, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 0, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 245, 0, 286, 224, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 0, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 312, 0, 0, 343, 344, 345, 365, 329,
	0, 216, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	304, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 1867, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 0, 322, 350, 212, 341, 0, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 364, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 351,
	0, 294, 276, 0, 0, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 346, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 355, 262,
	263, 264, 265, 229, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 0, 286, 224, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 0, 0, 0, 343,
	344, 345, 365, 329, 312, 216, 0, 0, 1788, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 304, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	309, 325, 201, 300, 338, 206, 307, 196, 273, 296,
	0, 0, 193, 323, 306, 255, 238, 239, 192, 0,
	291, 217, 230, 213, 271, 0, 322, 350, 212, 341,
	0, 333, 195, 0, 332, 270, 319, 324, 256, 250,
	194, 321, 254, 249, 242, 221, 364, 234, 282, 248,
	283, 235, 260, 259, 261, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 243, 0, 0,
	0, 351, 0, 294, 276, 0, 0, 0, 292, 246,
	320, 284, 326, 310, 334, 288, 285, 186, 311, 215,
	257, 197, 199, 211, 218, 220, 222, 223, 266, 267,
	279, 299, 313, 314, 315, 214, 207, 293, 208, 232,
	209, 187, 301, 210, 189, 280, 318, 0, 228, 289,
	253, 190, 252, 281, 317, 316, 198, 342, 348, 349,
	353, 0, 354, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 347,
	226, 183, 184, 330, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 346, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 237, 278, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 328, 340, 357, 360, 0, 0,
	0, 188, 359, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	355, 262, 263, 264, 265, 229, 0, 205, 358, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 225, 231, 0,
	233, 204, 277, 227, 337, 240, 0, 363, 0, 0,
	0, 0, 269, 236, 302, 241, 247, 290, 336, 275,
	295, 202, 327, 303, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 245, 0, 286,
	224, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 0, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 312, 0,
	0, 343, 344, 345, 365, 329, 0, 216, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 304, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	1036, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 0,
	322, 350, 212, 341, 0, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	364, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 351, 0, 294, 276, 0,
	0, 0, 292, 246, 320, 284, 326, 310, 334, 1320,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 348, 349, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	346, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 355, 262, 263, 264, 265, 229,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 0, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 0, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 245, 0, 286, 224, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 0, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 312, 0, 0, 343, 344, 345, 365, 329,
	0, 216, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	304, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 0, 322, 350, 212, 341, 0, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 364, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 351,
	0, 294, 276, 0, 0, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 211, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 346, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 355, 262,
	263, 264, 265, 229, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	0, 0, 0, 185, 0, 245, 0, 286, 224, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 312, 0, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 304, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 309, 325, 201, 300, 338, 206, 307, 196,
	273, 296, 0, 0, 193, 323, 306, 255, 238, 239,
	192, 0, 291, 217, 230, 213, 271, 0, 322, 350,
	212, 341, 0, 333, 195, 0, 332, 270, 319, 324,
	256, 250, 194, 321, 254, 249, 242, 221, 364, 234,
	282, 248, 283, 235, 260, 259, 261, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 243,
	0, 0, 0, 351, 0, 294, 276, 0, 0, 0,
	292, 246, 320, 284, 326, 310, 334, 394, 285, 186,
	311, 215, 257, 197, 199, 211, 218, 220, 222, 223,
	266, 267, 279, 299, 313, 314, 315, 214, 207, 293,
	208, 232, 209, 187, 301, 210, 189, 280, 318, 0,
	228, 289, 253, 190, 252, 281, 317, 316, 198, 342,
	348, 349, 353, 0, 354, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 347, 226, 183, 184, 330, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 346, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 237,
	278, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 328, 340, 357, 360,
	0, 0, 0, 188, 359, 0, 0, 0, 0, 0,
	0, 395, 331, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 355, 262, 263, 264, 265, 229, 0, 205,
	358, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 225,
	231, 0, 233, 204, 277, 227, 337, 240, 0, 363,
	0, 0, 0, 0, 269, 236, 302, 241, 247, 290,
	336, 275, 295, 202, 327, 303, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 245,
	0, 286, 224, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 0, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	312, 0, 0, 343, 344, 345, 365, 329, 0, 216,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 304, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 309, 325, 201, 300,
	338, 206, 307, 196, 273, 296, 0, 0, 193, 323,
	306, 255, 238, 239, 192, 0, 291, 217, 230, 213,
	271, 0, 322, 350, 212, 341, 0, 333, 195, 0,
	332, 270, 319, 324, 256, 250, 194, 321, 254, 249,
	242, 221, 364, 234, 282, 248, 283, 235, 260, 259,
	261, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 335, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 243, 0, 0, 0, 351, 0, 294,
	276, 0, 0, 0, 292, 246, 320, 284, 326, 310,
	334, 288, 285, 186, 311, 215, 257, 197, 199, 211,
	218, 220, 222, 223, 266, 267, 279, 299, 313, 314,
	315, 214, 207, 293, 208, 232, 209, 187, 301, 210,
	189, 280, 318, 0, 228, 289, 253, 190, 252, 281,
	317, 316, 198, 342, 348, 349, 353, 0, 354, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 347, 226, 183, 184, 330,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 346, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 237, 278, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	328, 340, 357, 360, 0, 0, 0, 188, 359, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 355, 262, 263, 264,
	265, 229, 0, 205, 358, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 225, 231, 0, 233, 204, 277, 227,
	337, 240, 0, 363, 0, 0, 0, 0, 269, 236,
	302, 241, 247, 290, 336, 275, 295, 202, 327, 303,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 245, 0, 286, 224, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 0,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 312, 0, 0, 343, 344, 345,
	365, 329, 0, 216, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 219, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 304, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	309, 325, 201, 300, 338, 206, 307, 196, 273, 296,
	0, 0, 193, 323, 306, 255, 238, 239, 192, 0,
	291, 217, 230, 213, 271, 0, 322, 350, 212, 341,
	0, 333, 195, 0, 332, 270, 319, 324, 256, 250,
	194, 321, 254, 249, 242, 221, 364, 234, 282, 248,
	283, 235, 260, 259, 261, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 243, 0, 0,
	0, 351, 0, 294, 276, 0, 0, 0, 292, 246,
	320, 284, 326, 310, 334, 288, 285, 186, 311, 215,
	257, 197, 199, 211, 218, 220, 222, 223, 266, 267,
	279, 299, 313, 314, 315, 214, 207, 293, 208, 232,
	209, 187, 301, 210, 189, 280, 318, 0, 228, 289,
	253, 190, 252, 281, 317, 316, 198, 342, 348, 349,
	353, 0, 354, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 347,
	226, 183, 184, 330, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 346, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 237, 278, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 328, 340, 357, 360, 0, 0,
	0, 188, 359, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	355, 262, 263, 264, 265, 229, 0, 205, 358, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 225, 231, 0,
	233, 204, 277, 227, 337, 240, 0, 363, 0, 0,
	0, 0, 269, 236, 302, 241, 247, 290, 336, 275,
	295, 202, 327, 303, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 245, 0, 286,
	224, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 0, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 312, 0,
	0, 343, 344, 345, 365, 329, 0, 216, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 304, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 0,
	322, 350, 212, 341, 0, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	364, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 351, 0, 294, 276, 0,
	0, 0, 292, 246, 320, 284, 326, 310, 334, 288,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 348, 349, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	346, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 355, 262, 263, 264, 265, 229,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 0, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 0, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 245, 0, 286, 224, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 0, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 312, 0, 0, 343, 344, 345, 365, 329,
	0, 216, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	304, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 309, 325,
	201, 300, 338, 206, 307, 196, 273, 296, 0, 0,
	193, 323, 306, 255, 238, 239, 192, 0, 291, 217,
	230, 213, 271, 0, 322, 350, 212, 341, 0, 333,
	195, 0, 332, 270, 319, 324, 256, 250, 194, 321,
	254, 249, 242, 221, 364, 234, 282, 248, 283, 235,
	260, 259, 261, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 243, 0, 0, 0, 351,
	0, 294, 276, 0, 0, 0, 292, 246, 320, 284,
	326, 310, 334, 288, 285, 186, 311, 215, 257, 197,
	199, 434, 218, 220, 222, 223, 266, 267, 279, 299,
	313, 314, 315, 214, 207, 293, 208, 232, 209, 187,
	301, 210, 189, 280, 318, 0, 228, 289, 253, 190,
	252, 281, 317, 316, 198, 342, 348, 349, 353, 0,
	354, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 347, 226, 183,
	184, 330, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 346, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 237, 278, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 328, 340, 357, 360, 0, 0, 0, 188,
	359, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 355, 262,
	263, 264, 265, 229, 0, 205, 358, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 225, 231, 0, 233, 204,
	277, 227, 337, 240, 0, 363, 0, 0, 0, 0,
	269, 236, 302, 241, 247, 290, 336, 275, 295, 202,
	327, 303, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 245, 0, 286, 224, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 312, 0, 0, 343,
	344, 345, 365, 329, 0, 216, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 219, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 304, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 708, 709, 710, 1836, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 309, 325, 201, 300, 338, 206, 307, 196,
	273, 296, 0, 0, 193, 323, 306, 255, 238, 239,
	192, 0, 291, 217, 230, 213, 271, 0, 322, 350,
	212, 341, 0, 333, 195, 0, 332, 270, 319, 324,
	256, 250, 194, 321, 254, 249, 242, 221, 364, 234,
	282, 248, 283, 235, 260, 259, 261, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 243,
	0, 0, 0, 351, 0, 294, 276, 0, 0, 0,
	292, 246, 320, 284, 326, 310, 334, 288, 285, 186,
	311, 215, 257, 197, 199, 211, 218, 220, 222, 223,
	266, 267, 279, 299, 313, 314, 315, 214, 207, 293,
	208, 232, 209, 187, 301, 210, 189, 280, 318, 0,
	228, 289, 253, 190, 252, 281, 317, 316, 198, 342,
	348, 349, 353, 0, 354, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 347, 226, 183, 184, 330, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 346, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 237,
	278, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 328, 340, 357, 360,
	0, 0, 0, 188, 359, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 355, 262, 263, 264, 265, 229, 0, 205,
	358, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 225,
	231, 0, 233, 204, 277, 227, 337, 240, 0, 363,
	0, 0, 0, 0, 269, 236, 302, 241, 247, 290,
	336, 275, 295, 202, 327, 303, 251, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 304, 258, 185, 0, 245,
	0, 286, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 708, 709, 710, 1836,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 344, 345, 365, 329, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 309, 325, 201, 300, 338, 206, 307,
	196, 273, 296, 0, 0, 193, 323, 306, 255, 238,
	239, 192, 0, 291, 217, 230, 213, 271, 0, 322,
	350, 212, 341, 0, 333, 195, 0, 332, 270, 319,
	324, 256, 250, 194, 321, 254, 249, 242, 221, 364,
	234, 282, 248, 283, 235, 260, 259, 261, 0, 0,
	0, 0, 0, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	243, 0, 0, 0, 351, 0, 294, 276, 0, 0,
	0, 292, 246, 320, 284, 326, 310, 334, 288, 285,
	186, 311, 215, 257, 197, 199, 211, 218, 220, 222,
	223, 266, 267, 279, 299, 313, 314, 315, 214, 207,
	293, 208, 232, 209, 187, 301, 210, 189, 280, 318,
	0, 228, 289, 253, 190, 252, 281, 317, 316, 198,
	342, 348, 349, 353, 0, 354, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 347, 226, 183, 184, 330, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 346,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	237, 278, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 328, 340, 357,
	360, 0, 0, 0, 188, 359, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 355, 262, 263, 264, 265, 229, 0,
	205, 358, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	225, 231, 0, 233, 204, 277, 227, 337, 240, 0,
	363, 0, 0, 0, 0, 269, 236, 302, 241, 247,
	290, 336, 275, 295, 202, 327, 303, 251, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 304, 258, 185, 0,
	245, 0, 286, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 709, 710,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 344, 345, 365, 329, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 309, 325, 201, 300, 338, 206,
	307, 196, 273, 296, 0, 0, 193, 323, 306, 255,
	238, 239, 192, 0, 291, 217, 230, 213, 271, 0,
	322, 350, 212, 341, 0, 333, 195, 0, 332, 270,
	319, 324, 256, 250, 194, 321, 254, 249, 242, 221,
	364, 234, 282, 248, 283, 235, 260, 259, 261, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 243, 0, 0, 0, 351, 0, 294, 276, 0,
	0, 0, 292, 246, 320, 284, 326, 310, 334, 288,
	285, 186, 311, 215, 257, 197, 199, 211, 218, 220,
	222, 223, 266, 267, 279, 299, 313, 314, 315, 214,
	207, 293, 208, 232, 209, 187, 301, 210, 189, 280,
	318, 0, 228, 289, 253, 190, 252, 281, 317, 316,
	198, 342, 348, 349, 353, 0, 354, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 347, 226, 183, 184, 330, 0, 272,
	0, 0, 0, 896, 0, 0, 0, 0, 0, 268,
	346, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 237, 278, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 328, 340,
	357, 360, 0, 0, 0, 188, 359, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 355, 262, 263, 264, 265, 229,
	0, 205, 358, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 225, 231, 896, 233, 204, 277, 227, 337, 240,
	0, 363, 0, 0, 884, 0, 269, 236, 302, 241,
	247, 290, 336, 275, 295, 202, 327, 303, 251, 0,
	614, 0, 904, 908, 910, 912, 914, 915, 917, 0,
	921, 918, 919, 920, 0, 0, 899, 900, 901, 902,
	882, 883, 905, 0, 885, 0, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 897, 903, 0, 185,
	0, 245, 0, 286, 224, 907, 909, 911, 913, 916,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 343, 344, 345, 365, 329,
	0, 216, 904, 908, 910, 912, 914, 915, 917, 0,
	921, 918, 919, 920, 0, 0, 899, 900, 901, 902,
	882, 883, 905, 0, 885, 0, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 897, 903, 0, 0,
	0, 0, 0, 0, 0, 907, 909, 911, 913, 916,
	0, 648, 0, 0, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 898, 786, 787, 788, 785, 0, 0, 633, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 1928, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 2829, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 2391, 0, 0,
	0, 0, 0, 616, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 906, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	642, 0, 0, 0, 2409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 629, 0, 631, 645,
	0, 0, 0, 628, 626, 625, 0, 630, 617, 618,
	619, 620, 621, 1197, 643, 644, 0, 1194, 1784, 0,
	0, 1196, 1193, 1195, 1199, 1200, 639, 640, 0, 1198,
	0, 0, 0, 2409, 0, 0, 906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2395, 0, 2391, 0, 0, 0, 0,
	0, 0, 0, 634, 2399, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2388, 0, 0, 0, 2390, 2392,
	2394, 0, 2396, 2397, 2398, 2400, 2401, 2402, 2404, 2405,
	2406, 2407, 0, 0, 2391, 0, 0, 0, 0, 0,
	0, 0, 414, 2482, 413, 420, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 418, 0, 419,
	423, 0, 0, 405, 2410, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 0, 0, 0, 0, 0, 0,
	0, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1204, 1205, 1206, 1207, 1208, 1209, 1202, 1203,
	0, 2408, 432, 0, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 413, 420, 410, 2387, 0,
	0, 2395, 0, 0, 0, 0, 0, 417, 418, 0,
	419, 423, 2399, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 0, 0, 2403, 0, 0,
	0, 0, 2388, 0, 2393, 0, 2390, 2392, 2394, 0,
	2396, 2397, 2398, 2400, 2401, 2402, 2404, 2405, 2406, 2407,
	2395, 0, 0, 432, 0, 0, 433, 0, 0, 0,
	0, 2399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2388, 2410, 0, 0, 2390, 2392, 2394, 0, 2396,
	2397, 2398, 2400, 2401, 2402, 2404, 2405, 2406, 2407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 408, 407, 2408,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 2410, 0, 0, 0, 0, 2387, 416, 0, 414,
	0, 413, 420, 410, 431, 0, 0, 0, 0, 0,
	0, 409, 0, 417, 418, 400, 419, 423, 0, 0,
	405, 0, 0, 0, 0, 2403, 0, 0, 2408, 0,
	428, 0, 2393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2387, 0, 406, 408, 407,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 2403, 431, 0, 0, 0, 0,
	0, 2393, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 415, 421, 0, 422, 424,
	0, 0, 425, 426, 427, 0, 0, 429, 430, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 415, 421, 0, 422,
	424, 0, 0, 425, 426, 427, 0, 0, 429, 430,
	0, 0, 0, 406, 408, 407, 0, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 415, 421, 0, 422, 424, 0, 0, 425,
	426, 427, 0, 0, 429, 430,
}

var yyPact = [...]int{
	217, -1000, -290, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -199, 26693, 26693,
	-1000, -1000, 1823, -1000, 26189, 10050, 27197, 197, 192, 27197,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 428, -1000, 25685, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 396, 29962, 27701,
	8023, 27197, -270, -1000, 2283, -133, -1000, -1000, -1000, -1000,
	-1000, -1000, 1995, 448, 25181, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 29454, 90, 448, 548, 566, 703, 703, 12066, -40,
	-41, 2283, 288, 147, -1000, 1035, 217, 29047, 1603, 366,
	27197, -1000, 1057, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 366, -1000, -1000, -1000,
	2283, 2283, -1000, 27197, 27197, 26, 1138, -1000, 278, 258,
	271, 1049, -1000, -1000, -1000, -1000, -1000, 2322, -1000, 27197,
	27197, 1999, 27197, -1000, 1439, 339, 30033, 2184, 982, 484,
	2037, -1000, -1000, 1977, -1000, 133, 152, 127, 314, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 121, -1000, 2247, -1000,
	-1000, 119, -1000, -1000, 108, -1000, -1000, -1000, -45, -1000,
	-1000, -1000, -1000, -1000, -134, -1000, -1000, 647, 1258, 8023,
	-1000, 1352, -1000, 2292, -1000, -1000, -1000, -1000, 5493, 9535,
	9535, 9535, 9535, -1000, -1000, 1834, 8023, 1976, 1828, 1967,
	-1000, -1000, -1000, -1000, 1048, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1599, 9031, -1000,
	1962, 1961, 1960, 1959, 1957, 1948, 1947, 1946, 1934, 1933,
	1760, 1931, 1598, 1595, 1930, 1929, 1927, 1594, 1760, 1760,
	1926, 1925, 1920, 1913, 1912, 1911, 1910, 1908, 1907, 1906,
	1902, 1900, 1894, 1870, 1869, 1862, 1860, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1437, -1000, 1042, 1009, -1000, 1852, 2169, 2259, 1789, 2301,
	2240, 2238, 2236, 2231, 1399, -1000, -1000, 27197, 27197, 393,
	393, 393, 393, 412, 393, 427, 417, 415, -1000, -1000,
	-1000, -1000, -1000, -1000, 461, -1000, -1000, -1000, -1000, 924,
	27197, -1000, 1807, 1092, 2254, 346, 345, 277, -1000, 1199,
	1199, 1199, 1092, 273, 338, 2259, 2259, -36, -78, 1092,
	1092, -78, 1092, 81, -1000, -1000, -1000, 1199, 340, 1199,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2234, 2221, 396,
	65, 27197, 396, 400, -1000, -149, -1000, -1000, 590, -1000,
	514, -1000, 1439, 333, 332, 961, 1203, -1000, 1110, 27197,
	27197, 27197, 1110, 1110, 15093, 14589, -1000, 27197, -1000, 2259,
	1789, -1000, 1740, 1761, 1722, 1789, 396, 396, 396, 396,
	396, 396, 396, 27197, 27197, 7005, 7005, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 302, -1000, -1000, -1000, -1000,
	-1000, 2170, 256, 1851, -1000, 27197, 264, 2259, 2169, 2259,
	-1000, -1000, 1040, 1397, 1593, -1000, -1000, 278, 1080, -1000,
	618, -1000, -1000, -1000, -1000, 27197, 247, -1000, -1000, 1568,
	1850, -1000, 397, 879, 904, -1000, 95, 30179, 22653, 1439,
	22653, 27197, -1000, -1000, -1000, -1000, -1000, -1000, -54, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 122, -1000, 8023, 8023, 8023, 8023, 8023, -1000,
	474, 8527, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9535,
	9535, 9535, 9535, 9535, 9535, 9535, 9535, 9535, 9535, 9535,
	9535, 1832, 1338, 9535, 9535, 9535, 9535, 1761, 2122, 935,
	182, -1000, -1000, -1000, -1000, -1000, 1106, 1258, 8023, 8023,
	8023, 27197, -1000, 29562, 8023, 8023, 3630, 8023, 2215, 3980,
	27197, 8023, -1000, 1719, 1717, -1000, -1000, 1255, 8023, -1000,
	-1000, 8023, 9535, 8023, -1000, -1000, -1000, 170, 2215, 2215,
	8023, 8023, 2215, 2215, 2215, 1185, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 27197, 2147, 89, -1000, -1000, -1000,
	1796, -1000, 1805, 1805, 1796, 1796, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1824, 1847, -1000, -1000, 1803,
	1803, 1803, 1796, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1819, 1819,
	1821, 1819, 27197, 2259, -270, 6501, -1000, -274, 2169, 8023,
	-1000, -1000, 8023, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1591, 2195, -1000, 1845, 1039, 27197, 1151, 27197, 22653,
	1439, 1425, 27197, 393, 393, 393, 400, -1000, 27197, 924,
	2194, 27197, 2312, 9535, 9535, 24677, 1199, 1092, -1000, 27197,
	-1000, -1000, -1000, 1199, 27197, 1199, 2312, 1199, -1000, -1000,
	-1000, 1092, 1092, -1000, -1000, -1000, -1000, 1199, 1199, -1000,
	-1000, -71, 2312, 2312, -89, -1000, 27197, 27197, 393, 27197,
	-1000, 27197, -1000, -1000, 27197, 27197, 27197, 2219, -1000, 22653,
	21141, -1000, -114, 559, 539, 533, -1000, -1000, 395, 388,
	14085, 347, 22653, 4988, -1000, -1000, 1110, 1110, 1110, 4988,
	4988, 1024, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 916,
	-1000, 107, 2169, -1000, -1000, -1000, -1000, -1000, 27197, 22653,
	1439, 27197, 27197, 27197, 29047, -1000, 1844, 854, -1000, -1000,
	11562, 1034, 854, 1576, 27197, 1569, 2036, 2132, -1000, 1835,
	13076, 27197, -1000, -1000, -271, -1000, 12571, 27197, 2169, -1000,
	2169, 3492, -1000, 2253, -1000, 278, 201, -1000, -1000, -1000,
	-1000, -1000, -1000, 1033, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 905, -1000, 27197, -1000, -1000, 95, 22653,
	1167, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 130, -1000,
	-1000, 164, -1000, 408, 50, 1074, -1000, -1000, 71, 149,
	446, 1258, -1000, 1221, 1221, 1157, -1000, 420, -1000, -1000,
	-1000, -1000, 1834, -1000, -1000, -1000, 1275, 1456, -1000, 1215,
	1215, 711, 711, 711, 711, 711, 1252, 1252, -1000, -1000,
	-1000, 5493, 1832, 9535, 9535, 9535, 9535, 372, 372, 2766,
	3302, -1000, 8023, 1148, -1000, 8023, 2101, 2066, 803, 1023,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1713, 647, 1707, 1840, 2321, 1693, 8023, -1000, -1000, 1474,
	7519, -1000, -1000, -1000, 1687, 1022, 1682, -1000, -1000, -1000,
	1675, 641, 1674, 1535, 1673, 902, 8023, 8023, 1073, 1061,
	8023, 8023, 8023, 8023, 1670, 8023, 8023, 8023, 8023, 8023,
	8023, 8023, 8023, -1000, 8023, 86, -1000, -1000, -1000, -1000,
	1395, -1000, 1388, -1000, -1000, -1000, 1564, 1564, -1000, 1387,
	-1000, -1000, -1000, -1000, 1374, -1000, -1000, 1365, -1000, -1000,
	-1000, -1000, 1060, -1000, 1258, -1000, 1562, -1000, 764, 882,
	-1000, 1447, -1000, -1000, 27197, 10554, 27197, 1807, 2183, 79,
	-1000, 852, -1000, 50, 704, 1998, 2145, 27197, 27197, 27197,
	24173, -1000, 1831, 1059, -1000, -1000, 8023, -1000, -1000, 1954,
	1439, 27197, 2312, -1000, -1000, -1000, 29047, -1000, -1000, -1000,
	27197, 2312, 2312, 1092, 1199, 1199, -1000, -1000, 1199, -1000,
	1019, -1000, 27197, -1000, -1000, 1807, 78, 2214, 151, 852,
	2200, 702, -1000, -1000, -1000, -1000, 28205, 28205, 13581, 28205,
	-1000, 1036, -1000, -1000, 547, 498, 528, -1000, -1000, 405,
	-1000, -1000, 704, -1000, -1000, -1000, 1829, 1136, -1000, -1000,
	1828, -1000, 4988, 4988, 4988, -1000, -1000, 17109, 27197, -1000,
	-135, -1000, -124, -1000, -1000, 877, 704, 2035, 874, -1000,
	874, -1000, 10554, 2312, 7005, -1000, 21141, -1000, -1000, 23661,
	-1000, 23157, 2312, -278, 834, -85, -1000, 2156, -271, 27197,
	27197, 1055, 165, -1000, 1054, -1000, 668, -1000, 1827, -1000,
	1044, 2124, 756, -1000, 1135, -1000, -1000, -1000, 1018, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	24, -1000, -1000, 27197, 1568, 1043, 1167, 743, -1000, 402,
	1017, 1016, -1000, 22653, 125, 22653, -1000, 22653, -1000, -1000,
	253, -1000, 27197, 2160, -1000, -1000, -1000, 1526, -296, -1000,
	-1000, -1000, -1000, -1000, 1037, -1000, 372, 372, 2766, 3281,
	-1000, 9535, -1000, 9535, 2054, 1076, -1000, 8023, 1227, 29333,
	-1000, 635, 16101, 27197, -1000, -1000, 8023, 8023, -1000, 2038,
	-1000, 8023, 8023, 1413, -1000, 27197, -1000, -1000, -1000, 16101,
	-1000, 9535, -1000, 8023, 708, 2026, -30, -30, 2018, 2012,
	1892, 1026, -30, 1872, 1813, 1756, 1711, 1681, 1672, 1667,
	1661, 1258, -1000, -1000, 1669, 1668, 1025, -1000, 1020, 1666,
	974, 965, 6501, -1000, -85, 8023, 8023, 8023, 2136, -1000,
	-1000, 99, 1664, 873, -1000, -1000, -1000, 29423, 1805, 1796,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1824,
	-1000, -1000, 1803, 1803, 1803, 1796, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1819, 1819, 1821, 1819, -1000,
	2190, -1000, -33, 1109, 404, 22653, 331, -1000, 2034, 242,
	-1000, 2145, -1000, 890, -1000, 1817, 1815, 1810, 27197, 847,
	-1000, 1015, 217, -1000, 27197, 1258, -1000, 1439, -1000, 1092,
	-1000, -1000, 2312, 1003, -1000, -1000, 2312, 1092, 1092, 1199,
	27197, -1000, 2187, -33, 1109, 150, 1133, 404, 27197, 21141,
	21141, 21141, 21141, -1000, 2062, 2061, -1000, 2095, 2074, 2113,
	27197, 21141, 1807, -1000, 28626, -1000, -1000, -1000, -1000, -1000,
	1761, 964, 2179, 545, 8023, -1000, -1000, -1000, 466, 22653,
	1555, 347, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27197, 27197, 1663, 2295, -1000, 832, -1000, -1000, 997, -1000,
	2295, -1000, 1362, 1553, 5, 13, 1210, 668, 756, 951,
	-1000, 165, 27197, 2090, 1806, -1000, 27197, -271, 6501, 270,
	-271, 27197, 6501, 3492, 1361, -1000, -1000, -1000, 2316, 22653,
	1439, 1077, 1101, -1000, 96, -1000, 120, 394, 1552, -1000,
	414, 97, -1000, 1128, 1526, -1000, -1000, -1000, 9535, -1000,
	-1000, -1000, -1000, 1258, 8023, 1662, -1000, 503, 503, 1656,
	-1000, 1796, 1805, -1000, 1796, 1803, 1796, 503, 503, 1653,
	-1000, 1459, 1655, -1000, 1635, 1627, 8023, -1000, 1647, 2842,
	849, -159, -30, -1000, 1802, -1000, -30, -30, -30, -30,
	-1000, -30, -30, -30, -30, -30, -30, -30, -30, -1000,
	-1000, -1000, 1550, -1000, -1000, -1000, 1360, -1000, 1358, -1000,
	5, 1258, 1258, -1000, -1000, 2128, 1536, 432, 10554, 2140,
	246, 1253, -1000, -1000, 22149, -1000, 352, -1000, -1000, -1000,
	458, 141, 1351, 358, -1000, 1477, 27197, -1000, -1000, -1000,
	-1000, -1000, 1109, 1109, 1109, 11058, 11058, 11058, 366, 725,
	987, 21141, 27197, -1000, 20637, 1636, -1000, 704, 2312, -1000,
	27197, -1000, 2312, 2312, 1092, -1000, 246, 1253, 22149, 1127,
	1534, 352, 869, -1000, 1122, 1996, 2033, 1996, -1000, -1000,
	-1000, -1000, 2060, -1000, 2029, -1000, -1000, 869, -1000, -1000,
	-1000, -1000, -1000, 545, -1000, 2252, 591, 591, 591, 1628,
	-1000, 743, 1620, -1000, -1000, -1000, -1000, -1000, 2307, 2300,
	21645, 2307, -1000, -278, -276, 18, 2298, 2297, 2333, 246,
	27197, 254, -1000, -271, 27197, -1000, -1000, 1619, 724, -271,
	-1000, 668, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1439,
	-1000, 118, -1000, -1000, -1000, -1000, -1000, -1000, 36, -1000,
	27197, -1000, 1526, 1525, 93, -1000, 1258, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8023, -1000, -1000, -1000, 1621, -1000, -1000, 8023,
	1617, 1520, -1000, 364, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1615, 1614, -276,
	-1000, -1000, -1000, 29423, -1000, 1220, -1000, -1000, 1512, 49,
	-1000, -1000, -1000, 1496, 1489, 1347, -1000, -1000, 1369, 592,
	66, -1000, -1000, -1000, -1000, -1000, -1000, 1801, 16101, 16605,
	1488, 1613, 723, -1000, -1000, -1000, 29423, 699, -1000, 27197,
	1201, 591, 393, 591, 1182, 1799, -1000, -1000, 1612, 1610,
	28205, 21141, 20637, 829, -1000, 985, -1000, -1000, -1000, 2312,
	-1000, -1000, 2312, -1000, -1000, 49, 1484, -1000, -1000, 2304,
	27197, 6501, -1000, -1000, 8023, 1798, -1000, 8023, -1000, -1000,
	-1000, -1000, -1000, 1797, 2158, -1000, -1000, -1000, -1000, -1000,
	-1000, 8023, 8023, -1000, -1000, -1000, -278, 1483, -1000, -1000,
	2296, 1475, 1415, 27197, -1000, -1000, -271, -1000, 668, 948,
	-1000, 668, 704, -1000, -1000, 165, -1000, -1000, -1000, 1616,
	-1000, 1609, -30, -1000, 2304, -1000, 2294, -1000, -1000, -278,
	-198, -1000, -1000, -1000, -1000, 232, -1000, -1000, 162, -1000,
	-1000, 1368, 392, -1000, 19125, -1000, -1000, -1000, -1000, -1000,
	29887, 11058, 1430, -1000, -1000, 27197, 27197, -1000, 27197, 27197,
	393, 8023, 122, 29887, 2312, 829, 985, -1000, -1000, 1070,
	-1000, -1000, -1000, -1000, 2259, -1000, -1000, 1258, 27197, 1258,
	20133, -1000, 2293, 2291, 1258, 647, -280, -1000, 1473, 15,
	-1000, -1000, 673, 668, -1000, -89, -1000, -1000, -1000, 76,
	8023, -280, 27197, 357, 1472, -1000, -1000, 155, -1000, -1000,
	947, -1000, 1796, 8023, 363, 29838, -1000, 1109, 1109, 906,
	1109, 1109, 1109, 1109, 310, 309, 1109, 1109, 1109, 1109,
	1109, 1109, 1109, 1109, 1109, 1109, 1109, 1109, 1109, 1109,
	1793, -1000, -1000, 1430, -1000, -1000, 1232, 9535, -1000, -1000,
	1470, 16605, 512, 537, 1792, -1000, 274, 2332, -1000, 1180,
	1164, -1000, 27197, -1000, 1791, 1464, 204, 1786, -1000, 1785,
	1778, 27197, 1601, -1000, -89, 363, 2304, -1000, -1000, 945,
	928, -1000, -1000, -1000, -1000, -1000, 1777, -1000, 2290, -282,
	-21, -4, 1573, -1000, 2859, -1000, -1000, -1000, 647, -1000,
	2186, -1000, -1000, 35, -1000, -1000, -1000, 19125, 2165, 1554,
	216, 2288, 29887, -1000, 1341, 1339, 1109, 1109, 1336, 1468,
	1463, 1461, 1109, 1109, 1333, 1460, 28626, 1305, 1291, 1282,
	1366, 1457, 671, 1364, 1346, 1344, 27197, 1773, 1443, -1000,
	-1000, 2766, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1277, 1768, -90, -1000, -1000, 1767, 19125,
	237, 237, 19125, 19125, 19125, 1763, 469, -1000, 216, 2259,
	-1000, -1000, 19629, 27197, 1415, -1000, 1455, 399, 7, -4,
	-1000, 2287, 14, 2286, 2284, -1000, -1000, 4484, -272, -18,
	287, 1453, -1000, 173, -1000, -1000, 2165, -1000, 2281, 241,
	-1000, -1000, -1000, 16101, 16101, -1000, -1000, -1000, -1000, 1452,
	1449, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 326, 27197, 927, -1000, 1115, 1559, 8023,
	1760, -194, 19125, 923, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 912, 908, 900, 19125, -1000, -1000, -1000, 272, -1000,
	-1000, -1000, -1000, 892, -1000, -1000, -1000, 1759, 1276, 18,
	8, 2280, -1000, 1415, 2279, 1415, 1415, 1149, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1109, 1444, 185, -1000, -1000,
	-1000, 18621, 249, 275, 239, -1000, 389, -1000, -1000, -1000,
	-1000, -1000, -1000, 323, 864, -1000, 1443, 1442, -1000, 1400,
	-1000, 2032, -1000, 57, 846, -1000, -1000, -1000, -1000, 830,
	-1000, -1000, 27197, 2210, 15597, -11, -1000, -1000, -1000, 1438,
	-1000, 1415, -1000, -1000, 4484, 1257, -1000, 1425, -1000, 27197,
	231, 1251, 9535, 1758, 9535, 1751, 255, 1750, -1000, -1000,
	-1000, -1000, -1000, 469, -1000, 2024, 2020, 2320, -1000, -1000,
	-1000, -1000, 173, 173, 173, 173, 114, -1000, -1000, 27197,
	-1000, 785, -1000, -1000, -1000, 968, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 783, 1747, 2278, -1000, 2734, 27197, 1952,
	27197, 1746, 1103, 9535, -1000, -1000, 2330, -1000, 2327, 546,
	546, -1000, 621, -1000, 1102, -1000, 18117, 27197, -1000, -1000,
	362, 265, -1000, 778, -1000, 749, 17613, 1250, 1159, -1000,
	-1000, -1000, 1304, 279, -1000, 27197, 5997, -1000, 963, 742,
	-1000, 1462, 224, -1000, -1000, -1000, 739, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1258, 27197, -1000, 362, 2078, -1000,
	1246, -1000, -1000, -1000, 29700, 479, -1000, -1000, 29700, 230,
	-1000, 353, 1743, -1000, -1000, 738, -1000, 1440, 532, 8023,
	-1000, 230, 29887, -1000, 8023, 701, -1000, 29887, 644, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 132, 2748, 221, 152, 149, 217, 2746, 2745, 2184,
	2183, 2744, 2741, 2739, 2738, 2737, 2736, 2735, 2734, 2732,
	2729, 2726, 2724, 2722, 2721, 2720, 2718, 2717, 2716, 2715,
	2709, 215, 2707, 2705, 2704, 2703, 2702, 2701, 2700, 2698,
	2697, 2696, 2694, 2690, 2689, 2688, 2686, 2685, 2684, 2683,
	2681, 2680, 2679, 2678, 2677, 2676, 2675, 146, 2674, 2182,
	2672, 2671, 2670, 2666, 2663, 2661, 187, 2660, 2659, 2658,
	2657, 2656, 2655, 2654, 2653, 2652, 2650, 2649, 2648, 2647,
	2646, 2645, 2644, 2643, 166, 2642, 2641, 162, 2638, 2637,
	2636, 2634, 205, 189, 62, 2633, 51, 96, 172, 224,
	1426, 226, 219, 165, 134, 71, 2632, 2205, 2631, 128,
	199, 125, 31, 2630, 151, 2629, 130, 44, 37, 211,
	116, 57, 139, 101, 2628, 190, 64, 86, 93, 2627,
	2626, 214, 168, 2624, 103, 2623, 2622, 2621, 2620, 179,
	108, 2619, 63, 2616, 79, 82, 100, 30, 2615, 2614,
	2612, 74, 2611, 2610, 2609, 2608, 156, 2604, 120, 54,
	2603, 2602, 2601, 60, 2600, 32, 2599, 49, 2597, 2596,
	2595, 2594, 65, 2593, 2592, 13, 15, 17, 2591, 14,
	1, 2590, 191, 131, 89, 119, 2589, 414, 2587, 2586,
	2585, 126, 2582, 392, 2579, 2578, 2576, 2572, 20, 2571,
	180, 56, 2570, 81, 106, 2569, 73, 178, 186, 2567,
	2565, 117, 58, 52, 112, 2563, 2562, 75, 192, 19,
	43, 0, 174, 41, 2558, 2557, 2554, 212, 2553, 200,
	175, 204, 107, 218, 144, 2552, 2551, 55, 2550, 135,
	76, 113, 18, 2549, 216, 2548, 115, 158, 2547, 184,
	2542, 136, 3, 114, 2541, 2537, 29, 248, 2536, 2532,
	2531, 140, 2529, 2528, 70, 138, 2527, 2526, 2525, 26,
	2524, 42, 25, 2523, 87, 2522, 213, 181, 148, 110,
	160, 145, 118, 194, 201, 68, 66, 2521, 1159, 124,
	84, 16, 2519, 198, 2518, 210, 193, 2517, 170, 2516,
	208, 365, 183, 2514, 161, 9, 48, 34, 2513, 10,
	2511, 88, 2509, 2508, 23, 2506, 27, 2505, 2504, 2502,
	2501, 6, 2500, 2498, 2493, 2, 4, 2492, 5, 182,
	98, 109, 2490, 154, 159, 2489, 2488, 80, 2487, 2486,
	2485, 237, 2483, 2482, 2480, 2479, 2477, 2476, 2475, 2474,
	2473, 67, 38, 2472, 2470, 2464, 2448, 77, 123, 2439,
	2438, 2435, 2434, 33, 155, 2432, 21, 2431, 24, 28,
	35, 2429, 104, 2427, 11, 171, 2426, 2425, 12, 2424,
	2423, 7, 8, 2421, 2420, 61, 2402, 53, 36, 72,
	83, 2400, 22, 164, 111, 2399, 2398, 207, 206, 197,
	2397, 142, 203, 220, 2393, 185, 2392, 2389, 2384, 2383,
	2379, 2376, 1197, 2375, 2372, 209, 59, 85, 99, 2371,
	2370, 2369, 69, 133, 102, 95, 177, 2368, 173, 2367,
	2366, 91, 2359, 2358, 2356, 2354, 2353, 169, 2352, 2348,
	2347, 202, 137, 2335,
}

//line mysql_sql.y:8487
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 436, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 90, 434, 434, 434, 435, 435,
	88, 88, 88, 77, 89, 384, 384, 383, 383, 382,
	382, 338, 338, 381, 381, 381, 380, 380, 380, 379,
	379, 378, 378, 377, 377, 375, 375, 376, 374, 373,
	373, 373, 371, 371, 371, 367, 367, 369, 368, 368,
	370, 362, 362, 365, 365, 363, 363, 363, 363, 366,
	361, 361, 361, 360, 360, 76, 76, 76, 290, 290,
	75, 75, 304, 304, 304, 304, 304, 302, 302, 302,
	302, 302, 302, 301, 301, 300, 300, 305, 305, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 67,
	67, 67, 67, 70, 70, 70, 71, 299, 299, 299,
	68, 69, 69, 289, 289, 294, 294, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 298,
	298, 298, 296, 296, 295, 295, 297, 297, 61, 61,
	61, 64, 63, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 62, 62, 62, 62, 62, 62, 58, 58,
	58, 58, 58, 57, 57, 59, 59, 286, 286, 285,
	72, 72, 73, 438, 438, 437, 439, 439, 439, 439,
	74, 80, 80, 80, 80, 80, 80, 80, 79, 79,
	82, 82, 81, 83, 66, 66, 66, 66, 66, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 408, 408,
	408, 410, 410, 225, 226, 440, 228, 224, 224, 224,
	404, 404, 405, 406, 407, 407, 407, 78, 7, 7,
	7, 7, 56, 54, 60, 60, 421, 421, 55, 428,
	428, 341, 341, 239, 239, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 344, 345, 235, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 38, 37, 37, 37, 275,
	275, 36, 441, 441, 208, 208, 45, 46, 47, 48,
	49, 50, 35, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 53, 53, 356, 356, 443, 443, 443, 51,
	52, 340, 340, 340, 43, 42, 41, 40, 40, 34,
	34, 33, 33, 39, 232, 232, 232, 234, 234, 230,
	442, 442, 316, 316, 233, 233, 32, 32, 32, 231,
	231, 207, 229, 229, 229, 8, 8, 6, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 18, 20, 283,
	283, 280, 19, 14, 13, 16, 12, 15, 17, 5,
	5, 5, 5, 9, 9, 10, 104, 104, 146, 146,
	416, 416, 412, 412, 413, 413, 413, 414, 414, 415,
	415, 84, 350, 350, 350, 350, 350, 350, 4, 126,
	126, 127, 127, 349, 349, 349, 349, 349, 349, 349,
	287, 287, 393, 393, 393, 394, 125, 125, 120, 120,
	351, 351, 253, 395, 395, 359, 359, 358, 358, 357,
	357, 123, 123, 124, 124, 107, 107, 93, 93, 364,
	364, 364, 364, 372, 372, 337, 337, 172, 172, 201,
	201, 202, 202, 97, 97, 98, 98, 98, 98, 98,
	98, 401, 401, 403, 403, 402, 122, 122, 118, 118,
	119, 119, 119, 117, 117, 116, 115, 115, 114, 112,
	112, 112, 113, 113, 113, 100, 100, 100, 99, 99,
	99, 99, 99, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 101, 101, 409, 409, 409,
	342, 342, 342, 347, 347, 184, 184, 185, 185, 183,
	183, 102, 102, 103, 103, 103, 103, 182, 182, 181,
	105, 105, 111, 110, 110, 106, 106, 106, 106, 192,
	192, 191, 191, 191, 191, 87, 91, 91, 92, 130,
	130, 190, 189, 189, 189, 129, 129, 128, 128, 121,
	121, 109, 109, 109, 109, 188, 108, 186, 433, 433,
	432, 432, 431, 429, 429, 429, 430, 430, 430, 430,
	386, 386, 386, 386, 386, 217, 217, 217, 223, 223,
	216, 216, 216, 216, 216, 227, 222, 222, 218, 218,
	219, 219, 219, 3, 3, 3, 3, 24, 24, 24,
	24, 24, 24, 30, 138, 139, 29, 131, 131, 132,
	132, 133, 133, 134, 135, 135, 135, 137, 136, 28,
	21, 417, 420, 418, 418, 422, 422, 422, 423, 423,
	423, 424, 424, 22, 419, 425, 425, 425, 284, 284,
	281, 282, 282, 279, 278, 278, 278, 427, 427, 426,
	426, 426, 220, 220, 23, 274, 274, 276, 277, 277,
	268, 268, 268, 268, 27, 272, 272, 273, 273, 273,
	273, 273, 269, 269, 271, 271, 267, 267, 267, 267,
	267, 26, 266, 266, 264, 264, 262, 262, 263, 263,
	261, 261, 261, 265, 265, 25, 25, 25, 95, 94,
	94, 94, 204, 204, 203, 203, 96, 343, 343, 306,
	306, 307, 307, 307, 310, 310, 322, 322, 323, 323,
	321, 321, 328, 328, 327, 327, 326, 326, 325, 325,
	324, 324, 324, 324, 319, 319, 318, 318, 308, 308,
	308, 308, 308, 309, 309, 309, 317, 317, 320, 320,
	163, 163, 164, 164, 164, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 391, 391, 392, 166, 166, 166,
	170, 170, 170, 170, 170, 170, 165, 165, 167, 167,
	147, 147, 145, 145, 140, 140, 141, 141, 142, 142,
	143, 143, 144, 144, 144, 144, 144, 144, 292, 292,
	389, 389, 390, 390, 385, 385, 385, 388, 388, 388,
	388, 388, 387, 387, 148, 199, 199, 199, 221, 221,
	221, 198, 198, 198, 162, 162, 161, 161, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 291, 291, 236, 236, 237, 237, 179,
	178, 178, 178, 178, 178, 176, 177, 175, 175, 175,
	175, 175, 174, 174, 173, 173, 173, 270, 270, 171,
	171, 169, 169, 169, 168, 168, 168, 329, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 245, 245, 250, 250, 400, 400, 399, 149,
	149, 149, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 158, 158, 158, 314, 314, 314, 314, 314, 315,
	315, 315, 312, 312, 313, 313, 254, 255, 255, 348,
	348, 311, 311, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	355, 355, 355, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 411, 411, 411, 396, 396,
	396, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	196, 196, 196, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 256, 256, 257, 257, 352,
	352, 352, 352, 352, 352, 353, 353, 354, 354, 354,
	354, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	243, 193, 193, 193, 258, 251, 251, 252, 252, 246,
	246, 246, 246, 246, 246, 246, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 247, 247,
	249, 249, 260, 260, 260, 259, 259, 259, 259, 259,
	259, 259, 160, 160, 160, 160, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 151, 151, 151,
	151, 155, 155, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 156, 156, 156,
	156, 154, 154, 154, 154, 154, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 85, 86, 86, 153, 200, 200, 330, 330,
	333, 333, 331, 331, 332, 334, 334, 334, 335, 335,
	335, 336, 336, 336, 339, 339, 206, 206, 206, 213,
	213, 205, 205, 214, 214, 215, 215, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 11, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 7, 7, 7, 8, 0, 4, 7, 0,
	3, 0, 2, 0, 1, 1, 1, 1, 4, 2,
	2, 3, 3, 4, 5, 3, 4, 4, 2, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 2, 5, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 3, 2, 4,
	4, 4, 4, 1, 1, 1, 3, 2, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 6, 7, 4,
	4, 7, 8, 3, 0, 2, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 6, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 0,
	4, 1, 3, 3, 1, 5, 6, 5, 5, 3,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 12, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 7,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 5, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 0, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 4, 6, 6, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 6, 8, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -436, -2, -1, -3, -88, -4, -84, -5, -6,
	-8, -65, -79, -81, -83, -82, -31, -7, -78, -57,
	-58, -61, -67, -72, -75, -76, -77, -89, -85, -86,
	-87, -97, -90, -24, -23, -22, -21, 397, 12, 442,
	-9, -10, -401, -11, 232, -224, -225, -226, -228, -440,
	-32, -33, -34, -40, -41, -42, -43, -51, -52, -53,
	-35, -36, -37, -38, -45, -46, -47, -48, -49, -50,
	-39, -55, -54, -60, -56, 208, -59, 61, -62, -63,
	-64, -68, -69, -70, -71, -73, -74, 328, 334, 387,
	524, 525, 46, -98, -100, 526, -25, -26, -27, -28,
	-29, -30, 204, 14, 475, -12, -15, -13, -16, -14,
	-19, -20, -18, -17, 227, 226, 37, 290, 291, 292,
	332, 225, 205, 13, 136, 137, 139, 140, 30, 41,
	310, -99, 67, 206, -101, 10, 528, 435, 527, -107,
	38, -145, -221, 70, -209, -212, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 445, 308, 309, 472, 244, 268, 358, 271,
	278, 136, 155, 149, 177, 169, 144, 248, 283, 249,
	77, 139, 428, 87, 408, 384, 142, 263, 265, 267,
	270, 250, 165, 160, 262, 246, 524, 158, 251, 39,
	252, 182, 253, 254, 477, 404, 307, 410, 275, 382,
	159, 405, 266, 407, 184, 188, 420, 334, 153, 154,
	412, 422, 181, 224, 42, 474, 236, 423, 186, 180,
	176, 431, 279, 277, 179, 152, 175, 247, 50, 190,
	189, 191, 378, 379, 380, 381, 255, 256, 322, 419,
	172, 161, 312, 145, 22, 426, 231, 409, 335, 257,
	272, 280, 185, 187, 238, 243, 476, 386, 242, 276,
	424, 157, 235, 264, 230, 427, 146, 328, 337, 258,
	140, 269, 421, 430, 49, 350, 151, 143, 221, 137,
	240, 245, 11, 259, 260, 261, 282, 281, 273, 173,
	237, 178, 163, 150, 174, 138, 239, 429, 351, 522,
	310, 367, 171, 168, 241, 214, 425, 411, 141, 371,
	352, 166, 284, 518, 519, 520, 323, 306, 285, 286,
	164, 228, 403, 287, 289, 377, 299, 353, 385, 359,
	354, 197, 293, 414, 183, 521, -107, -59, -10, -9,
	-99, -100, -145, 212, -229, 23, 382, -66, 383, 208,
	67, -221, -5, -4, -84, -57, -97, -227, -221, 290,
	290, -227, 212, -221, 242, 366, -341, 217, -301, -274,
	243, -300, -276, -303, -277, 31, 204, 206, 205, 239,
	14, 332, 213, 12, 10, 333, 225, 24, 25, 27,
	13, 334, 336, 28, 337, 340, 341, 342, 41, 345,
	346, 232, 70, 73, 250, -139, -221, -252, -246, 94,
	233, -248, -241, -242, -244, -381, -375, -240, 67, 120,
	121, 128, 95, -243, -329, 35, 97, 482, 131, 443,
	-194, -195, -196, -197, -221, -376, -374, 73, 78, 81,
	84, 85, 83, 82, 162, 80, 74, 132, 133, -100,
	70, -396, 490, -210, 511, 510, 46, -346, -354, 211,
	-352, 167, 228, 163, 12, 126, 377, 164, 487, 507,
	445, 491, 514, 484, 485, 479, 480, 481, 483, 492,
	494, 506, -355, 502, 512, 513, 500, 72, 71, 505,
	504, 493, 488, 489, 495, 478, 486, 496, 497, 503,
	508, 509, 316, 87, 317, 318, 435, 311, 319, 217,
	382, 55, 320, 321, 322, 323, 324, 442, 325, 56,
	326, 315, 232, 367, 327, 166, 183, 447, 446, 448,
	439, 436, 434, 437, 438, 440, 441, 498, 499, 501,
	-297, -295, -221, -91, -92, 516, -116, -117, -187, 19,
	6, 7, 8, 9, -434, 384, 476, 293, 329, 214,
	308, 367, 242, -268, -266, -343, 287, 283, 222, 221,
	88, 435, 211, 343, -412, -413, 201, 202, 203, -403,
	468, -402, -221, 318, 26, 212, 329, 414, 415, 416,
	417, 418, -44, -356, -340, 411, 410, -233, 409, 402,
	413, 404, 309, 204, 469, -206, 353, 385, 238, 432,
	433, 330, 386, 420, 421, 405, 87, 170, 167, 214,
	308, 435, 367, -412, 141, 138, -288, 141, 93, 146,
	145, -288, 242, 366, 40, -294, 377, -293, -295, 420,
	421, 431, 71, 72, 419, -206, 87, 403, 403, -117,
	-187, -116, -98, -100, -87, -401, 308, 367, 242, 213,
	212, 214, 435, 290, 329, -342, -409, 31, -347, 198,
	199, 200, 32, 33, -1, -222, -219, -212, 70, 71,
	72, 73, -123, 234, -145, 134, -123, -117, -116, -117,
	-145, -198, -221, 384, 103, -66, -66, 383, -404, -405,
	-406, -408, 208, 383, 382, 134, 15, -227, -227, 65,
	-145, -276, 242, -301, -274, 35, 64, 135, 215, 135,
	64, 67, 330, 308, 367, 331, 435, 212, 343, 214,
	242, 344, 308, 367, 212, 214, 435, 242, 308, 212,
	214, 367, 242, 344, 402, 403, 214, 26, 335, 338,
	339, 403, -360, 431, 135, 93, 90, 91, 92, -246,
	110, -259, 103, 104, 105, 106, 107, 108, 109, 117,
	116, 127, 120, 121, 122, 123, 124, 125, 126, 118,
	119, 113, 94, 111, 115, 112, 96, -100, -246, -252,
	46, -244, -244, -244, -244, -329, -250, -246, 67, 67,
	67, 134, 73, -246, 67, 67, 67, 67, 67, 67,
	67, 67, -353, 67, 67, -256, -257, 67, 67, 73,
	73, 67, 67, 67, 73, -257, -257, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 135, -151, -155, -152, -154, -153,
	-157, -156, 167, 168, 131, 171, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 30, 183, 228, 163,
	164, 165, 166, 184, 149, 169, 473, 192, 150, 193,
	151, 194, 152, 195, 153, 154, 196, 155, 158, 159,
	160, 157, 134, -117, 135, 67, -93, 38, -119, 21,
	-101, -100, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 78, -138, -221, -131, -221, -264, 217, -264, -264,
	-264, 213, -264, 212, 212, 212, -414, 148, 135, -403,
	-122, 67, -232, 111, 115, 23, 240, 240, 277, -441,
	-442, 15, 113, -230, -442, -230, -232, -443, 213, 412,
	42, 241, 240, -118, -119, -118, 406, 403, -316, 407,
	408, -233, -232, -232, -233, -232, 212, 214, 435, -441,
	240, -441, 30, 30, -341, -341, 469, -207, -221, -341,
	-415, 216, 424, 475, 144, 145, 146, -276, 242, 242,
	135, 103, 23, -296, 103, 114, -295, -295, -295, -296,
	-296, -165, 40, -220, 131, -221, 73, -165, 40, -438,
	-437, -145, -118, -101, -100, 68, 68, 68, -341, -341,
	-341, -341, -341, -341, -341, -227, -131, -102, -103, 122,
	-246, -221, -102, 38, 403, 38, -349, -126, -97, 309,
	67, 67, -221, -350, 46, -97, 67, 30, -118, -93,
	-119, 134, 78, 73, -66, 68, 135, -407, 84, 85,
	-410, 181, 173, -221, -80, 73, -3, -4, -5, -6,
	-31, -57, -97, -377, -375, 67, 31, 376, 64, 15,
	-302, 212, 435, 329, 238, 214, 308, -300, -283, -280,
	-278, -220, -276, -279, -278, -305, -198, 403, -94, 388,
	289, -246, -246, -246, -246, -246, 83, 94, 306, 84,
	85, -241, -260, 31, 285, 286, -242, -242, -242, -242,
	-242, -242, -242, -242, -242, -242, -242, -242, -249, -258,
	-329, 67, 113, 111, 115, 112, 96, -244, -244, -242,
	-242, 68, 135, -400, -399, 98, -246, -246, -246, -221,
	-397, -398, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 320, 315, 321, 319, 311, 327, 322,
	323, 166, 466, 467, 460, 461, 462, 463, 464, 465,
	-251, -252, -251, -246, -397, -251, -193, 32, 31, -246,
	-411, 304, 303, 305, -120, -221, -251, 68, 68, 68,
	78, -252, -251, -242, -251, -398, -193, -193, -252, -252,
	-193, -193, -193, -193, 122, -193, -193, -193, -193, -193,
	-193, -193, -193, -295, 40, -336, 351, 350, -330, -332,
	67, -331, 67, -331, -330, -330, 67, 67, -333, 67,
	-333, -333, -330, -334, 67, -334, -335, 67, -334, -221,
	-118, -92, -358, -357, -246, 40, 517, -93, -246, -115,
	-114, -246, -435, 73, 34, 67, 134, -145, 94, -417,
	-221, -284, -281, -278, -274, -219, -221, -264, -264, -264,
	-415, -402, 34, -121, -221, -183, 16, -244, -244, -278,
	242, -441, -232, -208, -207, -234, -442, -229, -234, -183,
	-442, -232, -232, -234, -230, 403, -183, -183, -316, -231,
	-221, -231, -264, -208, -208, -145, -417, -417, 30, -284,
	-110, -105, -109, -106, -111, -186, -188, -108, 67, -145,
	-100, -221, 425, 426, 142, 145, 144, 31, 376, -299,
	376, 31, -274, -293, -289, 73, 377, -279, -298, 64,
	131, -357, -296, -296, -296, -298, -298, 130, 135, -439,
	424, 425, 201, -93, -417, -283, -274, -221, -147, -145,
	-147, -222, 67, -182, 135, -181, 15, -216, -221, 34,
	73, 134, -182, 73, -147, 73, -287, 64, 46, 30,
	67, -125, 68, -120, -124, -221, -351, -253, -395, 516,
	-125, 68, -393, -394, -120, -93, -93, -214, -215, -205,
	-211, -218, -219, -212, 209, 31, 93, 34, 36, 316,
	348, 96, 131, 20, 97, 167, 130, 318, 443, 317,
	204, 59, 446, 448, 447, 436, 434, 369, 373, 375,
	372, 435, 402, 40, 14, 37, 226, 32, 33, 124,
	206, 100, 101, 229, 35, 227, 85, 44, 23, 62,
	15, 17, 18, 319, 368, 217, 216, 113, 388, 213,
	57, 12, 133, 38, 110, 370, 53, 89, 45, 55,
	111, 115, 21, 437, 438, 41, 387, 396, 471, 233,
	126, 320, 321, 60, 94, 376, 83, 43, 64, 90,
	19, 58, 112, 207, 442, 56, 374, 324, 326, 336,
	468, 325, 211, 413, 10, 315, 444, 30, 225, 54,
	212, 99, 215, 84, 232, 6, 88, 13, 61, 65,
	439, 440, 441, 46, 98, 16, 327, 475, 389, 390,
	391, 392, 393, 394, 395, 192, 193, 194, 195, 196,
	274, 220, 218, 222, 223, 516, 517, 198, 199, 303,
	305, 170, 201, 202, 203, 234, 148, 7, 355, 356,
	357, 360, 361, 362, 363, 364, 365, 366, 525, 397,
	398, 399, 400, 401, 415, 416, 417, 418, 210, 314,
	23, -66, -405, 134, 135, -121, -302, -282, -279, -304,
	122, 70, -290, 135, 475, 529, 71, 215, -427, -426,
	368, 68, 135, -361, 216, 442, 73, 530, 197, 83,
	306, 84, 85, -329, -252, -249, -244, -244, -242, -242,
	-247, 229, -247, 93, -246, -245, -399, 100, -246, 34,
	68, 135, 65, 134, 68, 68, 15, 15, 68, -246,
	68, 15, 15, -246, 68, 134, 68, 68, 68, 65,
	68, 135, 68, 135, -252, -246, 68, 68, -246, -246,
	-246, -252, 68, -246, -246, -246, -246, -246, -246, -246,
	-246, -246, -339, 352, 78, 78, -200, 73, -200, 78,
	78, 78, 135, 68, 73, 135, 22, 135, -112, 36,
	37, -139, -132, -133, -134, -135, -151, -198, 168, 171,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 228, 163, 164, 165, 166, 184, 149, 169, 150,
	151, 152, 153, 154, 155, 158, 159, 160, 157, -221,
	-122, 35, -420, 355, -428, 135, 40, -426, -267, 65,
	-262, -263, -261, -265, 40, -145, -145, -145, 15, -104,
	-146, -221, 67, 68, 135, -246, -275, 65, -277, -208,
	-183, -222, -145, -221, -183, -183, -232, -234, -234, -230,
	134, -207, -122, -421, 355, 30, 314, -428, 30, -189,
	-190, -191, -192, 53, 57, 59, 54, 55, 56, 60,
	30, 135, -217, -223, 34, -218, 73, -219, -212, -217,
	-100, -105, -110, -217, 67, 143, 146, 146, 145, 215,
	67, 103, -298, -298, -298, 40, -220, -437, 431, 425,
	64, 135, -132, -183, -103, -105, -221, 73, -221, 122,
	-183, -172, 519, 38, -364, 407, 39, -351, -393, -127,
	-417, 68, 135, -126, 309, 68, 135, 135, 67, 68,
	46, 135, 103, 134, 384, -221, -375, 68, -304, 135,
	215, 134, 134, -280, 334, -220, -282, 20, 475, -198,
	38, -204, -203, 73, 530, 68, -247, -247, 93, -244,
	-241, 68, 101, -246, 99, -149, -151, 350, 351, -150,
	-156, 131, 167, 228, 166, 165, 163, 350, 351, -165,
	-221, -246, -246, 68, -246, -246, 15, -221, -165, -242,
	-246, -117, 68, -311, 398, -311, 68, 68, 68, 68,
	-311, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 135, 68, 68, 68, 135, 68, 135, -357,
	-364, -246, -246, -114, -113, 43, 342, 68, 135, -151,
	34, -423, 409, 357, -213, 103, -239, -238, 310, 41,
	-344, 377, 363, 364, -281, 242, 64, 298, 299, 300,
	301, -261, -206, 130, 253, 67, 67, 67, -145, -104,
	-221, 15, 135, -416, 134, -1, -221, -274, -232, -183,
	-442, -183, -232, -232, -234, -221, 34, -423, -213, 314,
	103, -239, -286, -285, -198, -109, -109, -109, -109, 53,
	53, 53, 58, 53, 58, 53, -191, -286, -111, -122,
	-223, 68, -433, -432, -431, -429, 61, 216, 62, -251,
	146, -282, -235, 73, -289, -145, -145, 68, -185, 17,
	134, -185, 78, 73, -372, 394, 389, 391, 89, 68,
	135, -126, -120, 46, 67, -221, -253, -359, -358, 46,
	-97, -351, -394, -357, -214, -211, -219, -212, 78, 15,
	-279, -274, 122, 122, 70, 335, -290, 73, 356, 73,
	212, 531, 135, 103, -204, -241, -246, 68, -158, 154,
	153, -158, 68, -330, -331, -330, -333, -330, -158, -158,
	68, 68, 23, 68, 68, 68, -246, 68, 68, 135,
	-348, 444, -311, 67, -311, -311, -311, -311, -311, -311,
	-311, -311, -311, -311, -311, -311, 73, 78, 78, -372,
	44, 45, 73, 210, -134, 40, -97, -424, 77, -418,
	73, -221, -425, 77, 358, 133, 312, 40, 359, 360,
	374, 307, 78, 78, 365, -419, 70, -145, -213, -213,
	-213, -140, -141, -142, -148, -143, -198, -237, -144, 220,
	218, 222, -390, 88, 223, 274, 89, 213, -140, -140,
	-123, 65, 134, -105, -146, -221, 122, 68, -183, -221,
	-183, -183, -232, -97, -424, -418, 103, 73, -425, -183,
	135, 103, -129, -128, 64, 65, -130, 64, -128, 53,
	53, -183, -431, -430, 23, -390, -390, -390, 68, 68,
	-184, 18, 20, 122, -184, -172, -337, 518, -368, -370,
	389, 20, 20, 13, -97, -417, 46, -97, -351, -127,
	68, -351, -274, -290, 377, -145, -203, 73, 531, -246,
	68, -246, 68, 73, -255, -254, 234, 68, 68, -337,
	-136, -151, -240, 73, -422, 368, 73, 73, 78, 40,
	78, 133, 361, -345, 67, -165, -167, -220, 131, 73,
	68, 135, -151, -144, -221, 89, -389, -390, -264, -389,
	89, 67, 68, 68, -217, -105, -221, -183, -416, 134,
	-183, -183, -422, 73, -117, -285, -357, -246, 67, -246,
	67, 53, 19, 17, -246, -252, -172, 73, 20, 73,
	-366, 73, -286, -351, 68, -126, 68, 68, -311, -117,
	20, -172, 474, 20, 475, 311, 40, 78, 40, 362,
	-269, -271, -198, 67, -163, -164, -180, 348, 244, -265,
	248, 77, 249, 384, 250, 213, 252, 253, 254, 224,
	255, 256, 257, 377, 258, 259, 260, 261, 331, 6,
	294, -142, -162, -161, -159, 83, 94, 40, 348, -160,
	77, 130, 267, 245, 268, -179, -236, 64, 354, 218,
	88, 89, 336, -237, -385, -387, -221, -387, -221, -385,
	-385, -264, -246, -95, -94, -163, -183, -183, -118, -121,
	-386, -221, 218, 20, 20, -201, 520, 73, 391, -96,
	-362, -316, -313, -312, -315, 395, 276, 401, -252, -201,
	-137, -221, 73, 356, 73, 311, 68, 135, -330, -246,
	-306, 234, 135, -180, -213, -213, -206, 130, -213, -213,
	-213, -213, 251, 251, -213, -213, -213, -213, -213, -213,
	-213, -213, -213, -213, -213, -213, -213, -213, 67, -159,
	83, -242, 73, -167, -168, 40, 266, 262, -169, 40,
	246, 247, -171, 67, 274, 13, 89, 89, -145, 67,
	65, 284, 67, 67, 67, -387, 68, -96, -306, -117,
	68, 68, 135, 67, 20, -338, 521, -371, 394, -365,
	-363, 389, 390, 391, 392, 68, -314, 96, 361, 365,
	-246, 34, 377, -272, -271, -112, 68, -307, 283, 20,
	-180, 78, 78, -213, -213, 78, 73, 73, 73, -213,
	-213, 78, 73, -223, 78, 78, 78, 78, 40, 73,
	-170, 40, 262, 266, 263, 264, 265, 78, 40, 78,
	40, 78, 40, -221, 67, -391, -392, 73, 78, 67,
	-352, -270, 67, -269, -388, 298, 299, 300, 302, 301,
	-388, -269, -269, -269, 67, -292, -291, 275, 94, -307,
	-118, -221, 218, -202, -221, -366, 73, -373, 216, -369,
	-370, 393, -363, 20, 391, 20, 20, -314, 516, 399,
	400, 399, 400, 73, -273, 224, 77, 475, 296, 297,
	-112, 20, -308, 276, 277, -309, -320, 279, -165, -165,
	73, 73, -166, 245, -147, 68, 135, 103, 68, -246,
	-256, -174, -173, 471, -269, 68, 68, 68, 68, -269,
	275, 68, 135, -380, 67, 78, -368, -367, -369, 20,
	-366, 20, -366, -366, 93, -213, 73, 295, -198, 67,
	-318, 280, 67, -316, 67, -316, 89, 299, 246, 247,
	68, -392, 73, 68, -178, -176, -177, 64, 405, 272,
	273, 68, -272, -272, -272, -272, 68, -221, -384, 30,
	68, -379, -378, -199, -374, -221, 394, 395, 73, -366,
	-314, 78, -219, -305, -310, 281, 78, -242, 67, -242,
	67, -317, 278, 67, -291, -177, 64, -176, 64, 14,
	13, -179, -383, -382, -381, 68, 135, 134, 68, -322,
	67, 20, 68, -305, 68, -305, 67, 103, -242, -175,
	269, 270, 30, 145, -175, 135, 103, -378, -221, -323,
	-321, 234, -309, 68, 68, 68, -305, 78, 68, 83,
	40, 271, -382, 40, -246, 134, 68, 135, 70, -319,
	282, 68, -221, -321, -324, 46, 78, -328, -325, 67,
	-180, 236, 113, -328, -180, -327, -326, 281, 237, 67,
	68, 135, 70, 233, 67, -252, -326, -325, -252, 68,
	68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 683, 684, 685, 686, 0, 0, 0,
	449, 450, 0, 427, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 339, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 298, 299, 300, 301, 0, 233, 229, 208, 209,
	210, 169, 170, 171, 172, 240, 241, 311, 0, 0,
	0, 0, 0, 533, -2, 35, 687, 688, 689, 690,
	691, 692, -2, 462, 0, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 287, 288, 289, 283, 284, 286,
	285, -2, 0, 462, 222, 0, 213, 213, 0, 0,
	0, 553, 0, 0, 568, 590, 33, 0, 0, 511,
	0, 516, 892, 928, 929, 930, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 511, 234, 451, 452,
	553, 553, 425, 0, 269, 0, 1559, 273, 0, 0,
	0, 422, 264, 265, 266, 267, 268, 0, 675, 0,
	0, 260, 0, 228, 1618, 0, 0, 0, 0, 0,
	0, 113, 745, 115, 747, 119, 126, 0, 0, 131,
	132, 135, 136, 137, 138, 139, 0, 143, 0, 145,
	148, 0, 150, 151, 0, 154, 155, 156, 0, 166,
	167, 168, 748, 749, -2, 44, 695, 1302, 1197, 0,
	1204, 1205, 1216, 1227, 1000, 1001, 1002, 1003, 0, 0,
	0, 0, 0, 1010, 1011, 0, 1024, 1710, 0, 0,
	1018, 1019, 1020, 1021, 53, 65, 66, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 0, 1170, 987,
	928, 0, 1718, 0, 1738, 1737, 0, 0, 1155, 0,
	1145, 0, -2, -2, 0, 0, 1685, -2, 1715, 1734,
	1742, 1719, 1741, 1712, 1713, 1707, 1708, 1709, 1711, 1720,
	1722, 1733, 0, 1729, 1739, 1740, 0, 67, 68, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1161, -2, 1163, 1164, 1166, 1167, 1168, 1169,
	-2, 1172, 1173, 1174, -2, -2, 1177, 1178, 1179, 1180,
	1181, 1182, 1185, -2, 1187, -2, -2, 1157, 1158, 1159,
	1160, 1149, 1150, 1151, 1152, 1153, 1154, -2, -2, -2,
	0, 206, 204, 553, 626, 0, -2, 0, 0, 0,
	573, 576, 579, 582, 0, 36, 37, 0, 0, 774,
	774, 774, 774, 0, 774, 0, 0, 0, 751, 752,
	753, 772, 773, 798, 467, 463, 464, 465, 466, 541,
	0, 543, 546, 404, 356, 0, 0, 0, 368, 362,
	0, 0, 404, 0, 0, 548, 548, 0, 414, 404,
	404, -2, 404, 0, 373, 374, 375, 362, 0, 362,
	379, 380, 381, 392, 393, 415, 1326, 0, 0, 311,
	311, 0, 311, 469, 223, 224, 212, 214, 0, 218,
	0, 211, 1618, 0, 0, 180, 1685, 185, 0, 1566,
	1632, 1581, 0, 0, 1599, 0, -2, 0, 250, 548,
	0, 554, 0, 553, 0, 0, 311, 311, 311, 311,
	311, 311, 311, 0, 0, 0, 0, 591, 592, 587,
	588, 589, 593, 594, 3, 0, 676, 677, 680, 681,
	682, 0, 479, 0, 515, 0, 0, 548, -2, 0,
	426, 270, 931, 0, 0, 274, 275, 0, 0, 290,
	0, 293, 278, 279, 280, 0, 0, 262, 263, 0,
	0, 230, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 123, 120, 127, 130, 140, 147, 0, 159,
	161, 164, 121, 128, 133, 134, 141, 162, 122, 124,
	125, 129, 163, 165, 142, 146, 160, 144, 149, 152,
	153, 158, 0, 94, 0, 0, 0, 0, 0, 1203,
	0, 0, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1197, 0,
	0, 1006, 1007, 1008, 1009, 1012, 0, 1025, 0, 0,
	0, 0, 1256, 0, 1195, 1195, 0, 1195, 1191, 0,
	0, 1195, 1134, 0, 0, 1136, 1146, 0, 0, 1139,
	1140, 1195, 0, 1195, 1144, 1130, 1131, 0, 1191, 1191,
	0, 0, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
	1191, 1191, 1191, 1191, 0, 1303, 1321, 1258, 1259, 1260,
	1308, 1262, 1312, 1312, 1308, 1308, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 0, 0, 1301, 1281, 1310,
	1310, 1310, 1308, 1305, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1315, 1315,
	1318, 1315, 0, 548, 0, 0, 536, 0, 517, 0,
	570, 572, 0, 574, 575, 577, 578, 580, 581, 583,
	584, 38, 0, 694, 0, 697, 0, 0, 0, 0,
	0, 0, 0, 774, 774, 774, 469, 468, 0, 542,
	0, 0, 599, 0, 0, 0, 362, 404, 367, 364,
	363, 410, 411, 407, 0, 407, 599, 0, 386, 387,
	388, 404, 404, 394, 549, 395, 396, 407, 0, 412,
	413, 0, 599, 599, 0, 403, 0, 0, 774, 364,
	377, 364, 1327, 1328, 0, 0, 0, 0, 421, 0,
	0, 470, 0, 0, 216, 0, 221, 173, 0, 0,
	0, 0, 0, 0, 202, 203, 0, 0, 0, 0,
	0, 193, 196, 886, 887, 742, 743, 197, 198, 242,
	243, 0, 517, 569, 571, 565, 566, 567, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 607, 601, 603,
	670, 53, 607, 0, 0, 0, 490, 0, 484, 0,
	0, 0, 893, 471, 503, 473, 0, 492, 517, 539,
	517, 0, 271, 0, 276, 0, 0, 292, 294, 295,
	296, 281, 282, 423, 258, 259, 251, 252, 253, 254,
	255, 256, 257, 261, 63, 0, 231, 232, 0, 0,
	0, 107, 108, 109, 110, 111, 112, 114, 98, 439,
	441, 734, 746, 0, 737, 0, 117, 157, 90, 0,
	0, 1198, 1199, 1200, 1201, 1202, 1206, 0, 1208, 1210,
	1212, 1214, 0, 1232, -2, -2, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1217, 1230,
	1231, 0, 0, 0, 0, 0, 0, 1228, 1228, 1223,
	0, 1004, 0, 1022, 1026, 0, 0, 0, 0, 54,
	1190, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	0, 1196, 0, 1197, 0, 0, 0, 1192, 1193, 0,
	0, 1095, 1096, 1097, 0, 498, 0, 1156, 1135, 1147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 1324, 1322, 1323, 1261, 1309,
	0, 1286, 0, 1287, 1288, 1289, 0, 0, 1282, 0,
	1283, 1284, 1285, 1277, 0, 1278, 1279, 0, 1280, 205,
	625, 627, 0, 507, 509, 510, 0, 537, 550, 555,
	556, 559, 34, 39, 0, 699, 0, 546, 0, 0,
	711, 309, 728, 0, 744, 766, -2, 0, 0, 0,
	0, 544, 0, 0, 639, 355, 0, 405, 406, 359,
	1618, 364, 599, 369, 365, 370, 0, 409, 371, 372,
	0, 599, 599, 404, 407, 407, 399, 400, 0, 416,
	419, 417, 0, 376, 378, 546, 306, 0, 0, 309,
	612, 0, 613, 614, 610, 641, 665, 665, 0, 665,
	645, 892, 225, 226, 0, 0, 220, 174, 175, 0,
	177, 178, 179, 186, 181, 183, 0, 0, 187, 199,
	200, 201, 0, 0, 0, 191, 192, 0, 0, 245,
	246, 248, 0, 535, 437, 438, 442, 0, 444, 890,
	445, 446, 699, 599, 0, 608, 0, 604, 671, 0,
	673, 0, 599, 527, 0, 519, 478, 0, 503, 492,
	0, 0, 479, 496, 0, 513, 472, 500, 0, 504,
	0, 0, 477, 493, 0, 538, 540, 932, 0, 1333,
	-2, 1335, -2, -2, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	0, 277, 291, 0, 0, 0, 0, 101, 731, 0,
	102, 106, 96, 0, 0, 0, 736, 0, 733, 738,
	0, 116, 0, 0, 91, 92, 789, 794, 0, 1207,
	1209, 1211, 1213, 1215, 0, 1218, 1228, 1228, 1224, 0,
	1219, 0, 1221, 0, 1198, 0, 1027, 0, 0, 0,
	1015, 0, 0, 0, 1083, 1084, 0, 0, 1088, 0,
	1090, 0, 0, 0, 1094, 0, 1133, 1148, 1137, 0,
	1141, 0, 1143, 0, 553, 0, 1061, 1061, 0, 0,
	0, 0, 1061, 0, 0, 0, 0, 0, 0, 0,
	0, 1304, 1257, 1325, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 628, 519, 0, 0, 0, 562, 560,
	561, 0, 0, 700, 701, 703, 704, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1551,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 698,
	0, 775, 718, 1329, 313, 0, 0, 730, 0, 0,
	771, -2, 778, 0, 784, 0, 0, 0, 0, 0,
	456, 460, 33, 547, 0, 600, 357, 0, 358, 404,
	366, 408, 599, 892, 389, 390, 599, 404, 404, 407,
	0, 418, 0, 718, 1329, 0, 0, 313, 0, 0,
	0, 0, 0, 632, 0, 0, 631, 0, 0, 0,
	0, 0, 546, 666, 0, 668, 669, 678, 679, 643,
	-2, 0, 612, 648, 1195, 227, 215, 217, 0, 0,
	0, 0, 188, 189, 190, 194, 195, 244, 247, 249,
	0, 0, 0, 597, 602, 609, 672, 674, 54, 605,
	597, 40, 0, 0, 523, 0, 0, 483, 489, 0,
	481, 479, 0, 0, 0, 512, 0, 503, 505, 0,
	503, 0, 0, 0, 0, 424, 64, 297, 0, 0,
	0, 0, 0, 440, 0, 735, 98, 0, 0, 118,
	0, 0, 792, 0, 794, 1194, 1220, 1222, 0, 1229,
	1225, 1005, 1013, 1023, 0, 0, 1029, 1041, 1041, 0,
	1032, 1308, 1312, 1035, 1308, 1310, 1308, 1041, 1041, 0,
	55, 0, 0, 1089, 0, 0, 0, 499, 0, 0,
	0, 1059, 1061, 1065, 0, 1066, 1061, 1061, 1061, 1061,
	1071, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1314,
	1313, 1299, 0, 1300, 1311, 1316, 0, 1319, 0, 508,
	523, 551, 552, 557, 558, 0, 0, 0, 0, 705,
	0, 721, 719, 720, 0, 1330, 725, 314, 315, 316,
	317, 0, 0, 0, 729, 0, 0, 767, 768, 769,
	770, 779, 1329, 1329, 1329, 894, 894, 894, 511, 0,
	-2, 0, 0, 458, 0, 0, 640, 360, 599, 382,
	0, 397, 599, 599, 404, 420, 0, 721, 0, 0,
	0, 725, 599, 237, 0, 635, 629, 0, 618, 633,
	634, 621, 0, 623, 0, 619, 620, 599, 611, 642,
	667, 644, 647, 649, 650, 656, 0, 0, 0, 0,
	219, 176, 0, 333, 182, 443, 891, 448, 595, 0,
	0, 595, 528, 527, 525, 78, 0, 0, 0, 480,
	0, 0, 497, 503, 0, 514, 501, 0, 506, 503,
	476, 475, 494, 495, 933, 1334, 1331, 1332, 272, 0,
	732, 98, 103, 104, 105, 99, 97, 739, 0, 741,
	0, 790, 794, 0, 0, 1226, 1028, 1014, 1030, 1042,
	1043, 1031, 1016, 1033, 1034, 1036, 1037, 1038, 1039, 1040,
	1017, 1085, 0, 1087, 1091, 1092, 0, 1138, 1142, 0,
	0, 0, 1064, 1057, 1067, 1068, 1069, 1070, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1079, 1307, 0, 0, 525,
	563, 564, 693, 0, 702, 0, 709, 710, 0, 0,
	713, 714, 723, 0, 0, 0, 319, 320, 0, 0,
	0, 332, 328, 329, 330, 310, 724, 0, 0, 0,
	0, 0, 895, 896, 898, 899, 0, 0, 901, 957,
	0, 910, 774, 910, 0, 0, 912, 913, 0, 0,
	665, 0, 0, 599, 457, 460, 461, 545, 361, 599,
	401, 398, 599, 302, 303, 0, 0, 304, 308, 553,
	0, 0, 615, 636, 0, 0, 616, 0, 617, 622,
	624, 236, 651, 0, 0, 653, 654, 655, 646, 184,
	585, 0, 0, 606, 586, 41, 527, 0, 524, 79,
	0, 0, 0, 0, 485, 482, 503, 488, 487, 0,
	502, 474, 100, 95, 740, 479, 793, 795, 791, 0,
	1093, 0, 1061, 1060, 553, 1058, 0, 1317, 1320, 527,
	0, 708, 706, 722, 712, 0, 726, 727, 0, 321,
	322, 0, 325, 331, 0, 780, 781, 888, 889, 782,
	-2, 0, -2, 900, 958, 922, 922, 911, 922, 922,
	774, 0, 0, -2, 599, 599, -2, 454, 459, 0,
	383, 402, 307, 305, 548, 238, 239, 637, 0, 630,
	660, 657, 0, 0, 596, 598, 529, 526, 0, 520,
	522, 89, 491, 486, 480, 81, 1086, 1132, 1063, 1054,
	0, 529, 0, 0, 0, 318, 323, 0, 326, 327,
	0, 762, 1308, 0, 799, -2, 842, 1329, 1329, 0,
	1329, 1329, 1329, 1329, 0, 0, 1329, 1329, 1329, 1329,
	1329, 1329, 1329, 1329, 1329, 1329, 1329, 1329, 1329, 1329,
	0, 897, 924, -2, 936, 938, 0, 0, 941, 942,
	0, 0, 0, 0, 979, 948, 0, 0, 952, 0,
	1244, 1245, 0, 956, 0, 914, 923, 0, 923, 0,
	0, 922, 0, 786, 81, 799, 553, 455, 235, 0,
	0, 661, 663, 658, 659, 42, 0, 80, 0, 51,
	72, 0, 0, 1055, 0, 1049, 1050, 1051, 1056, 518,
	0, 707, 715, 0, 717, 324, 755, 0, 559, 0,
	801, 0, 783, 844, 0, 0, 1329, 1329, 0, 0,
	0, 0, 1329, 1329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 937,
	939, 940, 943, 944, 945, 984, 985, 986, 946, 981,
	982, 983, 947, 0, 0, 0, 1242, 1243, 977, 0,
	0, 0, 0, 0, 0, 0, 908, 788, 801, 548,
	638, 652, 0, 0, 0, 43, 0, 69, 0, 82,
	83, 0, 0, 0, 0, 1062, 1052, 0, 0, 0,
	0, 0, 716, 754, 763, 764, 559, 785, 0, 838,
	843, 845, 846, 0, 0, 849, 850, 851, 852, 0,
	0, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 880, 881, 882, 883, 884, 885, 865, 866, 867,
	868, 869, 870, 877, 0, 0, 874, 0, 0, 0,
	1145, 972, 0, 0, 915, 917, 918, 919, 920, 921,
	916, 0, 0, 0, 0, 907, 909, 953, 0, 787,
	453, 662, 664, 0, 531, 521, 52, 56, 0, 78,
	75, 0, 84, 0, 0, 0, 0, 0, 1044, 1045,
	1047, 1046, 1048, 696, 756, 1329, 0, 0, 760, 761,
	765, 0, 826, 0, 0, 832, 0, 839, 847, 848,
	853, 854, 871, 0, 0, 873, 0, 0, 980, 0,
	951, 960, 973, 0, 0, 755, 755, 755, 755, 0,
	954, 530, 0, 45, 0, 0, 73, 74, 76, 0,
	85, 0, 87, 88, 0, 0, 758, 0, 802, 0,
	804, 0, 0, 0, 0, 0, 836, 0, 878, 879,
	872, 875, 876, 949, 959, 961, 962, 0, 974, 975,
	976, 978, 902, 903, 904, 905, 0, 532, 796, 0,
	57, 0, 59, 61, 62, 925, 70, 71, 77, 86,
	1053, 757, 759, 0, 806, 0, 827, 0, 0, 0,
	0, 0, 0, 0, 950, 963, 0, 964, 0, 0,
	0, 906, 46, 47, 0, 58, 0, 0, 803, 800,
	0, 838, 828, 0, 830, 0, 0, 0, 0, 965,
	967, 968, 0, 0, 966, 0, 0, 60, 926, 0,
	808, 0, 824, 829, 831, 833, 0, 837, 835, 969,
	971, 970, 48, 49, 50, 0, 807, 0, 820, 805,
	0, 834, 927, 809, -2, 0, 825, 810, -2, 0,
	818, 0, 0, 811, 819, 0, 814, 0, 0, 0,
	813, 0, -2, 821, 0, 0, 815, -2, 0, 823,
	822,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 125, 117, 3,
	67, 68, 122, 120, 135, 121, 134, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 528,
	104, 103, 105, 3, 529, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 530, 116, 531, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 118, 119,
	124, 126, 129, 130, 131, 132, 133, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:628
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:634
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:669
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:674
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:680
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:700
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:706
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:713
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:721
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:727
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:736
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:745
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:755
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:791
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:802
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:808
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:812
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:818
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:825
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:833
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:837
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:851
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:855
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:859
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:872
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:878
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:887
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:898
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:902
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:908
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:912
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:918
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:922
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:928
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:952
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:971
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:975
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:979
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:988
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:995
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1003
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1010
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1015
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1022
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1031
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1055
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1059
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1065
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1071
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1089
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1106
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1129
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1133
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1137
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1142
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1146
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1152
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1165
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1189
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1193
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1203
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1216
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1229
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1235
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1241
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1248
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1256
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1292
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1296
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1302
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1309
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1318
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1322
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1328
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1332
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1336
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1360
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1364
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1368
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1372
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1376
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1380
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1384
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1388
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1392
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1396
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1400
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1404
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1408
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1412
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1416
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1420
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1424
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1428
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1432
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1436
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1440
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1444
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1448
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1452
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1456
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1460
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1464
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1468
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1472
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1476
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1480
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1484
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1488
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1492
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1496
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1500
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1504
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1508
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1512
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1516
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1520
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1524
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1543
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1550
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1559
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1593
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1603
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1613
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1620
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1626
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1630
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1636
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1644
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1653
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1661
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1669
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1692
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1715
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1722
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1729
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1737
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1744
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1751
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1768
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1774
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1778
		{
			yyVAL.str = yyDollar[1].str
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1785
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1791
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1795
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1806
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1867
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1877
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1890
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1927
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1949
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1953
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1959
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1975
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1979
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:1985
		{
			yyLOCAL = tree.TableLock{yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:1991
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:1995
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:1999
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2003
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2021
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2027
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2031
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2037
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2053
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2077
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2081
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2085
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2097
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2115
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2156
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2160
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2166
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2172
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2177
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2178
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2179
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2237
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2254
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2287
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2335
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2369
		{
			yyVAL.item = nil
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2374
		{
			yyVAL.item = nil
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2419
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2432
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2438
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2443
		{
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2447
		{
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2528
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2538
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2555
		{
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2557
		{
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2576
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2585
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2589
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2593
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2627
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2639
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2643
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2675
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2684
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2688
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2693
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2697
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2703
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2716
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2731
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2735
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2741
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2745
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2754
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2758
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2762
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2792
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2801
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2810
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2814
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2820
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2829
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2848
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2860
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2866
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2883
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2888
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2895
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2911
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2924
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2935
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2939
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2945
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2950
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2957
		{
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2959
		{
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2962
		{
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2971
		{
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2975
		{
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2980
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2989
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3002
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3010
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3017
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3024
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3044
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3057
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3063
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3067
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3073
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3081
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3094
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3103
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3119
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3139
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3143
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3152
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3156
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3162
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3171
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3175
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3181
		{
			yyVAL.str = yyDollar[1].str
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3185
		{
			yyVAL.str = yyDollar[3].str
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3191
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3195
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3201
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3206
		{
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3217
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3221
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3237
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3243
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3247
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3253
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3257
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3293
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3311
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3343
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3347
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3360
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3364
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3369
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3373
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3380
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3385
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3398
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3402
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3406
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3424
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3440
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3444
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3462
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3467
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3471
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3494
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3500
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3506
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3510
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3521
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3525
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3529
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3534
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3538
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3542
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3548
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3556
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3570
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3574
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3584
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3616
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3624
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3632
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3641
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3649
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3657
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3689
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3705
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3715
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3726
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3744
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3748
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3752
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3774
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3783
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3789
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3793
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3799
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3803
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3807
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3811
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3816
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3824
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3830
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3838
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3846
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3856
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3862
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3871
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3880
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3889
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3899
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3903
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3913
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3917
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3921
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3925
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3931
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3941
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3945
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3951
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3961
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3967
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3973
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3977
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3981
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3991
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3997
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4001
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4007
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4011
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4017
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4021
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4031
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4044
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4050
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4056
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4069
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4087
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4091
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4097
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4107
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4111
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4115
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4120
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4124
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4128
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4132
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4141
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4145
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4149
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4153
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4158
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4162
		{
			yyVAL.str = yyDollar[1].str
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4166
		{
			yyVAL.str = yyDollar[2].str
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4175
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4179
		{
			yyVAL.str = yyDollar[1].str
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4183
		{
			yyVAL.str = yyDollar[2].str
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4187
		{
			yyVAL.str = yyDollar[1].str
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4191
		{
			yyVAL.str = yyDollar[2].str
		}
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4227
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4237
		{
			yyVAL.str = yyDollar[1].str
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4243
		{
			yyVAL.str = yyDollar[1].str
		}
	case 696:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4262
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4267
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4273
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4280
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4284
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4290
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4296
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4300
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4310
		{
			yyVAL.str = yyDollar[1].str
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4316
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4345
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4351
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4361
		{
			yyVAL.str = yyDollar[1].str
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4365
		{
			yyVAL.str = yyDollar[1].str
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4378
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4392
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4398
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4419
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4428
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4440
		{
			yyVAL.str = yyDollar[1].str
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4445
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4451
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4459
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4565
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4569
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4585
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4589
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4595
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4605
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4609
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4613
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4622
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4628
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4635
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4641
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4654
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4663
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4667
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4673
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4690
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4694
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4698
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4702
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4708
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4731
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4753
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4757
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4761
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4769
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4775
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4779
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4785
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4790
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4795
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4799
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4803
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4817
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4831
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4835
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4844
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4850
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4854
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4860
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4864
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4868
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4873
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4877
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4883
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4895
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4904
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4917
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4924
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4934
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4942
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4953
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4957
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4962
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4966
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4984
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4988
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4997
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5011
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5018
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5029
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5042
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5048
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5052
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5058
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5067
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5081
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5087
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5091
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5097
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5104
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5113
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5117
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5126
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5131
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5135
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5140
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5144
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5154
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5158
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5169
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5177
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5185
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5193
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5213
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5223
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5233
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5237
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5246
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5255
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5261
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5265
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5269
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5275
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5279
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5287
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5295
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5300
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5304
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5312
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5320
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5324
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5328
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5332
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5336
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5340
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5344
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5348
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5352
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5356
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5360
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5364
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5368
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5372
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5376
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5380
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5388
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5395
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5399
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5410
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5414
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5418
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5428
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5432
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5436
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5444
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5458
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5462
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5471
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5476
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5482
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5493
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5503
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5509
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5521
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5527
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5536
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5545
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5568
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5577
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5587
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5595
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5601
		{
			yyVAL.str = ""
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5605
		{
			yyVAL.str = yyDollar[1].str
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5615
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5621
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5627
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5641
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5648
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5658
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5673
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5681
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5690
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5696
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5700
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5706
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5710
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5714
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5718
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5722
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5726
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5731
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5735
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5739
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5743
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5747
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5751
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5755
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5759
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5772
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5782
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5787
		{
			yyVAL.str = ""
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5791
		{
			yyVAL.str = yyDollar[1].str
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5797
		{
			yyVAL.str = ""
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5801
		{
			yyVAL.str = yyDollar[2].str
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5819
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5826
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5833
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5840
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5847
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5856
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5862
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5868
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5872
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5876
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5884
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5889
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5896
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5900
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5904
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5913
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5918
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5922
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5938
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5948
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5968
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5972
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5976
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5980
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5984
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5988
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5992
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5998
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6002
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6006
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6010
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6014
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6034
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6038
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6042
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6047
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6055
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6059
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6071
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6075
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6084
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6088
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6092
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6096
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6105
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6114
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6120
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6124
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6130
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6140
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6157
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6174
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6187
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6200
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6226
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6241
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6256
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6273
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6288
		{
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6294
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6298
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6302
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6308
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6312
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6320
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6324
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6328
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6341
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6354
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6361
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6370
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6375
		{
			yyVAL.str = ","
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6379
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6388
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6398
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6428
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6437
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6447
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6457
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6467
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6477
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6487
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6497
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6507
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6517
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6527
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6537
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6547
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6557
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6574
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6582
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6590
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6598
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6606
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6615
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6623
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6632
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6643
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6653
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6664
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6674
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6696
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6732
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6744
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6756
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6766
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6774
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6781
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6788
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6800
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6808
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6819
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6828
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6837
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6845
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6855
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6863
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6877
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6887
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6906
		{
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6908
		{
		}
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6949
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6959
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6963
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6967
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6973
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6982
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6988
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6992
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6999
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7003
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7007
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7015
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7019
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7023
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7027
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7033
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7037
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7041
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7049
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7053
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7057
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7069
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7081
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7085
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7089
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7093
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7097
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7101
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7105
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7109
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7113
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7123
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7129
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7133
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7140
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7144
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7148
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7154
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7158
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7162
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7166
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7170
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7174
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7178
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7184
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7188
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7192
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7196
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7202
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7206
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7219
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7224
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7228
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7232
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7236
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7240
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7244
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7258
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7262
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7269
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7280
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7285
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7291
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7303
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7315
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7327
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7340
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7353
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7366
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7379
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7392
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7405
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7418
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7431
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7444
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7457
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7472
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7495
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7529
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7594
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7606
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7626
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7646
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7666
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7682
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7695
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7708
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7721
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7734
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7746
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7758
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7770
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7794
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7818
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7830
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7842
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7855
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7868
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7883
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7891
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7900
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7910
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7933
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7938
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7944
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7951
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7955
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7960
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7964
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7970
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7976
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7983
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7990
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7999
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8006
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8013
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8022
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8026
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8030
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8036
		{
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8048
		{
			yyVAL.str = ""
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const RESET = 57615
const PROPERTIES = 57616
const PARSER = 57617
const VISIBLE = 57618
const INVISIBLE = 57619
const BTREE = 57620
const HASH = 57621
const RTREE = 57622
const BSI = 57623
const ZONEMAP = 57624
const LEADING = 57625
const BOTH = 57626
const TRAILING = 57627
const UNKNOWN = 57628
const EXPIRE = 57629
const ACCOUNT = 57630
const ACCOUNTS = 57631
const UNLOCK = 57632
const DAY = 57633
const NEVER = 57634
const PUMP = 57635
const SECOND = 57636
const ASCII = 57637
const COALESCE = 57638
const COLLATION = 57639
const HOUR = 57640
const MICROSECOND = 57641
const MINUTE = 57642
const MONTH = 57643
const QUARTER = 57644
const REPEAT = 57645
const REVERSE = 57646
const ROW_COUNT = 57647
const WEEK = 57648
const REVOKE = 57649
const FUNCTION = 57650
const PRIVILEGES = 57651
const TABLESPACE = 57652
const EXECUTE = 57653
const SUPER = 57654
const GRANT = 57655
const OPTION = 57656
const REFERENCES = 57657
const REPLICATION = 57658
const SLAVE = 57659
const CLIENT = 57660
const USAGE = 57661
const RELOAD = 57662
const FILE = 57663
const TEMPORARY = 57664
const ROUTINE = 57665
const EVENT = 57666
const SHUTDOWN = 57667
const NULLX = 57668
const AUTO_INCREMENT = 57669
const APPROXNUM = 57670
const SIGNED = 57671
const UNSIGNED = 57672
const ZEROFILL = 57673
const ENGINES = 57674
const LOW_CARDINALITY = 57675
const ADMIN_NAME = 57676
const RANDOM = 57677
const SUSPEND = 57678
const ATTRIBUTE = 57679
const HISTORY = 57680
const REUSE = 57681
const CURRENT = 57682
const OPTIONAL = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const UNBOUNDED = 57686
const SECONDARY = 57687
const USER = 57688
const IDENTIFIED = 57689
const CIPHER = 57690
const ISSUER = 57691
const X509 = 57692
const SUBJECT = 57693
const SAN = 57694
const REQUIRE = 57695
const SSL = 57696
const NONE = 57697
const PASSWORD = 57698
const MAX_QUERIES_PER_HOUR = 57699
const MAX_UPDATES_PER_HOUR = 57700
const MAX_CONNECTIONS_PER_HOUR = 57701
const MAX_USER_CONNECTIONS = 57702
const FORMAT = 57703
const VERBOSE = 57704
const CONNECTION = 57705
const TRIGGERS = 57706
const PROFILES = 57707
const LOAD = 57708
const INFILE = 57709
const TERMINATED = 57710
const OPTIONALLY = 57711
const ENCLOSED = 57712
const ESCAPED = 57713
const STARTING = 57714
const LINES = 57715
const ROWS = 57716
const IMPORT = 57717
const MODUMP = 57718
const OVER = 57719
const PRECEDING = 57720
const FOLLOWING = 57721
const GROUPS = 57722
const DATABASES = 57723
const TABLES = 57724
const EXTENDED = 57725
const FULL = 57726
const PROCESSLIST = 57727
const FIELDS = 57728
const COLUMNS = 57729
const OPEN = 57730
const ERRORS = 57731
const WARNINGS = 57732
const INDEXES = 57733
const SCHEMAS = 57734
const NODE = 57735
const LOCKS = 57736
const NAMES = 57737
const GLOBAL = 57738
const SESSION = 57739
const ISOLATION = 57740
const LEVEL = 57741
const READ = 57742
const WRITE = 57743
const ONLY = 57744
const REPEATABLE = 57745
const COMMITTED = 57746
const UNCOMMITTED = 57747
const SERIALIZABLE = 57748
const LOCAL = 57749
const EVENTS = 57750
const PLUGINS = 57751
const CURRENT_TIMESTAMP = 57752
const DATABASE = 57753
const CURRENT_TIME = 57754
const LOCALTIME = 57755
const LOCALTIMESTAMP = 57756
const UTC_DATE = 57757
const UTC_TIME = 57758
const UTC_TIMESTAMP = 57759
const REPLACE = 57760
const CONVERT = 57761
const SEPARATOR = 57762
const TIMESTAMPDIFF = 57763
const CURRENT_DATE = 57764
const CURRENT_USER = 57765
const CURRENT_ROLE = 57766
const SECOND_MICROSECOND = 57767
const MINUTE_MICROSECOND = 57768
const MINUTE_SECOND = 57769
const HOUR_MICROSECOND = 57770
const HOUR_SECOND = 57771
const HOUR_MINUTE = 57772
const DAY_MICROSECOND = 57773
const DAY_SECOND = 57774
const DAY_MINUTE = 57775
const DAY_HOUR = 57776
const YEAR_MONTH = 57777
const SQL_TSI_HOUR = 57778
const SQL_TSI_DAY = 57779
const SQL_TSI_WEEK = 57780
const SQL_TSI_MONTH = 57781
const SQL_TSI_QUARTER = 57782
const SQL_TSI_YEAR = 57783
const SQL_TSI_SECOND = 57784
const SQL_TSI_MINUTE = 57785
const RECURSIVE = 57786
const CONFIG = 57787
const DRAINER = 57788
const MATCH = 57789
const AGAINST = 57790
const BOOLEAN = 57791
const LANGUAGE = 57792
const WITH = 57793
const QUERY = 57794
const EXPANSION = 57795
const ADDDATE = 57796
const BIT_AND = 57797
const BIT_OR = 57798
const BIT_XOR = 57799
const CAST = 57800
const COUNT = 57801
const APPROX_COUNT_DISTINCT = 57802
const APPROX_PERCENTILE = 57803
const CURDATE = 57804
const CURTIME = 57805
const DATE_ADD = 57806
const DATE_SUB = 57807
const EXTRACT = 57808
const GROUP_CONCAT = 57809
const MAX = 57810
const MID = 57811
const MIN = 57812
const NOW = 57813
const POSITION = 57814
const SESSION_USER = 57815
const STD = 57816
const STDDEV = 57817
const MEDIAN = 57818
const STDDEV_POP = 57819
const STDDEV_SAMP = 57820
const SUBDATE = 57821
const SUBSTR = 57822
const SUBSTRING = 57823
const SUM = 57824
const SYSDATE = 57825
const SYSTEM_USER = 57826
const TRANSLATE = 57827
const TRIM = 57828
const VARIANCE = 57829
const VAR_POP = 57830
const VAR_SAMP = 57831
const AVG = 57832
const ARROW = 57833
const ROW = 57834
const OUTFILE = 57835
const HEADER = 57836
const MAX_FILE_SIZE = 57837
const FORCE_QUOTE = 57838
const UNUSED = 57839
const BINDINGS = 57840
const DO = 57841
const DECLARE = 57842
const KILL = 57843

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8153

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 86,
	21, 518,
	-2, 499,
	-1, 92,
	211, 699,
	-2, 746,
	-1, 110,
	42, 353,
	211, 353,
	238, 360,
	239, 360,
	408, 353,
	-2, 381,
	-1, 473,
	67, 1112,
	-2, 1621,
	-1, 474,
	67, 1130,
	-2, 1592,
	-1, 479,
	67, 1131,
	-2, 1620,
	-1, 500,
	67, 1044,
	-2, 1668,
	-1, 501,
	67, 1045,
	-2, 1667,
	-1, 502,
	67, 1046,
	-2, 1657,
	-1, 503,
	67, 1632,
	-2, 1652,
	-1, 504,
	67, 1633,
	-2, 1653,
	-1, 505,
	67, 1634,
	-2, 1659,
	-1, 506,
	67, 1635,
	-2, 1642,
	-1, 507,
	67, 1636,
	-2, 1650,
	-1, 508,
	67, 1637,
	-2, 1660,
	-1, 509,
	67, 1638,
	-2, 1661,
	-1, 510,
	67, 1639,
	-2, 1666,
	-1, 511,
	67, 1640,
	-2, 1671,
	-1, 512,
	67, 1641,
	-2, 1672,
	-1, 514,
	67, 1109,
	-2, 1473,
	-1, 521,
	67, 1118,
	-2, 1499,
	-1, 525,
	67, 1122,
	-2, 1538,
	-1, 526,
	67, 1123,
	-2, 1616,
	-1, 534,
	67, 1133,
	-2, 1601,
	-1, 536,
	67, 1135,
	-2, 1611,
	-1, 548,
	67, 1025,
	-2, 1662,
	-1, 549,
	67, 1026,
	-2, 1663,
	-1, 550,
	67, 1027,
	-2, 1664,
	-1, 557,
	21, 519,
	-2, 482,
	-1, 606,
	403, 381,
	404, 381,
	-2, 354,
	-1, 648,
	103, 1473,
	114, 1473,
	133, 1473,
	-2, 1271,
	-1, 685,
	21, 519,
	-2, 482,
	-1, 784,
	21, 518,
	-2, 936,
	-1, 1092,
	67, 1178,
	-2, 1618,
	-1, 1093,
	67, 1179,
	-2, 1619,
	-1, 1249,
	1, 725,
	68, 725,
	519, 725,
	-2, 732,
	-1, 1368,
	133, 1281,
	-2, 1279,
	-1, 1370,
	133, 642,
	-2, 1276,
	-1, 1371,
	133, 643,
	-2, 1277,
	-1, 1665,
	1, 726,
	68, 726,
	519, 726,
	-2, 732,
	-1, 1720,
	21, 518,
	-2, 609,
	-1, 1892,
	65, 425,
	134, 425,
	-2, 841,
	-1, 2159,
	87, 732,
	129, 732,
	166, 732,
	169, 732,
	-2, 789,
	-1, 2161,
	272, 904,
	-2, 883,
	-1, 2189,
	87, 732,
	129, 732,
	166, 732,
	169, 732,
	-2, 789,
	-1, 2192,
	65, 425,
	134, 425,
	-2, 842,
	-1, 2230,
	87, 732,
	129, 732,
	166, 732,
	169, 732,
	-2, 790,
	-1, 2258,
	272, 904,
	-2, 884,
	-1, 2669,
	68, 761,
	134, 761,
	-2, 732,
	-1, 2673,
	68, 761,
	134, 761,
	-2, 732,
	-1, 2687,
	68, 765,
	134, 765,
	-2, 732,
	-1, 2692,
	68, 766,
	134, 766,
	-2, 732,
}

const yyPrivate = 57344

const yyLast = 28694

var yyAct = [...]int{
	444, 2231, 1156, 2673, 2672, 2649, 2681, 2514, 1072, 2297,
	426, 2595, 2638, 446, 2270, 2551, 2579, 2480, 2580, 1717,
	2413, 2460, 2217, 2295, 1649, 2226, 1328, 419, 811, 984,
	2484, 2421, 2153, 2468, 471, 1713, 2296, 2315, 128, 128,
	558, 1068, 368, 30, 128, 363, 370, 938, 2280, 370,
	2215, 1203, 1867, 2332, 2184, 2046, 2259, 647, 1255, 1895,
	2229, 911, 1294, 1354, 1075, 2279, 2042, 1747, 1014, 923,
	1360, 375, 1912, 131, 2172, 1316, 841, 1286, 1786, 1712,
	2051, 2165, 424, 2047, 553, 418, 1555, 1753, 1257, 2120,
	1933, 2103, 2062, 1754, 2059, 590, 2057, 381, 2040, 1993,
	127, 127, 1673, 423, 679, 1946, 354, 459, 86, 1551,
	1213, 1206, 1785, 1365, 1368, 1227, 1309, 1355, 553, 1361,
	1362, 1550, 1289, 651, 1911, 1267, 1701, 128, 1155, 1287,
	1268, 925, 1672, 2234, 847, 1869, 1827, 1666, 367, 19,
	3, 1864, 1245, 1235, 674, 1583, 366, 7, 1066, 353,
	1006, 425, 86, 1313, 1552, 1658, 85, 1280, 1269, 649,
	356, 427, 1279, 364, 8, 673, 30, 1071, 609, 654,
	41, 365, 6, 1562, 1637, 1120, 435, 1566, 1106, 1057,
	1715, 1349, 1332, 359, 1065, 639, 1722, 1275, 1244, 681,
	976, 953, 696, 589, 963, 555, 1218, 1126, 675, 384,
	383, 640, 16, 9, 892, 1125, 4, 939, 369, 1005,
	557, 121, 587, 1986, 41, 1986, 1788, 118, 1569, 1559,
	123, 2328, 1748, 2152, 1231, 2502, 1357, 653, 556, 812,
	566, 86, 122, 602, 2288, 122, 716, 37, 112, 93,
	122, 122, 122, 37, 112, 93, 122, 1781, 37, 112,
	93, 122, 1024, 1773, 122, 965, 1556, 373, 2532, 352,
	909, 1567, 19, 124, 672, 1058, 750, 1062, 1021, 122,
	7, 2542, 950, 1855, 951, 935, 652, 862, 2129, 1297,
	1298, 1866, 2568, 749, 2566, 552, 619, 8, 743, 1023,
	1963, 1061, 119, 41, 1271, 6, 1828, 1017, 119, 119,
	944, 945, 1074, 119, 1042, 748, 966, 731, 119, 732,
	543, 119, 542, 544, 545, 2313, 546, 547, 942, 567,
	1011, 941, 944, 945, 2406, 378, 119, 2583, 2584, 2503,
	2504, 2033, 2324, 1865, 2555, 2556, 2034, 734, 2035, 2409,
	754, 755, 756, 753, 2316, 2317, 2318, 2319, 2330, 2154,
	1077, 1768, 690, 2483, 380, 2137, 128, 689, 1310, 2173,
	1063, 699, 1146, 1563, 1302, 1053, 688, 2293, 2180, 1696,
	559, 1656, 370, 370, 1634, 128, 2073, 850, 1202, 1201,
	1060, 2277, 746, 747, 2063, 623, 719, 1979, 1758, 1778,
	2389, 1981, 745, 684, 686, 870, 874, 876, 878, 880,
	881, 883, 729, 887, 884, 885, 886, 2392, 2290, 865,
	866, 867, 868, 848, 849, 871, 2541, 851, 687, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 863,
	869, 2593, 786, 2071, 92, 372, 120, 707, 873, 875,
	877, 879, 882, 624, 933, 371, 2067, 1076, 757, 2323,
	2383, 2422, 1306, 683, 110, 2325, 2666, 785, 2582, 2682,
	730, 2604, 724, 2565, 726, 793, 699, 2516, 86, 86,
	653, 2570, 2611, 864, 741, 742, 711, 685, 930, 579,
	2539, 1872, 1568, 1059, 2068, 2069, 798, 2544, 2545, 650,
	952, 414, 727, 2376, 415, 1880, 1881, 1882, 1883, 2070,
	1573, 1575, 1576, 2512, 2513, 1142, 2516, 2482, 1139, 2660,
	2345, 910, 1141, 1138, 1140, 1144, 1145, 2344, 417, 652,
	1143, 659, 658, 660, 416, 733, 2641, 2522, 2367, 1878,
	41, 41, 701, 700, 2572, 2573, 1016, 784, 2065, 1084,
	1087, 1088, 972, 971, 692, 693, 937, 936, 957, 709,
	1085, 657, 2469, 2470, 2471, 2473, 2472, 720, 929, 928,
	2683, 2689, 2650, 2371, 2333, 1584, 2677, 2148, 680, 912,
	1557, 1935, 1937, 379, 2404, 964, 708, 1774, 1729, 722,
	704, 705, 787, 788, 789, 790, 652, 1557, 1560, 590,
	1557, 725, 728, 1801, 1802, 889, 1239, 915, 1989, 662,
	581, 2141, 1984, 1985, 694, 716, 918, 917, 374, 2055,
	578, 577, 1571, 791, 920, 721, 655, 1939, 944, 945,
	944, 945, 1161, 1728, 1727, 943, 1995, 1994, 2052, 2055,
	820, 571, 913, 914, 1726, 916, 969, 701, 700, 1300,
	2642, 934, 553, 553, 553, 2505, 2506, 988, 988, 940,
	1149, 1150, 1151, 1152, 1153, 1154, 1147, 1148, 1311, 2074,
	38, 2064, 2543, 370, 1009, 1009, 1570, 897, 1558, 2390,
	1982, 38, 575, 1301, 656, 2445, 574, 990, 2571, 1725,
	723, 1012, 2289, 1019, 715, 2294, 2481, 2676, 986, 986,
	94, 1008, 1008, 94, 1299, 1782, 569, 992, 94, 94,
	94, 751, 626, 1040, 94, 1303, 1054, 1035, 1036, 94,
	822, 823, 94, 872, 627, 2066, 988, 2084, 988, 689,
	1574, 2623, 1015, 650, 1936, 2688, 1022, 94, 1073, 931,
	576, 2056, 1025, 710, 967, 968, 947, 948, 1660, 661,
	752, 1761, 954, 1765, 954, 716, 1049, 1871, 2369, 2160,
	1893, 2056, 2368, 1749, 570, 2695, 2049, 630, 994, 1086,
	2050, 2053, 353, 2639, 2640, 2694, 894, 2372, 2373, 2179,
	1643, 896, 665, 670, 671, 1258, 1055, 557, 1710, 1773,
	1079, 1080, 1081, 1082, 1083, 1711, 1894, 86, 584, 585,
	586, 86, 1335, 1305, 560, 1039, 1738, 1124, 2647, 1875,
	1876, 922, 86, 1038, 629, 958, 620, 1171, 632, 631,
	2685, 86, 2054, 1874, 2667, 1611, 1078, 1177, 1610, 580,
	1556, 752, 1122, 1123, 1648, 2662, 2653, 1070, 1158, 1183,
	1184, 752, 1659, 1165, 970, 982, 983, 946, 2652, 620,
	949, 553, 1048, 979, 980, 981, 714, 2627, 1886, 1738,
	1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 993, 1089, 41, 1115, 1116, 1045, 1051, 1894,
	1056, 1004, 352, 41, 1010, 1044, 2686, 1258, 1031, 1615,
	1565, 2339, 1711, 1067, 752, 622, 2599, 2597, 621, 1224,
	1026, 2663, 1565, 1711, 1027, 2446, 2448, 2449, 2450, 2447,
	2590, 1179, 1209, 1210, 1565, 1547, 1047, 1046, 557, 890,
	1043, 1333, 1242, 1565, 988, 1064, 1069, 1249, 622, 1229,
	1217, 621, 590, 1233, 921, 1256, 1236, 1170, 988, 1157,
	2585, 1160, 1118, 1114, 2574, 1248, 1172, 1225, 667, 668,
	669, 973, 2560, 736, 2195, 737, 1178, 2085, 1180, 961,
	962, 1276, 1276, 2598, 1281, 2537, 1108, 713, 955, 1281,
	2536, 1208, 1242, 988, 1296, 1593, 2394, 1228, 1948, 2535,
	1887, 1240, 1274, 739, 553, 1647, 988, 1215, 1216, 1250,
	1251, 997, 998, 999, 1000, 1001, 1002, 1003, 2534, 716,
	754, 755, 756, 753, 2524, 2100, 2394, 1896, 1242, 988,
	1738, 1327, 128, 128, 1229, 1241, 2401, 1159, 2561, 1337,
	1229, 1229, 1247, 128, 1278, 1776, 1775, 2400, 1171, 1353,
	1263, 2394, 1181, 674, 1171, 1171, 2394, 714, 2393, 1330,
	1767, 1693, 2213, 1322, 1592, 2394, 1272, 1273, 735, 1343,
	1953, 1930, 1198, 754, 755, 756, 753, 1851, 1370, 754,
	755, 756, 753, 1256, 2394, 1283, 956, 988, 1849, 954,
	2525, 1262, 1847, 1264, 1329, 1329, 1845, 1833, 1265, 1266,
	1307, 1295, 2402, 740, 1270, 1329, 682, 675, 1259, 1790,
	1607, 1246, 1220, 1677, 1223, 1312, 1226, 1646, 1771, 1763,
	1759, 1324, 1755, 2014, 2394, 1260, 738, 1326, 1954, 1232,
	1594, 1676, 1371, 1546, 1340, 955, 1954, 1711, 1028, 1644,
	1618, 1548, 1578, 1852, 1252, 1253, 1617, 888, 1564, 1032,
	1261, 1282, 1724, 769, 1850, 653, 796, 1978, 1846, 702,
	1246, 653, 1846, 752, 682, 1554, 1320, 1321, 1351, 1277,
	86, 1163, 1162, 628, 1351, 752, 1586, 2089, 1976, 1590,
	1285, 1284, 2636, 975, 1677, 1756, 1760, 977, 1756, 1308,
	772, 773, 774, 775, 776, 769, 1067, 1677, 978, 1331,
	1317, 1318, 1319, 926, 652, 1643, 752, 582, 1977, 2624,
	652, 1868, 752, 1325, 1565, 1033, 1553, 2526, 682, 1600,
	2101, 1622, 1601, 1341, 1605, 1581, 1582, 1323, 1987, 1766,
	1731, 691, 41, 956, 1796, 1358, 1121, 1121, 1589, 1369,
	1616, 1862, 2559, 1619, 1620, 1621, 1544, 784, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1545, 1632, 1113, 1243,
	1363, 1189, 1364, 974, 753, 1549, 754, 755, 756, 753,
	128, 128, 1591, 1111, 1112, 1110, 756, 753, 1805, 2379,
	2378, 128, 128, 1674, 2169, 2164, 1572, 1952, 2362, 2456,
	633, 2671, 1281, 1580, 2656, 1684, 652, 1577, 1175, 2621,
	2605, 363, 2494, 2462, 887, 884, 885, 886, 1176, 1281,
	1810, 2659, 1809, 1808, 1806, 2440, 1678, 1108, 674, 1579,
	625, 2439, 2438, 2435, 1296, 1588, 2429, 2455, 754, 755,
	756, 753, 1652, 1654, 770, 771, 772, 773, 774, 775,
	776, 769, 2007, 1669, 1670, 760, 761, 762, 763, 764,
	765, 766, 758, 988, 2658, 2454, 2426, 1683, 754, 755,
	756, 753, 2452, 2425, 1009, 2442, 1296, 1798, 2291, 1742,
	2177, 1744, 675, 2176, 1807, 1229, 1229, 1229, 1171, 1242,
	2072, 1682, 1650, 1651, 1685, 1686, 2031, 2006, 2030, 1972,
	1950, 1008, 1642, 2453, 1736, 1718, 1718, 2577, 1718, 1603,
	2451, 1721, 1719, 2441, 1723, 862, 2292, 2592, 2178, 754,
	755, 756, 753, 1667, 1641, 1640, 1636, 1639, 1635, 754,
	755, 756, 753, 1029, 2058, 1689, 907, 1691, 2576, 1687,
	2461, 1720, 676, 677, 678, 1270, 754, 755, 756, 753,
	1751, 2227, 414, 1741, 1821, 415, 2557, 2520, 1752, 1757,
	1661, 1739, 1602, 2519, 1681, 2443, 2436, 1164, 2432, 2431,
	1746, 1690, 2430, 1692, 1688, 2391, 1694, 2364, 2329, 2225,
	1697, 2223, 2187, 1295, 754, 755, 756, 753, 1182, 2175,
	652, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 2487, 1811, 1812, 1597, 820, 2687, 2174,
	2171, 1732, 1733, 1734, 2140, 850, 1787, 2029, 1983, 840,
	1951, 1942, 499, 498, 1740, 754, 755, 756, 753, 754,
	755, 756, 753, 870, 874, 876, 878, 880, 881, 883,
	1645, 887, 884, 885, 886, 1638, 1342, 865, 866, 867,
	868, 848, 849, 871, 1238, 851, 1030, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 863, 869, 2388,
	821, 816, 815, 797, 2664, 2076, 873, 875, 877, 879,
	882, 754, 755, 756, 753, 2219, 122, 1769, 2527, 112,
	93, 754, 755, 756, 753, 2412, 2189, 988, 2188, 988,
	2159, 988, 2150, 2149, 2133, 2119, 689, 754, 755, 756,
	753, 864, 2118, 2090, 2012, 1783, 2005, 768, 767, 777,
	778, 770, 771, 772, 773, 774, 775, 776, 769, 1997,
	1992, 2218, 1848, 1844, 988, 1814, 1613, 2144, 1843, 1623,
	1779, 1614, 1612, 119, 2617, 2010, 1609, 1608, 1822, 1606,
	1599, 1596, 988, 754, 755, 756, 753, 1797, 1595, 754,
	755, 756, 753, 1813, 2009, 1815, 1816, 754, 755, 756,
	753, 1819, 1820, 2008, 1174, 986, 1173, 995, 122, 1842,
	2684, 1823, 2635, 1825, 2629, 2612, 754, 755, 756, 753,
	2609, 2607, 813, 986, 2493, 754, 755, 756, 753, 2478,
	988, 754, 755, 756, 753, 2466, 2463, 2458, 1800, 2418,
	1205, 1229, 1892, 2386, 1856, 1857, 1236, 2385, 1898, 2384,
	2381, 2375, 1780, 2360, 924, 561, 562, 563, 564, 1794,
	2110, 1841, 2205, 2203, 1907, 119, 1824, 2182, 560, 689,
	1296, 1296, 1296, 1296, 1772, 1777, 2170, 2016, 1913, 1770,
	1214, 689, 1296, 754, 755, 756, 753, 1207, 30, 1853,
	1913, 1840, 1861, 1958, 1067, 1885, 1791, 1804, 2382, 1839,
	988, 1889, 1888, 1863, 1890, 1762, 1793, 1730, 128, 128,
	1838, 1675, 1109, 754, 755, 756, 753, 996, 119, 1909,
	1929, 754, 755, 756, 753, 1829, 1348, 1171, 1219, 1222,
	1834, 1959, 754, 755, 756, 753, 1171, 1212, 1211, 1052,
	1018, 891, 1901, 1837, 988, 839, 1903, 838, 1899, 837,
	836, 835, 1928, 86, 834, 833, 832, 1970, 1718, 831,
	1229, 830, 1858, 829, 1229, 754, 755, 756, 753, 1667,
	1944, 1945, 1877, 1884, 1891, 828, 1964, 1295, 1295, 1295,
	1295, 872, 827, 1900, 19, 1902, 1897, 826, 1906, 1295,
	825, 1904, 7, 1905, 1955, 824, 1991, 1246, 1965, 1914,
	1915, 1916, 1917, 1910, 1927, 1926, 1925, 1908, 1228, 8,
	819, 1971, 1967, 818, 557, 41, 817, 6, 1943, 2011,
	814, 1940, 1949, 1938, 810, 809, 807, 1998, 806, 805,
	2000, 804, 2002, 803, 689, 802, 801, 1980, 2061, 800,
	799, 86, 1975, 2045, 795, 794, 718, 1956, 1962, 1960,
	128, 1968, 1969, 1974, 1680, 1966, 2104, 2105, 2615, 689,
	689, 1836, 1663, 706, 1296, 1674, 1990, 2088, 2045, 2045,
	2581, 1988, 1996, 2092, 780, 2107, 783, 1879, 1737, 1345,
	2061, 2003, 2004, 754, 755, 756, 753, 717, 1999, 1922,
	2001, 781, 782, 779, 1923, 768, 767, 777, 778, 770,
	771, 772, 773, 774, 775, 776, 769, 2109, 2078, 2079,
	2080, 1919, 2077, 2670, 1703, 1706, 1707, 1708, 1704, 1814,
	1705, 1709, 1920, 1918, 1957, 1242, 1764, 1921, 1835, 1242,
	2036, 2037, 1924, 2015, 1707, 1708, 1860, 2017, 2018, 2019,
	2020, 2086, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	754, 755, 756, 753, 2208, 128, 2207, 2081, 2082, 2091,
	128, 1347, 69, 2093, 2094, 2083, 2127, 2087, 2130, 1668,
	2099, 1295, 1199, 2098, 2097, 2096, 1832, 1346, 2108, 40,
	1750, 39, 1789, 1650, 1651, 2111, 2115, 2116, 2117, 2125,
	2206, 2131, 1784, 2112, 893, 125, 2039, 2134, 754, 755,
	756, 753, 1831, 1657, 349, 2143, 712, 2331, 2095, 2124,
	128, 2657, 2145, 2038, 1830, 1254, 2132, 2138, 2128, 2163,
	1826, 350, 2142, 351, 754, 755, 756, 753, 1163, 1162,
	2548, 86, 2136, 86, 348, 2139, 754, 755, 756, 753,
	960, 2135, 754, 755, 756, 753, 905, 906, 959, 988,
	988, 2157, 1818, 903, 904, 1296, 2192, 744, 768, 767,
	777, 778, 770, 771, 772, 773, 774, 775, 776, 769,
	2114, 689, 2158, 895, 754, 755, 756, 753, 2183, 1543,
	1913, 901, 902, 2167, 1817, 899, 900, 927, 2630, 1795,
	986, 2185, 2161, 2510, 2498, 2210, 2496, 1171, 1117, 1229,
	2162, 2166, 2202, 2166, 2168, 2204, 754, 755, 756, 753,
	2199, 754, 755, 756, 753, 2423, 86, 2419, 2194, 2209,
	754, 755, 756, 753, 2411, 2410, 2408, 1718, 2310, 2309,
	2224, 689, 2191, 2190, 2221, 2281, 2283, 2156, 2281, 2281,
	2045, 560, 2198, 2200, 2155, 2193, 1258, 2201, 2122, 898,
	2121, 2196, 1947, 689, 2197, 1973, 1698, 2220, 2633, 2619,
	2618, 2618, 1295, 2212, 1598, 703, 2619, 2211, 2287, 2377,
	2126, 932, 48, 1, 1256, 1237, 2307, 2214, 565, 1703,
	1706, 1707, 1708, 1704, 2282, 1705, 1709, 2278, 1344, 2222,
	1931, 1932, 2113, 1934, 2326, 1561, 1695, 2256, 2228, 1655,
	2075, 2286, 2335, 2284, 2285, 768, 767, 777, 778, 770,
	771, 772, 773, 774, 775, 776, 769, 2304, 919, 583,
	2301, 1166, 2194, 2300, 908, 1037, 664, 698, 1034, 697,
	695, 1119, 2305, 461, 1356, 2311, 2459, 988, 777, 778,
	770, 771, 772, 773, 774, 775, 776, 769, 128, 2302,
	2303, 2306, 2547, 2594, 2492, 2336, 2337, 2283, 2340, 2341,
	2342, 2343, 2338, 2550, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2185, 561,
	562, 563, 564, 2631, 2278, 2361, 1050, 445, 2403, 2032,
	2312, 2365, 560, 2405, 2314, 1854, 2396, 2216, 1961, 598,
	493, 469, 808, 1020, 1013, 2387, 2424, 666, 468, 2181,
	2380, 1873, 568, 2399, 663, 2363, 599, 1633, 2151, 2395,
	2417, 2397, 2407, 1200, 1221, 2398, 1204, 2680, 2669, 2457,
	768, 767, 777, 778, 770, 771, 772, 773, 774, 775,
	776, 769, 2648, 2628, 2420, 2515, 2665, 2564, 2610, 2322,
	2320, 2321, 689, 2603, 2437, 689, 689, 689, 2511, 385,
	1304, 2427, 2428, 551, 637, 689, 2479, 2433, 2434, 386,
	1679, 2540, 2465, 2490, 572, 2467, 1662, 573, 2475, 2476,
	2477, 1665, 2464, 1664, 1090, 759, 1107, 2474, 2146, 2508,
	2486, 2147, 1718, 792, 422, 1587, 434, 428, 988, 988,
	2488, 2485, 1870, 2271, 2497, 2501, 2499, 2500, 2495, 86,
	1941, 47, 2417, 46, 45, 2509, 44, 2489, 1336, 1366,
	463, 130, 1367, 2507, 2327, 2552, 443, 2517, 2518, 128,
	442, 441, 440, 1702, 1700, 1699, 1291, 689, 1290, 986,
	986, 1334, 2578, 2530, 2531, 2374, 2444, 2370, 2366, 689,
	2521, 2230, 2257, 2258, 2264, 2523, 846, 842, 844, 845,
	2533, 2528, 843, 2529, 2554, 1803, 1799, 2043, 2044, 2041,
	2106, 2102, 2538, 1352, 1234, 1859, 1292, 2553, 1288, 2299,
	554, 689, 2546, 31, 5, 29, 28, 27, 14, 15,
	2562, 1329, 13, 1041, 2558, 12, 18, 26, 25, 24,
	23, 77, 76, 75, 74, 2567, 2569, 22, 11, 73,
	72, 71, 21, 20, 66, 67, 58, 2575, 767, 777,
	778, 770, 771, 772, 773, 774, 775, 776, 769, 2596,
	57, 56, 2601, 65, 689, 2586, 2587, 2588, 2589, 64,
	63, 597, 2602, 1073, 55, 54, 53, 52, 62, 61,
	2600, 60, 59, 51, 50, 49, 91, 2417, 90, 89,
	88, 32, 33, 34, 2591, 2613, 35, 2616, 2614, 2554,
	2626, 101, 100, 102, 98, 2620, 2013, 96, 689, 99,
	689, 97, 2553, 2622, 2625, 95, 2632, 1073, 2634, 1073,
	768, 767, 777, 778, 770, 771, 772, 773, 774, 775,
	776, 769, 2643, 42, 2596, 2644, 689, 10, 2651, 17,
	2, 0, 0, 0, 2655, 1073, 0, 0, 2661, 2606,
	0, 2608, 2646, 768, 767, 777, 778, 770, 771, 772,
	773, 774, 775, 776, 769, 0, 0, 0, 0, 2668,
	0, 2675, 0, 0, 0, 2679, 0, 0, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 2690, 0, 2675,
	0, 2692, 2693, 2691, 2679, 2637, 1482, 1524, 0, 0,
	1471, 298, 1429, 1484, 1402, 1418, 1492, 1419, 1420, 1457,
	1381, 1439, 260, 1416, 0, 0, 0, 0, 0, 0,
	1474, 1373, 1405, 1406, 1375, 1412, 1376, 1403, 1431, 205,
	1401, 1442, 230, 1454, 1415, 1436, 1490, 0, 0, 290,
	244, 0, 0, 1434, 1476, 1437, 1462, 1428, 1458, 1389,
	1450, 1485, 1417, 0, 1455, 1486, 0, 0, 0, 0,
	676, 677, 678, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 1453, 1480, 1414, 0, 189, 1483, 1435,
	1456, 0, 0, 1374, 1451, 0, 1379, 1382, 1491, 1478,
	1409, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	1432, 1438, 1459, 1425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 1447, 0, 0, 0, 1384,
	1380, 0, 1430, 0, 0, 177, 295, 311, 187, 286,
	324, 192, 293, 182, 259, 282, 0, 1523, 179, 309,
	292, 241, 224, 225, 178, 0, 277, 203, 216, 199,
	257, 0, 308, 336, 198, 327, 1383, 319, 181, 1518,
	318, 256, 305, 310, 242, 236, 180, 307, 240, 235,
	228, 207, 0, 220, 268, 234, 269, 221, 246, 245,
	247, 1502, 1503, 1504, 1505, 1506, 347, 1514, 1515, 0,
	1519, 1520, 1521, 1388, 0, 1408, 1460, 0, 1372, 1469,
	1477, 1427, 321, 1479, 1424, 1423, 1509, 0, 1508, 294,
	1510, 1511, 229, 1475, 1404, 1413, 337, 1411, 280, 262,
	1481, 1446, 1522, 278, 232, 306, 270, 312, 296, 320,
	274, 271, 172, 297, 201, 243, 183, 185, 197, 204,
	206, 208, 209, 252, 253, 265, 285, 299, 300, 301,
	200, 193, 279, 194, 218, 195, 173, 287, 196, 175,
	266, 304, 1507, 214, 275, 239, 176, 238, 267, 303,
	302, 184, 328, 334, 335, 339, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	1516, 0, 1517, 333, 212, 169, 170, 316, 0, 258,
	0, 1472, 1377, 1387, 1385, 1421, 1448, 1449, 254, 332,
	1464, 1468, 1465, 1493, 283, 0, 0, 0, 0, 0,
	223, 264, 1466, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1378, 0, 291, 314, 326, 343,
	346, 1525, 1526, 1527, 174, 345, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 317, 1422, 1395, 1433, 325, 1398, 1396,
	1463, 1397, 1452, 341, 248, 249, 250, 251, 215, 0,
	191, 344, 273, 1443, 1426, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1444, 1536, 1537, 1538, 1539, 1540, 1400, 338,
	211, 217, 0, 219, 190, 263, 213, 323, 226, 1470,
	1541, 1542, 255, 222, 288, 227, 233, 276, 322, 261,
	281, 188, 313, 289, 237, 1792, 0, 1394, 1399, 1393,
	1440, 1441, 1487, 1488, 1489, 1461, 1386, 1473, 0, 1390,
	1392, 1391, 0, 0, 0, 0, 0, 768, 767, 777,
	778, 770, 771, 772, 773, 774, 775, 776, 769, 0,
	0, 1467, 298, 475, 1445, 171, 0, 231, 1494, 272,
	210, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 0, 0,
	205, 0, 0, 230, 0, 0, 0, 467, 0, 0,
	290, 244, 0, 0, 0, 0, 522, 530, 0, 1512,
	1513, 329, 330, 331, 315, 0, 202, 1535, 429, 0,
	0, 460, 499, 498, 447, 456, 0, 1585, 186, 448,
	0, 455, 449, 453, 452, 450, 451, 0, 514, 0,
	0, 0, 0, 0, 0, 420, 433, 2414, 437, 768,
	767, 777, 778, 770, 771, 772, 773, 774, 775, 776,
	769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 0, 0, 0, 0, 476, 0, 432, 0,
	0, 478, 457, 458, 0, 0, 177, 295, 311, 187,
	286, 324, 192, 293, 182, 259, 282, 0, 0, 179,
	309, 292, 241, 224, 225, 178, 0, 277, 203, 216,
	199, 257, 454, 474, 479, 198, 536, 472, 319, 181,
	0, 318, 256, 305, 310, 242, 236, 180, 307, 240,
	235, 228, 207, 537, 220, 268, 234, 269, 221, 246,
	245, 247, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 0, 0, 321, 0, 0, 520, 0, 0, 0,
	294, 0, 0, 229, 0, 0, 0, 473, 0, 280,
	262, 533, 421, 0, 278, 232, 306, 270, 312, 296,
	320, 274, 271, 172, 297, 201, 243, 183, 185, 197,
	204, 206, 208, 209, 252, 253, 265, 285, 299, 300,
	301, 200, 193, 279, 194, 218, 195, 173, 287, 196,
	175, 266, 304, 0, 214, 275, 239, 176, 238, 267,
	303, 302, 184, 328, 334, 335, 339, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 333, 212, 169, 170, 316, 518,
	258, 0, 532, 513, 515, 516, 519, 523, 524, 525,
	526, 527, 529, 531, 535, 283, 0, 0, 0, 0,
	0, 223, 264, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 314, 326,
	343, 346, 0, 0, 0, 174, 345, 0, 2415, 0,
	0, 0, 2416, 0, 534, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 477, 248, 249, 250, 251, 521,
	0, 191, 344, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 211, 217, 0, 219, 190, 263, 213, 323, 226,
	0, 0, 0, 255, 222, 288, 227, 233, 276, 322,
	261, 281, 188, 313, 289, 237, 0, 0, 543, 517,
	542, 544, 545, 541, 546, 547, 528, 439, 0, 482,
	539, 538, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 231, 0,
	272, 210, 506, 486, 487, 488, 438, 489, 484, 485,
	507, 480, 503, 504, 462, 465, 490, 502, 491, 505,
	508, 509, 548, 549, 497, 550, 494, 510, 501, 500,
	492, 481, 511, 512, 466, 464, 495, 496, 483, 298,
	475, 0, 329, 330, 331, 315, 0, 202, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 436, 0, 0, 0, 205, 0, 0,
	230, 0, 0, 0, 467, 0, 0, 290, 244, 0,
	0, 0, 0, 522, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 0, 460, 499,
	498, 447, 456, 0, 0, 186, 448, 0, 455, 449,
	453, 452, 450, 451, 0, 514, 0, 0, 0, 0,
	0, 0, 420, 433, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 0,
	0, 0, 0, 476, 0, 432, 0, 0, 478, 457,
	458, 0, 0, 177, 295, 311, 187, 286, 324, 192,
	293, 182, 259, 282, 0, 0, 179, 309, 292, 241,
	224, 225, 178, 0, 277, 203, 216, 199, 257, 454,
	474, 479, 198, 536, 472, 319, 181, 0, 318, 256,
	305, 310, 242, 236, 180, 307, 240, 235, 228, 207,
	537, 220, 268, 234, 269, 221, 246, 245, 247, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 0, 0,
	321, 0, 0, 520, 0, 0, 0, 294, 0, 0,
	229, 0, 0, 0, 473, 0, 280, 262, 533, 421,
	0, 278, 232, 306, 270, 312, 296, 320, 274, 271,
	172, 297, 201, 243, 183, 185, 197, 204, 206, 208,
	209, 252, 253, 265, 285, 299, 300, 301, 200, 193,
	279, 194, 218, 195, 173, 287, 196, 175, 266, 304,
	0, 214, 275, 239, 176, 238, 267, 303, 302, 184,
	328, 334, 335, 339, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 1168, 1167,
	1169, 333, 212, 169, 170, 316, 518, 258, 0, 532,
	513, 515, 516, 519, 523, 524, 525, 526, 527, 529,
	531, 535, 283, 0, 0, 0, 0, 0, 223, 264,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 314, 326, 343, 346, 0,
	0, 0, 174, 345, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 477, 248, 249, 250, 251, 521, 0, 191, 344,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 211, 217,
	0, 219, 190, 263, 213, 323, 226, 0, 0, 0,
	255, 222, 288, 227, 233, 276, 322, 261, 281, 188,
	313, 289, 237, 0, 0, 543, 517, 542, 544, 545,
	541, 546, 547, 528, 439, 0, 482, 539, 538, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 231, 0, 272, 210, 506,
	486, 487, 488, 438, 489, 484, 485, 507, 480, 503,
	504, 462, 465, 490, 502, 491, 505, 508, 509, 548,
	549, 497, 550, 494, 510, 501, 500, 492, 481, 511,
	512, 466, 464, 495, 496, 483, 298, 475, 0, 329,
	330, 331, 315, 0, 202, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	436, 0, 0, 0, 205, 0, 0, 230, 0, 0,
	0, 467, 0, 0, 290, 244, 0, 0, 0, 0,
	522, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 0, 460, 499, 498, 447, 456,
	0, 0, 186, 448, 0, 455, 449, 453, 452, 450,
	451, 0, 514, 0, 0, 0, 0, 0, 0, 420,
	433, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 0, 0, 0, 0,
	476, 0, 432, 0, 0, 478, 457, 458, 0, 0,
	177, 295, 311, 187, 286, 324, 192, 293, 182, 259,
	282, 0, 0, 179, 309, 292, 241, 224, 225, 178,
	0, 277, 203, 216, 199, 257, 454, 474, 479, 198,
	536, 472, 319, 181, 0, 318, 256, 305, 310, 242,
	236, 180, 307, 240, 235, 228, 207, 537, 220, 268,
	234, 269, 221, 246, 245, 247, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 0, 0, 321, 0, 0,
	520, 0, 0, 0, 294, 0, 0, 229, 0, 0,
	0, 473, 0, 280, 262, 533, 421, 0, 278, 232,
	306, 270, 312, 296, 320, 274, 271, 172, 297, 201,
	243, 183, 185, 197, 204, 206, 208, 209, 252, 253,
	265, 285, 299, 300, 301, 200, 193, 279, 194, 218,
	195, 173, 287, 196, 175, 266, 304, 0, 214, 275,
	239, 176, 238, 267, 303, 302, 184, 328, 334, 335,
	339, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 333, 212,
	169, 170, 316, 518, 258, 0, 532, 513, 515, 516,
	519, 523, 524, 525, 526, 527, 529, 531, 535, 283,
	0, 0, 0, 0, 0, 223, 264, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 314, 326, 343, 346, 0, 0, 0, 174,
	345, 0, 2415, 0, 0, 0, 2416, 0, 534, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 477, 248,
	249, 250, 251, 521, 0, 191, 344, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 211, 217, 0, 219, 190,
	263, 213, 323, 226, 0, 0, 0, 255, 222, 288,
	227, 233, 276, 322, 261, 281, 188, 313, 289, 237,
	0, 0, 543, 517, 542, 544, 545, 541, 546, 547,
	528, 439, 0, 482, 539, 538, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 231, 0, 272, 210, 506, 486, 487, 488,
	438, 489, 484, 485, 507, 480, 503, 504, 462, 465,
	490, 502, 491, 505, 508, 509, 548, 549, 497, 550,
	494, 510, 501, 500, 492, 481, 511, 512, 466, 464,
	495, 496, 483, 298, 475, 0, 329, 330, 331, 315,
	0, 202, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 436, 0, 0,
	0, 205, 1230, 0, 230, 0, 0, 0, 467, 0,
	0, 290, 244, 0, 0, 0, 0, 522, 530, 0,
	0, 0, 0, 0, 0, 0, 1314, 0, 0, 429,
	0, 0, 460, 499, 498, 447, 456, 0, 0, 186,
	448, 0, 455, 449, 453, 452, 450, 451, 0, 514,
	0, 0, 0, 0, 0, 0, 420, 433, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 0, 0, 0, 0, 476, 0, 432,
	0, 0, 1315, 457, 458, 0, 0, 177, 295, 311,
	187, 286, 324, 192, 293, 182, 259, 282, 0, 0,
	179, 309, 292, 241, 224, 225, 178, 0, 277, 203,
	216, 199, 257, 454, 474, 479, 198, 536, 472, 319,
	181, 0, 318, 256, 305, 310, 242, 236, 180, 307,
	240, 235, 228, 207, 537, 220, 268, 234, 269, 221,
	246, 245, 247, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 0, 0, 321, 0, 0, 520, 0, 0,
	0, 294, 0, 0, 229, 0, 0, 0, 473, 0,
	280, 262, 533, 421, 0, 278, 232, 306, 270, 312,
	296, 320, 274, 271, 172, 297, 201, 243, 183, 185,
	197, 204, 206, 208, 209, 252, 253, 265, 285, 299,
	300, 301, 200, 193, 279, 194, 218, 195, 173, 287,
	196, 175, 266, 304, 0, 214, 275, 239, 176, 238,
	267, 303, 302, 184, 328, 334, 335, 339, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 333, 212, 169, 170, 316,
	518, 258, 0, 532, 513, 515, 516, 519, 523, 524,
	525, 526, 527, 529, 531, 535, 283, 0, 0, 0,
	0, 0, 223, 264, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 314,
	326, 343, 346, 0, 0, 0, 174, 345, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 477, 248, 249, 250, 251,
	521, 0, 191, 344, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 211, 217, 0, 219, 190, 263, 213, 323,
	226, 0, 0, 0, 255, 222, 288, 227, 233, 276,
	322, 261, 281, 188, 313, 289, 237, 0, 0, 543,
	517, 542, 544, 545, 541, 546, 547, 528, 439, 0,
	482, 539, 538, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 231,
	0, 272, 210, 506, 486, 487, 488, 438, 489, 484,
	485, 507, 480, 503, 504, 462, 465, 490, 502, 491,
	505, 508, 509, 548, 549, 497, 550, 494, 510, 501,
	500, 492, 481, 511, 512, 466, 464, 495, 496, 483,
	122, 298, 475, 329, 330, 331, 315, 0, 202, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 0, 0, 205,
	0, 0, 230, 0, 0, 0, 467, 0, 0, 290,
	244, 0, 0, 0, 0, 522, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 0,
	460, 499, 498, 447, 456, 0, 0, 186, 448, 0,
	455, 449, 453, 452, 450, 451, 0, 514, 0, 0,
	0, 0, 0, 0, 420, 433, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 0, 0, 0, 0, 476, 0, 432, 0, 0,
	478, 457, 458, 0, 0, 177, 295, 311, 187, 286,
	324, 192, 293, 182, 259, 282, 0, 0, 179, 309,
	292, 241, 224, 225, 178, 0, 277, 203, 216, 199,
	257, 454, 474, 479, 198, 536, 472, 319, 181, 0,
	318, 256, 305, 310, 242, 236, 180, 307, 240, 235,
	228, 207, 537, 220, 268, 234, 269, 221, 246, 245,
	247, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	0, 0, 321, 0, 0, 520, 0, 0, 0, 294,
	0, 0, 229, 0, 0, 0, 473, 0, 280, 262,
	533, 421, 0, 278, 232, 306, 270, 312, 296, 320,
	274, 271, 172, 297, 201, 243, 183, 185, 197, 204,
	206, 208, 209, 252, 253, 265, 285, 299, 300, 301,
	200, 193, 279, 194, 218, 195, 173, 287, 196, 175,
	266, 304, 0, 214, 275, 239, 176, 238, 267, 303,
	302, 184, 328, 334, 335, 339, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 333, 212, 169, 170, 316, 518, 258,
	0, 532, 513, 515, 516, 519, 523, 524, 525, 526,
	527, 529, 531, 535, 283, 0, 0, 0, 0, 0,
	223, 264, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 314, 326, 343,
	346, 0, 0, 0, 174, 345, 0, 0, 0, 0,
	0, 0, 0, 534, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 477, 248, 249, 250, 251, 521, 0,
	191, 344, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	211, 217, 0, 219, 190, 263, 213, 323, 226, 0,
	0, 0, 255, 222, 288, 227, 233, 276, 322, 261,
	281, 188, 313, 289, 237, 0, 0, 543, 517, 542,
	544, 545, 541, 546, 547, 528, 439, 0, 482, 539,
	538, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 231, 94, 272,
	210, 506, 486, 487, 488, 438, 489, 484, 485, 507,
	480, 503, 504, 462, 465, 490, 502, 491, 505, 508,
	509, 548, 549, 497, 550, 494, 510, 501, 500, 492,
	481, 511, 512, 466, 464, 495, 496, 483, 298, 475,
	0, 329, 330, 331, 315, 0, 202, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 0, 0, 0, 205, 2645, 0, 230,
	0, 0, 0, 467, 0, 0, 290, 244, 0, 0,
	0, 0, 522, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 0, 460, 499, 498,
	447, 456, 0, 0, 186, 448, 0, 455, 449, 453,
	452, 450, 451, 0, 514, 0, 0, 0, 0, 0,
	0, 420, 433, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 0, 0,
	0, 0, 476, 0, 432, 0, 0, 478, 457, 458,
	0, 0, 177, 295, 311, 187, 286, 324, 192, 293,
	182, 259, 282, 0, 0, 179, 309, 292, 241, 224,
	225, 178, 0, 277, 203, 216, 199, 257, 454, 474,
	479, 198, 536, 472, 319, 181, 0, 318, 256, 305,
	310, 242, 236, 180, 307, 240, 235, 228, 207, 537,
	220, 268, 234, 269, 221, 246, 245, 247, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 0, 321,
	0, 0, 520, 0, 0, 0, 294, 0, 0, 229,
	0, 0, 0, 473, 0, 280, 262, 533, 421, 0,
	278, 232, 306, 270, 312, 296, 320, 274, 271, 172,
	297, 201, 243, 183, 185, 197, 204, 206, 208, 209,
	252, 253, 265, 285, 299, 300, 301, 200, 193, 279,
	194, 218, 195, 173, 287, 196, 175, 266, 304, 0,
	214, 275, 239, 176, 238, 267, 303, 302, 184, 328,
	334, 335, 339, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	333, 212, 169, 170, 316, 518, 258, 0, 532, 513,
	515, 516, 519, 523, 524, 525, 526, 527, 529, 531,
	535, 283, 0, 0, 0, 0, 0, 223, 264, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 314, 326, 343, 346, 0, 0,
	0, 174, 345, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	477, 248, 249, 250, 251, 521, 0, 191, 344, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 211, 217, 0,
	219, 190, 263, 213, 323, 226, 0, 0, 0, 255,
	222, 288, 227, 233, 276, 322, 261, 281, 188, 313,
	289, 237, 0, 0, 543, 517, 542, 544, 545, 541,
	546, 547, 528, 439, 0, 482, 539, 538, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 231, 0, 272, 210, 506, 486,
	487, 488, 438, 489, 484, 485, 507, 480, 503, 504,
	462, 465, 490, 502, 491, 505, 508, 509, 548, 549,
	497, 550, 494, 510, 501, 500, 492, 481, 511, 512,
	466, 464, 495, 496, 483, 298, 475, 0, 329, 330,
	331, 315, 0, 202, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	0, 0, 0, 205, 1230, 0, 230, 0, 0, 0,
	467, 0, 0, 290, 244, 0, 0, 0, 0, 522,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 0, 460, 499, 498, 447, 456, 0,
	0, 186, 448, 0, 455, 449, 453, 452, 450, 451,
	0, 514, 0, 0, 0, 0, 0, 0, 420, 433,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 0, 0, 0, 0, 476,
	0, 432, 0, 0, 478, 457, 458, 0, 0, 177,
	295, 311, 187, 286, 324, 192, 293, 182, 259, 282,
	0, 0, 179, 309, 292, 241, 224, 225, 178, 0,
	277, 203, 216, 199, 257, 454, 474, 479, 198, 536,
	472, 319, 181, 0, 318, 256, 305, 310, 242, 236,
	180, 307, 240, 235, 228, 207, 537, 220, 268, 234,
	269, 221, 246, 245, 247, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 0, 0, 321, 0, 0, 520,
	0, 0, 0, 294, 0, 0, 229, 0, 0, 0,
	473, 0, 280, 262, 533, 421, 0, 278, 232, 306,
	270, 312, 296, 320, 274, 271, 172, 297, 201, 243,
	183, 185, 197, 204, 206, 208, 209, 252, 253, 265,
	285, 299, 300, 301, 200, 193, 279, 194, 218, 195,
	173, 287, 196, 175, 266, 304, 0, 214, 275, 239,
	176, 238, 267, 303, 302, 184, 328, 334, 335, 339,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 333, 212, 169,
	170, 316, 518, 258, 0, 532, 513, 515, 516, 519,
	523, 524, 525, 526, 527, 529, 531, 535, 283, 0,
	0, 0, 0, 0, 223, 264, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 314, 326, 343, 346, 0, 0, 0, 174, 345,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 477, 248, 249,
	250, 251, 521, 0, 191, 344, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 211, 217, 0, 219, 190, 263,
	213, 323, 226, 0, 0, 0, 255, 222, 288, 227,
	233, 276, 322, 261, 281, 188, 313, 289, 237, 0,
	0, 543, 517, 542, 544, 545, 541, 546, 547, 528,
	439, 0, 482, 539, 538, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 231, 0, 272, 210, 506, 486, 487, 488, 438,
	489, 484, 485, 507, 480, 503, 504, 462, 465, 490,
	502, 491, 505, 508, 509, 548, 549, 497, 550, 494,
	510, 501, 500, 492, 481, 511, 512, 466, 464, 495,
	496, 483, 298, 475, 0, 329, 330, 331, 315, 0,
	202, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 0, 0,
	205, 0, 0, 230, 0, 0, 0, 467, 0, 0,
	290, 244, 0, 0, 0, 0, 522, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	0, 460, 499, 498, 447, 456, 0, 0, 186, 448,
	0, 455, 449, 453, 452, 450, 451, 0, 514, 0,
	0, 0, 0, 0, 0, 420, 433, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 1007, 0, 0, 0, 476, 0, 432, 0,
	0, 478, 457, 458, 0, 0, 177, 295, 311, 187,
	286, 324, 192, 293, 182, 259, 282, 0, 0, 179,
	309, 292, 241, 224, 225, 178, 0, 277, 203, 216,
	199, 257, 454, 474, 479, 198, 536, 472, 319, 181,
	0, 318, 256, 305, 310, 242, 236, 180, 307, 240,
	235, 228, 207, 537, 220, 268, 234, 269, 221, 246,
	245, 247, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 0, 0, 321, 0, 0, 520, 0, 0, 0,
	294, 0, 0, 229, 0, 0, 0, 473, 0, 280,
	262, 533, 421, 0, 278, 232, 306, 270, 312, 296,
	320, 274, 271, 172, 297, 201, 243, 183, 185, 197,
	204, 206, 208, 209, 252, 253, 265, 285, 299, 300,
	301, 200, 193, 279, 194, 218, 195, 173, 287, 196,
	175, 266, 304, 0, 214, 275, 239, 176, 238, 267,
	303, 302, 184, 328, 334, 335, 339, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 333, 212, 169, 170, 316, 518,
	258, 0, 532, 513, 515, 516, 519, 523, 524, 525,
	526, 527, 529, 531, 535, 283, 0, 0, 0, 0,
	0, 223, 264, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 314, 326,
	343, 346, 0, 0, 0, 174, 345, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 477, 248, 249, 250, 251, 521,
	0, 191, 344, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 211, 217, 0, 219, 190, 263, 213, 323, 226,
	0, 0, 0, 255, 222, 288, 227, 233, 276, 322,
	261, 281, 188, 313, 289, 237, 0, 0, 543, 517,
	542, 544, 545, 541, 546, 547, 528, 439, 0, 482,
	539, 538, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 231, 0,
	272, 210, 506, 486, 487, 488, 438, 489, 484, 485,
	507, 480, 503, 504, 462, 465, 490, 502, 491, 505,
	508, 509, 548, 549, 497, 550, 494, 510, 501, 500,
	492, 481, 511, 512, 466, 464, 495, 496, 483, 0,
	0, 0, 329, 330, 331, 315, 0, 202, 298, 475,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 0, 0, 0, 205, 0, 0, 230,
	0, 0, 0, 467, 0, 0, 290, 244, 0, 0,
	0, 0, 522, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 0, 460, 499, 498,
	447, 456, 0, 0, 186, 448, 0, 455, 449, 453,
	452, 450, 451, 0, 514, 0, 0, 0, 0, 0,
	0, 420, 433, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 0, 0,
	0, 0, 476, 0, 432, 0, 0, 478, 457, 458,
	0, 0, 177, 295, 311, 187, 286, 324, 192, 293,
	182, 259, 282, 0, 0, 179, 309, 292, 241, 224,
	225, 178, 0, 277, 203, 216, 199, 257, 454, 474,
	479, 198, 536, 472, 319, 181, 0, 318, 256, 305,
	310, 242, 236, 180, 307, 240, 235, 228, 207, 537,
	220, 268, 234, 269, 221, 246, 245, 247, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 0, 321,
	0, 0, 520, 0, 0, 0, 294, 0, 0, 229,
	0, 0, 0, 473, 0, 280, 262, 533, 421, 0,
	278, 232, 306, 270, 312, 296, 320, 274, 271, 172,
	297, 201, 243, 183, 185, 197, 204, 206, 208, 209,
	252, 253, 265, 285, 299, 300, 301, 200, 193, 279,
	194, 218, 195, 173, 287, 196, 175, 266, 304, 0,
	214, 275, 239, 176, 238, 267, 303, 302, 184, 328,
	334, 335, 339, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	333, 212, 169, 170, 316, 518, 258, 0, 532, 513,
	515, 516, 519, 523, 524, 525, 526, 527, 529, 531,
	535, 283, 0, 0, 0, 0, 0, 223, 264, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 314, 326, 343, 346, 0, 0,
	0, 174, 345, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	477, 248, 249, 250, 251, 521, 0, 191, 344, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 211, 217, 0,
	219, 190, 263, 213, 323, 226, 0, 0, 0, 255,
	222, 288, 227, 233, 276, 322, 261, 281, 188, 313,
	289, 237, 0, 0, 543, 517, 542, 544, 545, 541,
	546, 547, 528, 439, 0, 482, 539, 538, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 231, 0, 272, 210, 506, 486,
	487, 488, 438, 489, 484, 485, 507, 480, 503, 504,
	462, 465, 490, 502, 491, 505, 508, 509, 548, 549,
	497, 550, 494, 510, 501, 500, 492, 481, 511, 512,
	466, 464, 495, 496, 483, 298, 475, 0, 329, 330,
	331, 315, 0, 202, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	0, 0, 0, 205, 0, 0, 230, 0, 0, 0,
	467, 0, 0, 290, 244, 0, 0, 0, 0, 522,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 0, 460, 499, 498, 447, 456, 0,
	0, 186, 448, 0, 455, 449, 453, 452, 450, 451,
	0, 514, 0, 0, 0, 0, 0, 0, 420, 433,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 0, 0, 0, 0, 476,
	0, 432, 0, 0, 478, 457, 458, 0, 0, 177,
	295, 311, 187, 286, 324, 192, 293, 182, 259, 282,
	0, 0, 179, 309, 292, 241, 224, 225, 178, 0,
	277, 203, 216, 199, 257, 454, 474, 479, 198, 536,
	472, 319, 181, 0, 318, 256, 305, 310, 242, 236,
	180, 307, 240, 235, 228, 207, 537, 220, 268, 234,
	269, 221, 246, 245, 247, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 0, 0, 321, 0, 0, 520,
	0, 0, 0, 294, 0, 0, 229, 0, 0, 0,
	473, 0, 280, 262, 533, 421, 0, 278, 232, 306,
	270, 312, 296, 320, 274, 271, 172, 297, 201, 243,
	183, 185, 197, 204, 206, 208, 209, 252, 253, 265,
	285, 299, 300, 301, 200, 193, 279, 194, 218, 195,
	173, 287, 196, 175, 266, 304, 0, 214, 275, 239,
	176, 238, 267, 303, 302, 184, 328, 334, 335, 339,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 333, 212, 169,
	170, 316, 518, 258, 0, 532, 513, 515, 516, 519,
	523, 524, 525, 526, 527, 529, 531, 535, 283, 0,
	0, 0, 0, 0, 223, 264, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 314, 326, 343, 346, 0, 0, 0, 174, 345,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 477, 248, 249,
	250, 251, 521, 0, 191, 344, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 211, 217, 0, 219, 190, 263,
	213, 323, 226, 0, 0, 0, 255, 222, 288, 227,
	233, 276, 322, 261, 281, 188, 313, 289, 237, 0,
	0, 543, 517, 542, 544, 545, 541, 546, 547, 528,
	439, 0, 482, 539, 538, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 231, 0, 272, 210, 506, 486, 487, 488, 438,
	489, 484, 485, 507, 480, 503, 504, 462, 465, 490,
	502, 491, 505, 508, 509, 548, 549, 497, 550, 494,
	510, 501, 500, 492, 481, 511, 512, 466, 464, 495,
	496, 483, 298, 475, 0, 329, 330, 331, 315, 0,
	202, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 436, 0, 0, 0,
	205, 0, 0, 230, 0, 0, 0, 467, 0, 0,
	290, 244, 0, 0, 0, 0, 522, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	0, 460, 499, 498, 447, 456, 0, 0, 186, 448,
	0, 455, 449, 453, 452, 450, 451, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 0, 0, 0, 0, 476, 0, 432, 0,
	0, 478, 457, 458, 0, 0, 177, 295, 311, 187,
	286, 324, 192, 293, 182, 259, 282, 0, 0, 179,
	309, 292, 241, 224, 225, 178, 0, 277, 203, 216,
	199, 257, 454, 474, 479, 198, 536, 472, 319, 181,
	0, 318, 256, 305, 310, 242, 236, 180, 307, 240,
	235, 228, 207, 537, 220, 268, 234, 269, 221, 246,
	245, 247, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 0, 0, 321, 0, 0, 520, 0, 0, 0,
	294, 0, 0, 229, 0, 0, 0, 473, 0, 280,
	262, 533, 0, 0, 278, 232, 306, 270, 312, 296,
	320, 274, 271, 172, 297, 201, 243, 183, 185, 197,
	204, 206, 208, 209, 252, 253, 265, 285, 299, 300,
	301, 200, 193, 279, 194, 218, 195, 173, 287, 196,
	175, 266, 304, 0, 214, 275, 239, 176, 238, 267,
	303, 302, 184, 328, 1092, 1093, 339, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 333, 212, 169, 170, 316, 518,
	258, 0, 532, 513, 515, 516, 519, 523, 524, 525,
	526, 527, 529, 531, 535, 283, 0, 0, 0, 0,
	0, 223, 264, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 314, 326,
	343, 346, 0, 0, 0, 174, 345, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 477, 248, 249, 250, 251, 521,
	0, 191, 344, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 211, 217, 0, 219, 190, 263, 213, 323, 226,
	0, 0, 0, 255, 222, 288, 227, 233, 276, 322,
	261, 281, 188, 313, 289, 237, 0, 0, 543, 517,
	542, 544, 545, 541, 546, 547, 528, 439, 0, 482,
	539, 538, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 231, 0,
	272, 210, 506, 486, 487, 488, 438, 489, 484, 485,
	507, 480, 503, 504, 462, 465, 490, 502, 491, 505,
	508, 509, 548, 549, 497, 550, 494, 510, 501, 500,
	492, 481, 511, 512, 466, 464, 495, 496, 483, 298,
	475, 0, 329, 330, 331, 315, 0, 202, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 436, 0, 0, 0, 205, 0, 0,
	230, 0, 0, 0, 467, 0, 0, 290, 244, 0,
	0, 0, 0, 522, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 499,
	498, 447, 456, 0, 0, 186, 448, 0, 455, 449,
	453, 452, 450, 451, 0, 514, 0, 0, 0, 0,
	0, 0, 420, 433, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 0,
	0, 0, 0, 476, 0, 432, 0, 0, 478, 457,
	458, 0, 0, 177, 295, 311, 187, 286, 324, 192,
	293, 182, 259, 282, 0, 0, 179, 309, 292, 241,
	224, 225, 178, 0, 277, 203, 216, 199, 257, 454,
	474, 479, 198, 536, 472, 319, 181, 0, 318, 256,
	305, 310, 242, 236, 180, 307, 240, 235, 228, 207,
	537, 220, 268, 234, 269, 221, 246, 245, 247, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 0, 0,
	321, 0, 0, 520, 0, 0, 0, 294, 0, 0,
	229, 0, 0, 0, 473, 0, 280, 262, 533, 421,
	0, 278, 232, 306, 270, 312, 296, 320, 274, 271,
	172, 297, 201, 243, 183, 185, 197, 204, 206, 208,
	209, 252, 253, 265, 285, 299, 300, 301, 200, 193,
	279, 194, 218, 195, 173, 287, 196, 175, 266, 304,
	0, 214, 275, 239, 176, 238, 267, 303, 302, 184,
	328, 334, 335, 339, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 333, 212, 169, 170, 316, 518, 258, 0, 532,
	513, 515, 516, 519, 523, 524, 525, 526, 527, 529,
	531, 535, 283, 0, 0, 0, 0, 0, 223, 264,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 314, 326, 343, 346, 0,
	0, 0, 174, 345, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 477, 248, 249, 250, 251, 521, 0, 191, 344,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 211, 217,
	0, 219, 190, 263, 213, 323, 226, 0, 0, 0,
	255, 222, 288, 227, 233, 276, 322, 261, 281, 188,
	313, 289, 237, 0, 0, 543, 517, 542, 544, 545,
	541, 546, 547, 528, 439, 0, 482, 539, 538, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 231, 0, 272, 210, 506,
	486, 487, 488, 438, 489, 484, 485, 507, 480, 503,
	504, 462, 465, 490, 502, 491, 505, 508, 509, 548,
	549, 497, 550, 494, 510, 501, 500, 492, 481, 511,
	512, 466, 464, 495, 496, 483, 298, 475, 0, 329,
	330, 331, 315, 0, 202, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	436, 0, 0, 0, 205, 0, 0, 230, 0, 0,
	0, 467, 0, 0, 290, 244, 0, 0, 0, 0,
	522, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 0, 460, 499, 498, 447, 456,
	0, 0, 186, 448, 0, 455, 449, 453, 452, 450,
	451, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 0, 0, 0, 0,
	476, 0, 432, 0, 0, 478, 457, 458, 0, 0,
	177, 295, 311, 187, 286, 324, 192, 293, 182, 259,
	282, 0, 0, 179, 309, 292, 241, 224, 225, 178,
	0, 277, 203, 216, 199, 257, 454, 474, 479, 198,
	536, 472, 319, 181, 0, 318, 256, 305, 310, 242,
	236, 180, 307, 240, 235, 228, 207, 537, 220, 268,
	234, 269, 221, 246, 245, 247, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 0, 0, 321, 0, 0,
	520, 0, 0, 0, 294, 0, 0, 229, 0, 0,
	0, 473, 0, 280, 262, 533, 0, 0, 278, 232,
	306, 270, 312, 296, 320, 274, 271, 172, 297, 201,
	243, 183, 185, 197, 204, 206, 208, 209, 252, 253,
	265, 285, 299, 300, 301, 200, 193, 279, 194, 218,
	195, 173, 287, 196, 175, 266, 304, 0, 214, 275,
	239, 176, 238, 267, 303, 302, 184, 328, 334, 335,
	339, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 333, 212,
	169, 170, 316, 518, 258, 0, 532, 513, 515, 516,
	519, 523, 524, 525, 526, 527, 529, 531, 535, 283,
	0, 0, 0, 0, 0, 223, 264, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 314, 326, 343, 346, 0, 0, 0, 174,
	345, 0, 0, 0, 0, 0, 0, 0, 534, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 477, 248,
	249, 250, 251, 521, 0, 191, 344, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 211, 217, 0, 219, 190,
	263, 213, 323, 226, 0, 0, 0, 255, 222, 288,
	227, 233, 276, 322, 261, 281, 188, 313, 289, 237,
	0, 0, 543, 517, 542, 544, 545, 541, 546, 547,
	528, 439, 0, 482, 539, 538, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 231, 0, 272, 210, 506, 486, 487, 488,
	438, 489, 484, 485, 507, 480, 503, 504, 462, 465,
	490, 502, 491, 505, 508, 509, 548, 549, 497, 550,
	494, 510, 501, 500, 492, 481, 511, 512, 466, 464,
	495, 496, 483, 0, 0, 0, 329, 330, 331, 315,
	0, 202, 122, 298, 37, 112, 93, 0, 0, 0,
	0, 0, 0, 0, 260, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 290, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 295, 311,
	187, 286, 324, 192, 293, 182, 259, 282, 0, 0,
	179, 309, 292, 241, 224, 225, 178, 0, 277, 203,
	216, 199, 257, 0, 308, 336, 198, 327, 0, 319,
	181, 0, 318, 256, 305, 310, 242, 236, 180, 307,
	240, 235, 228, 207, 0, 220, 268, 234, 269, 221,
	246, 245, 247, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 229, 0, 0, 0, 337, 0,
	280, 262, 0, 0, 0, 278, 232, 306, 270, 312,
	296, 320, 274, 271, 172, 297, 201, 243, 183, 185,
	197, 204, 206, 208, 209, 252, 253, 265, 285, 299,
	300, 301, 200, 193, 279, 194, 218, 195, 173, 287,
	196, 175, 266, 304, 0, 214, 275, 239, 176, 238,
	267, 303, 302, 184, 328, 334, 335, 339, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 333, 212, 169, 170, 316,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 332, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 223, 264, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 314,
	326, 343, 346, 0, 0, 0, 174, 345, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 341, 248, 249, 250, 251,
	358, 360, 191, 344, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 211, 217, 0, 219, 190, 263, 213, 323,
	226, 0, 0, 0, 255, 222, 288, 227, 233, 276,
	322, 261, 281, 188, 313, 289, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 38, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 231,
	94, 272, 210, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	298, 0, 0, 329, 330, 331, 315, 0, 202, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 290, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 2052, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 295, 311, 187, 286, 324,
	192, 293, 182, 259, 282, 0, 0, 179, 309, 292,
	241, 224, 225, 178, 0, 277, 203, 216, 199, 257,
	0, 308, 336, 198, 327, 0, 319, 181, 0, 318,
	256, 305, 310, 242, 236, 180, 307, 240, 235, 228,
	207, 0, 220, 268, 234, 269, 221, 246, 245, 247,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 321, 0, 0, 0, 2049, 0, 2048, 294, 2050,
	2053, 229, 0, 0, 0, 337, 0, 280, 262, 0,
	0, 0, 278, 232, 306, 270, 312, 296, 320, 274,
	271, 172, 297, 201, 243, 183, 185, 197, 204, 206,
	208, 209, 252, 253, 265, 285, 299, 300, 301, 200,
	193, 279, 194, 218, 195, 173, 287, 196, 175, 266,
	304, 2054, 214, 275, 239, 176, 238, 267, 303, 302,
	184, 328, 334, 335, 339, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 333, 212, 169, 170, 316, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 332, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 223,
	264, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 314, 326, 343, 346,
	0, 0, 0, 174, 345, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 341, 248, 249, 250, 251, 215, 0, 191,
	344, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 211,
	217, 0, 219, 190, 263, 213, 323, 226, 0, 0,
	0, 255, 222, 288, 227, 233, 276, 322, 261, 281,
	188, 313, 289, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 231, 0, 272, 210,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 298, 0, 0,
	329, 330, 331, 315, 0, 202, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 205, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 290, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 1339,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 754, 755, 756, 753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 295, 311, 187, 286, 324, 192, 293, 182,
	259, 282, 0, 0, 179, 309, 292, 241, 224, 225,
	178, 0, 277, 203, 216, 199, 257, 0, 308, 336,
	198, 327, 0, 319, 181, 0, 318, 256, 305, 310,
	242, 236, 180, 307, 240, 235, 228, 207, 0, 220,
	268, 234, 269, 221, 246, 245, 247, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 229, 0,
	0, 0, 337, 0, 280, 262, 0, 0, 0, 278,
	232, 306, 270, 312, 296, 320, 274, 271, 172, 297,
	201, 243, 183, 185, 197, 204, 206, 208, 209, 252,
	253, 265, 285, 299, 300, 301, 200, 193, 279, 194,
	218, 195, 173, 287, 196, 175, 266, 304, 0, 214,
	275, 239, 176, 238, 267, 303, 302, 184, 328, 334,
	335, 339, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 333,
	212, 169, 170, 316, 1146, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 332, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 223, 264, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 314, 326, 343, 346, 0, 0, 0,
	174, 345, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 341,
	248, 249, 250, 251, 215, 0, 191, 344, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 211, 217, 0, 219,
	190, 263, 213, 323, 226, 0, 0, 0, 255, 222,
	288, 227, 233, 276, 322, 261, 281, 188, 313, 289,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1142, 0, 0,
	1139, 0, 0, 0, 1141, 1138, 1140, 1144, 1145, 0,
	0, 171, 1143, 231, 0, 272, 210, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 298, 0, 0, 329, 330, 331,
	315, 0, 202, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 636, 0, 230, 0, 0, 0, 0,
	0, 0, 290, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 644, 645, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1149, 1150, 1151, 1152, 1153, 1154, 1147, 1148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 295,
	311, 187, 286, 324, 192, 293, 182, 259, 282, 0,
	0, 179, 309, 292, 241, 224, 225, 178, 0, 277,
	203, 216, 199, 257, 0, 308, 336, 198, 327, 622,
	319, 181, 621, 318, 256, 305, 310, 242, 236, 180,
	307, 240, 235, 228, 207, 0, 220, 268, 234, 269,
	221, 246, 245, 247, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 229, 0, 0, 0, 337,
	0, 280, 262, 0, 0, 0, 278, 232, 306, 270,
	312, 296, 320, 634, 271, 172, 297, 201, 243, 183,
	185, 197, 204, 206, 208, 209, 252, 253, 265, 285,
	299, 300, 301, 200, 193, 279, 194, 218, 195, 173,
	287, 196, 175, 266, 304, 0, 214, 275, 239, 176,
	238, 267, 303, 302, 184, 328, 334, 335, 339, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 333, 212, 169, 170,
	316, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 332, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 223, 264, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	314, 326, 343, 346, 0, 0, 0, 174, 345, 0,
	0, 0, 0, 0, 0, 635, 317, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 638, 248, 249, 250,
	251, 215, 0, 191, 344, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 211, 217, 0, 219, 190, 263, 213,
	323, 226, 0, 0, 0, 646, 641, 642, 227, 233,
	276, 322, 261, 281, 188, 313, 289, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	231, 0, 272, 210, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 122, 298, 0, 329, 330, 331, 315, 0, 202,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	290, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 1359,
	0, 129, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 295, 311, 187,
	286, 324, 192, 293, 182, 259, 282, 0, 0, 179,
	309, 292, 241, 224, 225, 178, 0, 277, 203, 216,
	199, 257, 0, 308, 336, 198, 327, 0, 319, 181,
	0, 318, 256, 305, 310, 242, 236, 180, 307, 240,
	235, 228, 207, 0, 220, 268, 234, 269, 221, 246,
	245, 247, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 229, 0, 0, 0, 337, 0, 280,
	262, 0, 0, 0, 278, 232, 306, 270, 312, 296,
	320, 274, 271, 172, 297, 201, 243, 183, 185, 197,
	204, 206, 208, 209, 252, 253, 265, 285, 299, 300,
	301, 200, 193, 279, 194, 218, 195, 173, 287, 196,
	175, 266, 304, 0, 214, 275, 239, 176, 238, 267,
	303, 302, 184, 328, 334, 335, 339, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 333, 212, 169, 170, 316, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	332, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 223, 264, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 314, 326,
	343, 346, 0, 0, 0, 174, 345, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 341, 248, 249, 250, 251, 215,
	0, 191, 344, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 211, 217, 0, 219, 190, 263, 213, 323, 226,
	0, 0, 0, 255, 222, 288, 227, 233, 276, 322,
	261, 281, 188, 313, 289, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 231, 94,
	272, 210, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 0, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 122,
	298, 0, 329, 330, 331, 315, 0, 202, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 290, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 1350, 0, 129,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 295, 311, 187, 286, 324,
	192, 293, 182, 259, 282, 0, 0, 179, 309, 292,
	241, 224, 225, 178, 0, 277, 203, 216, 199, 257,
	0, 308, 336, 198, 327, 0, 319, 181, 0, 318,
	256, 305, 310, 242, 236, 180, 307, 240, 235, 228,
	207, 0, 220, 268, 234, 269, 221, 246, 245, 247,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 229, 0, 0, 0, 337, 0, 280, 262, 0,
	0, 0, 278, 232, 306, 270, 312, 296, 320, 274,
	271, 172, 297, 201, 243, 183, 185, 197, 204, 206,
	208, 209, 252, 253, 265, 285, 299, 300, 301, 200,
	193, 279, 194, 218, 195, 173, 287, 196, 175, 266,
	304, 0, 214, 275, 239, 176, 238, 267, 303, 302,
	184, 328, 334, 335, 339, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 333, 212, 169, 170, 316, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 332, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 223,
	264, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 314, 326, 343, 346,
	0, 0, 0, 174, 345, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 341, 248, 249, 250, 251, 215, 0, 191,
	344, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 211,
	217, 0, 219, 190, 263, 213, 323, 226, 0, 0,
	0, 255, 222, 288, 227, 233, 276, 322, 261, 281,
	188, 313, 289, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 231, 94, 272, 210,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 298, 0, 0,
	329, 330, 331, 315, 0, 202, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 290, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 644, 645, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 295, 311, 187, 286, 324, 192, 293, 182,
	259, 282, 0, 0, 179, 309, 292, 241, 224, 225,
	178, 0, 277, 203, 216, 199, 257, 0, 308, 336,
	198, 327, 622, 319, 181, 621, 318, 256, 305, 310,
	242, 236, 180, 307, 240, 235, 228, 207, 0, 220,
	268, 234, 269, 221, 246, 245, 247, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 229, 0,
	0, 0, 337, 0, 280, 262, 0, 0, 0, 278,
	232, 306, 270, 312, 296, 320, 274, 271, 172, 297,
	201, 243, 183, 185, 197, 204, 206, 208, 209, 252,
	253, 265, 285, 299, 300, 301, 200, 193, 279, 194,
	218, 195, 173, 287, 196, 175, 266, 304, 0, 214,
	275, 239, 176, 238, 267, 303, 302, 184, 328, 334,
	335, 339, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 333,
	212, 169, 170, 316, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 332, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 223, 264, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 314, 326, 343, 346, 0, 0, 0,
	174, 345, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 341,
	248, 249, 250, 251, 215, 0, 191, 344, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 211, 217, 0, 219,
	190, 263, 213, 323, 226, 0, 0, 0, 646, 641,
	642, 227, 233, 276, 322, 261, 281, 188, 313, 289,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 231, 0, 272, 210, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 122, 298, 0, 329, 330, 331,
	315, 0, 202, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 290, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	295, 311, 187, 286, 324, 192, 293, 182, 259, 282,
	0, 0, 179, 309, 292, 241, 224, 225, 178, 0,
	277, 203, 216, 199, 257, 0, 308, 336, 198, 327,
	0, 319, 181, 0, 318, 256, 305, 310, 242, 236,
	180, 307, 240, 235, 228, 207, 0, 220, 268, 234,
	269, 221, 246, 245, 247, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 229, 0, 0, 0,
	337, 0, 280, 262, 0, 0, 0, 278, 232, 306,
	270, 312, 296, 320, 274, 271, 172, 297, 201, 243,
	183, 185, 197, 204, 206, 208, 209, 252, 253, 265,
	285, 299, 300, 301, 200, 193, 279, 194, 218, 195,
	173, 287, 196, 175, 266, 304, 0, 214, 275, 239,
	176, 238, 267, 303, 302, 184, 328, 334, 335, 339,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 333, 212, 169,
	170, 316, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 332, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 223, 264, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 314, 326, 343, 346, 0, 0, 0, 174, 345,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 341, 248, 249,
	250, 251, 215, 0, 191, 344, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 211, 217, 0, 219, 190, 263,
	213, 323, 226, 0, 0, 0, 255, 222, 288, 227,
	233, 276, 322, 261, 281, 188, 313, 289, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 231, 94, 272, 210, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 0, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 298, 0, 0, 329, 330, 331, 315, 0,
	202, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 991, 0, 230, 0, 0, 0, 0, 0, 0,
	290, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 989, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 987, 0, 0, 0, 0, 177, 295, 311, 187,
	286, 324, 192, 293, 182, 259, 282, 0, 0, 179,
	309, 292, 241, 224, 225, 178, 0, 277, 203, 216,
	199, 257, 0, 308, 336, 198, 327, 0, 319, 181,
	0, 318, 256, 305, 310, 242, 236, 180, 307, 240,
	235, 228, 207, 0, 220, 268, 234, 269, 221, 246,
	245, 247, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 229, 0, 0, 0, 337, 0, 280,
	262, 0, 0, 0, 278, 232, 306, 270, 312, 296,
	320, 274, 271, 172, 297, 201, 243, 183, 185, 197,
	204, 206, 208, 209, 252, 253, 265, 285, 299, 300,
	301, 200, 193, 279, 194, 218, 195, 173, 287, 196,
	175, 266, 304, 0, 214, 275, 239, 176, 238, 267,
	303, 302, 184, 328, 334, 335, 339, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 333, 212, 169, 170, 316, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	332, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 223, 264, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 314, 326,
	343, 346, 0, 0, 0, 174, 345, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 341, 248, 249, 250, 251, 215,
	0, 191, 344, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 211, 217, 0, 219, 190, 263, 213, 323, 226,
	0, 0, 0, 255, 222, 288, 227, 233, 276, 322,
	261, 281, 188, 313, 289, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 231, 0,
	272, 210, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 0, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 298,
	0, 0, 329, 330, 331, 315, 0, 202, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 985, 0,
	230, 0, 0, 0, 0, 0, 0, 290, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 989, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 987, 0,
	0, 0, 0, 177, 295, 311, 187, 286, 324, 192,
	293, 182, 259, 282, 0, 0, 179, 309, 292, 241,
	224, 225, 178, 0, 277, 203, 216, 199, 257, 0,
	308, 336, 198, 327, 0, 319, 181, 0, 318, 256,
	305, 310, 242, 236, 180, 307, 240, 235, 228, 207,
	0, 220, 268, 234, 269, 221, 246, 245, 247, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	229, 0, 0, 0, 337, 0, 280, 262, 0, 0,
	0, 278, 232, 306, 270, 312, 296, 320, 274, 271,
	172, 297, 201, 243, 183, 185, 197, 204, 206, 208,
	209, 252, 253, 265, 285, 299, 300, 301, 200, 193,
	279, 194, 218, 195, 173, 287, 196, 175, 266, 304,
	0, 214, 275, 239, 176, 238, 267, 303, 302, 184,
	328, 334, 335, 339, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 333, 212, 169, 170, 316, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 332, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 223, 264,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 314, 326, 343, 346, 0,
	0, 0, 174, 345, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 341, 248, 249, 250, 251, 215, 0, 191, 344,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 211, 217,
	0, 219, 190, 263, 213, 323, 226, 0, 0, 0,
	255, 222, 288, 227, 233, 276, 322, 261, 281, 188,
	313, 289, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 231, 0, 272, 210, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 0, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 298, 0, 0, 329,
	330, 331, 315, 0, 202, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 290, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2549, 0, 129, 499, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 295, 311, 187, 286, 324, 192, 293, 182, 259,
	282, 0, 0, 179, 309, 292, 241, 224, 225, 178,
	0, 277, 203, 216, 199, 257, 0, 308, 336, 198,
	327, 0, 319, 181, 0, 318, 256, 305, 310, 242,
	236, 180, 307, 240, 235, 228, 207, 0, 220, 268,
	234, 269, 221, 246, 245, 247, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 229, 0, 0,
	0, 337, 0, 280, 262, 0, 0, 0, 278, 232,
	306, 270, 312, 296, 320, 274, 271, 172, 297, 201,
	243, 183, 185, 197, 204, 206, 208, 209, 252, 253,
	265, 285, 299, 300, 301, 200, 193, 279, 194, 218,
	195, 173, 287, 196, 175, 266, 304, 0, 214, 275,
	239, 176, 238, 267, 303, 302, 184, 328, 334, 335,
	339, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 333, 212,
	169, 170, 316, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 332, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 223, 264, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 314, 326, 343, 346, 0, 0, 0, 174,
	345, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 341, 248,
	249, 250, 251, 215, 0, 191, 344, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 211, 217, 0, 219, 190,
	263, 213, 323, 226, 0, 0, 0, 255, 222, 288,
	227, 233, 276, 322, 261, 281, 188, 313, 289, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 231, 0, 272, 210, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 0, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 298, 0, 0, 329, 330, 331, 315,
	0, 202, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 290, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 989, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 987, 0, 0, 0, 0, 177, 295, 311,
	187, 286, 324, 192, 293, 182, 259, 282, 0, 0,
	179, 309, 292, 241, 224, 225, 178, 0, 277, 203,
	216, 199, 257, 0, 308, 336, 198, 327, 0, 319,
	181, 0, 318, 256, 305, 310, 242, 236, 180, 307,
	240, 235, 228, 207, 0, 220, 268, 234, 269, 221,
	246, 245, 247, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 229, 0, 0, 0, 337, 0,
	280, 262, 0, 0, 0, 278, 232, 306, 270, 312,
	296, 320, 274, 271, 172, 297, 201, 243, 183, 185,
	197, 204, 206, 208, 209, 252, 253, 265, 285, 299,
	300, 301, 200, 193, 279, 194, 218, 195, 173, 287,
	196, 175, 266, 304, 0, 214, 275, 239, 176, 238,
	267, 303, 302, 184, 328, 334, 335, 339, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 333, 212, 169, 170, 316,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 332, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 223, 264, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 314,
	326, 343, 346, 0, 0, 0, 174, 345, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 341, 248, 249, 250, 251,
	215, 0, 191, 344, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 211, 217, 0, 219, 190, 263, 213, 323,
	226, 0, 0, 0, 255, 222, 288, 227, 233, 276,
	322, 261, 281, 188, 313, 289, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 231,
	0, 272, 210, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	298, 0, 0, 329, 330, 331, 315, 0, 202, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 290, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 989, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2186,
	0, 0, 0, 0, 177, 295, 311, 187, 286, 324,
	192, 293, 182, 259, 282, 0, 0, 179, 309, 292,
	241, 224, 225, 178, 0, 277, 203, 216, 199, 257,
	0, 308, 336, 198, 327, 0, 319, 181, 0, 318,
	256, 305, 310, 242, 236, 180, 307, 240, 235, 228,
	207, 0, 220, 268, 234, 269, 221, 246, 245, 247,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 229, 0, 0, 0, 337, 0, 280, 262, 0,
	0, 0, 278, 232, 306, 270, 312, 296, 320, 274,
	271, 172, 297, 201, 243, 183, 185, 197, 204, 206,
	208, 209, 252, 253, 265, 285, 299, 300, 301, 200,
	193, 279, 194, 218, 195, 173, 287, 196, 175, 266,
	304, 0, 214, 275, 239, 176, 238, 267, 303, 302,
	184, 328, 334, 335, 339, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 333, 212, 169, 170, 316, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 332, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 223,
	264, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 314, 326, 343, 346,
	0, 0, 0, 174, 345, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 341, 248, 249, 250, 251, 215, 0, 191,
	344, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 211,
	217, 0, 219, 190, 263, 213, 323, 226, 0, 0,
	0, 255, 222, 288, 227, 233, 276, 322, 261, 281,
	188, 313, 289, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 231, 0, 272, 210,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 298, 0, 0,
	329, 330, 331, 315, 0, 202, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 1735, 0, 230, 0,
	0, 0, 0, 0, 0, 290, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 989,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 295, 311, 187, 286, 324, 192, 293, 182,
	259, 282, 0, 0, 179, 309, 292, 241, 224, 225,
	178, 0, 277, 203, 216, 199, 257, 0, 308, 336,
	198, 327, 0, 319, 181, 0, 318, 256, 305, 310,
	242, 236, 180, 307, 240, 235, 228, 207, 0, 220,
	268, 234, 269, 221, 246, 245, 247, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 229, 0,
	0, 0, 337, 0, 280, 262, 0, 0, 0, 278,
	232, 306, 270, 312, 296, 320, 274, 271, 172, 297,
	201, 243, 183, 185, 197, 204, 206, 208, 209, 252,
	253, 265, 285, 299, 300, 301, 200, 193, 279, 194,
	218, 195, 173, 287, 196, 175, 266, 304, 0, 214,
	275, 239, 176, 238, 267, 303, 302, 184, 328, 334,
	335, 339, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 333,
	212, 169, 170, 316, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 332, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 223, 264, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 314, 326, 343, 346, 0, 0, 0,
	174, 345, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 341,
	248, 249, 250, 251, 215, 0, 191, 344, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 211, 217, 0, 219,
	190, 263, 213, 323, 226, 0, 0, 0, 255, 222,
	288, 227, 233, 276, 322, 261, 281, 188, 313, 289,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 231, 0, 272, 210, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 298, 0, 0, 329, 330, 331,
	315, 0, 202, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 290, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2654, 0, 129, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 295,
	311, 187, 286, 324, 192, 293, 182, 259, 282, 0,
	0, 179, 309, 292, 241, 224, 225, 178, 0, 277,
	203, 216, 199, 257, 0, 308, 336, 198, 327, 0,
	319, 181, 0, 318, 256, 305, 310, 242, 236, 180,
	307, 240, 235, 228, 207, 0, 220, 268, 234, 269,
	221, 246, 245, 247, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 229, 0, 0, 0, 337,
	0, 280, 262, 0, 0, 0, 278, 232, 306, 270,
	312, 296, 320, 274, 271, 172, 297, 201, 243, 183,
	185, 197, 204, 206, 208, 209, 252, 253, 265, 285,
	299, 300, 301, 200, 193, 279, 194, 218, 195, 173,
	287, 196, 175, 266, 304, 0, 214, 275, 239, 176,
	238, 267, 303, 302, 184, 328, 334, 335, 339, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 333, 212, 169, 170,
	316, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 332, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 223, 264, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	314, 326, 343, 346, 0, 0, 0, 174, 345, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 341, 248, 249, 250,
	251, 215, 0, 191, 344, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 211, 217, 0, 219, 190, 263, 213,
	323, 226, 0, 0, 0, 255, 222, 288, 227, 233,
	276, 322, 261, 281, 188, 313, 289, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	231, 0, 272, 210, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 298, 0, 0, 329, 330, 331, 315, 0, 202,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 290,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 499, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 295, 311, 187, 286,
	324, 192, 293, 182, 259, 282, 0, 0, 179, 309,
	292, 241, 224, 225, 178, 0, 277, 203, 216, 199,
	257, 0, 308, 336, 198, 327, 0, 319, 181, 0,
	318, 256, 305, 310, 242, 236, 180, 307, 240, 235,
	228, 207, 0, 220, 268, 234, 269, 221, 246, 245,
	247, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 294,
	0, 0, 229, 0, 0, 0, 337, 0, 280, 262,
	0, 0, 0, 278, 232, 306, 270, 312, 296, 320,
	274, 271, 172, 297, 201, 243, 183, 185, 197, 204,
	206, 208, 209, 252, 253, 265, 285, 299, 300, 301,
	200, 193, 279, 194, 218, 195, 173, 287, 196, 175,
	266, 304, 0, 214, 275, 239, 176, 238, 267, 303,
	302, 184, 328, 334, 335, 339, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 333, 212, 169, 170, 316, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 332,
	0, 0, 0, 0, 283, 0, 0, 0, 0, 0,
	223, 264, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 314, 326, 343,
	346, 0, 0, 0, 174, 345, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 341, 248, 249, 250, 251, 215, 0,
	191, 344, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	211, 217, 0, 219, 190, 263, 213, 323, 226, 0,
	0, 0, 255, 222, 288, 227, 233, 276, 322, 261,
	281, 188, 313, 289, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 231, 0, 272,
	210, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 0, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 298, 0,
	0, 329, 330, 331, 315, 0, 202, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 290, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2563, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 295, 311, 187, 286, 324, 192, 293,
	182, 259, 282, 0, 0, 179, 309, 292, 241, 224,
	225, 178, 0, 277, 203, 216, 199, 257, 0, 308,
	336, 198, 327, 0, 319, 181, 0, 318, 256, 305,
	310, 242, 236, 180, 307, 240, 235, 228, 207, 0,
	220, 268, 234, 269, 221, 246, 245, 247, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 229,
	0, 0, 0, 337, 0, 280, 262, 0, 0, 0,
	278, 232, 306, 270, 312, 296, 320, 274, 271, 172,
	297, 201, 243, 183, 185, 197, 204, 206, 208, 209,
	252, 253, 265, 285, 299, 300, 301, 200, 193, 279,
	194, 218, 195, 173, 287, 196, 175, 266, 304, 0,
	214, 275, 239, 176, 238, 267, 303, 302, 184, 328,
	334, 335, 339, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	333, 212, 169, 170, 316, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 332, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 223, 264, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 314, 326, 343, 346, 0, 0,
	0, 174, 345, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	341, 248, 249, 250, 251, 215, 0, 191, 344, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 211, 217, 0,
	219, 190, 263, 213, 323, 226, 0, 0, 0, 255,
	222, 288, 227, 233, 276, 322, 261, 281, 188, 313,
	289, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 231, 0, 272, 210, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	0, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 298, 0, 0, 329, 330,
	331, 315, 0, 202, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 290, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2298, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	295, 311, 187, 286, 324, 192, 293, 182, 259, 282,
	0, 0, 179, 309, 292, 241, 224, 225, 178, 0,
	277, 203, 216, 199, 257, 0, 308, 336, 198, 327,
	0, 319, 181, 0, 318, 256, 305, 310, 242, 236,
	180, 307, 240, 235, 228, 207, 0, 220, 268, 234,
	269, 221, 246, 245, 247, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 229, 0, 0, 0,
	337, 0, 280, 262, 0, 0, 0, 278, 232, 306,
	270, 312, 296, 320, 274, 271, 172, 297, 201, 243,
	183, 185, 197, 204, 206, 208, 209, 252, 253, 265,
	285, 299, 300, 301, 200, 193, 279, 194, 218, 195,
	173, 287, 196, 175, 266, 304, 0, 214, 275, 239,
	176, 238, 267, 303, 302, 184, 328, 334, 335, 339,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 333, 212, 169,
	170, 316, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 332, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 0, 223, 264, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 314, 326, 343, 346, 0, 0, 0, 174, 345,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 341, 248, 249,
	250, 251, 215, 0, 191, 344, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 211, 217, 0, 219, 190, 263,
	213, 323, 226, 0, 0, 0, 255, 222, 288, 227,
	233, 276, 322, 261, 281, 188, 313, 289, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 231, 0, 272, 210, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 0, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 298, 0, 0, 329, 330, 331, 315, 0,
	202, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	290, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 295, 311, 187,
	286, 324, 192, 293, 182, 259, 282, 0, 0, 179,
	309, 292, 241, 224, 225, 178, 0, 277, 203, 216,
	199, 257, 0, 308, 336, 198, 327, 0, 319, 181,
	0, 318, 256, 305, 310, 242, 236, 180, 307, 240,
	235, 228, 207, 0, 220, 268, 234, 269, 221, 246,
	245, 247, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 2491, 0, 0,
	294, 0, 0, 229, 0, 0, 0, 337, 0, 280,
	262, 0, 0, 0, 278, 232, 306, 270, 312, 296,
	320, 274, 271, 172, 297, 201, 243, 183, 185, 197,
	204, 206, 208, 209, 252, 253, 265, 285, 299, 300,
	301, 200, 193, 279, 194, 218, 195, 173, 287, 196,
	175, 266, 304, 0, 214, 275, 239, 176, 238, 267,
	303, 302, 184, 328, 334, 335, 339, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 333, 212, 169, 170, 316, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	332, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 223, 264, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 314, 326,
	343, 346, 0, 0, 0, 174, 345, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 341, 248, 249, 250, 251, 215,
	0, 191, 344, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 211, 217, 0, 219, 190, 263, 213, 323, 226,
	0, 0, 0, 255, 222, 288, 227, 233, 276, 322,
	261, 281, 188, 313, 289, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 231, 0,
	272, 210, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 0, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 298,
	0, 0, 329, 330, 331, 315, 0, 202, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 290, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 295, 311, 187, 286, 324, 192,
	293, 182, 259, 282, 0, 0, 179, 309, 292, 241,
	224, 225, 178, 0, 277, 203, 216, 199, 257, 0,
	308, 336, 198, 327, 0, 319, 181, 0, 318, 256,
	305, 310, 242, 236, 180, 307, 240, 235, 228, 207,
	0, 220, 268, 234, 269, 221, 246, 245, 247, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 2308, 0, 0, 294, 0, 0,
	229, 0, 0, 0, 337, 0, 280, 262, 0, 0,
	0, 278, 232, 306, 270, 312, 296, 320, 274, 271,
	172, 297, 201, 243, 183, 185, 197, 204, 206, 208,
	209, 252, 253, 265, 285, 299, 300, 301, 200, 193,
	279, 194, 218, 195, 173, 287, 196, 175, 266, 304,
	0, 214, 275, 239, 176, 238, 267, 303, 302, 184,
	328, 334, 335, 339, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 333, 212, 169, 170, 316, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 332, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 223, 264,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 314, 326, 343, 346, 0,
	0, 0, 174, 345, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 341, 248, 249, 250, 251, 215, 0, 191, 344,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 211, 217,
	0, 219, 190, 263, 213, 323, 226, 0, 0, 0,
	255, 222, 288, 227, 233, 276, 322, 261, 281, 188,
	313, 289, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 231, 0, 272, 210, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 0, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 298, 0, 0, 329,
	330, 331, 315, 0, 202, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 290, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 295, 311, 187, 286, 324, 192, 293, 182, 259,
	282, 0, 0, 179, 309, 292, 241, 224, 225, 178,
	0, 277, 203, 216, 199, 257, 0, 308, 336, 198,
	327, 0, 319, 181, 0, 318, 256, 305, 310, 242,
	236, 180, 307, 240, 235, 228, 207, 0, 220, 268,
	234, 269, 221, 246, 245, 247, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 229, 0, 0,
	0, 337, 0, 280, 262, 0, 0, 0, 278, 232,
	306, 270, 312, 296, 320, 274, 271, 172, 297, 201,
	243, 183, 185, 197, 204, 206, 208, 209, 252, 253,
	265, 285, 299, 300, 301, 200, 193, 279, 194, 218,
	195, 173, 287, 196, 175, 266, 304, 0, 214, 275,
	239, 176, 238, 267, 303, 302, 184, 328, 334, 335,
	339, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 333, 212,
	169, 170, 316, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 332, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 223, 264, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 314, 326, 343, 346, 0, 0, 0, 174,
	345, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 341, 248,
	249, 250, 251, 215, 0, 191, 344, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 211, 217, 0, 219, 190,
	263, 213, 323, 226, 0, 0, 0, 255, 222, 288,
	227, 233, 276, 322, 261, 281, 188, 313, 289, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 231, 0, 272, 210, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 0, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 298, 0, 0, 329, 330, 331, 315,
	0, 202, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 290, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 295, 311,
	187, 286, 324, 192, 293, 182, 259, 282, 0, 0,
	179, 309, 292, 241, 224, 225, 178, 0, 277, 203,
	216, 199, 257, 0, 308, 336, 198, 327, 0, 319,
	181, 0, 318, 256, 305, 310, 242, 236, 180, 307,
	240, 235, 228, 207, 0, 220, 268, 234, 269, 221,
	246, 245, 247, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 229, 0, 0, 0, 337, 0,
	280, 262, 0, 0, 0, 278, 232, 306, 270, 312,
	296, 320, 274, 271, 172, 297, 201, 243, 183, 185,
	197, 204, 206, 208, 209, 252, 253, 265, 285, 299,
	300, 301, 200, 193, 279, 194, 218, 195, 173, 287,
	196, 175, 266, 304, 0, 214, 275, 239, 176, 238,
	267, 303, 302, 184, 328, 334, 335, 339, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 333, 212, 169, 170, 316,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 332, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 223, 264, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 314,
	326, 343, 346, 0, 0, 0, 174, 345, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 341, 248, 249, 250, 251,
	215, 0, 191, 344, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 211, 217, 0, 219, 190, 263, 213, 323,
	226, 0, 0, 0, 255, 222, 288, 227, 233, 276,
	322, 261, 281, 188, 313, 289, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 231,
	0, 272, 210, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	298, 0, 0, 329, 330, 331, 315, 0, 202, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 290, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 295, 311, 187, 286, 324,
	192, 293, 182, 259, 282, 0, 0, 179, 309, 292,
	241, 224, 225, 178, 0, 277, 203, 216, 199, 257,
	0, 308, 336, 198, 327, 0, 319, 181, 0, 318,
	256, 305, 310, 242, 236, 180, 307, 240, 235, 228,
	207, 0, 220, 268, 234, 269, 221, 246, 245, 247,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 229, 0, 0, 0, 337, 0, 280, 262, 0,
	0, 0, 278, 232, 306, 270, 312, 296, 320, 274,
	271, 172, 297, 201, 243, 183, 185, 197, 204, 206,
	208, 209, 252, 253, 265, 285, 299, 300, 301, 200,
	193, 279, 194, 218, 195, 173, 287, 196, 175, 266,
	304, 0, 214, 275, 239, 176, 238, 267, 303, 302,
	184, 328, 334, 335, 339, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 333, 212, 169, 170, 316, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 332, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 223,
	264, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 314, 326, 343, 346,
	0, 0, 0, 174, 345, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 341, 248, 249, 250, 251, 215, 0, 191,
	344, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 211,
	217, 0, 219, 190, 263, 213, 323, 226, 0, 0,
	0, 255, 222, 288, 227, 233, 276, 322, 261, 281,
	188, 313, 289, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 231, 0, 272, 210,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 298, 0, 0,
	329, 330, 331, 315, 0, 202, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 290, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 2060,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 295, 311, 187, 286, 324, 192, 293, 182,
	259, 282, 0, 0, 179, 309, 292, 241, 224, 225,
	178, 0, 277, 203, 216, 199, 257, 0, 308, 336,
	198, 327, 0, 319, 181, 0, 318, 256, 305, 310,
	242, 236, 180, 307, 240, 235, 228, 207, 0, 220,
	268, 234, 269, 221, 246, 245, 247, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 229, 0,
	0, 0, 337, 0, 280, 262, 0, 0, 0, 278,
	232, 306, 270, 312, 296, 320, 274, 271, 172, 297,
	201, 243, 183, 185, 197, 204, 206, 208, 209, 252,
	253, 265, 285, 299, 300, 301, 200, 193, 279, 194,
	218, 195, 173, 287, 196, 175, 266, 304, 0, 214,
	275, 239, 176, 238, 267, 303, 302, 184, 328, 334,
	335, 339, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 333,
	212, 169, 170, 316, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 332, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 223, 264, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 314, 326, 343, 346, 0, 0, 0,
	174, 345, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 341,
	248, 249, 250, 251, 215, 0, 191, 344, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 211, 217, 0, 219,
	190, 263, 213, 323, 226, 0, 0, 0, 255, 222,
	288, 227, 233, 276, 322, 261, 281, 188, 313, 289,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 231, 0, 272, 210, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 298, 0, 0, 329, 330, 331,
	315, 0, 202, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 290, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 989, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 295,
	311, 187, 286, 324, 192, 293, 182, 259, 282, 0,
	0, 179, 309, 292, 241, 224, 225, 178, 0, 277,
	203, 216, 199, 257, 0, 308, 336, 198, 327, 0,
	319, 181, 0, 318, 256, 305, 310, 242, 236, 180,
	307, 240, 235, 228, 207, 0, 220, 268, 234, 269,
	221, 246, 245, 247, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 229, 0, 0, 0, 337,
	0, 280, 262, 0, 0, 0, 278, 232, 306, 270,
	312, 296, 320, 274, 271, 172, 297, 201, 243, 183,
	185, 197, 204, 206, 208, 209, 252, 253, 265, 285,
	299, 300, 301, 200, 193, 279, 194, 218, 195, 173,
	287, 196, 175, 266, 304, 0, 214, 275, 239, 176,
	238, 267, 303, 302, 184, 328, 334, 335, 339, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 333, 212, 169, 170,
	316, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 332, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 223, 264, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	314, 326, 343, 346, 0, 0, 0, 174, 345, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 341, 248, 249, 250,
	251, 215, 0, 191, 344, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 211, 217, 0, 219, 190, 263, 213,
	323, 226, 0, 0, 0, 255, 222, 288, 227, 233,
	276, 322, 261, 281, 188, 313, 289, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	231, 0, 272, 210, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 298, 0, 0, 329, 330, 331, 315, 0, 202,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 290,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 295, 311, 187, 286,
	324, 192, 293, 182, 259, 282, 0, 0, 179, 309,
	292, 241, 224, 225, 178, 0, 277, 203, 216, 199,
	257, 0, 308, 336, 198, 327, 0, 319, 181, 0,
	318, 256, 305, 310, 242, 236, 180, 307, 240, 235,
	228, 207, 0, 220, 268, 234, 269, 221, 246, 245,
	247, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 294,
	0, 0, 229, 0, 0, 0, 337, 0, 280, 262,
	0, 0, 0, 278, 232, 306, 270, 312, 296, 320,
	274, 271, 172, 297, 201, 243, 183, 185, 197, 204,
	206, 208, 209, 252, 253, 265, 285, 299, 300, 301,
	200, 193, 279, 194, 218, 195, 173, 287, 196, 175,
	266, 304, 0, 214, 275, 239, 176, 238, 267, 303,
	302, 184, 328, 334, 335, 339, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 333, 212, 169, 170, 316, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 332,
	0, 0, 0, 0, 283, 0, 0, 0, 0, 0,
	223, 264, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 314, 326, 343,
	346, 0, 0, 0, 174, 345, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 341, 248, 249, 250, 251, 215, 0,
	191, 344, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	211, 217, 0, 219, 190, 263, 213, 323, 226, 0,
	0, 0, 255, 222, 288, 227, 233, 276, 322, 261,
	281, 188, 313, 289, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 231, 0, 272,
	210, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 0, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 298, 0,
	0, 329, 330, 331, 315, 0, 202, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 290, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	1743, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 295, 311, 187, 286, 324, 192, 293,
	182, 259, 282, 0, 0, 179, 309, 292, 241, 224,
	225, 178, 0, 277, 203, 216, 199, 257, 0, 308,
	336, 198, 327, 0, 319, 181, 0, 318, 256, 305,
	310, 242, 236, 180, 307, 240, 235, 228, 207, 0,
	220, 268, 234, 269, 221, 246, 245, 247, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 229,
	0, 0, 0, 337, 0, 280, 262, 0, 0, 0,
	278, 232, 306, 270, 312, 296, 320, 274, 271, 172,
	297, 201, 243, 183, 185, 197, 204, 206, 208, 209,
	252, 253, 265, 285, 299, 300, 301, 200, 193, 279,
	194, 218, 195, 173, 287, 196, 175, 266, 304, 0,
	214, 275, 239, 176, 238, 267, 303, 302, 184, 328,
	334, 335, 339, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	333, 212, 169, 170, 316, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 332, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 223, 264, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 314, 326, 343, 346, 0, 0,
	0, 174, 345, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	341, 248, 249, 250, 251, 215, 0, 191, 344, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 211, 217, 0,
	219, 190, 263, 213, 323, 226, 0, 0, 0, 255,
	222, 288, 227, 233, 276, 322, 261, 281, 188, 313,
	289, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 231, 0, 272, 210, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	0, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 0, 0, 0, 329, 330,
	331, 315, 298, 202, 0, 0, 1671, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	290, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 295, 311, 187,
	286, 324, 192, 293, 182, 259, 282, 0, 0, 179,
	309, 292, 241, 224, 225, 178, 0, 277, 203, 216,
	199, 257, 0, 308, 336, 198, 327, 0, 319, 181,
	0, 318, 256, 305, 310, 242, 236, 180, 307, 240,
	235, 228, 207, 0, 220, 268, 234, 269, 221, 246,
	245, 247, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 229, 0, 0, 0, 337, 0, 280,
	262, 0, 0, 0, 278, 232, 306, 270, 312, 296,
	320, 274, 271, 172, 297, 201, 243, 183, 185, 197,
	204, 206, 208, 209, 252, 253, 265, 285, 299, 300,
	301, 200, 193, 279, 194, 218, 195, 173, 287, 196,
	175, 266, 304, 0, 214, 275, 239, 176, 238, 267,
	303, 302, 184, 328, 334, 335, 339, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 333, 212, 169, 170, 316, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	332, 0, 0, 0, 0, 283, 0, 0, 0, 0,
	0, 223, 264, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 314, 326,
	343, 346, 0, 0, 0, 174, 345, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 341, 248, 249, 250, 251, 215,
	0, 191, 344, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 211, 217, 0, 219, 190, 263, 213, 323, 226,
	0, 0, 0, 255, 222, 288, 227, 233, 276, 322,
	261, 281, 188, 313, 289, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 231, 0,
	272, 210, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 0, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 298,
	0, 0, 329, 330, 331, 315, 0, 202, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 290, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 295, 311, 187, 286, 324, 192,
	293, 182, 259, 282, 0, 0, 179, 309, 292, 241,
	224, 225, 178, 0, 277, 203, 216, 199, 257, 0,
	308, 336, 198, 327, 0, 319, 181, 0, 318, 256,
	305, 310, 242, 236, 180, 307, 240, 235, 228, 207,
	0, 220, 268, 234, 269, 221, 246, 245, 247, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 1653, 0, 0, 0, 294, 0, 0,
	229, 0, 0, 0, 337, 0, 280, 262, 0, 0,
	0, 278, 232, 306, 270, 312, 296, 320, 274, 271,
	172, 297, 201, 243, 183, 185, 197, 204, 206, 208,
	209, 252, 253, 265, 285, 299, 300, 301, 200, 193,
	279, 194, 218, 195, 173, 287, 196, 175, 266, 304,
	0, 214, 275, 239, 176, 238, 267, 303, 302, 184,
	328, 334, 335, 339, 0, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 333, 212, 169, 170, 316, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 332, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 223, 264,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 314, 326, 343, 346, 0,
	0, 0, 174, 345, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 341, 248, 249, 250, 251, 215, 0, 191, 344,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 211, 217,
	0, 219, 190, 263, 213, 323, 226, 0, 0, 0,
	255, 222, 288, 227, 233, 276, 322, 261, 281, 188,
	313, 289, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 231, 0, 272, 210, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 0, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 298, 0, 0, 329,
	330, 331, 315, 0, 202, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 290, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 295, 311, 187, 286, 324, 192, 293, 182, 259,
	282, 0, 0, 179, 309, 292, 241, 224, 225, 178,
	0, 277, 203, 216, 199, 257, 0, 308, 336, 198,
	327, 0, 319, 181, 0, 318, 256, 305, 310, 242,
	236, 180, 307, 240, 235, 228, 207, 0, 220, 268,
	234, 269, 221, 246, 245, 247, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 229, 0, 0,
	0, 337, 0, 280, 262, 0, 0, 0, 278, 232,
	306, 270, 312, 296, 320, 274, 271, 172, 297, 201,
	243, 183, 185, 197, 204, 206, 208, 209, 252, 253,
	265, 285, 299, 300, 301, 200, 193, 279, 194, 218,
	195, 173, 287, 196, 175, 266, 304, 0, 214, 275,
	239, 176, 238, 267, 303, 302, 184, 328, 334, 335,
	339, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 333, 212,
	169, 170, 316, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 332, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 223, 264, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 314, 326, 343, 346, 0, 0, 0, 174,
	345, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 341, 248,
	249, 250, 251, 215, 0, 191, 344, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 211, 217, 0, 219, 190,
	263, 213, 323, 226, 0, 0, 0, 255, 222, 288,
	227, 233, 276, 322, 261, 281, 188, 313, 289, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	171, 0, 231, 0, 272, 210, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 0, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 298, 0, 0, 329, 330, 331, 315,
	0, 202, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 290, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 295, 311,
	187, 286, 324, 192, 293, 182, 259, 282, 0, 0,
	179, 309, 292, 241, 224, 225, 178, 0, 277, 203,
	216, 199, 257, 0, 308, 336, 198, 327, 0, 319,
	181, 0, 318, 256, 305, 310, 242, 236, 180, 307,
	240, 235, 228, 207, 0, 220, 268, 234, 269, 221,
	246, 245, 247, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 229, 0, 0, 0, 337, 0,
	280, 262, 0, 0, 0, 278, 232, 306, 270, 312,
	296, 320, 376, 271, 172, 297, 201, 243, 183, 185,
	197, 204, 206, 208, 209, 252, 253, 265, 285, 299,
	300, 301, 200, 193, 279, 194, 218, 195, 173, 287,
	196, 175, 266, 304, 0, 214, 275, 239, 176, 238,
	267, 303, 302, 184, 328, 334, 335, 339, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 333, 212, 169, 170, 316,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 332, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 223, 264, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 314,
	326, 343, 346, 0, 0, 0, 174, 345, 0, 0,
	0, 0, 0, 0, 377, 317, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 341, 248, 249, 250, 251,
	215, 0, 191, 344, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 211, 217, 0, 219, 190, 263, 213, 323,
	226, 0, 0, 0, 255, 222, 288, 227, 233, 276,
	322, 261, 281, 188, 313, 289, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 231,
	0, 272, 210, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	298, 0, 0, 329, 330, 331, 315, 0, 202, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 290, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 295, 311, 187, 286, 324,
	192, 293, 182, 259, 282, 0, 0, 179, 309, 292,
	241, 224, 225, 178, 0, 277, 203, 216, 199, 257,
	0, 308, 336, 198, 327, 0, 319, 181, 0, 318,
	256, 305, 310, 242, 236, 180, 307, 240, 235, 228,
	207, 0, 220, 268, 234, 269, 221, 246, 245, 247,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 321, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 229, 0, 0, 0, 337, 0, 280, 262, 0,
	0, 0, 278, 232, 306, 270, 312, 296, 320, 274,
	271, 172, 297, 201, 243, 183, 185, 197, 204, 206,
	208, 209, 252, 253, 265, 285, 299, 300, 301, 200,
	193, 279, 194, 218, 195, 173, 287, 196, 175, 266,
	304, 0, 214, 275, 239, 176, 238, 267, 303, 302,
	184, 328, 334, 335, 339, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 333, 212, 169, 170, 316, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 332, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 223,
	264, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 314, 326, 343, 346,
	0, 0, 0, 174, 345, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 341, 248, 249, 250, 251, 215, 0, 191,
	344, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 211,
	217, 0, 219, 190, 263, 213, 323, 226, 0, 0,
	0, 255, 222, 288, 227, 233, 276, 322, 261, 281,
	188, 313, 289, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 231, 0, 272, 210,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 298, 0, 0,
	329, 330, 331, 315, 0, 202, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 205, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 290, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 295, 311, 187, 286, 324, 192, 293, 182,
	259, 282, 0, 0, 179, 309, 292, 241, 224, 225,
	178, 0, 277, 203, 216, 199, 257, 0, 308, 336,
	198, 327, 0, 319, 181, 0, 318, 256, 305, 310,
	242, 236, 180, 307, 240, 235, 228, 207, 0, 220,
	268, 234, 269, 221, 246, 245, 247, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 229, 0,
	0, 0, 337, 0, 280, 262, 0, 0, 0, 278,
	232, 306, 270, 312, 296, 320, 274, 271, 172, 297,
	201, 243, 183, 185, 197, 204, 206, 208, 209, 252,
	253, 265, 285, 299, 300, 301, 200, 193, 279, 194,
	218, 195, 173, 287, 196, 175, 266, 304, 0, 214,
	275, 239, 176, 238, 267, 303, 302, 184, 328, 334,
	335, 339, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 333,
	212, 169, 170, 316, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 332, 0, 0, 0, 0,
	283, 0, 0, 0, 0, 0, 223, 264, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 314, 326, 343, 346, 0, 0, 0,
	174, 345, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 341,
	248, 249, 250, 251, 215, 0, 191, 344, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 211, 217, 0, 219,
	190, 263, 213, 323, 226, 0, 0, 0, 255, 222,
	288, 227, 233, 276, 322, 261, 281, 188, 313, 289,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 231, 0, 272, 210, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 298, 0, 0, 329, 330, 331,
	315, 0, 202, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 290, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 295,
	311, 187, 286, 324, 192, 293, 182, 259, 282, 0,
	0, 179, 309, 292, 241, 224, 225, 178, 0, 277,
	203, 216, 199, 257, 0, 308, 336, 198, 327, 0,
	319, 181, 0, 318, 256, 305, 310, 242, 236, 180,
	307, 240, 235, 228, 207, 0, 220, 268, 234, 269,
	221, 246, 245, 247, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 229, 0, 0, 0, 337,
	0, 280, 262, 0, 0, 0, 278, 232, 306, 270,
	312, 296, 320, 274, 271, 172, 297, 201, 243, 183,
	185, 197, 204, 206, 208, 209, 252, 253, 265, 285,
	299, 300, 301, 200, 193, 279, 194, 218, 195, 173,
	287, 196, 175, 266, 304, 0, 214, 275, 239, 176,
	238, 267, 303, 302, 184, 328, 334, 335, 339, 0,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 333, 212, 169, 170,
	316, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 332, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 223, 264, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	314, 326, 343, 346, 0, 0, 0, 174, 345, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 341, 248, 249, 250,
	251, 215, 0, 191, 344, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 211, 217, 0, 219, 190, 263, 213,
	323, 226, 0, 0, 0, 255, 222, 288, 227, 233,
	276, 322, 261, 281, 188, 313, 289, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	231, 0, 272, 210, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 298, 0, 0, 329, 330, 331, 315, 0, 202,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 205,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 290,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 677, 678, 1716, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 295, 311, 187, 286,
	324, 192, 293, 182, 259, 282, 0, 0, 179, 309,
	292, 241, 224, 225, 178, 0, 277, 203, 216, 199,
	257, 0, 308, 336, 198, 327, 0, 319, 181, 0,
	318, 256, 305, 310, 242, 236, 180, 307, 240, 235,
	228, 207, 0, 220, 268, 234, 269, 221, 246, 245,
	247, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 294,
	0, 0, 229, 0, 0, 0, 337, 0, 280, 262,
	0, 0, 0, 278, 232, 306, 270, 312, 296, 320,
	274, 271, 172, 297, 201, 243, 183, 185, 197, 204,
	206, 208, 209, 252, 253, 265, 285, 299, 300, 301,
	200, 193, 279, 194, 218, 195, 173, 287, 196, 175,
	266, 304, 0, 214, 275, 239, 176, 238, 267, 303,
	302, 184, 328, 334, 335, 339, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 333, 212, 169, 170, 316, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 332,
	0, 0, 0, 0, 283, 0, 0, 0, 0, 0,
	223, 264, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 314, 326, 343,
	346, 0, 0, 0, 174, 345, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 341, 248, 249, 250, 251, 215, 0,
	191, 344, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 338,
	211, 217, 0, 219, 190, 263, 213, 323, 226, 260,
	0, 0, 255, 222, 288, 227, 233, 276, 322, 261,
	281, 188, 313, 289, 237, 0, 205, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 290, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 677, 678,
	1716, 0, 0, 0, 186, 171, 0, 231, 0, 272,
	210, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 315, 0, 202, 0, 0, 0,
	0, 0, 177, 295, 311, 187, 286, 324, 192, 293,
	182, 259, 282, 0, 0, 179, 309, 292, 241, 224,
	225, 178, 0, 277, 203, 216, 199, 257, 0, 308,
	336, 198, 327, 0, 319, 181, 0, 318, 256, 305,
	310, 242, 236, 180, 307, 240, 235, 228, 207, 0,
	220, 268, 234, 269, 221, 246, 245, 247, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 229,
	0, 0, 0, 337, 0, 280, 262, 0, 0, 0,
	278, 232, 306, 270, 312, 296, 320, 274, 271, 172,
	297, 201, 243, 183, 185, 197, 204, 206, 208, 209,
	252, 253, 265, 285, 299, 300, 301, 200, 193, 279,
	194, 218, 195, 173, 287, 196, 175, 266, 304, 0,
	214, 275, 239, 176, 238, 267, 303, 302, 184, 328,
	334, 335, 339, 0, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	333, 212, 169, 170, 316, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 332, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 223, 264, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 314, 326, 343, 346, 0, 0,
	0, 174, 345, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	341, 248, 249, 250, 251, 215, 0, 191, 344, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 338, 211, 217, 0,
	219, 190, 263, 213, 323, 226, 260, 0, 0, 255,
	222, 288, 227, 233, 276, 322, 261, 281, 188, 313,
	289, 237, 0, 205, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 290, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 676, 677, 678, 0, 0, 0,
	0, 186, 171, 0, 231, 0, 272, 210, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 315, 0, 202, 0, 0, 0, 0, 0, 177,
	295, 311, 187, 286, 324, 192, 293, 182, 259, 282,
	0, 0, 179, 309, 292, 241, 224, 225, 178, 0,
	277, 203, 216, 199, 257, 0, 308, 336, 198, 327,
	0, 319, 181, 0, 318, 256, 305, 310, 242, 236,
	180, 307, 240, 235, 228, 207, 0, 220, 268, 234,
	269, 221, 246, 245, 247, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 229, 0, 0, 0,
	337, 0, 280, 262, 0, 0, 0, 278, 232, 306,
	270, 312, 296, 320, 274, 271, 172, 297, 201, 243,
	183, 185, 197, 204, 206, 208, 209, 252, 253, 265,
	285, 299, 300, 301, 200, 193, 279, 194, 218, 195,
	173, 287, 196, 175, 266, 304, 0, 214, 275, 239,
	176, 238, 267, 303, 302, 184, 328, 334, 335, 339,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 333, 212, 169,
	170, 316, 122, 258, 37, 112, 93, 0, 0, 0,
	0, 0, 254, 332, 0, 0, 0, 0, 283, 0,
	0, 0, 117, 0, 223, 264, 0, 284, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	291, 314, 326, 343, 346, 0, 0, 0, 174, 345,
	0, 0, 0, 70, 0, 0, 0, 317, 0, 119,
	0, 325, 0, 0, 0, 0, 0, 341, 248, 249,
	250, 251, 215, 0, 191, 344, 273, 754, 755, 756,
	753, 0, 0, 0, 0, 2254, 0, 0, 0, 0,
	0, 0, 0, 338, 211, 217, 0, 219, 190, 263,
	213, 323, 226, 0, 0, 0, 255, 222, 288, 227,
	233, 276, 322, 261, 281, 188, 313, 289, 237, 1668,
	0, 0, 0, 862, 0, 0, 0, 113, 114, 0,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2674, 0, 0, 0,
	0, 0, 1146, 0, 0, 0, 2236, 0, 0, 171,
	0, 231, 0, 272, 210, 0, 0, 0, 592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 111, 120, 0, 68,
	0, 0, 0, 0, 0, 329, 330, 331, 315, 0,
	202, 0, 0, 0, 0, 110, 104, 103, 0, 0,
	0, 0, 43, 850, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 870, 874, 876, 878, 880, 881, 883, 0, 887,
	884, 885, 886, 0, 0, 865, 866, 867, 868, 848,
	849, 871, 0, 851, 0, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 863, 869, 0, 0, 0,
	106, 107, 108, 0, 873, 875, 877, 879, 882, 0,
	2240, 0, 0, 0, 0, 1142, 0, 0, 1139, 0,
	0, 2244, 1141, 1138, 1140, 1144, 1145, 0, 622, 0,
	1143, 621, 0, 0, 0, 0, 78, 0, 0, 864,
	109, 2233, 79, 0, 0, 2235, 2237, 2239, 0, 2241,
	2242, 2243, 2245, 2246, 2247, 2249, 2250, 2251, 2252, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 0, 2254,
	0, 0, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2255, 0, 0, 0, 0, 80, 0, 0, 612, 0,
	0, 0, 0, 1668, 81, 36, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2253, 0, 0, 0,
	0, 0, 0, 0, 2254, 0, 0, 0, 0, 0,
	2236, 0, 0, 2232, 0, 0, 0, 38, 0, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1149, 1150, 1151, 1152, 1153, 1154, 1147, 1148, 1668, 0,
	0, 0, 2248, 0, 0, 0, 591, 0, 0, 2238,
	94, 0, 0, 0, 0, 0, 0, 594, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 2334, 0, 0,
	0, 0, 0, 0, 0, 2236, 0, 0, 0, 0,
	0, 610, 0, 0, 0, 0, 0, 396, 0, 395,
	402, 392, 0, 0, 0, 0, 0, 0, 82, 83,
	87, 399, 400, 0, 401, 405, 0, 0, 387, 0,
	0, 0, 0, 611, 616, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 0, 606, 619, 0, 0, 0, 603, 601, 600,
	0, 605, 595, 596, 2240, 617, 618, 414, 0, 872,
	415, 0, 0, 0, 0, 2244, 0, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2262, 0, 2233, 0, 0, 0, 2235,
	2237, 2239, 0, 2241, 2242, 2243, 2245, 2246, 2247, 2249,
	2250, 2251, 2252, 0, 608, 0, 0, 2272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2240,
	2265, 0, 0, 0, 0, 0, 2260, 0, 0, 0,
	2244, 2275, 2276, 0, 2255, 0, 0, 2261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2233, 0, 0, 0, 2235, 2237, 2239, 0, 2241, 2242,
	2243, 2245, 2246, 2247, 2249, 2250, 2251, 2252, 0, 0,
	2253, 0, 2266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2232, 0, 0,
	388, 390, 389, 0, 0, 0, 0, 0, 394, 2255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 2248, 413, 0, 0,
	0, 0, 0, 2238, 391, 0, 0, 396, 382, 395,
	402, 392, 0, 0, 0, 2253, 0, 0, 0, 0,
	0, 399, 400, 0, 401, 405, 0, 0, 387, 0,
	0, 396, 2232, 395, 402, 392, 0, 0, 410, 2274,
	0, 2048, 0, 0, 0, 399, 400, 0, 401, 405,
	0, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 2248, 410, 0, 0, 0, 2268, 414, 2238, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2267, 2269,
	0, 0, 0, 0, 0, 393, 397, 403, 0, 404,
	406, 0, 0, 407, 408, 409, 0, 0, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2263, 0, 0,
	0, 0, 0, 2273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 390, 389, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 388, 390, 389, 413, 0, 0,
	0, 0, 394, 0, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 397, 403, 0, 404,
	406, 0, 0, 407, 408, 409, 0, 0, 411, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	397, 403, 0, 404, 406, 0, 0, 407, 408, 409,
	0, 0, 411, 412,
}

var yyPact = [...]int{
	27602, -1000, -299, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -165, 25536, 25536, -1000,
	-1000, 1536, -1000, 25039, 9622, 26033, 157, 147, 26033, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 398, -1000,
	24542, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 358, 28097,
	276, 270, 7624, 26033, -281, -1000, 2303, -150, -1000, -1000,
	-1000, -1000, 391, 588, 24045, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27752, 80, 588, 562, 577, 664, 664, 11113, 2303, 241,
	311, -1000, 741, 27602, 27304, 336, 26033, -1000, 1001, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 336, -1000,
	-1000, -1000, 2303, 2303, -1000, 26033, 26033, -28, 1098, -1000,
	236, 225, 259, 996, -1000, -1000, -1000, -1000, -1000, 2180,
	-1000, 26033, 26033, 1828, 26033, -1000, 1342, 309, 28327, 2001,
	893, 471, 1853, -1000, -1000, 1809, -1000, 60, 252, 97,
	733, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 76, -1000,
	2061, -1000, -1000, 61, -1000, -1000, 48, -1000, -1000, -1000,
	-94, -1000, -1000, -1000, -1000, -1000, -158, -158, 606, 1146,
	7624, -1000, 1212, -1000, 1810, -1000, -1000, -1000, -1000, 5130,
	9115, 9115, 9115, 9115, -1000, -1000, 1681, 7624, 1808, 1807,
	-1000, -1000, -1000, -1000, 993, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1460, 8618, -1000,
	1803, 1802, 1799, 1798, 1796, 1794, 1792, 1791, 1789, 1788,
	1787, 1585, 1783, 1459, 1458, 1779, 1776, 1773, 9115, 1457,
	1585, 1585, 1758, 1753, 1750, 1745, 1738, 1726, 1724, 1722,
	1719, 1718, 1717, 1714, 1713, 1712, 1710, 1708, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1345, -1000, 984, 775, -1000, 1704, 1986, 2082, 1628,
	2159, 2084, 2080, 2052, 2045, 1318, -1000, -1000, 50, 354,
	354, 354, 386, 354, 397, 396, -1000, -1000, -1000, -1000,
	-1000, -1000, 467, -1000, -1000, -1000, -1000, 790, 26033, -1000,
	1617, 1062, 2094, 321, 320, 203, -1000, 1062, 233, 308,
	2082, 2082, -81, -115, 1062, 1062, -115, 62, -1000, -1000,
	-1000, 1090, 310, 1090, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2048, 2040, 358, 358, 361, -1000, -162, -1000, -1000,
	591, -1000, 491, -1000, 1342, 303, 302, 807, 1130, -1000,
	1054, 26033, 26033, 26033, 1054, 1054, 14098, 13601, -1000, 2082,
	1628, -1000, 1569, 1679, 1628, 358, 358, 358, 358, 358,
	358, 358, 26033, 6621, 6621, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 282, -1000, -1000, -1000, -1000, -1000, 230,
	1703, -1000, 26033, 222, 2082, 1986, 2082, -1000, -1000, 975,
	1315, 1443, -1000, -1000, 236, 1051, -1000, 623, -1000, -1000,
	-1000, -1000, 26033, 231, -1000, -1000, 1411, 1702, -1000, 334,
	712, 855, -1000, 55, 28351, 21553, 1342, 21553, 26033, -1000,
	-1000, -1000, -1000, -1000, -1000, -97, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 63,
	-1000, 63, 7624, 7624, 7624, 7624, 7624, -1000, 456, 8121,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 9115, 9115, 9115,
	9115, 9115, 9115, 9115, 9115, 9115, 9115, 9115, 9115, 1675,
	1132, 9115, 9115, 9115, 1679, 2060, 798, -1000, -1000, -1000,
	-1000, -1000, 1109, 1146, 7624, 7624, 26033, -1000, 27597, 7624,
	7624, 10759, 7624, 2027, 2027, 3638, 26033, 7624, -1000, 1568,
	1566, -1000, -1000, 1200, 7624, -1000, -1000, 7624, 9115, 7624,
	-1000, -1000, -1000, -1000, 197, 2027, 7624, 7624, 2027, 2027,
	2027, 1110, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
	26033, 1962, 32, -1000, -1000, -1000, 1603, -1000, 1650, 1650,
	1603, 1603, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1701, 1700, -1000, -1000, 1643, 1643, 1643, 1603, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1691, 1691, 1692, 1691, 26033, 2082,
	-281, 6124, -1000, -286, 1986, 7624, -1000, -1000, 7624, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1441, 384, 354,
	-1000, 26033, 1135, 21553, 1342, 1332, 26033, 354, 354, 361,
	-1000, 26033, 790, 2011, 26033, 2160, 9115, 21553, 1090, 1062,
	-1000, 2160, 1090, -1000, -1000, -1000, 1062, 1062, -1000, -1000,
	-1000, -1000, 1090, 1090, -1000, -1000, -105, 2160, 2160, -103,
	26033, 26033, 354, 26033, -1000, -1000, -1000, -1000, 26033, -1000,
	-1000, 26033, 21553, 20062, -1000, -139, 553, 495, 530, -1000,
	-1000, 333, 421, 12606, 285, 21553, 4632, -1000, -1000, 1054,
	1054, 1054, 4632, 4632, 904, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1986, -1000, -1000, -1000, -1000, 26033, 21553, 1342,
	26033, 26033, 26033, 27304, -1000, 777, -1000, -1000, 10616, 971,
	777, 1433, 26033, 1845, 1961, -1000, 1689, 12109, 26033, -1000,
	-1000, -283, -1000, 11611, 26033, 1986, -1000, 1986, 2690, -1000,
	2086, -1000, 236, 154, -1000, -1000, -1000, -1000, -1000, -1000,
	970, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	771, -1000, 26033, -1000, -1000, 55, 21553, 1065, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 122, -1000, -1000, 148, -1000,
	375, -1, 1050, -1000, -1000, 47, 145, 416, 47, 1146,
	-1000, 1154, 1154, 1141, -1000, 417, -1000, -1000, -1000, -1000,
	1681, -1000, -1000, -1000, 2151, 2432, -1000, 1039, 1039, 997,
	997, 997, 997, 997, 1185, 1185, -1000, -1000, -1000, 5130,
	1675, 9115, 9115, 9115, 338, 2505, 3124, -1000, 7624, 1108,
	-1000, 7624, 1208, 900, 967, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1550, 606, 1543, 1451, 2179,
	1542, 7624, -1000, -1000, 7624, 1354, 7127, -1000, -1000, -1000,
	1541, 947, 1539, -1000, -1000, -1000, 1538, 750, 1534, 1462,
	1533, 745, 7624, 1048, 1042, 7624, 7624, 7624, 7624, 1531,
	7624, 7624, 7624, 7624, 7624, 7624, 7624, 7624, -1000, 7624,
	26, -1000, -1000, -1000, -1000, 1310, -1000, 1308, -1000, -1000,
	-1000, 1432, 1432, -1000, 1307, -1000, -1000, -1000, -1000, 1306,
	-1000, -1000, 1284, -1000, -1000, -1000, -1000, 1041, -1000, 1146,
	-1000, 1427, -1000, 953, 690, -1000, 1316, -1000, -1000, 23548,
	26033, 20, -1000, 1998, 698, -1000, -1, 611, 1827, 1959,
	26033, 26033, 23051, -1000, 1674, 1033, -1000, -1000, 7624, -1000,
	1819, 26033, 2160, -1000, 26033, 2160, 2160, 1062, 27304, 1090,
	26033, 1090, -1000, -1000, 1090, -1000, 898, -1000, 26033, -1000,
	-1000, -1000, -1000, 18, 698, 2156, 748, -1000, -1000, -1000,
	-1000, 26530, 26530, 13104, 26530, -1000, 1055, -1000, -1000, 537,
	489, 479, -1000, -1000, 365, -1000, -1000, 611, -1000, -1000,
	-1000, 1670, 1097, -1000, -1000, 9115, -1000, 4632, 4632, 4632,
	-1000, -1000, 16086, -1000, -1000, 686, 611, 1844, 662, -1000,
	662, -1000, 2160, 6621, -1000, 20062, -1000, -1000, 22547, -1000,
	22050, 2160, -290, 715, -1000, 1971, -283, 26033, 26033, 1024,
	82, -1000, 1022, -1000, 607, -1000, 1668, -1000, 1021, 1910,
	609, -1000, 1096, -1000, -1000, -1000, 897, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -29, -1000, -1000, 26033, 1411, 1020, 1065,
	645, -1000, 364, 883, 882, -1000, 21553, 59, 21553, -1000,
	21553, -1000, -1000, 227, -1000, 26033, 1984, -1000, -1000, -1000,
	1403, -305, 1974, -1000, -1000, -1000, -1000, -1000, 1011, -1000,
	338, 2505, 3022, -1000, 9115, 9115, 2051, 1103, -1000, 7624,
	1238, 247, 1118, 15092, 26033, -1000, -1000, 7624, 7624, -1000,
	2046, 2014, -1000, 7624, 7624, 1399, -1000, 26033, -1000, -1000,
	-1000, 15092, -1000, 9115, -1000, 7624, 1982, -98, -98, 1976,
	1964, 1938, 999, -98, 1890, 1823, 1705, 1672, 1661, 1653,
	1623, 1571, 1146, -1000, -1000, 1530, 1525, 998, -1000, 994,
	1524, 990, 979, 6124, -1000, -130, 7624, 7624, 7624, 1923,
	-1000, -1000, 1617, 1117, 1666, -72, 1078, -1000, 440, 21553,
	289, -1000, 1843, 200, -1000, 1959, -1000, 719, -1000, 1665,
	1664, 26033, 735, -1000, 864, 27602, -1000, 26033, 1146, -1000,
	1342, 1062, -1000, 2160, 943, -1000, -1000, 2160, -1000, 1062,
	-1000, 1062, 1090, 26033, -1000, -72, 1078, 440, 26033, 20062,
	20062, 20062, 20062, -1000, 1900, 1888, -1000, 1899, 1866, 1909,
	26033, 20062, 1617, -1000, 26917, -1000, -1000, -1000, -1000, -1000,
	1679, 973, 1891, 510, 7624, -1000, -1000, -1000, 472, 21553,
	1408, 285, -1000, -1000, -1000, -1000, -1000, 26033, 26033, 2165,
	-1000, 651, -1000, -1000, 835, -1000, 2165, -1000, 1282, 1407,
	1168, 607, 609, 972, -1000, 82, 26033, 1908, 1656, -1000,
	26033, -283, 6124, 244, -283, 26033, 6124, 2690, 1281, -1000,
	-1000, -1000, 2170, 21553, 1342, 1027, 1057, -1000, 56, -1000,
	119, 318, 1405, -1000, 392, 81, -1000, 1095, 1403, 388,
	-1000, -1000, 9115, -1000, -1000, -1000, -1000, 1146, 7624, 1522,
	-1000, 474, 474, 1521, -1000, 1603, 1650, -1000, 1603, 1643,
	1603, 474, 474, 1508, -1000, 1289, 1565, -1000, -1000, 1556,
	1537, 7624, -1000, 1506, 2538, 959, -98, -1000, 1640, -1000,
	-98, -98, -98, -98, -1000, -98, -98, -98, -98, -98,
	-98, -98, -98, -1000, -1000, -1000, 1404, -1000, -1000, -1000,
	1280, -1000, 1278, -1000, -59, -49, 1146, 1146, -1000, -1000,
	1916, 2009, 1991, 10119, 1317, -1000, -1000, 21056, -1000, 307,
	-1000, -1000, -1000, 406, 129, 1272, 298, -1000, 1465, 26033,
	-1000, -1000, -1000, -1000, -1000, 1078, 1078, 1078, 10119, 10119,
	336, 652, 814, 20062, 26033, -1000, 19565, 1505, -1000, 611,
	2160, -1000, 26033, -1000, 2160, 2160, 1062, -1000, 1317, 21056,
	307, 861, -1000, 1087, 1822, 1841, 1822, -1000, -1000, -1000,
	-1000, 1884, -1000, 1637, -1000, -1000, 861, -1000, -1000, -1000,
	-1000, -1000, 510, -1000, 2077, 520, 520, 520, 1504, -1000,
	645, 1497, -1000, -1000, -1000, -1000, 2162, 2158, 20559, 2162,
	-1000, -290, 2187, 241, 26033, 232, -1000, -283, 26033, -1000,
	-1000, 1496, 636, -283, -1000, 607, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1342, -1000, 102, -1000, -1000, -1000, -1000,
	-1000, -1000, -18, -1000, 26033, -1000, 1403, 1401, 79, 26033,
	-1000, 1146, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7624, -1000, -1000,
	-1000, 1529, -1000, -1000, 7624, -1000, 335, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1495, 1494, -288, -36, 2154, 2147, -1000, -1000, 241, 26033,
	1492, 615, -1000, -1000, -1000, 27703, 540, -1000, 26033, 1166,
	520, 354, 520, 1165, 1639, -1000, -1000, -1000, 1397, -5,
	-1000, -1000, -1000, 1396, 1376, 1265, -1000, -1000, 1300, 637,
	11, -1000, -1000, -1000, -1000, -1000, -1000, 1630, 15092, 15589,
	1369, 1490, 1488, 26530, 20062, 19565, 759, -1000, 811, -1000,
	-1000, -1000, 2160, -1000, -1000, 2160, -1000, -5, -1000, 2152,
	26033, 6124, -1000, -1000, 7624, 1626, -1000, 7624, -1000, -1000,
	-1000, -1000, -1000, 1625, 1967, -1000, -1000, -1000, -1000, -1000,
	-1000, 7624, 7624, -1000, -1000, -1000, 26033, -1000, -1000, -283,
	-1000, 607, 964, -1000, 607, 611, -1000, -1000, 82, -1000,
	-1000, -1000, -103, 1523, -1000, 1477, 2152, -1000, 2144, -1000,
	-1000, -290, 1368, -1000, 2140, 1366, 1338, -1000, 1617, 28018,
	10119, 28153, -1000, -1000, 26033, 26033, -1000, 26033, 26033, 354,
	7624, -1000, -1000, 214, -1000, -1000, 100, -1000, -1000, 1298,
	327, -1000, 18074, -1000, -1000, -1000, -1000, -1000, 63, 28018,
	2160, 759, 811, -1000, -1000, 1026, -1000, -1000, -1000, 2082,
	-1000, -1000, 1146, 26033, 1146, 19068, -1000, 2139, 2138, 1146,
	606, 609, 607, -1000, -103, -1000, -75, -41, -1000, -1000,
	58, 7624, -292, -1000, 1365, -39, -1000, -1000, 2003, 332,
	27953, -1000, 1078, 1078, 752, 1078, 1078, 1078, 1078, 268,
	261, 1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078,
	1078, 1078, 1078, 1078, 1078, 1616, -1000, -1000, 28153, -1000,
	-1000, 1175, 9115, -1000, -1000, 1364, 15589, 488, 523, 1614,
	-1000, 221, 2186, -1000, 1161, 1160, -1000, 26033, -1000, 1613,
	1663, 168, 1612, -1000, 1610, 1606, 26033, 1461, 317, 1362,
	-1000, -1000, 99, -1000, -1000, 960, -1000, 1603, 7624, -1000,
	-103, 332, 2152, -1000, -1000, 949, 938, -1000, -1000, -1000,
	-1000, -1000, 360, -65, -41, -1000, 2136, -48, 2135, 2134,
	1487, -1000, 3141, -1000, -1000, -1000, 606, -1000, 1602, -1000,
	2127, 241, 170, 2125, 28018, -1000, 1255, 1248, 1078, 1078,
	1218, 1359, 1356, 1355, 1078, 1078, 1215, 1353, 26917, 1214,
	1213, 1207, 1295, 1352, 635, 1292, 1285, 1219, 26033, 1600,
	1327, -1000, -1000, 2505, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1195, 1599, -117, -1000, -1000,
	1598, 18074, 257, 257, 18074, 18074, 18074, 1592, 413, -1000,
	-20, -1000, -1000, -1000, 18074, 1977, 1395, -1000, 170, 2082,
	-1000, -1000, 18571, 1587, 1194, -36, 2106, -1000, 1338, 2104,
	1338, 1338, -1000, -1000, 4135, -284, -66, 250, 26033, 1338,
	-1000, -1000, 2103, 229, -1000, -1000, -1000, 15092, 15092, -1000,
	-1000, -1000, -1000, 1350, 1344, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 284, 26033, 926,
	-1000, 1084, 1480, 7624, 1585, -206, 18074, 920, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 901, 892, 887, 18074, -1000,
	-1000, -1000, 207, -1000, 194, -1000, -1000, 1977, -1000, -1000,
	-1000, -1000, 2030, 14595, -56, -1000, 1343, -1000, 1338, -1000,
	-1000, 1119, -1000, -1000, -1000, -1000, -1000, 874, -1000, -1000,
	17577, 185, 217, 215, -1000, 382, -1000, -1000, -1000, -1000,
	-1000, -1000, 290, 866, -1000, 1327, 1325, -1000, 1299, -1000,
	1836, -1000, 57, 862, -1000, -1000, -1000, -1000, 832, -1000,
	-1000, 1078, 1304, 139, -1000, -1000, -1000, -1000, 26033, -1000,
	819, -1000, -1000, -1000, 753, -1000, -1000, -1000, -1000, 4135,
	-1000, 26033, -1000, 26033, 182, 1192, 9115, 1584, 9115, 1583,
	196, 1578, -1000, -1000, -1000, -1000, -1000, 413, -1000, 1824,
	1540, 2176, -1000, -1000, -1000, -1000, 194, 194, 194, 194,
	49, 1191, -1000, 1332, 587, -1000, 1076, -1000, 17080, 26033,
	-1000, -1000, 779, 1577, 2098, -1000, 2245, 26033, 2120, 26033,
	1575, 1049, 9115, -1000, -1000, 2183, -1000, 2177, 496, 496,
	-1000, -1000, -1000, 26033, 5627, -1000, 665, -1000, -1000, 330,
	190, -1000, 770, -1000, 758, 16583, 1186, 1973, -1000, -1000,
	-1000, 1241, 240, -1000, -1000, -1000, 1146, 26033, 757, -1000,
	1464, 176, -1000, -1000, -1000, 746, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 330, 1897, -1000, 1183, -1000, -1000, 27689,
	453, -1000, -1000, 27689, 180, -1000, 325, 1573, -1000, -1000,
	742, -1000, 1398, 494, 7624, -1000, 180, 28018, -1000, 7624,
	697, -1000, 28018, 687, -1000, -1000,
}

var yyPgo = [...]int{
	0, 140, 2640, 206, 171, 163, 203, 2639, 2637, 2011,
	2009, 2633, 2615, 2611, 2609, 2607, 2604, 2603, 2602, 2601,
	2596, 2593, 2592, 2591, 2590, 2589, 2588, 2586, 202, 2585,
	2584, 2583, 2582, 2581, 2579, 2578, 2577, 2576, 2575, 2574,
	2571, 2570, 2569, 2563, 2561, 2560, 2546, 2545, 2544, 138,
	2543, 1992, 2542, 2541, 2540, 2539, 2538, 183, 2537, 2534,
	2533, 2532, 2531, 2530, 2529, 2528, 2527, 2526, 2525, 2523,
	2522, 2519, 2518, 146, 2517, 2516, 2515, 2514, 2513, 2510,
	195, 204, 64, 2509, 50, 42, 156, 217, 107, 211,
	209, 150, 132, 77, 2508, 2025, 2506, 129, 186, 122,
	24, 2505, 143, 2504, 123, 40, 47, 207, 120, 58,
	69, 104, 2503, 181, 68, 87, 91, 2501, 2500, 98,
	2499, 66, 2498, 83, 62, 102, 26, 2497, 2496, 2495,
	76, 2492, 2489, 2488, 2487, 134, 2486, 99, 56, 2484,
	2483, 2482, 60, 2481, 29, 2480, 54, 2478, 2477, 2476,
	2475, 67, 2474, 2473, 12, 16, 18, 2472, 14, 1,
	2471, 182, 88, 89, 105, 2468, 370, 2466, 2465, 2464,
	126, 2463, 622, 2462, 2461, 2460, 2456, 9, 2455, 174,
	2454, 2453, 78, 112, 2452, 57, 157, 162, 2451, 2450,
	114, 73, 52, 113, 2449, 2448, 79, 180, 19, 41,
	0, 165, 35, 2446, 2444, 2443, 208, 2441, 160, 158,
	187, 131, 233, 125, 2440, 2433, 55, 2432, 135, 2427,
	103, 82, 2426, 151, 2425, 27, 145, 2424, 178, 2423,
	128, 2, 117, 2421, 2418, 28, 229, 2416, 2415, 2414,
	137, 2413, 2411, 61, 133, 2407, 2406, 2404, 23, 2402,
	36, 30, 2401, 97, 2400, 199, 2399, 167, 109, 148,
	142, 121, 184, 188, 72, 124, 1143, 116, 86, 17,
	2396, 185, 2394, 201, 190, 2393, 153, 2390, 200, 354,
	179, 2389, 154, 8, 53, 31, 2388, 7, 2383, 136,
	2381, 2380, 20, 2379, 22, 2378, 2377, 2376, 2375, 5,
	2373, 2372, 2358, 3, 6, 2357, 4, 176, 51, 111,
	2356, 110, 196, 2354, 2353, 2348, 2347, 2346, 325, 2344,
	2342, 2341, 2339, 2338, 2337, 2334, 2333, 63, 34, 2332,
	2331, 2330, 2329, 75, 115, 2328, 283, 177, 2327, 37,
	2325, 2324, 25, 2323, 32, 2320, 2319, 2318, 13, 161,
	2317, 2316, 15, 2293, 2284, 10, 11, 2283, 2282, 65,
	2281, 48, 33, 81, 80, 2266, 21, 70, 119, 2264,
	2263, 205, 197, 175, 2261, 169, 193, 212, 2260, 192,
	2259, 2258, 2257, 2256, 2255, 2254, 2251, 1177, 2249, 2248,
	194, 59, 93, 94, 2230, 2229, 2226, 74, 141, 96,
	92, 173, 2225, 155, 2223, 2222, 90, 2221, 2220, 2218,
	2208, 2205, 2203, 2202, 191, 130, 2201,
}

//line mysql_sql.y:8153
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 412, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 78, 410, 410, 410, 411, 411, 77,
	77, 66, 65, 358, 358, 357, 357, 356, 356, 355,
	355, 355, 354, 354, 354, 353, 353, 352, 352, 351,
	351, 349, 349, 350, 348, 347, 347, 347, 345, 345,
	343, 343, 344, 344, 338, 338, 341, 341, 339, 339,
	339, 339, 342, 337, 337, 337, 336, 336, 64, 64,
	64, 268, 268, 63, 63, 282, 282, 282, 282, 282,
	280, 280, 280, 280, 280, 280, 279, 279, 278, 278,
	283, 283, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 58, 58, 58, 58, 61, 61, 61, 62,
	277, 277, 277, 59, 60, 60, 267, 267, 272, 272,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 276, 276, 276, 274, 274, 273, 273, 275,
	275, 52, 52, 52, 55, 54, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 53, 53, 53, 53, 53,
	53, 50, 50, 50, 50, 50, 49, 49, 51, 51,
	265, 265, 264, 69, 69, 69, 69, 69, 69, 69,
	68, 68, 71, 71, 70, 72, 57, 57, 57, 57,
	57, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	382, 382, 382, 384, 384, 204, 205, 413, 207, 203,
	203, 203, 378, 378, 379, 380, 381, 381, 381, 67,
	7, 7, 47, 396, 396, 48, 403, 403, 318, 318,
	218, 218, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 321, 322,
	214, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 35, 34,
	34, 254, 254, 33, 414, 414, 187, 187, 41, 42,
	43, 32, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 332, 332, 416, 416, 416, 44, 45,
	317, 317, 317, 39, 38, 37, 36, 36, 31, 31,
	30, 30, 211, 211, 213, 213, 209, 415, 415, 294,
	294, 212, 212, 29, 29, 29, 210, 210, 186, 208,
	208, 208, 8, 8, 6, 11, 11, 11, 11, 11,
	11, 11, 11, 17, 19, 262, 262, 259, 18, 14,
	13, 16, 12, 15, 5, 5, 5, 5, 9, 9,
	10, 92, 92, 125, 125, 391, 391, 387, 387, 388,
	388, 388, 389, 389, 390, 390, 73, 326, 326, 326,
	326, 326, 326, 4, 114, 114, 115, 115, 325, 325,
	325, 325, 325, 325, 325, 409, 409, 367, 367, 367,
	368, 113, 113, 108, 108, 327, 327, 232, 369, 369,
	335, 335, 334, 334, 333, 333, 111, 111, 112, 112,
	95, 95, 81, 81, 340, 340, 340, 340, 346, 346,
	315, 315, 151, 151, 180, 180, 181, 181, 85, 85,
	86, 86, 86, 86, 86, 86, 375, 375, 377, 377,
	376, 110, 110, 106, 106, 107, 107, 107, 105, 105,
	104, 103, 103, 102, 100, 100, 100, 101, 101, 101,
	88, 88, 87, 87, 87, 87, 87, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 89,
	89, 383, 383, 383, 319, 319, 319, 324, 324, 163,
	163, 164, 164, 162, 162, 90, 90, 91, 91, 91,
	91, 161, 161, 160, 93, 93, 99, 98, 98, 94,
	94, 94, 94, 171, 171, 170, 170, 170, 170, 76,
	79, 79, 80, 118, 118, 169, 168, 168, 168, 117,
	117, 116, 116, 109, 109, 97, 97, 97, 97, 167,
	96, 165, 408, 408, 407, 407, 406, 404, 404, 404,
	405, 405, 405, 405, 360, 360, 360, 360, 360, 196,
	196, 196, 202, 202, 195, 195, 195, 195, 195, 206,
	201, 201, 197, 197, 198, 198, 198, 3, 3, 3,
	3, 23, 23, 23, 23, 27, 27, 385, 385, 20,
	392, 395, 393, 393, 397, 397, 397, 398, 398, 398,
	399, 399, 21, 394, 400, 400, 400, 263, 263, 260,
	261, 261, 258, 257, 257, 257, 402, 402, 401, 401,
	401, 199, 199, 22, 253, 253, 255, 256, 256, 247,
	247, 247, 247, 26, 251, 251, 252, 252, 252, 252,
	252, 248, 248, 250, 250, 246, 246, 246, 246, 246,
	25, 245, 245, 243, 243, 241, 241, 242, 242, 240,
	240, 240, 244, 244, 24, 24, 24, 83, 82, 82,
	82, 183, 183, 182, 182, 84, 320, 320, 284, 284,
	285, 285, 285, 288, 288, 300, 300, 301, 301, 299,
	299, 306, 306, 305, 305, 304, 304, 303, 303, 302,
	302, 302, 302, 297, 297, 296, 296, 286, 286, 286,
	286, 286, 287, 287, 287, 295, 295, 298, 298, 142,
	142, 143, 143, 143, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 365, 365, 366, 145, 145, 145, 149,
	149, 149, 149, 149, 149, 144, 144, 146, 146, 126,
	126, 124, 124, 119, 119, 120, 120, 121, 121, 122,
	122, 123, 123, 123, 123, 123, 123, 270, 270, 363,
	363, 364, 364, 359, 359, 359, 362, 362, 362, 362,
	362, 361, 361, 127, 178, 178, 178, 200, 200, 200,
	177, 177, 177, 141, 141, 140, 140, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 269, 269, 215, 215, 216, 216, 158, 157,
	157, 157, 157, 157, 155, 156, 154, 154, 154, 154,
	154, 153, 153, 152, 152, 152, 249, 249, 150, 150,
	148, 148, 148, 147, 147, 147, 307, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	224, 224, 229, 229, 374, 374, 373, 128, 128, 128,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 137,
	137, 137, 292, 292, 292, 292, 292, 293, 293, 293,
	290, 290, 291, 291, 233, 234, 234, 289, 289, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 331, 331, 331, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 386, 386, 386, 370, 370, 370, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 175, 175, 175, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 235, 235, 236, 236, 328, 328, 328, 328,
	328, 328, 329, 329, 330, 330, 330, 330, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 222, 172, 172,
	172, 237, 230, 230, 231, 231, 225, 225, 225, 225,
	225, 225, 225, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 226, 226, 228, 228, 239, 239, 239,
	238, 238, 238, 238, 238, 238, 238, 139, 139, 139,
	139, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 130, 130, 130, 130, 134, 134, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 135, 135, 135, 135, 133, 133, 133, 133,
	133, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 74, 75, 75,
	132, 179, 179, 308, 308, 311, 311, 309, 309, 310,
	312, 312, 312, 313, 313, 313, 314, 314, 314, 316,
	316, 185, 185, 185, 192, 192, 184, 184, 193, 193,
	194, 194, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 4, 0, 1, 1, 0, 1, 6,
	8, 9, 10, 0, 2, 1, 3, 3, 3, 1,
	3, 5, 0, 2, 3, 1, 3, 1, 1, 1,
	3, 1, 1, 1, 1, 0, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 2, 1, 2, 3, 4,
	3, 3, 1, 0, 1, 1, 0, 1, 8, 5,
	7, 0, 3, 8, 5, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 4,
	1, 3, 1, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 2, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 4, 6,
	1, 1, 1, 2, 4, 6, 1, 4, 1, 3,
	3, 4, 4, 4, 3, 3, 2, 4, 4, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 2, 2, 0, 1, 4, 2,
	4, 1, 5, 3, 2, 1, 2, 2, 4, 4,
	5, 2, 1, 3, 4, 4, 1, 2, 9, 7,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 2, 3, 4, 7, 2, 3, 3, 4, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 6, 8, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 6, 7, 4, 4,
	7, 8, 0, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 3, 1, 4, 6,
	4, 4, 4, 3, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 0, 4, 1, 3, 3, 1,
	5, 6, 5, 5, 3, 0, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 1, 3, 4, 0, 1,
	0, 1, 1, 3, 1, 1, 0, 4, 1, 3,
	2, 1, 0, 8, 0, 4, 7, 4, 0, 2,
	0, 2, 0, 2, 0, 4, 1, 3, 1, 1,
	4, 3, 4, 5, 4, 5, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 11, 0, 1, 7,
	1, 4, 1, 1, 3, 4, 3, 0, 1, 1,
	0, 2, 7, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 0,
	1, 1, 1, 11, 0, 2, 3, 2, 3, 1,
	1, 1, 3, 3, 4, 0, 2, 2, 2, 2,
	5, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 11, 9, 11, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 0, 1, 0, 6,
	0, 3, 5, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 5, 6, 5, 0, 3, 0, 1, 0,
	1, 1, 3, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 4, 1, 3, 3, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	1, 7, 7, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 6, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 5, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -412, -2, -1, -3, -77, -4, -73, -5, -6,
	-8, -56, -68, -70, -72, -71, -28, -7, -67, -49,
	-50, -52, -58, -63, -64, -65, -66, -74, -75, -76,
	-85, -78, -23, -22, -21, -20, 393, 12, 435, -9,
	-10, -375, -11, 230, -203, -204, -205, -207, -413, -29,
	-30, -31, -36, -37, -38, -39, -44, -45, -46, -32,
	-33, -34, -35, -41, -42, -43, -48, -47, 207, -51,
	61, -53, -54, -55, -59, -60, -61, -62, 324, 330,
	383, 392, 516, 517, 46, -86, -88, 518, -24, -25,
	-26, -27, 203, 14, 468, -12, -15, -13, -16, -14,
	-18, -19, -17, 225, 224, 37, 288, 289, 290, 328,
	223, 204, 13, 135, 136, 138, 139, 30, -87, 67,
	205, -89, 10, 519, 428, -95, 38, -124, -200, 70,
	-188, -191, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 438, 305,
	306, 465, 242, 266, 354, 269, 276, 135, 154, 148,
	176, 168, 143, 246, 281, 247, 77, 138, 421, 87,
	404, 380, 141, 261, 263, 265, 268, 248, 164, 159,
	260, 244, 516, 157, 249, 39, 250, 181, 251, 252,
	470, 400, 304, 406, 273, 378, 158, 401, 264, 403,
	183, 187, 413, 330, 152, 153, 408, 415, 180, 222,
	42, 467, 234, 416, 185, 179, 175, 424, 277, 275,
	178, 151, 174, 245, 50, 189, 188, 190, 374, 375,
	376, 377, 253, 254, 318, 412, 171, 160, 309, 144,
	22, 419, 229, 405, 331, 255, 270, 278, 184, 186,
	236, 241, 469, 382, 240, 274, 417, 156, 233, 262,
	228, 420, 145, 324, 333, 256, 139, 267, 414, 423,
	49, 346, 150, 142, 219, 136, 238, 243, 11, 257,
	258, 259, 280, 279, 271, 172, 235, 177, 162, 149,
	173, 137, 237, 422, 347, 514, 307, 363, 170, 167,
	239, 212, 418, 407, 140, 367, 348, 165, 282, 511,
	512, 513, 319, 303, 283, 284, 163, 226, 399, 285,
	287, 373, 296, 349, 381, 355, 350, 196, -95, -51,
	-10, -9, -87, -88, -124, 210, -208, 23, 378, -57,
	379, 207, 67, -200, -5, -4, -73, -49, -85, -206,
	-200, 288, 288, -206, 210, -200, 240, 362, -318, 215,
	-279, -253, 241, -278, -255, -281, -256, 31, 203, 205,
	204, 237, 14, 328, 211, 12, 10, 329, 223, 24,
	25, 27, 13, 330, 332, 28, 333, 336, 337, 338,
	41, 341, 342, 230, 70, 73, 248, 248, -231, -225,
	94, 231, -227, -220, -221, -223, -355, -349, -219, 67,
	119, 120, 127, 95, -222, -307, 35, 97, 475, 436,
	-173, -174, -175, -176, -200, -350, -348, 73, 78, 81,
	84, 85, 83, 82, 161, 80, 74, 131, 132, -88,
	70, -370, 483, -189, 504, 484, 503, 46, -323, -330,
	209, -328, 166, 226, 162, 12, 125, 373, 130, 163,
	480, 500, 438, 507, 477, 478, 472, 473, 474, 476,
	485, 487, 499, -331, 495, 505, 506, 493, 72, 71,
	498, 497, 486, 481, 482, 488, 471, 479, 489, 490,
	496, 501, 502, 312, 87, 313, 314, 428, 308, 315,
	215, 378, 55, 316, 317, 318, 319, 320, 435, 321,
	56, 322, 311, 230, 363, 323, 165, 182, 440, 439,
	441, 432, 429, 427, 430, 431, 433, 434, 491, 492,
	494, -275, -273, -200, -79, -80, 509, -104, -105, -166,
	19, 6, 7, 8, 9, -410, 380, 469, -320, 305,
	363, 240, -247, -245, 285, 281, 339, 220, 219, 88,
	428, 209, -387, -388, 200, 201, 202, -377, 461, -376,
	-200, 314, 26, 210, 325, 410, 411, -40, -332, -317,
	407, 406, -212, 405, 398, 409, 400, 203, 462, -185,
	349, 381, 236, 425, 426, 326, 382, 413, 414, 401,
	87, 169, 166, 305, 363, -387, 140, 137, -266, 140,
	93, 145, 144, -266, 240, 362, 40, -272, 373, -271,
	-273, 413, 414, 424, 71, 72, 412, -185, 87, -105,
	-166, -104, -86, -88, -375, 305, 363, 240, 211, 210,
	212, 428, 288, -319, -383, 31, -324, 197, 198, 199,
	32, 33, -1, -201, -198, -191, 70, 71, 72, -111,
	232, -124, 133, -111, -105, -104, -105, -124, -177, -200,
	380, 103, -57, -57, 379, -378, -379, -380, -382, 207,
	379, 378, 133, 15, -206, -206, 65, -124, -255, 240,
	-279, -253, 35, 64, 134, 213, 134, 64, 67, 326,
	305, 363, 327, 428, 210, 339, 212, 240, 340, 305,
	363, 210, 212, 428, 240, 305, 210, 212, 363, 240,
	340, 398, 399, 212, 26, 331, 334, 335, 399, -336,
	424, -336, 134, 93, 90, 91, 92, -225, 110, -238,
	103, 104, 105, 106, 107, 108, 109, 116, 115, 126,
	119, 120, 121, 122, 123, 124, 125, 117, 118, 113,
	94, 111, 112, 96, -88, -225, -231, -223, -223, -223,
	-223, -307, -229, -225, 67, 67, 133, 73, -225, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -329, 67,
	67, -235, -236, 67, 67, 73, 73, 67, 67, 67,
	-223, 73, -236, -236, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	134, -130, -134, -131, -133, -132, -136, -135, 166, 167,
	130, 170, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 30, 182, 226, 162, 163, 164, 165, 183,
	148, 168, 466, 191, 149, 192, 150, 193, 151, 194,
	152, 153, 195, 154, 157, 158, 159, 156, 133, -105,
	134, 67, -81, 38, -107, 21, -89, -88, 20, 31,
	32, 31, 32, 31, 32, 31, 32, 78, -385, 210,
	461, -243, 215, -243, -243, 211, -243, 210, 210, -389,
	147, 134, -377, -110, 67, -211, 111, 23, 238, 238,
	275, -211, -416, 211, 408, 42, 239, 238, -106, -107,
	-106, 402, 399, -294, 403, 404, -212, -211, -211, -212,
	210, 212, 428, -414, -415, 15, 113, 238, -414, 30,
	30, -318, -318, -390, 214, 417, 468, 143, 144, 145,
	-255, 240, 240, 134, 103, 23, -274, 103, 114, -273,
	-273, -273, -274, -274, -144, 40, -199, 130, -200, 73,
	-144, 40, -106, -89, -88, 68, 68, -318, -318, -318,
	-318, -318, -318, -318, -206, -90, -91, 121, -225, -200,
	-90, 38, 399, -325, -114, -85, 306, 67, 67, -200,
	-326, 46, -85, 67, 30, -106, -81, -107, 133, 78,
	73, -57, 68, 134, -381, 84, 85, -384, 180, 172,
	-200, -69, 73, -3, -4, -5, -6, -28, -49, -85,
	-351, -349, 67, 31, 372, 64, 15, -280, 210, 428,
	325, 236, 212, 305, -278, -262, -259, -257, -199, -255,
	-258, -257, -283, -177, 399, -82, 384, 287, -82, -225,
	-225, -225, -225, -225, 83, 94, 303, 84, 85, -220,
	-239, 31, 283, 284, -221, -221, -221, -221, -221, -221,
	-221, -221, -221, -221, -221, -221, -228, -237, -307, 67,
	113, 111, 112, 96, -223, -221, -221, 68, 134, -374,
	-373, 98, -225, -225, -200, -371, -372, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 316, 311,
	317, 315, 308, 323, 318, 319, 165, 459, 460, 453,
	454, 455, 456, 457, 458, -230, -231, -230, -225, -371,
	-230, -172, 32, 31, -172, -225, -386, 301, 300, 302,
	-108, -200, -230, 68, 68, 68, 78, -231, -230, -221,
	-230, -372, -172, -231, -231, -172, -172, -172, -172, 121,
	-172, -172, -172, -172, -172, -172, -172, -172, -273, 40,
	-314, 347, 346, -308, -310, 67, -309, 67, -309, -308,
	-308, 67, 67, -311, 67, -311, -311, -308, -312, 67,
	-312, -313, 67, -312, -200, -106, -80, -334, -333, -225,
	40, 510, -81, -225, -103, -102, -225, -411, 73, 212,
	-243, -392, -200, 94, -263, -260, -257, -253, -198, -200,
	-243, -243, -390, -376, 34, -109, -200, -162, 16, -223,
	-257, -414, -211, -162, -415, -211, -211, -213, -415, -209,
	-415, 399, -162, -162, -294, -210, -200, -210, -243, -187,
	-186, -200, -187, -392, -263, -98, -93, -97, -94, -99,
	-165, -167, -96, 67, -124, -88, -200, 418, 419, 141,
	144, 143, 31, 372, -277, 372, 31, -253, -271, -267,
	73, 373, -258, -276, 64, 130, -333, -274, -274, -274,
	-276, -276, 129, -81, -392, -262, -253, -200, -126, -124,
	-126, -201, -161, 134, -160, 15, -195, -200, 34, 73,
	133, -161, 73, -126, -409, 64, 46, 30, 67, -113,
	68, -108, -112, -200, -327, -232, -369, 509, -113, 68,
	-367, -368, -108, -81, -81, -193, -194, -184, -190, -197,
	-198, -191, 208, 31, 93, 34, 36, 312, 344, 96,
	130, 20, 97, 166, 129, 314, 436, 313, 203, 59,
	439, 441, 440, 429, 427, 365, 369, 371, 368, 428,
	398, 40, 14, 37, 224, 32, 33, 123, 205, 100,
	101, 227, 35, 225, 85, 44, 23, 62, 15, 17,
	18, 315, 364, 215, 214, 113, 384, 211, 57, 12,
	132, 38, 110, 366, 53, 89, 45, 55, 111, 21,
	430, 431, 41, 383, 392, 464, 231, 125, 316, 317,
	60, 94, 372, 83, 43, 64, 90, 19, 58, 112,
	206, 435, 56, 370, 320, 322, 332, 461, 321, 209,
	409, 10, 311, 437, 30, 223, 54, 210, 99, 213,
	84, 230, 6, 88, 13, 61, 65, 432, 433, 434,
	46, 98, 16, 323, 468, 385, 386, 387, 388, 389,
	390, 391, 191, 192, 193, 194, 195, 272, 218, 216,
	220, 221, 509, 510, 197, 198, 300, 302, 169, 200,
	201, 202, 232, 147, 7, 351, 352, 353, 356, 357,
	358, 359, 360, 361, 362, 517, 393, 394, 395, 396,
	397, 410, 411, 23, -57, -379, 133, 134, -109, -280,
	-261, -258, -282, 121, 70, -268, 134, 468, 520, 71,
	213, -402, -401, 364, 68, 134, -337, 214, 435, 73,
	521, 196, -337, 83, 303, 84, 85, -307, -231, -228,
	-223, -221, -221, -226, 227, 93, -225, -224, -373, 100,
	-225, 34, 134, 65, 133, 68, 68, 15, 15, 68,
	-225, -225, 68, 15, 15, -225, 68, 133, 68, 68,
	68, 65, 68, 134, 68, 134, -225, 68, 68, -225,
	-225, -225, -231, 68, -225, -225, -225, -225, -225, -225,
	-225, -225, -225, -316, 348, 78, 78, -179, 73, -179,
	78, 78, 78, 134, 68, 73, 134, 22, 134, -100,
	36, 37, -124, 215, -124, -395, 351, 35, -403, 134,
	40, -401, -246, 65, -241, -242, -240, -244, 40, -124,
	-124, 15, -92, -125, -200, 67, 68, 134, -225, -254,
	65, -187, -162, -124, -200, -162, -162, -211, -201, -213,
	-208, -213, -209, 133, -186, -396, 351, -403, 30, -168,
	-169, -170, -171, 53, 57, 59, 54, 55, 56, 60,
	30, 134, -196, -202, 34, -197, 73, -198, -191, -196,
	-88, -93, -98, -196, 67, 142, 145, 145, 144, 213,
	67, 103, -276, -276, -276, 40, -199, 64, 134, -162,
	-91, -93, -200, 73, -200, 121, -162, -151, 512, 38,
	39, -327, -367, -115, -392, 68, 134, -114, 306, 68,
	134, 134, 67, 68, 46, 134, 103, 133, 380, -200,
	-349, 68, -282, 134, 213, 133, 133, -259, 330, -199,
	-261, 20, 468, -177, 38, -183, -182, 73, 521, 38,
	68, -226, 93, -223, -220, 68, 101, -225, 99, -128,
	-130, 346, 347, -129, -135, 130, 166, 226, 165, 164,
	162, 346, 347, -144, -200, -225, -225, 68, 68, -225,
	-225, 15, -200, -144, -221, -225, 68, -289, 394, -289,
	68, 68, 68, 68, -289, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 134, 68, 68, 68,
	134, 68, 134, -333, -340, 403, -225, -225, -102, -101,
	43, -110, 94, 67, -398, 405, 353, -192, 103, -218,
	-217, 307, 41, -321, 373, 359, 360, -260, 240, 64,
	295, 296, 297, 298, -240, -185, 129, 251, 67, 67,
	-124, -92, -200, 15, 134, -391, 133, -1, -200, -253,
	-211, -162, -415, -162, -211, -211, -213, -200, -398, -192,
	-218, -265, -264, -177, -97, -97, -97, -97, 53, 53,
	53, 58, 53, 58, 53, -170, -265, -99, -110, -202,
	68, -408, -407, -406, -404, 61, 214, 62, -230, 145,
	-261, -214, 73, -267, -124, -124, -164, 17, 133, -164,
	78, 73, 89, 68, 134, -114, -108, 46, 67, -200,
	-232, -335, -334, 46, -85, -327, -368, -333, -193, -190,
	-198, -191, 78, 15, -258, -253, 121, 121, 70, 331,
	-268, 73, 352, 73, 210, 522, 134, 103, -183, 210,
	-220, -225, 68, -137, 153, 152, -137, 68, -308, -309,
	-308, -311, -308, -137, -137, 68, 68, 23, 68, 68,
	68, -225, 68, 68, 134, -289, 67, -289, -289, -289,
	-289, -289, -289, -289, -289, -289, -289, -289, -289, 73,
	78, 78, -346, 390, 385, 387, 44, 45, 34, 35,
	-119, -120, -121, -127, -122, -177, -216, -123, 218, 216,
	220, -364, 88, 221, 272, 89, 211, -399, 77, -393,
	73, -200, -400, 77, 354, 132, 309, 40, 355, 356,
	370, 304, 78, 78, 361, -394, 70, -124, -192, -192,
	-192, -119, -119, -111, 65, 133, -93, -125, -200, 121,
	68, -162, -200, -162, -162, -211, -399, -393, -400, -162,
	134, 103, -117, -116, 64, 65, -118, 64, -116, 53,
	53, -162, -406, -405, 23, -364, -364, -364, 68, 68,
	-163, 18, 20, 121, -163, -151, 13, -85, -392, 46,
	-85, -327, -115, 68, -327, -253, -268, 373, -124, -182,
	73, 522, -124, -225, 68, -225, -234, -233, 232, 68,
	68, -315, 511, -344, 385, 20, 20, -85, -124, 68,
	134, -130, -123, -200, 89, -363, -364, -243, -363, 89,
	67, 73, -397, 364, 73, 73, 78, 40, 78, 132,
	357, -322, 67, -144, -146, -199, 130, 73, 68, 68,
	-196, -93, -200, -162, -391, 133, -162, -162, -397, -105,
	-264, -333, -225, 67, -225, 67, 53, 19, 17, -225,
	-231, -367, -327, 68, -114, -84, -338, -294, 68, 68,
	-105, 20, -151, 73, 20, 73, -342, 73, -110, -142,
	-143, -159, 344, 242, -244, 246, 77, 247, 380, 248,
	211, 250, 251, 252, 222, 253, 254, 255, 373, 256,
	257, 258, 259, 327, 6, 291, -121, -141, -140, -138,
	83, 94, 40, 344, -139, 77, 129, 265, 243, 266,
	-158, -215, 64, 350, 216, 88, 89, 332, -216, -359,
	-361, -200, -361, -200, -359, -359, -243, -225, 20, 468,
	308, 40, 78, 40, 358, -248, -250, -177, 67, -83,
	-82, -142, -162, -162, -106, -109, -360, -200, 216, 20,
	20, -84, -345, 390, -341, -339, 385, 386, 387, 388,
	-291, -290, -293, 391, 274, 397, -231, -180, 513, 73,
	387, 34, -284, 232, 134, -159, -192, -192, -185, 129,
	-192, -192, -192, -192, 249, 249, -192, -192, -192, -192,
	-192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
	67, -138, 83, -221, 73, -146, -147, 40, 264, 260,
	-148, 40, 244, 245, -150, 67, 272, 13, 89, 89,
	-124, 67, 65, 282, 67, 67, 67, -361, 68, 73,
	352, 73, 308, 68, 134, -308, -225, -84, -284, -105,
	68, 68, 134, -347, 214, -343, 389, -339, 20, 387,
	20, 20, 68, -292, 96, 357, 361, -225, 67, 20,
	-85, -285, 281, 20, -159, 78, 78, -192, -192, 78,
	73, 73, 73, -192, -192, 78, 73, -202, 78, 78,
	78, 78, 40, 73, -149, 40, 260, 264, 261, 262,
	263, 78, 40, 78, 40, 78, 40, -200, 67, -365,
	-366, 73, 78, 67, -328, -249, 67, -248, -362, 295,
	296, 297, 299, 298, -362, -248, -248, -248, 67, -270,
	-269, 273, 94, 373, -251, -250, -100, 68, -285, -106,
	-200, 216, -354, 67, 78, -344, 20, -342, 20, -342,
	-342, -292, 509, 395, 396, 395, 396, -181, -200, -342,
	20, -286, 274, 275, -287, -298, 277, -144, -144, 73,
	73, -145, 243, -126, 68, 134, 103, 68, -225, -235,
	-153, -152, 464, -248, 68, 68, 68, 68, -248, 273,
	-252, 222, 77, 468, 293, 294, -100, -358, 30, 68,
	-353, -352, -178, -348, -200, 390, 391, 73, -342, 93,
	68, 134, -177, 67, -296, 278, 67, -294, 67, -294,
	89, 296, 244, 245, 68, -366, 73, 68, -157, -155,
	-156, 64, 401, 270, 271, 68, -251, -251, -251, -251,
	68, -192, 73, 292, -357, -356, -355, 68, 134, 133,
	-292, -200, -283, -288, 279, 78, -221, 67, -221, 67,
	-295, 276, 67, -269, -156, 64, -155, 64, 14, 13,
	-158, 78, -198, 134, 103, -352, -200, 68, -300, 67,
	20, 68, -283, 68, -283, 67, 103, -221, -154, 267,
	268, 30, 144, -154, -356, 40, -225, 133, -301, -299,
	232, -287, 68, 68, 68, -283, 78, 68, 83, 40,
	269, -200, 68, 134, 70, -297, 280, 68, -299, -302,
	46, 78, -306, -303, 67, -159, 234, 113, -306, -159,
	-305, -304, 279, 235, 67, 68, 134, 70, 231, 67,
	-231, -304, -303, -231, 68, 68,
}

var yyDef = [...]int{
	32, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 647, 648, 649, 650, 0, 0, 0, 414,
	415, 0, 394, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	322, 323, 324, 325, 326, 327, 280, 281, 0, 226,
	222, 201, 202, 203, 162, 163, 164, 165, 288, 0,
	0, 0, 0, 0, 0, 498, -2, 34, 651, 652,
	653, 654, -2, 427, 0, 395, 396, 397, 398, 399,
	400, 401, 402, 269, 270, 271, 265, 266, 268, 267,
	-2, 0, 427, 215, 0, 206, 206, 0, 518, 0,
	0, 532, 554, 32, 0, 476, 0, 481, 841, 877,
	878, 879, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 476, 227,
	416, 417, 518, 518, 392, 0, 251, 0, 1499, 255,
	0, 0, 0, 389, 246, 247, 248, 249, 250, 0,
	639, 0, 0, 242, 0, 221, 1558, 0, 0, 0,
	0, 0, 0, 106, 694, 108, 696, 112, 119, 0,
	0, 124, 125, 128, 129, 130, 131, 132, 0, 136,
	0, 138, 141, 0, 143, 144, 0, 147, 148, 149,
	0, 159, 160, 161, 697, 698, 86, 86, 1247, 1144,
	0, 1151, 1152, 1163, 1172, 949, 950, 951, 952, 0,
	0, 0, 0, 0, 959, 960, 0, 972, 1646, 0,
	966, 967, 968, 969, 49, 61, 62, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 0, 1117, 936,
	877, 0, 1654, 0, 1674, 1655, 1673, 0, 0, 1102,
	0, 1092, 0, -2, -2, 0, 0, 1625, 0, -2,
	1651, 1670, 1678, 1677, 1648, 1649, 1643, 1644, 1645, 1647,
	1656, 1658, 1669, 0, 1665, 1675, 1676, 0, 63, 64,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1108, -2, 1110, 1111, 1113, 1114, 1115,
	1116, -2, 1119, 1120, 1121, -2, -2, 1124, 1125, 1126,
	1127, 1128, 1129, 1132, -2, 1134, -2, 1136, 1104, 1105,
	1106, 1107, 1096, 1097, 1098, 1099, 1100, 1101, -2, -2,
	-2, 0, 199, 197, 518, 590, 0, -2, 0, 0,
	0, 537, 540, 543, 546, 0, 35, 36, 657, 723,
	723, 723, 0, 723, 0, 0, 747, 700, 701, 702,
	721, 722, 432, 428, 429, 430, 431, 506, 0, 508,
	511, 372, 329, 0, 0, 0, 340, 372, 0, 0,
	513, 513, 0, 381, 372, 372, -2, 0, 342, 343,
	344, 334, 0, 334, 348, 349, 350, 361, 362, 382,
	1271, 0, 0, 288, 288, 434, 216, 217, 205, 207,
	0, 211, 0, 204, 1558, 0, 0, 173, 1625, 178,
	0, 1506, 1572, 1521, 0, 0, 1539, 0, -2, 513,
	0, 519, 0, 518, 0, 288, 288, 288, 288, 288,
	288, 288, 0, 0, 0, 555, 556, 551, 552, 553,
	557, 558, 3, 0, 640, 641, 644, 645, 646, 444,
	0, 480, 0, 0, 513, -2, 0, 393, 252, 880,
	0, 0, 256, 257, 0, 0, 272, 0, 275, 260,
	261, 262, 0, 0, 244, 245, 0, 0, 223, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 116,
	113, 120, 123, 133, 140, 0, 152, 154, 157, 114,
	121, 126, 127, 134, 155, 115, 117, 118, 122, 156,
	158, 135, 139, 153, 137, 142, 145, 146, 151, 0,
	87, 0, 0, 0, 0, 0, 0, 1150, 0, 0,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1144, 0, 955, 956, 957,
	958, 961, 0, 973, 0, 0, 0, 1201, 0, 1142,
	1142, 0, 1142, 1138, 1138, 0, 0, 1142, 1080, 0,
	0, 1082, 1093, 0, 0, 1085, 1086, 1142, 0, 1142,
	1090, 1091, 1076, 1077, 0, 1138, 0, 0, 1138, 1138,
	1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
	0, 1248, 1266, 1203, 1204, 1205, 1253, 1207, 1257, 1257,
	1253, 1253, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 0, 0, 1246, 1226, 1255, 1255, 1255, 1253, 1250,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1260, 1260, 1263, 1260, 0, 513,
	0, 0, 501, 0, 482, 0, 534, 536, 0, 538,
	539, 541, 542, 544, 545, 547, 548, 37, 0, 723,
	658, 0, 0, 0, 0, 0, 0, 723, 723, 434,
	433, 0, 507, 0, 0, 563, 0, 0, 334, 372,
	339, 563, 0, 355, 356, 357, 372, 372, 363, 514,
	364, 365, 374, 0, 379, 380, 0, 563, 563, 0,
	0, 0, 723, 336, 335, 377, 378, 346, 336, 1272,
	1273, 0, 0, 0, 435, 0, 0, 209, 0, 214,
	166, 0, 0, 0, 0, 0, 0, 195, 196, 0,
	0, 0, 0, 0, 186, 189, 835, 836, 691, 692,
	190, 191, 482, 533, 535, 530, 531, 0, 0, 0,
	0, 0, 0, 0, 413, 571, 565, 567, 634, 49,
	571, 0, 0, 455, 0, 449, 0, 0, 0, 842,
	436, 468, 438, 0, 457, 482, 504, 482, 0, 253,
	0, 258, 0, 0, 274, 276, 277, 278, 263, 264,
	390, 240, 241, 233, 234, 235, 236, 237, 238, 239,
	243, 59, 0, 224, 225, 0, 0, 0, 100, 101,
	102, 103, 104, 105, 107, 91, 405, 407, 683, 695,
	0, 686, 0, 110, 150, 83, 0, 0, 83, 1145,
	1146, 1147, 1148, 1149, 1153, 0, 1155, 1157, 1159, 1161,
	0, 1177, -2, -2, 937, 938, 939, 940, 941, 942,
	943, 944, 945, 946, 947, 948, 1164, 1175, 1176, 0,
	0, 0, 0, 0, 1173, 1168, 0, 953, 0, 970,
	974, 0, 0, 0, 50, 1137, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 0, 1143, 0, 1144, 0,
	0, 0, 1139, 1140, 0, 0, 0, 1041, 1042, 1043,
	0, 463, 0, 1103, 1081, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	1269, 1267, 1268, 1206, 1254, 0, 1231, 0, 1232, 1233,
	1234, 0, 0, 1227, 0, 1228, 1229, 1230, 1222, 0,
	1223, 1224, 0, 1225, 198, 589, 591, 0, 472, 474,
	475, 0, 502, 515, 520, 521, 524, 33, 38, 0,
	0, 0, 660, 0, 286, 677, 0, 693, 715, -2,
	0, 0, 0, 509, 0, 0, 603, 328, 0, 373,
	331, 336, 563, 341, 0, 563, 563, 372, 0, 374,
	0, 374, 368, 369, 0, 383, 386, 384, 0, 345,
	337, 388, 347, 283, 286, 576, 0, 577, 578, 574,
	605, 629, 629, 0, 629, 609, 841, 218, 219, 0,
	0, 213, 167, 168, 0, 170, 171, 172, 179, 174,
	176, 0, 0, 180, 192, 193, 194, 0, 0, 0,
	184, 185, 0, 500, 403, 404, 408, 0, 410, 839,
	411, 412, 563, 0, 572, 0, 568, 635, 0, 637,
	0, 563, 492, 0, 443, 0, 468, 457, 0, 0,
	444, 461, 0, 478, 437, 465, 0, 469, 0, 0,
	442, 458, 0, 503, 505, 881, 0, 1278, -2, 1280,
	-2, -2, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 0, 259, 273, 0, 0, 0, 0,
	94, 680, 0, 95, 99, 89, 0, 0, 0, 685,
	0, 682, 687, 0, 109, 0, 0, 84, 85, 738,
	743, 0, 0, 1154, 1156, 1158, 1160, 1162, 0, 1165,
	1173, 1169, 0, 1166, 0, 0, 1145, 0, 975, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 1033,
	0, 0, 1036, 0, 0, 0, 1040, 0, 1079, 1095,
	1083, 0, 1087, 0, 1089, 0, 0, 1007, 1007, 0,
	0, 0, 0, 1007, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 1202, 1270, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 592, 484, 0, 0, 0, 527,
	525, 526, 511, 0, 0, 667, 1274, 724, 290, 0,
	0, 679, 0, 0, 720, -2, 727, 0, 733, 0,
	0, 0, 0, 421, 425, 32, 512, 0, 564, 330,
	0, 372, 338, 563, 841, 358, 359, 563, 375, 372,
	376, 372, 374, 0, 385, 667, 1274, 290, 0, 0,
	0, 0, 0, 596, 0, 0, 595, 0, 0, 0,
	0, 0, 511, 630, 0, 632, 633, 642, 643, 607,
	-2, 0, 576, 612, 1142, 220, 208, 210, 0, 0,
	0, 0, 181, 182, 183, 187, 188, 0, 0, 561,
	566, 573, 636, 638, 50, 569, 561, 39, 0, 0,
	0, 448, 454, 0, 446, 444, 0, 0, 0, 477,
	0, 468, 470, 0, 468, 0, 0, 0, 0, 391,
	60, 279, 0, 0, 0, 0, 0, 406, 0, 684,
	91, 0, 0, 111, 0, 0, 741, 0, 743, 0,
	1141, 1167, 0, 1174, 1170, 954, 962, 971, 0, 0,
	977, 989, 989, 0, 980, 1253, 1257, 983, 1253, 1255,
	1253, 989, 989, 0, 51, 0, 0, 1034, 1035, 0,
	0, 0, 464, 0, 0, 0, 1007, 1010, 0, 1011,
	1007, 1007, 1007, 1007, 1016, 1007, 1007, 1007, 1007, 1007,
	1007, 1007, 1007, 1259, 1258, 1244, 0, 1245, 1256, 1261,
	0, 1264, 0, 473, 488, 0, 516, 517, 522, 523,
	0, 0, 0, 843, 670, 668, 669, 0, 1275, 674,
	291, 292, 293, 294, 0, 0, 0, 678, 0, 0,
	716, 717, 718, 719, 728, 1274, 1274, 1274, 843, 843,
	476, 0, -2, 0, 0, 423, 0, 0, 604, 332,
	563, 351, 0, 366, 563, 563, 372, 387, 670, 0,
	674, 563, 230, 0, 599, 593, 0, 582, 597, 598,
	585, 0, 587, 0, 583, 584, 563, 575, 606, 631,
	608, 611, 613, 614, 620, 0, 0, 0, 0, 212,
	169, 0, 310, 175, 409, 840, 559, 0, 0, 559,
	493, 492, 0, 445, 0, 0, 462, 468, 0, 479,
	466, 0, 471, 468, 441, 440, 459, 460, 882, 1279,
	1276, 1277, 254, 0, 681, 91, 96, 97, 98, 92,
	90, 688, 0, 690, 0, 739, 743, 0, 0, 0,
	1171, 976, 963, 978, 990, 991, 979, 964, 981, 982,
	984, 985, 986, 987, 988, 965, 1030, 0, 1032, 1037,
	1038, 0, 1084, 1088, 0, 1009, 1005, 1012, 1013, 1014,
	1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1252,
	0, 0, 490, 72, 0, 0, 528, 529, 0, 0,
	0, 844, 845, 847, 848, 0, 0, 850, 906, 0,
	859, 723, 859, 0, 0, 861, 862, 659, 0, 0,
	662, 663, 672, 0, 0, 0, 296, 297, 0, 0,
	0, 309, 305, 306, 307, 287, 673, 0, 0, 0,
	0, 0, 0, 629, 0, 0, 563, 422, 425, 426,
	510, 333, 563, 370, 367, 563, 282, 0, 285, 518,
	0, 0, 579, 600, 0, 0, 580, 0, 581, 586,
	588, 229, 615, 0, 0, 617, 618, 619, 610, 177,
	549, 0, 0, 570, 550, 40, 457, 450, 447, 468,
	453, 452, 0, 467, 439, 93, 88, 689, 444, 742,
	744, 740, 74, 0, 1039, 0, 518, 1006, 0, 1262,
	1265, 492, 0, 489, 0, 0, 0, 655, 511, -2,
	0, -2, 849, 907, 871, 871, 860, 871, 871, 723,
	0, 671, 661, 0, 675, 676, 0, 298, 299, 0,
	302, 308, 0, 729, 730, 837, 838, 731, 0, -2,
	563, 563, -2, 419, 424, 0, 352, 371, 284, 513,
	231, 232, 601, 0, 594, 624, 621, 0, 0, 560,
	562, 456, 451, 445, 74, 41, 68, 0, 1031, 1078,
	1002, 0, 494, 491, 0, 485, 487, 82, 0, 748,
	-2, 791, 1274, 1274, 0, 1274, 1274, 1274, 1274, 0,
	0, 1274, 1274, 1274, 1274, 1274, 1274, 1274, 1274, 1274,
	1274, 1274, 1274, 1274, 1274, 0, 846, 873, -2, 885,
	887, 0, 0, 890, 891, 0, 0, 0, 0, 928,
	897, 0, 0, 901, 0, 1189, 1190, 0, 905, 0,
	863, 872, 0, 872, 0, 0, 871, 0, 0, 0,
	295, 300, 0, 303, 304, 0, 711, 1253, 0, 735,
	74, 748, 518, 420, 228, 0, 0, 625, 627, 622,
	623, 42, 65, 70, 75, 76, 0, 0, 0, 0,
	0, 1003, 0, 997, 998, 999, 1004, 483, 0, 73,
	0, 0, 750, 0, 732, 793, 0, 0, 1274, 1274,
	0, 0, 0, 0, 1274, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 886, 888, 889, 892, 893, 894, 933, 934, 935,
	895, 930, 931, 932, 896, 0, 0, 0, 1187, 1188,
	926, 0, 0, 0, 0, 0, 0, 0, 857, 664,
	0, 666, 301, 704, 0, 524, 0, 737, 750, 513,
	602, 616, 0, 52, 0, 72, 0, 77, 0, 0,
	0, 0, 1008, 1000, 0, 0, 0, 0, 0, 0,
	656, 734, 0, 787, 792, 794, 795, 0, 0, 798,
	799, 800, 801, 0, 0, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 829, 830, 831, 832, 833,
	834, 814, 815, 816, 817, 818, 819, 826, 0, 0,
	823, 0, 0, 0, 1092, 921, 0, 0, 864, 866,
	867, 868, 869, 870, 865, 0, 0, 0, 0, 856,
	858, 902, 0, 665, 703, 712, 713, 524, 736, 418,
	626, 628, 43, 0, 0, 69, 0, 78, 0, 80,
	81, 0, 992, 993, 995, 994, 996, 0, 496, 486,
	0, 775, 0, 0, 781, 0, 788, 796, 797, 802,
	803, 820, 0, 0, 822, 0, 0, 929, 0, 900,
	909, 922, 0, 0, 704, 704, 704, 704, 0, 903,
	705, 1274, 0, 0, 709, 710, 714, 745, 0, 53,
	0, 55, 57, 58, 874, 66, 67, 71, 79, 0,
	495, 0, 751, 0, 753, 0, 0, 0, 0, 0,
	785, 0, 827, 828, 821, 824, 825, 898, 908, 910,
	911, 0, 923, 924, 925, 927, 851, 852, 853, 854,
	0, 0, 707, 0, 44, 45, 0, 54, 0, 0,
	1001, 497, 0, 755, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 899, 912, 0, 913, 0, 0, 0,
	855, 706, 708, 0, 0, 56, 875, 752, 749, 0,
	787, 777, 0, 779, 0, 0, 0, 0, 914, 916,
	917, 0, 0, 915, 46, 47, 48, 0, 0, 757,
	0, 773, 778, 780, 782, 0, 786, 784, 918, 920,
	919, 876, 756, 0, 769, 754, 0, 783, 758, -2,
	0, 774, 759, -2, 0, 767, 0, 0, 760, 768,
	0, 763, 0, 0, 0, 762, 0, -2, 770, 0,
	0, 764, -2, 0, 772, 771,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 519,
	104, 103, 105, 3, 520, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 521, 115, 522, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:603
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:609
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:643
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:648
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:654
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:674
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:680
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:687
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:695
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:701
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:710
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:718
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:743
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:759
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:765
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:769
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:775
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:782
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:791
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:795
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:799
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:818
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:827
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:838
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:842
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:848
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:852
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:858
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:862
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:868
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:892
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:911
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:915
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:919
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:936
		{
			yyVAL.str = ""
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:940
		{
			yyVAL.str = yyDollar[3].str
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:945
		{
			yyVAL.str = "\n"
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:949
		{
			yyVAL.str = yyDollar[3].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:958
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:982
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:986
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:998
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1016
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1033
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1056
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1060
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1064
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1092
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1103
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1130
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1143
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1156
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1168
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1175
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1183
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1219
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1223
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1229
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1236
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1245
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1249
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1323
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1327
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1331
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1335
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1339
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1343
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1347
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1351
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1355
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1359
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1363
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1391
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1403
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1407
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1411
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1415
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1419
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1423
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1427
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1431
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1451
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1463
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1486
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1530
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1547
		{
			yyVAL.str = yyDollar[3].str
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1553
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1557
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1588
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1596
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1619
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1642
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1649
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1656
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1695
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1705
		{
			yyVAL.str = yyDollar[1].str
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1712
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1718
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1722
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1733
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1782
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1786
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1794
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1799
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1804
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1810
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1823
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1837
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1847
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1876
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1880
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1886
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1946
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1962
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1982
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1992
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2033
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2037
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2043
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2054
		{
			yyVAL.str = "true"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2055
		{
			yyVAL.str = "false"
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2056
		{
			yyVAL.str = yyDollar[1].str
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2072
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2083
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2115
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2120
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2124
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2133
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2149
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2157
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2181
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2189
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2205
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2215
		{
			yyVAL.item = nil
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2220
		{
			yyVAL.item = nil
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2248
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2253
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2266
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2272
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2277
		{
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2281
		{
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2348
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2371
		{
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2373
		{
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2401
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2405
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2409
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2421
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2477
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2494
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2499
		{
			yyVAL.str = ""
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2503
		{
			yyVAL.str = yyDollar[2].str
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2509
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2522
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2526
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2547
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2551
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2560
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2568
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2574
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2606
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2615
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2619
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2634
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2643
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2653
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2665
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2671
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2679
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2684
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2691
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2707
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2720
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2731
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2735
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2741
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2746
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2753
		{
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2755
		{
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2758
		{
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2767
		{
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2771
		{
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2776
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2785
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2792
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2798
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2806
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2813
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2820
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2840
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2853
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2859
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2863
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2869
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2890
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2899
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2915
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2939
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2962
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2966
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2972
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2981
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2985
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2991
		{
			yyVAL.str = yyDollar[1].str
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2995
		{
			yyVAL.str = yyDollar[3].str
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3001
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3005
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3011
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3016
		{
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3027
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3031
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3047
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3053
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3057
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3063
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3067
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3103
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3121
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3153
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3157
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3170
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3174
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3179
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3183
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3190
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3195
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3202
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3212
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3216
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3224
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3250
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3254
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3260
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3272
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3281
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3304
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3310
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3316
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3320
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3331
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3335
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3339
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3344
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3348
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3352
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3358
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3362
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3368
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3402
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3430
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3447
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3455
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3479
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3495
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3503
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3542
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3546
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3572
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3591
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3597
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3601
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3605
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3609
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3614
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3622
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3636
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3644
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3654
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3660
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3669
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3678
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3697
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3701
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3711
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3715
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3719
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3723
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3739
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3743
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3749
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3759
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3765
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3771
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3775
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3779
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3789
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3799
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3805
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3809
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3815
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3819
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3829
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3842
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3848
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3854
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3867
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3885
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3889
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3895
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3905
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3909
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3913
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3918
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3922
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3926
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3930
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3939
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3943
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3947
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3951
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3956
		{
			yyVAL.str = ""
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3960
		{
			yyVAL.str = yyDollar[1].str
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3964
		{
			yyVAL.str = yyDollar[2].str
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3973
		{
			yyVAL.str = ""
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3977
		{
			yyVAL.str = yyDollar[1].str
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3981
		{
			yyVAL.str = yyDollar[2].str
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3985
		{
			yyVAL.str = yyDollar[1].str
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3989
		{
			yyVAL.str = yyDollar[2].str
		}
	case 655:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4023
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4033
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4044
		{
		}
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4049
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4061
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4067
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4077
		{
			yyVAL.str = yyDollar[1].str
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4081
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4087
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4094
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4100
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4108
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4114
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4121
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4129
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4135
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4144
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4156
		{
			yyVAL.str = yyDollar[1].str
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4161
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4167
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4175
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4281
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4285
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4291
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4301
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4305
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4321
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4329
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4338
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4351
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4357
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4370
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4379
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4383
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4389
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4406
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4424
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4447
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4473
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4477
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4481
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4485
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4491
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4495
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4501
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4506
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4511
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4515
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4523
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4527
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4533
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4547
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4551
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4560
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4566
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4570
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4576
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4580
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4584
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4589
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4593
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4599
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4611
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4620
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4633
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4654
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4663
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4667
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4672
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4676
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4694
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4707
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4721
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4728
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4739
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4752
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4758
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4762
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4768
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4777
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4791
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4797
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4801
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4807
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4814
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4823
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4827
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4836
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4845
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4850
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4854
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4864
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4868
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4879
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4887
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4895
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4903
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4914
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4923
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4933
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4943
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4947
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4965
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4971
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4975
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4979
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4985
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4993
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5001
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5005
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5009
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5013
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5017
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5029
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5033
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5037
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5041
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5045
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5049
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5053
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5057
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5061
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5065
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5069
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5073
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5077
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5081
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5085
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5089
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5093
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5097
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5104
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5108
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5114
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5119
		{
			yyVAL.str = ""
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5123
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5127
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5145
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5149
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5153
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5167
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5171
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5180
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5185
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5202
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5208
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5212
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5218
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5228
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5234
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5243
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5252
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5275
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5284
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5294
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5308
		{
			yyVAL.str = ""
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5312
		{
			yyVAL.str = yyDollar[1].str
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5322
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5328
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5334
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5348
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5355
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5361
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5365
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5369
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5380
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5388
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5397
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5403
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5407
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5413
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5417
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5421
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5425
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5429
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5433
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5437
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5441
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5445
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5449
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5453
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5457
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5461
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5488
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5493
		{
			yyVAL.str = ""
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5497
		{
			yyVAL.str = yyDollar[1].str
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5503
		{
			yyVAL.str = ""
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5507
		{
			yyVAL.str = yyDollar[2].str
		}
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5513
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5525
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5532
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5539
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5546
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5553
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5562
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5568
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5574
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5578
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5582
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5586
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5590
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5595
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5606
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5610
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5619
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5624
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5628
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5644
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5650
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5658
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5686
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5690
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5698
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5704
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5708
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5712
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5716
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5720
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5724
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5728
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5732
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5736
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5740
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5744
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5748
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5753
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5761
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5765
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5769
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5778
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5782
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5786
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5790
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5799
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5808
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5814
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5818
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5824
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5834
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5851
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5868
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5894
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5906
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5920
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5935
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5950
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5967
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5982
		{
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5988
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5996
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6002
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6006
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6014
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6035
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6048
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6055
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6064
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6073
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6083
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6093
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6102
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6111
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6121
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6131
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6141
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6151
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6161
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6171
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6191
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6201
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6211
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6231
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6248
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6256
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6264
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6272
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6289
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6297
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6306
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6315
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6323
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6340
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6349
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6371
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6407
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6441
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6449
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6456
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6463
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6475
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6483
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6494
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6503
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6512
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6520
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6530
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6538
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6546
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6560
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6570
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6589
		{
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6591
		{
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6632
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6642
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6646
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6650
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6656
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6665
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6671
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6675
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6682
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6686
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6690
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6698
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6702
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6706
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6710
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6720
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6724
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6728
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6736
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6744
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6748
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6752
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6764
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6768
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6772
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6776
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6780
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6784
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6788
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6798
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6804
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6808
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6815
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6819
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6823
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6845
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6867
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6877
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6881
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6894
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6911
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6919
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6937
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6944
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6955
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6960
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6966
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6978
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6990
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7002
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7015
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7028
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7054
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7067
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7080
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7093
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7106
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7119
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7132
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7147
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7170
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7204
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7252
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7269
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7281
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7301
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7321
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7341
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7357
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7370
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7383
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7396
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7409
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7433
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7445
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7457
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7469
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7481
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7493
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7505
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7558
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7566
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7575
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7585
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7608
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7613
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7619
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7626
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7630
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7635
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7639
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7645
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7651
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7665
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7674
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7681
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7688
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7711
		{
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7723
		{
			yyVAL.str = ""
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

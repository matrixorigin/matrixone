// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const RESET = 57615
const PROPERTIES = 57616
const PARSER = 57617
const VISIBLE = 57618
const INVISIBLE = 57619
const BTREE = 57620
const HASH = 57621
const RTREE = 57622
const BSI = 57623
const ZONEMAP = 57624
const LEADING = 57625
const BOTH = 57626
const TRAILING = 57627
const UNKNOWN = 57628
const EXPIRE = 57629
const ACCOUNT = 57630
const ACCOUNTS = 57631
const UNLOCK = 57632
const DAY = 57633
const NEVER = 57634
const PUMP = 57635
const SECOND = 57636
const ASCII = 57637
const COALESCE = 57638
const COLLATION = 57639
const HOUR = 57640
const MICROSECOND = 57641
const MINUTE = 57642
const MONTH = 57643
const QUARTER = 57644
const REPEAT = 57645
const REVERSE = 57646
const ROW_COUNT = 57647
const WEEK = 57648
const REVOKE = 57649
const FUNCTION = 57650
const PRIVILEGES = 57651
const TABLESPACE = 57652
const EXECUTE = 57653
const SUPER = 57654
const GRANT = 57655
const OPTION = 57656
const REFERENCES = 57657
const REPLICATION = 57658
const SLAVE = 57659
const CLIENT = 57660
const USAGE = 57661
const RELOAD = 57662
const FILE = 57663
const TEMPORARY = 57664
const ROUTINE = 57665
const EVENT = 57666
const SHUTDOWN = 57667
const NULLX = 57668
const AUTO_INCREMENT = 57669
const APPROXNUM = 57670
const SIGNED = 57671
const UNSIGNED = 57672
const ZEROFILL = 57673
const ENGINES = 57674
const LOW_CARDINALITY = 57675
const ADMIN_NAME = 57676
const RANDOM = 57677
const SUSPEND = 57678
const ATTRIBUTE = 57679
const HISTORY = 57680
const REUSE = 57681
const CURRENT = 57682
const OPTIONAL = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const UNBOUNDED = 57686
const SECONDARY = 57687
const USER = 57688
const IDENTIFIED = 57689
const CIPHER = 57690
const ISSUER = 57691
const X509 = 57692
const SUBJECT = 57693
const SAN = 57694
const REQUIRE = 57695
const SSL = 57696
const NONE = 57697
const PASSWORD = 57698
const MAX_QUERIES_PER_HOUR = 57699
const MAX_UPDATES_PER_HOUR = 57700
const MAX_CONNECTIONS_PER_HOUR = 57701
const MAX_USER_CONNECTIONS = 57702
const FORMAT = 57703
const VERBOSE = 57704
const CONNECTION = 57705
const TRIGGERS = 57706
const PROFILES = 57707
const LOAD = 57708
const INFILE = 57709
const TERMINATED = 57710
const OPTIONALLY = 57711
const ENCLOSED = 57712
const ESCAPED = 57713
const STARTING = 57714
const LINES = 57715
const ROWS = 57716
const IMPORT = 57717
const MODUMP = 57718
const OVER = 57719
const PRECEDING = 57720
const FOLLOWING = 57721
const GROUPS = 57722
const DATABASES = 57723
const TABLES = 57724
const EXTENDED = 57725
const FULL = 57726
const PROCESSLIST = 57727
const FIELDS = 57728
const COLUMNS = 57729
const OPEN = 57730
const ERRORS = 57731
const WARNINGS = 57732
const INDEXES = 57733
const SCHEMAS = 57734
const NODE = 57735
const LOCKS = 57736
const NAMES = 57737
const GLOBAL = 57738
const SESSION = 57739
const ISOLATION = 57740
const LEVEL = 57741
const READ = 57742
const WRITE = 57743
const ONLY = 57744
const REPEATABLE = 57745
const COMMITTED = 57746
const UNCOMMITTED = 57747
const SERIALIZABLE = 57748
const LOCAL = 57749
const EVENTS = 57750
const PLUGINS = 57751
const CURRENT_TIMESTAMP = 57752
const DATABASE = 57753
const CURRENT_TIME = 57754
const LOCALTIME = 57755
const LOCALTIMESTAMP = 57756
const UTC_DATE = 57757
const UTC_TIME = 57758
const UTC_TIMESTAMP = 57759
const REPLACE = 57760
const CONVERT = 57761
const SEPARATOR = 57762
const TIMESTAMPDIFF = 57763
const CURRENT_DATE = 57764
const CURRENT_USER = 57765
const CURRENT_ROLE = 57766
const SECOND_MICROSECOND = 57767
const MINUTE_MICROSECOND = 57768
const MINUTE_SECOND = 57769
const HOUR_MICROSECOND = 57770
const HOUR_SECOND = 57771
const HOUR_MINUTE = 57772
const DAY_MICROSECOND = 57773
const DAY_SECOND = 57774
const DAY_MINUTE = 57775
const DAY_HOUR = 57776
const YEAR_MONTH = 57777
const SQL_TSI_HOUR = 57778
const SQL_TSI_DAY = 57779
const SQL_TSI_WEEK = 57780
const SQL_TSI_MONTH = 57781
const SQL_TSI_QUARTER = 57782
const SQL_TSI_YEAR = 57783
const SQL_TSI_SECOND = 57784
const SQL_TSI_MINUTE = 57785
const RECURSIVE = 57786
const CONFIG = 57787
const DRAINER = 57788
const MATCH = 57789
const AGAINST = 57790
const BOOLEAN = 57791
const LANGUAGE = 57792
const WITH = 57793
const QUERY = 57794
const EXPANSION = 57795
const ADDDATE = 57796
const BIT_AND = 57797
const BIT_OR = 57798
const BIT_XOR = 57799
const CAST = 57800
const COUNT = 57801
const APPROX_COUNT_DISTINCT = 57802
const APPROX_PERCENTILE = 57803
const CURDATE = 57804
const CURTIME = 57805
const DATE_ADD = 57806
const DATE_SUB = 57807
const EXTRACT = 57808
const GROUP_CONCAT = 57809
const MAX = 57810
const MID = 57811
const MIN = 57812
const NOW = 57813
const POSITION = 57814
const SESSION_USER = 57815
const STD = 57816
const STDDEV = 57817
const MEDIAN = 57818
const STDDEV_POP = 57819
const STDDEV_SAMP = 57820
const SUBDATE = 57821
const SUBSTR = 57822
const SUBSTRING = 57823
const SUM = 57824
const SYSDATE = 57825
const SYSTEM_USER = 57826
const TRANSLATE = 57827
const TRIM = 57828
const VARIANCE = 57829
const VAR_POP = 57830
const VAR_SAMP = 57831
const AVG = 57832
const ARROW = 57833
const ROW = 57834
const OUTFILE = 57835
const HEADER = 57836
const MAX_FILE_SIZE = 57837
const FORCE_QUOTE = 57838
const UNUSED = 57839
const BINDINGS = 57840
const DO = 57841
const DECLARE = 57842
const KILL = 57843

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8156

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 87,
	21, 520,
	-2, 501,
	-1, 93,
	211, 700,
	-2, 747,
	-1, 111,
	42, 355,
	211, 355,
	238, 362,
	239, 362,
	408, 355,
	-2, 383,
	-1, 474,
	67, 1113,
	-2, 1622,
	-1, 475,
	67, 1131,
	-2, 1593,
	-1, 480,
	67, 1132,
	-2, 1621,
	-1, 501,
	67, 1045,
	-2, 1669,
	-1, 502,
	67, 1046,
	-2, 1668,
	-1, 503,
	67, 1047,
	-2, 1658,
	-1, 504,
	67, 1633,
	-2, 1653,
	-1, 505,
	67, 1634,
	-2, 1654,
	-1, 506,
	67, 1635,
	-2, 1660,
	-1, 507,
	67, 1636,
	-2, 1643,
	-1, 508,
	67, 1637,
	-2, 1651,
	-1, 509,
	67, 1638,
	-2, 1661,
	-1, 510,
	67, 1639,
	-2, 1662,
	-1, 511,
	67, 1640,
	-2, 1667,
	-1, 512,
	67, 1641,
	-2, 1672,
	-1, 513,
	67, 1642,
	-2, 1673,
	-1, 515,
	67, 1110,
	-2, 1474,
	-1, 522,
	67, 1119,
	-2, 1500,
	-1, 526,
	67, 1123,
	-2, 1539,
	-1, 527,
	67, 1124,
	-2, 1617,
	-1, 535,
	67, 1134,
	-2, 1602,
	-1, 537,
	67, 1136,
	-2, 1612,
	-1, 549,
	67, 1026,
	-2, 1663,
	-1, 550,
	67, 1027,
	-2, 1664,
	-1, 551,
	67, 1028,
	-2, 1665,
	-1, 558,
	21, 521,
	-2, 484,
	-1, 607,
	403, 383,
	404, 383,
	-2, 356,
	-1, 650,
	103, 1474,
	114, 1474,
	133, 1474,
	-2, 1272,
	-1, 687,
	21, 521,
	-2, 484,
	-1, 786,
	21, 520,
	-2, 937,
	-1, 1095,
	67, 1179,
	-2, 1619,
	-1, 1096,
	67, 1180,
	-2, 1620,
	-1, 1252,
	1, 726,
	68, 726,
	519, 726,
	-2, 733,
	-1, 1372,
	133, 1282,
	-2, 1280,
	-1, 1374,
	133, 644,
	-2, 1277,
	-1, 1375,
	133, 645,
	-2, 1278,
	-1, 1668,
	1, 727,
	68, 727,
	519, 727,
	-2, 733,
	-1, 1724,
	21, 520,
	-2, 611,
	-1, 1895,
	65, 427,
	134, 427,
	-2, 842,
	-1, 2162,
	87, 733,
	129, 733,
	166, 733,
	169, 733,
	-2, 790,
	-1, 2164,
	272, 905,
	-2, 884,
	-1, 2192,
	87, 733,
	129, 733,
	166, 733,
	169, 733,
	-2, 790,
	-1, 2195,
	65, 427,
	134, 427,
	-2, 843,
	-1, 2234,
	87, 733,
	129, 733,
	166, 733,
	169, 733,
	-2, 791,
	-1, 2262,
	272, 905,
	-2, 885,
	-1, 2672,
	68, 762,
	134, 762,
	-2, 733,
	-1, 2676,
	68, 762,
	134, 762,
	-2, 733,
	-1, 2690,
	68, 766,
	134, 766,
	-2, 733,
	-1, 2695,
	68, 767,
	134, 767,
	-2, 733,
}

const yyPrivate = 57344

const yyLast = 28156

var yyAct = [...]int{
	445, 2235, 1159, 2676, 2675, 2652, 2684, 425, 1075, 2301,
	2517, 427, 2641, 2598, 447, 2554, 2274, 2582, 1721, 2483,
	2417, 2583, 2463, 2299, 1653, 2230, 2221, 813, 1332, 987,
	2487, 2424, 2157, 2320, 2300, 472, 559, 2471, 129, 129,
	1717, 2336, 1071, 2219, 129, 364, 371, 1206, 940, 371,
	132, 2284, 1870, 2187, 2049, 2263, 1298, 649, 1258, 1078,
	1260, 369, 30, 1898, 2233, 2045, 2283, 1358, 1751, 1364,
	1017, 1916, 376, 2175, 1320, 1290, 2054, 2168, 1716, 1790,
	1757, 1559, 382, 1758, 2050, 554, 419, 2124, 913, 843,
	1937, 2107, 2065, 2060, 128, 128, 591, 2062, 1676, 681,
	355, 925, 1216, 1997, 1555, 2043, 1789, 1369, 424, 1372,
	1209, 1230, 1950, 1366, 1365, 1313, 1915, 653, 1554, 554,
	1359, 1293, 1872, 1270, 1705, 1867, 367, 7, 129, 1158,
	656, 41, 3, 368, 19, 1675, 365, 8, 2238, 1074,
	1248, 366, 6, 1238, 676, 1271, 1009, 1669, 849, 1291,
	1587, 1661, 1272, 1069, 1556, 927, 651, 428, 86, 1283,
	675, 426, 357, 1317, 1282, 1641, 1566, 1109, 1123, 610,
	436, 1570, 1060, 894, 698, 41, 677, 360, 1353, 1336,
	1719, 1068, 1247, 1278, 683, 641, 30, 979, 1726, 955,
	1129, 966, 590, 556, 1128, 384, 385, 16, 370, 9,
	4, 1008, 119, 941, 910, 558, 603, 122, 1221, 642,
	588, 1990, 1990, 1792, 1573, 1563, 124, 2333, 1752, 2156,
	1234, 2505, 1361, 557, 379, 814, 123, 567, 37, 113,
	94, 123, 593, 37, 113, 94, 2545, 2535, 123, 123,
	123, 123, 718, 123, 353, 2292, 1777, 374, 1560, 911,
	968, 7, 912, 1149, 123, 41, 1785, 674, 19, 1027,
	1571, 8, 580, 125, 752, 123, 6, 37, 113, 94,
	952, 1869, 953, 1859, 2133, 1024, 1967, 937, 544, 654,
	543, 545, 546, 120, 547, 548, 1301, 1302, 120, 1045,
	661, 660, 662, 621, 553, 120, 1026, 120, 120, 2571,
	120, 969, 620, 751, 745, 726, 2329, 728, 1014, 420,
	1274, 1020, 946, 947, 1077, 1061, 568, 1065, 2569, 750,
	659, 944, 120, 1868, 943, 946, 947, 2506, 2507, 2586,
	2587, 733, 1832, 734, 2318, 729, 2558, 2559, 2037, 2410,
	2413, 1064, 756, 757, 758, 755, 2321, 2322, 2323, 2324,
	2038, 2335, 2039, 2158, 1080, 701, 1772, 129, 691, 692,
	2486, 736, 381, 1875, 2141, 1306, 2176, 690, 664, 1056,
	1314, 1567, 623, 371, 371, 622, 129, 2183, 1310, 560,
	2066, 2544, 738, 582, 739, 657, 1700, 1659, 2076, 1638,
	686, 688, 1983, 579, 578, 2297, 1145, 2393, 1985, 1142,
	722, 1164, 2281, 1144, 1141, 1143, 1147, 1148, 721, 608,
	1066, 1146, 741, 689, 572, 747, 594, 415, 2070, 93,
	416, 121, 724, 2328, 1782, 2396, 731, 625, 2294, 2330,
	1063, 2074, 709, 788, 727, 730, 1205, 1204, 701, 111,
	748, 749, 613, 658, 1762, 2573, 935, 2596, 373, 685,
	372, 1079, 2547, 2548, 2425, 576, 2669, 2387, 723, 575,
	2585, 577, 713, 1087, 1090, 1091, 1577, 1579, 1580, 2685,
	2607, 2568, 687, 2519, 1088, 2515, 2516, 737, 2519, 570,
	2614, 1572, 2071, 2072, 732, 626, 932, 2542, 954, 2380,
	743, 744, 41, 41, 2485, 2663, 2349, 2073, 2348, 652,
	912, 418, 2472, 2473, 2474, 2476, 2475, 2644, 663, 417,
	2068, 2375, 742, 577, 1883, 1884, 1885, 1886, 2575, 2576,
	592, 2525, 654, 725, 1831, 1881, 703, 702, 975, 2371,
	974, 595, 616, 1062, 711, 740, 959, 571, 931, 694,
	695, 1152, 1153, 1154, 1155, 1156, 1157, 1150, 1151, 735,
	1019, 939, 938, 930, 2686, 611, 914, 2680, 2653, 2337,
	2692, 2152, 682, 1588, 1939, 1941, 380, 2408, 967, 917,
	1778, 706, 707, 1733, 710, 1564, 1561, 1286, 1242, 718,
	1561, 2058, 1561, 1993, 1988, 920, 919, 612, 617, 654,
	591, 375, 891, 789, 790, 791, 792, 1575, 922, 2145,
	1989, 1943, 581, 1730, 605, 972, 607, 620, 793, 703,
	702, 604, 602, 601, 1304, 606, 596, 597, 1305, 618,
	619, 2645, 1729, 2055, 2058, 1999, 1998, 2546, 1303, 1874,
	945, 614, 615, 629, 696, 946, 947, 585, 586, 587,
	628, 822, 2087, 936, 554, 554, 554, 2508, 2509, 991,
	991, 942, 2574, 2626, 946, 947, 38, 2067, 717, 754,
	915, 916, 1574, 918, 1562, 371, 1012, 1012, 609, 1015,
	1315, 2077, 1615, 2484, 2448, 1614, 2394, 1986, 2679, 993,
	1753, 1878, 1879, 1089, 95, 1022, 1578, 2069, 1765, 95,
	38, 989, 989, 2293, 1769, 1877, 95, 95, 95, 95,
	995, 95, 1896, 2059, 1786, 1043, 1307, 824, 825, 2698,
	1057, 1897, 95, 2298, 718, 2376, 2377, 1940, 991, 1309,
	991, 691, 753, 95, 2691, 1732, 1731, 970, 971, 2697,
	1076, 759, 2688, 652, 2163, 1028, 2670, 2665, 1647, 2656,
	787, 754, 712, 1018, 2642, 2643, 2059, 1025, 795, 2373,
	1777, 2052, 1715, 2372, 933, 2053, 2056, 1261, 956, 2655,
	956, 949, 950, 896, 2630, 1742, 1560, 1052, 898, 800,
	621, 632, 1261, 558, 2600, 754, 1742, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1652,
	2593, 1619, 1118, 1119, 1339, 754, 460, 87, 2689, 1127,
	924, 1551, 1569, 2666, 960, 1569, 2588, 2057, 1651, 1174,
	561, 948, 2343, 1081, 951, 667, 672, 673, 631, 1180,
	621, 1897, 634, 633, 1073, 1569, 923, 41, 1182, 963,
	1569, 1186, 1187, 973, 985, 986, 41, 1121, 354, 1051,
	2601, 87, 1048, 554, 2577, 1038, 1039, 1047, 1663, 623,
	964, 965, 622, 982, 983, 984, 2398, 1070, 976, 353,
	996, 1029, 1889, 1007, 2650, 2563, 1054, 1059, 1013, 2540,
	1092, 2539, 2398, 1058, 1034, 1715, 756, 757, 758, 755,
	2538, 2537, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 2527,
	2104, 1227, 1030, 2405, 2449, 2451, 2452, 2453, 2450, 623,
	1212, 1213, 622, 1050, 558, 1049, 1046, 2404, 2397, 2182,
	1742, 2602, 1067, 1337, 1245, 1072, 991, 655, 1220, 1252,
	1650, 87, 1173, 2198, 591, 892, 715, 1259, 957, 2217,
	991, 2564, 1160, 1042, 1163, 2398, 1251, 2398, 2088, 1175,
	1228, 1041, 1662, 716, 1952, 1117, 2398, 2398, 1957, 1181,
	1899, 1183, 1111, 1279, 1279, 2528, 1284, 1934, 1855, 2406,
	1780, 1284, 1211, 1779, 1597, 1245, 991, 1300, 1231, 1771,
	1853, 1218, 1219, 1680, 2398, 1011, 1011, 554, 1277, 991,
	1696, 669, 670, 671, 1890, 1851, 718, 1849, 1837, 756,
	757, 758, 755, 1794, 1266, 1958, 716, 1244, 1162, 1250,
	1243, 1245, 991, 1809, 1331, 129, 129, 1775, 1253, 1254,
	1275, 1276, 1341, 1767, 1958, 1763, 129, 1184, 1714, 1611,
	1598, 1174, 1357, 1715, 1856, 676, 958, 1174, 1174, 889,
	886, 887, 888, 1596, 1334, 1814, 1854, 1813, 1812, 1810,
	1550, 1344, 1759, 1281, 1347, 1679, 684, 1031, 1287, 890,
	1374, 1850, 1201, 1850, 754, 1249, 1259, 677, 1311, 754,
	991, 1333, 1333, 1648, 1082, 1083, 1084, 1085, 1086, 1263,
	1235, 798, 1333, 1680, 704, 684, 956, 1622, 1326, 1760,
	1267, 1764, 1375, 1316, 1328, 1330, 1229, 1265, 1621, 771,
	1262, 1273, 1166, 1165, 1268, 1269, 1223, 1568, 1226, 1811,
	756, 757, 758, 755, 2092, 1249, 1125, 1126, 1760, 583,
	1982, 1680, 1161, 1255, 1552, 1582, 1256, 1168, 1035, 1980,
	1264, 1728, 1715, 1585, 1586, 1285, 957, 1558, 630, 1647,
	1116, 980, 569, 928, 1355, 978, 2639, 1280, 2627, 1871,
	1355, 1070, 981, 754, 2018, 1114, 1115, 1113, 1288, 1324,
	1325, 2529, 2105, 1800, 754, 1289, 1991, 1124, 87, 87,
	655, 1981, 1312, 1569, 2562, 1770, 41, 1335, 1735, 1327,
	1321, 1322, 1323, 693, 756, 757, 758, 755, 1557, 654,
	1246, 2383, 1192, 1329, 1036, 654, 1124, 684, 1593, 756,
	757, 758, 755, 1345, 1626, 774, 775, 776, 777, 778,
	771, 755, 1367, 1232, 1368, 1362, 2382, 1236, 1167, 2172,
	1239, 1549, 1373, 1548, 2167, 977, 758, 755, 1956, 1815,
	1816, 2366, 2674, 627, 958, 2459, 2662, 786, 2659, 1185,
	2624, 1553, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 129, 624, 635, 2457, 2455, 1149,
	2445, 2608, 1178, 1576, 129, 129, 1677, 756, 757, 758,
	755, 2295, 1179, 2458, 1581, 1284, 1802, 2497, 1687, 2661,
	2465, 654, 2443, 2061, 364, 2442, 1584, 2441, 2438, 1654,
	1655, 1583, 1284, 2432, 1111, 2456, 2454, 2180, 2444, 1232,
	676, 1592, 2429, 2428, 2179, 1232, 1232, 2075, 1300, 2296,
	1657, 772, 773, 774, 775, 776, 777, 778, 771, 2035,
	1672, 1673, 779, 780, 772, 773, 774, 775, 776, 777,
	778, 771, 677, 2034, 1686, 2181, 1685, 991, 1976, 1688,
	1689, 1656, 1954, 756, 757, 758, 755, 1646, 1012, 1645,
	1300, 1644, 1640, 1746, 1639, 1748, 1722, 1722, 1032, 1722,
	909, 2595, 1174, 1245, 1595, 2579, 2464, 899, 769, 779,
	780, 772, 773, 774, 775, 776, 777, 778, 771, 1740,
	678, 679, 680, 1725, 2231, 1723, 415, 1727, 2560, 416,
	2523, 1643, 762, 763, 764, 765, 766, 767, 768, 760,
	2522, 1670, 1145, 2690, 1607, 1142, 1692, 1743, 1694, 1144,
	1141, 1143, 1147, 1148, 2446, 2439, 1750, 1146, 2435, 2434,
	756, 757, 758, 755, 2433, 1745, 1664, 2395, 1755, 2368,
	2580, 1756, 2334, 1273, 2229, 1761, 1690, 2227, 2190, 1684,
	1695, 1590, 1691, 2178, 1594, 2177, 1693, 2174, 2144, 1791,
	1701, 1697, 756, 757, 758, 755, 2033, 1606, 1987, 997,
	1955, 1946, 2667, 354, 500, 499, 654, 770, 769, 779,
	780, 772, 773, 774, 775, 776, 777, 778, 771, 756,
	757, 758, 755, 1649, 1604, 1642, 1617, 1605, 87, 1609,
	2011, 822, 87, 1346, 1744, 1736, 1737, 1738, 1241, 1033,
	823, 1796, 818, 87, 817, 1620, 799, 2079, 1623, 1624,
	1625, 2530, 87, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1698, 1636, 770, 769, 779, 780, 772, 773, 774,
	775, 776, 777, 778, 771, 2010, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1152, 1153, 1154,
	1155, 1156, 1157, 1150, 1151, 2416, 2192, 756, 757, 758,
	755, 1773, 2490, 2191, 2162, 562, 563, 564, 565, 2154,
	2153, 991, 2137, 991, 782, 991, 785, 2123, 561, 2122,
	691, 1681, 2093, 2016, 756, 757, 758, 755, 2392, 1787,
	2009, 783, 784, 781, 2223, 770, 769, 779, 780, 772,
	773, 774, 775, 776, 777, 778, 771, 2222, 991, 1818,
	756, 757, 758, 755, 2001, 1783, 756, 757, 758, 755,
	1996, 1825, 1826, 2148, 1852, 1601, 991, 999, 1848, 756,
	757, 758, 755, 1847, 1627, 1828, 2014, 1817, 1618, 1616,
	2013, 1232, 1232, 1232, 1613, 756, 757, 758, 755, 1612,
	989, 1610, 2012, 1603, 1600, 1827, 1846, 1011, 756, 757,
	758, 755, 756, 757, 758, 755, 1599, 129, 989, 1177,
	1176, 998, 2687, 991, 756, 757, 758, 755, 756, 757,
	758, 755, 123, 123, 2638, 1895, 113, 94, 2632, 2615,
	2612, 1901, 2610, 1784, 815, 1804, 756, 757, 758, 755,
	756, 757, 758, 755, 2620, 1845, 2496, 1910, 1798, 129,
	1070, 2481, 2469, 691, 1300, 1300, 1300, 1300, 1776, 1774,
	2466, 2461, 1917, 1865, 1781, 691, 1300, 756, 757, 758,
	755, 2422, 1857, 1208, 1917, 2390, 2389, 2388, 1888, 120,
	120, 1893, 2385, 2379, 991, 1795, 2364, 2209, 2207, 2185,
	30, 2173, 129, 129, 926, 1808, 2020, 1904, 2386, 1844,
	1797, 1906, 1217, 1913, 1210, 1911, 2618, 1843, 1962, 1933,
	1892, 1174, 1842, 1299, 1891, 1963, 1902, 1866, 1766, 1722,
	1174, 756, 757, 758, 755, 1734, 1678, 1112, 991, 756,
	757, 758, 755, 120, 756, 757, 758, 755, 1352, 1222,
	1974, 1225, 1215, 1214, 1055, 1021, 1862, 893, 1948, 1949,
	841, 840, 1249, 1880, 839, 7, 838, 1670, 837, 41,
	1894, 1900, 19, 836, 835, 8, 1887, 655, 1932, 1909,
	6, 834, 1975, 655, 1914, 1912, 833, 832, 831, 1968,
	1959, 1930, 87, 1905, 830, 829, 1969, 1931, 1929, 828,
	1903, 1231, 558, 827, 826, 1971, 821, 820, 1907, 819,
	1908, 1947, 1944, 1918, 1919, 1920, 1921, 2002, 1942, 816,
	2004, 1979, 2006, 1953, 1683, 1841, 1984, 691, 812, 811,
	809, 2064, 808, 807, 1960, 806, 2048, 805, 1966, 1972,
	804, 1973, 1978, 129, 1970, 803, 1964, 756, 757, 758,
	755, 802, 691, 691, 801, 797, 796, 1300, 1677, 1992,
	2091, 2048, 2048, 1801, 720, 1994, 2095, 2108, 2109, 786,
	2000, 1819, 1820, 1840, 2064, 1666, 2005, 1823, 1824, 2007,
	2008, 2003, 1839, 2114, 708, 2584, 1836, 2111, 1882, 1829,
	2660, 1741, 1349, 719, 2113, 756, 757, 758, 755, 2080,
	1923, 2081, 2082, 2083, 756, 757, 758, 755, 756, 757,
	758, 755, 1928, 1818, 1711, 1712, 2212, 1232, 2211, 1245,
	1860, 1861, 1239, 1245, 2094, 1926, 1924, 2042, 2096, 2097,
	1927, 1925, 2089, 1922, 1351, 2673, 2103, 770, 769, 779,
	780, 772, 773, 774, 775, 776, 777, 778, 771, 129,
	1350, 2115, 2210, 2086, 129, 1961, 2090, 2084, 2085, 2040,
	2041, 1864, 1768, 1671, 70, 40, 2100, 2102, 1835, 39,
	1202, 2101, 2112, 2099, 1834, 126, 2119, 2120, 2121, 2131,
	1793, 2134, 1754, 1788, 2129, 1654, 1655, 2116, 895, 2135,
	756, 757, 758, 755, 1830, 2138, 756, 757, 758, 755,
	1660, 2128, 2132, 2136, 1822, 2142, 350, 351, 714, 1821,
	2146, 352, 2166, 2201, 349, 2161, 756, 757, 758, 755,
	2139, 2140, 1799, 1257, 2551, 2098, 756, 757, 758, 755,
	2143, 756, 757, 758, 755, 1120, 1232, 1166, 1165, 962,
	1232, 961, 991, 991, 756, 757, 758, 755, 1300, 2195,
	907, 908, 1702, 746, 1724, 905, 906, 756, 757, 758,
	755, 903, 904, 901, 902, 691, 2118, 1547, 929, 897,
	2633, 2186, 1995, 2513, 1917, 1707, 1710, 1711, 1712, 1708,
	2501, 1709, 1713, 2499, 989, 2188, 2426, 2423, 2415, 2214,
	2169, 1174, 2169, 2171, 2165, 2015, 1299, 1722, 2164, 2414,
	2203, 2636, 2412, 2170, 1951, 2315, 2314, 1833, 2228, 2225,
	2196, 2160, 1838, 2159, 2126, 2197, 2199, 900, 561, 2200,
	2125, 1261, 1977, 2194, 691, 2193, 2622, 2621, 2285, 2287,
	1602, 2285, 2285, 2048, 705, 2202, 2204, 2621, 2622, 2381,
	2205, 2130, 934, 48, 1, 1240, 691, 2224, 770, 769,
	779, 780, 772, 773, 774, 775, 776, 777, 778, 771,
	2215, 2216, 562, 563, 564, 565, 566, 1348, 1259, 1935,
	2312, 1936, 2117, 2218, 1938, 561, 1565, 1589, 1699, 2282,
	2286, 1658, 2078, 2232, 2226, 921, 584, 1169, 2331, 2260,
	1040, 666, 700, 1037, 699, 697, 2339, 2288, 2289, 770,
	769, 779, 780, 772, 773, 774, 775, 776, 777, 778,
	771, 2304, 2309, 1122, 2306, 2307, 462, 2305, 1360, 2197,
	2462, 2290, 2316, 2308, 2311, 2550, 2310, 2597, 2495, 2553,
	1053, 991, 446, 2407, 2367, 2036, 2317, 1707, 1710, 1711,
	1712, 1708, 129, 1709, 1713, 2409, 2319, 1858, 2220, 2340,
	2341, 2287, 2344, 2345, 2346, 2347, 2342, 1965, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 599, 2188, 494, 470, 810, 2282, 2365, 1023,
	1016, 2147, 668, 469, 2369, 2634, 2184, 1876, 2149, 665,
	600, 1637, 2155, 1203, 1224, 1207, 2683, 2672, 2384, 2651,
	2427, 2631, 2391, 2403, 2518, 2668, 2567, 2402, 2401, 2399,
	2613, 2327, 2325, 2411, 2326, 2019, 2606, 2514, 386, 2021,
	2022, 2023, 2024, 2460, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 770, 769, 779, 780, 772, 773, 774, 775,
	776, 777, 778, 771, 1308, 552, 691, 639, 2482, 691,
	691, 691, 387, 2440, 1682, 2430, 2431, 2543, 2468, 691,
	573, 2436, 2437, 1722, 1665, 574, 1668, 2493, 1667, 2470,
	1093, 761, 2478, 2479, 2480, 1232, 1110, 2467, 2206, 2150,
	2151, 2208, 794, 2511, 2489, 2477, 423, 1591, 435, 429,
	1873, 991, 991, 2488, 2491, 2213, 2275, 1945, 2500, 2504,
	2502, 2503, 2498, 47, 46, 45, 44, 1340, 1370, 2512,
	464, 131, 2492, 1371, 2510, 2332, 2555, 444, 443, 442,
	2520, 2521, 129, 441, 1706, 1704, 1703, 1295, 1294, 1338,
	691, 2581, 2533, 989, 989, 87, 2534, 2378, 2447, 2374,
	2370, 2017, 691, 2291, 2524, 2234, 2261, 2262, 2268, 848,
	2526, 844, 846, 2536, 847, 2532, 845, 2557, 1807, 1803,
	1299, 1299, 1299, 1299, 2046, 2541, 2047, 2044, 2110, 2106,
	1356, 2556, 1299, 1237, 691, 2549, 1863, 1296, 1333, 1292,
	2303, 555, 31, 2565, 5, 29, 28, 2561, 770, 769,
	779, 780, 772, 773, 774, 775, 776, 777, 778, 771,
	27, 14, 2570, 2572, 15, 13, 1044, 12, 18, 26,
	25, 2578, 24, 23, 78, 77, 76, 75, 22, 11,
	74, 73, 72, 2599, 87, 2604, 21, 691, 2589, 2590,
	2591, 2592, 20, 68, 66, 2605, 1076, 2609, 67, 2611,
	58, 57, 56, 2603, 65, 64, 63, 864, 598, 55,
	54, 53, 52, 62, 61, 60, 59, 2594, 51, 50,
	2616, 2619, 2557, 2629, 2617, 49, 92, 91, 90, 89,
	2623, 691, 2400, 691, 32, 2625, 2556, 2628, 33, 2635,
	1076, 2637, 1076, 2640, 34, 35, 102, 101, 103, 99,
	97, 100, 98, 96, 42, 2646, 10, 2421, 2599, 691,
	2647, 17, 2, 0, 2654, 0, 0, 2658, 1076, 0,
	0, 2664, 770, 769, 779, 780, 772, 773, 774, 775,
	776, 777, 778, 771, 0, 0, 0, 0, 0, 0,
	864, 0, 2671, 0, 2678, 0, 0, 0, 2682, 0,
	0, 2681, 0, 0, 0, 0, 0, 852, 0, 0,
	2693, 842, 2678, 1299, 2695, 2696, 2694, 2682, 0, 0,
	0, 0, 0, 0, 0, 872, 876, 878, 880, 882,
	883, 885, 0, 889, 886, 887, 888, 0, 0, 867,
	868, 869, 870, 850, 851, 873, 0, 853, 2421, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 865,
	871, 0, 0, 0, 0, 0, 0, 0, 875, 877,
	879, 881, 884, 0, 87, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	852, 0, 0, 0, 0, 0, 2531, 0, 0, 0,
	0, 0, 0, 866, 0, 0, 0, 0, 872, 876,
	878, 880, 882, 883, 885, 0, 889, 886, 887, 888,
	0, 0, 867, 868, 869, 870, 850, 851, 873, 0,
	853, 0, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 865, 871, 0, 0, 0, 0, 0, 0,
	0, 875, 877, 879, 881, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 866, 0, 0, 0,
	0, 0, 2421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1486, 1528, 0, 0, 1475,
	299, 1433, 1488, 1406, 1422, 1496, 1423, 1424, 1461, 1385,
	1443, 261, 1420, 0, 0, 0, 0, 0, 0, 1478,
	1377, 1409, 1410, 1379, 1416, 1380, 1407, 1435, 206, 1405,
	1446, 231, 1458, 1419, 1440, 1494, 0, 2649, 291, 245,
	0, 0, 1438, 1480, 1441, 1466, 1432, 1462, 1393, 1454,
	1489, 1421, 0, 1459, 1490, 0, 0, 0, 87, 678,
	679, 680, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 1457, 1484, 1418, 0, 190, 1487, 1439, 1460,
	0, 0, 1378, 1455, 0, 1383, 1386, 1495, 1482, 1413,
	1414, 0, 0, 0, 0, 0, 0, 0, 87, 1436,
	1442, 1463, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 1451, 0, 0, 0, 1388, 1384,
	0, 1434, 0, 874, 178, 296, 312, 188, 287, 325,
	193, 294, 183, 260, 283, 0, 1527, 180, 310, 293,
	242, 225, 226, 179, 0, 278, 204, 217, 200, 258,
	0, 309, 337, 199, 328, 1387, 320, 182, 1522, 319,
	257, 306, 311, 243, 237, 181, 308, 241, 236, 229,
	208, 0, 221, 269, 235, 270, 222, 247, 246, 248,
	1506, 1507, 1508, 1509, 1510, 348, 1518, 1519, 0, 1523,
	1524, 1525, 1392, 0, 1412, 1464, 0, 1376, 1473, 1481,
	1431, 322, 1483, 1428, 1427, 1513, 874, 1512, 295, 1514,
	1515, 230, 1479, 1408, 1417, 338, 1415, 281, 263, 1485,
	1450, 1526, 279, 233, 307, 271, 313, 297, 321, 275,
	272, 173, 298, 202, 244, 184, 186, 198, 205, 207,
	209, 210, 253, 254, 266, 286, 300, 301, 302, 201,
	194, 280, 195, 219, 196, 174, 288, 197, 176, 267,
	305, 1511, 215, 276, 240, 177, 239, 268, 304, 303,
	185, 329, 335, 336, 340, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 1520,
	0, 1521, 334, 213, 170, 171, 317, 0, 259, 0,
	1476, 1381, 1391, 1389, 1425, 1452, 1453, 255, 333, 1468,
	1472, 1469, 1497, 284, 0, 0, 0, 0, 0, 224,
	265, 1470, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 292, 315, 327, 344, 347,
	1529, 1530, 1531, 175, 346, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 318, 1426, 1399, 1437, 326, 1402, 1400, 1467,
	1401, 1456, 342, 249, 250, 251, 252, 216, 0, 192,
	345, 274, 1447, 1430, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1448, 1540, 1541, 1542, 1543, 1544, 1404, 339, 212,
	218, 0, 220, 191, 264, 214, 324, 227, 1474, 1545,
	1546, 256, 223, 289, 228, 234, 277, 323, 262, 282,
	189, 314, 290, 238, 0, 0, 1398, 1403, 1397, 1444,
	1445, 1491, 1492, 1493, 1465, 1390, 1477, 0, 1394, 1396,
	1395, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1471, 299, 476, 1449, 172, 0, 232, 1498, 273, 211,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 206,
	0, 0, 231, 0, 0, 0, 468, 0, 0, 291,
	245, 0, 0, 0, 0, 523, 531, 0, 1516, 1517,
	330, 331, 332, 316, 0, 203, 1539, 430, 0, 0,
	461, 500, 499, 448, 457, 0, 0, 187, 449, 0,
	456, 450, 454, 453, 451, 452, 0, 515, 0, 0,
	0, 0, 0, 0, 421, 434, 2418, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	432, 0, 0, 0, 0, 477, 0, 433, 0, 0,
	479, 458, 459, 0, 0, 178, 296, 312, 188, 287,
	325, 193, 294, 183, 260, 283, 0, 0, 180, 310,
	293, 242, 225, 226, 179, 0, 278, 204, 217, 200,
	258, 455, 475, 480, 199, 537, 473, 320, 182, 0,
	319, 257, 306, 311, 243, 237, 181, 308, 241, 236,
	229, 208, 538, 221, 269, 235, 270, 222, 247, 246,
	248, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 322, 0, 0, 521, 0, 0, 0, 295,
	0, 0, 230, 0, 0, 0, 474, 0, 281, 263,
	534, 422, 0, 279, 233, 307, 271, 313, 297, 321,
	275, 272, 173, 298, 202, 244, 184, 186, 198, 205,
	207, 209, 210, 253, 254, 266, 286, 300, 301, 302,
	201, 194, 280, 195, 219, 196, 174, 288, 197, 176,
	267, 305, 0, 215, 276, 240, 177, 239, 268, 304,
	303, 185, 329, 335, 336, 340, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 334, 213, 170, 171, 317, 519, 259,
	0, 533, 514, 516, 517, 520, 524, 525, 526, 527,
	528, 530, 532, 536, 284, 0, 0, 0, 0, 0,
	224, 265, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 315, 327, 344,
	347, 0, 0, 0, 175, 346, 0, 2419, 0, 0,
	0, 2420, 0, 535, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 478, 249, 250, 251, 252, 522, 0,
	192, 345, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	212, 218, 0, 220, 191, 264, 214, 324, 227, 0,
	0, 0, 256, 223, 289, 228, 234, 277, 323, 262,
	282, 189, 314, 290, 238, 0, 0, 544, 518, 543,
	545, 546, 542, 547, 548, 529, 440, 0, 483, 540,
	539, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 232, 0, 273,
	211, 507, 487, 488, 489, 439, 490, 485, 486, 508,
	481, 504, 505, 463, 466, 491, 503, 492, 506, 509,
	510, 549, 550, 498, 551, 495, 511, 502, 501, 493,
	482, 512, 513, 467, 465, 496, 497, 484, 299, 476,
	0, 330, 331, 332, 316, 0, 203, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 206, 0, 0, 231,
	0, 0, 0, 468, 0, 0, 291, 245, 0, 0,
	0, 0, 523, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 0, 461, 500, 499,
	448, 457, 0, 0, 187, 449, 0, 456, 450, 454,
	453, 451, 452, 0, 515, 0, 0, 0, 0, 0,
	0, 421, 434, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 432, 0, 0,
	0, 0, 477, 0, 433, 0, 0, 479, 458, 459,
	0, 0, 178, 296, 312, 188, 287, 325, 193, 294,
	183, 260, 283, 0, 0, 180, 310, 293, 242, 225,
	226, 179, 0, 278, 204, 217, 200, 258, 455, 475,
	480, 199, 537, 473, 320, 182, 0, 319, 257, 306,
	311, 243, 237, 181, 308, 241, 236, 229, 208, 538,
	221, 269, 235, 270, 222, 247, 246, 248, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 322,
	0, 0, 521, 0, 0, 0, 295, 0, 0, 230,
	0, 0, 0, 474, 0, 281, 263, 534, 422, 0,
	279, 233, 307, 271, 313, 297, 321, 275, 272, 173,
	298, 202, 244, 184, 186, 198, 205, 207, 209, 210,
	253, 254, 266, 286, 300, 301, 302, 201, 194, 280,
	195, 219, 196, 174, 288, 197, 176, 267, 305, 0,
	215, 276, 240, 177, 239, 268, 304, 303, 185, 329,
	335, 336, 340, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 1171, 1170, 1172,
	334, 213, 170, 171, 317, 519, 259, 0, 533, 514,
	516, 517, 520, 524, 525, 526, 527, 528, 530, 532,
	536, 284, 0, 0, 0, 0, 0, 224, 265, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 315, 327, 344, 347, 0, 0,
	0, 175, 346, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	478, 249, 250, 251, 252, 522, 0, 192, 345, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 212, 218, 0,
	220, 191, 264, 214, 324, 227, 0, 0, 0, 256,
	223, 289, 228, 234, 277, 323, 262, 282, 189, 314,
	290, 238, 0, 0, 544, 518, 543, 545, 546, 542,
	547, 548, 529, 440, 0, 483, 540, 539, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 232, 0, 273, 211, 507, 487,
	488, 489, 439, 490, 485, 486, 508, 481, 504, 505,
	463, 466, 491, 503, 492, 506, 509, 510, 549, 550,
	498, 551, 495, 511, 502, 501, 493, 482, 512, 513,
	467, 465, 496, 497, 484, 299, 476, 0, 330, 331,
	332, 316, 0, 203, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 206, 0, 0, 231, 0, 0, 0,
	468, 0, 0, 291, 245, 0, 0, 0, 0, 523,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 0, 461, 500, 499, 448, 457, 0,
	0, 187, 449, 0, 456, 450, 454, 453, 451, 452,
	0, 515, 0, 0, 0, 0, 0, 0, 421, 434,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 432, 0, 0, 0, 0, 477,
	0, 433, 0, 0, 479, 458, 459, 0, 0, 178,
	296, 312, 188, 287, 325, 193, 294, 183, 260, 283,
	0, 0, 180, 310, 293, 242, 225, 226, 179, 0,
	278, 204, 217, 200, 258, 455, 475, 480, 199, 537,
	473, 320, 182, 0, 319, 257, 306, 311, 243, 237,
	181, 308, 241, 236, 229, 208, 538, 221, 269, 235,
	270, 222, 247, 246, 248, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 322, 0, 0, 521,
	0, 0, 0, 295, 0, 0, 230, 0, 0, 0,
	474, 0, 281, 263, 534, 422, 0, 279, 233, 307,
	271, 313, 297, 321, 275, 272, 173, 298, 202, 244,
	184, 186, 198, 205, 207, 209, 210, 253, 254, 266,
	286, 300, 301, 302, 201, 194, 280, 195, 219, 196,
	174, 288, 197, 176, 267, 305, 0, 215, 276, 240,
	177, 239, 268, 304, 303, 185, 329, 335, 336, 340,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 334, 213, 170,
	171, 317, 519, 259, 0, 533, 514, 516, 517, 520,
	524, 525, 526, 527, 528, 530, 532, 536, 284, 0,
	0, 0, 0, 0, 224, 265, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 315, 327, 344, 347, 0, 0, 0, 175, 346,
	0, 2419, 0, 0, 0, 2420, 0, 535, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 478, 249, 250,
	251, 252, 522, 0, 192, 345, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 212, 218, 0, 220, 191, 264,
	214, 324, 227, 0, 0, 0, 256, 223, 289, 228,
	234, 277, 323, 262, 282, 189, 314, 290, 238, 0,
	0, 544, 518, 543, 545, 546, 542, 547, 548, 529,
	440, 0, 483, 540, 539, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 232, 0, 273, 211, 507, 487, 488, 489, 439,
	490, 485, 486, 508, 481, 504, 505, 463, 466, 491,
	503, 492, 506, 509, 510, 549, 550, 498, 551, 495,
	511, 502, 501, 493, 482, 512, 513, 467, 465, 496,
	497, 484, 299, 476, 0, 330, 331, 332, 316, 0,
	203, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	206, 1233, 0, 231, 0, 0, 0, 468, 0, 0,
	291, 245, 0, 0, 0, 0, 523, 531, 0, 0,
	0, 0, 0, 0, 0, 1318, 0, 0, 430, 0,
	0, 461, 500, 499, 448, 457, 0, 0, 187, 449,
	0, 456, 450, 454, 453, 451, 452, 0, 515, 0,
	0, 0, 0, 0, 0, 421, 434, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 432, 0, 0, 0, 0, 477, 0, 433, 0,
	0, 1319, 458, 459, 0, 0, 178, 296, 312, 188,
	287, 325, 193, 294, 183, 260, 283, 0, 0, 180,
	310, 293, 242, 225, 226, 179, 0, 278, 204, 217,
	200, 258, 455, 475, 480, 199, 537, 473, 320, 182,
	0, 319, 257, 306, 311, 243, 237, 181, 308, 241,
	236, 229, 208, 538, 221, 269, 235, 270, 222, 247,
	246, 248, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 322, 0, 0, 521, 0, 0, 0,
	295, 0, 0, 230, 0, 0, 0, 474, 0, 281,
	263, 534, 422, 0, 279, 233, 307, 271, 313, 297,
	321, 275, 272, 173, 298, 202, 244, 184, 186, 198,
	205, 207, 209, 210, 253, 254, 266, 286, 300, 301,
	302, 201, 194, 280, 195, 219, 196, 174, 288, 197,
	176, 267, 305, 0, 215, 276, 240, 177, 239, 268,
	304, 303, 185, 329, 335, 336, 340, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 334, 213, 170, 171, 317, 519,
	259, 0, 533, 514, 516, 517, 520, 524, 525, 526,
	527, 528, 530, 532, 536, 284, 0, 0, 0, 0,
	0, 224, 265, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 315, 327,
	344, 347, 0, 0, 0, 175, 346, 0, 0, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 478, 249, 250, 251, 252, 522,
	0, 192, 345, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 212, 218, 0, 220, 191, 264, 214, 324, 227,
	0, 0, 0, 256, 223, 289, 228, 234, 277, 323,
	262, 282, 189, 314, 290, 238, 0, 0, 544, 518,
	543, 545, 546, 542, 547, 548, 529, 440, 0, 483,
	540, 539, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 232, 0,
	273, 211, 507, 487, 488, 489, 439, 490, 485, 486,
	508, 481, 504, 505, 463, 466, 491, 503, 492, 506,
	509, 510, 549, 550, 498, 551, 495, 511, 502, 501,
	493, 482, 512, 513, 467, 465, 496, 497, 484, 123,
	299, 476, 330, 331, 332, 316, 0, 203, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 206, 0,
	0, 231, 0, 0, 0, 468, 0, 0, 291, 245,
	0, 0, 0, 0, 523, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 0, 461,
	500, 499, 448, 457, 0, 0, 187, 449, 0, 456,
	450, 454, 453, 451, 452, 0, 515, 0, 0, 0,
	0, 0, 0, 421, 434, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 432,
	0, 0, 0, 0, 477, 0, 433, 0, 0, 479,
	458, 459, 0, 0, 178, 296, 312, 188, 287, 325,
	193, 294, 183, 260, 283, 0, 0, 180, 310, 293,
	242, 225, 226, 179, 0, 278, 204, 217, 200, 258,
	455, 475, 480, 199, 537, 473, 320, 182, 0, 319,
	257, 306, 311, 243, 237, 181, 308, 241, 236, 229,
	208, 538, 221, 269, 235, 270, 222, 247, 246, 248,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 322, 0, 0, 521, 0, 0, 0, 295, 0,
	0, 230, 0, 0, 0, 474, 0, 281, 263, 534,
	422, 0, 279, 233, 307, 271, 313, 297, 321, 275,
	272, 173, 298, 202, 244, 184, 186, 198, 205, 207,
	209, 210, 253, 254, 266, 286, 300, 301, 302, 201,
	194, 280, 195, 219, 196, 174, 288, 197, 176, 267,
	305, 0, 215, 276, 240, 177, 239, 268, 304, 303,
	185, 329, 335, 336, 340, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 334, 213, 170, 171, 317, 519, 259, 0,
	533, 514, 516, 517, 520, 524, 525, 526, 527, 528,
	530, 532, 536, 284, 0, 0, 0, 0, 0, 224,
	265, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 315, 327, 344, 347,
	0, 0, 0, 175, 346, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 478, 249, 250, 251, 252, 522, 0, 192,
	345, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 212,
	218, 0, 220, 191, 264, 214, 324, 227, 0, 0,
	0, 256, 223, 289, 228, 234, 277, 323, 262, 282,
	189, 314, 290, 238, 0, 0, 544, 518, 543, 545,
	546, 542, 547, 548, 529, 440, 0, 483, 540, 539,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 232, 95, 273, 211,
	507, 487, 488, 489, 439, 490, 485, 486, 508, 481,
	504, 505, 463, 466, 491, 503, 492, 506, 509, 510,
	549, 550, 498, 551, 495, 511, 502, 501, 493, 482,
	512, 513, 467, 465, 496, 497, 484, 299, 476, 0,
	330, 331, 332, 316, 0, 203, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 206, 2648, 0, 231, 0,
	0, 0, 468, 0, 0, 291, 245, 0, 0, 0,
	0, 523, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 0, 461, 500, 499, 448,
	457, 0, 0, 187, 449, 0, 456, 450, 454, 453,
	451, 452, 0, 515, 0, 0, 0, 0, 0, 0,
	421, 434, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 432, 0, 0, 0,
	0, 477, 0, 433, 0, 0, 479, 458, 459, 0,
	0, 178, 296, 312, 188, 287, 325, 193, 294, 183,
	260, 283, 0, 0, 180, 310, 293, 242, 225, 226,
	179, 0, 278, 204, 217, 200, 258, 455, 475, 480,
	199, 537, 473, 320, 182, 0, 319, 257, 306, 311,
	243, 237, 181, 308, 241, 236, 229, 208, 538, 221,
	269, 235, 270, 222, 247, 246, 248, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 322, 0,
	0, 521, 0, 0, 0, 295, 0, 0, 230, 0,
	0, 0, 474, 0, 281, 263, 534, 422, 0, 279,
	233, 307, 271, 313, 297, 321, 275, 272, 173, 298,
	202, 244, 184, 186, 198, 205, 207, 209, 210, 253,
	254, 266, 286, 300, 301, 302, 201, 194, 280, 195,
	219, 196, 174, 288, 197, 176, 267, 305, 0, 215,
	276, 240, 177, 239, 268, 304, 303, 185, 329, 335,
	336, 340, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 334,
	213, 170, 171, 317, 519, 259, 0, 533, 514, 516,
	517, 520, 524, 525, 526, 527, 528, 530, 532, 536,
	284, 0, 0, 0, 0, 0, 224, 265, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 315, 327, 344, 347, 0, 0, 0,
	175, 346, 0, 0, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 478,
	249, 250, 251, 252, 522, 0, 192, 345, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 212, 218, 0, 220,
	191, 264, 214, 324, 227, 0, 0, 0, 256, 223,
	289, 228, 234, 277, 323, 262, 282, 189, 314, 290,
	238, 0, 0, 544, 518, 543, 545, 546, 542, 547,
	548, 529, 440, 0, 483, 540, 539, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 232, 0, 273, 211, 507, 487, 488,
	489, 439, 490, 485, 486, 508, 481, 504, 505, 463,
	466, 491, 503, 492, 506, 509, 510, 549, 550, 498,
	551, 495, 511, 502, 501, 493, 482, 512, 513, 467,
	465, 496, 497, 484, 299, 476, 0, 330, 331, 332,
	316, 0, 203, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 206, 1233, 0, 231, 0, 0, 0, 468,
	0, 0, 291, 245, 0, 0, 0, 0, 523, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 0, 461, 500, 499, 448, 457, 0, 0,
	187, 449, 0, 456, 450, 454, 453, 451, 452, 0,
	515, 0, 0, 0, 0, 0, 0, 421, 434, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 432, 0, 0, 0, 0, 477, 0,
	433, 0, 0, 479, 458, 459, 0, 0, 178, 296,
	312, 188, 287, 325, 193, 294, 183, 260, 283, 0,
	0, 180, 310, 293, 242, 225, 226, 179, 0, 278,
	204, 217, 200, 258, 455, 475, 480, 199, 537, 473,
	320, 182, 0, 319, 257, 306, 311, 243, 237, 181,
	308, 241, 236, 229, 208, 538, 221, 269, 235, 270,
	222, 247, 246, 248, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 322, 0, 0, 521, 0,
	0, 0, 295, 0, 0, 230, 0, 0, 0, 474,
	0, 281, 263, 534, 422, 0, 279, 233, 307, 271,
	313, 297, 321, 275, 272, 173, 298, 202, 244, 184,
	186, 198, 205, 207, 209, 210, 253, 254, 266, 286,
	300, 301, 302, 201, 194, 280, 195, 219, 196, 174,
	288, 197, 176, 267, 305, 0, 215, 276, 240, 177,
	239, 268, 304, 303, 185, 329, 335, 336, 340, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 334, 213, 170, 171,
	317, 519, 259, 0, 533, 514, 516, 517, 520, 524,
	525, 526, 527, 528, 530, 532, 536, 284, 0, 0,
	0, 0, 0, 224, 265, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	315, 327, 344, 347, 0, 0, 0, 175, 346, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 478, 249, 250, 251,
	252, 522, 0, 192, 345, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 212, 218, 0, 220, 191, 264, 214,
	324, 227, 0, 0, 0, 256, 223, 289, 228, 234,
	277, 323, 262, 282, 189, 314, 290, 238, 0, 0,
	544, 518, 543, 545, 546, 542, 547, 548, 529, 440,
	0, 483, 540, 539, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	232, 0, 273, 211, 507, 487, 488, 489, 439, 490,
	485, 486, 508, 481, 504, 505, 463, 466, 491, 503,
	492, 506, 509, 510, 549, 550, 498, 551, 495, 511,
	502, 501, 493, 482, 512, 513, 467, 465, 496, 497,
	484, 299, 476, 0, 330, 331, 332, 316, 0, 203,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 206,
	0, 0, 231, 0, 0, 0, 468, 0, 0, 291,
	245, 0, 0, 0, 0, 523, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 0,
	461, 500, 499, 448, 457, 0, 0, 187, 449, 0,
	456, 450, 454, 453, 451, 452, 0, 515, 0, 0,
	0, 0, 0, 0, 421, 434, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	432, 1010, 0, 0, 0, 477, 0, 433, 0, 0,
	479, 458, 459, 0, 0, 178, 296, 312, 188, 287,
	325, 193, 294, 183, 260, 283, 0, 0, 180, 310,
	293, 242, 225, 226, 179, 0, 278, 204, 217, 200,
	258, 455, 475, 480, 199, 537, 473, 320, 182, 0,
	319, 257, 306, 311, 243, 237, 181, 308, 241, 236,
	229, 208, 538, 221, 269, 235, 270, 222, 247, 246,
	248, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 322, 0, 0, 521, 0, 0, 0, 295,
	0, 0, 230, 0, 0, 0, 474, 0, 281, 263,
	534, 422, 0, 279, 233, 307, 271, 313, 297, 321,
	275, 272, 173, 298, 202, 244, 184, 186, 198, 205,
	207, 209, 210, 253, 254, 266, 286, 300, 301, 302,
	201, 194, 280, 195, 219, 196, 174, 288, 197, 176,
	267, 305, 0, 215, 276, 240, 177, 239, 268, 304,
	303, 185, 329, 335, 336, 340, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 334, 213, 170, 171, 317, 519, 259,
	0, 533, 514, 516, 517, 520, 524, 525, 526, 527,
	528, 530, 532, 536, 284, 0, 0, 0, 0, 0,
	224, 265, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 315, 327, 344,
	347, 0, 0, 0, 175, 346, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 478, 249, 250, 251, 252, 522, 0,
	192, 345, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	212, 218, 0, 220, 191, 264, 214, 324, 227, 0,
	0, 0, 256, 223, 289, 228, 234, 277, 323, 262,
	282, 189, 314, 290, 238, 0, 0, 544, 518, 543,
	545, 546, 542, 547, 548, 529, 440, 0, 483, 540,
	539, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 232, 0, 273,
	211, 507, 487, 488, 489, 439, 490, 485, 486, 508,
	481, 504, 505, 463, 466, 491, 503, 492, 506, 509,
	510, 549, 550, 498, 551, 495, 511, 502, 501, 493,
	482, 512, 513, 467, 465, 496, 497, 484, 0, 0,
	0, 330, 331, 332, 316, 0, 203, 299, 476, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 206, 0, 0, 231, 0,
	0, 0, 468, 0, 0, 291, 245, 0, 0, 0,
	0, 523, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 0, 461, 500, 499, 448,
	457, 0, 0, 187, 449, 0, 456, 450, 454, 453,
	451, 452, 0, 515, 0, 0, 0, 0, 0, 0,
	421, 434, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 432, 0, 0, 0,
	0, 477, 0, 433, 0, 0, 479, 458, 459, 0,
	0, 178, 296, 312, 188, 287, 325, 193, 294, 183,
	260, 283, 0, 0, 180, 310, 293, 242, 225, 226,
	179, 0, 278, 204, 217, 200, 258, 455, 475, 480,
	199, 537, 473, 320, 182, 0, 319, 257, 306, 311,
	243, 237, 181, 308, 241, 236, 229, 208, 538, 221,
	269, 235, 270, 222, 247, 246, 248, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 322, 0,
	0, 521, 0, 0, 0, 295, 0, 0, 230, 0,
	0, 0, 474, 0, 281, 263, 534, 422, 0, 279,
	233, 307, 271, 313, 297, 321, 275, 272, 173, 298,
	202, 244, 184, 186, 198, 205, 207, 209, 210, 253,
	254, 266, 286, 300, 301, 302, 201, 194, 280, 195,
	219, 196, 174, 288, 197, 176, 267, 305, 0, 215,
	276, 240, 177, 239, 268, 304, 303, 185, 329, 335,
	336, 340, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 334,
	213, 170, 171, 317, 519, 259, 0, 533, 514, 516,
	517, 520, 524, 525, 526, 527, 528, 530, 532, 536,
	284, 0, 0, 0, 0, 0, 224, 265, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 315, 327, 344, 347, 0, 0, 0,
	175, 346, 0, 0, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 478,
	249, 250, 251, 252, 522, 0, 192, 345, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 212, 218, 0, 220,
	191, 264, 214, 324, 227, 0, 0, 0, 256, 223,
	289, 228, 234, 277, 323, 262, 282, 189, 314, 290,
	238, 0, 0, 544, 518, 543, 545, 546, 542, 547,
	548, 529, 440, 0, 483, 540, 539, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 232, 0, 273, 211, 507, 487, 488,
	489, 439, 490, 485, 486, 508, 481, 504, 505, 463,
	466, 491, 503, 492, 506, 509, 510, 549, 550, 498,
	551, 495, 511, 502, 501, 493, 482, 512, 513, 467,
	465, 496, 497, 484, 299, 476, 0, 330, 331, 332,
	316, 0, 203, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 206, 0, 0, 231, 0, 0, 0, 468,
	0, 0, 291, 245, 0, 0, 0, 0, 523, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 0, 461, 500, 499, 448, 457, 0, 0,
	187, 449, 0, 456, 450, 454, 453, 451, 452, 0,
	515, 0, 0, 0, 0, 0, 0, 421, 434, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 432, 0, 0, 0, 0, 477, 0,
	433, 0, 0, 479, 458, 459, 0, 0, 178, 296,
	312, 188, 287, 325, 193, 294, 183, 260, 283, 0,
	0, 180, 310, 293, 242, 225, 226, 179, 0, 278,
	204, 217, 200, 258, 455, 475, 480, 199, 537, 473,
	320, 182, 0, 319, 257, 306, 311, 243, 237, 181,
	308, 241, 236, 229, 208, 538, 221, 269, 235, 270,
	222, 247, 246, 248, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 322, 0, 0, 521, 0,
	0, 0, 295, 0, 0, 230, 0, 0, 0, 474,
	0, 281, 263, 534, 422, 0, 279, 233, 307, 271,
	313, 297, 321, 275, 272, 173, 298, 202, 244, 184,
	186, 198, 205, 207, 209, 210, 253, 254, 266, 286,
	300, 301, 302, 201, 194, 280, 195, 219, 196, 174,
	288, 197, 176, 267, 305, 0, 215, 276, 240, 177,
	239, 268, 304, 303, 185, 329, 335, 336, 340, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 334, 213, 170, 171,
	317, 519, 259, 0, 533, 514, 516, 517, 520, 524,
	525, 526, 527, 528, 530, 532, 536, 284, 0, 0,
	0, 0, 0, 224, 265, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	315, 327, 344, 347, 0, 0, 0, 175, 346, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 478, 249, 250, 251,
	252, 522, 0, 192, 345, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 212, 218, 0, 220, 191, 264, 214,
	324, 227, 0, 0, 0, 256, 223, 289, 228, 234,
	277, 323, 262, 282, 189, 314, 290, 238, 0, 0,
	544, 518, 543, 545, 546, 542, 547, 548, 529, 440,
	0, 483, 540, 539, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	232, 0, 273, 211, 507, 487, 488, 489, 439, 490,
	485, 486, 508, 481, 504, 505, 463, 466, 491, 503,
	492, 506, 509, 510, 549, 550, 498, 551, 495, 511,
	502, 501, 493, 482, 512, 513, 467, 465, 496, 497,
	484, 299, 476, 0, 330, 331, 332, 316, 0, 203,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 0, 437, 0, 0, 0, 206,
	0, 0, 231, 0, 0, 0, 468, 0, 0, 291,
	245, 0, 0, 0, 0, 523, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 0,
	461, 500, 499, 448, 457, 0, 0, 187, 449, 0,
	456, 450, 454, 453, 451, 452, 0, 515, 0, 0,
	0, 0, 0, 0, 0, 434, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	432, 0, 0, 0, 0, 477, 0, 433, 0, 0,
	479, 458, 459, 0, 0, 178, 296, 312, 188, 287,
	325, 193, 294, 183, 260, 283, 0, 0, 180, 310,
	293, 242, 225, 226, 179, 0, 278, 204, 217, 200,
	258, 455, 475, 480, 199, 537, 473, 320, 182, 0,
	319, 257, 306, 311, 243, 237, 181, 308, 241, 236,
	229, 208, 538, 221, 269, 235, 270, 222, 247, 246,
	248, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 322, 0, 0, 521, 0, 0, 0, 295,
	0, 0, 230, 0, 0, 0, 474, 0, 281, 263,
	534, 0, 0, 279, 233, 307, 271, 313, 297, 321,
	275, 272, 173, 298, 202, 244, 184, 186, 198, 205,
	207, 209, 210, 253, 254, 266, 286, 300, 301, 302,
	201, 194, 280, 195, 219, 196, 174, 288, 197, 176,
	267, 305, 0, 215, 276, 240, 177, 239, 268, 304,
	303, 185, 329, 1095, 1096, 340, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 334, 213, 170, 171, 317, 519, 259,
	0, 533, 514, 516, 517, 520, 524, 525, 526, 527,
	528, 530, 532, 536, 284, 0, 0, 0, 0, 0,
	224, 265, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 315, 327, 344,
	347, 0, 0, 0, 175, 346, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 478, 249, 250, 251, 252, 522, 0,
	192, 345, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	212, 218, 0, 220, 191, 264, 214, 324, 227, 0,
	0, 0, 256, 223, 289, 228, 234, 277, 323, 262,
	282, 189, 314, 290, 238, 0, 0, 544, 518, 543,
	545, 546, 542, 547, 548, 529, 440, 0, 483, 540,
	539, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 232, 0, 273,
	211, 507, 487, 488, 489, 439, 490, 485, 486, 508,
	481, 504, 505, 463, 466, 491, 503, 492, 506, 509,
	510, 549, 550, 498, 551, 495, 511, 502, 501, 493,
	482, 512, 513, 467, 465, 496, 497, 484, 299, 476,
	0, 330, 331, 332, 316, 0, 203, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 206, 0, 0, 231,
	0, 0, 0, 468, 0, 0, 291, 245, 0, 0,
	0, 0, 523, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 500, 499,
	448, 457, 0, 0, 187, 449, 0, 456, 450, 454,
	453, 451, 452, 0, 515, 0, 0, 0, 0, 0,
	0, 421, 434, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 432, 0, 0,
	0, 0, 477, 0, 433, 0, 0, 479, 458, 459,
	0, 0, 178, 296, 312, 188, 287, 325, 193, 294,
	183, 260, 283, 0, 0, 180, 310, 293, 242, 225,
	226, 179, 0, 278, 204, 217, 200, 258, 455, 475,
	480, 199, 537, 473, 320, 182, 0, 319, 257, 306,
	311, 243, 237, 181, 308, 241, 236, 229, 208, 538,
	221, 269, 235, 270, 222, 247, 246, 248, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 322,
	0, 0, 521, 0, 0, 0, 295, 0, 0, 230,
	0, 0, 0, 474, 0, 281, 263, 534, 422, 0,
	279, 233, 307, 271, 313, 297, 321, 275, 272, 173,
	298, 202, 244, 184, 186, 198, 205, 207, 209, 210,
	253, 254, 266, 286, 300, 301, 302, 201, 194, 280,
	195, 219, 196, 174, 288, 197, 176, 267, 305, 0,
	215, 276, 240, 177, 239, 268, 304, 303, 185, 329,
	335, 336, 340, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	334, 213, 170, 171, 317, 519, 259, 0, 533, 514,
	516, 517, 520, 524, 525, 526, 527, 528, 530, 532,
	536, 284, 0, 0, 0, 0, 0, 224, 265, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 315, 327, 344, 347, 0, 0,
	0, 175, 346, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	478, 249, 250, 251, 252, 522, 0, 192, 345, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 212, 218, 0,
	220, 191, 264, 214, 324, 227, 0, 0, 0, 256,
	223, 289, 228, 234, 277, 323, 262, 282, 189, 314,
	290, 238, 0, 0, 544, 518, 543, 545, 546, 542,
	547, 548, 529, 440, 0, 483, 540, 539, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 232, 0, 273, 211, 507, 487,
	488, 489, 439, 490, 485, 486, 508, 481, 504, 505,
	463, 466, 491, 503, 492, 506, 509, 510, 549, 550,
	498, 551, 495, 511, 502, 501, 493, 482, 512, 513,
	467, 465, 496, 497, 484, 299, 476, 0, 330, 331,
	332, 316, 0, 203, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 206, 0, 0, 231, 0, 0, 0,
	468, 0, 0, 291, 245, 0, 0, 0, 0, 523,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 0, 461, 500, 499, 448, 457, 0,
	0, 187, 449, 0, 456, 450, 454, 453, 451, 452,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 432, 0, 0, 0, 0, 477,
	0, 433, 0, 0, 479, 458, 459, 0, 0, 178,
	296, 312, 188, 287, 325, 193, 294, 183, 260, 283,
	0, 0, 180, 310, 293, 242, 225, 226, 179, 0,
	278, 204, 217, 200, 258, 455, 475, 480, 199, 537,
	473, 320, 182, 0, 319, 257, 306, 311, 243, 237,
	181, 308, 241, 236, 229, 208, 538, 221, 269, 235,
	270, 222, 247, 246, 248, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 322, 0, 0, 521,
	0, 0, 0, 295, 0, 0, 230, 0, 0, 0,
	474, 0, 281, 263, 534, 0, 0, 279, 233, 307,
	271, 313, 297, 321, 275, 272, 173, 298, 202, 244,
	184, 186, 198, 205, 207, 209, 210, 253, 254, 266,
	286, 300, 301, 302, 201, 194, 280, 195, 219, 196,
	174, 288, 197, 176, 267, 305, 0, 215, 276, 240,
	177, 239, 268, 304, 303, 185, 329, 335, 336, 340,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 334, 213, 170,
	171, 317, 519, 259, 0, 533, 514, 516, 517, 520,
	524, 525, 526, 527, 528, 530, 532, 536, 284, 0,
	0, 0, 0, 0, 224, 265, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 315, 327, 344, 347, 0, 0, 0, 175, 346,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 478, 249, 250,
	251, 252, 522, 0, 192, 345, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 212, 218, 0, 220, 191, 264,
	214, 324, 227, 0, 0, 0, 256, 223, 289, 228,
	234, 277, 323, 262, 282, 189, 314, 290, 238, 0,
	0, 544, 518, 543, 545, 546, 542, 547, 548, 529,
	440, 0, 483, 540, 539, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 232, 0, 273, 211, 507, 487, 488, 489, 439,
	490, 485, 486, 508, 481, 504, 505, 463, 466, 491,
	503, 492, 506, 509, 510, 549, 550, 498, 551, 495,
	511, 502, 501, 493, 482, 512, 513, 467, 465, 496,
	497, 484, 0, 0, 0, 330, 331, 332, 316, 0,
	203, 123, 299, 37, 113, 94, 0, 0, 0, 0,
	0, 0, 0, 261, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	291, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 130, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 296, 312, 188,
	287, 325, 193, 294, 183, 260, 283, 0, 0, 180,
	310, 293, 242, 225, 226, 179, 0, 278, 204, 217,
	200, 258, 0, 309, 337, 199, 328, 0, 320, 182,
	0, 319, 257, 306, 311, 243, 237, 181, 308, 241,
	236, 229, 208, 0, 221, 269, 235, 270, 222, 247,
	246, 248, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 230, 0, 0, 0, 338, 0, 281,
	263, 0, 0, 0, 279, 233, 307, 271, 313, 297,
	321, 275, 272, 173, 298, 202, 244, 184, 186, 198,
	205, 207, 209, 210, 253, 254, 266, 286, 300, 301,
	302, 201, 194, 280, 195, 219, 196, 174, 288, 197,
	176, 267, 305, 0, 215, 276, 240, 177, 239, 268,
	304, 303, 185, 329, 335, 336, 340, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 334, 213, 170, 171, 317, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	333, 0, 0, 0, 0, 284, 0, 0, 0, 0,
	0, 224, 265, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 315, 327,
	344, 347, 0, 0, 0, 175, 346, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 342, 249, 250, 251, 252, 359,
	361, 192, 345, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 212, 218, 0, 220, 191, 264, 214, 324, 227,
	0, 0, 0, 256, 223, 289, 228, 234, 277, 323,
	262, 282, 189, 314, 290, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 38, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 232, 95,
	273, 211, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 0, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 299,
	0, 0, 330, 331, 332, 316, 0, 203, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 291, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 2055, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 296, 312, 188, 287, 325, 193,
	294, 183, 260, 283, 0, 0, 180, 310, 293, 242,
	225, 226, 179, 0, 278, 204, 217, 200, 258, 0,
	309, 337, 199, 328, 0, 320, 182, 0, 319, 257,
	306, 311, 243, 237, 181, 308, 241, 236, 229, 208,
	0, 221, 269, 235, 270, 222, 247, 246, 248, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2059,
	322, 0, 0, 0, 2052, 0, 2051, 295, 2053, 2056,
	230, 0, 0, 0, 338, 0, 281, 263, 0, 0,
	0, 279, 233, 307, 271, 313, 297, 321, 275, 272,
	173, 298, 202, 244, 184, 186, 198, 205, 207, 209,
	210, 253, 254, 266, 286, 300, 301, 302, 201, 194,
	280, 195, 219, 196, 174, 288, 197, 176, 267, 305,
	2057, 215, 276, 240, 177, 239, 268, 304, 303, 185,
	329, 335, 336, 340, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 334, 213, 170, 171, 317, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 333, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 0, 224, 265,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 315, 327, 344, 347, 0,
	0, 0, 175, 346, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 342, 249, 250, 251, 252, 216, 0, 192, 345,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 212, 218,
	0, 220, 191, 264, 214, 324, 227, 0, 0, 0,
	256, 223, 289, 228, 234, 277, 323, 262, 282, 189,
	314, 290, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 232, 0, 273, 211, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 299, 0, 0, 330,
	331, 332, 316, 0, 203, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	0, 0, 0, 0, 206, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 291, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 1343, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 756, 757, 758, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 296, 312, 188, 287, 325, 193, 294, 183, 260,
	283, 0, 0, 180, 310, 293, 242, 225, 226, 179,
	0, 278, 204, 217, 200, 258, 0, 309, 337, 199,
	328, 0, 320, 182, 0, 319, 257, 306, 311, 243,
	237, 181, 308, 241, 236, 229, 208, 0, 221, 269,
	235, 270, 222, 247, 246, 248, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 230, 0, 0,
	0, 338, 0, 281, 263, 0, 0, 0, 279, 233,
	307, 271, 313, 297, 321, 275, 272, 173, 298, 202,
	244, 184, 186, 198, 205, 207, 209, 210, 253, 254,
	266, 286, 300, 301, 302, 201, 194, 280, 195, 219,
	196, 174, 288, 197, 176, 267, 305, 0, 215, 276,
	240, 177, 239, 268, 304, 303, 185, 329, 335, 336,
	340, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 334, 213,
	170, 171, 317, 1149, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 333, 0, 0, 0, 0, 284,
	0, 0, 0, 0, 0, 224, 265, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 315, 327, 344, 347, 0, 0, 0, 175,
	346, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 342, 249,
	250, 251, 252, 216, 0, 192, 345, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 212, 218, 0, 220, 191,
	264, 214, 324, 227, 0, 0, 0, 256, 223, 289,
	228, 234, 277, 323, 262, 282, 189, 314, 290, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1145, 0, 0, 1142,
	0, 0, 0, 1144, 1141, 1143, 1147, 1148, 0, 0,
	172, 1146, 232, 0, 273, 211, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 0, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 299, 0, 0, 330, 331, 332, 316,
	0, 203, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 638, 0, 231, 0, 0, 0, 0, 0,
	0, 291, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 646, 647, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1152, 1153, 1154, 1155, 1156, 1157, 1150, 1151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 296, 312,
	188, 287, 325, 193, 294, 183, 260, 283, 0, 0,
	180, 310, 293, 242, 225, 226, 179, 0, 278, 204,
	217, 200, 258, 0, 309, 337, 199, 328, 623, 320,
	182, 622, 319, 257, 306, 311, 243, 237, 181, 308,
	241, 236, 229, 208, 0, 221, 269, 235, 270, 222,
	247, 246, 248, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 230, 0, 0, 0, 338, 0,
	281, 263, 0, 0, 0, 279, 233, 307, 271, 313,
	297, 321, 636, 272, 173, 298, 202, 244, 184, 186,
	198, 205, 207, 209, 210, 253, 254, 266, 286, 300,
	301, 302, 201, 194, 280, 195, 219, 196, 174, 288,
	197, 176, 267, 305, 0, 215, 276, 240, 177, 239,
	268, 304, 303, 185, 329, 335, 336, 340, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 334, 213, 170, 171, 317,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 333, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 0, 224, 265, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 315,
	327, 344, 347, 0, 0, 0, 175, 346, 0, 0,
	0, 0, 0, 0, 637, 318, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 640, 249, 250, 251, 252,
	216, 0, 192, 345, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 212, 218, 0, 220, 191, 264, 214, 324,
	227, 0, 0, 0, 648, 643, 644, 228, 234, 277,
	323, 262, 282, 189, 314, 290, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 232,
	0, 273, 211, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 0, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	123, 299, 0, 330, 331, 332, 316, 0, 203, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 291,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 1363, 0,
	130, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 296, 312, 188, 287,
	325, 193, 294, 183, 260, 283, 0, 0, 180, 310,
	293, 242, 225, 226, 179, 0, 278, 204, 217, 200,
	258, 0, 309, 337, 199, 328, 0, 320, 182, 0,
	319, 257, 306, 311, 243, 237, 181, 308, 241, 236,
	229, 208, 0, 221, 269, 235, 270, 222, 247, 246,
	248, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 230, 0, 0, 0, 338, 0, 281, 263,
	0, 0, 0, 279, 233, 307, 271, 313, 297, 321,
	275, 272, 173, 298, 202, 244, 184, 186, 198, 205,
	207, 209, 210, 253, 254, 266, 286, 300, 301, 302,
	201, 194, 280, 195, 219, 196, 174, 288, 197, 176,
	267, 305, 0, 215, 276, 240, 177, 239, 268, 304,
	303, 185, 329, 335, 336, 340, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 334, 213, 170, 171, 317, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 333,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 0,
	224, 265, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 315, 327, 344,
	347, 0, 0, 0, 175, 346, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 342, 249, 250, 251, 252, 216, 0,
	192, 345, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	212, 218, 0, 220, 191, 264, 214, 324, 227, 0,
	0, 0, 256, 223, 289, 228, 234, 277, 323, 262,
	282, 189, 314, 290, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 232, 95, 273,
	211, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 0, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 123, 299,
	0, 330, 331, 332, 316, 0, 203, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 291, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 1354, 0, 130, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 296, 312, 188, 287, 325, 193,
	294, 183, 260, 283, 0, 0, 180, 310, 293, 242,
	225, 226, 179, 0, 278, 204, 217, 200, 258, 0,
	309, 337, 199, 328, 0, 320, 182, 0, 319, 257,
	306, 311, 243, 237, 181, 308, 241, 236, 229, 208,
	0, 221, 269, 235, 270, 222, 247, 246, 248, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	230, 0, 0, 0, 338, 0, 281, 263, 0, 0,
	0, 279, 233, 307, 271, 313, 297, 321, 275, 272,
	173, 298, 202, 244, 184, 186, 198, 205, 207, 209,
	210, 253, 254, 266, 286, 300, 301, 302, 201, 194,
	280, 195, 219, 196, 174, 288, 197, 176, 267, 305,
	0, 215, 276, 240, 177, 239, 268, 304, 303, 185,
	329, 335, 336, 340, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 334, 213, 170, 171, 317, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 333, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 0, 224, 265,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 315, 327, 344, 347, 0,
	0, 0, 175, 346, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 342, 249, 250, 251, 252, 216, 0, 192, 345,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 212, 218,
	0, 220, 191, 264, 214, 324, 227, 0, 0, 0,
	256, 223, 289, 228, 234, 277, 323, 262, 282, 189,
	314, 290, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 232, 95, 273, 211, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 299, 0, 0, 330,
	331, 332, 316, 0, 203, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 291, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 646, 647, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 296, 312, 188, 287, 325, 193, 294, 183, 260,
	283, 0, 0, 180, 310, 293, 242, 225, 226, 179,
	0, 278, 204, 217, 200, 258, 0, 309, 337, 199,
	328, 623, 320, 182, 622, 319, 257, 306, 311, 243,
	237, 181, 308, 241, 236, 229, 208, 0, 221, 269,
	235, 270, 222, 247, 246, 248, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 230, 0, 0,
	0, 338, 0, 281, 263, 0, 0, 0, 279, 233,
	307, 271, 313, 297, 321, 275, 272, 173, 298, 202,
	244, 184, 186, 198, 205, 207, 209, 210, 253, 254,
	266, 286, 300, 301, 302, 201, 194, 280, 195, 219,
	196, 174, 288, 197, 176, 267, 305, 0, 215, 276,
	240, 177, 239, 268, 304, 303, 185, 329, 335, 336,
	340, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 334, 213,
	170, 171, 317, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 333, 0, 0, 0, 0, 284,
	0, 0, 0, 0, 0, 224, 265, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 315, 327, 344, 347, 0, 0, 0, 175,
	346, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 342, 249,
	250, 251, 252, 216, 0, 192, 345, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 212, 218, 0, 220, 191,
	264, 214, 324, 227, 0, 0, 0, 648, 643, 644,
	228, 234, 277, 323, 262, 282, 189, 314, 290, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 232, 0, 273, 211, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 0, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 123, 299, 0, 330, 331, 332, 316,
	0, 203, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 291, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 130, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 296,
	312, 188, 287, 325, 193, 294, 183, 260, 283, 0,
	0, 180, 310, 293, 242, 225, 226, 179, 0, 278,
	204, 217, 200, 258, 0, 309, 337, 199, 328, 0,
	320, 182, 0, 319, 257, 306, 311, 243, 237, 181,
	308, 241, 236, 229, 208, 0, 221, 269, 235, 270,
	222, 247, 246, 248, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 230, 0, 0, 0, 338,
	0, 281, 263, 0, 0, 0, 279, 233, 307, 271,
	313, 297, 321, 275, 272, 173, 298, 202, 244, 184,
	186, 198, 205, 207, 209, 210, 253, 254, 266, 286,
	300, 301, 302, 201, 194, 280, 195, 219, 196, 174,
	288, 197, 176, 267, 305, 0, 215, 276, 240, 177,
	239, 268, 304, 303, 185, 329, 335, 336, 340, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 334, 213, 170, 171,
	317, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 333, 0, 0, 0, 0, 284, 0, 0,
	0, 0, 0, 224, 265, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	315, 327, 344, 347, 0, 0, 0, 175, 346, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 342, 249, 250, 251,
	252, 216, 0, 192, 345, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 212, 218, 0, 220, 191, 264, 214,
	324, 227, 0, 0, 0, 256, 223, 289, 228, 234,
	277, 323, 262, 282, 189, 314, 290, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	232, 95, 273, 211, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 0, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 299, 0, 0, 330, 331, 332, 316, 0, 203,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	994, 0, 231, 0, 0, 0, 0, 0, 0, 291,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 0, 992, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	990, 0, 0, 0, 0, 178, 296, 312, 188, 287,
	325, 193, 294, 183, 260, 283, 0, 0, 180, 310,
	293, 242, 225, 226, 179, 0, 278, 204, 217, 200,
	258, 0, 309, 337, 199, 328, 0, 320, 182, 0,
	319, 257, 306, 311, 243, 237, 181, 308, 241, 236,
	229, 208, 0, 221, 269, 235, 270, 222, 247, 246,
	248, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 230, 0, 0, 0, 338, 0, 281, 263,
	0, 0, 0, 279, 233, 307, 271, 313, 297, 321,
	275, 272, 173, 298, 202, 244, 184, 186, 198, 205,
	207, 209, 210, 253, 254, 266, 286, 300, 301, 302,
	201, 194, 280, 195, 219, 196, 174, 288, 197, 176,
	267, 305, 0, 215, 276, 240, 177, 239, 268, 304,
	303, 185, 329, 335, 336, 340, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 334, 213, 170, 171, 317, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 333,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 0,
	224, 265, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 315, 327, 344,
	347, 0, 0, 0, 175, 346, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 342, 249, 250, 251, 252, 216, 0,
	192, 345, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	212, 218, 0, 220, 191, 264, 214, 324, 227, 0,
	0, 0, 256, 223, 289, 228, 234, 277, 323, 262,
	282, 189, 314, 290, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 232, 0, 273,
	211, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 0, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 299, 0,
	0, 330, 331, 332, 316, 0, 203, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 988, 0, 231,
	0, 0, 0, 0, 0, 0, 291, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	992, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 990, 0, 0,
	0, 0, 178, 296, 312, 188, 287, 325, 193, 294,
	183, 260, 283, 0, 0, 180, 310, 293, 242, 225,
	226, 179, 0, 278, 204, 217, 200, 258, 0, 309,
	337, 199, 328, 0, 320, 182, 0, 319, 257, 306,
	311, 243, 237, 181, 308, 241, 236, 229, 208, 0,
	221, 269, 235, 270, 222, 247, 246, 248, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 230,
	0, 0, 0, 338, 0, 281, 263, 0, 0, 0,
	279, 233, 307, 271, 313, 297, 321, 275, 272, 173,
	298, 202, 244, 184, 186, 198, 205, 207, 209, 210,
	253, 254, 266, 286, 300, 301, 302, 201, 194, 280,
	195, 219, 196, 174, 288, 197, 176, 267, 305, 0,
	215, 276, 240, 177, 239, 268, 304, 303, 185, 329,
	335, 336, 340, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	334, 213, 170, 171, 317, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 333, 0, 0, 0,
	0, 284, 0, 0, 0, 0, 0, 224, 265, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 315, 327, 344, 347, 0, 0,
	0, 175, 346, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	342, 249, 250, 251, 252, 216, 0, 192, 345, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 212, 218, 0,
	220, 191, 264, 214, 324, 227, 0, 0, 0, 256,
	223, 289, 228, 234, 277, 323, 262, 282, 189, 314,
	290, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 232, 0, 273, 211, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	0, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 299, 0, 0, 330, 331,
	332, 316, 0, 203, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 291, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2552, 0, 130, 500, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	296, 312, 188, 287, 325, 193, 294, 183, 260, 283,
	0, 0, 180, 310, 293, 242, 225, 226, 179, 0,
	278, 204, 217, 200, 258, 0, 309, 337, 199, 328,
	0, 320, 182, 0, 319, 257, 306, 311, 243, 237,
	181, 308, 241, 236, 229, 208, 0, 221, 269, 235,
	270, 222, 247, 246, 248, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 230, 0, 0, 0,
	338, 0, 281, 263, 0, 0, 0, 279, 233, 307,
	271, 313, 297, 321, 275, 272, 173, 298, 202, 244,
	184, 186, 198, 205, 207, 209, 210, 253, 254, 266,
	286, 300, 301, 302, 201, 194, 280, 195, 219, 196,
	174, 288, 197, 176, 267, 305, 0, 215, 276, 240,
	177, 239, 268, 304, 303, 185, 329, 335, 336, 340,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 334, 213, 170,
	171, 317, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 333, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 0, 224, 265, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 315, 327, 344, 347, 0, 0, 0, 175, 346,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 342, 249, 250,
	251, 252, 216, 0, 192, 345, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 212, 218, 0, 220, 191, 264,
	214, 324, 227, 0, 0, 0, 256, 223, 289, 228,
	234, 277, 323, 262, 282, 189, 314, 290, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 232, 0, 273, 211, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 299, 0, 0, 330, 331, 332, 316, 0,
	203, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	291, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 992, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 990, 0, 0, 0, 0, 178, 296, 312, 188,
	287, 325, 193, 294, 183, 260, 283, 0, 0, 180,
	310, 293, 242, 225, 226, 179, 0, 278, 204, 217,
	200, 258, 0, 309, 337, 199, 328, 0, 320, 182,
	0, 319, 257, 306, 311, 243, 237, 181, 308, 241,
	236, 229, 208, 0, 221, 269, 235, 270, 222, 247,
	246, 248, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 230, 0, 0, 0, 338, 0, 281,
	263, 0, 0, 0, 279, 233, 307, 271, 313, 297,
	321, 275, 272, 173, 298, 202, 244, 184, 186, 198,
	205, 207, 209, 210, 253, 254, 266, 286, 300, 301,
	302, 201, 194, 280, 195, 219, 196, 174, 288, 197,
	176, 267, 305, 0, 215, 276, 240, 177, 239, 268,
	304, 303, 185, 329, 335, 336, 340, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 334, 213, 170, 171, 317, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	333, 0, 0, 0, 0, 284, 0, 0, 0, 0,
	0, 224, 265, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 315, 327,
	344, 347, 0, 0, 0, 175, 346, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 342, 249, 250, 251, 252, 216,
	0, 192, 345, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 212, 218, 0, 220, 191, 264, 214, 324, 227,
	0, 0, 0, 256, 223, 289, 228, 234, 277, 323,
	262, 282, 189, 314, 290, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 232, 0,
	273, 211, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 0, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 299,
	0, 0, 330, 331, 332, 316, 0, 203, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 291, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 992, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2189, 0,
	0, 0, 0, 178, 296, 312, 188, 287, 325, 193,
	294, 183, 260, 283, 0, 0, 180, 310, 293, 242,
	225, 226, 179, 0, 278, 204, 217, 200, 258, 0,
	309, 337, 199, 328, 0, 320, 182, 0, 319, 257,
	306, 311, 243, 237, 181, 308, 241, 236, 229, 208,
	0, 221, 269, 235, 270, 222, 247, 246, 248, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	230, 0, 0, 0, 338, 0, 281, 263, 0, 0,
	0, 279, 233, 307, 271, 313, 297, 321, 275, 272,
	173, 298, 202, 244, 184, 186, 198, 205, 207, 209,
	210, 253, 254, 266, 286, 300, 301, 302, 201, 194,
	280, 195, 219, 196, 174, 288, 197, 176, 267, 305,
	0, 215, 276, 240, 177, 239, 268, 304, 303, 185,
	329, 335, 336, 340, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 334, 213, 170, 171, 317, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 333, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 0, 224, 265,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 315, 327, 344, 347, 0,
	0, 0, 175, 346, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 342, 249, 250, 251, 252, 216, 0, 192, 345,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 212, 218,
	0, 220, 191, 264, 214, 324, 227, 0, 0, 0,
	256, 223, 289, 228, 234, 277, 323, 262, 282, 189,
	314, 290, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 232, 0, 273, 211, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 299, 0, 0, 330,
	331, 332, 316, 0, 203, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 1739, 0, 231, 0, 0,
	0, 0, 0, 0, 291, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 992, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 296, 312, 188, 287, 325, 193, 294, 183, 260,
	283, 0, 0, 180, 310, 293, 242, 225, 226, 179,
	0, 278, 204, 217, 200, 258, 0, 309, 337, 199,
	328, 0, 320, 182, 0, 319, 257, 306, 311, 243,
	237, 181, 308, 241, 236, 229, 208, 0, 221, 269,
	235, 270, 222, 247, 246, 248, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 230, 0, 0,
	0, 338, 0, 281, 263, 0, 0, 0, 279, 233,
	307, 271, 313, 297, 321, 275, 272, 173, 298, 202,
	244, 184, 186, 198, 205, 207, 209, 210, 253, 254,
	266, 286, 300, 301, 302, 201, 194, 280, 195, 219,
	196, 174, 288, 197, 176, 267, 305, 0, 215, 276,
	240, 177, 239, 268, 304, 303, 185, 329, 335, 336,
	340, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 334, 213,
	170, 171, 317, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 333, 0, 0, 0, 0, 284,
	0, 0, 0, 0, 0, 224, 265, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 315, 327, 344, 347, 0, 0, 0, 175,
	346, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 342, 249,
	250, 251, 252, 216, 0, 192, 345, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 212, 218, 0, 220, 191,
	264, 214, 324, 227, 0, 0, 0, 256, 223, 289,
	228, 234, 277, 323, 262, 282, 189, 314, 290, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 232, 0, 273, 211, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 0, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 299, 0, 0, 330, 331, 332, 316,
	0, 203, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 291, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2657, 0, 130, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 296, 312,
	188, 287, 325, 193, 294, 183, 260, 283, 0, 0,
	180, 310, 293, 242, 225, 226, 179, 0, 278, 204,
	217, 200, 258, 0, 309, 337, 199, 328, 0, 320,
	182, 0, 319, 257, 306, 311, 243, 237, 181, 308,
	241, 236, 229, 208, 0, 221, 269, 235, 270, 222,
	247, 246, 248, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 230, 0, 0, 0, 338, 0,
	281, 263, 0, 0, 0, 279, 233, 307, 271, 313,
	297, 321, 275, 272, 173, 298, 202, 244, 184, 186,
	198, 205, 207, 209, 210, 253, 254, 266, 286, 300,
	301, 302, 201, 194, 280, 195, 219, 196, 174, 288,
	197, 176, 267, 305, 0, 215, 276, 240, 177, 239,
	268, 304, 303, 185, 329, 335, 336, 340, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 334, 213, 170, 171, 317,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 333, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 0, 224, 265, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 315,
	327, 344, 347, 0, 0, 0, 175, 346, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 342, 249, 250, 251, 252,
	216, 0, 192, 345, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 212, 218, 0, 220, 191, 264, 214, 324,
	227, 0, 0, 0, 256, 223, 289, 228, 234, 277,
	323, 262, 282, 189, 314, 290, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 232,
	0, 273, 211, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 0, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	299, 0, 0, 330, 331, 332, 316, 0, 203, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 291, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	500, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 296, 312, 188, 287, 325,
	193, 294, 183, 260, 283, 0, 0, 180, 310, 293,
	242, 225, 226, 179, 0, 278, 204, 217, 200, 258,
	0, 309, 337, 199, 328, 0, 320, 182, 0, 319,
	257, 306, 311, 243, 237, 181, 308, 241, 236, 229,
	208, 0, 221, 269, 235, 270, 222, 247, 246, 248,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 230, 0, 0, 0, 338, 0, 281, 263, 0,
	0, 0, 279, 233, 307, 271, 313, 297, 321, 275,
	272, 173, 298, 202, 244, 184, 186, 198, 205, 207,
	209, 210, 253, 254, 266, 286, 300, 301, 302, 201,
	194, 280, 195, 219, 196, 174, 288, 197, 176, 267,
	305, 0, 215, 276, 240, 177, 239, 268, 304, 303,
	185, 329, 335, 336, 340, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 334, 213, 170, 171, 317, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 333, 0,
	0, 0, 0, 284, 0, 0, 0, 0, 0, 224,
	265, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 315, 327, 344, 347,
	0, 0, 0, 175, 346, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 342, 249, 250, 251, 252, 216, 0, 192,
	345, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 212,
	218, 0, 220, 191, 264, 214, 324, 227, 0, 0,
	0, 256, 223, 289, 228, 234, 277, 323, 262, 282,
	189, 314, 290, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 232, 0, 273, 211,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 0, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 299, 0, 0,
	330, 331, 332, 316, 0, 203, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 291, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2566, 0, 0, 130, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 296, 312, 188, 287, 325, 193, 294, 183,
	260, 283, 0, 0, 180, 310, 293, 242, 225, 226,
	179, 0, 278, 204, 217, 200, 258, 0, 309, 337,
	199, 328, 0, 320, 182, 0, 319, 257, 306, 311,
	243, 237, 181, 308, 241, 236, 229, 208, 0, 221,
	269, 235, 270, 222, 247, 246, 248, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 230, 0,
	0, 0, 338, 0, 281, 263, 0, 0, 0, 279,
	233, 307, 271, 313, 297, 321, 275, 272, 173, 298,
	202, 244, 184, 186, 198, 205, 207, 209, 210, 253,
	254, 266, 286, 300, 301, 302, 201, 194, 280, 195,
	219, 196, 174, 288, 197, 176, 267, 305, 0, 215,
	276, 240, 177, 239, 268, 304, 303, 185, 329, 335,
	336, 340, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 334,
	213, 170, 171, 317, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 333, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 0, 224, 265, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 315, 327, 344, 347, 0, 0, 0,
	175, 346, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 342,
	249, 250, 251, 252, 216, 0, 192, 345, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 212, 218, 0, 220,
	191, 264, 214, 324, 227, 0, 0, 0, 256, 223,
	289, 228, 234, 277, 323, 262, 282, 189, 314, 290,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 232, 0, 273, 211, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 0,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 299, 0, 0, 330, 331, 332,
	316, 0, 203, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 291, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2302, 0, 0, 130, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 296,
	312, 188, 287, 325, 193, 294, 183, 260, 283, 0,
	0, 180, 310, 293, 242, 225, 226, 179, 0, 278,
	204, 217, 200, 258, 0, 309, 337, 199, 328, 0,
	320, 182, 0, 319, 257, 306, 311, 243, 237, 181,
	308, 241, 236, 229, 208, 0, 221, 269, 235, 270,
	222, 247, 246, 248, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 230, 0, 0, 0, 338,
	0, 281, 263, 0, 0, 0, 279, 233, 307, 271,
	313, 297, 321, 275, 272, 173, 298, 202, 244, 184,
	186, 198, 205, 207, 209, 210, 253, 254, 266, 286,
	300, 301, 302, 201, 194, 280, 195, 219, 196, 174,
	288, 197, 176, 267, 305, 0, 215, 276, 240, 177,
	239, 268, 304, 303, 185, 329, 335, 336, 340, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 334, 213, 170, 171,
	317, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 333, 0, 0, 0, 0, 284, 0, 0,
	0, 0, 0, 224, 265, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	315, 327, 344, 347, 0, 0, 0, 175, 346, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 342, 249, 250, 251,
	252, 216, 0, 192, 345, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 212, 218, 0, 220, 191, 264, 214,
	324, 227, 0, 0, 0, 256, 223, 289, 228, 234,
	277, 323, 262, 282, 189, 314, 290, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	232, 0, 273, 211, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 0, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 299, 0, 0, 330, 331, 332, 316, 0, 203,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 291,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 296, 312, 188, 287,
	325, 193, 294, 183, 260, 283, 0, 0, 180, 310,
	293, 242, 225, 226, 179, 0, 278, 204, 217, 200,
	258, 0, 309, 337, 199, 328, 0, 320, 182, 0,
	319, 257, 306, 311, 243, 237, 181, 308, 241, 236,
	229, 208, 0, 221, 269, 235, 270, 222, 247, 246,
	248, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 2494, 0, 0, 295,
	0, 0, 230, 0, 0, 0, 338, 0, 281, 263,
	0, 0, 0, 279, 233, 307, 271, 313, 297, 321,
	275, 272, 173, 298, 202, 244, 184, 186, 198, 205,
	207, 209, 210, 253, 254, 266, 286, 300, 301, 302,
	201, 194, 280, 195, 219, 196, 174, 288, 197, 176,
	267, 305, 0, 215, 276, 240, 177, 239, 268, 304,
	303, 185, 329, 335, 336, 340, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 334, 213, 170, 171, 317, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 333,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 0,
	224, 265, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 315, 327, 344,
	347, 0, 0, 0, 175, 346, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 342, 249, 250, 251, 252, 216, 0,
	192, 345, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	212, 218, 0, 220, 191, 264, 214, 324, 227, 0,
	0, 0, 256, 223, 289, 228, 234, 277, 323, 262,
	282, 189, 314, 290, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 232, 0, 273,
	211, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 0, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 299, 0,
	0, 330, 331, 332, 316, 0, 203, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 291, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 296, 312, 188, 287, 325, 193, 294,
	183, 260, 283, 0, 0, 180, 310, 293, 242, 225,
	226, 179, 0, 278, 204, 217, 200, 258, 0, 309,
	337, 199, 328, 0, 320, 182, 0, 319, 257, 306,
	311, 243, 237, 181, 308, 241, 236, 229, 208, 0,
	221, 269, 235, 270, 222, 247, 246, 248, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 2313, 0, 0, 295, 0, 0, 230,
	0, 0, 0, 338, 0, 281, 263, 0, 0, 0,
	279, 233, 307, 271, 313, 297, 321, 275, 272, 173,
	298, 202, 244, 184, 186, 198, 205, 207, 209, 210,
	253, 254, 266, 286, 300, 301, 302, 201, 194, 280,
	195, 219, 196, 174, 288, 197, 176, 267, 305, 0,
	215, 276, 240, 177, 239, 268, 304, 303, 185, 329,
	335, 336, 340, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	334, 213, 170, 171, 317, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 333, 0, 0, 0,
	0, 284, 0, 0, 0, 0, 0, 224, 265, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 315, 327, 344, 347, 0, 0,
	0, 175, 346, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	342, 249, 250, 251, 252, 216, 0, 192, 345, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 212, 218, 0,
	220, 191, 264, 214, 324, 227, 0, 0, 0, 256,
	223, 289, 228, 234, 277, 323, 262, 282, 189, 314,
	290, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 232, 0, 273, 211, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	0, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 299, 0, 0, 330, 331,
	332, 316, 0, 203, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 291, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	296, 312, 188, 287, 325, 193, 294, 183, 260, 283,
	0, 0, 180, 310, 293, 242, 225, 226, 179, 0,
	278, 204, 217, 200, 258, 0, 309, 337, 199, 328,
	0, 320, 182, 0, 319, 257, 306, 311, 243, 237,
	181, 308, 241, 236, 229, 208, 0, 221, 269, 235,
	270, 222, 247, 246, 248, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 230, 0, 0, 0,
	338, 0, 281, 263, 0, 0, 0, 279, 233, 307,
	271, 313, 297, 321, 275, 272, 173, 298, 202, 244,
	184, 186, 198, 205, 207, 209, 210, 253, 254, 266,
	286, 300, 301, 302, 201, 194, 280, 195, 219, 196,
	174, 288, 197, 176, 267, 305, 0, 215, 276, 240,
	177, 239, 268, 304, 303, 185, 329, 335, 336, 340,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 334, 213, 170,
	171, 317, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 333, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 0, 224, 265, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 315, 327, 344, 347, 0, 0, 0, 175, 346,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 342, 249, 250,
	251, 252, 216, 0, 192, 345, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 212, 218, 0, 220, 191, 264,
	214, 324, 227, 0, 0, 0, 256, 223, 289, 228,
	234, 277, 323, 262, 282, 189, 314, 290, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 232, 0, 273, 211, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 299, 0, 0, 330, 331, 332, 316, 0,
	203, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	291, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 0,
	0, 130, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 296, 312, 188,
	287, 325, 193, 294, 183, 260, 283, 0, 0, 180,
	310, 293, 242, 225, 226, 179, 0, 278, 204, 217,
	200, 258, 0, 309, 337, 199, 328, 0, 320, 182,
	0, 319, 257, 306, 311, 243, 237, 181, 308, 241,
	236, 229, 208, 0, 221, 269, 235, 270, 222, 247,
	246, 248, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 230, 0, 0, 0, 338, 0, 281,
	263, 0, 0, 0, 279, 233, 307, 271, 313, 297,
	321, 275, 272, 173, 298, 202, 244, 184, 186, 198,
	205, 207, 209, 210, 253, 254, 266, 286, 300, 301,
	302, 201, 194, 280, 195, 219, 196, 174, 288, 197,
	176, 267, 305, 0, 215, 276, 240, 177, 239, 268,
	304, 303, 185, 329, 335, 336, 340, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 334, 213, 170, 171, 317, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	333, 0, 0, 0, 0, 284, 0, 0, 0, 0,
	0, 224, 265, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 315, 327,
	344, 347, 0, 0, 0, 175, 346, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 342, 249, 250, 251, 252, 216,
	0, 192, 345, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 212, 218, 0, 220, 191, 264, 214, 324, 227,
	0, 0, 0, 256, 223, 289, 228, 234, 277, 323,
	262, 282, 189, 314, 290, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 232, 0,
	273, 211, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 0, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 299,
	0, 0, 330, 331, 332, 316, 0, 203, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 291, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 296, 312, 188, 287, 325, 193,
	294, 183, 260, 283, 0, 0, 180, 310, 293, 242,
	225, 226, 179, 0, 278, 204, 217, 200, 258, 0,
	309, 337, 199, 328, 0, 320, 182, 0, 319, 257,
	306, 311, 243, 237, 181, 308, 241, 236, 229, 208,
	0, 221, 269, 235, 270, 222, 247, 246, 248, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	230, 0, 0, 0, 338, 0, 281, 263, 0, 0,
	0, 279, 233, 307, 271, 313, 297, 321, 275, 272,
	173, 298, 202, 244, 184, 186, 198, 205, 207, 209,
	210, 253, 254, 266, 286, 300, 301, 302, 201, 194,
	280, 195, 219, 196, 174, 288, 197, 176, 267, 305,
	0, 215, 276, 240, 177, 239, 268, 304, 303, 185,
	329, 335, 336, 340, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 334, 213, 170, 171, 317, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 333, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 0, 224, 265,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 315, 327, 344, 347, 0,
	0, 0, 175, 346, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 342, 249, 250, 251, 252, 216, 0, 192, 345,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 212, 218,
	0, 220, 191, 264, 214, 324, 227, 0, 0, 0,
	256, 223, 289, 228, 234, 277, 323, 262, 282, 189,
	314, 290, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 232, 0, 273, 211, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 299, 0, 0, 330,
	331, 332, 316, 0, 203, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 291, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 2063, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 296, 312, 188, 287, 325, 193, 294, 183, 260,
	283, 0, 0, 180, 310, 293, 242, 225, 226, 179,
	0, 278, 204, 217, 200, 258, 0, 309, 337, 199,
	328, 0, 320, 182, 0, 319, 257, 306, 311, 243,
	237, 181, 308, 241, 236, 229, 208, 0, 221, 269,
	235, 270, 222, 247, 246, 248, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 230, 0, 0,
	0, 338, 0, 281, 263, 0, 0, 0, 279, 233,
	307, 271, 313, 297, 321, 275, 272, 173, 298, 202,
	244, 184, 186, 198, 205, 207, 209, 210, 253, 254,
	266, 286, 300, 301, 302, 201, 194, 280, 195, 219,
	196, 174, 288, 197, 176, 267, 305, 0, 215, 276,
	240, 177, 239, 268, 304, 303, 185, 329, 335, 336,
	340, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 334, 213,
	170, 171, 317, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 333, 0, 0, 0, 0, 284,
	0, 0, 0, 0, 0, 224, 265, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 315, 327, 344, 347, 0, 0, 0, 175,
	346, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 342, 249,
	250, 251, 252, 216, 0, 192, 345, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 212, 218, 0, 220, 191,
	264, 214, 324, 227, 0, 0, 0, 256, 223, 289,
	228, 234, 277, 323, 262, 282, 189, 314, 290, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 232, 0, 273, 211, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 0, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 299, 0, 0, 330, 331, 332, 316,
	0, 203, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 291, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 0, 0, 992, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 296, 312,
	188, 287, 325, 193, 294, 183, 260, 283, 0, 0,
	180, 310, 293, 242, 225, 226, 179, 0, 278, 204,
	217, 200, 258, 0, 309, 337, 199, 328, 0, 320,
	182, 0, 319, 257, 306, 311, 243, 237, 181, 308,
	241, 236, 229, 208, 0, 221, 269, 235, 270, 222,
	247, 246, 248, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 230, 0, 0, 0, 338, 0,
	281, 263, 0, 0, 0, 279, 233, 307, 271, 313,
	297, 321, 275, 272, 173, 298, 202, 244, 184, 186,
	198, 205, 207, 209, 210, 253, 254, 266, 286, 300,
	301, 302, 201, 194, 280, 195, 219, 196, 174, 288,
	197, 176, 267, 305, 0, 215, 276, 240, 177, 239,
	268, 304, 303, 185, 329, 335, 336, 340, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 334, 213, 170, 171, 317,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 333, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 0, 224, 265, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 315,
	327, 344, 347, 0, 0, 0, 175, 346, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 342, 249, 250, 251, 252,
	216, 0, 192, 345, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 212, 218, 0, 220, 191, 264, 214, 324,
	227, 0, 0, 0, 256, 223, 289, 228, 234, 277,
	323, 262, 282, 189, 314, 290, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 232,
	0, 273, 211, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 0, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	299, 0, 0, 330, 331, 332, 316, 0, 203, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 291, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 296, 312, 188, 287, 325,
	193, 294, 183, 260, 283, 0, 0, 180, 310, 293,
	242, 225, 226, 179, 0, 278, 204, 217, 200, 258,
	0, 309, 337, 199, 328, 0, 320, 182, 0, 319,
	257, 306, 311, 243, 237, 181, 308, 241, 236, 229,
	208, 0, 221, 269, 235, 270, 222, 247, 246, 248,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 230, 0, 0, 0, 338, 0, 281, 263, 0,
	0, 0, 279, 233, 307, 271, 313, 297, 321, 275,
	272, 173, 298, 202, 244, 184, 186, 198, 205, 207,
	209, 210, 253, 254, 266, 286, 300, 301, 302, 201,
	194, 280, 195, 219, 196, 174, 288, 197, 176, 267,
	305, 0, 215, 276, 240, 177, 239, 268, 304, 303,
	185, 329, 335, 336, 340, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 334, 213, 170, 171, 317, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 333, 0,
	0, 0, 0, 284, 0, 0, 0, 0, 0, 224,
	265, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 315, 327, 344, 347,
	0, 0, 0, 175, 346, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 342, 249, 250, 251, 252, 216, 0, 192,
	345, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 212,
	218, 0, 220, 191, 264, 214, 324, 227, 0, 0,
	0, 256, 223, 289, 228, 234, 277, 323, 262, 282,
	189, 314, 290, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 232, 0, 273, 211,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 0, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 299, 0, 0,
	330, 331, 332, 316, 0, 203, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 291, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 0, 1747,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 296, 312, 188, 287, 325, 193, 294, 183,
	260, 283, 0, 0, 180, 310, 293, 242, 225, 226,
	179, 0, 278, 204, 217, 200, 258, 0, 309, 337,
	199, 328, 0, 320, 182, 0, 319, 257, 306, 311,
	243, 237, 181, 308, 241, 236, 229, 208, 0, 221,
	269, 235, 270, 222, 247, 246, 248, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 230, 0,
	0, 0, 338, 0, 281, 263, 0, 0, 0, 279,
	233, 307, 271, 313, 297, 321, 275, 272, 173, 298,
	202, 244, 184, 186, 198, 205, 207, 209, 210, 253,
	254, 266, 286, 300, 301, 302, 201, 194, 280, 195,
	219, 196, 174, 288, 197, 176, 267, 305, 0, 215,
	276, 240, 177, 239, 268, 304, 303, 185, 329, 335,
	336, 340, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 334,
	213, 170, 171, 317, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 333, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 0, 224, 265, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 315, 327, 344, 347, 0, 0, 0,
	175, 346, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 342,
	249, 250, 251, 252, 216, 0, 192, 345, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 212, 218, 0, 220,
	191, 264, 214, 324, 227, 0, 0, 0, 256, 223,
	289, 228, 234, 277, 323, 262, 282, 189, 314, 290,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 232, 0, 273, 211, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 0,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 0, 0, 0, 330, 331, 332,
	316, 299, 203, 0, 0, 1674, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 291,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 296, 312, 188, 287,
	325, 193, 294, 183, 260, 283, 0, 0, 180, 310,
	293, 242, 225, 226, 179, 0, 278, 204, 217, 200,
	258, 0, 309, 337, 199, 328, 0, 320, 182, 0,
	319, 257, 306, 311, 243, 237, 181, 308, 241, 236,
	229, 208, 0, 221, 269, 235, 270, 222, 247, 246,
	248, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 230, 0, 0, 0, 338, 0, 281, 263,
	0, 0, 0, 279, 233, 307, 271, 313, 297, 321,
	275, 272, 173, 298, 202, 244, 184, 186, 198, 205,
	207, 209, 210, 253, 254, 266, 286, 300, 301, 302,
	201, 194, 280, 195, 219, 196, 174, 288, 197, 176,
	267, 305, 0, 215, 276, 240, 177, 239, 268, 304,
	303, 185, 329, 335, 336, 340, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 334, 213, 170, 171, 317, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 333,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 0,
	224, 265, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 315, 327, 344,
	347, 0, 0, 0, 175, 346, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 342, 249, 250, 251, 252, 216, 0,
	192, 345, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	212, 218, 0, 220, 191, 264, 214, 324, 227, 0,
	0, 0, 256, 223, 289, 228, 234, 277, 323, 262,
	282, 189, 314, 290, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 232, 0, 273,
	211, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 0, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 299, 0,
	0, 330, 331, 332, 316, 0, 203, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 291, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 296, 312, 188, 287, 325, 193, 294,
	183, 260, 283, 0, 0, 180, 310, 293, 242, 225,
	226, 179, 0, 278, 204, 217, 200, 258, 0, 309,
	337, 199, 328, 0, 320, 182, 0, 319, 257, 306,
	311, 243, 237, 181, 308, 241, 236, 229, 208, 0,
	221, 269, 235, 270, 222, 247, 246, 248, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 230,
	0, 0, 0, 338, 0, 281, 263, 0, 0, 0,
	279, 233, 307, 271, 313, 297, 321, 275, 272, 173,
	298, 202, 244, 184, 186, 198, 205, 207, 209, 210,
	253, 254, 266, 286, 300, 301, 302, 201, 194, 280,
	195, 219, 196, 174, 288, 197, 176, 267, 305, 0,
	215, 276, 240, 177, 239, 268, 304, 303, 185, 329,
	335, 336, 340, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	334, 213, 170, 171, 317, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 333, 0, 0, 0,
	0, 284, 0, 0, 0, 0, 0, 224, 265, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 315, 327, 344, 347, 0, 0,
	0, 175, 346, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	342, 249, 250, 251, 252, 216, 0, 192, 345, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 212, 218, 0,
	220, 191, 264, 214, 324, 227, 0, 0, 0, 256,
	223, 289, 228, 234, 277, 323, 262, 282, 189, 314,
	290, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 172, 0, 232, 0, 273, 211, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	0, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 299, 0, 0, 330, 331,
	332, 316, 0, 203, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 291, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	296, 312, 188, 287, 325, 193, 294, 183, 260, 283,
	0, 0, 180, 310, 293, 242, 225, 226, 179, 0,
	278, 204, 217, 200, 258, 0, 309, 337, 199, 328,
	0, 320, 182, 0, 319, 257, 306, 311, 243, 237,
	181, 308, 241, 236, 229, 208, 0, 221, 269, 235,
	270, 222, 247, 246, 248, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 230, 0, 0, 0,
	338, 0, 281, 263, 0, 0, 0, 279, 233, 307,
	271, 313, 297, 321, 377, 272, 173, 298, 202, 244,
	184, 186, 198, 205, 207, 209, 210, 253, 254, 266,
	286, 300, 301, 302, 201, 194, 280, 195, 219, 196,
	174, 288, 197, 176, 267, 305, 0, 215, 276, 240,
	177, 239, 268, 304, 303, 185, 329, 335, 336, 340,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 334, 213, 170,
	171, 317, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 333, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 0, 224, 265, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 315, 327, 344, 347, 0, 0, 0, 175, 346,
	0, 0, 0, 0, 0, 0, 378, 318, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 342, 249, 250,
	251, 252, 216, 0, 192, 345, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 212, 218, 0, 220, 191, 264,
	214, 324, 227, 0, 0, 0, 256, 223, 289, 228,
	234, 277, 323, 262, 282, 189, 314, 290, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 232, 0, 273, 211, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 299, 0, 0, 330, 331, 332, 316, 0,
	203, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	291, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 296, 312, 188,
	287, 325, 193, 294, 183, 260, 283, 0, 0, 180,
	310, 293, 242, 225, 226, 179, 0, 278, 204, 217,
	200, 258, 0, 309, 337, 199, 328, 0, 320, 182,
	0, 319, 257, 306, 311, 243, 237, 181, 308, 241,
	236, 229, 208, 0, 221, 269, 235, 270, 222, 247,
	246, 248, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 322, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 230, 0, 0, 0, 338, 0, 281,
	263, 0, 0, 0, 279, 233, 307, 271, 313, 297,
	321, 275, 272, 173, 298, 202, 244, 184, 186, 198,
	205, 207, 209, 210, 253, 254, 266, 286, 300, 301,
	302, 201, 194, 280, 195, 219, 196, 174, 288, 197,
	176, 267, 305, 0, 215, 276, 240, 177, 239, 268,
	304, 303, 185, 329, 335, 336, 340, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 334, 213, 170, 171, 317, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	333, 0, 0, 0, 0, 284, 0, 0, 0, 0,
	0, 224, 265, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 315, 327,
	344, 347, 0, 0, 0, 175, 346, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 342, 249, 250, 251, 252, 216,
	0, 192, 345, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 212, 218, 0, 220, 191, 264, 214, 324, 227,
	0, 0, 0, 256, 223, 289, 228, 234, 277, 323,
	262, 282, 189, 314, 290, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 232, 0,
	273, 211, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 0, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 299,
	0, 0, 330, 331, 332, 316, 0, 203, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 206, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 291, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 296, 312, 188, 287, 325, 193,
	294, 183, 260, 283, 0, 0, 180, 310, 293, 242,
	225, 226, 179, 0, 278, 204, 217, 200, 258, 0,
	309, 337, 199, 328, 0, 320, 182, 0, 319, 257,
	306, 311, 243, 237, 181, 308, 241, 236, 229, 208,
	0, 221, 269, 235, 270, 222, 247, 246, 248, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	230, 0, 0, 0, 338, 0, 281, 263, 0, 0,
	0, 279, 233, 307, 271, 313, 297, 321, 275, 272,
	173, 298, 202, 244, 184, 186, 198, 205, 207, 209,
	210, 253, 254, 266, 286, 300, 301, 302, 201, 194,
	280, 195, 219, 196, 174, 288, 197, 176, 267, 305,
	0, 215, 276, 240, 177, 239, 268, 304, 303, 185,
	329, 335, 336, 340, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 334, 213, 170, 171, 317, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 333, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 0, 224, 265,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 315, 327, 344, 347, 0,
	0, 0, 175, 346, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 342, 249, 250, 251, 252, 216, 0, 192, 345,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 212, 218,
	0, 220, 191, 264, 214, 324, 227, 0, 0, 0,
	256, 223, 289, 228, 234, 277, 323, 262, 282, 189,
	314, 290, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 232, 0, 273, 211, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 299, 0, 0, 330,
	331, 332, 316, 0, 203, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 291, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 296, 312, 188, 287, 325, 193, 294, 183, 260,
	283, 0, 0, 180, 310, 293, 242, 225, 226, 179,
	0, 278, 204, 217, 200, 258, 0, 309, 337, 199,
	328, 0, 320, 182, 0, 319, 257, 306, 311, 243,
	237, 181, 308, 241, 236, 229, 208, 0, 221, 269,
	235, 270, 222, 247, 246, 248, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 230, 0, 0,
	0, 338, 0, 281, 263, 0, 0, 0, 279, 233,
	307, 271, 313, 297, 321, 275, 272, 173, 298, 202,
	244, 184, 186, 198, 205, 207, 209, 210, 253, 254,
	266, 286, 300, 301, 302, 201, 194, 280, 195, 219,
	196, 174, 288, 197, 176, 267, 305, 0, 215, 276,
	240, 177, 239, 268, 304, 303, 185, 329, 335, 336,
	340, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 334, 213,
	170, 171, 317, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 333, 0, 0, 0, 0, 284,
	0, 0, 0, 0, 0, 224, 265, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 315, 327, 344, 347, 0, 0, 0, 175,
	346, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 342, 249,
	250, 251, 252, 216, 0, 192, 345, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 212, 218, 0, 220, 191,
	264, 214, 324, 227, 0, 0, 0, 256, 223, 289,
	228, 234, 277, 323, 262, 282, 189, 314, 290, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 232, 0, 273, 211, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 0, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 299, 0, 0, 330, 331, 332, 316,
	0, 203, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 0, 0,
	0, 206, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 291, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 678, 679, 680, 1720, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 296, 312,
	188, 287, 325, 193, 294, 183, 260, 283, 0, 0,
	180, 310, 293, 242, 225, 226, 179, 0, 278, 204,
	217, 200, 258, 0, 309, 337, 199, 328, 0, 320,
	182, 0, 319, 257, 306, 311, 243, 237, 181, 308,
	241, 236, 229, 208, 0, 221, 269, 235, 270, 222,
	247, 246, 248, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 230, 0, 0, 0, 338, 0,
	281, 263, 0, 0, 0, 279, 233, 307, 271, 313,
	297, 321, 275, 272, 173, 298, 202, 244, 184, 186,
	198, 205, 207, 209, 210, 253, 254, 266, 286, 300,
	301, 302, 201, 194, 280, 195, 219, 196, 174, 288,
	197, 176, 267, 305, 0, 215, 276, 240, 177, 239,
	268, 304, 303, 185, 329, 335, 336, 340, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 334, 213, 170, 171, 317,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 333, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 0, 224, 265, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 315,
	327, 344, 347, 0, 0, 0, 175, 346, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 342, 249, 250, 251, 252,
	216, 0, 192, 345, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 339, 212, 218, 0, 220, 191, 264, 214, 324,
	227, 261, 0, 0, 256, 223, 289, 228, 234, 277,
	323, 262, 282, 189, 314, 290, 238, 0, 206, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 291, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 678,
	679, 680, 1720, 0, 0, 0, 187, 172, 0, 232,
	0, 273, 211, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 316, 0, 203, 0,
	0, 0, 0, 0, 178, 296, 312, 188, 287, 325,
	193, 294, 183, 260, 283, 0, 0, 180, 310, 293,
	242, 225, 226, 179, 0, 278, 204, 217, 200, 258,
	0, 309, 337, 199, 328, 0, 320, 182, 0, 319,
	257, 306, 311, 243, 237, 181, 308, 241, 236, 229,
	208, 0, 221, 269, 235, 270, 222, 247, 246, 248,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 230, 0, 0, 0, 338, 0, 281, 263, 0,
	0, 0, 279, 233, 307, 271, 313, 297, 321, 275,
	272, 173, 298, 202, 244, 184, 186, 198, 205, 207,
	209, 210, 253, 254, 266, 286, 300, 301, 302, 201,
	194, 280, 195, 219, 196, 174, 288, 197, 176, 267,
	305, 0, 215, 276, 240, 177, 239, 268, 304, 303,
	185, 329, 335, 336, 340, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 334, 213, 170, 171, 317, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 333, 0,
	0, 0, 0, 284, 0, 0, 0, 0, 0, 224,
	265, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 315, 327, 344, 347,
	0, 0, 0, 175, 346, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 342, 249, 250, 251, 252, 216, 0, 192,
	345, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 339, 212,
	218, 0, 220, 191, 264, 214, 324, 227, 261, 0,
	0, 256, 223, 289, 228, 234, 277, 323, 262, 282,
	189, 314, 290, 238, 0, 206, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 291, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 678, 679, 680, 0,
	0, 0, 0, 187, 172, 0, 232, 0, 273, 211,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 316, 0, 203, 0, 0, 0, 0,
	0, 178, 296, 312, 188, 287, 325, 193, 294, 183,
	260, 283, 0, 0, 180, 310, 293, 242, 225, 226,
	179, 0, 278, 204, 217, 200, 258, 0, 309, 337,
	199, 328, 0, 320, 182, 0, 319, 257, 306, 311,
	243, 237, 181, 308, 241, 236, 229, 208, 0, 221,
	269, 235, 270, 222, 247, 246, 248, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 230, 0,
	0, 0, 338, 0, 281, 263, 0, 0, 0, 279,
	233, 307, 271, 313, 297, 321, 275, 272, 173, 298,
	202, 244, 184, 186, 198, 205, 207, 209, 210, 253,
	254, 266, 286, 300, 301, 302, 201, 194, 280, 195,
	219, 196, 174, 288, 197, 176, 267, 305, 0, 215,
	276, 240, 177, 239, 268, 304, 303, 185, 329, 335,
	336, 340, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 334,
	213, 170, 171, 317, 123, 259, 37, 113, 94, 0,
	0, 0, 0, 0, 255, 333, 0, 0, 0, 0,
	284, 0, 0, 0, 118, 0, 224, 265, 0, 285,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 292, 315, 327, 344, 347, 0, 0, 0,
	175, 346, 0, 0, 0, 71, 0, 0, 0, 318,
	0, 120, 0, 326, 0, 0, 0, 0, 0, 342,
	249, 250, 251, 252, 216, 0, 192, 345, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 2258, 0, 0,
	0, 0, 0, 0, 0, 339, 212, 218, 0, 220,
	191, 264, 214, 324, 227, 0, 0, 0, 256, 223,
	289, 228, 234, 277, 323, 262, 282, 189, 314, 290,
	238, 1671, 0, 0, 0, 864, 0, 0, 0, 114,
	115, 0, 116, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2677, 0,
	0, 0, 2258, 0, 0, 0, 0, 0, 2240, 0,
	0, 172, 0, 232, 0, 273, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 112, 121,
	0, 69, 0, 0, 0, 0, 0, 330, 331, 332,
	316, 0, 203, 0, 0, 0, 0, 111, 105, 104,
	0, 0, 0, 2240, 43, 852, 0, 0, 0, 0,
	2258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 876, 878, 880, 882, 883, 885,
	0, 889, 886, 887, 888, 0, 0, 867, 868, 869,
	870, 850, 851, 873, 1671, 853, 0, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 865, 871, 0,
	2338, 0, 107, 108, 109, 0, 875, 877, 879, 881,
	884, 0, 2244, 0, 0, 0, 0, 0, 0, 0,
	0, 2240, 0, 2248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 866, 110, 2237, 80, 0, 0, 2239, 2241, 2243,
	0, 2245, 2246, 2247, 2249, 2250, 2251, 2253, 2254, 2255,
	2256, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 396, 403, 393, 0, 0, 0, 2244, 0, 0,
	0, 0, 0, 400, 401, 0, 402, 406, 2248, 0,
	388, 0, 2259, 0, 0, 0, 0, 81, 0, 0,
	411, 0, 0, 0, 0, 0, 82, 36, 2237, 0,
	0, 0, 2239, 2241, 2243, 0, 2245, 2246, 2247, 2249,
	2250, 2251, 2253, 2254, 2255, 2256, 0, 0, 2257, 415,
	0, 0, 416, 397, 0, 396, 403, 393, 0, 0,
	0, 0, 0, 0, 0, 2236, 0, 400, 401, 38,
	402, 406, 0, 0, 388, 2244, 0, 2259, 0, 0,
	0, 1805, 1806, 0, 411, 0, 2248, 0, 0, 0,
	0, 0, 0, 0, 2252, 0, 0, 0, 0, 0,
	0, 2242, 95, 0, 0, 0, 2237, 0, 0, 0,
	2239, 2241, 2243, 2257, 2245, 2246, 2247, 2249, 2250, 2251,
	2253, 2254, 2255, 2256, 0, 0, 0, 0, 0, 0,
	2236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 396, 403, 393, 0, 0,
	83, 84, 88, 0, 0, 2259, 0, 400, 401, 2252,
	402, 406, 0, 0, 388, 0, 2242, 0, 0, 0,
	0, 0, 0, 0, 411, 2266, 0, 0, 0, 0,
	0, 0, 389, 391, 390, 0, 0, 0, 0, 0,
	395, 2257, 0, 0, 0, 0, 0, 0, 0, 2276,
	0, 874, 399, 415, 0, 0, 416, 0, 2236, 414,
	0, 0, 2269, 0, 0, 0, 392, 0, 2264, 0,
	383, 0, 0, 2279, 2280, 0, 0, 0, 0, 2265,
	0, 0, 0, 0, 0, 0, 0, 2252, 0, 0,
	0, 0, 0, 0, 2242, 0, 389, 391, 390, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2270, 0, 399, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 398, 404,
	0, 405, 407, 0, 0, 408, 409, 410, 0, 0,
	412, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 391, 390, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 2278, 0, 2051, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	392, 394, 398, 404, 0, 405, 407, 0, 2272, 408,
	409, 410, 0, 0, 412, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2271, 2273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 398, 404, 0, 405, 407, 2281, 0, 408,
	409, 410, 0, 0, 412, 413, 0, 0, 0, 2267,
	0, 0, 0, 0, 0, 2277,
}

var yyPact = [...]int{
	27304, -1000, -303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -165, 25238, 25238, -1000,
	-1000, 1663, -1000, 24741, 9821, 25735, 162, 160, 25735, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 381,
	-1000, 24244, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 351,
	27649, 261, 253, 7823, 25735, -286, -1000, 2196, -153, -1000,
	-1000, -1000, -1000, 174, 437, 23747, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 206, 122, 437, 500, 496, 678, 678, 11312, 2196,
	233, 80, -1000, 784, 27304, 27006, 330, 25735, -1000, 942,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 330,
	-1000, -1000, -1000, 2196, 2196, -1000, 25735, 25735, -21, 1070,
	-1000, 221, 255, 231, 941, -1000, -1000, -1000, -1000, -1000,
	2159, -1000, 25735, 25735, 1859, 25735, -1000, 1306, 294, 27803,
	2013, 862, 445, 1869, -1000, -1000, 1837, -1000, 82, 95,
	121, 172, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 92,
	-1000, 2067, -1000, -1000, 84, -1000, -1000, 106, -1000, -1000,
	-1000, -80, -1000, -1000, -1000, -1000, -1000, -160, -160, 525,
	1099, 7823, -1000, 1279, -1000, 1470, -1000, -1000, -1000, -1000,
	5329, 9314, 9314, 9314, 9314, -1000, -1000, 1716, 7823, 1829,
	1828, -1000, -1000, -1000, -1000, 938, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1423, 8817,
	-1000, 1827, 1824, 1818, 1813, 1810, 1808, 1806, 1805, 1803,
	1802, 1801, 1617, 1792, 1421, 1419, 1782, 1780, 1779, 9314,
	1417, 1617, 1617, 1777, 1776, 1772, 1768, 1767, 1761, 1760,
	1759, 1754, 1747, 1746, 1741, 1739, 1737, 1734, 1733, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2557, -1000, 916, 791, -1000, 1730, 1990, 2088,
	1662, 2137, 2072, 2070, 2064, 2059, 1272, -1000, -1000, 39,
	341, 341, 341, 358, 341, 376, 375, -1000, -1000, -1000,
	-1000, -1000, -1000, 451, -1000, -1000, -1000, -1000, 692, 25735,
	-1000, 1677, 1022, 2085, 315, 300, 211, -1000, 1022, 235,
	313, 2088, 2088, -78, -99, 1022, 1022, -99, 60, -1000,
	-1000, -1000, 1111, 298, 1111, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2051, 2049, -209, 351, 351, 354, -1000, -167,
	-1000, -1000, 584, -1000, 460, -1000, 1306, 290, 288, 724,
	1112, -1000, 1028, 25735, 25735, 25735, 1028, 1028, 14297, 13800,
	-1000, 2088, 1662, -1000, 1593, 1549, 1662, 351, 351, 351,
	351, 351, 351, 351, 25735, 6820, 6820, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 270, -1000, -1000, -1000, -1000,
	-1000, 244, 1728, -1000, 25735, 229, 2088, 1990, 2088, -1000,
	-1000, 914, 1270, 1416, -1000, -1000, 221, 1050, -1000, 761,
	-1000, -1000, -1000, -1000, 25735, 216, -1000, -1000, 1383, 1727,
	-1000, 338, 809, 852, -1000, 105, 27713, 21752, 1306, 21752,
	25735, -1000, -1000, -1000, -1000, -1000, -1000, -85, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 67, -1000, 67, 7823, 7823, 7823, 7823, 7823, -1000,
	380, 8320, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9314,
	9314, 9314, 9314, 9314, 9314, 9314, 9314, 9314, 9314, 9314,
	9314, 1710, 1034, 9314, 9314, 9314, 1549, 2007, 703, -1000,
	-1000, -1000, -1000, -1000, 1059, 1099, 7823, 7823, 25735, -1000,
	1084, 7823, 7823, 10958, 7823, 2046, 2046, 3837, 25735, 7823,
	-1000, 1592, 1591, -1000, -1000, 1184, 7823, -1000, -1000, 7823,
	9314, 7823, -1000, -1000, -1000, -1000, 88, 2046, 7823, 7823,
	2046, 2046, 2046, 1061, 2046, 2046, 2046, 2046, 2046, 2046,
	2046, 2046, 25735, 1970, 90, -1000, -1000, -1000, 1656, -1000,
	1687, 1687, 1656, 1656, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1726, 1725, -1000, -1000, 1685, 1685, 1685,
	1656, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1722, 1722, 1724, 1722,
	25735, 2088, -286, 6323, -1000, -290, 1990, 7823, -1000, -1000,
	7823, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1415,
	366, 341, -1000, 25735, 1086, 21752, 1306, 1300, 25735, 341,
	341, 354, -1000, 25735, 692, 2029, 25735, 2145, 9314, 21752,
	1111, 1022, -1000, 2145, 1111, -1000, -1000, -1000, 1022, 1022,
	-1000, -1000, -1000, -1000, 1111, 1111, -1000, -1000, -89, 2145,
	2145, -91, 25735, 25735, 341, 25735, -1000, -1000, -1000, -1000,
	25735, -1000, -1000, 365, 25735, 21752, 20261, -1000, -132, 487,
	470, 475, -1000, -1000, 334, 347, 12805, 297, 21752, 4831,
	-1000, -1000, 1028, 1028, 1028, 4831, 4831, 949, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1990, -1000, -1000, -1000, -1000,
	25735, 21752, 1306, 25735, 25735, 25735, 27006, -1000, 779, -1000,
	-1000, 10815, 908, 779, 1410, 25735, 1868, 1944, -1000, 1721,
	12308, 25735, -1000, -1000, -287, -1000, 11810, 25735, 1990, -1000,
	1990, 2889, -1000, 2084, -1000, 221, 148, -1000, -1000, -1000,
	-1000, -1000, -1000, 907, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 667, -1000, 25735, -1000, -1000, 105, 21752,
	1057, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 114, -1000,
	-1000, 144, -1000, 362, 7, 1029, -1000, -1000, 46, 141,
	401, 46, 1099, -1000, 1124, 1124, 1108, -1000, 383, -1000,
	-1000, -1000, -1000, 1716, -1000, -1000, -1000, 1195, 1242, -1000,
	1074, 1074, 963, 963, 963, 963, 963, 1182, 1182, -1000,
	-1000, -1000, 5329, 1710, 9314, 9314, 9314, 336, 2537, 2124,
	-1000, 7823, 1088, -1000, 7823, 1320, 899, 887, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1588, 525,
	1576, 1600, 2155, 1575, 7823, -1000, -1000, 7823, 1379, 7326,
	-1000, -1000, -1000, 1573, 886, 1571, -1000, -1000, -1000, 1566,
	607, 1561, 1342, 1560, 657, 7823, 1020, 1009, 7823, 7823,
	7823, 7823, 1556, 7823, 7823, 7823, 7823, 7823, 7823, 7823,
	7823, -1000, 7823, 41, -1000, -1000, -1000, -1000, 1266, -1000,
	1264, -1000, -1000, -1000, 1402, 1402, -1000, 1263, -1000, -1000,
	-1000, -1000, 1261, -1000, -1000, 1259, -1000, -1000, -1000, -1000,
	995, -1000, 1099, -1000, 1400, -1000, 786, 655, -1000, 1243,
	-1000, -1000, 341, 25735, 36, -1000, 2005, 808, -1000, 7,
	580, 1850, 1963, 25735, 25735, 23250, -1000, 1709, 977, -1000,
	-1000, 7823, -1000, 1799, 25735, 2145, -1000, 25735, 2145, 2145,
	1022, 27006, 1111, 25735, 1111, -1000, -1000, 1111, -1000, 847,
	-1000, 25735, -1000, -1000, -1000, -1000, 351, 35, 808, 2062,
	988, -1000, -1000, -1000, -1000, 26232, 26232, 13303, 26232, -1000,
	1054, -1000, -1000, 480, 458, 581, -1000, -1000, 360, -1000,
	-1000, 580, -1000, -1000, -1000, 1708, 1065, -1000, -1000, 9314,
	-1000, 4831, 4831, 4831, -1000, -1000, 16285, -1000, -1000, 632,
	580, 1867, 631, -1000, 631, -1000, 2145, 6820, -1000, 20261,
	-1000, -1000, 22746, -1000, 22249, 2145, -294, 642, -1000, 1983,
	-287, 25735, 25735, 974, 138, -1000, 947, -1000, 554, -1000,
	1701, -1000, 945, 1956, 560, -1000, 1062, -1000, -1000, -1000,
	836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -24, -1000, -1000,
	25735, 1383, 939, 1057, 616, -1000, 357, 830, 827, -1000,
	21752, 94, 21752, -1000, 21752, -1000, -1000, 236, -1000, 25735,
	1985, -1000, -1000, -1000, 1366, -308, 1982, -1000, -1000, -1000,
	-1000, -1000, 925, -1000, 336, 2537, 1398, -1000, 9314, 9314,
	1994, 1052, -1000, 7823, 1167, 27405, 873, 15291, 25735, -1000,
	-1000, 7823, 7823, -1000, 1981, 1976, -1000, 7823, 7823, 1596,
	-1000, 25735, -1000, -1000, -1000, 15291, -1000, 9314, -1000, 7823,
	1966, -62, -62, 1946, 1940, 1858, 920, -62, 1854, 1845,
	1797, 1694, 1689, 1681, 1627, 1578, 1099, -1000, -1000, 1555,
	1550, 919, -1000, 917, 1546, 902, 890, 6323, -1000, -130,
	7823, 7823, 7823, 1958, -1000, -1000, 25735, 1700, -82, 1036,
	-1000, 322, 21752, 285, -1000, 1864, 219, -1000, 1963, -1000,
	733, -1000, 1697, 1693, 25735, 687, -1000, 817, 27304, -1000,
	25735, 1099, -1000, 1306, 1022, -1000, 2145, 913, -1000, -1000,
	2145, -1000, 1022, -1000, 1022, 1111, 25735, -1000, 25735, -82,
	1036, 322, 25735, 20261, 20261, 20261, 20261, -1000, 1920, 1887,
	-1000, 1913, 1912, 1899, 25735, 20261, 1677, -1000, 26619, -1000,
	-1000, -1000, -1000, -1000, 1549, 889, 2224, 503, 7823, -1000,
	-1000, -1000, 456, 21752, 1378, 297, -1000, -1000, -1000, -1000,
	-1000, 25735, 25735, 2127, -1000, 618, -1000, -1000, 811, -1000,
	2127, -1000, 1254, 1377, 1129, 554, 560, 880, -1000, 138,
	25735, 1949, 1691, -1000, 25735, -287, 6323, 230, -287, 25735,
	6323, 2889, 1250, -1000, -1000, -1000, 2147, 21752, 1306, 998,
	1040, -1000, 61, -1000, 112, 325, 1375, -1000, 374, 78,
	-1000, 1053, 1366, 373, -1000, -1000, 9314, -1000, -1000, -1000,
	-1000, 1099, 7823, 1542, -1000, 473, 473, 1536, -1000, 1656,
	1687, -1000, 1656, 1685, 1656, 473, 473, 1512, -1000, 1457,
	1574, -1000, -1000, 1562, 1558, 7823, -1000, 1505, 2413, 1010,
	-62, -1000, 1679, -1000, -62, -62, -62, -62, -1000, -62,
	-62, -62, -62, -62, -62, -62, -62, -1000, -1000, -1000,
	1373, -1000, -1000, -1000, 1245, -1000, 1231, -1000, -52, -35,
	1099, 1099, -1000, -1000, 1955, 1677, 10318, 1196, -1000, -1000,
	21255, -1000, 303, -1000, -1000, -1000, 378, 127, 1219, 310,
	-1000, 1427, 25735, -1000, -1000, -1000, -1000, -1000, 1036, 1036,
	1036, 10318, 10318, 330, 577, 805, 20261, 25735, -1000, 19764,
	1504, -1000, 580, 2145, -1000, 25735, -1000, 2145, 2145, 1022,
	-1000, 1677, 1196, 21255, 303, 756, -1000, 1049, 1843, 1863,
	1843, -1000, -1000, -1000, -1000, 1881, -1000, 1870, -1000, -1000,
	756, -1000, -1000, -1000, -1000, -1000, 503, -1000, 2083, 492,
	492, 492, 1501, -1000, 616, 1499, -1000, -1000, -1000, -1000,
	2142, 2134, 20758, 2142, -1000, -294, 2168, 233, 25735, 228,
	-1000, -287, 25735, -1000, -1000, 1494, 604, -287, -1000, 554,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1306, -1000, 108,
	-1000, -1000, -1000, -1000, -1000, -1000, -9, -1000, 25735, -1000,
	1366, 1365, 77, 25735, -1000, 1099, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7823, -1000, -1000, -1000, 1545, -1000, -1000, 7823, -1000,
	329, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1492, 1491, -292, -32, 2133, 2131,
	-1000, -1000, 2021, 1486, 600, -1000, -1000, -1000, 2640, 535,
	-1000, 25735, 1125, 492, 341, 492, 1120, 1674, -1000, -1000,
	-1000, 1364, 2, -1000, -1000, -1000, 1362, 1360, 1216, -1000,
	-1000, 1247, 777, 20, -1000, -1000, -1000, -1000, -1000, -1000,
	1672, 15291, 15788, 1355, 1485, 1478, 26232, 20261, 19764, 741,
	-1000, 790, -1000, -1000, -1000, 2145, -1000, -1000, 2145, 2019,
	-1000, 2, -1000, 2139, 25735, 6323, -1000, -1000, 7823, 1671,
	-1000, 7823, -1000, -1000, -1000, -1000, -1000, 1670, 1939, -1000,
	-1000, -1000, -1000, -1000, -1000, 7823, 7823, -1000, -1000, -1000,
	25735, -1000, -1000, -287, -1000, 554, 861, -1000, 554, 580,
	-1000, -1000, 138, -1000, -1000, -1000, -91, 1529, -1000, 1516,
	2139, -1000, 2129, -1000, -1000, -294, 1354, -1000, 2128, 1351,
	1301, 233, 27534, 10318, 27805, -1000, -1000, 25735, 25735, -1000,
	25735, 25735, 341, 7823, -1000, -1000, 225, -1000, -1000, 120,
	-1000, -1000, 1221, 355, -1000, 18273, -1000, -1000, -1000, -1000,
	-1000, 67, 27534, 2145, 741, 790, -1000, -1000, 983, -1000,
	-1000, 233, -1000, 2088, -1000, -1000, 1099, 25735, 1099, 19267,
	-1000, 2126, 2125, 1099, 525, 560, 554, -1000, -91, -1000,
	-56, -39, -1000, -1000, 32, 7823, -296, -1000, 1349, -36,
	-1000, -1000, -1000, 327, 27456, -1000, 1036, 1036, 683, 1036,
	1036, 1036, 1036, 249, 247, 1036, 1036, 1036, 1036, 1036,
	1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1669,
	-1000, -1000, 27805, -1000, -1000, 1138, 9314, -1000, -1000, 1346,
	15788, 489, 471, 1666, -1000, 217, 2166, -1000, 1117, 1092,
	-1000, 25735, -1000, 1665, 1683, 175, 1660, -1000, 1659, 1658,
	25735, 1510, 324, 1344, -1000, -1000, 117, -1000, -1000, 840,
	-1000, 1656, 7823, -1000, -91, 327, 2139, -1000, -1000, -1000,
	839, 825, -1000, -1000, -1000, -1000, -1000, 353, -50, -39,
	-1000, 2122, -47, 2119, 2108, 1477, -1000, 3340, -1000, -1000,
	-1000, 525, -1000, 1654, -1000, 2107, 173, 2106, 27534, -1000,
	1215, 1214, 1036, 1036, 1205, 1341, 1336, 1335, 1036, 1036,
	1200, 1332, 26619, 1199, 1197, 1194, 1210, 1331, 634, 1208,
	1207, 1185, 25735, 1644, 1283, -1000, -1000, 2537, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1192,
	1643, -149, -1000, -1000, 1635, 18273, 207, 207, 18273, 18273,
	18273, 1634, 400, -1000, -13, -1000, -1000, -1000, 18273, 1989,
	1484, -1000, 173, 2088, -1000, -1000, 18770, 1629, 1189, -32,
	2103, -1000, 1301, 2100, 1301, 1301, -1000, -1000, 4334, -288,
	-68, 252, 25735, 1301, -1000, 2093, 201, -1000, -1000, -1000,
	15291, 15291, -1000, -1000, -1000, -1000, 1317, 1307, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	278, 25735, 821, -1000, 1048, 1433, 7823, 1617, -227, 18273,
	813, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 812, 803,
	801, 18273, -1000, -1000, -1000, 214, -1000, 159, -1000, -1000,
	1989, -1000, -1000, -1000, -1000, 2034, 14794, -54, -1000, 1305,
	-1000, 1301, -1000, -1000, 1071, -1000, -1000, -1000, -1000, -1000,
	797, -1000, -1000, 17776, 193, 251, 232, -1000, 356, -1000,
	-1000, -1000, -1000, -1000, -1000, 274, 776, -1000, 1283, 1282,
	-1000, 1352, -1000, 1861, -1000, 59, 738, -1000, -1000, -1000,
	-1000, 722, -1000, -1000, 1036, 1278, 155, -1000, -1000, -1000,
	-1000, 25735, -1000, 706, -1000, -1000, -1000, 778, -1000, -1000,
	-1000, -1000, 4334, -1000, 25735, -1000, 25735, 191, 1173, 9314,
	1615, 9314, 1613, 204, 1612, -1000, -1000, -1000, -1000, -1000,
	400, -1000, 1692, 1630, 2153, -1000, -1000, -1000, -1000, 159,
	159, 159, 159, 70, 1152, -1000, 1300, 519, -1000, 1035,
	-1000, 17279, 25735, -1000, -1000, 696, 1611, 2090, -1000, 2257,
	25735, 2073, 25735, 1607, 1033, 9314, -1000, -1000, 2165, -1000,
	2163, 477, 477, -1000, -1000, -1000, 25735, 5826, -1000, 731,
	-1000, -1000, 326, 196, -1000, 691, -1000, 671, 16782, 1150,
	1862, -1000, -1000, -1000, 1186, 226, -1000, -1000, -1000, 1099,
	25735, 669, -1000, 1382, 176, -1000, -1000, -1000, 668, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 326, 1929, -1000, 1144,
	-1000, -1000, 27391, 444, -1000, -1000, 27391, 190, -1000, 319,
	1595, -1000, -1000, 664, -1000, 1323, 493, 7823, -1000, 190,
	27534, -1000, 7823, 661, -1000, 27534, 641, -1000, -1000,
}

var yyPgo = [...]int{
	0, 132, 2642, 200, 141, 136, 199, 2641, 2636, 2009,
	2005, 2634, 2633, 2632, 2631, 2630, 2629, 2628, 2627, 2626,
	2625, 2624, 2618, 2614, 2609, 2608, 2607, 2606, 197, 2605,
	2599, 2598, 2596, 2595, 2594, 2593, 2592, 2591, 2590, 2589,
	2588, 2586, 2585, 2584, 2582, 2581, 2580, 2578, 2574, 2573,
	133, 2572, 2004, 2566, 2562, 2561, 2560, 2559, 177, 2558,
	2557, 2556, 2555, 2554, 2553, 2552, 2550, 2549, 2548, 2547,
	2546, 2545, 2544, 2541, 126, 2540, 2526, 2525, 2524, 2522,
	2521, 193, 173, 59, 2520, 43, 61, 158, 202, 796,
	207, 201, 146, 135, 75, 2519, 2015, 2517, 149, 188,
	121, 24, 2516, 143, 2513, 117, 36, 48, 203, 113,
	58, 101, 99, 2510, 178, 70, 80, 91, 2509, 2508,
	105, 2507, 65, 2506, 84, 56, 98, 28, 2504, 2499,
	2498, 89, 2496, 2494, 2492, 2491, 148, 2489, 103, 55,
	2488, 2487, 2486, 64, 2485, 29, 2484, 53, 2480, 2479,
	2478, 2477, 68, 2476, 2472, 12, 17, 21, 2471, 16,
	1, 2469, 179, 60, 87, 112, 2468, 379, 2467, 2466,
	2465, 124, 2464, 401, 2463, 2459, 2458, 2457, 9, 2456,
	165, 2455, 2454, 79, 106, 2453, 57, 159, 164, 2451,
	2450, 109, 50, 52, 107, 2448, 2447, 78, 180, 18,
	42, 0, 160, 40, 2446, 2445, 2444, 198, 2443, 162,
	152, 183, 155, 206, 123, 2437, 2436, 54, 2430, 122,
	2429, 108, 7, 2428, 161, 2427, 309, 150, 2426, 167,
	2422, 129, 2, 120, 2420, 2419, 27, 225, 2416, 2411,
	2410, 147, 2408, 2406, 88, 138, 2405, 2404, 2400, 23,
	2398, 34, 30, 2397, 82, 2394, 196, 2392, 139, 104,
	153, 140, 118, 181, 182, 71, 116, 1128, 115, 81,
	19, 2388, 185, 2387, 209, 187, 2385, 163, 2384, 195,
	362, 172, 2358, 154, 8, 41, 31, 2357, 10, 2356,
	524, 2354, 2352, 20, 2351, 26, 2350, 2346, 2345, 2344,
	5, 2341, 2339, 2337, 3, 6, 2336, 4, 170, 47,
	110, 2335, 102, 208, 2334, 2333, 2332, 2331, 2330, 224,
	2329, 1132, 2327, 2326, 2323, 2322, 2320, 2319, 67, 35,
	2316, 2315, 2314, 2312, 74, 111, 2297, 303, 171, 2288,
	33, 2287, 2286, 25, 2285, 32, 2276, 2275, 2273, 14,
	157, 2272, 2270, 15, 2269, 2268, 11, 13, 2267, 2265,
	66, 2264, 51, 37, 77, 76, 2260, 22, 69, 114,
	2258, 2256, 194, 190, 168, 2253, 130, 192, 210, 2235,
	174, 2234, 2233, 2232, 2231, 2230, 204, 2227, 1109, 2226,
	2225, 191, 63, 83, 97, 2222, 2221, 2218, 73, 125,
	93, 92, 166, 2216, 151, 2214, 2212, 90, 2211, 2209,
	2207, 2206, 2185, 2184, 2183, 189, 145, 2182,
}

//line mysql_sql.y:8156
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 413, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 79, 411, 411, 411, 412, 412, 78,
	78, 67, 66, 359, 359, 358, 358, 357, 357, 356,
	356, 356, 355, 355, 355, 354, 354, 353, 353, 352,
	352, 350, 350, 351, 349, 348, 348, 348, 346, 346,
	344, 344, 345, 345, 339, 339, 342, 342, 340, 340,
	340, 340, 343, 338, 338, 338, 337, 337, 65, 65,
	65, 269, 269, 64, 64, 283, 283, 283, 283, 283,
	281, 281, 281, 281, 281, 281, 280, 280, 279, 279,
	284, 284, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 59, 59, 59, 59, 62, 62, 62, 63,
	278, 278, 278, 60, 61, 61, 268, 268, 273, 273,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 277, 277, 277, 275, 275, 274, 274, 276,
	276, 53, 53, 53, 56, 55, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 54, 54, 54, 54, 54,
	54, 51, 51, 51, 51, 51, 50, 50, 52, 52,
	266, 266, 265, 70, 70, 70, 70, 70, 70, 70,
	69, 69, 72, 72, 71, 73, 58, 58, 58, 58,
	58, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	383, 383, 383, 385, 385, 205, 206, 414, 208, 204,
	204, 204, 379, 379, 380, 381, 382, 382, 382, 68,
	7, 7, 7, 49, 47, 397, 397, 48, 404, 404,
	319, 319, 219, 219, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	322, 323, 215, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	35, 34, 34, 255, 255, 33, 415, 415, 188, 188,
	41, 42, 43, 32, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 46, 46, 333, 333, 417, 417, 417,
	44, 45, 318, 318, 318, 39, 38, 37, 36, 36,
	31, 31, 30, 30, 212, 212, 214, 214, 210, 416,
	416, 295, 295, 213, 213, 29, 29, 29, 211, 211,
	187, 209, 209, 209, 8, 8, 6, 11, 11, 11,
	11, 11, 11, 11, 11, 17, 19, 263, 263, 260,
	18, 14, 13, 16, 12, 15, 5, 5, 5, 5,
	9, 9, 10, 93, 93, 126, 126, 392, 392, 388,
	388, 389, 389, 389, 390, 390, 391, 391, 74, 327,
	327, 327, 327, 327, 327, 4, 115, 115, 116, 116,
	326, 326, 326, 326, 326, 326, 326, 410, 410, 368,
	368, 368, 369, 114, 114, 109, 109, 328, 328, 233,
	370, 370, 336, 336, 335, 335, 334, 334, 112, 112,
	113, 113, 96, 96, 82, 82, 341, 341, 341, 341,
	347, 347, 316, 316, 152, 152, 181, 181, 182, 182,
	86, 86, 87, 87, 87, 87, 87, 87, 376, 376,
	378, 378, 377, 111, 111, 107, 107, 108, 108, 108,
	106, 106, 105, 104, 104, 103, 101, 101, 101, 102,
	102, 102, 89, 89, 88, 88, 88, 88, 88, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 90, 90, 384, 384, 384, 320, 320, 320, 325,
	325, 164, 164, 165, 165, 163, 163, 91, 91, 92,
	92, 92, 92, 162, 162, 161, 94, 94, 100, 99,
	99, 95, 95, 95, 95, 172, 172, 171, 171, 171,
	171, 77, 80, 80, 81, 119, 119, 170, 169, 169,
	169, 118, 118, 117, 117, 110, 110, 98, 98, 98,
	98, 168, 97, 166, 409, 409, 408, 408, 407, 405,
	405, 405, 406, 406, 406, 406, 361, 361, 361, 361,
	361, 197, 197, 197, 203, 203, 196, 196, 196, 196,
	196, 207, 202, 202, 198, 198, 199, 199, 199, 3,
	3, 3, 3, 23, 23, 23, 23, 27, 386, 386,
	20, 393, 396, 394, 394, 398, 398, 398, 399, 399,
	399, 400, 400, 21, 395, 401, 401, 401, 264, 264,
	261, 262, 262, 259, 258, 258, 258, 403, 403, 402,
	402, 402, 200, 200, 22, 254, 254, 256, 257, 257,
	248, 248, 248, 248, 26, 252, 252, 253, 253, 253,
	253, 253, 249, 249, 251, 251, 247, 247, 247, 247,
	247, 25, 246, 246, 244, 244, 242, 242, 243, 243,
	241, 241, 241, 245, 245, 24, 24, 24, 84, 83,
	83, 83, 184, 184, 183, 183, 85, 321, 321, 285,
	285, 286, 286, 286, 289, 289, 301, 301, 302, 302,
	300, 300, 307, 307, 306, 306, 305, 305, 304, 304,
	303, 303, 303, 303, 298, 298, 297, 297, 287, 287,
	287, 287, 287, 288, 288, 288, 296, 296, 299, 299,
	143, 143, 144, 144, 144, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 366, 366, 367, 146, 146, 146,
	150, 150, 150, 150, 150, 150, 145, 145, 147, 147,
	127, 127, 125, 125, 120, 120, 121, 121, 122, 122,
	123, 123, 124, 124, 124, 124, 124, 124, 271, 271,
	364, 364, 365, 365, 360, 360, 360, 363, 363, 363,
	363, 363, 362, 362, 128, 179, 179, 179, 201, 201,
	201, 178, 178, 178, 142, 142, 141, 141, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 270, 270, 216, 216, 217, 217, 159,
	158, 158, 158, 158, 158, 156, 157, 155, 155, 155,
	155, 155, 154, 154, 153, 153, 153, 250, 250, 151,
	151, 149, 149, 149, 148, 148, 148, 308, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 225, 225, 230, 230, 375, 375, 374, 129, 129,
	129, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	138, 138, 138, 293, 293, 293, 293, 293, 294, 294,
	294, 291, 291, 292, 292, 234, 235, 235, 290, 290,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 332, 332, 332, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 387, 387, 387, 371, 371, 371, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 176, 176, 176,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 236, 236, 237, 237, 329, 329, 329,
	329, 329, 329, 330, 330, 331, 331, 331, 331, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 223, 173,
	173, 173, 238, 231, 231, 232, 232, 226, 226, 226,
	226, 226, 226, 226, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 227, 227, 229, 229, 240, 240,
	240, 239, 239, 239, 239, 239, 239, 239, 140, 140,
	140, 140, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 131, 131, 131, 131, 135, 135, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 136, 136, 136, 136, 134, 134, 134,
	134, 134, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 75, 76,
	76, 133, 180, 180, 309, 309, 312, 312, 310, 310,
	311, 313, 313, 313, 314, 314, 314, 315, 315, 315,
	317, 317, 186, 186, 186, 193, 193, 185, 185, 194,
	194, 195, 195, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 4, 0, 1, 1, 0, 1, 6,
	8, 9, 10, 0, 2, 1, 3, 3, 3, 1,
	3, 5, 0, 2, 3, 1, 3, 1, 1, 1,
	3, 1, 1, 1, 1, 0, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 2, 1, 2, 3, 4,
	3, 3, 1, 0, 1, 1, 0, 1, 8, 5,
	7, 0, 3, 8, 5, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 4,
	1, 3, 1, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 2, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 4, 6,
	1, 1, 1, 2, 4, 6, 1, 4, 1, 3,
	3, 4, 4, 4, 3, 3, 2, 4, 4, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 2, 2, 0, 1, 4, 2,
	4, 1, 5, 3, 2, 1, 2, 2, 4, 4,
	5, 2, 1, 3, 4, 4, 1, 2, 9, 7,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 2, 3, 4, 7, 2, 3, 3, 4, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 1, 9, 7, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 3, 2, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 6, 7,
	4, 4, 7, 8, 0, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 3, 1,
	4, 6, 4, 4, 4, 3, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 0, 4, 1, 3,
	3, 1, 5, 6, 5, 5, 3, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 9, 0, 1,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 5, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 0, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 6,
	6, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 5, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -413, -2, -1, -3, -78, -4, -74, -5, -6,
	-8, -57, -69, -71, -73, -72, -28, -7, -68, -50,
	-51, -53, -59, -64, -65, -66, -67, -75, -76, -77,
	-86, -79, -23, -22, -21, -20, 393, 12, 435, -9,
	-10, -376, -11, 230, -204, -205, -206, -208, -414, -29,
	-30, -31, -36, -37, -38, -39, -44, -45, -46, -32,
	-33, -34, -35, -41, -42, -43, -48, -47, -49, 207,
	-52, 61, -54, -55, -56, -60, -61, -62, -63, 324,
	330, 383, 392, 516, 517, 46, -87, -89, 518, -24,
	-25, -26, -27, 203, 14, 468, -12, -15, -13, -16,
	-14, -18, -19, -17, 225, 224, 37, 288, 289, 290,
	328, 223, 204, 13, 135, 136, 138, 139, 30, -88,
	67, 205, -90, 10, 519, 428, -96, 38, -125, -201,
	70, -189, -192, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 438,
	305, 306, 465, 242, 266, 354, 269, 276, 135, 154,
	148, 176, 168, 143, 246, 281, 247, 77, 138, 421,
	87, 404, 380, 141, 261, 263, 265, 268, 248, 164,
	159, 260, 244, 516, 157, 249, 39, 250, 181, 251,
	252, 470, 400, 304, 406, 273, 378, 158, 401, 264,
	403, 183, 187, 413, 330, 152, 153, 408, 415, 180,
	222, 42, 467, 234, 416, 185, 179, 175, 424, 277,
	275, 178, 151, 174, 245, 50, 189, 188, 190, 374,
	375, 376, 377, 253, 254, 318, 412, 171, 160, 309,
	144, 22, 419, 229, 405, 331, 255, 270, 278, 184,
	186, 236, 241, 469, 382, 240, 274, 417, 156, 233,
	262, 228, 420, 145, 324, 333, 256, 139, 267, 414,
	423, 49, 346, 150, 142, 219, 136, 238, 243, 11,
	257, 258, 259, 280, 279, 271, 172, 235, 177, 162,
	149, 173, 137, 237, 422, 347, 514, 307, 363, 170,
	167, 239, 212, 418, 407, 140, 367, 348, 165, 282,
	511, 512, 513, 319, 303, 283, 284, 163, 226, 399,
	285, 287, 373, 296, 349, 381, 355, 350, 196, -96,
	-52, -10, -9, -88, -89, -125, 210, -209, 23, 378,
	-58, 379, 207, 67, -201, -5, -4, -74, -50, -86,
	-207, -201, 288, 288, -207, 210, -201, 240, 362, -319,
	215, -280, -254, 241, -279, -256, -282, -257, 31, 203,
	205, 204, 237, 14, 328, 211, 12, 10, 329, 223,
	24, 25, 27, 13, 330, 332, 28, 333, 336, 337,
	338, 41, 341, 342, 230, 70, 73, 248, 248, -232,
	-226, 94, 231, -228, -221, -222, -224, -356, -350, -220,
	67, 119, 120, 127, 95, -223, -308, 35, 97, 475,
	436, -174, -175, -176, -177, -201, -351, -349, 73, 78,
	81, 84, 85, 83, 82, 161, 80, 74, 131, 132,
	-89, 70, -371, 483, -190, 504, 484, 503, 46, -324,
	-331, 209, -329, 166, 226, 162, 12, 125, 373, 130,
	163, 480, 500, 438, 507, 477, 478, 472, 473, 474,
	476, 485, 487, 499, -332, 495, 505, 506, 493, 72,
	71, 498, 497, 486, 481, 482, 488, 471, 479, 489,
	490, 496, 501, 502, 312, 87, 313, 314, 428, 308,
	315, 215, 378, 55, 316, 317, 318, 319, 320, 435,
	321, 56, 322, 311, 230, 363, 323, 165, 182, 440,
	439, 441, 432, 429, 427, 430, 431, 433, 434, 491,
	492, 494, -276, -274, -201, -80, -81, 509, -105, -106,
	-167, 19, 6, 7, 8, 9, -411, 380, 469, -321,
	305, 363, 240, -248, -246, 285, 281, 339, 220, 219,
	88, 428, 209, -388, -389, 200, 201, 202, -378, 461,
	-377, -201, 314, 26, 210, 325, 410, 411, -40, -333,
	-318, 407, 406, -213, 405, 398, 409, 400, 203, 462,
	-186, 349, 381, 236, 425, 426, 326, 382, 413, 414,
	401, 87, 169, 166, -321, 305, 363, -388, 140, 137,
	-267, 140, 93, 145, 144, -267, 240, 362, 40, -273,
	373, -272, -274, 413, 414, 424, 71, 72, 412, -186,
	87, -106, -167, -105, -87, -89, -376, 305, 363, 240,
	211, 210, 212, 428, 288, -320, -384, 31, -325, 197,
	198, 199, 32, 33, -1, -202, -199, -192, 70, 71,
	72, -112, 232, -125, 133, -112, -106, -105, -106, -125,
	-178, -201, 380, 103, -58, -58, 379, -379, -380, -381,
	-383, 207, 379, 378, 133, 15, -207, -207, 65, -125,
	-256, 240, -280, -254, 35, 64, 134, 213, 134, 64,
	67, 326, 305, 363, 327, 428, 210, 339, 212, 240,
	340, 305, 363, 210, 212, 428, 240, 305, 210, 212,
	363, 240, 340, 398, 399, 212, 26, 331, 334, 335,
	399, -337, 424, -337, 134, 93, 90, 91, 92, -226,
	110, -239, 103, 104, 105, 106, 107, 108, 109, 116,
	115, 126, 119, 120, 121, 122, 123, 124, 125, 117,
	118, 113, 94, 111, 112, 96, -89, -226, -232, -224,
	-224, -224, -224, -308, -230, -226, 67, 67, 133, 73,
	-226, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	-330, 67, 67, -236, -237, 67, 67, 73, 73, 67,
	67, 67, -224, 73, -237, -237, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 134, -131, -135, -132, -134, -133, -137, -136,
	166, 167, 130, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 30, 182, 226, 162, 163, 164,
	165, 183, 148, 168, 466, 191, 149, 192, 150, 193,
	151, 194, 152, 153, 195, 154, 157, 158, 159, 156,
	133, -106, 134, 67, -82, 38, -108, 21, -90, -89,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 78,
	-386, 210, 461, -244, 215, -244, -244, 211, -244, 210,
	210, -390, 147, 134, -378, -111, 67, -212, 111, 23,
	238, 238, 275, -212, -417, 211, 408, 42, 239, 238,
	-107, -108, -107, 402, 399, -295, 403, 404, -213, -212,
	-212, -213, 210, 212, 428, -415, -416, 15, 113, 238,
	-415, 30, 30, -386, -319, -319, -391, 214, 417, 468,
	143, 144, 145, -256, 240, 240, 134, 103, 23, -275,
	103, 114, -274, -274, -274, -275, -275, -145, 40, -200,
	130, -201, 73, -145, 40, -107, -90, -89, 68, 68,
	-319, -319, -319, -319, -319, -319, -319, -207, -91, -92,
	121, -226, -201, -91, 38, 399, -326, -115, -86, 306,
	67, 67, -201, -327, 46, -86, 67, 30, -107, -82,
	-108, 133, 78, 73, -58, 68, 134, -382, 84, 85,
	-385, 180, 172, -201, -70, 73, -3, -4, -5, -6,
	-28, -50, -86, -352, -350, 67, 31, 372, 64, 15,
	-281, 210, 428, 325, 236, 212, 305, -279, -263, -260,
	-258, -200, -256, -259, -258, -284, -178, 399, -83, 384,
	287, -83, -226, -226, -226, -226, -226, 83, 94, 303,
	84, 85, -221, -240, 31, 283, 284, -222, -222, -222,
	-222, -222, -222, -222, -222, -222, -222, -222, -222, -229,
	-238, -308, 67, 113, 111, 112, 96, -224, -222, -222,
	68, 134, -375, -374, 98, -226, -226, -201, -372, -373,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 316, 311, 317, 315, 308, 323, 318, 319, 165,
	459, 460, 453, 454, 455, 456, 457, 458, -231, -232,
	-231, -226, -372, -231, -173, 32, 31, -173, -226, -387,
	301, 300, 302, -109, -201, -231, 68, 68, 68, 78,
	-232, -231, -222, -231, -373, -173, -232, -232, -173, -173,
	-173, -173, 121, -173, -173, -173, -173, -173, -173, -173,
	-173, -274, 40, -315, 347, 346, -309, -311, 67, -310,
	67, -310, -309, -309, 67, 67, -312, 67, -312, -312,
	-309, -313, 67, -313, -314, 67, -313, -201, -107, -81,
	-335, -334, -226, 40, 510, -82, -226, -104, -103, -226,
	-412, 73, 212, -244, -393, -201, 94, -264, -261, -258,
	-254, -199, -201, -244, -244, -391, -377, 34, -110, -201,
	-163, 16, -224, -258, -415, -212, -163, -416, -212, -212,
	-214, -416, -210, -416, 399, -163, -163, -295, -211, -201,
	-211, -244, -188, -187, -201, -188, 212, -393, -264, -99,
	-94, -98, -95, -100, -166, -168, -97, 67, -125, -89,
	-201, 418, 419, 141, 144, 143, 31, 372, -278, 372,
	31, -254, -272, -268, 73, 373, -259, -277, 64, 130,
	-334, -275, -275, -275, -277, -277, 129, -82, -393, -263,
	-254, -201, -127, -125, -127, -202, -162, 134, -161, 15,
	-196, -201, 34, 73, 133, -162, 73, -127, -410, 64,
	46, 30, 67, -114, 68, -109, -113, -201, -328, -233,
	-370, 509, -114, 68, -368, -369, -109, -82, -82, -194,
	-195, -185, -191, -198, -199, -192, 208, 31, 93, 34,
	36, 312, 344, 96, 130, 20, 97, 166, 129, 314,
	436, 313, 203, 59, 439, 441, 440, 429, 427, 365,
	369, 371, 368, 428, 398, 40, 14, 37, 224, 32,
	33, 123, 205, 100, 101, 227, 35, 225, 85, 44,
	23, 62, 15, 17, 18, 315, 364, 215, 214, 113,
	384, 211, 57, 12, 132, 38, 110, 366, 53, 89,
	45, 55, 111, 21, 430, 431, 41, 383, 392, 464,
	231, 125, 316, 317, 60, 94, 372, 83, 43, 64,
	90, 19, 58, 112, 206, 435, 56, 370, 320, 322,
	332, 461, 321, 209, 409, 10, 311, 437, 30, 223,
	54, 210, 99, 213, 84, 230, 6, 88, 13, 61,
	65, 432, 433, 434, 46, 98, 16, 323, 468, 385,
	386, 387, 388, 389, 390, 391, 191, 192, 193, 194,
	195, 272, 218, 216, 220, 221, 509, 510, 197, 198,
	300, 302, 169, 200, 201, 202, 232, 147, 7, 351,
	352, 353, 356, 357, 358, 359, 360, 361, 362, 517,
	393, 394, 395, 396, 397, 410, 411, 23, -58, -380,
	133, 134, -110, -281, -262, -259, -283, 121, 70, -269,
	134, 468, 520, 71, 213, -403, -402, 364, 68, 134,
	-338, 214, 435, 73, 521, 196, -338, 83, 303, 84,
	85, -308, -232, -229, -224, -222, -222, -227, 227, 93,
	-226, -225, -374, 100, -226, 34, 134, 65, 133, 68,
	68, 15, 15, 68, -226, -226, 68, 15, 15, -226,
	68, 133, 68, 68, 68, 65, 68, 134, 68, 134,
	-226, 68, 68, -226, -226, -226, -232, 68, -226, -226,
	-226, -226, -226, -226, -226, -226, -226, -317, 348, 78,
	78, -180, 73, -180, 78, 78, 78, 134, 68, 73,
	134, 22, 134, -101, 36, 37, -244, -125, -396, 351,
	35, -404, 134, 40, -402, -247, 65, -242, -243, -241,
	-245, 40, -125, -125, 15, -93, -126, -201, 67, 68,
	134, -226, -255, 65, -188, -163, -125, -201, -163, -163,
	-212, -202, -214, -209, -214, -210, 133, -187, -319, -397,
	351, -404, 30, -169, -170, -171, -172, 53, 57, 59,
	54, 55, 56, 60, 30, 134, -197, -203, 34, -198,
	73, -199, -192, -197, -89, -94, -99, -197, 67, 142,
	145, 145, 144, 213, 67, 103, -277, -277, -277, 40,
	-200, 64, 134, -163, -92, -94, -201, 73, -201, 121,
	-163, -152, 512, 38, 39, -328, -368, -116, -393, 68,
	134, -115, 306, 68, 134, 134, 67, 68, 46, 134,
	103, 133, 380, -201, -350, 68, -283, 134, 213, 133,
	133, -260, 330, -200, -262, 20, 468, -178, 38, -184,
	-183, 73, 521, 38, 68, -227, 93, -224, -221, 68,
	101, -226, 99, -129, -131, 346, 347, -130, -136, 130,
	166, 226, 165, 164, 162, 346, 347, -145, -201, -226,
	-226, 68, 68, -226, -226, 15, -201, -145, -222, -226,
	68, -290, 394, -290, 68, 68, 68, 68, -290, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	134, 68, 68, 68, 134, 68, 134, -334, -341, 403,
	-226, -226, -103, -102, 43, -125, 67, -399, 405, 353,
	-193, 103, -219, -218, 307, 41, -322, 373, 359, 360,
	-261, 240, 64, 295, 296, 297, 298, -241, -186, 129,
	251, 67, 67, -125, -93, -201, 15, 134, -392, 133,
	-1, -201, -254, -212, -163, -416, -163, -212, -212, -214,
	-201, -125, -399, -193, -219, -266, -265, -178, -98, -98,
	-98, -98, 53, 53, 53, 58, 53, 58, 53, -171,
	-266, -100, -111, -203, 68, -409, -408, -407, -405, 61,
	214, 62, -231, 145, -262, -215, 73, -268, -125, -125,
	-165, 17, 133, -165, 78, 73, 89, 68, 134, -115,
	-109, 46, 67, -201, -233, -336, -335, 46, -86, -328,
	-369, -334, -194, -191, -199, -192, 78, 15, -259, -254,
	121, 121, 70, 331, -269, 73, 352, 73, 210, 522,
	134, 103, -184, 210, -221, -226, 68, -138, 153, 152,
	-138, 68, -309, -310, -309, -312, -309, -138, -138, 68,
	68, 23, 68, 68, 68, -226, 68, 68, 134, -290,
	67, -290, -290, -290, -290, -290, -290, -290, -290, -290,
	-290, -290, -290, 73, 78, 78, -347, 390, 385, 387,
	44, 45, -111, -120, -121, -122, -128, -123, -178, -217,
	-124, 218, 216, 220, -365, 88, 221, 272, 89, 211,
	-400, 77, -394, 73, -201, -401, 77, 354, 132, 309,
	40, 355, 356, 370, 304, 78, 78, 361, -395, 70,
	-125, -193, -193, -193, -120, -120, -112, 65, 133, -94,
	-126, -201, 121, 68, -163, -201, -163, -163, -212, -111,
	-400, -394, -401, -163, 134, 103, -118, -117, 64, 65,
	-119, 64, -117, 53, 53, -163, -407, -406, 23, -365,
	-365, -365, 68, 68, -164, 18, 20, 121, -164, -152,
	13, -86, -393, 46, -86, -328, -116, 68, -328, -254,
	-269, 373, -125, -183, 73, 522, -125, -226, 68, -226,
	-235, -234, 232, 68, 68, -316, 511, -345, 385, 20,
	20, 34, 68, 134, -131, -124, -201, 89, -364, -365,
	-244, -364, 89, 67, 73, -398, 364, 73, 73, 78,
	40, 78, 132, 357, -323, 67, -145, -147, -200, 130,
	73, 68, 68, -197, -94, -201, -163, -392, 133, -163,
	-163, 34, -398, -106, -265, -334, -226, 67, -226, 67,
	53, 19, 17, -226, -232, -368, -328, 68, -115, -85,
	-339, -295, 68, 68, -106, 20, -152, 73, 20, 73,
	-343, 73, -86, -143, -144, -160, 344, 242, -245, 246,
	77, 247, 380, 248, 211, 250, 251, 252, 222, 253,
	254, 255, 373, 256, 257, 258, 259, 327, 6, 291,
	-122, -142, -141, -139, 83, 94, 40, 344, -140, 77,
	129, 265, 243, 266, -159, -216, 64, 350, 216, 88,
	89, 332, -217, -360, -362, -201, -362, -201, -360, -360,
	-244, -226, 20, 468, 308, 40, 78, 40, 358, -249,
	-251, -178, 67, -84, -83, -143, -163, -163, -86, -107,
	-110, -361, -201, 216, 20, 20, -85, -346, 390, -342,
	-340, 385, 386, 387, 388, -292, -291, -294, 391, 274,
	397, -232, -181, 513, 73, 387, -285, 232, 134, -160,
	-193, -193, -186, 129, -193, -193, -193, -193, 249, 249,
	-193, -193, -193, -193, -193, -193, -193, -193, -193, -193,
	-193, -193, -193, -193, 67, -139, 83, -222, 73, -147,
	-148, 40, 264, 260, -149, 40, 244, 245, -151, 67,
	272, 13, 89, 89, -125, 67, 65, 282, 67, 67,
	67, -362, 68, 73, 352, 73, 308, 68, 134, -309,
	-226, -85, -285, -106, 68, 68, 134, -348, 214, -344,
	389, -340, 20, 387, 20, 20, 68, -293, 96, 357,
	361, -226, 67, 20, -286, 281, 20, -160, 78, 78,
	-193, -193, 78, 73, 73, 73, -193, -193, 78, 73,
	-203, 78, 78, 78, 78, 40, 73, -150, 40, 260,
	264, 261, 262, 263, 78, 40, 78, 40, 78, 40,
	-201, 67, -366, -367, 73, 78, 67, -329, -250, 67,
	-249, -363, 295, 296, 297, 299, 298, -363, -249, -249,
	-249, 67, -271, -270, 273, 94, 373, -252, -251, -101,
	68, -286, -107, -201, 216, -355, 67, 78, -345, 20,
	-343, 20, -343, -343, -293, 509, 395, 396, 395, 396,
	-182, -201, -343, 20, -287, 274, 275, -288, -299, 277,
	-145, -145, 73, 73, -146, 243, -127, 68, 134, 103,
	68, -226, -236, -154, -153, 464, -249, 68, 68, 68,
	68, -249, 273, -253, 222, 77, 468, 293, 294, -101,
	-359, 30, 68, -354, -353, -179, -349, -201, 390, 391,
	73, -343, 93, 68, 134, -178, 67, -297, 278, 67,
	-295, 67, -295, 89, 296, 244, 245, 68, -367, 73,
	68, -158, -156, -157, 64, 401, 270, 271, 68, -252,
	-252, -252, -252, 68, -193, 73, 292, -358, -357, -356,
	68, 134, 133, -293, -201, -284, -289, 279, 78, -222,
	67, -222, 67, -296, 276, 67, -270, -157, 64, -156,
	64, 14, 13, -159, 78, -199, 134, 103, -353, -201,
	68, -301, 67, 20, 68, -284, 68, -284, 67, 103,
	-222, -155, 267, 268, 30, 144, -155, -357, 40, -226,
	133, -302, -300, 232, -288, 68, 68, 68, -284, 78,
	68, 83, 40, 269, -201, 68, 134, 70, -298, 280,
	68, -300, -303, 46, 78, -307, -304, 67, -160, 234,
	113, -307, -160, -306, -305, 279, 235, 67, 68, 134,
	70, 231, 67, -232, -305, -304, -232, 68, 68,
}

var yyDef = [...]int{
	32, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 649, 650, 651, 652, 0, 0, 0, 416,
	417, 0, 396, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 317, 318, 319, 320, 321, 322, 323,
	324, 325, 326, 327, 328, 329, 280, 281, 282, 0,
	226, 222, 201, 202, 203, 162, 163, 164, 165, 290,
	0, 0, 0, 0, 0, 0, 500, -2, 34, 653,
	654, 655, 656, -2, 429, 0, 397, 398, 399, 400,
	401, 402, 403, 404, 269, 270, 271, 265, 266, 268,
	267, -2, 747, 429, 215, 0, 206, 206, 0, 520,
	0, 0, 534, 556, 32, 0, 478, 0, 483, 842,
	878, 879, 880, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 478,
	227, 418, 419, 520, 520, 394, 0, 251, 0, 1500,
	255, 0, 0, 0, 391, 246, 247, 248, 249, 250,
	0, 641, 0, 0, 242, 0, 221, 1559, 0, 0,
	0, 0, 0, 0, 106, 695, 108, 697, 112, 119,
	0, 0, 124, 125, 128, 129, 130, 131, 132, 0,
	136, 0, 138, 141, 0, 143, 144, 0, 147, 148,
	149, 0, 159, 160, 161, 698, 699, 86, 86, 1248,
	1145, 0, 1152, 1153, 1164, 1173, 950, 951, 952, 953,
	0, 0, 0, 0, 0, 960, 961, 0, 973, 1647,
	0, 967, 968, 969, 970, 49, 61, 62, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 0, 1118,
	937, 878, 0, 1655, 0, 1675, 1656, 1674, 0, 0,
	1103, 0, 1093, 0, -2, -2, 0, 0, 1626, 0,
	-2, 1652, 1671, 1679, 1678, 1649, 1650, 1644, 1645, 1646,
	1648, 1657, 1659, 1670, 0, 1666, 1676, 1677, 0, 63,
	64, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1109, -2, 1111, 1112, 1114, 1115,
	1116, 1117, -2, 1120, 1121, 1122, -2, -2, 1125, 1126,
	1127, 1128, 1129, 1130, 1133, -2, 1135, -2, 1137, 1105,
	1106, 1107, 1108, 1097, 1098, 1099, 1100, 1101, 1102, -2,
	-2, -2, 0, 199, 197, 520, 592, 0, -2, 0,
	0, 0, 539, 542, 545, 548, 0, 35, 36, 658,
	724, 724, 724, 0, 724, 0, 0, 748, 701, 702,
	703, 722, 723, 434, 430, 431, 432, 433, 508, 0,
	510, 513, 374, 331, 0, 0, 0, 342, 374, 0,
	0, 515, 515, 0, 383, 374, 374, -2, 0, 344,
	345, 346, 336, 0, 336, 350, 351, 352, 363, 364,
	384, 1272, 0, 0, 658, 290, 290, 436, 216, 217,
	205, 207, 0, 211, 0, 204, 1559, 0, 0, 173,
	1626, 178, 0, 1507, 1573, 1522, 0, 0, 1540, 0,
	-2, 515, 0, 521, 0, 520, 0, 290, 290, 290,
	290, 290, 290, 290, 0, 0, 0, 557, 558, 553,
	554, 555, 559, 560, 3, 0, 642, 643, 646, 647,
	648, 446, 0, 482, 0, 0, 515, -2, 0, 395,
	252, 881, 0, 0, 256, 257, 0, 0, 272, 0,
	275, 260, 261, 262, 0, 0, 244, 245, 0, 0,
	223, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 116, 113, 120, 123, 133, 140, 0, 152, 154,
	157, 114, 121, 126, 127, 134, 155, 115, 117, 118,
	122, 156, 158, 135, 139, 153, 137, 142, 145, 146,
	151, 0, 87, 0, 0, 0, 0, 0, 0, 1151,
	0, 0, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1145, 0, 956,
	957, 958, 959, 962, 0, 974, 0, 0, 0, 1202,
	0, 1143, 1143, 0, 1143, 1139, 1139, 0, 0, 1143,
	1081, 0, 0, 1083, 1094, 0, 0, 1086, 1087, 1143,
	0, 1143, 1091, 1092, 1077, 1078, 0, 1139, 0, 0,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 0, 1249, 1267, 1204, 1205, 1206, 1254, 1208,
	1258, 1258, 1254, 1254, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 0, 0, 1247, 1227, 1256, 1256, 1256,
	1254, 1251, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1261, 1261, 1264, 1261,
	0, 515, 0, 0, 503, 0, 484, 0, 536, 538,
	0, 540, 541, 543, 544, 546, 547, 549, 550, 37,
	0, 724, 659, 0, 0, 0, 0, 0, 0, 724,
	724, 436, 435, 0, 509, 0, 0, 565, 0, 0,
	336, 374, 341, 565, 0, 357, 358, 359, 374, 374,
	365, 516, 366, 367, 376, 0, 381, 382, 0, 565,
	565, 0, 0, 0, 724, 338, 337, 379, 380, 348,
	338, 1273, 1274, 0, 0, 0, 0, 437, 0, 0,
	209, 0, 214, 166, 0, 0, 0, 0, 0, 0,
	195, 196, 0, 0, 0, 0, 0, 186, 189, 836,
	837, 692, 693, 190, 191, 484, 535, 537, 532, 533,
	0, 0, 0, 0, 0, 0, 0, 415, 573, 567,
	569, 636, 49, 573, 0, 0, 457, 0, 451, 0,
	0, 0, 843, 438, 470, 440, 0, 459, 484, 506,
	484, 0, 253, 0, 258, 0, 0, 274, 276, 277,
	278, 263, 264, 392, 240, 241, 233, 234, 235, 236,
	237, 238, 239, 243, 59, 0, 224, 225, 0, 0,
	0, 100, 101, 102, 103, 104, 105, 107, 91, 407,
	409, 684, 696, 0, 687, 0, 110, 150, 83, 0,
	0, 83, 1146, 1147, 1148, 1149, 1150, 1154, 0, 1156,
	1158, 1160, 1162, 0, 1178, -2, -2, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 1165,
	1176, 1177, 0, 0, 0, 0, 0, 1174, 1169, 0,
	954, 0, 971, 975, 0, 0, 0, 50, 1138, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 0, 1144,
	0, 1145, 0, 0, 0, 1140, 1141, 0, 0, 0,
	1042, 1043, 1044, 0, 465, 0, 1104, 1082, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 1270, 1268, 1269, 1207, 1255, 0, 1232,
	0, 1233, 1234, 1235, 0, 0, 1228, 0, 1229, 1230,
	1231, 1223, 0, 1224, 1225, 0, 1226, 198, 591, 593,
	0, 474, 476, 477, 0, 504, 517, 522, 523, 526,
	33, 38, 724, 0, 0, 661, 0, 288, 678, 0,
	694, 716, -2, 0, 0, 0, 511, 0, 0, 605,
	330, 0, 375, 333, 338, 565, 343, 0, 565, 565,
	374, 0, 376, 0, 376, 370, 371, 0, 385, 388,
	386, 0, 347, 339, 390, 349, 290, 285, 288, 578,
	0, 579, 580, 576, 607, 631, 631, 0, 631, 611,
	842, 218, 219, 0, 0, 213, 167, 168, 0, 170,
	171, 172, 179, 174, 176, 0, 0, 180, 192, 193,
	194, 0, 0, 0, 184, 185, 0, 502, 405, 406,
	410, 0, 412, 840, 413, 414, 565, 0, 574, 0,
	570, 637, 0, 639, 0, 565, 494, 0, 445, 0,
	470, 459, 0, 0, 446, 463, 0, 480, 439, 467,
	0, 471, 0, 0, 444, 460, 0, 505, 507, 882,
	0, 1279, -2, 1281, -2, -2, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 0, 259, 273,
	0, 0, 0, 0, 94, 681, 0, 95, 99, 89,
	0, 0, 0, 686, 0, 683, 688, 0, 109, 0,
	0, 84, 85, 739, 744, 0, 0, 1155, 1157, 1159,
	1161, 1163, 0, 1166, 1174, 1170, 0, 1167, 0, 0,
	1146, 0, 976, 0, 0, 0, 0, 0, 0, 1029,
	1030, 0, 0, 1034, 0, 0, 1037, 0, 0, 0,
	1041, 0, 1080, 1096, 1084, 0, 1088, 0, 1090, 0,
	0, 1008, 1008, 0, 0, 0, 0, 1008, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 1203, 1271, 0,
	0, 0, 1252, 0, 0, 0, 0, 0, 594, 486,
	0, 0, 0, 529, 527, 528, 0, 0, 668, 1275,
	725, 292, 0, 0, 680, 0, 0, 721, -2, 728,
	0, 734, 0, 0, 0, 0, 423, 427, 32, 514,
	0, 566, 332, 0, 374, 340, 565, 842, 360, 361,
	565, 377, 374, 378, 374, 376, 0, 387, 0, 668,
	1275, 292, 0, 0, 0, 0, 0, 598, 0, 0,
	597, 0, 0, 0, 0, 0, 513, 632, 0, 634,
	635, 644, 645, 609, -2, 0, 578, 614, 1143, 220,
	208, 210, 0, 0, 0, 0, 181, 182, 183, 187,
	188, 0, 0, 563, 568, 575, 638, 640, 50, 571,
	563, 39, 0, 0, 0, 450, 456, 0, 448, 446,
	0, 0, 0, 479, 0, 470, 472, 0, 470, 0,
	0, 0, 0, 393, 60, 279, 0, 0, 0, 0,
	0, 408, 0, 685, 91, 0, 0, 111, 0, 0,
	742, 0, 744, 0, 1142, 1168, 0, 1175, 1171, 955,
	963, 972, 0, 0, 978, 990, 990, 0, 981, 1254,
	1258, 984, 1254, 1256, 1254, 990, 990, 0, 51, 0,
	0, 1035, 1036, 0, 0, 0, 466, 0, 0, 0,
	1008, 1011, 0, 1012, 1008, 1008, 1008, 1008, 1017, 1008,
	1008, 1008, 1008, 1008, 1008, 1008, 1008, 1260, 1259, 1245,
	0, 1246, 1257, 1262, 0, 1265, 0, 475, 490, 0,
	518, 519, 524, 525, 0, 513, 844, 671, 669, 670,
	0, 1276, 675, 293, 294, 295, 296, 0, 0, 0,
	679, 0, 0, 717, 718, 719, 720, 729, 1275, 1275,
	1275, 844, 844, 478, 0, -2, 0, 0, 425, 0,
	0, 606, 334, 565, 353, 0, 368, 565, 565, 374,
	389, 513, 671, 0, 675, 565, 230, 0, 601, 595,
	0, 584, 599, 600, 587, 0, 589, 0, 585, 586,
	565, 577, 608, 633, 610, 613, 615, 616, 622, 0,
	0, 0, 0, 212, 169, 0, 312, 175, 411, 841,
	561, 0, 0, 561, 495, 494, 0, 447, 0, 0,
	464, 470, 0, 481, 468, 0, 473, 470, 443, 442,
	461, 462, 883, 1280, 1277, 1278, 254, 0, 682, 91,
	96, 97, 98, 92, 90, 689, 0, 691, 0, 740,
	744, 0, 0, 0, 1172, 977, 964, 979, 991, 992,
	980, 965, 982, 983, 985, 986, 987, 988, 989, 966,
	1031, 0, 1033, 1038, 1039, 0, 1085, 1089, 0, 1010,
	1006, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1253, 0, 0, 492, 72, 0, 0,
	530, 531, 0, 0, 845, 846, 848, 849, 0, 0,
	851, 907, 0, 860, 724, 860, 0, 0, 862, 863,
	660, 0, 0, 663, 664, 673, 0, 0, 0, 298,
	299, 0, 0, 0, 311, 307, 308, 309, 289, 674,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 565,
	424, 427, 428, 512, 335, 565, 372, 369, 565, 0,
	284, 0, 287, 520, 0, 0, 581, 602, 0, 0,
	582, 0, 583, 588, 590, 229, 617, 0, 0, 619,
	620, 621, 612, 177, 551, 0, 0, 572, 552, 40,
	459, 452, 449, 470, 455, 454, 0, 469, 441, 93,
	88, 690, 446, 743, 745, 741, 74, 0, 1040, 0,
	520, 1007, 0, 1263, 1266, 494, 0, 491, 0, 0,
	0, 0, -2, 0, -2, 850, 908, 872, 872, 861,
	872, 872, 724, 0, 672, 662, 0, 676, 677, 0,
	300, 301, 0, 304, 310, 0, 730, 731, 838, 839,
	732, 0, -2, 565, 565, -2, 421, 426, 0, 354,
	373, 0, 286, 515, 231, 232, 603, 0, 596, 626,
	623, 0, 0, 562, 564, 458, 453, 447, 74, 41,
	68, 0, 1032, 1079, 1003, 0, 496, 493, 0, 487,
	489, 82, 657, 749, -2, 792, 1275, 1275, 0, 1275,
	1275, 1275, 1275, 0, 0, 1275, 1275, 1275, 1275, 1275,
	1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275, 0,
	847, 874, -2, 886, 888, 0, 0, 891, 892, 0,
	0, 0, 0, 929, 898, 0, 0, 902, 0, 1190,
	1191, 0, 906, 0, 864, 873, 0, 873, 0, 0,
	872, 0, 0, 0, 297, 302, 0, 305, 306, 0,
	712, 1254, 0, 736, 74, 749, 520, 422, 283, 228,
	0, 0, 627, 629, 624, 625, 42, 65, 70, 75,
	76, 0, 0, 0, 0, 0, 1004, 0, 998, 999,
	1000, 1005, 485, 0, 73, 0, 751, 0, 733, 794,
	0, 0, 1275, 1275, 0, 0, 0, 0, 1275, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 889, 890, 893, 894,
	895, 934, 935, 936, 896, 931, 932, 933, 897, 0,
	0, 0, 1188, 1189, 927, 0, 0, 0, 0, 0,
	0, 0, 858, 665, 0, 667, 303, 705, 0, 526,
	0, 738, 751, 515, 604, 618, 0, 52, 0, 72,
	0, 77, 0, 0, 0, 0, 1009, 1001, 0, 0,
	0, 0, 0, 0, 735, 0, 788, 793, 795, 796,
	0, 0, 799, 800, 801, 802, 0, 0, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 830, 831,
	832, 833, 834, 835, 815, 816, 817, 818, 819, 820,
	827, 0, 0, 824, 0, 0, 0, 1093, 922, 0,
	0, 865, 867, 868, 869, 870, 871, 866, 0, 0,
	0, 0, 857, 859, 903, 0, 666, 704, 713, 714,
	526, 737, 420, 628, 630, 43, 0, 0, 69, 0,
	78, 0, 80, 81, 0, 993, 994, 996, 995, 997,
	0, 498, 488, 0, 776, 0, 0, 782, 0, 789,
	797, 798, 803, 804, 821, 0, 0, 823, 0, 0,
	930, 0, 901, 910, 923, 0, 0, 705, 705, 705,
	705, 0, 904, 706, 1275, 0, 0, 710, 711, 715,
	746, 0, 53, 0, 55, 57, 58, 875, 66, 67,
	71, 79, 0, 497, 0, 752, 0, 754, 0, 0,
	0, 0, 0, 786, 0, 828, 829, 822, 825, 826,
	899, 909, 911, 912, 0, 924, 925, 926, 928, 852,
	853, 854, 855, 0, 0, 708, 0, 44, 45, 0,
	54, 0, 0, 1002, 499, 0, 756, 0, 777, 0,
	0, 0, 0, 0, 0, 0, 900, 913, 0, 914,
	0, 0, 0, 856, 707, 709, 0, 0, 56, 876,
	753, 750, 0, 788, 778, 0, 780, 0, 0, 0,
	0, 915, 917, 918, 0, 0, 916, 46, 47, 48,
	0, 0, 758, 0, 774, 779, 781, 783, 0, 787,
	785, 919, 921, 920, 877, 757, 0, 770, 755, 0,
	784, 759, -2, 0, 775, 760, -2, 0, 768, 0,
	0, 761, 769, 0, 764, 0, 0, 0, 763, 0,
	-2, 771, 0, 0, 765, -2, 0, 773, 772,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 519,
	104, 103, 105, 3, 520, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 521, 115, 522, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:603
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:609
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:643
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:648
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:654
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:674
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:680
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:687
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:695
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:701
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:710
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:718
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:743
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:759
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:765
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:769
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:775
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:782
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:791
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:795
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:799
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:818
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:827
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:838
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:842
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:848
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:852
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:858
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:862
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:868
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:892
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:911
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:915
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:919
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:936
		{
			yyVAL.str = ""
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:940
		{
			yyVAL.str = yyDollar[3].str
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:945
		{
			yyVAL.str = "\n"
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:949
		{
			yyVAL.str = yyDollar[3].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:958
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:982
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:986
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:998
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1016
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1033
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1056
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1060
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1064
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1092
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1103
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1130
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1143
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1156
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1168
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1175
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1183
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1219
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1223
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1229
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1236
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1245
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1249
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1323
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1327
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1331
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1335
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1339
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1343
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1347
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1351
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1355
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1359
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1363
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1391
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1403
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1407
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1411
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1415
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1419
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1423
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1427
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1431
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1451
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1463
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1486
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1530
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1547
		{
			yyVAL.str = yyDollar[3].str
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1553
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1557
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1588
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1596
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1619
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1642
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1649
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1656
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1695
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1705
		{
			yyVAL.str = yyDollar[1].str
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1712
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1718
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1722
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1733
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1782
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1786
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1794
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1799
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1804
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1810
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1823
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1837
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1847
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1876
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1880
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1886
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1946
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1962
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1982
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1992
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2033
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2037
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2043
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2054
		{
			yyVAL.str = "true"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2055
		{
			yyVAL.str = "false"
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2056
		{
			yyVAL.str = yyDollar[1].str
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = &tree.AlterView{
				Name:      yyDollar[6].tableNameUnion(),
				ColNames:  yyDollar[7].identifierListUnion(),
				AsSource:  yyDollar[9].selectUnion(),
				Temporary: yyDollar[2].boolValUnion(),
				IfExists:  yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2096
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2102
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2113
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2124
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2128
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2133
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2137
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2146
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2178
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2194
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2198
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2202
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2206
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2210
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2218
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2222
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2228
		{
			yyVAL.item = nil
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2233
		{
			yyVAL.item = nil
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2266
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2279
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2290
		{
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2294
		{
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2341
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2349
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2367
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2374
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2384
		{
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2386
		{
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2395
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2434
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2507
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2512
		{
			yyVAL.str = ""
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2516
		{
			yyVAL.str = yyDollar[2].str
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2522
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2535
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2539
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2554
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2560
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2573
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2577
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2581
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2591
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2610
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2628
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2632
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2647
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2656
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2666
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2672
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2684
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2692
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2697
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2704
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2720
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2733
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2744
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2748
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2754
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2759
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2766
		{
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2768
		{
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2771
		{
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2780
		{
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2784
		{
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2789
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2798
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2805
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2811
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2819
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2833
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2853
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2866
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2872
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2876
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2882
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2896
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2903
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2912
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2928
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2952
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2975
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2979
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2994
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2998
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3004
		{
			yyVAL.str = yyDollar[1].str
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3008
		{
			yyVAL.str = yyDollar[3].str
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3014
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3018
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3024
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3029
		{
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3040
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3044
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3051
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3060
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3066
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3070
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3076
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3080
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3102
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3116
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3134
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3159
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3170
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3183
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3187
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3192
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3196
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3203
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3208
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3215
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3221
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3233
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3237
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3247
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3263
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3267
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3285
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3294
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3317
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3323
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3329
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3333
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3344
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3348
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3352
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3357
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3361
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3365
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3371
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3381
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3385
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3435
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3508
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3555
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3559
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3563
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3576
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3585
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3600
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3604
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3610
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3614
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3618
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3622
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3627
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3635
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3641
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3649
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3657
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3667
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3682
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3700
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3710
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3714
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3724
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3728
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3732
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3736
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3742
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3752
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3756
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3762
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3772
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3778
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3784
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3788
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3792
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3802
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3808
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3812
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3818
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3822
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3828
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3832
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3842
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3855
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3861
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3867
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3880
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3891
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3898
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3902
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3908
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3918
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3922
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3926
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3931
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3939
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3943
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3952
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3956
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3960
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3964
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3969
		{
			yyVAL.str = ""
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3973
		{
			yyVAL.str = yyDollar[1].str
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3977
		{
			yyVAL.str = yyDollar[2].str
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3986
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3990
		{
			yyVAL.str = yyDollar[1].str
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3994
		{
			yyVAL.str = yyDollar[2].str
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3998
		{
			yyVAL.str = yyDollar[1].str
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4002
		{
			yyVAL.str = yyDollar[2].str
		}
	case 657:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4036
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[6].tableNameUnion(),
				ColNames:    yyDollar[7].identifierListUnion(),
				AsSource:    yyDollar[9].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4047
		{
		}
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4052
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4064
		{
			yyVAL.str = yyDollar[1].str
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4070
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4080
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4084
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4090
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4097
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4103
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4111
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4117
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4124
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4132
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4147
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4159
		{
			yyVAL.str = yyDollar[1].str
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4164
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4170
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4178
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4284
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4288
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4294
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4304
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4308
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4314
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4324
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4341
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4347
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4354
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4360
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4373
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4382
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4386
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4392
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4421
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4427
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4450
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4472
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4484
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4488
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4494
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4498
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4504
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4509
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4514
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4518
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4522
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4530
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4563
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4569
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4573
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4579
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4592
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4596
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4602
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4614
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4636
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4643
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4657
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4666
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4670
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4675
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4679
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4686
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4710
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4724
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4742
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4755
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4761
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4765
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4771
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4780
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4794
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4800
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4804
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4810
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4817
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4826
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4830
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4839
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4844
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4848
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4853
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4857
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4867
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4871
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4882
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4890
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4926
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4936
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4946
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4950
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4955
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4968
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4974
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4978
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4982
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4988
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4992
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5012
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5020
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5024
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5044
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5048
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5052
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5056
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5060
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5064
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5068
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5072
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5076
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5080
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5084
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5088
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5092
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5096
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5100
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5107
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5111
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5117
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5122
		{
			yyVAL.str = ""
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5126
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5130
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5136
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5144
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5152
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5156
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5170
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5174
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5183
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5188
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5194
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5205
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5211
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5215
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5221
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5231
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5237
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5246
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5255
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5278
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5287
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5297
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5305
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5311
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5315
		{
			yyVAL.str = yyDollar[1].str
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5325
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5331
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5337
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5351
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5364
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5368
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5372
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5383
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5400
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5406
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5410
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5428
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5432
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5436
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5444
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5448
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5452
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5456
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5460
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5464
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5468
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5481
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5487
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5491
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5496
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5500
		{
			yyVAL.str = yyDollar[1].str
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5506
		{
			yyVAL.str = ""
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5510
		{
			yyVAL.str = yyDollar[2].str
		}
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5516
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5528
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5535
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5542
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5549
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5556
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5565
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5571
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5577
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5581
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5585
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5589
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5593
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5598
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5605
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5609
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5613
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5622
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5627
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5631
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5647
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5657
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5665
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5669
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5673
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5681
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5685
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5689
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5693
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5697
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5701
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5707
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5711
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5715
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5719
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5723
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5727
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5731
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5735
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5739
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5743
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5747
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5751
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5756
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5764
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5768
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5772
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5781
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5785
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5789
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5793
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5802
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5811
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5817
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5821
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5827
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5837
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5854
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5871
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5884
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5897
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5909
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5938
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5953
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5970
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5985
		{
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5995
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5999
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6005
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6009
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6017
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6021
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6025
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6031
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6038
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6051
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6058
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6067
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6076
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6086
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6096
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6105
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6114
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6124
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6134
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6144
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6154
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6164
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6174
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6184
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6194
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6204
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6214
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6224
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6234
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6259
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6267
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6275
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6283
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6292
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6309
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6318
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6326
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6334
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6343
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6352
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6374
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6410
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6422
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6434
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6444
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6452
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6466
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6478
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6486
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6497
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6506
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6515
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6523
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6533
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6541
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6549
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6563
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6573
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6592
		{
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6594
		{
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6635
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6645
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6649
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6653
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6659
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6668
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6674
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6678
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6685
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6689
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6693
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6701
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6705
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6709
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6713
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6719
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6723
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6727
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6731
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6735
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6739
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6743
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6747
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6751
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6755
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6763
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6767
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6771
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6775
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6779
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6783
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6787
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6791
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6801
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6807
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6811
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6822
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6832
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6840
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6844
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6856
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6866
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6870
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6880
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6884
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6897
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6902
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6906
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6910
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6914
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6918
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6922
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6936
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6940
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6947
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6958
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6963
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6969
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6993
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7005
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7018
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7031
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7044
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7057
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7070
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7083
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7096
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7109
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7135
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7150
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7173
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7207
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7255
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7272
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7284
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7304
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7324
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7344
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7360
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7373
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7386
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7399
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7412
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7424
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7436
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7448
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7460
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7472
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7484
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7496
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7508
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7520
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7533
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7546
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7561
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7569
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7578
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7588
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7611
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7616
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7622
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7629
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7633
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7638
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7642
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7648
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7661
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7677
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7684
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7691
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7700
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7704
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7708
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7714
		{
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7716
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7726
		{
			yyVAL.str = ""
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7730
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

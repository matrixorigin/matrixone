// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PUBLICATION = 57624
const SUBSCRIPTIONS = 57625
const PUBLICATIONS = 57626
const PROPERTIES = 57627
const PARSER = 57628
const VISIBLE = 57629
const INVISIBLE = 57630
const BTREE = 57631
const HASH = 57632
const RTREE = 57633
const BSI = 57634
const ZONEMAP = 57635
const LEADING = 57636
const BOTH = 57637
const TRAILING = 57638
const UNKNOWN = 57639
const EXPIRE = 57640
const ACCOUNT = 57641
const ACCOUNTS = 57642
const UNLOCK = 57643
const DAY = 57644
const NEVER = 57645
const PUMP = 57646
const MYSQL_COMPATBILITY_MODE = 57647
const SECOND = 57648
const ASCII = 57649
const COALESCE = 57650
const COLLATION = 57651
const HOUR = 57652
const MICROSECOND = 57653
const MINUTE = 57654
const MONTH = 57655
const QUARTER = 57656
const REPEAT = 57657
const REVERSE = 57658
const ROW_COUNT = 57659
const WEEK = 57660
const REVOKE = 57661
const FUNCTION = 57662
const PRIVILEGES = 57663
const TABLESPACE = 57664
const EXECUTE = 57665
const SUPER = 57666
const GRANT = 57667
const OPTION = 57668
const REFERENCES = 57669
const REPLICATION = 57670
const SLAVE = 57671
const CLIENT = 57672
const USAGE = 57673
const RELOAD = 57674
const FILE = 57675
const TEMPORARY = 57676
const ROUTINE = 57677
const EVENT = 57678
const SHUTDOWN = 57679
const NULLX = 57680
const AUTO_INCREMENT = 57681
const APPROXNUM = 57682
const SIGNED = 57683
const UNSIGNED = 57684
const ZEROFILL = 57685
const ENGINES = 57686
const LOW_CARDINALITY = 57687
const ADMIN_NAME = 57688
const RANDOM = 57689
const SUSPEND = 57690
const ATTRIBUTE = 57691
const HISTORY = 57692
const REUSE = 57693
const CURRENT = 57694
const OPTIONAL = 57695
const FAILED_LOGIN_ATTEMPTS = 57696
const PASSWORD_LOCK_TIME = 57697
const UNBOUNDED = 57698
const SECONDARY = 57699
const USER = 57700
const IDENTIFIED = 57701
const CIPHER = 57702
const ISSUER = 57703
const X509 = 57704
const SUBJECT = 57705
const SAN = 57706
const REQUIRE = 57707
const SSL = 57708
const NONE = 57709
const PASSWORD = 57710
const MAX_QUERIES_PER_HOUR = 57711
const MAX_UPDATES_PER_HOUR = 57712
const MAX_CONNECTIONS_PER_HOUR = 57713
const MAX_USER_CONNECTIONS = 57714
const FORMAT = 57715
const VERBOSE = 57716
const CONNECTION = 57717
const TRIGGERS = 57718
const PROFILES = 57719
const LOAD = 57720
const INFILE = 57721
const TERMINATED = 57722
const OPTIONALLY = 57723
const ENCLOSED = 57724
const ESCAPED = 57725
const STARTING = 57726
const LINES = 57727
const ROWS = 57728
const IMPORT = 57729
const MODUMP = 57730
const OVER = 57731
const PRECEDING = 57732
const FOLLOWING = 57733
const GROUPS = 57734
const DATABASES = 57735
const TABLES = 57736
const SEQUENCES = 57737
const EXTENDED = 57738
const FULL = 57739
const PROCESSLIST = 57740
const FIELDS = 57741
const COLUMNS = 57742
const OPEN = 57743
const ERRORS = 57744
const WARNINGS = 57745
const INDEXES = 57746
const SCHEMAS = 57747
const NODE = 57748
const LOCKS = 57749
const TABLE_NUMBER = 57750
const COLUMN_NUMBER = 57751
const TABLE_VALUES = 57752
const NAMES = 57753
const GLOBAL = 57754
const SESSION = 57755
const ISOLATION = 57756
const LEVEL = 57757
const READ = 57758
const WRITE = 57759
const ONLY = 57760
const REPEATABLE = 57761
const COMMITTED = 57762
const UNCOMMITTED = 57763
const SERIALIZABLE = 57764
const LOCAL = 57765
const EVENTS = 57766
const PLUGINS = 57767
const CURRENT_TIMESTAMP = 57768
const DATABASE = 57769
const CURRENT_TIME = 57770
const LOCALTIME = 57771
const LOCALTIMESTAMP = 57772
const UTC_DATE = 57773
const UTC_TIME = 57774
const UTC_TIMESTAMP = 57775
const REPLACE = 57776
const CONVERT = 57777
const SEPARATOR = 57778
const TIMESTAMPDIFF = 57779
const CURRENT_DATE = 57780
const CURRENT_USER = 57781
const CURRENT_ROLE = 57782
const SECOND_MICROSECOND = 57783
const MINUTE_MICROSECOND = 57784
const MINUTE_SECOND = 57785
const HOUR_MICROSECOND = 57786
const HOUR_SECOND = 57787
const HOUR_MINUTE = 57788
const DAY_MICROSECOND = 57789
const DAY_SECOND = 57790
const DAY_MINUTE = 57791
const DAY_HOUR = 57792
const YEAR_MONTH = 57793
const SQL_TSI_HOUR = 57794
const SQL_TSI_DAY = 57795
const SQL_TSI_WEEK = 57796
const SQL_TSI_MONTH = 57797
const SQL_TSI_QUARTER = 57798
const SQL_TSI_YEAR = 57799
const SQL_TSI_SECOND = 57800
const SQL_TSI_MINUTE = 57801
const RECURSIVE = 57802
const CONFIG = 57803
const DRAINER = 57804
const MATCH = 57805
const AGAINST = 57806
const BOOLEAN = 57807
const LANGUAGE = 57808
const WITH = 57809
const QUERY = 57810
const EXPANSION = 57811
const ADDDATE = 57812
const BIT_AND = 57813
const BIT_OR = 57814
const BIT_XOR = 57815
const CAST = 57816
const COUNT = 57817
const APPROX_COUNT_DISTINCT = 57818
const APPROX_PERCENTILE = 57819
const CURDATE = 57820
const CURTIME = 57821
const DATE_ADD = 57822
const DATE_SUB = 57823
const EXTRACT = 57824
const GROUP_CONCAT = 57825
const MAX = 57826
const MID = 57827
const MIN = 57828
const NOW = 57829
const POSITION = 57830
const SESSION_USER = 57831
const STD = 57832
const STDDEV = 57833
const MEDIAN = 57834
const STDDEV_POP = 57835
const STDDEV_SAMP = 57836
const SUBDATE = 57837
const SUBSTR = 57838
const SUBSTRING = 57839
const SUM = 57840
const SYSDATE = 57841
const SYSTEM_USER = 57842
const TRANSLATE = 57843
const TRIM = 57844
const VARIANCE = 57845
const VAR_POP = 57846
const VAR_SAMP = 57847
const AVG = 57848
const NEXTVAL = 57849
const SETVAL = 57850
const CURRVAL = 57851
const LASTVAL = 57852
const ARROW = 57853
const ROW = 57854
const OUTFILE = 57855
const HEADER = 57856
const MAX_FILE_SIZE = 57857
const FORCE_QUOTE = 57858
const PARALLEL = 57859
const UNUSED = 57860
const BINDINGS = 57861
const DO = 57862
const DECLARE = 57863
const KILL = 57864
const QUERY_RESULT = 57865

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8947

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 100,
	21, 573,
	-2, 554,
	-1, 109,
	215, 776,
	-2, 847,
	-1, 130,
	42, 398,
	215, 398,
	242, 405,
	243, 405,
	421, 398,
	-2, 431,
	-1, 457,
	291, 93,
	396, 93,
	-2, 1414,
	-1, 519,
	67, 1220,
	-2, 1554,
	-1, 520,
	67, 1238,
	-2, 1525,
	-1, 524,
	67, 1239,
	-2, 1553,
	-1, 546,
	67, 1152,
	-2, 1613,
	-1, 547,
	67, 1153,
	-2, 1612,
	-1, 548,
	67, 1154,
	-2, 1602,
	-1, 549,
	67, 1577,
	-2, 1597,
	-1, 550,
	67, 1578,
	-2, 1598,
	-1, 551,
	67, 1579,
	-2, 1604,
	-1, 552,
	67, 1580,
	-2, 1587,
	-1, 553,
	67, 1581,
	-2, 1595,
	-1, 554,
	67, 1582,
	-2, 1605,
	-1, 555,
	67, 1583,
	-2, 1606,
	-1, 556,
	67, 1584,
	-2, 1611,
	-1, 557,
	67, 1585,
	-2, 1616,
	-1, 558,
	67, 1586,
	-2, 1617,
	-1, 560,
	67, 1217,
	-2, 1406,
	-1, 567,
	67, 1226,
	-2, 1432,
	-1, 571,
	67, 1230,
	-2, 1471,
	-1, 572,
	67, 1231,
	-2, 1549,
	-1, 580,
	67, 1241,
	-2, 1534,
	-1, 582,
	67, 1243,
	-2, 1544,
	-1, 583,
	67, 1244,
	-2, 1568,
	-1, 594,
	67, 1130,
	-2, 1607,
	-1, 595,
	67, 1131,
	-2, 1608,
	-1, 596,
	67, 1132,
	-2, 1609,
	-1, 603,
	21, 574,
	-2, 537,
	-1, 661,
	416, 431,
	417, 431,
	-2, 399,
	-1, 710,
	104, 1406,
	115, 1406,
	135, 1406,
	-2, 1381,
	-1, 749,
	21, 574,
	-2, 537,
	-1, 848,
	21, 573,
	-2, 1038,
	-1, 1190,
	67, 1288,
	-2, 1551,
	-1, 1191,
	67, 1289,
	-2, 1552,
	-1, 1403,
	1, 308,
	68, 308,
	541, 308,
	-2, 811,
	-1, 1645,
	68, 1367,
	136, 1367,
	-2, 1536,
	-1, 1646,
	68, 1367,
	136, 1367,
	-2, 1535,
	-1, 1647,
	68, 1345,
	136, 1345,
	-2, 1522,
	-1, 1648,
	68, 1346,
	136, 1346,
	-2, 1527,
	-1, 1649,
	68, 1347,
	136, 1347,
	-2, 1459,
	-1, 1650,
	68, 1348,
	136, 1348,
	-2, 1453,
	-1, 1651,
	68, 1349,
	136, 1349,
	-2, 1397,
	-1, 1652,
	68, 1350,
	136, 1350,
	-2, 1524,
	-1, 1653,
	68, 1351,
	136, 1351,
	-2, 1457,
	-1, 1654,
	68, 1352,
	136, 1352,
	-2, 1452,
	-1, 1655,
	68, 1353,
	136, 1353,
	-2, 1445,
	-1, 1657,
	68, 1356,
	136, 1356,
	-2, 1568,
	-1, 1658,
	68, 1336,
	136, 1336,
	-2, 1554,
	-1, 1659,
	68, 1365,
	136, 1365,
	-2, 1525,
	-1, 1660,
	68, 1365,
	136, 1365,
	-2, 1553,
	-1, 1661,
	68, 1365,
	136, 1365,
	-2, 1415,
	-1, 1662,
	68, 1363,
	136, 1363,
	-2, 1544,
	-1, 1663,
	68, 1360,
	136, 1360,
	-2, 1437,
	-1, 1664,
	67, 1318,
	68, 1318,
	136, 1318,
	358, 1318,
	359, 1318,
	360, 1318,
	-2, 1396,
	-1, 1665,
	67, 1319,
	68, 1319,
	136, 1319,
	358, 1319,
	359, 1319,
	360, 1319,
	-2, 1398,
	-1, 1666,
	67, 1322,
	68, 1322,
	136, 1322,
	358, 1322,
	359, 1322,
	360, 1322,
	-2, 1526,
	-1, 1667,
	67, 1324,
	68, 1324,
	136, 1324,
	358, 1324,
	359, 1324,
	360, 1324,
	-2, 1509,
	-1, 1668,
	67, 1326,
	68, 1326,
	136, 1326,
	358, 1326,
	359, 1326,
	360, 1326,
	-2, 1458,
	-1, 1669,
	67, 1328,
	68, 1328,
	136, 1328,
	358, 1328,
	359, 1328,
	360, 1328,
	-2, 1441,
	-1, 1670,
	67, 1329,
	68, 1329,
	136, 1329,
	358, 1329,
	359, 1329,
	360, 1329,
	-2, 1442,
	-1, 1671,
	67, 1331,
	68, 1331,
	136, 1331,
	358, 1331,
	359, 1331,
	360, 1331,
	-2, 1395,
	-1, 1672,
	68, 1370,
	136, 1370,
	358, 1370,
	359, 1370,
	360, 1370,
	-2, 1420,
	-1, 1673,
	68, 1370,
	136, 1370,
	358, 1370,
	359, 1370,
	360, 1370,
	-2, 1433,
	-1, 1674,
	68, 1373,
	136, 1373,
	358, 1373,
	359, 1373,
	360, 1373,
	-2, 1416,
	-1, 1675,
	68, 1370,
	136, 1370,
	358, 1370,
	359, 1370,
	360, 1370,
	-2, 1494,
	-1, 1688,
	1, 804,
	68, 804,
	541, 804,
	-2, 811,
	-1, 1795,
	21, 573,
	-2, 665,
	-1, 1962,
	1, 805,
	68, 805,
	541, 805,
	-2, 811,
	-1, 1974,
	65, 481,
	136, 481,
	-2, 942,
	-1, 1991,
	276, 1006,
	-2, 985,
	-1, 2239,
	276, 1006,
	-2, 986,
	-1, 2366,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 890,
	-1, 2369,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 890,
	-1, 2379,
	65, 481,
	136, 481,
	-2, 943,
	-1, 2467,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 891,
	-1, 2757,
	68, 862,
	136, 862,
	-2, 811,
	-1, 2761,
	68, 862,
	136, 862,
	-2, 811,
	-1, 2775,
	68, 866,
	136, 866,
	-2, 811,
	-1, 2780,
	68, 867,
	136, 867,
	-2, 811,
}

const yyPrivate = 57344

const yyLast = 31926

var yyAct = [...]int{
	486, 1404, 2761, 2760, 2740, 2769, 1256, 466, 1171, 2650,
	468, 2698, 2582, 488, 2668, 2251, 2690, 2444, 2604, 2439,
	2605, 1635, 2589, 2498, 2461, 2460, 2573, 2593, 2517, 2318,
	2319, 2459, 604, 2540, 879, 1020, 2442, 1322, 2508, 1365,
	151, 151, 1977, 2486, 516, 2466, 151, 403, 410, 2216,
	1174, 410, 2389, 1826, 2056, 1367, 2055, 1466, 2349, 2057,
	2042, 2261, 2240, 1789, 1723, 2052, 2316, 2049, 470, 1862,
	2310, 1536, 2078, 1436, 1643, 2293, 421, 1505, 1728, 2191,
	2188, 1479, 2260, 2214, 415, 1697, 2186, 1167, 743, 1318,
	1963, 1075, 1641, 709, 2137, 1861, 459, 465, 599, 981,
	1532, 1407, 2098, 460, 1513, 1514, 1332, 2092, 1778, 1459,
	1506, 1903, 641, 715, 1945, 997, 1790, 1941, 1439, 408,
	31, 1995, 1724, 1340, 1531, 999, 407, 19, 1696, 719,
	43, 3, 1255, 1437, 718, 30, 1028, 916, 599, 1352,
	1829, 1165, 1564, 1533, 1029, 404, 8, 741, 405, 6,
	151, 469, 1084, 1639, 1313, 406, 7, 99, 1375, 1681,
	1463, 1623, 1010, 1220, 1543, 1376, 458, 477, 1204, 1156,
	399, 760, 1104, 713, 1512, 1490, 43, 1164, 1509, 701,
	1351, 1797, 467, 2467, 1170, 1067, 1323, 961, 1392, 396,
	640, 1054, 1226, 601, 702, 1225, 423, 16, 9, 1006,
	1021, 4, 1103, 979, 140, 1550, 143, 409, 1864, 424,
	2131, 656, 638, 2131, 603, 1540, 146, 145, 2513, 2509,
	1827, 2317, 1336, 2633, 667, 874, 1508, 602, 880, 144,
	1246, 39, 132, 110, 1742, 2452, 2548, 612, 780, 2451,
	2557, 144, 1849, 39, 132, 110, 1537, 144, 392, 144,
	1857, 419, 2641, 144, 144, 2160, 1444, 144, 413, 1548,
	144, 1685, 1056, 1037, 144, 31, 1038, 1123, 682, 1116,
	1813, 681, 19, 814, 1814, 43, 420, 740, 2686, 2549,
	30, 1477, 1830, 1120, 677, 1113, 141, 1447, 1448, 2113,
	2106, 8, 598, 98, 6, 1943, 150, 150, 141, 716,
	98, 7, 394, 2526, 1122, 144, 1115, 39, 132, 110,
	141, 141, 147, 1057, 141, 1017, 1109, 141, 1026, 1027,
	931, 141, 1388, 1173, 144, 137, 39, 132, 110, 2684,
	613, 589, 125, 588, 590, 591, 138, 592, 593, 812,
	712, 98, 2608, 2609, 795, 711, 1024, 796, 1942, 1040,
	1023, 1026, 1027, 807, 686, 1904, 83, 2634, 2635, 2672,
	2673, 2515, 141, 2518, 2519, 2520, 2521, 2099, 2320, 2575,
	2320, 683, 2575, 1157, 2578, 798, 1161, 2100, 2511, 2101,
	763, 141, 1242, 1844, 1176, 605, 1239, 1141, 754, 1460,
	1241, 1238, 1240, 1244, 1245, 2588, 151, 753, 1243, 2329,
	1160, 2640, 2350, 1452, 1152, 1544, 745, 2457, 817, 818,
	819, 816, 410, 410, 2202, 151, 2357, 1769, 2192, 1680,
	1948, 752, 919, 1936, 1620, 748, 750, 2258, 2525, 2124,
	685, 809, 133, 134, 2527, 135, 136, 1854, 2200, 783,
	939, 943, 945, 947, 949, 950, 952, 793, 956, 953,
	954, 955, 2046, 2532, 934, 935, 936, 937, 917, 918,
	940, 2126, 920, 763, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 932, 938, 1162, 747, 850, 2643,
	2644, 1771, 2607, 942, 944, 946, 948, 951, 1015, 1175,
	2197, 2198, 1549, 2535, 1039, 775, 2454, 1159, 2207, 684,
	109, 131, 142, 1774, 81, 2199, 794, 749, 1307, 1306,
	1049, 1456, 1475, 1476, 725, 720, 724, 726, 2688, 109,
	933, 142, 130, 124, 123, 2679, 714, 810, 811, 45,
	43, 43, 1249, 1250, 1251, 1252, 1253, 1254, 1247, 1248,
	2196, 130, 2545, 2597, 2213, 723, 2594, 805, 806, 2220,
	454, 1970, 412, 456, 1957, 1958, 1959, 1960, 455, 411,
	716, 765, 764, 2409, 418, 2487, 2488, 2489, 2491, 2490,
	2754, 756, 757, 2683, 800, 797, 2770, 801, 2652, 2708,
	1182, 1185, 1186, 2715, 1005, 2564, 1538, 126, 127, 128,
	1538, 1183, 2500, 728, 1538, 1553, 1555, 1556, 2402, 2719,
	730, 461, 2393, 1752, 1158, 803, 2648, 2649, 1751, 2652,
	758, 2415, 2416, 139, 2397, 978, 980, 721, 2333, 768,
	769, 2130, 2275, 2771, 2693, 1954, 772, 1026, 1027, 716,
	1063, 93, 2027, 958, 2194, 129, 1062, 94, 729, 773,
	641, 2547, 1019, 1018, 765, 764, 856, 1042, 1877, 1878,
	1004, 1003, 751, 2777, 2741, 852, 853, 854, 855, 2642,
	2541, 2341, 744, 2765, 2371, 788, 1565, 982, 790, 419,
	40, 771, 910, 2572, 1025, 1551, 722, 799, 1026, 1027,
	1261, 1055, 40, 151, 780, 1051, 1539, 602, 1850, 1110,
	95, 1022, 1804, 2546, 1016, 774, 791, 1947, 1541, 2453,
	38, 1461, 987, 111, 599, 599, 599, 2193, 2203, 1079,
	1079, 1732, 151, 804, 1858, 111, 2129, 983, 984, 985,
	986, 111, 988, 111, 2636, 2637, 992, 111, 111, 410,
	980, 111, 1107, 1107, 111, 2689, 802, 2458, 111, 991,
	2694, 990, 989, 414, 2533, 727, 40, 1118, 2182, 1086,
	1951, 1952, 2127, 1552, 890, 891, 1453, 1153, 2080, 2082,
	635, 636, 637, 994, 1950, 779, 2084, 1139, 784, 2139,
	2138, 1801, 941, 1060, 2499, 1803, 1802, 1013, 714, 111,
	1079, 1450, 1079, 753, 1124, 1031, 1032, 2764, 1034, 1035,
	1036, 786, 1451, 1007, 1011, 1011, 1077, 1077, 111, 1058,
	1059, 1081, 1800, 789, 792, 963, 1449, 1172, 688, 689,
	1184, 2473, 965, 1012, 1007, 1736, 1007, 2720, 815, 2290,
	2195, 2776, 2398, 2399, 1787, 1554, 2395, 785, 1134, 1135,
	2394, 603, 96, 97, 101, 1154, 1733, 1368, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1050, 2783, 996, 1368, 1215, 1216, 2028, 2030, 2031, 2032,
	2029, 678, 1224, 1114, 1455, 2691, 2692, 1121, 2286, 1041,
	1030, 1043, 1828, 1033, 2782, 1274, 1264, 1265, 1266, 692,
	2773, 2755, 1169, 817, 818, 819, 816, 1148, 43, 1280,
	1281, 678, 1073, 1074, 1147, 1283, 787, 43, 1070, 1071,
	1072, 2225, 1288, 1289, 1746, 1596, 1061, 778, 1595, 2750,
	599, 2744, 780, 1144, 606, 2081, 1143, 1138, 1683, 815,
	1187, 1087, 1150, 2743, 392, 1137, 606, 691, 2158, 1130,
	1788, 694, 693, 1101, 2211, 1108, 1100, 1125, 2724, 1047,
	1735, 680, 815, 2700, 679, 1739, 1737, 2662, 2774, 1546,
	1738, 1126, 2615, 1308, 2610, 2566, 2565, 1788, 1329, 1832,
	2367, 2562, 603, 1633, 1166, 1146, 1145, 1629, 1085, 1142,
	1815, 680, 1976, 2290, 679, 1163, 815, 2751, 2561, 1546,
	1273, 1008, 151, 1849, 1350, 1079, 1354, 1788, 1356, 1357,
	1168, 1546, 2560, 151, 1330, 690, 641, 1938, 1257, 1366,
	1260, 1975, 2559, 1079, 777, 1493, 1546, 1051, 1275, 1837,
	1206, 2701, 403, 1815, 1682, 2663, 1537, 1155, 1333, 1282,
	2537, 1284, 2537, 2567, 1701, 1320, 1321, 1213, 1214, 2537,
	1387, 815, 817, 818, 819, 816, 1634, 1600, 1393, 1393,
	1349, 1051, 1051, 959, 1051, 2536, 2537, 151, 1528, 1350,
	1350, 1391, 2417, 1079, 1434, 1446, 1473, 2277, 2212, 2075,
	2537, 1799, 1259, 1355, 820, 599, 1927, 1079, 1925, 1380,
	2537, 995, 1311, 849, 1314, 1315, 778, 1632, 1923, 1218,
	1009, 858, 1729, 1732, 1386, 1285, 1921, 1389, 1390, 1358,
	1359, 1360, 1909, 151, 1350, 1079, 1865, 1484, 151, 151,
	1487, 746, 863, 1489, 1303, 1430, 1431, 1495, 733, 738,
	739, 151, 1064, 2537, 1847, 2738, 1274, 1274, 1516, 2356,
	1815, 1841, 1976, 1274, 1274, 2278, 1491, 1788, 1523, 746,
	1374, 1839, 695, 832, 1928, 633, 1926, 1834, 780, 1395,
	1457, 1325, 1700, 1328, 1382, 1383, 1922, 1377, 1007, 1379,
	1481, 1337, 1366, 1331, 1922, 1630, 1079, 1535, 1604, 1381,
	815, 1384, 1603, 1472, 815, 489, 498, 1462, 1575, 1353,
	1011, 490, 1483, 497, 491, 495, 494, 492, 493, 1485,
	1486, 1872, 1701, 1369, 1370, 1362, 1363, 1371, 1385, 1835,
	2702, 1529, 1501, 2382, 817, 818, 819, 816, 1517, 1840,
	1397, 1378, 1398, 1373, 2733, 1835, 1396, 1594, 1733, 2230,
	1701, 2226, 1008, 1726, 1558, 1585, 2094, 1727, 1730, 1562,
	1563, 1511, 2121, 1629, 1978, 499, 815, 1394, 1511, 1584,
	815, 1403, 1852, 1433, 1470, 1471, 1435, 1353, 1347, 1574,
	1583, 1545, 1131, 1851, 1458, 1843, 1046, 1716, 1048, 1361,
	1052, 1053, 1591, 1576, 1527, 496, 1467, 1468, 1469, 1498,
	1346, 43, 1127, 957, 861, 766, 746, 2721, 687, 1731,
	1263, 1262, 1482, 716, 1478, 815, 735, 736, 737, 1166,
	716, 1743, 2291, 815, 1499, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1601, 2282, 1102, 2279, 815, 1520, 1066,
	1608, 1518, 1525, 1399, 1526, 2598, 1221, 2221, 815, 1546,
	1132, 1009, 1521, 2132, 1522, 833, 834, 835, 836, 837,
	838, 839, 832, 2047, 1530, 835, 836, 837, 838, 839,
	832, 1838, 2474, 1106, 1106, 840, 841, 833, 834, 835,
	836, 837, 838, 839, 832, 459, 753, 1676, 2599, 1480,
	1806, 2374, 2372, 755, 1480, 1480, 1557, 1566, 1068, 151,
	151, 151, 1294, 1698, 1000, 716, 2222, 1480, 1001, 1069,
	1644, 1212, 1881, 1705, 1051, 2475, 1206, 1559, 2151, 1221,
	1065, 1571, 1709, 1570, 819, 816, 1209, 1211, 1208, 1348,
	1210, 2676, 1560, 1561, 2375, 2373, 1051, 816, 956, 953,
	954, 955, 753, 2405, 1886, 1741, 1885, 1884, 1882, 2223,
	2602, 2404, 2386, 817, 818, 819, 816, 1177, 1178, 1179,
	1180, 1181, 1874, 2150, 2102, 2005, 1722, 1636, 1637, 2004,
	1707, 1999, 2718, 817, 818, 819, 816, 1994, 1710, 1711,
	2759, 2747, 1792, 1792, 1446, 1792, 817, 818, 819, 816,
	2709, 1719, 823, 824, 825, 826, 827, 828, 829, 821,
	2704, 1222, 1223, 1677, 2653, 2623, 2600, 1258, 2455, 2550,
	1883, 2050, 2480, 1079, 151, 1268, 2717, 2354, 454, 1625,
	1587, 456, 817, 818, 819, 816, 455, 1278, 2038, 753,
	2036, 2034, 1107, 2477, 1446, 2476, 2024, 1821, 1279, 1823,
	2376, 1745, 817, 818, 819, 816, 1794, 2456, 1798, 2353,
	1712, 1638, 2201, 1644, 2177, 1718, 2355, 1796, 1684, 2176,
	2117, 2096, 1713, 2022, 2021, 1714, 2592, 2037, 1845, 2035,
	2033, 1535, 1706, 1586, 1896, 2023, 1011, 2772, 1079, 2020,
	1079, 2017, 1079, 2011, 2187, 1573, 1818, 753, 2008, 817,
	818, 819, 816, 2007, 1715, 1825, 817, 818, 819, 816,
	1811, 1717, 1334, 1628, 1627, 1626, 1338, 1820, 1622, 1341,
	1621, 1859, 1128, 976, 1286, 1287, 1079, 1890, 1290, 1291,
	1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	2678, 2440, 1897, 1772, 2674, 2446, 2638, 1079, 1887, 1888,
	2581, 716, 817, 818, 819, 816, 1899, 2570, 2534, 2510,
	817, 818, 819, 816, 2465, 1690, 1691, 1692, 817, 818,
	819, 816, 1579, 2438, 2436, 2421, 1812, 1855, 1807, 1808,
	1809, 2419, 2043, 2388, 1901, 2352, 2351, 2348, 1708, 2338,
	2332, 1744, 1817, 1747, 1748, 1749, 1750, 2445, 1876, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1077, 1819, 1870, 1856, 1889, 2414, 1334,
	817, 818, 819, 816, 1848, 1334, 1334, 1863, 2285, 1853,
	1846, 2283, 2335, 1079, 1077, 2273, 1955, 1929, 1898, 2272,
	1350, 817, 818, 819, 816, 2181, 1974, 2175, 817, 818,
	819, 816, 1980, 1866, 1867, 817, 818, 819, 816, 2154,
	2128, 2097, 1880, 2087, 2552, 2025, 1905, 1989, 2018, 1939,
	2014, 1910, 1166, 2013, 2012, 1631, 1993, 545, 544, 2153,
	1085, 1624, 817, 818, 819, 816, 2001, 2002, 2003, 1502,
	1500, 1343, 2006, 1129, 889, 885, 1965, 884, 1869, 862,
	1320, 1321, 817, 818, 819, 816, 1792, 742, 1933, 2152,
	2369, 2368, 2366, 2343, 1983, 2342, 2039, 2337, 1985, 1971,
	1918, 2324, 1930, 2309, 2308, 1350, 753, 1446, 1446, 1446,
	1446, 1981, 817, 818, 819, 816, 2231, 2156, 753, 1446,
	1964, 2149, 1792, 817, 818, 819, 816, 1991, 2141, 2136,
	2058, 1315, 2091, 1937, 1924, 1079, 1996, 144, 1996, 1920,
	132, 110, 2058, 1919, 1609, 1599, 151, 151, 1597, 31,
	1568, 1593, 1953, 1572, 1973, 2748, 19, 1592, 1997, 43,
	1590, 1979, 1982, 1917, 30, 1581, 1274, 1578, 1274, 1986,
	1987, 2112, 2071, 1577, 2116, 8, 1992, 1277, 6, 1276,
	1079, 1998, 1988, 2123, 1984, 7, 817, 818, 819, 816,
	1325, 1267, 1328, 1582, 141, 2408, 1091, 1353, 144, 1089,
	2732, 1589, 2019, 2726, 831, 830, 840, 841, 833, 834,
	835, 836, 837, 838, 839, 832, 2044, 2048, 2716, 1602,
	2713, 1333, 1605, 1606, 1607, 2070, 2111, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 2073, 1618, 2072, 2074, 603,
	2059, 2060, 2061, 2062, 2109, 1944, 2088, 2711, 2622, 2568,
	2115, 881, 2144, 1916, 2146, 141, 1310, 2120, 2125, 2085,
	2496, 2484, 2083, 2095, 2481, 2429, 2427, 2412, 2411, 753,
	2105, 2108, 2110, 2103, 2410, 2190, 817, 818, 819, 816,
	2119, 2407, 1972, 2401, 2107, 2205, 2361, 151, 2162, 1319,
	2133, 2114, 1312, 1644, 998, 2040, 2134, 753, 753, 753,
	1702, 2000, 1968, 2140, 1967, 2145, 1446, 1698, 1966, 2229,
	2009, 2010, 2147, 2148, 1324, 2233, 2015, 2016, 1327, 1316,
	1833, 1722, 1722, 1722, 882, 2262, 2264, 1805, 2262, 2262,
	2300, 1767, 1699, 1207, 2045, 2269, 141, 1488, 1345, 1317,
	1079, 1079, 1151, 1117, 2161, 960, 908, 907, 2163, 2164,
	2165, 2166, 629, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2183, 906, 2178, 905, 904, 2142, 2143, 2232, 903,
	902, 151, 2234, 2235, 901, 900, 2190, 899, 898, 2227,
	897, 2217, 2218, 2209, 1350, 1350, 2259, 2263, 2210, 896,
	2185, 2224, 2228, 895, 1964, 894, 893, 892, 888, 1334,
	1334, 1334, 2089, 2090, 887, 886, 883, 501, 100, 878,
	2265, 2266, 830, 840, 841, 833, 834, 835, 836, 837,
	838, 839, 832, 1106, 877, 1890, 875, 1077, 1077, 2267,
	874, 2270, 2271, 607, 608, 609, 610, 873, 1704, 1915,
	2237, 872, 2289, 871, 2236, 1914, 606, 870, 869, 2287,
	2288, 393, 2276, 868, 100, 867, 2281, 2301, 2284, 1913,
	151, 2280, 817, 818, 819, 816, 866, 2298, 817, 818,
	819, 816, 865, 1687, 1912, 631, 864, 626, 860, 616,
	2302, 2315, 817, 818, 819, 816, 628, 627, 859, 2305,
	2306, 2307, 1911, 782, 770, 1090, 2314, 817, 818, 819,
	816, 2294, 2295, 1873, 1908, 2658, 2299, 620, 2656, 2606,
	1907, 1891, 1892, 2297, 2325, 817, 818, 819, 816, 1894,
	1895, 2326, 2328, 1956, 1816, 2327, 1504, 817, 818, 819,
	816, 2331, 1900, 817, 818, 819, 816, 781, 1350, 2064,
	2063, 2067, 2065, 2208, 2365, 1906, 2068, 2066, 625, 717,
	2758, 1842, 624, 100, 1836, 1792, 1446, 2379, 614, 2179,
	2180, 1334, 619, 1935, 1931, 1932, 1341, 1902, 817, 818,
	819, 816, 1429, 2184, 2069, 2344, 1784, 1785, 1079, 617,
	82, 2387, 1893, 2347, 42, 148, 1871, 2346, 1831, 151,
	817, 818, 819, 816, 2432, 1304, 2431, 1860, 2264, 41,
	615, 962, 2381, 2360, 2359, 817, 818, 819, 816, 817,
	818, 819, 816, 2380, 632, 1678, 1217, 1350, 2377, 2383,
	1111, 753, 2384, 776, 389, 2587, 388, 1480, 390, 2378,
	2430, 1990, 2385, 2665, 2259, 1636, 1637, 1775, 618, 817,
	818, 819, 816, 391, 1940, 2058, 1694, 1364, 1344, 2434,
	1263, 1262, 2423, 1770, 753, 974, 975, 972, 973, 2413,
	1780, 1783, 1784, 1785, 1781, 2390, 1782, 1786, 1432, 2418,
	2420, 970, 971, 2422, 968, 969, 1045, 2243, 2058, 2425,
	2424, 1780, 1783, 1784, 1785, 1781, 1044, 1782, 1786, 808,
	2304, 1524, 753, 1079, 1079, 1002, 964, 2727, 753, 2646,
	2435, 2253, 2448, 2629, 2627, 2595, 2580, 630, 2441, 2579,
	607, 608, 609, 610, 2246, 2577, 2330, 2569, 2507, 2506,
	2449, 2241, 1722, 606, 2311, 2437, 2256, 2257, 2450, 2322,
	2321, 2312, 2242, 967, 606, 2093, 1368, 2118, 753, 2660,
	2659, 753, 753, 753, 1689, 2471, 2464, 2468, 1580, 2470,
	767, 2659, 2381, 2660, 2403, 2323, 1014, 50, 1366, 1474,
	2504, 1083, 1, 2478, 2479, 1334, 1342, 611, 2247, 2485,
	1334, 2076, 2493, 2494, 2495, 2362, 2363, 2364, 2482, 2447,
	1077, 2390, 2531, 2492, 2463, 2077, 2528, 2303, 2079, 2501,
	1542, 1768, 1679, 2204, 993, 634, 1269, 2502, 1136, 1741,
	732, 762, 1133, 761, 759, 1219, 2135, 503, 100, 100,
	717, 1507, 2041, 2503, 2664, 753, 2697, 2621, 2667, 2529,
	1149, 487, 2571, 2514, 2625, 2516, 2443, 753, 2155, 2538,
	1547, 813, 2104, 652, 539, 2543, 514, 2542, 876, 1119,
	1112, 2551, 2159, 734, 513, 2406, 2558, 2554, 2358, 1949,
	2544, 623, 731, 653, 1619, 2512, 1305, 2255, 2563, 1725,
	1326, 1309, 2472, 2370, 2219, 1969, 2768, 2757, 753, 2739,
	2725, 2651, 2753, 2682, 2714, 2576, 2574, 2524, 2522, 848,
	2523, 2707, 2647, 425, 2249, 1454, 597, 699, 2497, 1503,
	2591, 426, 1703, 2590, 2639, 2483, 621, 1686, 2616, 2619,
	622, 2596, 1962, 1961, 1188, 822, 2248, 2250, 1205, 2339,
	2340, 857, 2611, 2612, 2613, 2614, 464, 2601, 1569, 2620,
	476, 1946, 2252, 2086, 49, 48, 2632, 2628, 47, 2630,
	2631, 2626, 2268, 2624, 46, 1494, 155, 505, 154, 2618,
	2669, 485, 484, 483, 2645, 482, 1779, 1777, 1776, 1441,
	1440, 1492, 1734, 2671, 2657, 2655, 2654, 1400, 2603, 2555,
	2556, 2661, 2400, 2026, 2396, 2392, 2670, 2274, 2238, 2239,
	2245, 1693, 915, 911, 913, 914, 912, 753, 1879, 2675,
	1875, 2258, 1720, 1721, 2215, 977, 2530, 2345, 1642, 1640,
	2296, 2292, 2206, 2244, 2696, 1515, 2685, 2687, 1339, 2254,
	1934, 2680, 817, 818, 819, 816, 2699, 2695, 1442, 1438,
	2705, 1773, 753, 966, 1688, 74, 73, 80, 122, 2703,
	2706, 37, 2710, 2469, 2712, 600, 32, 27, 5, 29,
	28, 14, 2671, 2723, 15, 13, 1172, 1140, 12, 18,
	26, 25, 753, 24, 753, 2670, 2722, 92, 931, 91,
	2729, 23, 2731, 90, 2734, 89, 88, 87, 22, 11,
	86, 2699, 2735, 753, 85, 84, 1172, 2742, 1172, 2749,
	21, 2746, 2752, 79, 77, 20, 78, 75, 1246, 76,
	61, 60, 59, 2334, 71, 70, 2756, 1172, 69, 2763,
	2336, 68, 67, 2767, 66, 2766, 651, 58, 57, 56,
	55, 2775, 54, 72, 65, 64, 63, 2763, 2780, 2778,
	2779, 62, 2767, 53, 2781, 52, 51, 108, 107, 106,
	105, 104, 1088, 103, 102, 33, 34, 393, 35, 36,
	118, 931, 117, 831, 830, 840, 841, 833, 834, 835,
	836, 837, 838, 839, 832, 119, 121, 120, 115, 113,
	919, 100, 1598, 116, 909, 100, 114, 112, 44, 10,
	17, 2, 0, 0, 0, 0, 100, 0, 939, 943,
	945, 947, 949, 950, 952, 100, 956, 953, 954, 955,
	1246, 0, 934, 935, 936, 937, 917, 918, 940, 0,
	920, 0, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 932, 938, 0, 2677, 0, 0, 0, 0,
	0, 942, 944, 946, 948, 951, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 0, 2426, 0, 0, 2428,
	1242, 0, 0, 919, 1239, 0, 0, 0, 1241, 1238,
	1240, 1244, 1245, 2433, 0, 0, 1243, 0, 933, 0,
	0, 939, 943, 945, 947, 949, 950, 952, 0, 956,
	953, 954, 955, 0, 0, 934, 935, 936, 937, 917,
	918, 940, 0, 920, 0, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 932, 938, 843, 0, 847,
	0, 0, 0, 0, 942, 944, 946, 948, 951, 0,
	2730, 0, 0, 0, 844, 846, 842, 0, 845, 831,
	830, 840, 841, 833, 834, 835, 836, 837, 838, 839,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 933, 1242, 0, 0, 0, 1239, 0, 0, 0,
	1241, 1238, 1240, 1244, 1245, 0, 2728, 0, 1243, 831,
	830, 840, 841, 833, 834, 835, 836, 837, 838, 839,
	832, 0, 0, 0, 0, 2157, 0, 0, 0, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1249, 1250, 1251, 1252, 1253, 1254, 1247, 1248, 0, 0,
	0, 0, 0, 0, 2539, 831, 830, 840, 841, 833,
	834, 835, 836, 837, 838, 839, 832, 1868, 0, 0,
	0, 0, 0, 2553, 831, 830, 840, 841, 833, 834,
	835, 836, 837, 838, 839, 832, 0, 0, 0, 0,
	831, 830, 840, 841, 833, 834, 835, 836, 837, 838,
	839, 832, 831, 830, 840, 841, 833, 834, 835, 836,
	837, 838, 839, 832, 0, 0, 2586, 0, 0, 0,
	0, 0, 1445, 0, 0, 0, 0, 0, 0, 0,
	0, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1249, 1250, 1251, 1252, 1253, 1254, 1247, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	941, 0, 0, 0, 0, 0, 0, 326, 521, 0,
	0, 0, 0, 0, 0, 2586, 0, 0, 288, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	717, 478, 0, 0, 0, 233, 0, 0, 258, 100,
	0, 0, 512, 0, 0, 318, 272, 0, 0, 0,
	0, 568, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 502, 545, 544, 489,
	498, 0, 1567, 214, 153, 490, 0, 497, 491, 495,
	494, 492, 493, 941, 560, 0, 0, 0, 0, 0,
	0, 462, 475, 2583, 479, 831, 830, 840, 841, 833,
	834, 835, 836, 837, 838, 839, 832, 0, 2586, 0,
	0, 0, 0, 0, 0, 848, 0, 472, 473, 0,
	0, 0, 0, 522, 0, 474, 0, 0, 517, 499,
	500, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 2737, 305, 231, 244, 227, 285, 496,
	520, 524, 226, 582, 518, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	583, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 349, 0, 0, 566, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 519, 0, 308, 290,
	579, 463, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 564, 286, 0, 0, 578,
	559, 561, 562, 565, 569, 570, 571, 572, 573, 575,
	577, 581, 311, 1427, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 2584, 0, 1429, 0, 2585,
	0, 580, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 523, 276, 277, 278, 279, 567, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 1427, 1409, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 1429, 0, 589,
	563, 588, 590, 591, 587, 592, 593, 574, 481, 0,
	527, 585, 584, 586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 199, 0, 259,
	0, 300, 238, 552, 532, 533, 534, 480, 535, 530,
	531, 553, 525, 549, 550, 504, 528, 536, 548, 537,
	551, 554, 555, 594, 595, 543, 596, 540, 556, 547,
	546, 538, 526, 557, 558, 511, 506, 541, 542, 529,
	507, 508, 509, 510, 0, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 1402, 0, 0, 1401, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 1408, 1410, 1412,
	0, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1423, 1424,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1417, 0, 0, 0, 0, 0, 1428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 1408, 1410, 1412,
	0, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1423, 1424,
	1425, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1405, 1445, 1445, 1445, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 1428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1421, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	521, 0, 1421, 0, 0, 0, 0, 0, 0, 1411,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 512, 0, 0, 318, 272, 0,
	0, 0, 0, 568, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 502, 545,
	544, 489, 498, 0, 0, 214, 153, 490, 100, 497,
	491, 495, 494, 492, 493, 0, 560, 0, 0, 0,
	0, 0, 0, 462, 475, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 472,
	473, 0, 0, 0, 0, 522, 0, 474, 100, 0,
	517, 499, 500, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 496, 520, 524, 226, 582, 518, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 583, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 349, 0, 0, 566, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 519, 0,
	308, 290, 579, 463, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 1271,
	1270, 1272, 361, 240, 197, 198, 344, 564, 286, 0,
	0, 578, 559, 561, 562, 565, 569, 570, 571, 572,
	573, 575, 577, 581, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 1445, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 523, 276, 277, 278, 279, 567, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 589, 563, 588, 590, 591, 587, 592, 593, 574,
	481, 0, 527, 585, 584, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 552, 532, 533, 534, 480,
	535, 530, 531, 553, 525, 549, 550, 504, 528, 536,
	548, 537, 551, 554, 555, 594, 595, 543, 596, 540,
	556, 547, 546, 538, 526, 557, 558, 511, 506, 541,
	542, 529, 507, 508, 509, 510, 326, 521, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 512, 0, 0, 318, 272, 0, 0, 0, 0,
	568, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 502, 545, 544, 489, 498,
	0, 0, 214, 153, 490, 0, 497, 491, 495, 494,
	492, 493, 0, 560, 0, 0, 0, 0, 0, 0,
	462, 475, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 473, 0, 0,
	0, 0, 522, 0, 474, 0, 0, 517, 499, 500,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 496, 520,
	524, 226, 582, 518, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 583,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	0, 349, 0, 0, 566, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 519, 0, 308, 290, 579,
	463, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 564, 286, 0, 0, 578, 559,
	561, 562, 565, 569, 570, 571, 572, 573, 575, 577,
	581, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 2584, 0, 0, 0, 2585, 0,
	580, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	523, 276, 277, 278, 279, 567, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 589, 563,
	588, 590, 591, 587, 592, 593, 574, 481, 0, 527,
	585, 584, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 552, 532, 533, 534, 480, 535, 530, 531,
	553, 525, 549, 550, 504, 528, 536, 548, 537, 551,
	554, 555, 594, 595, 543, 596, 540, 556, 547, 546,
	538, 526, 557, 558, 511, 506, 541, 542, 529, 507,
	508, 509, 510, 326, 521, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	0, 233, 1335, 0, 258, 0, 0, 0, 512, 0,
	0, 318, 272, 0, 0, 0, 0, 568, 576, 0,
	0, 0, 0, 0, 0, 0, 1464, 0, 0, 471,
	0, 0, 502, 545, 544, 489, 498, 0, 0, 214,
	153, 490, 0, 497, 491, 495, 494, 492, 493, 0,
	560, 0, 0, 0, 0, 0, 0, 462, 475, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 473, 0, 0, 0, 0, 522,
	0, 474, 0, 0, 1465, 499, 500, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 496, 520, 524, 226, 582,
	518, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 583, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 349, 0,
	0, 566, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 519, 0, 308, 290, 579, 463, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 564, 286, 0, 0, 578, 559, 561, 562, 565,
	569, 570, 571, 572, 573, 575, 577, 581, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 523, 276, 277,
	278, 279, 567, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 589, 563, 588, 590, 591,
	587, 592, 593, 574, 481, 0, 527, 585, 584, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 552,
	532, 533, 534, 480, 535, 530, 531, 553, 525, 549,
	550, 504, 528, 536, 548, 537, 551, 554, 555, 594,
	595, 543, 596, 540, 556, 547, 546, 538, 526, 557,
	558, 511, 506, 541, 542, 529, 507, 508, 509, 510,
	144, 326, 521, 357, 358, 359, 380, 343, 0, 230,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 851, 0, 0, 318,
	272, 0, 0, 0, 0, 568, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	502, 545, 544, 489, 498, 0, 0, 214, 153, 490,
	0, 497, 491, 495, 494, 492, 493, 0, 560, 0,
	0, 0, 0, 0, 0, 462, 475, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 473, 0, 0, 0, 0, 522, 0, 474,
	0, 0, 517, 499, 500, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 496, 520, 524, 226, 582, 518, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 583, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 349, 0, 0, 566,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	519, 0, 308, 290, 579, 463, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 564,
	286, 0, 0, 578, 559, 561, 562, 565, 569, 570,
	571, 572, 573, 575, 577, 581, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 523, 276, 277, 278, 279,
	567, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 589, 563, 588, 590, 591, 587, 592,
	593, 574, 481, 0, 527, 585, 584, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 111, 300, 238, 552, 532, 533,
	534, 480, 535, 530, 531, 553, 525, 549, 550, 504,
	528, 536, 548, 537, 551, 554, 555, 594, 595, 543,
	596, 540, 556, 547, 546, 538, 526, 557, 558, 511,
	506, 541, 542, 529, 507, 508, 509, 510, 326, 521,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 0, 233, 2736, 0, 258,
	0, 0, 0, 512, 0, 0, 318, 272, 0, 0,
	0, 0, 568, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 502, 545, 544,
	489, 498, 0, 0, 214, 153, 490, 0, 497, 491,
	495, 494, 492, 493, 0, 560, 0, 0, 0, 0,
	0, 0, 462, 475, 0, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 473,
	0, 0, 0, 0, 522, 0, 474, 0, 0, 517,
	499, 500, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	496, 520, 524, 226, 582, 518, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 583, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 349, 0, 0, 566, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 519, 0, 308,
	290, 579, 463, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 564, 286, 0, 0,
	578, 559, 561, 562, 565, 569, 570, 571, 572, 573,
	575, 577, 581, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 523, 276, 277, 278, 279, 567, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	589, 563, 588, 590, 591, 587, 592, 593, 574, 481,
	0, 527, 585, 584, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 552, 532, 533, 534, 480, 535,
	530, 531, 553, 525, 549, 550, 504, 528, 536, 548,
	537, 551, 554, 555, 594, 595, 543, 596, 540, 556,
	547, 546, 538, 526, 557, 558, 511, 506, 541, 542,
	529, 507, 508, 509, 510, 326, 521, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 0, 233, 1335, 0, 258, 0, 0, 0,
	512, 0, 0, 318, 272, 0, 0, 0, 0, 568,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 502, 545, 544, 489, 498, 0,
	0, 214, 153, 490, 0, 497, 491, 495, 494, 492,
	493, 0, 560, 0, 0, 0, 0, 0, 0, 462,
	475, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 473, 0, 0, 0,
	0, 522, 0, 474, 0, 0, 517, 499, 500, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 496, 520, 524,
	226, 582, 518, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 583, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	349, 0, 0, 566, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 519, 0, 308, 290, 579, 463,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 564, 286, 0, 0, 578, 559, 561,
	562, 565, 569, 570, 571, 572, 573, 575, 577, 581,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 523,
	276, 277, 278, 279, 567, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 589, 563, 588,
	590, 591, 587, 592, 593, 574, 481, 0, 527, 585,
	584, 586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 552, 532, 533, 534, 480, 535, 530, 531, 553,
	525, 549, 550, 504, 528, 536, 548, 537, 551, 554,
	555, 594, 595, 543, 596, 540, 556, 547, 546, 538,
	526, 557, 558, 511, 506, 541, 542, 529, 507, 508,
	509, 510, 326, 521, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 512, 0, 0,
	318, 272, 0, 0, 0, 0, 568, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 502, 545, 544, 489, 498, 0, 0, 214, 153,
	490, 0, 497, 491, 495, 494, 492, 493, 0, 560,
	0, 0, 0, 0, 0, 0, 462, 475, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 473, 1105, 0, 0, 0, 522, 0,
	474, 0, 0, 517, 499, 500, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 496, 520, 524, 226, 582, 518,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 583, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 0, 0, 0, 349, 0, 0,
	566, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 519, 0, 308, 290, 579, 463, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	564, 286, 0, 0, 578, 559, 561, 562, 565, 569,
	570, 571, 572, 573, 575, 577, 581, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 523, 276, 277, 278,
	279, 567, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 589, 563, 588, 590, 591, 587,
	592, 593, 574, 481, 0, 527, 585, 584, 586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 552, 532,
	533, 534, 480, 535, 530, 531, 553, 525, 549, 550,
	504, 528, 536, 548, 537, 551, 554, 555, 594, 595,
	543, 596, 540, 556, 547, 546, 538, 526, 557, 558,
	511, 506, 541, 542, 529, 507, 508, 509, 510, 0,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 326,
	521, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 512, 0, 0, 318, 272, 0,
	0, 0, 0, 568, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 502, 545,
	544, 489, 498, 0, 0, 214, 153, 490, 0, 497,
	491, 495, 494, 492, 493, 0, 560, 0, 0, 0,
	0, 0, 0, 462, 475, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	473, 0, 0, 0, 0, 522, 0, 474, 0, 0,
	517, 499, 500, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 496, 520, 524, 226, 582, 518, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 583, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 349, 0, 0, 566, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 519, 0,
	308, 290, 579, 463, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 564, 286, 0,
	0, 578, 559, 561, 562, 565, 569, 570, 571, 572,
	573, 575, 577, 581, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 523, 276, 277, 278, 279, 567, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 589, 563, 588, 590, 591, 587, 592, 593, 574,
	481, 0, 527, 585, 584, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 552, 532, 533, 534, 480,
	535, 530, 531, 553, 525, 549, 550, 504, 528, 536,
	548, 537, 551, 554, 555, 594, 595, 543, 596, 540,
	556, 547, 546, 538, 526, 557, 558, 511, 506, 541,
	542, 529, 507, 508, 509, 510, 326, 521, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 512, 0, 0, 318, 272, 0, 0, 0, 0,
	568, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 502, 545, 544, 489, 498,
	0, 0, 214, 153, 490, 0, 497, 491, 495, 494,
	492, 493, 0, 560, 0, 0, 0, 0, 0, 0,
	462, 475, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 473, 0, 0,
	0, 0, 522, 0, 474, 0, 0, 517, 499, 500,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 496, 520,
	524, 226, 582, 518, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 583,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	0, 349, 0, 0, 566, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 519, 0, 308, 290, 579,
	463, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 564, 286, 0, 0, 578, 559,
	561, 562, 565, 569, 570, 571, 572, 573, 575, 577,
	581, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	523, 276, 277, 278, 279, 567, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 589, 563,
	588, 590, 591, 587, 592, 593, 574, 481, 0, 527,
	585, 584, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 552, 532, 533, 534, 480, 535, 530, 531,
	553, 525, 549, 550, 504, 528, 536, 548, 537, 551,
	554, 555, 594, 595, 543, 596, 540, 556, 547, 546,
	538, 526, 557, 558, 511, 506, 541, 542, 529, 507,
	508, 509, 510, 326, 521, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 1189, 0, 0, 0, 478, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 512, 0,
	0, 318, 272, 0, 0, 0, 0, 568, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 502, 545, 544, 489, 498, 0, 0, 214,
	153, 490, 0, 497, 491, 495, 494, 492, 493, 0,
	560, 0, 0, 0, 0, 0, 0, 0, 475, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 473, 0, 0, 0, 0, 522,
	0, 474, 0, 0, 517, 499, 500, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 496, 520, 524, 226, 582,
	518, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 583, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 349, 0,
	0, 566, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 519, 0, 308, 290, 579, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 1190,
	1191, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 564, 286, 0, 0, 578, 559, 561, 562, 565,
	569, 570, 571, 572, 573, 575, 577, 581, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 523, 276, 277,
	278, 279, 567, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 589, 563, 588, 590, 591,
	587, 592, 593, 574, 481, 0, 527, 585, 584, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 552,
	532, 533, 534, 480, 535, 530, 531, 553, 525, 549,
	550, 504, 528, 536, 548, 537, 551, 554, 555, 594,
	595, 543, 596, 540, 556, 547, 546, 538, 526, 557,
	558, 511, 506, 541, 542, 529, 507, 508, 509, 510,
	326, 521, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 512, 0, 0, 318, 272,
	0, 0, 0, 0, 568, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	545, 544, 489, 498, 0, 0, 214, 153, 490, 0,
	497, 491, 495, 494, 492, 493, 0, 560, 0, 0,
	0, 0, 0, 0, 462, 475, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 473, 0, 0, 0, 0, 522, 0, 474, 0,
	0, 517, 499, 500, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 496, 520, 524, 226, 582, 518, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 583, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 0, 0, 0, 349, 0, 0, 566, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 519,
	0, 308, 290, 579, 463, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 564, 286,
	0, 0, 578, 559, 561, 562, 565, 569, 570, 571,
	572, 573, 575, 577, 581, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 523, 276, 277, 278, 279, 567,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 589, 563, 588, 590, 591, 587, 592, 593,
	574, 481, 0, 527, 585, 584, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 552, 532, 533, 534,
	480, 535, 530, 531, 553, 525, 549, 550, 504, 528,
	536, 548, 537, 551, 554, 555, 594, 595, 543, 596,
	540, 556, 547, 546, 538, 526, 557, 558, 511, 506,
	541, 542, 529, 507, 508, 509, 510, 326, 521, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 512, 0, 0, 318, 272, 0, 0, 0,
	0, 568, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 502, 545, 544, 489,
	498, 0, 0, 214, 153, 490, 0, 497, 491, 495,
	494, 492, 493, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 475, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 473, 0,
	0, 0, 0, 522, 0, 474, 0, 0, 517, 499,
	500, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 496,
	520, 524, 226, 582, 518, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	583, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 349, 0, 0, 566, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 519, 0, 308, 290,
	579, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 564, 286, 0, 0, 578,
	559, 561, 562, 565, 569, 570, 571, 572, 573, 575,
	577, 581, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 523, 276, 277, 278, 279, 567, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 589,
	563, 588, 590, 591, 587, 592, 593, 574, 481, 0,
	527, 585, 584, 586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 552, 532, 533, 534, 480, 535, 530,
	531, 553, 525, 549, 550, 504, 528, 536, 548, 537,
	551, 554, 555, 594, 595, 543, 596, 540, 556, 547,
	546, 538, 526, 557, 558, 511, 506, 541, 542, 529,
	507, 508, 509, 510, 0, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 144, 326, 39, 132, 110, 0,
	0, 0, 0, 0, 0, 0, 288, 397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 398, 400, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 40, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 111, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 919, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 0, 1675,
	1672, 1673, 1674, 285, 0, 1659, 1660, 1661, 1662, 917,
	1645, 1665, 0, 1646, 284, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1663, 296, 262, 297,
	249, 274, 273, 275, 942, 944, 946, 948, 951, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 1658, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 941, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 1729, 1732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 349, 0, 0, 0, 1726, 0,
	1725, 322, 1727, 1730, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 1731, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 1497, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 817, 818, 819, 816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 698, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 706, 707, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	680, 347, 209, 679, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 696, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 697, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 700, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	708, 703, 704, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 193, 194, 195, 196,
	144, 326, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 98, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1519, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 111, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 193, 194, 195, 196, 144, 326,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 98, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 1510, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 111, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 193, 194, 195, 196, 144, 326, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 98, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1443, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	111, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 706, 707, 0, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 680, 347, 209, 679, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 708, 703, 704, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 2054, 0, 0,
	2053, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 1082, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	1080, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1078,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 1076, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 1080, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2666,
	0, 152, 545, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 1080, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2391, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 1080, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1078, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 1793, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 1810,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 1080, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2745, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 545, 0, 0, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2681, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 2617, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2462, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 2505, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1443, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 2189, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 1080, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 1793, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 1822, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 193, 194, 195, 196, 0,
	0, 0, 357, 358, 359, 380, 343, 326, 230, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 1080, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 1372, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 416, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 417, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 457, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 193,
	194, 195, 196, 0, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 680, 0, 0, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 1427, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 1429, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	0, 435, 442, 432, 0, 664, 663, 1409, 0, 0,
	0, 0, 0, 439, 440, 0, 441, 445, 0, 0,
	427, 0, 662, 436, 0, 435, 442, 432, 0, 0,
	450, 642, 0, 0, 0, 0, 0, 439, 440, 0,
	441, 445, 645, 673, 427, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 450, 0, 0, 0, 0, 454,
	0, 436, 456, 435, 442, 432, 668, 455, 0, 0,
	0, 0, 0, 0, 0, 439, 440, 0, 441, 445,
	0, 0, 427, 454, 0, 0, 456, 0, 0, 0,
	0, 455, 450, 0, 0, 0, 0, 0, 669, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 0, 657, 661, 677,
	0, 0, 0, 658, 655, 654, 1413, 660, 646, 647,
	648, 649, 650, 0, 675, 676, 0, 1417, 0, 0,
	0, 0, 0, 0, 0, 1413, 671, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 1406, 0, 0,
	0, 1408, 1410, 1412, 0, 1414, 1415, 1416, 1418, 1419,
	1420, 1422, 1423, 1424, 1425, 0, 1406, 0, 0, 0,
	1408, 1410, 1412, 666, 1414, 1415, 1416, 1418, 1419, 1420,
	1422, 1423, 1424, 1425, 428, 430, 429, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 1428, 0, 0, 438, 0, 428, 430,
	429, 0, 0, 453, 0, 0, 0, 0, 434, 0,
	431, 0, 1428, 0, 422, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 453, 0, 0,
	1426, 0, 0, 0, 431, 0, 428, 430, 429, 0,
	0, 0, 0, 0, 0, 0, 434, 1405, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 453, 1405, 0, 0, 0,
	0, 0, 431, 0, 0, 0, 1421, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1421, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 433,
	437, 443, 0, 444, 446, 0, 0, 447, 448, 449,
	0, 0, 451, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 437, 443, 0, 444, 446, 0,
	0, 447, 448, 449, 0, 0, 451, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 437, 443, 0, 444, 446, 0, 0, 447,
	448, 449, 0, 0, 451, 452,
}

var yyPact = [...]int{
	295, -1000, -324, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -228, 29821,
	29821, -1000, -1000, 1797, -1000, 29304, 10164, 30338, 267, 260,
	30338, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 530, -1000, 28787, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 450, 31509, 30855, 8085, 30338, -302, -1000,
	2374, -155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1933,
	558, 28270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	31225, 55, 558, 666, 670, 785, 785, 12232, -66, -71,
	2374, 247, 301, -1000, 1077, 295, 30338, 1684, 426, 30338,
	-1000, 1131, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 426, -1000,
	-1000, -1000, 2374, 2374, -1000, 30338, 30338, -4, 1249, -1000,
	231, 219, 254, 1130, -1000, -1000, -1000, -1000, -1000, 2405,
	-1000, 30338, 30338, 2099, 30338, -1000, 1408, 395, 31533, 2258,
	940, 548, 2143, -1000, -1000, 2096, -1000, 101, 452, 131,
	361, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 137, -1000,
	2333, -1000, -1000, 88, -1000, -1000, 181, -1000, -1000, -1000,
	-72, -1000, -1000, -1000, -1000, -1000, -1000, -167, -1000, -1000,
	682, 1411, 8085, -1000, 1348, -1000, 2862, -1000, -1000, -1000,
	-1000, 5490, 9636, 9636, 9636, 9636, -1000, -1000, 1939, 8085,
	2091, 2081, -1000, -1000, -1000, -1000, 1129, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1676,
	9119, -1000, 2079, 2075, 2069, 2058, 2056, 2051, 2050, 2046,
	2044, 2040, 2033, 2029, 2027, 2012, 1854, 1927, 2009, 1674,
	1672, 2008, 2007, 2001, 1671, 1854, 1854, 2000, 1999, 1998,
	1996, 1992, 1983, 1981, 1980, 1978, 1977, 1973, 1972, 1968,
	1967, 1965, 1950, 1949, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2688, -1000, 1128,
	907, -1000, 1948, 2233, 2345, 1858, 2383, 2313, 2310, 2296,
	2294, 1494, -1000, -1000, 30338, 30338, 448, 448, 448, 448,
	448, 487, 448, 529, 528, 526, 448, -1000, -1000, -1000,
	-1000, -1000, -1000, 614, -1000, -1000, -1000, -1000, 935, 30338,
	-1000, 1897, 1252, 2342, 409, 408, 305, -1000, 1197, 1197,
	1197, 1252, 273, 400, 2345, 2345, -65, 1197, -130, 1252,
	1252, -130, 1252, 1252, 1252, 50, -1000, -1000, -1000, 1197,
	405, 1197, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2326,
	2316, 450, 30338, 32, 30338, 450, 450, 463, -1000, -171,
	-1000, -1000, 654, -1000, 626, -1000, 1408, 392, 386, 976,
	1276, -1000, 1254, 30338, 30338, 30338, 1254, 1254, 15854, 15337,
	-1000, 30338, -1000, 2345, 1858, -1000, 1801, 2097, 1798, 1858,
	450, 450, 450, 450, 450, 450, 450, 450, 30338, 30338,
	450, 7041, 7041, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 278, 2252, 239, 1946, -1000, 30338, 237, 2345, 2233,
	2345, -1000, -1000, 1127, 1493, 1670, -1000, -1000, 231, 1174,
	-1000, 743, -1000, -1000, -1000, -1000, 30338, 314, -1000, -1000,
	1656, 1945, -1000, 373, 771, 1002, -1000, 160, 31571, 24643,
	1408, 24643, 30338, -1000, -1000, -1000, -1000, -1000, -1000, -88,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 93, -1000, 8085, 8085, 8085, 8085, 8085,
	-1000, 496, 8602, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9636, 9636, 9636, 9636, 9636, 9636, 9636, 9636, 9636, 9636,
	9636, 9636, 1936, 1274, 9636, 9636, 9636, 9636, 2097, 2218,
	943, 158, -1000, -1000, -1000, -1000, -1000, 1207, 1411, 8085,
	8085, 30338, -1000, 2581, 8085, 8085, 2683, 8085, 2289, 8085,
	8085, 8085, 1793, 3938, 30338, 8085, -1000, 1781, 1779, -1000,
	-1000, 1419, 8085, 8085, -1000, -1000, 8085, 9636, 8085, -1000,
	-1000, -1000, 63, 2289, 2289, 8085, 8085, 2289, 2289, 2289,
	1239, 2289, 2289, 2289, 2289, 2289, 2289, 2289, 2289, 30338,
	2225, 150, -1000, -1000, -1000, 1859, -1000, 1895, 1895, 1895,
	1895, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1922, 1942, -1000, -1000, 1892, 1892, 1892, 1859, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1917, 1917, 1921, 1917, 30338, 2345, -302,
	6524, -1000, -308, 2233, 8085, -1000, -1000, 8085, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1668, 2284, -1000, 1941,
	1125, 30338, 1294, 30338, 24643, 30338, 1408, 30338, 30338, 448,
	448, 448, 30338, 463, -1000, 30338, 935, 2283, 30338, 2390,
	9636, 9636, 27753, 1197, 1252, -1000, 30338, -1000, -1000, -1000,
	1197, 30338, 1197, 2390, 1197, -1000, -1000, -1000, 1252, 1252,
	-1000, -1000, -1000, -1000, 1197, 1197, -1000, -1000, 2390, 30338,
	-89, 2390, 2390, -98, -1000, -1000, -1000, 30338, 30338, 448,
	30338, 30338, -1000, 30338, -1000, -1000, 30338, 3497, 30338, 30338,
	2308, -1000, 24643, 30338, 22575, -1000, -147, 663, 635, 647,
	-1000, -1000, 372, 480, 14303, 316, 24643, 4972, -1000, -1000,
	1254, 1254, 1254, 4972, 4972, 1032, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 920, -1000, 79, 2233, -1000, -1000, -1000,
	-1000, -1000, 30338, 30338, 24643, 1408, 30338, 30338, 30338, 30338,
	-1000, 1940, 30338, 990, -1000, -1000, 11715, 1124, 990, 1667,
	30338, 1666, 2132, -303, -1000, 13268, 30338, 30338, -1000, -1000,
	-303, -1000, 12750, 30338, 2233, -1000, 2233, 30338, -1000, 2338,
	-1000, 231, 171, -1000, -1000, -1000, -1000, -1000, -1000, 1119,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 912,
	-1000, 30338, -1000, -1000, 160, 24643, 25677, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 110, -1000, -1000, 144, -1000, 481,
	29, 1173, -1000, -1000, 41, 132, 555, 1411, -1000, 1291,
	1291, 1303, -1000, 511, -1000, -1000, -1000, -1000, 1939, -1000,
	-1000, -1000, 1216, 1964, -1000, 1202, 1202, 1005, 1005, 1005,
	1005, 1005, 1194, 1194, -1000, -1000, -1000, 5490, 1936, 9636,
	9636, 9636, 9636, 435, 435, 2995, 3148, -1000, 8085, 1280,
	-1000, 8085, 1511, 1103, 1118, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1775, 682, 1769, 1607, 2403,
	1767, 8085, -1000, -1000, 1172, 1161, 1147, -1000, 1465, 7568,
	-1000, -1000, -1000, 1762, 1117, 1759, -1000, -1000, -1000, 1753,
	1139, 840, 1750, 2686, 1747, 901, 8085, 8085, 1094, 1090,
	8085, 8085, 8085, 8085, 1746, 8085, 8085, 8085, 8085, 8085,
	8085, 8085, 8085, -1000, 8085, 64, -1000, -1000, -1000, -1000,
	1491, -1000, 1489, -1000, -1000, -1000, 1658, 1658, -1000, 1486,
	-1000, -1000, -1000, -1000, 1485, -1000, -1000, 1484, -1000, -1000,
	-1000, -1000, 1087, -1000, 1411, -1000, 1652, -1000, 941, 900,
	-1000, 1391, -1000, -1000, 30338, 10681, 30338, 1897, 2250, 56,
	-1000, 878, -1000, 29, -183, 776, 2078, 2399, 30338, 30338,
	30338, 2282, 27236, -1000, 1935, 1074, -1000, -1000, 8085, -1000,
	-1000, 2043, 30338, 30338, 2390, -1000, -1000, -1000, -1000, -1000,
	-1000, 30338, 2390, 2390, 1252, 1197, -1000, -1000, 1197, -1000,
	-1000, 1197, -1000, 1112, -1000, 30338, -1000, -1000, -1000, 1897,
	-1000, 11198, 725, 31431, -1000, 1177, 1177, 773, 1177, 1177,
	1177, 1177, 355, 350, 1177, 1177, 1177, 1177, 1177, 1177,
	1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1934, -1000,
	54, 2293, 159, 878, 187, 2277, 794, -1000, -1000, -1000,
	-1000, 17922, 17922, 13786, 17922, -1000, 994, -1000, -1000, 658,
	624, 629, -1000, -1000, 475, -1000, -1000, 776, -1000, -1000,
	-1000, 1930, 1246, -1000, -1000, 1927, -1000, 4972, 4972, 4972,
	-1000, -1000, 18439, 30338, -1000, -170, -1000, -160, -1000, 877,
	-1000, -1000, 880, 776, 2130, 877, 877, -1000, 10681, -1000,
	2390, 7041, -1000, 22575, -1000, -1000, 26711, -1000, 26194, 2390,
	-312, 834, -134, -1000, 2219, 823, -1000, 1923, -1000, 1069,
	2178, -1000, 873, -1000, 1227, 1063, -1000, 823, 1053, 2175,
	873, -1000, -1000, 1110, -9, -1000, -1000, 30338, 1656, 1046,
	25677, 847, -1000, 471, 1108, 1097, -1000, 24643, 95, 24643,
	-1000, 24643, -1000, -1000, 230, -1000, 30338, 2229, -1000, -1000,
	-1000, 1604, -335, -1000, -1000, -1000, -1000, -1000, 1028, -1000,
	435, 435, 2995, 2983, -1000, 9636, -1000, 9636, 2188, 1079,
	-1000, 8085, 1322, 290, 1240, 17405, 30338, -1000, -1000, 8085,
	8085, -1000, 2184, -1000, -1000, -1000, -1000, 8085, 8085, 1519,
	-1000, 30338, -1000, -1000, -1000, -1000, 17405, -1000, 9636, -1000,
	8085, 895, 2169, -51, -51, 2147, 2112, 2106, 1024, -51,
	2094, 2076, 2061, 2047, 2041, 1855, 1765, 1702, 1411, -1000,
	-1000, 1745, 1741, 1018, -1000, 1010, 1736, 1000, 998, 6524,
	-1000, -134, 8085, 8085, 8085, 2190, -1000, -1000, 73, 1735,
	861, -1000, -1000, -1000, 2771, 1895, 1895, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1922, -1000, -1000, 1892,
	1892, 1892, 1859, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1917, 1917, 1921, 1917, -1000, 2280, -1000, -70,
	1177, 379, 24643, 381, -1000, 30338, 2129, 248, 2202, 30338,
	1911, 1907, 1905, 255, 2771, 30338, 986, -1000, 1089, 295,
	-1000, 30338, 1411, -1000, 1408, -1000, 1252, -1000, 2390, 966,
	-1000, -1000, 2390, 1252, 1252, 1197, 30338, -1000, 2267, -1000,
	-1000, -1000, 2771, 993, -1000, 30338, 1347, 621, 448, 621,
	1341, 1904, -1000, -1000, -1000, 30338, 30338, 30338, 1339, 1335,
	31450, -1000, 1474, -1000, 1469, 1177, 1177, 1464, 1651, 1650,
	1647, 1177, 1177, 1462, 1645, 25160, 1460, 1445, 1444, 1456,
	1642, 592, 1451, 1450, 1448, 30338, 1898, 1559, -70, 1177,
	130, 1219, 379, 1394, 14820, 30338, 22575, 22575, 22575, 22575,
	-1000, 2157, 2156, -1000, 2159, 2158, 2191, 30338, 22575, 1897,
	-1000, 25160, -1000, -1000, -1000, 2097, 991, 2298, 697, 8085,
	-1000, -1000, -1000, 619, 24643, 1640, 316, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30338, 30338, 1734, 2388, -1000,
	851, -1000, -1000, 1081, -1000, 2388, -1000, 1442, 1638, -35,
	-20, 1334, -303, 6524, 244, 30338, -303, 30338, 6524, -1000,
	30338, 243, -303, 30338, 1441, -1000, -1000, -1000, 2392, 24643,
	1408, 1099, 24126, -1000, 86, -1000, 106, 388, 1637, -1000,
	503, 77, -1000, 1209, 1604, -1000, -1000, -1000, 9636, -1000,
	-1000, -1000, -1000, 1411, 8085, 1731, -1000, 615, 615, 1730,
	-1000, 1895, 1895, -1000, 1859, 1892, 1859, 615, 615, 1723,
	-1000, 1355, 1691, -1000, 1661, 1641, 8085, -1000, 1719, 2967,
	792, -198, -51, -1000, 1891, -1000, -51, -51, -51, -51,
	-1000, -51, -51, -51, -51, -51, -51, -51, -51, -1000,
	-1000, -1000, 1624, -1000, -1000, -1000, 1440, -1000, 1435, -1000,
	-35, 1411, 1411, -1000, -1000, 2185, 1622, 537, 10681, 2203,
	250, 1467, -1000, -1000, 23609, 341, -1000, -1000, -1000, 500,
	123, 1433, 335, -1000, 30338, 182, 30338, -1000, -1000, -1000,
	-1000, -1000, 2202, -1000, 803, 245, 11198, 11198, 11198, 251,
	1287, -1000, 426, 836, 1076, 22575, 30338, -1000, 22058, 1718,
	-1000, 776, 2390, -1000, 30338, -1000, 2390, 2390, 1252, -1000,
	250, 2307, -1000, -1000, 30338, 30338, -1000, 30338, 30338, 448,
	8085, -1000, -1000, -1000, 30338, -1000, -1000, -1000, -1000, 17405,
	17405, -1000, -1000, -1000, -1000, 1616, 1612, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 375,
	30338, 989, -1000, 1192, 1467, 23609, 1190, 1608, 341, -1000,
	1605, -1000, 732, 30338, 30338, -1000, 837, -1000, 1178, 2107,
	2119, 2107, -1000, -1000, -1000, -1000, 2123, -1000, 1947, -1000,
	-1000, 837, -1000, -1000, -1000, -1000, -1000, 697, -1000, 2337,
	621, 621, 621, 1706, -1000, 847, 1705, -1000, -1000, -1000,
	-1000, -1000, 2376, 2381, 23092, 2376, -1000, -312, -310, -27,
	2380, 2379, 2412, -1000, 1703, 831, -303, -1000, -1000, 823,
	-1000, -1000, -1000, -303, -1000, 823, -1000, -1000, 1408, -1000,
	102, -1000, -1000, -1000, -1000, -1000, -1000, 14, -1000, 30338,
	-1000, 1604, 1567, 74, -1000, 1411, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8085, -1000, -1000, -1000, 1614, -1000, -1000, 8085, 1699,
	1566, -1000, 425, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1697, 1695, -310, -1000,
	-1000, -1000, 2771, -1000, 1092, -1000, -1000, 1564, 26, -1000,
	-1000, -1000, 1563, 1562, 1430, -1000, -1000, 1437, 985, 47,
	-1000, -1000, -1000, -1000, -1000, -1000, 1394, 30338, 1889, -1000,
	1177, 1177, 1177, 30338, 1694, 824, -1000, 1693, 1692, 429,
	1273, 1272, -1000, 1421, 17922, 22575, 22058, 821, -1000, 1058,
	-1000, -1000, -1000, 2390, -1000, -1000, 2390, -1000, -1000, 2307,
	-1000, -1000, 1328, 9636, -1000, -1000, 1560, 16888, 562, 574,
	1886, -1000, 322, 2411, -1000, 1321, 1313, -1000, 30338, -1000,
	1884, 1800, 277, 1877, -1000, 1871, 1870, 30338, 1600, -1000,
	-1000, -1000, -1000, -1000, -1000, 363, 984, -1000, 1559, 1558,
	-1000, 26, 1552, -1000, -1000, -1000, 30338, 732, 732, 2385,
	30338, 6524, -1000, -1000, 8085, 1869, -1000, 8085, -1000, -1000,
	-1000, -1000, -1000, 1868, 2247, -1000, -1000, -1000, -1000, -1000,
	-1000, 8085, 8085, -1000, -1000, -1000, -312, 1551, -1000, -1000,
	2375, 1550, 1518, 30338, -1000, 823, 823, 776, -1000, -1000,
	-98, -1000, -1000, -1000, 1579, -1000, 1527, -51, -1000, 2385,
	-1000, 2370, -1000, -1000, -312, -244, -1000, -1000, -1000, -1000,
	215, -1000, -1000, 177, -1000, -1000, 1428, 367, -1000, -1000,
	732, 21024, 17405, 16888, 1541, -1000, 31450, 11198, 93, 31450,
	673, 1253, -1000, 1416, -1000, 1414, -1000, 2390, 821, 1058,
	-1000, -1000, 1086, -1000, -1000, -1000, -1000, 2995, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1393, 1867, -112, -1000, -1000, 1864, 21024, 259, 259,
	21024, 21024, 21024, 1863, 497, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2345, -1000, -1000, 1411, 30338, 1411, 21541,
	-1000, 2369, 2368, 1411, 682, -314, -1000, 1536, -21, -1000,
	-1000, 683, -316, -41, -34, -1000, -1000, -1000, 25, 8085,
	-314, 30338, 380, 1535, -1000, -1000, 174, -1000, -1000, 977,
	-1000, 1859, 8085, -1000, -1000, -1000, 424, 31431, -1000, -1000,
	-98, 424, 396, 157, -1000, 1390, -1000, -1000, 2385, -1000,
	1646, 8085, 1854, -240, 21024, 934, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 924, 910, 893, 21024, -1000, -1000, -1000,
	308, -1000, 888, 887, -1000, -1000, -1000, -1000, -1000, 1852,
	-1000, 2367, -1000, 1534, 455, -29, -34, -1000, 2365, -25,
	2359, 2356, 1532, -1000, 3166, -1000, -1000, -1000, 682, -1000,
	2261, -1000, -1000, 10, -1000, -1000, -1000, 21024, 2269, 1458,
	261, 2355, -1000, 261, -1000, 246, -1000, 1226, -1000, 1387,
	-1000, 2345, -1000, 1342, -1000, 2115, -1000, 68, 886, -1000,
	-1000, -1000, -1000, 884, -1000, -1000, -1000, 20507, 30338, 1518,
	-1000, 1851, 1386, -27, -32, 2354, -1000, 1518, 2353, 1518,
	1518, -1000, -1000, 4455, -306, -50, 317, 1523, -1000, 175,
	-1000, -1000, 2269, -1000, 2349, 328, -1000, -1000, -1000, 1385,
	-1000, -1000, 497, -1000, 2114, 2111, 2396, -1000, -1000, -1000,
	-1000, 175, 175, 175, 175, 83, -1000, -1000, 879, -1000,
	-1000, 2273, 16371, -43, -1000, -1000, -1000, 1521, -1000, 1518,
	-1000, -1000, 1297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1177, 1517, 222, -1000, -1000, -1000, 19990, 291, 262, 211,
	-1000, 428, -1000, -1000, -1000, -1000, 2410, -1000, 2407, 594,
	594, -1000, -1000, 30338, -1000, 30338, -1000, 875, -1000, -1000,
	-1000, 1055, -1000, -1000, -1000, -1000, 4455, 1381, -1000, 30338,
	-1000, 30338, 296, 1371, 9636, 1850, 9636, 1823, 303, 1821,
	-1000, -1000, -1000, 1392, 326, -1000, -1000, 681, -1000, 1163,
	-1000, 19473, 30338, -1000, -1000, -1000, 870, 1806, 2347, -1000,
	2948, 30338, 2902, 30338, 1803, 1100, 9636, -1000, -1000, -1000,
	30338, 6007, -1000, 980, -1000, -1000, 418, 297, -1000, 855,
	-1000, 843, 18956, 1362, 1757, -1000, -1000, 1411, 30338, 841,
	-1000, 30338, 286, -1000, -1000, -1000, 813, -1000, -1000, -1000,
	-1000, 418, 2174, -1000, 1361, -1000, -1000, 3567, 549, -1000,
	-1000, 3567, 293, -1000, 384, 1470, -1000, -1000, 812, -1000,
	30338, 586, 8085, -1000, 293, 31450, -1000, 8085, 806, -1000,
	31450, 783, -1000, -1000,
}

var yyPgo = [...]int{
	0, 131, 2831, 201, 148, 145, 198, 2830, 2829, 2269,
	2254, 2828, 2827, 2826, 2823, 2819, 2818, 2817, 2816, 2815,
	2802, 2800, 2799, 2798, 2796, 2795, 2794, 2793, 2791, 2790,
	2789, 2788, 2787, 197, 2786, 2785, 2783, 2781, 2776, 2775,
	2774, 2773, 2772, 2770, 2769, 2768, 2767, 2766, 2764, 2762,
	2761, 2758, 2755, 2754, 2752, 2751, 2750, 2749, 2747, 2746,
	126, 2745, 2250, 2744, 2743, 2740, 2735, 2734, 2730, 2729,
	170, 2728, 2727, 2726, 2725, 2723, 2721, 2719, 2717, 2713,
	2711, 2710, 2709, 2708, 2707, 2705, 2704, 2701, 155, 2700,
	2699, 134, 2698, 2697, 2696, 2695, 193, 187, 50, 2693,
	36, 2691, 2688, 2687, 2686, 2685, 67, 2684, 2681, 119,
	157, 204, 2077, 206, 202, 172, 128, 73, 2679, 2255,
	2678, 133, 181, 118, 21, 2670, 123, 2668, 113, 32,
	35, 200, 105, 39, 115, 88, 2665, 178, 65, 2662,
	75, 2661, 2660, 203, 153, 2659, 92, 2658, 2657, 2656,
	2655, 166, 83, 2654, 49, 2653, 122, 256, 85, 81,
	2652, 2650, 2648, 74, 2646, 2645, 2644, 2643, 137, 2642,
	2641, 94, 62, 2640, 2639, 2638, 45, 183, 91, 2637,
	52, 2635, 2634, 2633, 2632, 53, 2630, 2629, 16, 18,
	20, 2628, 15, 2627, 2622, 1, 2621, 175, 55, 70,
	107, 2620, 385, 2619, 2618, 2617, 108, 2616, 680, 2615,
	2613, 2612, 2611, 24, 2610, 161, 38, 2609, 69, 95,
	93, 165, 158, 2608, 2607, 2606, 234, 63, 87, 0,
	2605, 116, 2604, 2598, 2595, 207, 2594, 189, 162, 188,
	125, 211, 136, 2593, 2592, 64, 2591, 114, 68, 97,
	7, 2590, 182, 2588, 601, 142, 2586, 168, 2581, 132,
	6, 110, 2580, 2579, 34, 228, 2578, 2575, 2574, 90,
	2573, 2572, 99, 101, 2570, 2567, 2566, 31, 2565, 25,
	22, 2564, 76, 2562, 209, 2561, 184, 100, 141, 139,
	124, 177, 180, 59, 54, 2559, 995, 109, 71, 23,
	2558, 179, 2557, 194, 185, 2556, 160, 2555, 196, 276,
	169, 2553, 143, 8, 33, 27, 2552, 9, 2551, 111,
	2550, 2548, 12, 2547, 17, 2544, 2543, 2542, 2541, 4,
	2540, 2539, 2537, 2, 5, 2536, 3, 167, 2535, 2534,
	2533, 2532, 37, 154, 2531, 89, 186, 2530, 2526, 66,
	2525, 2524, 2523, 564, 2522, 2521, 2520, 2519, 2518, 2514,
	2513, 2512, 2510, 2509, 77, 44, 2508, 2506, 2504, 2503,
	57, 106, 2502, 2501, 2500, 2496, 28, 140, 2495, 19,
	2494, 29, 26, 30, 2493, 102, 2492, 13, 151, 2491,
	2490, 14, 2488, 2487, 10, 11, 2486, 2484, 82, 2483,
	61, 43, 121, 78, 2482, 60, 174, 104, 2481, 2477,
	195, 192, 163, 2475, 129, 190, 212, 2474, 171, 2473,
	2472, 2471, 2470, 2468, 2466, 1135, 2465, 2464, 191, 42,
	56, 80, 2463, 2462, 2461, 58, 117, 86, 79, 164,
	2460, 159, 2458, 2457, 72, 2455, 2441, 2437, 2436, 2432,
	152, 2431, 2429, 2427, 199, 144, 2426,
}

//line mysql_sql.y:8947
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 449, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 94, 447, 447, 447, 448, 448,
	92, 92, 92, 81, 93, 397, 397, 396, 396, 395,
	395, 350, 350, 394, 394, 394, 393, 393, 393, 392,
	392, 391, 391, 390, 390, 388, 388, 389, 387, 386,
	386, 386, 384, 384, 384, 380, 380, 382, 381, 381,
	383, 375, 375, 378, 378, 376, 376, 376, 376, 379,
	374, 374, 374, 373, 373, 80, 80, 80, 298, 298,
	79, 79, 312, 312, 312, 312, 312, 310, 310, 310,
	310, 310, 310, 309, 309, 308, 308, 313, 313, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 71,
	71, 71, 71, 74, 74, 74, 75, 307, 307, 307,
	72, 73, 73, 297, 297, 302, 302, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 306,
	306, 306, 304, 304, 303, 303, 305, 305, 65, 65,
	65, 68, 67, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 66, 66, 66, 66, 66, 66, 61, 61,
	61, 61, 61, 60, 60, 62, 62, 294, 294, 293,
	76, 76, 77, 451, 451, 450, 452, 452, 452, 452,
	78, 84, 84, 84, 84, 84, 84, 84, 83, 83,
	86, 86, 85, 87, 70, 70, 70, 70, 70, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 421, 421,
	421, 423, 423, 233, 234, 453, 236, 232, 232, 232,
	417, 417, 418, 419, 420, 420, 420, 82, 7, 7,
	7, 7, 7, 7, 59, 64, 193, 193, 193, 194,
	194, 194, 194, 194, 57, 63, 63, 434, 434, 58,
	441, 441, 353, 353, 247, 247, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 357, 358, 243, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 40,
	39, 39, 39, 283, 283, 38, 454, 454, 222, 222,
	48, 49, 50, 51, 52, 53, 37, 47, 47, 47,
	47, 47, 47, 47, 47, 47, 56, 56, 369, 369,
	456, 456, 456, 54, 55, 352, 352, 352, 46, 45,
	44, 43, 42, 42, 36, 36, 35, 35, 41, 104,
	105, 240, 240, 240, 242, 242, 238, 455, 455, 324,
	324, 241, 241, 34, 34, 34, 34, 239, 239, 221,
	237, 237, 237, 8, 8, 6, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 18, 19, 21,
	291, 291, 288, 20, 14, 13, 16, 12, 15, 17,
	5, 5, 5, 5, 9, 9, 10, 116, 116, 158,
	158, 429, 429, 425, 425, 426, 426, 426, 427, 427,
	428, 428, 88, 363, 363, 363, 363, 363, 363, 4,
	139, 139, 138, 138, 362, 362, 362, 362, 362, 362,
	295, 295, 406, 406, 406, 407, 137, 137, 132, 132,
	364, 364, 261, 408, 408, 372, 372, 371, 371, 370,
	370, 135, 135, 136, 136, 119, 119, 97, 97, 377,
	377, 377, 377, 385, 385, 349, 349, 185, 185, 216,
	216, 217, 217, 109, 109, 110, 110, 110, 110, 110,
	110, 414, 414, 416, 416, 415, 134, 134, 130, 130,
	131, 131, 131, 129, 129, 128, 127, 127, 126, 124,
	124, 124, 125, 125, 125, 112, 112, 112, 111, 111,
	111, 111, 111, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 113, 113, 422, 422, 422,
	354, 354, 354, 360, 360, 199, 199, 200, 200, 198,
	198, 114, 114, 115, 115, 115, 115, 197, 197, 196,
	117, 117, 123, 122, 122, 118, 118, 118, 118, 207,
	207, 206, 206, 206, 206, 91, 95, 95, 96, 142,
	142, 205, 204, 204, 204, 141, 141, 140, 140, 133,
	133, 121, 121, 121, 121, 203, 120, 201, 446, 446,
	445, 445, 444, 442, 442, 442, 443, 443, 443, 443,
	399, 399, 399, 399, 399, 227, 227, 227, 231, 231,
	230, 230, 230, 230, 230, 235, 3, 3, 3, 3,
	3, 25, 25, 25, 25, 25, 25, 25, 31, 150,
	151, 30, 143, 143, 144, 144, 145, 145, 146, 147,
	147, 147, 149, 148, 29, 22, 430, 433, 431, 431,
	435, 435, 435, 436, 436, 436, 437, 437, 23, 101,
	106, 106, 103, 108, 108, 108, 108, 108, 102, 432,
	438, 438, 438, 292, 292, 289, 290, 290, 287, 286,
	286, 286, 440, 440, 439, 439, 439, 228, 228, 24,
	282, 282, 284, 285, 285, 285, 276, 276, 276, 276,
	28, 280, 280, 281, 281, 281, 281, 281, 277, 277,
	279, 279, 275, 275, 275, 275, 275, 27, 107, 107,
	274, 274, 272, 272, 270, 270, 271, 271, 269, 269,
	269, 273, 273, 26, 26, 26, 99, 98, 98, 98,
	219, 219, 218, 218, 100, 32, 170, 170, 338, 338,
	338, 338, 338, 356, 356, 356, 339, 339, 339, 340,
	340, 340, 341, 341, 341, 341, 341, 355, 355, 314,
	314, 315, 315, 315, 318, 318, 330, 330, 331, 331,
	329, 329, 336, 336, 335, 335, 334, 334, 333, 333,
	332, 332, 332, 332, 327, 327, 326, 326, 316, 316,
	316, 316, 316, 317, 317, 317, 325, 325, 328, 328,
	176, 176, 177, 177, 177, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 404, 404, 405, 179, 179, 179,
	183, 183, 183, 183, 183, 183, 178, 178, 180, 180,
	159, 159, 157, 157, 152, 152, 153, 153, 154, 154,
	155, 155, 156, 156, 156, 156, 156, 156, 300, 300,
	402, 402, 403, 403, 398, 398, 398, 401, 401, 401,
	401, 401, 400, 400, 160, 214, 214, 214, 229, 229,
	229, 229, 213, 213, 213, 175, 175, 174, 174, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 299, 299, 244, 244, 245, 245,
	192, 191, 191, 191, 191, 191, 189, 190, 188, 188,
	188, 188, 188, 187, 187, 186, 186, 186, 278, 278,
	184, 184, 182, 182, 182, 181, 181, 181, 337, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 253, 253, 258, 258, 413, 413, 412, 161,
	161, 161, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 171, 171, 171, 322, 322, 322, 322, 322, 323,
	323, 323, 320, 320, 321, 321, 262, 263, 263, 361,
	361, 319, 319, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	368, 368, 368, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 424,
	424, 424, 409, 409, 409, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 211, 211, 211, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	264, 264, 265, 265, 365, 365, 365, 365, 365, 365,
	366, 366, 367, 367, 367, 367, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 251, 208, 208, 208, 266,
	259, 259, 260, 260, 254, 254, 254, 254, 254, 254,
	254, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 255, 255, 257, 257, 268, 268, 268,
	267, 267, 267, 267, 267, 267, 267, 173, 173, 173,
	173, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 163, 163, 163, 163, 167, 167, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 168, 168, 168, 168, 166, 166, 166, 166,
	166, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 89, 90, 90,
	165, 215, 215, 342, 342, 345, 345, 343, 343, 344,
	346, 346, 346, 347, 347, 347, 348, 348, 348, 351,
	351, 220, 220, 220, 226, 226, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 7, 4, 2, 2, 1, 2,
	2, 2, 3, 2, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 3, 2, 4, 4, 4, 4, 1, 1, 1,
	3, 2, 3, 1, 1, 1, 6, 8, 0, 1,
	1, 1, 1, 5, 5, 0, 1, 1, 3, 3,
	3, 4, 6, 7, 4, 4, 7, 8, 3, 3,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 4, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 2, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	1, 12, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 7, 7, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 0, 2, 7, 8,
	0, 2, 6, 0, 2, 2, 3, 3, 4, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 6, 0, 4,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 11, 9, 11, 2, 2, 4, 5,
	1, 3, 0, 3, 5, 10, 0, 2, 0, 3,
	2, 4, 3, 0, 2, 1, 0, 2, 3, 0,
	2, 3, 0, 3, 2, 4, 3, 0, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 6, 8, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -449, -2, -1, -3, -92, -4, -88, -5, -6,
	-8, -69, -83, -85, -87, -86, -33, -7, -82, -60,
	-61, -65, -71, -76, -79, -80, -81, -93, -89, -90,
	-91, -109, -94, -25, -24, -23, -22, -101, 405, 12,
	451, -9, -10, -414, -11, 234, -232, -233, -234, -236,
	-453, -34, -35, -36, -42, -43, -44, -45, -46, -54,
	-55, -56, -37, -38, -39, -40, -48, -49, -50, -51,
	-52, -53, -41, -104, -105, -58, -57, -63, -59, -64,
	-103, 209, -62, 61, -66, -67, -68, -72, -73, -74,
	-75, -77, -78, 336, 342, 395, 537, 538, 46, -110,
	-112, 539, -26, -27, -28, -29, -30, -31, -32, 205,
	14, 484, -12, -15, -13, -16, -14, -20, -21, -19,
	-17, -18, -102, 229, 228, 37, 292, 293, 294, 340,
	227, 206, 13, 137, 138, 140, 141, 30, 41, 318,
	-111, 67, 207, -113, 10, 541, 444, 540, -119, 38,
	-157, -229, 70, 78, -223, -225, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 454, 524, 525, 526, 527, 316, 317, 481,
	246, 270, 366, 273, 280, 137, 156, 150, 178, 170,
	145, 250, 285, 251, 77, 140, 437, 88, 417, 392,
	143, 265, 267, 269, 272, 252, 166, 161, 264, 248,
	537, 159, 253, 39, 254, 183, 255, 256, 486, 413,
	315, 419, 277, 390, 160, 414, 268, 416, 185, 189,
	429, 342, 154, 155, 421, 431, 182, 226, 42, 483,
	238, 432, 187, 181, 177, 440, 281, 279, 180, 153,
	176, 249, 50, 191, 190, 192, 386, 387, 388, 389,
	257, 258, 330, 428, 173, 162, 320, 146, 22, 435,
	233, 418, 343, 259, 274, 282, 186, 188, 240, 245,
	485, 394, 244, 278, 433, 158, 237, 266, 232, 436,
	147, 336, 345, 260, 141, 271, 430, 439, 49, 358,
	152, 144, 223, 138, 242, 247, 11, 261, 262, 263,
	284, 283, 275, 174, 239, 179, 164, 151, 175, 139,
	241, 438, 359, 535, 318, 375, 172, 169, 243, 216,
	434, 420, 142, 379, 360, 167, 286, 531, 532, 533,
	331, 314, 287, 288, 165, 230, 411, 412, 289, 291,
	385, 307, 361, 393, 367, 362, 198, 295, 423, 184,
	534, 296, 297, 298, 415, 299, 300, 301, -119, -62,
	-10, -9, -111, -112, -157, 213, -237, 23, 390, -70,
	391, 209, 67, -229, -5, -4, -88, -60, -109, -235,
	-229, 292, 292, -235, 213, -229, 244, 374, -353, 219,
	-309, -282, 245, -308, -284, -311, -285, 31, 205, 207,
	206, 241, 14, 340, 215, 12, 10, 341, 227, 24,
	25, 27, 13, 342, 344, 28, 345, 348, 349, 350,
	41, 353, 354, 234, 70, 78, 73, 252, -151, -229,
	-260, -254, 95, 235, -256, -249, -250, -252, -394, -388,
	-248, 67, 121, 122, 129, 96, -251, -337, 35, 98,
	491, 452, -209, -210, -211, -212, -229, -389, -387, 73,
	79, 82, 85, 86, 84, 83, 163, 81, 74, 133,
	134, -112, 70, -409, 499, -224, 520, 524, 525, 526,
	527, 519, 46, -359, -367, 212, -365, 132, 168, 230,
	164, 12, 127, 385, 165, 496, 516, 454, 500, 523,
	493, 494, 488, 489, 490, 492, 501, 503, 515, -368,
	511, 521, 522, 509, 72, 71, 514, 513, 502, 497,
	498, 504, 487, 495, 505, 506, 512, 517, 518, 324,
	88, 325, 326, 444, 319, 327, 219, 390, 55, 328,
	329, 330, 331, 332, 451, 333, 56, 334, 323, 234,
	375, 335, 167, 184, 456, 455, 457, 448, 445, 443,
	446, 447, 449, 450, 507, 508, 510, -305, -303, -229,
	-95, -96, 529, -128, -129, -202, 19, 6, 7, 8,
	9, -447, 392, 485, 295, 337, 216, 316, 375, 299,
	244, -276, -274, -355, 289, 285, 214, 224, 223, 89,
	444, 212, 351, -425, -426, 202, 203, 204, -416, 477,
	-415, -229, 326, 26, 213, 337, 423, 424, 425, 426,
	427, -47, -369, -352, 420, 419, -241, 412, 418, 410,
	422, 413, 317, 301, 300, 205, 478, -220, 361, 393,
	240, 441, 442, 338, 394, 429, 430, 414, 88, 171,
	168, 216, 213, 316, 444, 375, 299, -425, 142, 139,
	-296, 142, 94, 147, 146, -296, 244, 374, 40, -302,
	385, -301, -303, 429, 430, 440, 71, 72, 428, -220,
	88, 411, 411, -129, -202, -128, -110, -112, -91, -414,
	214, 316, 375, 244, 215, 213, 216, 444, 292, 337,
	299, -354, -422, 31, -360, 199, 200, 201, 32, 33,
	-1, -229, 73, -135, 236, -157, 135, -135, -129, -128,
	-129, -157, -213, -229, 392, 104, -70, -70, 391, -417,
	-418, -419, -421, 209, 391, 390, 135, 15, -235, -235,
	65, -157, -284, 244, -309, -282, 35, 64, 136, 217,
	136, 64, 67, 338, 316, 375, 339, 444, 213, 351,
	216, 244, 352, 316, 375, 213, 216, 444, 244, 316,
	213, 216, 375, 244, 352, 410, 411, 216, 26, 343,
	346, 347, 411, -373, 440, 136, 94, 91, 92, 93,
	-254, 111, -267, 104, 105, 106, 107, 108, 109, 110,
	118, 117, 128, 121, 122, 123, 124, 125, 126, 127,
	119, 120, 114, 95, 112, 116, 113, 97, -112, -254,
	-260, 46, -252, -252, -252, -252, -337, -258, -254, 67,
	67, 135, 73, -254, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, -366, 67, 67, -264,
	-265, 67, 67, 67, 73, 73, 67, 67, 67, 73,
	-265, -265, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 136,
	-163, -167, -164, -166, -165, -169, -168, 168, 169, 132,
	172, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 30, 184, 230, 164, 165, 166, 167, 185, 150,
	170, 482, 193, 151, 194, 152, 195, 153, 196, 154,
	155, 197, 156, 159, 160, 161, 158, 135, -129, 136,
	67, -97, 38, -131, 21, -113, -112, 20, 31, 32,
	31, 32, 31, 32, 31, 32, 79, -150, -229, -143,
	-229, -272, 219, -272, -272, -272, -272, 215, -272, 213,
	213, 213, -272, -427, 149, 136, -416, -134, 67, -240,
	112, 116, 23, 242, 242, 279, -454, -455, 15, 114,
	-238, -455, -238, -240, -456, 215, 421, 42, 243, 242,
	-130, -131, -130, 415, 411, -324, 416, 417, -242, -455,
	-241, -240, -240, -241, -240, -240, -240, 213, 216, 444,
	299, -454, 242, -454, 30, 30, -353, -157, -353, 478,
	-221, -229, -353, -353, -428, 218, 433, 484, 145, 146,
	147, -284, 244, 244, 136, 104, 23, -304, 104, 115,
	-303, -303, -303, -304, -304, -178, 40, -228, 132, -229,
	73, -178, 40, -451, -450, -157, -130, -113, -112, 68,
	68, 68, -353, -353, -353, -353, -353, -353, -353, -353,
	-235, -143, -353, -114, -115, 123, -254, -229, -114, 38,
	411, 38, -362, 46, -109, 67, 30, 67, -229, -363,
	46, -109, 67, 30, -130, -97, -131, 135, 79, 73,
	-70, 68, 136, -420, 85, 86, -423, 182, 174, -229,
	-84, 73, -3, -4, -5, -6, -33, -60, -109, -390,
	-388, 67, 31, 384, 64, 15, -310, 213, 444, 337,
	240, 216, 316, -308, -291, -288, -286, -228, -284, -287,
	-286, -313, -213, 411, -98, 396, 291, -254, -254, -254,
	-254, -254, 84, 95, 314, 85, 86, -249, -268, 31,
	287, 288, -250, -250, -250, -250, -250, -250, -250, -250,
	-250, -250, -250, -250, -257, -266, -337, 67, 114, 112,
	116, 113, 97, -252, -252, -250, -250, 68, 136, -413,
	-412, 99, -254, -254, -229, -410, -411, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 328, 323,
	329, 327, 319, 335, 330, 331, 167, 475, 476, 469,
	470, 471, 472, 473, 474, -259, -260, -259, -254, -410,
	-259, -208, 32, 31, -260, -260, -260, 68, -254, -424,
	312, 311, 313, -132, -229, -259, 68, 68, 68, 79,
	-260, -260, -259, -250, -259, -411, -208, -208, -260, -260,
	-208, -208, -208, -208, 123, -208, -208, -208, -208, -208,
	-208, -208, -208, -303, 40, -348, 359, 358, -342, -344,
	67, -343, 67, -343, -343, -343, 67, 67, -345, 67,
	-345, -345, -342, -346, 67, -346, -347, 67, -346, -229,
	-130, -96, -371, -370, -254, 40, 530, -97, -254, -127,
	-126, -254, -448, 73, 34, 67, 135, -157, 95, -430,
	-229, -292, -289, -286, -229, -282, -229, -229, -272, -272,
	-272, -157, -428, -415, 34, -133, -229, -198, 16, -252,
	-252, -286, 244, -454, -240, -222, -221, -242, -237, -242,
	-198, -455, -240, -240, -242, -238, -198, -229, 411, -198,
	-198, -324, -239, -229, -239, -272, -221, -222, -222, -157,
	-193, 210, 207, -177, -195, 356, 246, -273, 250, 77,
	251, 392, 252, 215, 254, 255, 256, 226, 257, 258,
	259, 385, 260, 261, 262, 263, 339, 6, 302, 40,
	-430, -430, 30, -292, -229, -122, -117, -121, -118, -123,
	-201, -203, -120, 67, -157, -112, -229, 434, 435, 143,
	146, 145, 31, 384, -307, 384, 31, -282, -301, -297,
	73, 385, -287, -306, 64, 132, -370, -304, -304, -304,
	-306, -306, 131, 136, -452, 433, 434, 202, -97, -159,
	-157, -430, -291, -282, -229, -159, -159, -229, 67, -229,
	-197, 136, -196, 15, -230, -229, 34, 73, 135, -197,
	73, -159, 73, -295, 64, -364, -261, -408, 529, -137,
	68, -132, -406, -407, -132, -136, -229, -364, -137, 68,
	-406, -97, -97, -229, 23, -70, -418, 135, 136, -133,
	-310, -290, -287, -312, 123, -229, -298, 136, 484, 542,
	71, 217, -440, -439, 376, 68, 136, -374, 218, 451,
	73, 543, 198, 84, 314, 85, 86, -337, -260, -257,
	-252, -252, -250, -250, -255, 231, -255, 94, -254, -253,
	-412, 101, -254, 34, 136, 65, 135, 68, 68, 15,
	15, 68, -254, 68, 68, 68, 68, 15, 15, -254,
	68, 135, 68, 68, 68, 68, 65, 68, 136, 68,
	136, -260, -254, 68, 68, -254, -254, -254, -260, 68,
	-254, -254, -254, -254, -254, -254, -254, -254, -254, -351,
	360, 79, 79, -215, 73, -215, 79, 79, 79, 136,
	68, 73, 136, 22, 136, -124, 36, 37, -151, -144,
	-145, -146, -147, -163, -213, 169, 172, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 230, 164,
	165, 166, 167, 185, 150, 170, 151, 152, 153, 154,
	155, 156, 159, 160, 161, 158, -229, -134, 35, -433,
	363, -441, 136, 40, -439, 444, -275, 65, -107, 15,
	-157, -157, -157, -170, 34, 15, -116, -158, -229, 67,
	68, 136, -254, -283, 65, -229, -222, -198, -157, -229,
	-198, -198, -240, -242, -242, -238, 135, -221, -134, -154,
	-160, -155, -213, -245, -156, 222, 220, 224, -403, 89,
	225, 276, 90, 215, -194, 215, 90, 221, 225, 220,
	136, -195, -226, 104, -226, -220, 131, -226, -226, -226,
	-226, 253, 253, -226, -226, -226, -226, -226, -226, -226,
	-226, -226, -226, -226, -226, -226, -226, 67, -434, 363,
	30, 322, -441, -108, 316, 30, -204, -205, -206, -207,
	53, 57, 59, 54, 55, 56, 60, 30, 136, -227,
	-231, 34, -229, 73, -227, -112, -117, -122, -227, 67,
	144, 147, 147, 146, 217, 67, 104, -306, -306, -306,
	40, -228, -450, 440, 434, 136, 64, -144, -198, -115,
	-117, -229, 73, -229, 123, -198, -185, 532, 38, -377,
	416, 39, 136, 67, 68, 136, 46, 136, 104, 68,
	136, 68, 46, 135, 392, -229, -388, 68, -312, 136,
	217, 135, 135, -288, 342, -228, -290, 20, 484, -213,
	38, -219, -218, 73, 543, 68, -255, -255, 94, -252,
	-249, 68, 102, -254, 100, -161, -163, 358, 359, -162,
	-168, 132, 168, 230, 167, 166, 164, 358, 359, -178,
	-229, -254, -254, 68, -254, -254, 15, -229, -178, -250,
	-254, -129, 68, -319, 406, -319, 68, 68, 68, 68,
	-319, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 136, 68, 68, 68, 136, 68, 136, -370,
	-377, -254, -254, -126, -125, 43, 350, 68, 136, -163,
	34, -436, 418, 365, -226, -247, -246, 318, 41, -357,
	385, 371, 372, -289, 244, -229, 64, 306, 307, 308,
	309, -270, -271, -269, -273, -430, 67, 67, 67, -338,
	296, -163, -157, -116, -229, 15, 136, -429, 135, -1,
	-229, -282, -240, -198, -455, -198, -240, -240, -242, -229,
	34, -163, -156, -229, 90, -402, -403, -272, -402, 90,
	67, -229, -229, -229, 90, 90, -195, 79, 79, -226,
	-226, 79, 73, 73, 73, -226, -226, 79, 73, -231,
	79, 79, 79, 79, 40, 73, -183, 40, 264, 268,
	265, 266, 267, 79, 40, 79, 40, 79, 40, -229,
	67, -404, -405, 73, -436, -226, 322, 104, -247, -106,
	77, 31, -138, 210, 207, -430, -294, -293, -213, -121,
	-121, -121, -121, 53, 53, 53, 58, 53, 58, 53,
	-206, -294, -123, -134, -231, 68, -446, -445, -444, -442,
	61, 218, 62, -259, 147, -290, -243, 73, -297, -157,
	-157, 68, -200, 17, 135, -200, 79, 73, -385, 402,
	397, 399, 90, -261, -372, -371, 46, -109, -132, -364,
	-407, -370, -229, 46, -109, -364, -229, 79, 15, -287,
	-282, 123, 123, -229, 343, -298, 73, 364, 73, 213,
	544, 136, 104, -219, -249, -254, 68, -171, 155, 154,
	-171, 68, -343, -343, -342, -345, -342, -171, -171, 68,
	68, 23, 68, 68, 68, -254, 68, 68, 136, -361,
	453, -319, 67, -319, -319, -319, -319, -319, -319, -319,
	-319, -319, -319, -319, -319, 73, 79, 79, -385, 44,
	45, 73, 211, -146, 40, -109, -437, 77, -431, 73,
	-229, -438, 77, 366, 134, 320, 40, 367, 368, 382,
	315, 79, 79, 373, -432, -229, -139, 316, -157, -269,
	-220, 131, 255, 299, -152, -153, -154, -152, -152, -339,
	298, 20, 79, 122, -135, 65, 135, -117, -158, -229,
	123, 68, -198, -229, -198, -198, -240, -109, -175, -174,
	-172, 84, 95, 40, 356, -173, 77, 131, 269, 247,
	270, -192, -244, 64, 362, 220, 89, 90, 344, -245,
	-398, -400, -229, -400, -229, -398, -398, -272, -254, -229,
	-178, -178, 73, 73, -179, 247, -159, 68, 136, 104,
	-437, -431, 104, 73, -438, 73, 136, -138, -138, -198,
	136, 104, -141, -140, 64, 65, -142, 64, -140, 53,
	53, -198, -444, -443, 23, -403, -403, -403, 68, 68,
	-199, 18, 20, 123, -199, -185, -349, 531, -381, -383,
	397, 20, 20, 13, 68, -364, -364, -282, -298, 385,
	-157, -218, 73, 544, -254, 68, -254, 68, 73, -263,
	-262, 236, 68, 68, -349, -148, -163, -248, 73, -435,
	376, 73, 73, 79, 40, 79, 134, 369, -358, -106,
	-138, 67, -226, -226, -226, -229, 68, 136, 68, 68,
	-340, 235, 79, 122, 79, 122, 79, -227, -117, -229,
	-198, -429, 135, -198, -198, -172, 84, -250, 73, -180,
	-228, 132, -181, 40, 268, 264, -182, 40, 248, 249,
	-184, 67, 276, 13, 90, 90, -157, 67, 65, 286,
	67, 67, 67, -400, 68, 248, 249, 68, -405, 73,
	-435, 73, -430, -129, -293, -370, -254, 67, -254, 67,
	53, 19, 17, -254, -260, -185, 73, 20, 73, -379,
	73, -294, -100, -375, -324, 68, 68, -319, -129, 20,
	-185, 483, 20, 484, 319, 40, 79, 40, 370, -277,
	-279, -213, 67, -178, -180, 73, -176, -177, -154, -99,
	-98, -176, -341, 138, 79, 122, 79, 79, -198, -198,
	79, 67, -365, -278, 67, -277, -401, 306, 307, 308,
	310, 309, -401, -277, -277, -277, 67, -300, -299, 277,
	95, -130, -133, -399, -229, 220, 20, 20, -216, 533,
	73, 399, -350, 534, -384, 402, -378, -376, 397, 398,
	399, 400, -321, -320, -323, 403, 278, 409, -260, -216,
	-149, -229, 73, 364, 73, 319, 68, 136, -342, -254,
	-314, 236, -100, -314, -356, 146, 297, 484, 79, 122,
	79, -129, 68, -254, -264, -187, -186, 480, -277, 68,
	68, 68, 68, -277, 277, 68, 68, 136, 67, 20,
	73, -386, 218, -382, -383, 401, -376, 20, 399, 20,
	20, 68, -322, 97, 369, 373, -254, 34, 385, -280,
	-279, -124, 68, -315, 285, 20, -315, 297, 79, 122,
	79, -130, 68, -191, -189, -190, 64, 414, 274, 275,
	68, -280, -280, -280, -280, 68, -229, 220, -217, -229,
	-379, -393, 67, 79, -381, -380, -382, 20, -379, 20,
	-379, -379, -322, 529, 407, 408, 407, 408, 73, -281,
	226, 77, 484, 304, 305, -124, 20, -316, 278, 279,
	-317, -328, 281, 79, -299, -190, 64, -189, 64, 14,
	13, -192, 68, 136, -397, 30, 68, -392, -391, -214,
	-387, -229, 402, 403, 73, -379, 94, -226, 73, 303,
	-213, 67, -326, 282, 67, -324, 67, -324, 90, 307,
	-188, 271, 272, 30, 146, -188, -229, -396, -395, -394,
	68, 136, 135, -322, 79, -229, -313, -318, 283, 79,
	-250, 67, -250, 67, -325, 280, 67, 84, 40, 273,
	136, 104, -391, -229, 68, -330, 67, 20, 68, -313,
	68, -313, 67, 104, -250, -395, 40, -254, 135, -331,
	-329, 236, -317, 68, 68, 68, -313, 79, 68, -229,
	68, 136, -229, -327, 284, 68, -329, -332, 46, 79,
	-336, -333, 67, -195, 238, 114, -336, -195, -335, -334,
	283, 239, 67, 68, 136, -229, 235, 67, -260, -334,
	-333, -260, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 696, 697, 698, 699, 700, 0, 0,
	0, 470, 471, 0, 445, 0, 0, 0, 0, 0,
	0, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 298, 299, 300, 301, 302,
	303, 0, 233, 229, 208, 209, 210, 169, 170, 171,
	172, 240, 241, 322, 0, 0, 0, 0, 0, 553,
	-2, 35, 701, 702, 703, 704, 705, 706, 707, -2,
	483, 0, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 287, 288, 289, 283, 284, 286, 285,
	-2, 0, 483, 222, 0, 213, 213, 0, 0, 0,
	573, 0, 0, 588, 610, 33, 0, 0, 531, 0,
	536, 942, 978, 979, 980, 981, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 531, 234,
	472, 473, 573, 573, 443, 0, 269, 0, 1432, 273,
	0, 0, 0, 440, 264, 265, 266, 267, 268, 0,
	695, 0, 0, 260, 0, 228, 1491, 0, 0, 0,
	0, 0, 0, 113, 770, 115, 772, 119, 126, 0,
	0, 131, 132, 135, 136, 137, 138, 139, 0, 143,
	0, 145, 148, 0, 150, 151, 0, 154, 155, 156,
	0, 166, 167, 168, 773, 774, 775, -2, 44, 710,
	1357, 1252, 0, 1259, 1260, 1271, 1282, 1051, 1052, 1053,
	1054, 0, 0, 0, 0, 0, 1061, 1062, 0, 1074,
	1591, 0, 1068, 1069, 1070, 1071, 53, 65, 66, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 0,
	1225, 1038, 978, 0, 1599, 0, 1619, 1624, 1625, 1626,
	1627, 1618, 0, 0, 1210, 0, 1200, 0, 0, -2,
	-2, 0, 0, 1559, -2, 1596, 1615, 1623, 1600, 1622,
	1593, 1594, 1588, 1589, 1590, 1592, 1601, 1603, 1614, 0,
	1610, 1620, 1621, 0, 67, 68, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1216,
	-2, 1218, 1219, 1221, 1222, 1223, 1224, -2, 1227, 1228,
	1229, -2, -2, 1232, 1233, 1234, 1235, 1236, 1237, 1240,
	-2, 1242, -2, -2, 1212, 1213, 1214, 1215, 1204, 1205,
	1206, 1207, 1208, 1209, -2, -2, -2, 0, 206, 204,
	573, 646, 0, -2, 0, 0, 0, 593, 596, 599,
	602, 0, 36, 37, 0, 0, 802, 802, 802, 802,
	802, 0, 802, 0, 0, 0, 802, 777, 778, 779,
	800, 801, 848, 488, 484, 485, 486, 487, 561, 0,
	563, 566, 421, 370, 0, 0, 0, 382, 376, 0,
	0, 421, 0, 0, 568, 568, 0, 424, 431, 421,
	421, -2, 421, 421, 421, 0, 387, 388, 389, 376,
	0, 376, 393, 394, 395, 406, 407, 432, 1381, 0,
	0, 322, 0, 322, 0, 322, 322, 490, 223, 224,
	212, 214, 0, 218, 0, 211, 1491, 0, 0, 180,
	1559, 185, 0, 1439, 1505, 1454, 0, 0, 1472, 0,
	-2, 0, 250, 568, 0, 574, 0, 573, 0, 0,
	322, 322, 322, 322, 322, 322, 322, 322, 0, 0,
	322, 0, 0, 611, 612, 607, 608, 609, 613, 614,
	3, 0, 0, 0, 0, 535, 0, 0, 568, -2,
	0, 444, 270, 982, 0, 0, 274, 275, 0, 0,
	290, 0, 293, 278, 279, 280, 0, 0, 262, 263,
	0, 0, 230, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 123, 120, 127, 130, 140, 147, 0,
	159, 161, 164, 121, 128, 133, 134, 141, 162, 122,
	124, 125, 129, 163, 165, 142, 146, 160, 144, 149,
	152, 153, 158, 0, 94, 0, 0, 0, 0, 0,
	1258, 0, 0, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1252,
	0, 0, 1057, 1058, 1059, 1060, 1063, 0, 1075, 0,
	0, 0, 1311, 0, 1250, 1250, 0, 1250, 1246, 0,
	0, 0, 0, 0, 0, 1250, 1188, 0, 0, 1190,
	1201, 0, 0, 0, 1194, 1195, 1250, 0, 1250, 1199,
	1184, 1185, 0, 1246, 1246, 0, 0, 1246, 1246, 1246,
	1246, 1246, 1246, 1246, 1246, 1246, 1246, 1246, 1246, 0,
	1358, 1376, 1313, 1314, 1315, 1363, 1317, 1367, 1367, 1367,
	1367, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	0, 0, 1356, 1336, 1365, 1365, 1365, 1363, 1360, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1370, 1370, 1373, 1370, 0, 568, 0,
	0, 556, 0, 537, 0, 590, 592, 0, 594, 595,
	597, 598, 600, 601, 603, 604, 38, 0, 709, 0,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 802,
	802, 802, 0, 490, 489, 0, 562, 0, 0, 619,
	0, 0, 0, 376, 421, 381, 378, 377, 427, 428,
	424, 0, 424, 619, 0, 400, 401, 402, 421, 421,
	408, 569, 409, 410, 424, 0, 429, 430, 619, 0,
	0, 619, 619, 0, 418, 419, 420, 0, 0, 802,
	0, 378, 391, 378, 1382, 1383, 0, 811, 0, 0,
	0, 439, 0, 0, 0, 491, 0, 0, 216, 0,
	221, 173, 0, 0, 0, 0, 0, 0, 202, 203,
	0, 0, 0, 0, 0, 193, 196, 936, 937, 767,
	768, 197, 198, 242, 243, 0, 537, 589, 591, 585,
	586, 587, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 627, 621, 623, 690, 53, 627, 0,
	0, 0, 510, 523, 505, 0, 512, 0, 943, 492,
	523, 494, 0, 512, 537, 559, 537, 0, 271, 0,
	276, 0, 0, 292, 294, 295, 296, 281, 282, 441,
	258, 259, 251, 252, 253, 254, 255, 256, 257, 261,
	63, 0, 231, 232, 0, 0, 0, 107, 108, 109,
	110, 111, 112, 114, 98, 460, 462, 759, 771, 0,
	762, 0, 117, 157, 90, 0, 0, 1253, 1254, 1255,
	1256, 1257, 1261, 0, 1263, 1265, 1267, 1269, 0, 1287,
	-2, -2, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1272, 1285, 1286, 0, 0, 0,
	0, 0, 0, 1283, 1283, 1278, 0, 1055, 0, 1072,
	1076, 0, 0, 0, 54, 1245, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 0, 1251, 0, 1252, 0,
	0, 0, 1247, 1248, 0, 0, 0, 1143, 0, 0,
	1149, 1150, 1151, 0, 518, 0, 1211, 1189, 1202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 1379, 1377, 1378, 1316, 1364,
	0, 1341, 0, 1342, 1343, 1344, 0, 0, 1337, 0,
	1338, 1339, 1340, 1332, 0, 1333, 1334, 0, 1335, 205,
	645, 647, 0, 527, 529, 530, 0, 557, 570, 575,
	576, 579, 34, 39, 0, 714, 0, 566, 0, 0,
	726, 320, 753, 0, 0, 769, 792, 798, 0, 0,
	0, 826, 0, 564, 0, 0, 659, 369, 0, 422,
	423, 373, 1491, 378, 619, 383, 379, 384, 426, 385,
	386, 0, 619, 619, 421, 424, 411, 425, 424, 414,
	415, 0, 433, 437, 434, 0, 436, 390, 392, 566,
	305, 0, 0, -2, 892, 1384, 1384, 0, 1384, 1384,
	1384, 1384, 0, 0, 1384, 1384, 1384, 1384, 1384, 1384,
	1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 0, 812,
	317, 0, 0, 320, 743, 632, 0, 633, 634, 630,
	661, 685, 685, 0, 685, 665, 942, 225, 226, 0,
	0, 220, 174, 175, 0, 177, 178, 179, 186, 181,
	183, 0, 0, 187, 199, 200, 201, 0, 0, 0,
	191, 192, 0, 0, 245, 246, 248, 0, 555, 457,
	940, 458, 459, 463, 0, 465, 466, 467, 714, 748,
	619, 0, 628, 0, 624, 691, 0, 693, 0, 619,
	547, 0, 539, 499, 0, 504, 520, 0, 524, 0,
	0, 516, 509, 513, 0, 0, 533, 493, 0, 0,
	498, 558, 560, 983, 0, 277, 291, 0, 0, 0,
	0, 101, 756, 0, 102, 106, 96, 0, 0, 0,
	761, 0, 758, 763, 0, 116, 0, 0, 91, 92,
	817, 822, 0, 1262, 1264, 1266, 1268, 1270, 0, 1273,
	1283, 1283, 1279, 0, 1274, 0, 1276, 0, 1253, 0,
	1077, 0, 0, 0, 0, 0, 0, 1133, 1134, 0,
	0, 1138, 0, 1140, 1141, 1142, 1144, 0, 0, 0,
	1148, 0, 1187, 1203, 1191, 1192, 0, 1196, 0, 1198,
	0, 573, 0, 1111, 1111, 0, 0, 0, 0, 1111,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 1312,
	1380, 0, 0, 0, 1361, 0, 0, 0, 0, 0,
	648, 539, 0, 0, 0, 582, 580, 581, 0, 0,
	715, 716, 718, 719, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1424, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 713, 0, 803, 733,
	1384, 324, 0, 0, 755, 0, 0, 0, -2, 0,
	0, 0, 0, 828, 0, 0, 0, 477, 481, 33,
	567, 0, 620, 371, 0, 372, 421, 380, 619, 942,
	403, 404, 619, 421, 421, 424, 0, 435, 0, 306,
	948, 949, 0, 0, 951, 1008, 0, 960, 802, 960,
	0, 0, 962, 963, 307, 0, 0, 0, 0, 0,
	811, 894, 0, 1385, 0, 1384, 1384, 0, 0, 0,
	0, 1384, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 733, 1384,
	0, 0, 324, 740, 0, 0, 0, 0, 0, 0,
	652, 0, 0, 651, 0, 0, 0, 0, 0, 566,
	686, 0, 688, 689, 663, -2, 0, 632, 668, 1250,
	227, 215, 217, 0, 0, 0, 0, 188, 189, 190,
	194, 195, 244, 247, 249, 0, 0, 0, 617, 622,
	629, 692, 694, 54, 625, 617, 40, 0, 0, 543,
	0, 0, 523, 525, 0, 0, 523, 0, 0, 532,
	0, 0, 523, 0, 0, 442, 64, 297, 0, 0,
	0, 0, 0, 461, 0, 760, 98, 0, 0, 118,
	0, 0, 820, 0, 822, 1249, 1275, 1277, 0, 1284,
	1280, 1056, 1064, 1073, 0, 0, 1079, 1091, 1091, 0,
	1082, 1367, 1367, 1085, 1363, 1365, 1363, 1091, 1091, 0,
	55, 0, 0, 1139, 0, 0, 0, 519, 0, 0,
	0, 1109, 1111, 1115, 0, 1116, 1111, 1111, 1111, 1111,
	1121, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1369,
	1368, 1354, 0, 1355, 1366, 1371, 0, 1374, 0, 528,
	543, 571, 572, 577, 578, 0, 0, 0, 0, 720,
	0, 736, 734, 735, 0, 750, 325, 326, 327, 328,
	0, 0, 0, 754, 0, 500, 0, 793, 794, 795,
	796, 797, -2, 806, 0, 0, 944, 944, 944, 836,
	0, 827, 531, 0, -2, 0, 0, 479, 0, 0,
	660, 374, 619, 396, 0, 412, 619, 619, 421, 438,
	0, -2, 950, 1009, 972, 972, 961, 972, 972, 802,
	0, 309, 310, 311, 0, 313, 893, 895, 896, 0,
	0, 899, 900, 901, 902, 0, 0, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 930, 931, 932,
	933, 934, 935, 915, 916, 917, 918, 919, 920, 927,
	0, 0, 924, 0, 736, 0, 0, 0, 750, 742,
	0, 744, 745, 0, 0, 502, 619, 237, 0, 655,
	649, 0, 638, 653, 654, 641, 0, 643, 0, 639,
	640, 619, 631, 662, 687, 664, 667, 669, 670, 676,
	0, 0, 0, 0, 219, 176, 0, 344, 182, 941,
	464, 469, 615, 0, 0, 615, 548, 547, 545, 78,
	0, 0, 0, 521, 0, 526, 523, 508, 517, 507,
	514, 515, 534, 523, 497, 496, 984, 272, 0, 757,
	98, 103, 104, 105, 99, 97, 764, 0, 766, 0,
	818, 822, 0, 0, 1281, 1078, 1065, 1080, 1092, 1093,
	1081, 1066, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1067,
	1135, 0, 1137, 1145, 1146, 0, 1193, 1197, 0, 0,
	0, 1114, 1107, 1117, 1118, 1119, 1120, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1362, 0, 0, 545, 583,
	584, 708, 0, 717, 0, 724, 725, 0, 0, 728,
	729, 738, 0, 0, 0, 330, 331, 0, 0, 0,
	343, 339, 340, 341, 321, 749, 740, 0, 0, 807,
	1384, 1384, 1384, 0, 0, 945, 946, 0, 0, 839,
	0, 0, 830, 0, 685, 0, 0, 619, 478, 481,
	482, 565, 375, 619, 416, 413, 619, 304, 974, -2,
	987, 989, 0, 0, 992, 993, 0, 0, 0, 0,
	1030, 999, 0, 0, 1003, 0, 1299, 1300, 0, 1007,
	0, 964, 973, 0, 973, 0, 0, 972, 0, 312,
	897, 898, 903, 904, 921, 0, 0, 923, 0, 0,
	314, 0, 0, 315, 319, 741, 0, 746, 747, 573,
	0, 0, 635, 656, 0, 0, 636, 0, 637, 642,
	644, 236, 671, 0, 0, 673, 674, 675, 666, 184,
	605, 0, 0, 626, 606, 41, 547, 0, 544, 79,
	0, 0, 0, 0, 522, 506, 495, 100, 95, 765,
	81, 821, 823, 819, 0, 1147, 0, 1111, 1110, 573,
	1108, 0, 1372, 1375, 547, 0, 723, 721, 737, 727,
	0, 751, 752, 0, 332, 333, 0, 336, 342, 739,
	501, 0, 0, 0, 0, 799, -2, 0, 0, -2,
	842, 0, 837, 0, 829, 0, 832, 619, 619, -2,
	475, 480, 0, 397, 417, 988, 990, 991, 994, 995,
	938, 939, 996, 1035, 1036, 1037, 997, 1032, 1033, 1034,
	998, 0, 0, 0, 1297, 1298, 1028, 0, 0, 0,
	0, 0, 0, 0, 958, 928, 929, 922, 925, 926,
	318, 316, 503, 568, 238, 239, 657, 0, 650, 680,
	677, 0, 0, 616, 618, 549, 546, 0, 540, 542,
	89, 511, 51, 72, 0, 1136, 1186, 1113, 1104, 0,
	549, 0, 0, 0, 329, 334, 0, 337, 338, 0,
	788, 1363, 0, 808, 809, 810, 849, -2, 947, 814,
	81, 849, 833, 0, 840, 0, 838, 831, 573, 476,
	0, 0, 1200, 1023, 0, 0, 965, 967, 968, 969,
	970, 971, 966, 0, 0, 0, 0, 957, 959, 1004,
	0, 235, 0, 0, 681, 683, 678, 679, 42, 0,
	80, 0, 43, 0, 69, 0, 82, 83, 0, 0,
	0, 0, 0, 1105, 0, 1099, 1100, 1101, 1106, 538,
	0, 722, 730, 0, 732, 335, 781, 0, 579, 0,
	851, 0, 816, 851, 825, 0, 835, 0, 844, 0,
	841, 568, 1031, 0, 1002, 1011, 1024, 0, 0, 781,
	781, 781, 781, 0, 1005, 658, 672, 0, 0, 0,
	52, 56, 0, 78, 75, 0, 84, 0, 0, 0,
	0, 1112, 1102, 0, 0, 0, 0, 0, 731, 780,
	789, 790, 579, 813, 0, 888, 815, 834, 843, 0,
	846, 474, 1000, 1010, 1012, 1013, 0, 1025, 1026, 1027,
	1029, 952, 953, 954, 955, 0, 682, 684, 0, 551,
	541, 45, 0, 0, 73, 74, 76, 0, 85, 0,
	87, 88, 0, 1094, 1095, 1097, 1096, 1098, 711, 782,
	1384, 0, 0, 786, 787, 791, 0, 876, 0, 0,
	882, 0, 889, 845, 1001, 1014, 0, 1015, 0, 0,
	0, 956, 550, 0, 824, 0, 57, 0, 59, 61,
	62, 975, 70, 71, 77, 86, 0, 0, 784, 0,
	852, 0, 854, 0, 0, 0, 0, 0, 886, 0,
	1016, 1018, 1019, 0, 0, 1017, 552, 46, 47, 0,
	58, 0, 0, 1103, 783, 785, 0, 856, 0, 877,
	0, 0, 0, 0, 0, 0, 0, 1020, 1022, 1021,
	0, 0, 60, 976, 853, 850, 0, 888, 878, 0,
	880, 0, 0, 0, 0, 48, 49, 50, 0, 0,
	858, 0, 874, 879, 881, 883, 0, 887, 885, 977,
	857, 0, 870, 855, 0, 884, 859, -2, 0, 875,
	860, -2, 0, 868, 0, 0, 861, 869, 0, 864,
	0, 0, 0, 863, 0, -2, 871, 0, 0, 865,
	-2, 0, 873, 872,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 541,
	105, 104, 106, 3, 542, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 543, 117, 544, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:659
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:665
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:700
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:705
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:711
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:731
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:737
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:744
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:752
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:758
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:767
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:776
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:786
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:808
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:832
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:838
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:842
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:848
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:855
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:863
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:867
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:881
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:885
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:889
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:902
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:908
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:917
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:928
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:932
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:938
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:942
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:948
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:952
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:958
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:982
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1001
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1005
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1009
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1033
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1040
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1045
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1052
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1061
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1085
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1089
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1095
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1101
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1119
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1136
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1159
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1176
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1182
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1195
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1206
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1219
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1223
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1233
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1265
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1271
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1286
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1322
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1326
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1339
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1348
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1352
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1514
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1518
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1522
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1526
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1530
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1546
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1619
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1623
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1627
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1633
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1643
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1650
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1656
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1660
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1666
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1674
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1683
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1691
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1699
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1722
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1745
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1752
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1767
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1774
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1781
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1798
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1804
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1808
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1814
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1818
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1824
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1828
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1839
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1862
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1866
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1870
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1923
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1929
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1936
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1953
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1960
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1971
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1982
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1986
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1992
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2002
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2008
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2012
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2018
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2024
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2028
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2036
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2054
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2064
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2070
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2074
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2080
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2086
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2110
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2114
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2130
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2148
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2189
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2193
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2199
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2205
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2210
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2211
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2212
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2217
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.AlterTable{
				Table:   *yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2252
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2259
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2263
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2280
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2339
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2345
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2389
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2413
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2421
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2425
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2441
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2445
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2449
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2453
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2471
		{
			yyVAL.item = nil
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2476
		{
			yyVAL.item = nil
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2511
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2537
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2548
		{
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2552
		{
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2557
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2572
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2590
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2596
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2613
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2633
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2637
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2643
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2650
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2660
		{
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2662
		{
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2671
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2690
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2698
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2704
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2716
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2731
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2741
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2753
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2757
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2763
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2775
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2789
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2795
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2811
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2815
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2820
		{
			yyVAL.str = ""
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2824
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2830
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2843
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2847
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2853
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2858
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2862
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2866
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2872
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2876
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2882
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2888
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2892
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2896
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2902
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2906
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2946
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2955
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2959
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2983
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2999
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3011
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3017
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3028
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3033
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3040
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3069
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3080
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3084
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3090
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3095
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3102
		{
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3104
		{
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3107
		{
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3116
		{
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3120
		{
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3125
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3134
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3147
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3155
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3162
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3169
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3202
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3208
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3212
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3218
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3231
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3239
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3253
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3272
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3276
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3285
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3289
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3304
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3308
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3314
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3318
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3324
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3328
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3334
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3339
		{
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3350
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3354
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3370
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3376
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3380
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3386
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3390
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3419
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3426
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3444
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3476
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3480
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3493
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3497
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3502
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3506
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3513
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3518
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3525
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3573
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3577
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3583
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3595
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3604
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3610
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3614
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3627
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3633
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3639
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3643
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3649
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3654
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3658
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3662
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3667
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3671
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3675
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3689
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3703
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3717
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3727
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3737
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3757
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3774
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3782
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3790
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3798
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3806
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3814
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3822
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3830
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3838
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3848
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3873
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3877
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3881
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3890
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3907
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3916
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3925
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3931
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3935
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3941
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3945
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3950
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3954
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3959
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3967
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3973
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3981
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3989
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3999
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4005
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4014
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4023
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4032
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4042
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4046
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4056
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4060
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4064
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4068
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4074
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4084
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4088
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4094
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4104
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4110
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4116
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4120
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4124
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4134
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4140
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4144
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4150
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4154
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4160
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4164
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4174
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4187
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4193
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4199
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4212
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4230
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4234
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4250
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4254
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4258
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4263
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4267
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4271
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4275
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4284
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4288
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4292
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4296
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4301
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4305
		{
			yyVAL.str = yyDollar[1].str
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4309
		{
			yyVAL.str = yyDollar[2].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4315
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4321
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4325
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4329
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4333
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4337
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4343
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 708:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4385
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4391
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 711:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4398
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4410
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4415
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4421
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4428
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4432
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4438
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4444
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4448
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4452
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4458
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4464
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4481
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4493
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4499
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4509
		{
			yyVAL.str = yyDollar[1].str
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4513
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4532
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4546
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4553
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4561
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4567
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4576
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4588
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4599
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4603
		{
			yyVAL.str = yyDollar[2].str
		}
	case 742:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4609
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4629
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4635
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4641
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4650
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4659
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4670
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4678
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4784
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4788
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4804
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4808
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4814
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4824
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4828
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4832
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4841
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4847
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4854
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4860
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4869
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4876
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4885
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4889
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4895
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4909
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4913
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4917
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4934
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4940
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4963
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4989
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4993
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4997
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5001
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5007
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5011
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5017
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5022
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5039
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5049
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5064
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5087
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5093
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5097
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5103
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5107
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5111
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5126
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5138
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5147
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5160
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5177
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5185
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5196
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5200
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5205
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5209
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5216
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5240
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5254
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5262
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5269
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5276
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5283
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5294
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5306
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5313
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5324
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5331
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5342
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5349
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5356
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5363
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5379
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5383
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5397
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5404
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5415
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5428
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5434
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5438
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5444
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5453
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5467
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5473
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5477
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5483
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5490
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5499
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5503
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5512
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5517
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5521
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5526
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5530
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5540
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5544
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5555
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5563
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5571
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5579
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5590
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5599
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5609
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5619
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5623
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5628
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5632
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5641
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5647
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5651
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5655
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5665
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5669
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5673
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5681
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5686
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5690
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5698
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5706
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5710
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5714
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5718
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5722
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5726
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5730
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5734
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5738
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5742
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5746
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5750
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5754
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5758
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5762
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5766
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5770
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5774
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5781
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5785
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5791
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5796
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5800
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5804
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5818
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5822
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5826
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5830
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5848
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5857
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5862
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5868
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5879
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5885
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5889
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5895
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5907
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5913
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5922
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5931
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5954
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5963
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5973
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5987
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5991
		{
			yyVAL.str = yyDollar[1].str
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6001
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6007
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6013
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6027
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6031
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6037
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6043
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6047
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6051
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6057
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6061
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6065
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6069
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6075
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6079
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6083
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6092
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6098
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6102
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6108
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6112
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6116
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6120
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6124
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6128
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6133
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6137
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6141
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6145
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6149
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6153
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6157
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6161
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6174
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6189
		{
			yyVAL.str = ""
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6199
		{
			yyVAL.str = ""
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6203
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6209
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6221
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6228
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6235
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6242
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6249
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6258
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6264
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6274
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6278
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6282
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6286
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6291
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6298
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6302
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6306
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6315
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6320
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6324
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6340
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6346
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6350
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6354
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6358
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6362
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6366
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6370
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6374
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6378
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6382
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6386
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6390
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6394
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6400
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6404
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6408
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6416
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6420
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6424
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6428
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6432
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6436
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6440
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6444
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6449
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6457
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6466
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6475
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6479
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6483
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6487
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6496
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6505
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6511
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6515
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6521
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6531
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6548
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6578
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6591
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6603
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6617
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6647
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6664
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6679
		{
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6685
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6689
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6693
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6699
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6703
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6711
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6715
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6719
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6725
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6732
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6745
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6752
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6761
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6766
		{
			yyVAL.str = ","
		}
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6770
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6779
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6789
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6800
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6810
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6819
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6838
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6848
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6858
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6868
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6878
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6888
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6898
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6908
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6928
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6938
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6948
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6965
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6973
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6981
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6989
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6997
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7007
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7015
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7024
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7032
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7040
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7048
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7056
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7067
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7077
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7100
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7122
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7158
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7170
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7182
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7193
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7201
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7208
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7215
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7227
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7235
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7243
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7254
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7263
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7272
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7280
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7290
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7298
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7312
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7322
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7341
		{
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7343
		{
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7384
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7395
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7399
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7403
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7409
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7418
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7424
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7428
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7435
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7439
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7443
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7455
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7459
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7463
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7469
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7473
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7477
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7481
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7485
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7489
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7493
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7497
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7501
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7505
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7513
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7517
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7521
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7525
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7529
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7533
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7537
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7541
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7545
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7549
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7559
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7565
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7569
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7584
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7594
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7598
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7632
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7642
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7655
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7676
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7680
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7694
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7698
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7705
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7716
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7721
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7727
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7739
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7751
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7763
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7776
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7789
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7802
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7815
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7828
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7841
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7854
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7867
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7880
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7893
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7908
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7935
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7977
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8025
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8042
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8054
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8074
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8094
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8114
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8130
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8143
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8156
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8169
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8194
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8206
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8218
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8230
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8242
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8254
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8266
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8278
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8290
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8303
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8316
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8331
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8339
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8348
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8358
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8381
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8386
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8392
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8399
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8403
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8408
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8412
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8418
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8424
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8431
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8438
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8447
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8454
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8461
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8484
		{
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8486
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8496
		{
			yyVAL.str = ""
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8500
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

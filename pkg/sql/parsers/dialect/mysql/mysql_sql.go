// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const ADMIN_NAME = 57671
const RANDOM = 57672
const SUSPEND = 57673
const ATTRIBUTE = 57674
const HISTORY = 57675
const REUSE = 57676
const CURRENT = 57677
const OPTIONAL = 57678
const FAILED_LOGIN_ATTEMPTS = 57679
const PASSWORD_LOCK_TIME = 57680
const UNBOUNDED = 57681
const SECONDARY = 57682
const USER = 57683
const IDENTIFIED = 57684
const CIPHER = 57685
const ISSUER = 57686
const X509 = 57687
const SUBJECT = 57688
const SAN = 57689
const REQUIRE = 57690
const SSL = 57691
const NONE = 57692
const PASSWORD = 57693
const MAX_QUERIES_PER_HOUR = 57694
const MAX_UPDATES_PER_HOUR = 57695
const MAX_CONNECTIONS_PER_HOUR = 57696
const MAX_USER_CONNECTIONS = 57697
const FORMAT = 57698
const VERBOSE = 57699
const CONNECTION = 57700
const TRIGGERS = 57701
const PROFILES = 57702
const LOAD = 57703
const INFILE = 57704
const TERMINATED = 57705
const OPTIONALLY = 57706
const ENCLOSED = 57707
const ESCAPED = 57708
const STARTING = 57709
const LINES = 57710
const ROWS = 57711
const IMPORT = 57712
const FROM_JSONLINE = 57713
const DATABASES = 57714
const TABLES = 57715
const EXTENDED = 57716
const FULL = 57717
const PROCESSLIST = 57718
const FIELDS = 57719
const COLUMNS = 57720
const OPEN = 57721
const ERRORS = 57722
const WARNINGS = 57723
const INDEXES = 57724
const SCHEMAS = 57725
const NAMES = 57726
const GLOBAL = 57727
const SESSION = 57728
const ISOLATION = 57729
const LEVEL = 57730
const READ = 57731
const WRITE = 57732
const ONLY = 57733
const REPEATABLE = 57734
const COMMITTED = 57735
const UNCOMMITTED = 57736
const SERIALIZABLE = 57737
const LOCAL = 57738
const EVENTS = 57739
const PLUGINS = 57740
const CURRENT_TIMESTAMP = 57741
const DATABASE = 57742
const CURRENT_TIME = 57743
const LOCALTIME = 57744
const LOCALTIMESTAMP = 57745
const UTC_DATE = 57746
const UTC_TIME = 57747
const UTC_TIMESTAMP = 57748
const REPLACE = 57749
const CONVERT = 57750
const SEPARATOR = 57751
const TIMESTAMPDIFF = 57752
const CURRENT_DATE = 57753
const CURRENT_USER = 57754
const CURRENT_ROLE = 57755
const SECOND_MICROSECOND = 57756
const MINUTE_MICROSECOND = 57757
const MINUTE_SECOND = 57758
const HOUR_MICROSECOND = 57759
const HOUR_SECOND = 57760
const HOUR_MINUTE = 57761
const DAY_MICROSECOND = 57762
const DAY_SECOND = 57763
const DAY_MINUTE = 57764
const DAY_HOUR = 57765
const YEAR_MONTH = 57766
const SQL_TSI_HOUR = 57767
const SQL_TSI_DAY = 57768
const SQL_TSI_WEEK = 57769
const SQL_TSI_MONTH = 57770
const SQL_TSI_QUARTER = 57771
const SQL_TSI_YEAR = 57772
const SQL_TSI_SECOND = 57773
const SQL_TSI_MINUTE = 57774
const RECURSIVE = 57775
const CONFIG = 57776
const DRAINER = 57777
const MATCH = 57778
const AGAINST = 57779
const BOOLEAN = 57780
const LANGUAGE = 57781
const WITH = 57782
const QUERY = 57783
const EXPANSION = 57784
const ADDDATE = 57785
const BIT_AND = 57786
const BIT_OR = 57787
const BIT_XOR = 57788
const CAST = 57789
const COUNT = 57790
const APPROX_COUNT_DISTINCT = 57791
const APPROX_PERCENTILE = 57792
const CURDATE = 57793
const CURTIME = 57794
const DATE_ADD = 57795
const DATE_SUB = 57796
const EXTRACT = 57797
const GROUP_CONCAT = 57798
const MAX = 57799
const MID = 57800
const MIN = 57801
const NOW = 57802
const POSITION = 57803
const SESSION_USER = 57804
const STD = 57805
const STDDEV = 57806
const STDDEV_POP = 57807
const STDDEV_SAMP = 57808
const SUBDATE = 57809
const SUBSTR = 57810
const SUBSTRING = 57811
const SUM = 57812
const SYSDATE = 57813
const SYSTEM_USER = 57814
const TRANSLATE = 57815
const TRIM = 57816
const VARIANCE = 57817
const VAR_POP = 57818
const VAR_SAMP = 57819
const AVG = 57820
const JSON_EXTRACT = 57821
const UNNEST = 57822
const GENERATE_SERIES = 57823
const ROW = 57824
const OUTFILE = 57825
const HEADER = 57826
const MAX_FILE_SIZE = 57827
const FORCE_QUOTE = 57828
const UNUSED = 57829
const BINDINGS = 57830
const DO = 57831
const DECLARE = 57832

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7824

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 75,
	21, 480,
	-2, 461,
	-1, 80,
	210, 653,
	-2, 697,
	-1, 97,
	42, 327,
	210, 327,
	237, 334,
	238, 334,
	399, 327,
	-2, 355,
	-1, 450,
	67, 1041,
	-2, 1540,
	-1, 451,
	67, 1059,
	-2, 1511,
	-1, 456,
	67, 1060,
	-2, 1539,
	-1, 477,
	67, 974,
	-2, 1586,
	-1, 478,
	67, 975,
	-2, 1585,
	-1, 479,
	67, 1548,
	-2, 1570,
	-1, 480,
	67, 1549,
	-2, 1571,
	-1, 481,
	67, 1550,
	-2, 1577,
	-1, 482,
	67, 1551,
	-2, 1560,
	-1, 483,
	67, 1552,
	-2, 1568,
	-1, 484,
	67, 1553,
	-2, 1578,
	-1, 485,
	67, 1554,
	-2, 1579,
	-1, 486,
	67, 1555,
	-2, 1584,
	-1, 487,
	67, 1556,
	-2, 1589,
	-1, 488,
	67, 1557,
	-2, 1590,
	-1, 492,
	67, 1038,
	-2, 1392,
	-1, 499,
	67, 1047,
	-2, 1418,
	-1, 503,
	67, 1051,
	-2, 1457,
	-1, 504,
	67, 1052,
	-2, 1535,
	-1, 512,
	67, 1062,
	-2, 1520,
	-1, 514,
	67, 1064,
	-2, 1530,
	-1, 526,
	67, 954,
	-2, 1580,
	-1, 527,
	67, 955,
	-2, 1581,
	-1, 528,
	67, 956,
	-2, 1582,
	-1, 535,
	21, 481,
	-2, 444,
	-1, 576,
	394, 355,
	395, 355,
	-2, 328,
	-1, 618,
	103, 1392,
	114, 1392,
	133, 1392,
	-2, 1199,
	-1, 648,
	21, 481,
	-2, 444,
	-1, 746,
	21, 480,
	-2, 882,
	-1, 1040,
	67, 1107,
	-2, 1537,
	-1, 1041,
	67, 1108,
	-2, 1538,
	-1, 1198,
	1, 679,
	68, 679,
	508, 679,
	-2, 686,
	-1, 1309,
	133, 1209,
	-2, 1207,
	-1, 1311,
	133, 597,
	-2, 1204,
	-1, 1312,
	133, 598,
	-2, 1205,
	-1, 1599,
	1, 680,
	68, 680,
	508, 680,
	-2, 686,
	-1, 1808,
	65, 399,
	134, 399,
	-2, 788,
	-1, 1997,
	6, 492,
	7, 492,
	8, 492,
	9, 492,
	19, 492,
	21, 492,
	68, 492,
	-2, 571,
	-1, 2031,
	87, 686,
	129, 686,
	166, 686,
	169, 686,
	-2, 736,
	-1, 2033,
	271, 850,
	-2, 830,
	-1, 2063,
	65, 399,
	134, 399,
	-2, 789,
	-1, 2096,
	87, 686,
	129, 686,
	166, 686,
	169, 686,
	-2, 737,
	-1, 2124,
	271, 850,
	-2, 831,
	-1, 2516,
	68, 709,
	134, 709,
	-2, 686,
	-1, 2521,
	68, 709,
	134, 709,
	-2, 686,
	-1, 2537,
	68, 713,
	134, 713,
	-2, 686,
	-1, 2542,
	68, 714,
	134, 714,
	-2, 686,
}

const yyPrivate = 57344

const yyLast = 24481

var yyAct = [...]int{
	422, 2521, 1104, 2523, 2530, 2520, 2494, 1021, 2360, 403,
	2162, 2440, 2482, 424, 2397, 2136, 2424, 2331, 2425, 2335,
	2311, 1649, 2081, 2092, 1583, 2160, 1274, 2025, 772, 894,
	2161, 448, 1240, 114, 940, 2319, 396, 2177, 114, 342,
	348, 1151, 348, 1645, 2079, 1017, 346, 27, 2056, 117,
	536, 1784, 1934, 2145, 2125, 1203, 1811, 617, 1024, 871,
	352, 1930, 2144, 1826, 1299, 113, 882, 1939, 1262, 1644,
	333, 802, 2037, 531, 395, 1651, 358, 1490, 1292, 1935,
	2004, 1987, 1949, 564, 1207, 1606, 401, 1945, 643, 1162,
	1894, 1928, 1300, 886, 1154, 1306, 1486, 1309, 1255, 436,
	75, 1175, 1301, 1293, 74, 531, 1485, 400, 1235, 1857,
	1825, 1786, 621, 114, 1631, 1233, 1781, 3, 1213, 624,
	35, 345, 16, 2100, 1605, 343, 6, 1600, 344, 5,
	1020, 402, 1183, 808, 1517, 332, 1015, 404, 75, 1191,
	962, 1487, 1592, 1259, 1226, 645, 1589, 1214, 1277, 1215,
	335, 1225, 1497, 1068, 1571, 579, 619, 27, 35, 1006,
	659, 1054, 1501, 1647, 412, 853, 1280, 609, 1187, 1014,
	1654, 1221, 338, 1190, 563, 919, 909, 533, 1074, 1073,
	360, 932, 361, 108, 13, 7, 895, 572, 535, 4,
	1166, 2507, 2406, 561, 2083, 347, 2534, 110, 610, 961,
	2184, 1504, 1494, 2088, 2024, 1179, 623, 1295, 105, 534,
	75, 622, 1094, 2388, 2153, 1103, 1705, 109, 921, 32,
	99, 81, 2378, 678, 773, 109, 109, 109, 642, 109,
	35, 1697, 16, 1491, 869, 712, 6, 350, 109, 5,
	32, 99, 81, 1502, 331, 906, 971, 907, 1094, 2413,
	109, 711, 32, 99, 81, 629, 628, 630, 1243, 1244,
	1772, 1783, 968, 1865, 2411, 891, 900, 901, 589, 922,
	693, 530, 694, 521, 106, 520, 522, 523, 705, 524,
	525, 1217, 106, 970, 106, 627, 106, 1023, 109, 710,
	32, 99, 81, 2401, 2402, 106, 1007, 2175, 1011, 898,
	696, 1921, 897, 900, 901, 2264, 2267, 106, 104, 1782,
	1922, 2187, 1923, 991, 2026, 93, 1025, 355, 2178, 2179,
	2180, 2181, 1010, 1692, 73, 2428, 2429, 653, 1789, 1256,
	662, 1252, 632, 2334, 2014, 114, 652, 2045, 698, 59,
	699, 1498, 1958, 1248, 593, 106, 651, 1960, 625, 357,
	348, 1090, 114, 1002, 1087, 2052, 1950, 2387, 1089, 1086,
	1088, 1092, 1093, 691, 1590, 2246, 1091, 650, 701, 1885,
	391, 2158, 1568, 392, 1150, 1149, 1702, 2142, 708, 709,
	537, 1883, 647, 649, 669, 681, 707, 1090, 2249, 1012,
	1087, 1955, 1956, 1954, 1089, 1086, 1088, 1092, 1093, 2155,
	594, 2438, 1091, 2415, 626, 349, 1957, 2240, 1009, 748,
	1507, 1509, 1510, 100, 101, 2531, 102, 103, 2512, 692,
	2448, 662, 1797, 1798, 1799, 1800, 2390, 2391, 2410, 2362,
	2455, 697, 673, 889, 719, 2358, 2359, 2333, 2362, 75,
	75, 623, 80, 747, 107, 648, 622, 2385, 2427, 2233,
	2202, 755, 2504, 908, 1503, 394, 703, 704, 2485, 35,
	35, 1109, 97, 631, 2368, 702, 2320, 2321, 2322, 2324,
	2323, 393, 759, 2224, 2201, 870, 2417, 2418, 695, 913,
	80, 98, 107, 2228, 57, 1952, 620, 700, 1795, 1097,
	1098, 1099, 1100, 1101, 1102, 1095, 1096, 664, 663, 928,
	97, 92, 91, 927, 1008, 671, 746, 37, 893, 892,
	885, 622, 655, 656, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1097, 1098, 1099, 1100, 1101,
	1102, 1095, 1096, 1032, 1035, 1036, 670, 2532, 2495, 749,
	750, 751, 752, 2539, 1033, 667, 1492, 2190, 644, 1518,
	872, 356, 2262, 920, 1492, 1185, 1492, 1698, 678, 1663,
	1495, 875, 879, 564, 94, 95, 1890, 1943, 2506, 2405,
	1888, 2082, 2486, 2525, 877, 351, 900, 901, 753, 1896,
	1895, 657, 1850, 850, 558, 559, 560, 781, 664, 663,
	1788, 900, 901, 2389, 1660, 899, 1662, 1661, 67, 925,
	1246, 896, 96, 1659, 68, 873, 874, 2416, 876, 923,
	924, 1247, 531, 531, 531, 2332, 1245, 944, 944, 596,
	597, 2467, 890, 1594, 1257, 1961, 1208, 1508, 1951, 1545,
	1687, 714, 1544, 348, 965, 965, 677, 858, 1505, 2247,
	1493, 1792, 1793, 1886, 984, 985, 713, 973, 2545, 948,
	1970, 2154, 946, 1706, 1640, 1791, 69, 1208, 1953, 678,
	1682, 1809, 942, 942, 82, 70, 989, 1251, 903, 904,
	964, 964, 82, 82, 82, 1726, 82, 974, 944, 1249,
	944, 652, 783, 784, 2159, 82, 2229, 2230, 1944, 1003,
	969, 1022, 2226, 2524, 2483, 2484, 2225, 82, 714, 2544,
	590, 848, 845, 846, 847, 672, 2538, 1731, 2032, 1730,
	1729, 1727, 620, 998, 714, 1940, 1943, 1593, 1577, 1810,
	950, 857, 600, 855, 332, 635, 640, 641, 1697, 910,
	1283, 910, 988, 2535, 2513, 82, 535, 1641, 1672, 2508,
	987, 2498, 1803, 75, 1641, 716, 717, 718, 715, 2497,
	1034, 1027, 1028, 1029, 1030, 1031, 881, 75, 1641, 1072,
	914, 902, 1491, 538, 905, 714, 75, 1582, 1119, 599,
	1728, 1565, 1026, 602, 601, 1984, 1019, 35, 1125, 592,
	1810, 1549, 591, 553, 71, 72, 35, 926, 997, 1915,
	1131, 1132, 994, 1070, 1071, 993, 938, 939, 1106, 2536,
	1500, 2442, 531, 1113, 949, 2509, 1000, 1500, 1016, 1004,
	935, 936, 937, 1527, 975, 1500, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 960, 1037,
	980, 1063, 1064, 331, 966, 2435, 976, 1944, 716, 717,
	718, 715, 1937, 1005, 590, 1482, 1938, 1941, 880, 1281,
	1172, 996, 995, 1157, 1158, 675, 992, 1013, 2430, 535,
	1066, 1018, 929, 1804, 2491, 2419, 1127, 2443, 1161, 2407,
	1118, 1165, 2383, 2382, 944, 1062, 2444, 1198, 851, 676,
	1173, 564, 1526, 2066, 1204, 944, 2196, 1732, 1733, 1177,
	637, 638, 639, 1181, 2381, 2380, 1184, 1194, 1942, 1971,
	2370, 2251, 1859, 555, 2256, 1156, 1056, 1222, 1222, 2296,
	1227, 917, 918, 552, 551, 1227, 2250, 2172, 1164, 944,
	114, 1176, 1812, 592, 2251, 676, 591, 2170, 1220, 1186,
	531, 1672, 944, 1700, 546, 2408, 1699, 1199, 2251, 2251,
	1691, 2002, 1107, 953, 954, 955, 956, 957, 958, 959,
	686, 1193, 688, 1624, 2000, 944, 1998, 1273, 114, 114,
	2251, 2251, 678, 1541, 1129, 1285, 2371, 1528, 1224, 1177,
	1610, 1119, 1119, 1303, 1844, 1177, 1177, 1105, 549, 1108,
	689, 1278, 2251, 2173, 1120, 1276, 1211, 1212, 1218, 1219,
	1275, 1275, 1768, 2171, 1126, 1232, 1128, 544, 1481, 1311,
	1146, 1766, 1204, 1764, 1192, 1253, 944, 714, 1762, 1279,
	1288, 977, 1751, 849, 1711, 1205, 758, 665, 1695, 1209,
	2001, 1180, 1999, 1689, 646, 1581, 2051, 1312, 1258, 1174,
	550, 1268, 1272, 910, 1684, 731, 1210, 1168, 1609, 1171,
	1641, 1578, 1552, 682, 1551, 1499, 1975, 1216, 1880, 1192,
	981, 1882, 933, 545, 1200, 1201, 887, 1483, 1769, 598,
	1512, 911, 1206, 934, 684, 931, 1228, 1767, 2519, 1763,
	623, 1111, 1110, 1298, 1763, 622, 687, 690, 714, 1223,
	714, 75, 1266, 1267, 1610, 1016, 1229, 1489, 2480, 1690,
	1231, 2471, 1230, 716, 717, 718, 715, 1254, 2468, 683,
	1685, 35, 1881, 1520, 1610, 1785, 1524, 1577, 714, 2372,
	714, 1500, 554, 2270, 1269, 1985, 982, 1263, 1264, 1265,
	1717, 1889, 1270, 1688, 1271, 1665, 654, 1069, 2297, 2299,
	2300, 2301, 2298, 1289, 1069, 556, 1523, 1580, 1488, 1556,
	1304, 1310, 1305, 1480, 1779, 930, 1534, 1515, 1516, 1535,
	1189, 1539, 718, 715, 1479, 715, 2236, 746, 685, 912,
	2235, 1137, 622, 603, 1484, 2041, 2036, 1550, 1861, 2503,
	1553, 1554, 1555, 2259, 2260, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 2257, 2258, 1566, 2219, 114, 114, 2307, 1506,
	1742, 1514, 732, 733, 734, 735, 736, 737, 738, 731,
	114, 1607, 2518, 1511, 2305, 1123, 2303, 1227, 2293, 2156,
	2500, 114, 2502, 1061, 2465, 1124, 2449, 342, 1586, 1588,
	1513, 1522, 2346, 1056, 2049, 1227, 2306, 1112, 1059, 1060,
	1058, 2313, 1603, 2526, 2291, 595, 1278, 1584, 1585, 2290,
	114, 2289, 2304, 1615, 2302, 1614, 2292, 2157, 1130, 2286,
	2280, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 2050, 2277, 1279, 716, 717, 718, 715, 944,
	730, 729, 739, 740, 732, 733, 734, 735, 736, 737,
	738, 731, 965, 2276, 114, 2514, 2185, 1676, 1650, 1678,
	1650, 716, 717, 718, 715, 2048, 1616, 1617, 1959, 1919,
	1177, 1177, 1177, 716, 717, 718, 715, 1618, 1918, 1946,
	1656, 823, 1719, 1876, 1670, 1573, 1576, 1575, 964, 1908,
	1574, 1570, 1601, 729, 739, 740, 732, 733, 734, 735,
	736, 737, 738, 731, 1620, 1569, 1622, 978, 2492, 1653,
	716, 717, 718, 715, 1652, 1595, 1525, 2128, 739, 740,
	732, 733, 734, 735, 736, 737, 738, 731, 1613, 1675,
	1195, 1196, 1197, 1619, 1907, 1673, 2445, 1621, 1216, 1625,
	1623, 2138, 391, 1627, 1680, 392, 1626, 734, 735, 736,
	737, 738, 731, 2437, 2131, 2537, 716, 717, 718, 715,
	2126, 1531, 2421, 781, 2312, 2140, 2141, 2093, 2403, 2366,
	2365, 2127, 716, 717, 718, 715, 2353, 1666, 1667, 1668,
	2294, 811, 722, 723, 724, 725, 726, 727, 728, 720,
	2287, 2283, 1674, 2282, 2281, 2248, 2221, 1537, 2186, 831,
	835, 837, 839, 841, 842, 844, 2132, 848, 845, 846,
	847, 2182, 2091, 826, 827, 828, 829, 809, 810, 832,
	2089, 812, 2075, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 824, 830, 2422, 716, 717, 718, 715,
	2510, 2074, 834, 836, 838, 840, 843, 2059, 2047, 2046,
	1536, 2043, 1693, 2016, 1948, 2338, 1917, 716, 717, 718,
	715, 2245, 944, 1887, 944, 2086, 944, 1853, 1759, 1709,
	1963, 652, 716, 717, 718, 715, 825, 716, 717, 718,
	715, 1707, 2085, 716, 717, 718, 715, 716, 717, 718,
	715, 1579, 2139, 1572, 1936, 476, 475, 1188, 944, 1735,
	2019, 1145, 979, 782, 716, 717, 718, 715, 777, 1703,
	776, 1911, 1743, 2373, 2343, 2342, 944, 109, 2341, 2134,
	99, 81, 716, 717, 718, 715, 2340, 2060, 2031, 1910,
	1718, 2022, 1734, 716, 717, 718, 715, 2021, 1736, 1737,
	2010, 2133, 2135, 942, 1740, 1741, 1909, 2003, 1997, 1976,
	1744, 716, 717, 718, 715, 1758, 1746, 1916, 1913, 1906,
	1898, 942, 1893, 1845, 944, 1765, 1761, 1721, 716, 717,
	718, 715, 1704, 1760, 106, 1808, 1557, 716, 717, 718,
	715, 1814, 1548, 1546, 1177, 1543, 1542, 1773, 1774, 1184,
	1694, 1540, 1016, 1722, 1723, 1822, 1696, 1715, 1701, 652,
	114, 114, 114, 114, 1745, 2142, 1533, 1806, 1530, 1827,
	1529, 652, 114, 1842, 1122, 1121, 1770, 2129, 951, 1712,
	1714, 1827, 2533, 1778, 2479, 27, 114, 2473, 652, 1802,
	1725, 1849, 109, 2456, 944, 2453, 2451, 774, 1848, 2345,
	2329, 2317, 114, 114, 730, 729, 739, 740, 732, 733,
	734, 735, 736, 737, 738, 731, 1119, 1757, 1119, 1815,
	1843, 1871, 2314, 1547, 2309, 2271, 1650, 1153, 944, 2243,
	1817, 2242, 2241, 1818, 1855, 1856, 2238, 1816, 75, 716,
	717, 718, 715, 1874, 1819, 1775, 1820, 2232, 2217, 106,
	1177, 883, 2072, 1601, 1192, 1177, 1813, 1801, 35, 1807,
	16, 1866, 2054, 1794, 6, 2042, 833, 5, 1163, 1824,
	1155, 1875, 1821, 1823, 1805, 1828, 1829, 1830, 1831, 1780,
	1841, 1840, 1176, 1683, 1839, 623, 1892, 1870, 1664, 1658,
	1846, 1657, 1608, 1057, 1854, 1868, 535, 106, 1899, 1167,
	1851, 1901, 1170, 1903, 1160, 1879, 1756, 1159, 1001, 1912,
	1869, 652, 1884, 972, 75, 1864, 1862, 1872, 1867, 1873,
	1860, 1933, 852, 800, 1878, 799, 798, 114, 716, 717,
	718, 715, 1994, 1755, 797, 796, 652, 795, 794, 793,
	114, 1607, 792, 1974, 1897, 742, 1933, 745, 2501, 791,
	1902, 1891, 1900, 1904, 1905, 716, 717, 718, 715, 1964,
	790, 789, 743, 744, 741, 788, 730, 729, 739, 740,
	732, 733, 734, 735, 736, 737, 738, 731, 787, 786,
	785, 780, 779, 778, 1965, 1966, 1967, 1754, 775, 771,
	1735, 770, 768, 767, 766, 730, 729, 739, 740, 732,
	733, 734, 735, 736, 737, 738, 731, 765, 764, 716,
	717, 718, 715, 763, 762, 1972, 761, 760, 757, 114,
	756, 114, 680, 2239, 1753, 1969, 1973, 1968, 1988, 1989,
	1612, 1977, 1597, 668, 1978, 1979, 2461, 1982, 1752, 1996,
	1983, 1981, 1992, 2459, 2426, 1980, 716, 717, 718, 715,
	1993, 2015, 1991, 2017, 1750, 1995, 1796, 1671, 114, 1291,
	716, 717, 718, 715, 679, 1836, 1833, 2035, 2517, 1749,
	1837, 2008, 1832, 1777, 2011, 2018, 716, 717, 718, 715,
	1686, 1834, 2020, 1748, 2012, 1602, 1835, 2013, 1747, 1147,
	2030, 716, 717, 718, 715, 1739, 944, 944, 1681, 1738,
	1710, 114, 2063, 2029, 1708, 716, 717, 718, 715, 1716,
	716, 717, 718, 715, 854, 652, 1927, 716, 717, 718,
	715, 716, 717, 718, 715, 1827, 1924, 1925, 1591, 2039,
	2055, 716, 717, 718, 715, 2033, 2038, 674, 2038, 2077,
	1119, 942, 2057, 2040, 2034, 1838, 2188, 1637, 1638, 1650,
	1584, 1585, 1177, 58, 34, 2071, 75, 1065, 2073, 1926,
	33, 2065, 1643, 652, 2068, 2097, 1202, 2146, 2148, 2061,
	2146, 2146, 2076, 1933, 1111, 1110, 2062, 2394, 2069, 716,
	717, 718, 715, 916, 2070, 652, 915, 2064, 856, 328,
	329, 706, 2084, 866, 867, 2067, 330, 2474, 539, 540,
	541, 542, 1478, 1204, 2078, 864, 865, 862, 863, 2152,
	884, 538, 860, 861, 2350, 2348, 2143, 1208, 2274, 2272,
	2269, 2147, 2268, 2266, 2122, 2090, 2028, 2094, 2168, 2027,
	2192, 2151, 2149, 2150, 2006, 859, 538, 2005, 373, 1858,
	372, 379, 369, 2462, 539, 540, 541, 542, 1877, 2165,
	2065, 1532, 376, 377, 666, 378, 382, 538, 2169, 364,
	952, 2463, 2462, 944, 2463, 2477, 2234, 2009, 1642, 387,
	888, 41, 1, 114, 1496, 2044, 2166, 2167, 1962, 1947,
	2193, 2194, 2148, 2197, 2198, 2199, 2200, 878, 2195, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2475, 557, 2237, 1114, 2143, 2057, 2218,
	868, 2222, 730, 729, 739, 740, 732, 733, 734, 735,
	736, 737, 738, 731, 986, 2275, 634, 661, 983, 660,
	2253, 658, 1067, 438, 2252, 2244, 1294, 2310, 2393, 2439,
	2254, 2344, 2396, 999, 2265, 2220, 2308, 2255, 423, 2261,
	730, 729, 739, 740, 732, 733, 734, 735, 736, 737,
	738, 731, 1920, 1628, 2174, 2273, 2263, 2176, 1771, 652,
	2080, 1863, 652, 652, 652, 568, 470, 2278, 2279, 2288,
	446, 769, 652, 2284, 2285, 1650, 1633, 1636, 1637, 1638,
	1634, 1290, 1635, 1639, 2318, 967, 2315, 2326, 2327, 2328,
	636, 445, 2355, 2053, 1790, 543, 2325, 2337, 633, 944,
	944, 569, 2336, 1567, 2023, 2339, 1148, 1169, 75, 1152,
	2349, 2347, 2351, 2352, 2529, 2516, 2356, 2493, 2472, 2361,
	365, 367, 366, 2511, 2409, 2454, 2447, 2357, 371, 2189,
	114, 362, 1250, 2363, 2364, 529, 607, 2330, 652, 363,
	375, 1611, 2386, 2316, 942, 942, 547, 390, 1596, 548,
	652, 1599, 1598, 1038, 368, 721, 2369, 1055, 754, 399,
	1521, 411, 1275, 2379, 2375, 405, 2400, 1787, 2137, 1852,
	40, 2374, 39, 38, 1284, 2384, 1307, 440, 116, 2399,
	1308, 2354, 2183, 2392, 1633, 1636, 1637, 1638, 1634, 2398,
	1635, 1639, 421, 420, 2404, 419, 418, 417, 1632, 1630,
	1629, 2412, 2414, 1237, 1236, 1282, 2423, 2376, 1713, 2377,
	2087, 2231, 2420, 2295, 2227, 2223, 2367, 2096, 2095, 2123,
	2431, 2432, 2433, 2434, 2441, 2124, 2130, 807, 803, 2446,
	730, 729, 739, 740, 732, 733, 734, 735, 736, 737,
	738, 731, 370, 374, 380, 805, 381, 383, 806, 804,
	384, 385, 386, 1724, 1720, 388, 389, 1931, 1932, 2436,
	2457, 1929, 2460, 2458, 2400, 2470, 1990, 1986, 1296, 1302,
	1182, 2464, 652, 1776, 652, 1238, 111, 2399, 2469, 2476,
	2466, 2478, 1022, 1234, 1022, 2164, 532, 26, 25, 24,
	12, 11, 990, 10, 15, 23, 2487, 2441, 22, 2488,
	652, 21, 20, 2496, 66, 65, 64, 2499, 63, 19,
	1022, 9, 2505, 62, 61, 60, 18, 17, 2450, 55,
	2452, 56, 51, 50, 49, 2490, 567, 48, 47, 46,
	45, 54, 53, 52, 44, 43, 2515, 42, 79, 78,
	77, 76, 28, 29, 30, 2528, 31, 2527, 89, 88,
	90, 86, 84, 87, 85, 83, 2540, 36, 8, 2542,
	14, 2541, 2543, 2481, 1423, 1465, 2528, 2, 1412, 281,
	1370, 1425, 1343, 1359, 1433, 1360, 1361, 1398, 1322, 1380,
	243, 1357, 0, 0, 0, 0, 0, 0, 1415, 1314,
	1346, 1347, 1316, 1353, 1317, 1344, 1372, 188, 1342, 1383,
	213, 1395, 1356, 1377, 1431, 0, 0, 273, 227, 0,
	0, 1375, 1417, 1378, 1403, 1369, 1399, 1330, 1391, 1426,
	1358, 0, 1396, 1427, 0, 0, 0, 0, 1195, 1196,
	1197, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 1394, 1421, 1355, 0, 172, 1424, 1376, 1397, 0,
	0, 1315, 1392, 0, 1320, 1323, 1432, 1419, 1350, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 1373, 1379,
	1400, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 1388, 0, 0, 0, 1325, 1321, 0,
	1371, 0, 0, 161, 278, 294, 170, 269, 307, 175,
	276, 166, 242, 265, 0, 1464, 163, 292, 275, 224,
	207, 208, 162, 0, 260, 186, 199, 182, 240, 0,
	291, 319, 181, 310, 1324, 302, 165, 1459, 301, 239,
	288, 293, 225, 219, 164, 290, 223, 218, 211, 190,
	0, 203, 251, 217, 252, 204, 229, 228, 230, 1443,
	1444, 1445, 1446, 1447, 1455, 1456, 0, 1460, 1461, 1462,
	1329, 0, 1349, 1401, 0, 1313, 1410, 1418, 1368, 304,
	1420, 1365, 1364, 1450, 0, 1449, 277, 1451, 1452, 212,
	1416, 1345, 1354, 320, 1352, 263, 245, 1422, 1387, 1463,
	261, 215, 289, 253, 295, 279, 303, 257, 254, 157,
	280, 184, 226, 167, 168, 180, 187, 189, 191, 192,
	235, 236, 248, 268, 282, 283, 284, 183, 176, 262,
	177, 201, 178, 158, 270, 179, 159, 249, 287, 1448,
	197, 258, 222, 160, 221, 250, 286, 285, 311, 317,
	318, 322, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 1457, 0, 1458, 316, 195,
	155, 299, 0, 241, 0, 1413, 1318, 1328, 1326, 1362,
	1389, 1390, 237, 315, 1405, 1409, 1406, 1434, 266, 0,
	0, 0, 0, 0, 206, 247, 1407, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1319, 0,
	274, 297, 309, 326, 1466, 1467, 1468, 1469, 0, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 300, 1363, 1336, 1374,
	308, 1339, 1337, 1404, 1338, 1393, 324, 231, 232, 233,
	234, 198, 0, 174, 327, 256, 1384, 1367, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1385, 1914, 1341, 321, 194,
	200, 0, 202, 173, 246, 196, 306, 209, 1411, 238,
	205, 271, 210, 216, 259, 305, 244, 264, 171, 296,
	272, 220, 0, 0, 1335, 1340, 1334, 1381, 1382, 1428,
	1429, 1430, 1402, 1327, 1414, 0, 1331, 1333, 1332, 0,
	0, 0, 0, 730, 729, 739, 740, 732, 733, 734,
	735, 736, 737, 738, 731, 1519, 0, 0, 1408, 0,
	0, 1386, 156, 0, 214, 1435, 255, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 729, 739,
	740, 732, 733, 734, 735, 736, 737, 738, 731, 281,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 1453, 1454, 312,
	313, 314, 298, 413, 185, 1477, 0, 188, 0, 0,
	213, 0, 0, 0, 444, 0, 0, 273, 227, 0,
	0, 0, 0, 500, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 437, 476,
	475, 425, 434, 0, 0, 169, 426, 0, 433, 427,
	431, 430, 428, 429, 0, 492, 0, 0, 0, 0,
	0, 0, 397, 410, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 0,
	0, 0, 0, 453, 0, 409, 0, 0, 455, 0,
	435, 0, 0, 161, 278, 294, 170, 269, 307, 175,
	276, 166, 242, 265, 0, 0, 163, 292, 275, 224,
	207, 208, 162, 0, 260, 186, 199, 182, 240, 432,
	451, 456, 181, 514, 449, 302, 165, 0, 301, 239,
	288, 293, 225, 219, 164, 290, 223, 218, 211, 190,
	515, 203, 251, 217, 252, 204, 229, 228, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 447, 0, 0, 304,
	0, 0, 498, 0, 0, 0, 277, 0, 0, 212,
	0, 0, 0, 450, 0, 263, 245, 511, 398, 0,
	261, 215, 289, 253, 295, 279, 303, 257, 254, 157,
	280, 184, 226, 167, 168, 180, 187, 189, 191, 192,
	235, 236, 248, 268, 282, 283, 284, 183, 176, 262,
	177, 201, 178, 158, 270, 179, 159, 249, 287, 0,
	197, 258, 222, 160, 221, 250, 286, 285, 311, 317,
	318, 322, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 1116, 1115, 1117, 316, 195,
	155, 299, 496, 241, 0, 510, 491, 493, 494, 497,
	501, 502, 503, 504, 505, 507, 509, 513, 266, 0,
	0, 0, 0, 0, 206, 247, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 297, 309, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 454, 231, 232, 233,
	234, 499, 0, 174, 327, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 194,
	200, 0, 202, 173, 246, 196, 306, 209, 0, 238,
	205, 271, 210, 216, 259, 305, 244, 264, 171, 296,
	272, 220, 0, 0, 521, 495, 520, 522, 523, 519,
	524, 525, 506, 416, 0, 459, 517, 516, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 214, 0, 255, 193, 482, 463,
	464, 465, 415, 466, 461, 462, 483, 457, 479, 480,
	439, 442, 467, 133, 468, 481, 484, 485, 526, 527,
	528, 471, 486, 478, 477, 469, 458, 487, 488, 443,
	441, 472, 473, 460, 474, 489, 490, 281, 452, 312,
	313, 314, 298, 0, 185, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 188, 1178, 0, 213, 0,
	0, 0, 444, 0, 0, 273, 227, 0, 0, 0,
	0, 500, 508, 0, 0, 0, 0, 0, 0, 0,
	1260, 0, 0, 406, 0, 0, 437, 476, 475, 425,
	434, 0, 0, 169, 426, 0, 433, 427, 431, 430,
	428, 429, 0, 492, 0, 0, 0, 0, 0, 0,
	397, 410, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 0, 0, 0,
	0, 453, 0, 409, 0, 0, 1261, 0, 435, 0,
	0, 161, 278, 294, 170, 269, 307, 175, 276, 166,
	242, 265, 0, 0, 163, 292, 275, 224, 207, 208,
	162, 0, 260, 186, 199, 182, 240, 432, 451, 456,
	181, 514, 449, 302, 165, 0, 301, 239, 288, 293,
	225, 219, 164, 290, 223, 218, 211, 190, 515, 203,
	251, 217, 252, 204, 229, 228, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 0, 0, 304, 0, 0,
	498, 0, 0, 0, 277, 0, 0, 212, 0, 0,
	0, 450, 0, 263, 245, 511, 398, 0, 261, 215,
	289, 253, 295, 279, 303, 257, 254, 157, 280, 184,
	226, 167, 168, 180, 187, 189, 191, 192, 235, 236,
	248, 268, 282, 283, 284, 183, 176, 262, 177, 201,
	178, 158, 270, 179, 159, 249, 287, 0, 197, 258,
	222, 160, 221, 250, 286, 285, 311, 317, 318, 322,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 316, 195, 155, 299,
	496, 241, 0, 510, 491, 493, 494, 497, 501, 502,
	503, 504, 505, 507, 509, 513, 266, 0, 0, 0,
	0, 0, 206, 247, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 297,
	309, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 454, 231, 232, 233, 234, 499,
	0, 174, 327, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 194, 200, 0,
	202, 173, 246, 196, 306, 209, 0, 238, 205, 271,
	210, 216, 259, 305, 244, 264, 171, 296, 272, 220,
	0, 0, 521, 495, 520, 522, 523, 519, 524, 525,
	506, 416, 0, 459, 517, 516, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 214, 0, 255, 193, 482, 463, 464, 465,
	415, 466, 461, 462, 483, 457, 479, 480, 439, 442,
	467, 133, 468, 481, 484, 485, 526, 527, 528, 471,
	486, 478, 477, 469, 458, 487, 488, 443, 441, 472,
	473, 460, 474, 489, 490, 0, 0, 312, 313, 314,
	298, 0, 185, 109, 281, 452, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 188, 0, 0, 213, 0, 0, 0, 444,
	0, 0, 273, 227, 0, 0, 0, 0, 500, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 0, 437, 476, 475, 425, 434, 0, 0,
	169, 426, 0, 433, 427, 431, 430, 428, 429, 0,
	492, 0, 0, 0, 0, 0, 0, 397, 410, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 0, 0, 0, 0, 453, 0,
	409, 0, 0, 455, 0, 435, 0, 0, 161, 278,
	294, 170, 269, 307, 175, 276, 166, 242, 265, 0,
	0, 163, 292, 275, 224, 207, 208, 162, 0, 260,
	186, 199, 182, 240, 432, 451, 456, 181, 514, 449,
	302, 165, 0, 301, 239, 288, 293, 225, 219, 164,
	290, 223, 218, 211, 190, 515, 203, 251, 217, 252,
	204, 229, 228, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 447, 0, 0, 304, 0, 0, 498, 0, 0,
	0, 277, 0, 0, 212, 0, 0, 0, 450, 0,
	263, 245, 511, 398, 0, 261, 215, 289, 253, 295,
	279, 303, 257, 254, 157, 280, 184, 226, 167, 168,
	180, 187, 189, 191, 192, 235, 236, 248, 268, 282,
	283, 284, 183, 176, 262, 177, 201, 178, 158, 270,
	179, 159, 249, 287, 0, 197, 258, 222, 160, 221,
	250, 286, 285, 311, 317, 318, 322, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 0, 316, 195, 155, 299, 496, 241, 0,
	510, 491, 493, 494, 497, 501, 502, 503, 504, 505,
	507, 509, 513, 266, 0, 0, 0, 0, 0, 206,
	247, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 297, 309, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 454, 231, 232, 233, 234, 499, 0, 174, 327,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 194, 200, 0, 202, 173, 246,
	196, 306, 209, 0, 238, 205, 271, 210, 216, 259,
	305, 244, 264, 171, 296, 272, 220, 0, 0, 521,
	495, 520, 522, 523, 519, 524, 525, 506, 416, 0,
	459, 517, 516, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 214,
	82, 255, 193, 482, 463, 464, 465, 415, 466, 461,
	462, 483, 457, 479, 480, 439, 442, 467, 133, 468,
	481, 484, 485, 526, 527, 528, 471, 486, 478, 477,
	469, 458, 487, 488, 443, 441, 472, 473, 460, 474,
	489, 490, 281, 452, 312, 313, 314, 298, 0, 185,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	188, 2489, 0, 213, 0, 0, 0, 444, 0, 0,
	273, 227, 0, 0, 0, 0, 500, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	0, 437, 476, 475, 425, 434, 0, 0, 169, 426,
	0, 433, 427, 431, 430, 428, 429, 0, 492, 0,
	0, 0, 0, 0, 0, 397, 410, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 0, 0, 0, 0, 453, 0, 409, 0,
	0, 455, 0, 435, 0, 0, 161, 278, 294, 170,
	269, 307, 175, 276, 166, 242, 265, 0, 0, 163,
	292, 275, 224, 207, 208, 162, 0, 260, 186, 199,
	182, 240, 432, 451, 456, 181, 514, 449, 302, 165,
	0, 301, 239, 288, 293, 225, 219, 164, 290, 223,
	218, 211, 190, 515, 203, 251, 217, 252, 204, 229,
	228, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	0, 0, 304, 0, 0, 498, 0, 0, 0, 277,
	0, 0, 212, 0, 0, 0, 450, 0, 263, 245,
	511, 398, 0, 261, 215, 289, 253, 295, 279, 303,
	257, 254, 157, 280, 184, 226, 167, 168, 180, 187,
	189, 191, 192, 235, 236, 248, 268, 282, 283, 284,
	183, 176, 262, 177, 201, 178, 158, 270, 179, 159,
	249, 287, 0, 197, 258, 222, 160, 221, 250, 286,
	285, 311, 317, 318, 322, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	0, 316, 195, 155, 299, 496, 241, 0, 510, 491,
	493, 494, 497, 501, 502, 503, 504, 505, 507, 509,
	513, 266, 0, 0, 0, 0, 0, 206, 247, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 297, 309, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 454,
	231, 232, 233, 234, 499, 0, 174, 327, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 194, 200, 0, 202, 173, 246, 196, 306,
	209, 0, 238, 205, 271, 210, 216, 259, 305, 244,
	264, 171, 296, 272, 220, 0, 0, 521, 495, 520,
	522, 523, 519, 524, 525, 506, 416, 0, 459, 517,
	516, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 214, 0, 255,
	193, 482, 463, 464, 465, 415, 466, 461, 462, 483,
	457, 479, 480, 439, 442, 467, 133, 468, 481, 484,
	485, 526, 527, 528, 471, 486, 478, 477, 469, 458,
	487, 488, 443, 441, 472, 473, 460, 474, 489, 490,
	281, 452, 312, 313, 314, 298, 0, 185, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 188, 1178,
	0, 213, 0, 0, 0, 444, 0, 0, 273, 227,
	0, 0, 0, 0, 500, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 437,
	476, 475, 425, 434, 0, 0, 169, 426, 0, 433,
	427, 431, 430, 428, 429, 0, 492, 0, 0, 0,
	0, 0, 0, 397, 410, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	0, 0, 0, 0, 453, 0, 409, 0, 0, 455,
	0, 435, 0, 0, 161, 278, 294, 170, 269, 307,
	175, 276, 166, 242, 265, 0, 0, 163, 292, 275,
	224, 207, 208, 162, 0, 260, 186, 199, 182, 240,
	432, 451, 456, 181, 514, 449, 302, 165, 0, 301,
	239, 288, 293, 225, 219, 164, 290, 223, 218, 211,
	190, 515, 203, 251, 217, 252, 204, 229, 228, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 0, 0,
	304, 0, 0, 498, 0, 0, 0, 277, 0, 0,
	212, 0, 0, 0, 450, 0, 263, 245, 511, 398,
	0, 261, 215, 289, 253, 295, 279, 303, 257, 254,
	157, 280, 184, 226, 167, 168, 180, 187, 189, 191,
	192, 235, 236, 248, 268, 282, 283, 284, 183, 176,
	262, 177, 201, 178, 158, 270, 179, 159, 249, 287,
	0, 197, 258, 222, 160, 221, 250, 286, 285, 311,
	317, 318, 322, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 0, 316,
	195, 155, 299, 496, 241, 0, 510, 491, 493, 494,
	497, 501, 502, 503, 504, 505, 507, 509, 513, 266,
	0, 0, 0, 0, 0, 206, 247, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 297, 309, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 454, 231, 232,
	233, 234, 499, 0, 174, 327, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	194, 200, 0, 202, 173, 246, 196, 306, 209, 0,
	238, 205, 271, 210, 216, 259, 305, 244, 264, 171,
	296, 272, 220, 0, 0, 521, 495, 520, 522, 523,
	519, 524, 525, 506, 416, 0, 459, 517, 516, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 214, 0, 255, 193, 482,
	463, 464, 465, 415, 466, 461, 462, 483, 457, 479,
	480, 439, 442, 467, 133, 468, 481, 484, 485, 526,
	527, 528, 471, 486, 478, 477, 469, 458, 487, 488,
	443, 441, 472, 473, 460, 474, 489, 490, 281, 452,
	312, 313, 314, 298, 0, 185, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 444, 0, 0, 273, 227, 0, 0,
	0, 0, 500, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 0, 0, 437, 476, 475,
	425, 434, 0, 0, 169, 426, 0, 433, 427, 431,
	430, 428, 429, 0, 492, 0, 0, 0, 0, 0,
	0, 397, 410, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 963, 0,
	0, 0, 453, 0, 409, 0, 0, 455, 0, 435,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 432, 451,
	456, 181, 514, 449, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 515,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 0, 304, 0,
	0, 498, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 450, 0, 263, 245, 511, 398, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 496, 241, 0, 510, 491, 493, 494, 497, 501,
	502, 503, 504, 505, 507, 509, 513, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 454, 231, 232, 233, 234,
	499, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 521, 495, 520, 522, 523, 519, 524,
	525, 506, 416, 0, 459, 517, 516, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 482, 463, 464,
	465, 415, 466, 461, 462, 483, 457, 479, 480, 439,
	442, 467, 133, 468, 481, 484, 485, 526, 527, 528,
	471, 486, 478, 477, 469, 458, 487, 488, 443, 441,
	472, 473, 460, 474, 489, 490, 0, 0, 312, 313,
	314, 298, 0, 185, 281, 452, 0, 0, 1538, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 188, 0, 0, 213, 0, 0, 0, 444,
	0, 0, 273, 227, 0, 0, 0, 0, 500, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 0, 437, 476, 475, 425, 434, 0, 0,
	169, 426, 0, 433, 427, 431, 430, 428, 429, 0,
	492, 0, 0, 0, 0, 0, 0, 397, 410, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 0, 0, 0, 0, 453, 0,
	409, 0, 0, 455, 0, 435, 0, 0, 161, 278,
	294, 170, 269, 307, 175, 276, 166, 242, 265, 0,
	0, 163, 292, 275, 224, 207, 208, 162, 0, 260,
	186, 199, 182, 240, 432, 451, 456, 181, 514, 449,
	302, 165, 0, 301, 239, 288, 293, 225, 219, 164,
	290, 223, 218, 211, 190, 515, 203, 251, 217, 252,
	204, 229, 228, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 447, 0, 0, 304, 0, 0, 498, 0, 0,
	0, 277, 0, 0, 212, 0, 0, 0, 450, 0,
	263, 245, 511, 398, 0, 261, 215, 289, 253, 295,
	279, 303, 257, 254, 157, 280, 184, 226, 167, 168,
	180, 187, 189, 191, 192, 235, 236, 248, 268, 282,
	283, 284, 183, 176, 262, 177, 201, 178, 158, 270,
	179, 159, 249, 287, 0, 197, 258, 222, 160, 221,
	250, 286, 285, 311, 317, 318, 322, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 0, 316, 195, 155, 299, 496, 241, 0,
	510, 491, 493, 494, 497, 501, 502, 503, 504, 505,
	507, 509, 513, 266, 0, 0, 0, 0, 0, 206,
	247, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 297, 309, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 454, 231, 232, 233, 234, 499, 0, 174, 327,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 194, 200, 0, 202, 173, 246,
	196, 306, 209, 0, 238, 205, 271, 210, 216, 259,
	305, 244, 264, 171, 296, 272, 220, 0, 0, 521,
	495, 520, 522, 523, 519, 524, 525, 506, 416, 0,
	459, 517, 516, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 214,
	0, 255, 193, 482, 463, 464, 465, 415, 466, 461,
	462, 483, 457, 479, 480, 439, 442, 467, 133, 468,
	481, 484, 485, 526, 527, 528, 471, 486, 478, 477,
	469, 458, 487, 488, 443, 441, 472, 473, 460, 474,
	489, 490, 281, 452, 312, 313, 314, 298, 0, 185,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	188, 0, 0, 213, 0, 0, 0, 444, 0, 0,
	273, 227, 0, 0, 0, 0, 500, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	0, 437, 476, 475, 425, 434, 0, 0, 169, 426,
	0, 433, 427, 431, 430, 428, 429, 0, 492, 0,
	0, 0, 0, 0, 0, 397, 410, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 0, 0, 0, 0, 453, 0, 409, 0,
	0, 455, 0, 435, 0, 0, 161, 278, 294, 170,
	269, 307, 175, 276, 166, 242, 265, 0, 0, 163,
	292, 275, 224, 207, 208, 162, 0, 260, 186, 199,
	182, 240, 432, 451, 456, 181, 514, 449, 302, 165,
	0, 301, 239, 288, 293, 225, 219, 164, 290, 223,
	218, 211, 190, 515, 203, 251, 217, 252, 204, 229,
	228, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	0, 0, 304, 0, 0, 498, 0, 0, 0, 277,
	0, 0, 212, 0, 0, 0, 450, 0, 263, 245,
	511, 398, 0, 261, 215, 289, 253, 295, 279, 303,
	257, 254, 157, 280, 184, 226, 167, 168, 180, 187,
	189, 191, 192, 235, 236, 248, 268, 282, 283, 284,
	183, 176, 262, 177, 201, 178, 158, 270, 179, 159,
	249, 287, 0, 197, 258, 222, 160, 221, 250, 286,
	285, 311, 317, 318, 322, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	0, 316, 195, 155, 299, 496, 241, 0, 510, 491,
	493, 494, 497, 501, 502, 503, 504, 505, 507, 509,
	513, 266, 0, 0, 0, 0, 0, 206, 247, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 297, 309, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 454,
	231, 232, 233, 234, 499, 0, 174, 327, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 194, 200, 0, 202, 173, 246, 196, 306,
	209, 0, 238, 205, 271, 210, 216, 259, 305, 244,
	264, 171, 296, 272, 220, 0, 0, 521, 495, 520,
	522, 523, 519, 524, 525, 506, 416, 0, 459, 517,
	516, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 214, 0, 255,
	193, 482, 463, 464, 465, 415, 466, 461, 462, 483,
	457, 479, 480, 439, 442, 467, 133, 468, 481, 484,
	485, 526, 527, 528, 471, 486, 478, 477, 469, 458,
	487, 488, 443, 441, 472, 473, 460, 474, 489, 490,
	281, 452, 312, 313, 314, 298, 0, 185, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	1039, 0, 0, 0, 413, 0, 0, 0, 188, 0,
	0, 213, 0, 0, 0, 444, 0, 0, 273, 227,
	0, 0, 0, 0, 500, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 437,
	476, 475, 425, 434, 0, 0, 169, 426, 0, 433,
	427, 431, 430, 428, 429, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	0, 0, 0, 0, 453, 0, 409, 0, 0, 455,
	0, 435, 0, 0, 161, 278, 294, 170, 269, 307,
	175, 276, 166, 242, 265, 0, 0, 163, 292, 275,
	224, 207, 208, 162, 0, 260, 186, 199, 182, 240,
	432, 451, 456, 181, 514, 449, 302, 165, 0, 301,
	239, 288, 293, 225, 219, 164, 290, 223, 218, 211,
	190, 515, 203, 251, 217, 252, 204, 229, 228, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 0, 0,
	304, 0, 0, 498, 0, 0, 0, 277, 0, 0,
	212, 0, 0, 0, 450, 0, 263, 245, 511, 0,
	0, 261, 215, 289, 253, 295, 279, 303, 257, 254,
	157, 280, 184, 226, 167, 168, 180, 187, 189, 191,
	192, 235, 236, 248, 268, 282, 283, 284, 183, 176,
	262, 177, 201, 178, 158, 270, 179, 159, 249, 287,
	0, 197, 258, 222, 160, 221, 250, 286, 285, 311,
	1040, 1041, 322, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 0, 316,
	195, 155, 299, 496, 241, 0, 510, 491, 493, 494,
	497, 501, 502, 503, 504, 505, 507, 509, 513, 266,
	0, 0, 0, 0, 0, 206, 247, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 297, 309, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 454, 231, 232,
	233, 234, 499, 0, 174, 327, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	194, 200, 0, 202, 173, 246, 196, 306, 209, 0,
	238, 205, 271, 210, 216, 259, 305, 244, 264, 171,
	296, 272, 220, 0, 0, 521, 495, 520, 522, 523,
	519, 524, 525, 506, 416, 0, 459, 517, 516, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 214, 0, 255, 193, 482,
	463, 464, 465, 415, 466, 461, 462, 483, 457, 479,
	480, 439, 442, 467, 133, 468, 481, 484, 485, 526,
	527, 528, 471, 486, 478, 477, 469, 458, 487, 488,
	443, 441, 472, 473, 460, 474, 489, 490, 281, 452,
	312, 313, 314, 298, 0, 185, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 444, 0, 0, 273, 227, 0, 0,
	0, 0, 500, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 476, 475,
	425, 434, 0, 0, 169, 426, 0, 433, 427, 431,
	430, 428, 429, 0, 492, 0, 0, 0, 0, 0,
	0, 397, 410, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 0, 0,
	0, 0, 453, 0, 409, 0, 0, 455, 0, 435,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 432, 451,
	456, 181, 514, 449, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 515,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 0, 304, 0,
	0, 498, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 450, 0, 263, 245, 511, 398, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 496, 241, 0, 510, 491, 493, 494, 497, 501,
	502, 503, 504, 505, 507, 509, 513, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 454, 231, 232, 233, 234,
	499, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 521, 495, 520, 522, 523, 519, 524,
	525, 506, 416, 0, 459, 517, 516, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 482, 463, 464,
	465, 415, 466, 461, 462, 483, 457, 479, 480, 439,
	442, 467, 133, 468, 481, 484, 485, 526, 527, 528,
	471, 486, 478, 477, 469, 458, 487, 488, 443, 441,
	472, 473, 460, 474, 489, 490, 281, 452, 312, 313,
	314, 298, 0, 185, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 188, 0, 0, 213, 0, 0,
	0, 444, 0, 0, 273, 227, 0, 0, 0, 0,
	500, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 0, 0, 437, 476, 475, 425, 434,
	0, 0, 169, 426, 0, 433, 427, 431, 430, 428,
	429, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 0, 0, 0, 0,
	453, 0, 409, 0, 0, 455, 0, 435, 0, 0,
	161, 278, 294, 170, 269, 307, 175, 276, 166, 242,
	265, 0, 0, 163, 292, 275, 224, 207, 208, 162,
	0, 260, 186, 199, 182, 240, 432, 451, 456, 181,
	514, 449, 302, 165, 0, 301, 239, 288, 293, 225,
	219, 164, 290, 223, 218, 211, 190, 515, 203, 251,
	217, 252, 204, 229, 228, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 0, 0, 304, 0, 0, 498,
	0, 0, 0, 277, 0, 0, 212, 0, 0, 0,
	450, 0, 263, 245, 511, 0, 0, 261, 215, 289,
	253, 295, 279, 303, 257, 254, 157, 280, 184, 226,
	167, 168, 180, 187, 189, 191, 192, 235, 236, 248,
	268, 282, 283, 284, 183, 176, 262, 177, 201, 178,
	158, 270, 179, 159, 249, 287, 0, 197, 258, 222,
	160, 221, 250, 286, 285, 311, 317, 318, 322, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 316, 195, 155, 299, 496,
	241, 0, 510, 491, 493, 494, 497, 501, 502, 503,
	504, 505, 507, 509, 513, 266, 0, 0, 0, 0,
	0, 206, 247, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 297, 309,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 454, 231, 232, 233, 234, 499, 0,
	174, 327, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 194, 200, 0, 202,
	173, 246, 196, 306, 209, 0, 238, 205, 271, 210,
	216, 259, 305, 244, 264, 171, 296, 272, 220, 0,
	0, 521, 495, 520, 522, 523, 519, 524, 525, 506,
	416, 0, 459, 517, 516, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 214, 0, 255, 193, 482, 463, 464, 465, 415,
	466, 461, 462, 483, 457, 479, 480, 439, 442, 467,
	133, 468, 481, 484, 485, 526, 527, 528, 471, 486,
	478, 477, 469, 458, 487, 488, 443, 441, 472, 473,
	460, 474, 489, 490, 0, 0, 312, 313, 314, 298,
	0, 185, 109, 281, 32, 99, 81, 0, 0, 0,
	0, 0, 0, 0, 243, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 337, 339, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 82,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 1940, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 304, 0,
	0, 0, 1937, 0, 1936, 277, 1938, 1941, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 1942, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 1287, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 716, 717, 718, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 606, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 614, 615,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 592, 302, 165, 591, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 604, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 605, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 608, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 616, 611,
	612, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 109, 281, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 273, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 278,
	294, 170, 269, 307, 175, 276, 166, 242, 265, 0,
	0, 163, 292, 275, 224, 207, 208, 162, 0, 260,
	186, 199, 182, 240, 0, 291, 319, 181, 310, 0,
	302, 165, 0, 301, 239, 288, 293, 225, 219, 164,
	290, 223, 218, 211, 190, 0, 203, 251, 217, 252,
	204, 229, 228, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 212, 0, 0, 0, 320, 0,
	263, 245, 0, 0, 0, 261, 215, 289, 253, 295,
	279, 303, 257, 254, 157, 280, 184, 226, 167, 168,
	180, 187, 189, 191, 192, 235, 236, 248, 268, 282,
	283, 284, 183, 176, 262, 177, 201, 178, 158, 270,
	179, 159, 249, 287, 0, 197, 258, 222, 160, 221,
	250, 286, 285, 311, 317, 318, 322, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 0, 316, 195, 155, 299, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 315, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 206,
	247, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 297, 309, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 324, 231, 232, 233, 234, 198, 0, 174, 327,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 194, 200, 0, 202, 173, 246,
	196, 306, 209, 0, 238, 205, 271, 210, 216, 259,
	305, 244, 264, 171, 296, 272, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 214,
	82, 255, 193, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	1241, 1242, 109, 281, 312, 313, 314, 298, 0, 185,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	1297, 0, 115, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 82,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 614, 615,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 592, 302, 165, 591, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 616, 611,
	612, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 1241,
	1242, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 947, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	945, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 941, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 945, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 943, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2395, 0, 115, 476, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 945, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 943, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	945, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 1669, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 945, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 476, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2163,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	945, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 1847, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 1677, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 1604, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 1587, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 353, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 0, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 214, 0,
	255, 193, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 281, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 273, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 278, 294, 170, 269, 307, 175, 276,
	166, 242, 265, 0, 0, 163, 292, 275, 224, 207,
	208, 162, 0, 260, 186, 199, 182, 240, 0, 291,
	319, 181, 310, 0, 302, 165, 0, 301, 239, 288,
	293, 225, 219, 164, 290, 223, 218, 211, 190, 0,
	203, 251, 217, 252, 204, 229, 228, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 212, 0,
	0, 0, 320, 0, 263, 245, 0, 0, 0, 261,
	215, 289, 253, 295, 279, 303, 257, 254, 157, 280,
	184, 226, 167, 168, 180, 187, 189, 191, 192, 235,
	236, 248, 268, 282, 283, 284, 183, 176, 262, 177,
	201, 178, 158, 270, 179, 159, 249, 287, 0, 197,
	258, 222, 160, 221, 250, 286, 285, 311, 317, 318,
	322, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 316, 195, 155,
	299, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 315, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 206, 247, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	297, 309, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 324, 231, 232, 233, 234,
	198, 0, 174, 327, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 194, 200,
	0, 202, 173, 246, 196, 306, 209, 0, 238, 205,
	271, 210, 216, 259, 305, 244, 264, 171, 296, 272,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 214, 0, 255, 193, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 281, 0, 0, 0, 0, 312, 313,
	314, 298, 0, 185, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 188, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 273, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1195, 1196, 1197, 1648, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 278, 294,
	170, 269, 307, 175, 276, 166, 242, 265, 0, 0,
	163, 292, 275, 224, 207, 208, 162, 0, 260, 186,
	199, 182, 240, 0, 291, 319, 181, 310, 0, 302,
	165, 0, 301, 239, 288, 293, 225, 219, 164, 290,
	223, 218, 211, 190, 0, 203, 251, 217, 252, 204,
	229, 228, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 212, 0, 0, 0, 320, 0, 263,
	245, 0, 0, 0, 261, 215, 289, 253, 295, 279,
	303, 257, 254, 157, 280, 184, 226, 167, 168, 180,
	187, 189, 191, 192, 235, 236, 248, 268, 282, 283,
	284, 183, 176, 262, 177, 201, 178, 158, 270, 179,
	159, 249, 287, 0, 197, 258, 222, 160, 221, 250,
	286, 285, 311, 317, 318, 322, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 316, 195, 155, 299, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 315, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 206, 247,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 297, 309, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	324, 231, 232, 233, 234, 198, 0, 174, 327, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 321, 194, 200, 0, 202, 173, 246, 196,
	306, 209, 243, 238, 205, 271, 210, 216, 259, 305,
	244, 264, 171, 296, 272, 220, 0, 0, 0, 188,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 273,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 1196, 1197, 1648, 0, 0, 156, 169, 214, 0,
	255, 193, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 313, 314, 298, 0, 185, 0,
	0, 0, 0, 0, 0, 161, 278, 294, 170, 269,
	307, 175, 276, 166, 242, 265, 0, 0, 163, 292,
	275, 224, 207, 208, 162, 0, 260, 186, 199, 182,
	240, 0, 291, 319, 181, 310, 0, 302, 165, 0,
	301, 239, 288, 293, 225, 219, 164, 290, 223, 218,
	211, 190, 0, 203, 251, 217, 252, 204, 229, 228,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 212, 0, 0, 0, 320, 0, 263, 245, 0,
	0, 0, 261, 215, 289, 253, 295, 279, 303, 257,
	254, 157, 280, 184, 226, 167, 168, 180, 187, 189,
	191, 192, 235, 236, 248, 268, 282, 283, 284, 183,
	176, 262, 177, 201, 178, 158, 270, 179, 159, 249,
	287, 0, 197, 258, 222, 160, 221, 250, 286, 285,
	311, 317, 318, 322, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 0,
	316, 195, 155, 299, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 315, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 206, 247, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 297, 309, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 324, 231,
	232, 233, 234, 198, 0, 174, 327, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	321, 194, 200, 0, 202, 173, 246, 196, 306, 209,
	243, 238, 205, 271, 210, 216, 259, 305, 244, 264,
	171, 296, 272, 220, 0, 0, 0, 188, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 273, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 1196,
	1197, 0, 0, 0, 156, 169, 214, 0, 255, 193,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 313, 314, 298, 0, 185, 0, 0, 0,
	0, 0, 0, 161, 278, 294, 170, 269, 307, 175,
	276, 166, 242, 265, 0, 0, 163, 292, 275, 224,
	207, 208, 162, 0, 260, 186, 199, 182, 240, 0,
	291, 319, 181, 310, 0, 302, 165, 0, 301, 239,
	288, 293, 225, 219, 164, 290, 223, 218, 211, 190,
	0, 203, 251, 217, 252, 204, 229, 228, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 212,
	0, 0, 0, 320, 0, 263, 245, 0, 0, 0,
	261, 215, 289, 253, 295, 279, 303, 257, 254, 157,
	280, 184, 226, 167, 168, 180, 187, 189, 191, 192,
	235, 236, 248, 268, 282, 283, 284, 183, 176, 262,
	177, 201, 178, 158, 270, 179, 159, 249, 287, 0,
	197, 258, 222, 160, 221, 250, 286, 285, 311, 317,
	318, 322, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 316, 195,
	155, 299, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 315, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 206, 247, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 297, 309, 326, 823, 0, 0, 0, 0, 0,
	716, 717, 718, 715, 0, 0, 300, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 324, 231, 232, 233,
	234, 198, 0, 174, 327, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 194,
	200, 0, 202, 173, 246, 196, 306, 209, 823, 238,
	205, 271, 210, 216, 259, 305, 244, 264, 171, 296,
	272, 220, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 811, 0, 0, 0, 801, 0,
	0, 0, 156, 0, 214, 0, 255, 193, 0, 0,
	0, 0, 831, 835, 837, 839, 841, 842, 844, 0,
	848, 845, 846, 847, 0, 590, 826, 827, 828, 829,
	809, 810, 832, 0, 812, 0, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 824, 830, 811, 312,
	313, 314, 298, 0, 185, 834, 836, 838, 840, 843,
	0, 0, 0, 0, 0, 0, 831, 835, 837, 839,
	841, 842, 844, 0, 848, 845, 846, 847, 0, 0,
	826, 827, 828, 829, 809, 810, 832, 0, 812, 825,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	824, 830, 0, 0, 592, 0, 0, 591, 0, 834,
	836, 838, 840, 843, 1090, 0, 2120, 1087, 0, 0,
	0, 1089, 1086, 1088, 1092, 1093, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	577, 0, 0, 825, 0, 0, 0, 566, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 0, 582, 0, 0, 0, 2522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 2120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1097, 1098, 1099, 1100, 1101, 1102, 1095, 1096,
	585, 0, 2102, 2191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 586, 0, 0, 0, 833,
	2106, 0, 0, 0, 0, 0, 0, 574, 0, 576,
	589, 2110, 0, 0, 573, 571, 570, 0, 575, 2106,
	587, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 2099, 583, 584, 0, 2101, 2103, 2105, 0, 2107,
	2108, 2109, 2111, 2112, 2113, 2115, 2116, 2117, 2118, 0,
	2099, 0, 0, 833, 2101, 2103, 2105, 0, 2107, 2108,
	2109, 2111, 2112, 2113, 2115, 2116, 2117, 2118, 0, 578,
	0, 0, 0, 0, 0, 2106, 0, 373, 2121, 372,
	379, 369, 0, 0, 0, 0, 2110, 0, 0, 0,
	0, 376, 377, 0, 378, 382, 0, 2121, 364, 0,
	0, 0, 0, 0, 0, 0, 2099, 0, 387, 0,
	2101, 2103, 2105, 2119, 2107, 2108, 2109, 2111, 2112, 2113,
	2115, 2116, 2117, 2118, 0, 0, 0, 0, 0, 0,
	2098, 0, 2119, 0, 0, 0, 0, 391, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 2098,
	0, 0, 373, 2121, 372, 379, 369, 0, 2114, 0,
	0, 0, 0, 0, 0, 2104, 376, 377, 0, 378,
	382, 0, 0, 364, 0, 0, 0, 2114, 0, 0,
	0, 0, 0, 387, 2104, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2114, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	367, 366, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 367, 366, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 374, 380, 0, 381, 383, 0, 0, 384,
	385, 386, 0, 0, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 374, 380, 0,
	381, 383, 0, 0, 384, 385, 386, 0, 0, 388,
	389,
}

var yyPact = [...]int{
	278, -1000, -311, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21502, -1000, -1000, 1537, -1000, 21017, 8402, 21987,
	119, 21987, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 366, -1000, 20532,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 337, 24067, 224,
	208, 6441, 21987, -290, -1000, 2108, -1000, -1000, -1000, -1000,
	695, 385, 20047, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23618, 42, 385,
	479, 483, 629, 629, 9857, 2108, 219, 46, -1000, 694,
	278, 317, 21987, -1000, 891, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2108, 2108, -1000, 21987, 21987, -48, 1023, -1000, 228,
	207, 215, 884, -1000, -1000, -1000, -1000, 2109, -1000, 21987,
	1838, 21987, -1000, 1302, 266, 24142, 1972, 791, 424, 1870,
	-1000, -1000, 1825, -1000, 63, 741, 61, 129, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 67, -1000, 2035, -1000, -1000,
	59, -1000, -1000, 48, -1000, -1000, -1000, -101, -1000, -1000,
	-1000, -1000, -1000, -178, -178, 497, 1250, 6441, -1000, 1309,
	-1000, 1721, -1000, -1000, -1000, -1000, 3993, 7905, 7905, 7905,
	7905, -1000, -1000, 1700, 6441, 1823, 1821, -1000, -1000, -1000,
	-1000, -1000, 883, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7417, -1000, 1820, 1819, 1817,
	1816, 1811, 1810, 1797, 1796, 1795, 1794, 1792, 1600, 1791,
	1467, 1465, 1786, 1785, 1784, 7905, 1460, 1600, 1600, 1783,
	1782, 1781, 1768, 1764, 1763, 1752, 1745, 1742, 1741, 1740,
	1738, 1737, 1729, 1728, 1726, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23544,
	-1000, 880, 744, -1000, 1725, 1946, 2037, 1652, 2085, 2051,
	2046, 2044, 2032, 25, 336, 336, 336, 351, 336, 365,
	-1000, -1000, -1000, -1000, -1000, -1000, 415, -1000, -1000, -1000,
	-1000, 714, 21987, -1000, 1654, 2057, 273, 945, 223, 271,
	2037, 2037, -91, -124, 945, 945, -124, 36, -1000, -1000,
	-1000, 1046, 242, 1046, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2026, 2023, 337, 337, 340, -1000, -188, -1000, -1000,
	466, -1000, 454, -1000, 1302, 264, 260, 728, 1042, -1000,
	949, 21987, 21987, 21987, 949, 949, 12772, 12287, -1000, 2037,
	1652, -1000, 1580, 2062, 1652, 337, 337, 337, 337, 337,
	337, 337, 21987, 5457, 5457, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 216, 1716, -1000, 21987, 2037, 1946, 2037,
	-1000, -1000, 878, 1259, 1459, -1000, -1000, 228, 982, -1000,
	560, -1000, -1000, -1000, -1000, 21987, 240, -1000, 1454, 1711,
	-1000, 322, 745, 828, -1000, 87, 2098, 17137, 1302, 17137,
	21987, -1000, -1000, -1000, -1000, -1000, -1000, -103, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -63, -1000, -63, 6441, 6441, 6441, 6441, 6441, -1000,
	450, 6929, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7905,
	7905, 7905, 7905, 7905, 7905, 7905, 7905, 7905, 7905, 7905,
	7905, 1696, 1117, 7905, 7905, 7905, 2062, 1959, 726, -1000,
	-1000, -1000, -1000, -1000, 1029, 1250, 6441, 6441, 21987, 23490,
	6441, 6441, 83, 6441, 2013, 2013, 3008, 21987, 6441, -1000,
	1577, 1576, -1000, -1000, 1137, 6441, -1000, -1000, 6441, 7905,
	6441, -1000, -1000, -1000, -1000, 47, 2013, 6441, 6441, 2013,
	2013, 2013, 1040, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	1458, 21987, 1919, 32, -1000, -1000, -1000, 1630, -1000, 1673,
	1673, 1630, 1630, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1710, 1707, -1000, -1000, 1630, 1671, 1671, 1630,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1702, 1702, 1705, 1702, 21987,
	2037, -290, 4969, -1000, -295, 1946, 6441, -1000, -1000, 6441,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 344, 336,
	-1000, 1457, 1056, 17137, 1302, 1290, 21987, 336, 340, -1000,
	21987, 714, 2002, 21987, 17137, 1046, 2071, 7905, 1046, -1000,
	-1000, -1000, 945, 945, -1000, -1000, -1000, -1000, 1046, 1046,
	-1000, -1000, -109, 2071, 2071, -128, 21987, 21987, 336, 21987,
	-1000, -1000, -1000, -1000, 21987, -1000, -1000, 1457, 17137, 11802,
	-1000, -149, 475, 456, 468, -1000, -1000, 312, 300, 11317,
	256, 17137, 3496, -1000, -1000, 949, 949, 949, 3496, 3496,
	902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1946, -1000,
	-1000, -1000, -1000, 1457, 17137, 1302, 21987, 21987, 21987, 23228,
	-1000, 715, -1000, -1000, 9372, 877, 715, 1865, -292, -1000,
	10832, 21987, 21987, -1000, 1946, -1000, 1946, 2538, -1000, 2049,
	-1000, 228, 124, -1000, -1000, -1000, -1000, -1000, -1000, 865,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 711,
	-1000, 21987, -1000, -1000, 87, 17137, 1017, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 99, -1000, -1000, 131, -1000, 348,
	-18, 977, -1000, -1000, 30, 128, 30, 1250, -1000, 1060,
	1060, 1062, -1000, 327, -1000, -1000, -1000, -1000, 1700, -1000,
	-1000, -1000, 1231, 1207, -1000, 1256, 1256, 909, 909, 909,
	909, 909, 1073, 1073, -1000, -1000, -1000, 3993, 1696, 7905,
	7905, 7905, 323, 1155, 2892, -1000, 6441, 1036, -1000, 6441,
	1312, 748, 834, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1572, 497, 1570, 1376, 2106, 1568, 6441,
	-1000, -1000, 6441, 1412, 5953, -1000, -1000, -1000, 1553, 830,
	1548, -1000, -1000, -1000, 1547, 564, 1545, 1559, 1544, 647,
	6441, 976, 974, 6441, 6441, 6441, 6441, 1538, 6441, 6441,
	6441, 6441, 6441, 6441, 6441, 637, -1000, 6441, 28, -1000,
	-1000, -1000, -1000, 1257, -1000, 1243, -1000, -1000, -1000, 1450,
	1450, -1000, -1000, 1242, -1000, -1000, -1000, 1239, -1000, -1000,
	1238, -1000, -1000, -1000, -1000, 973, -1000, 1250, -1000, 1448,
	-1000, 1003, 633, -1000, 1201, 19562, 21987, 18, -1000, 1963,
	583, -1000, -18, 525, 1837, -1000, -1000, -1000, 1915, 21987,
	19077, -1000, 1695, 970, -1000, 1835, 21987, -1000, 6441, -1000,
	21987, 2071, 2071, 945, 23228, 1046, 21987, 1046, -1000, -1000,
	1046, -1000, 820, -1000, 21987, -1000, -1000, -1000, -1000, 18,
	583, 2203, 624, -1000, -1000, -1000, -1000, 1998, 22472, 10343,
	22472, 1694, 1692, -1000, -1000, 461, 449, 452, -1000, -1000,
	347, -1000, -1000, 525, -1000, -1000, -1000, 1691, 1022, -1000,
	-1000, 7905, -1000, 3496, 3496, 3496, -1000, -1000, 14712, -1000,
	-1000, 628, 525, 1863, 604, -1000, 604, -1000, -1000, -1000,
	2071, 5457, -1000, 11802, -1000, -1000, 18592, -1000, 18107, 2071,
	-1000, 1929, 526, -1000, 1686, -1000, 966, 1904, -1000, 496,
	-1000, 1020, 955, -1000, -1000, -1000, -1000, 807, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -52, -1000,
	-1000, 21987, 1454, 950, 1017, 594, -1000, 345, 803, 800,
	-1000, 17137, 50, 17137, -1000, 17137, -1000, -1000, 196, -1000,
	21987, 1936, -1000, -1000, -1000, 1426, 1932, -1000, -1000, -1000,
	-1000, -1000, 946, -1000, 323, 1155, 2295, -1000, 7905, 7905,
	1911, 1019, -1000, 6441, 1213, 1281, 545, 13742, 21987, -1000,
	-1000, 6441, 6441, -1000, 1901, 1897, -1000, 6441, 6441, 1175,
	-1000, 21987, -1000, -1000, -1000, 13742, -1000, 7905, -1000, 6441,
	1890, -1000, -1000, 1885, 1871, 1856, 944, -1000, 1840, 1826,
	1789, 1735, 1708, 1619, 1517, 1425, 1250, -1000, -1000, 1535,
	1528, 940, -1000, 935, 1527, 933, 924, 4969, -1000, -134,
	6441, 6441, 6441, 1900, -1000, -1000, 1654, 1050, 1682, -87,
	1002, -1000, 287, 17137, 249, -1000, 1862, 130, -1000, 1915,
	-1000, 613, -1000, 1677, 21987, 646, -1000, 789, 278, -1000,
	21987, -1000, 1302, 945, 1250, 2071, -1000, -1000, 2071, -1000,
	945, -1000, 945, 1046, 21987, -1000, -87, 287, 21987, 11802,
	11802, 11802, 11802, -1000, 1889, 1883, -1000, 1898, 1882, 1962,
	21987, 11802, 21987, -1000, -1000, -1000, 22850, -1000, -1000, -1000,
	-1000, 906, 1525, 2108, 2311, 10343, -1000, 17622, 6441, -1000,
	-1000, -1000, 437, 17137, 1424, 256, -1000, -1000, -1000, -1000,
	-1000, 21987, 21987, 2092, -1000, 603, -1000, -1000, 769, -1000,
	2092, 1079, -292, 4969, 217, 21987, -292, 21987, 4969, -1000,
	21987, 2538, 1235, -1000, -1000, -1000, 2103, 17137, 1302, 927,
	981, -1000, 54, -1000, 97, 296, 1420, -1000, 361, 1018,
	357, -1000, -1000, 7905, -1000, -1000, -1000, -1000, 1250, 6441,
	1524, -1000, 427, 427, 1522, -1000, 1630, 1673, -1000, 1630,
	1671, 1630, 427, 427, 1521, -1000, 1296, 1508, -1000, -1000,
	1491, 1473, 6441, -1000, 1520, 2858, 655, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1519,
	-1000, -1000, -1000, 1413, -1000, -1000, -1000, 1230, -1000, 1221,
	-1000, -84, -70, 1250, 1250, -1000, -1000, 1952, 1995, 1951,
	8887, 1232, -1000, -1000, 1411, -1000, 279, -1000, -1000, -1000,
	353, 41, 1220, 269, -1000, 1430, 21987, -1000, -1000, -1000,
	-1000, -1000, 1002, 1002, 1002, 8887, 317, 585, 766, 11802,
	21987, -1000, 16167, 1511, -1000, 525, 2071, -1000, -1000, 2071,
	2071, 945, -1000, 1232, 279, 641, -1000, 1012, 1834, 1858,
	1834, -1000, -1000, -1000, -1000, 1867, -1000, 1749, -1000, -1000,
	641, -1000, 1654, -1000, -1000, -1000, 1510, 888, 886, 873,
	-1000, 594, 1509, -1000, -1000, -1000, -1000, 2089, 2084, 16652,
	2089, 2124, -1000, 1502, 584, -292, -1000, -1000, 526, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1302, -1000, 89,
	-1000, -1000, -1000, -1000, -1000, -1000, -34, -1000, 21987, 1410,
	21987, -1000, 1250, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6441, -1000,
	-1000, -1000, 1462, -1000, -1000, 6441, -1000, -1000, 1499, 1493,
	-297, -66, 2079, 2076, -1000, -1000, 219, 21987, 1490, 574,
	-1000, -1000, -1000, 23598, 627, -1000, 21987, 1077, 478, 336,
	478, 1076, 1668, -1000, -1000, -1000, 1408, -22, -1000, -1000,
	1406, 1405, 1217, -1000, -1000, 1184, 894, 3, -1000, -1000,
	-1000, -1000, -1000, -1000, 1665, 13742, 14227, 1404, 1489, 22472,
	11802, 16167, 610, -1000, 750, -1000, -1000, -1000, -1000, -1000,
	2071, -1000, -1000, 2087, 21987, 4969, -1000, -1000, 6441, 1655,
	-1000, 6441, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1398,
	-1000, 1379, -1000, -1000, -1000, 6441, 6441, -1000, -1000, 21987,
	-1000, 526, 525, -1000, -1000, -128, 60, -128, 1444, -1000,
	1427, -1000, -1000, -299, 1377, -1000, 2075, 1369, 1324, -1000,
	1654, 23865, 8887, 1307, -1000, -1000, 21987, 21987, -1000, 21987,
	21987, 336, 6441, -1000, -1000, 194, -1000, -1000, 95, -1000,
	-1000, 1169, 331, -1000, 15682, -1000, -1000, -1000, -1000, -1000,
	-63, 2071, 610, 750, -1000, -1000, 925, -1000, 2037, -1000,
	-1000, 1250, 21987, 1250, 859, 849, 1250, 497, 496, -1000,
	-88, -62, -1000, 1368, -1000, -1000, -1000, -303, 1208, -1000,
	1355, -71, -1000, -1000, 1982, 316, 23809, -1000, 1002, 1002,
	757, 1002, 1002, 1002, 1002, 226, 202, 1002, 1002, 1002,
	1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
	1002, 1651, -1000, -1000, 1307, -1000, -1000, 1102, 7905, -1000,
	-1000, 1353, 14227, 433, 443, 1650, -1000, 178, 2123, 1071,
	1067, -1000, 21987, -1000, 1639, 1828, 127, 1635, -1000, 1634,
	1632, 21987, 1423, 292, 1352, -1000, -1000, 84, -1000, -1000,
	848, -1000, 1630, 6441, -1000, -128, 2087, -1000, -1000, 836,
	-1000, 1098, -1000, 1089, 339, -79, -62, -1000, 2073, -76,
	2072, 2070, 1010, -1000, 1628, -1000, -1000, 2069, 219, -1000,
	2068, 23865, -1000, 1205, 1185, 1002, 1002, 1172, 1351, 1350,
	1348, 1002, 1002, 1171, 1347, 22850, 1163, 1161, 1156, 1168,
	1337, 869, 1166, 1164, 1148, 21987, 1627, 1321, -1000, -1000,
	1155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1153, 1625, -143, -1000, -1000, 1604, 15682, 174,
	174, 15682, 15682, 15682, 1603, 343, -1000, -35, -1000, -1000,
	-1000, 15682, 1984, 1417, -1000, 2037, -1000, 1488, 1480, 1477,
	1476, 1602, 1144, -66, 2065, -1000, 1324, 2064, 1324, 1324,
	1333, 21987, 1324, -1000, 162, -1000, -1000, -1000, 13742, 13742,
	-1000, -1000, -1000, -1000, 1327, 1326, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 222, 21987,
	832, -1000, 1006, 1475, 6441, 1600, -231, 15682, 827, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 826, 805, 804, 15682,
	-1000, -1000, -1000, 175, -1000, 136, -1000, -1000, 1984, -1000,
	-1000, -1000, -1000, -1000, 2017, 13257, -92, -1000, 1325, -1000,
	1324, -1000, -1000, 58, 801, -1000, -1000, 151, 197, 182,
	-1000, 314, -1000, -1000, -1000, -1000, -1000, -1000, 233, 797,
	-1000, 1321, 1319, -1000, 1397, -1000, 1850, -1000, 56, 790,
	-1000, -1000, -1000, -1000, 767, -1000, -1000, 1002, 1310, 112,
	-1000, -1000, -1000, -1000, 21987, -1000, 733, -1000, -1000, -1000,
	743, -1000, -1000, -1000, -1000, -1000, 1293, -1000, 21987, 142,
	1138, 7905, 1599, 7905, 1598, 155, 1596, -1000, -1000, -1000,
	-1000, -1000, 343, -1000, 1849, 1842, 2118, -1000, -1000, -1000,
	-1000, 136, 136, 136, 136, 49, 1136, -1000, 1290, 487,
	-1000, 995, -1000, 15197, 21987, 988, -1000, 1590, 2047, -1000,
	2105, 21987, 2067, 21987, 1587, 985, 7905, -1000, -1000, 2121,
	-1000, 2099, 428, 428, -1000, -1000, -1000, 21987, 4481, -1000,
	731, 1265, -1000, 307, 153, -1000, 681, -1000, 673, 21987,
	1132, 1750, -1000, -1000, -1000, 1129, 184, -1000, -1000, -1000,
	1250, 21987, 57, 671, -1000, 1400, 139, -1000, -1000, 666,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1212, -1000, 307,
	1892, -1000, 1124, -1000, 965, -1000, 23790, 460, -1000, 1160,
	-1000, 23790, 137, -1000, 303, 1585, -315, -1000, -1000, 665,
	-1000, 1315, 476, 6441, -1000, -1000, 137, 23865, -1000, 6441,
	631, -1000, 23865, 580, -1000, -1000,
}

var yyPgo = [...]int{
	0, 117, 2547, 189, 128, 125, 185, 2540, 2538, 2030,
	2024, 2537, 2535, 2534, 2533, 2532, 2531, 2530, 2529, 2528,
	2526, 2524, 2523, 2522, 2521, 2520, 2519, 2518, 184, 2517,
	2515, 2514, 2513, 2512, 2511, 2510, 2509, 2508, 2507, 2506,
	2504, 2503, 2502, 2501, 2499, 121, 2497, 2023, 2496, 2495,
	2494, 2493, 2491, 172, 2489, 2488, 2486, 2485, 2484, 2482,
	2481, 2478, 2475, 2474, 2473, 2472, 2471, 2470, 2469, 2468,
	2467, 2466, 177, 165, 58, 2465, 44, 46, 104, 208,
	99, 183, 199, 140, 124, 75, 2463, 2456, 2455, 115,
	170, 108, 24, 2453, 132, 2450, 112, 50, 29, 186,
	102, 55, 66, 88, 2449, 2448, 81, 2447, 2446, 91,
	2441, 61, 2438, 79, 32, 85, 26, 2437, 2434, 2433,
	71, 2429, 2428, 2425, 2408, 133, 2407, 90, 54, 2406,
	2405, 2399, 2398, 2397, 34, 2396, 48, 2395, 2394, 2393,
	2391, 2390, 2389, 2387, 12, 16, 18, 2386, 15, 3,
	2385, 166, 84, 80, 109, 2384, 380, 2383, 2380, 2379,
	114, 2378, 461, 2377, 2376, 2375, 2373, 2372, 10, 2369,
	154, 2362, 2361, 2360, 57, 144, 151, 2358, 2357, 97,
	49, 51, 95, 2356, 2354, 69, 163, 21, 45, 0,
	148, 43, 2353, 2352, 2350, 195, 150, 149, 171, 93,
	187, 118, 2349, 2348, 52, 2347, 111, 2345, 107, 86,
	2341, 131, 2340, 36, 134, 2339, 161, 2338, 215, 2,
	103, 28, 224, 2337, 2335, 2333, 127, 2332, 2331, 59,
	123, 2329, 2328, 2326, 25, 2323, 30, 19, 2322, 76,
	2321, 182, 2319, 130, 96, 136, 139, 106, 169, 173,
	63, 110, 1059, 98, 77, 17, 2317, 167, 2316, 198,
	181, 2315, 143, 2312, 180, 349, 159, 2311, 141, 7,
	2309, 2307, 8, 2306, 22, 2305, 2304, 2303, 2299, 6,
	2298, 2297, 2295, 1, 4, 2294, 5, 164, 41, 94,
	2289, 89, 190, 2287, 2286, 2284, 2283, 2281, 317, 2278,
	2275, 2274, 2273, 2271, 2270, 2265, 2261, 78, 31, 2251,
	2250, 2246, 2245, 68, 101, 2241, 251, 162, 2240, 37,
	2238, 2237, 23, 2236, 27, 2234, 2232, 2219, 13, 137,
	2218, 2213, 14, 2212, 2211, 9, 11, 2209, 2208, 62,
	53, 35, 72, 67, 2207, 20, 64, 92, 2206, 2203,
	179, 178, 153, 2202, 119, 174, 193, 2201, 160, 2199,
	2198, 2197, 2196, 2194, 2180, 2176, 1135, 2174, 2157, 175,
	56, 168, 2149, 2148, 146, 2145, 116, 87, 82, 152,
	2144, 142, 2142, 2141, 176, 147, 2140, 2138,
}

//line mysql_sql.y:7824
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 382, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 62,
	61, 338, 338, 337, 337, 336, 336, 335, 335, 335,
	334, 334, 334, 333, 333, 332, 332, 331, 331, 329,
	329, 330, 328, 327, 327, 327, 325, 325, 323, 323,
	324, 324, 318, 318, 321, 321, 319, 319, 319, 319,
	322, 317, 317, 317, 316, 316, 60, 60, 60, 254,
	254, 59, 59, 268, 268, 268, 268, 268, 266, 266,
	266, 266, 266, 266, 265, 265, 264, 264, 269, 269,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	54, 54, 54, 54, 57, 57, 57, 58, 263, 263,
	263, 55, 56, 56, 253, 253, 258, 258, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	262, 262, 262, 260, 260, 259, 259, 261, 261, 48,
	48, 48, 51, 50, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 49, 49, 49, 49, 49, 49, 46,
	46, 46, 46, 46, 45, 45, 47, 47, 251, 251,
	250, 65, 65, 65, 65, 65, 65, 65, 64, 64,
	67, 67, 66, 53, 53, 53, 53, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 361, 361, 361, 363,
	363, 193, 194, 383, 192, 192, 192, 357, 357, 358,
	359, 360, 360, 360, 63, 7, 7, 43, 44, 381,
	381, 298, 298, 206, 206, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 301, 302, 202, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 34, 34, 240,
	240, 33, 384, 384, 176, 176, 32, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 42, 312, 312, 386,
	386, 386, 40, 41, 297, 297, 297, 38, 37, 36,
	35, 35, 31, 31, 30, 30, 199, 199, 201, 201,
	197, 385, 385, 274, 274, 200, 200, 29, 29, 29,
	198, 198, 175, 196, 196, 196, 8, 8, 6, 11,
	11, 11, 11, 11, 11, 11, 11, 17, 19, 248,
	248, 245, 18, 14, 13, 16, 12, 15, 5, 5,
	5, 5, 9, 9, 10, 84, 84, 115, 115, 370,
	370, 366, 366, 367, 367, 367, 368, 368, 369, 369,
	4, 305, 305, 305, 305, 305, 305, 306, 306, 346,
	346, 346, 347, 105, 105, 100, 100, 307, 307, 220,
	348, 348, 315, 315, 314, 314, 313, 313, 103, 103,
	104, 104, 87, 87, 73, 73, 320, 320, 320, 320,
	326, 326, 295, 295, 141, 141, 171, 171, 172, 172,
	77, 77, 78, 78, 78, 78, 78, 78, 354, 354,
	356, 356, 355, 102, 102, 98, 98, 99, 99, 99,
	97, 97, 96, 95, 95, 94, 92, 92, 92, 93,
	93, 93, 80, 80, 79, 79, 79, 79, 79, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 81, 81, 362, 362, 362, 299, 299, 299, 304,
	304, 153, 153, 154, 154, 152, 152, 82, 82, 83,
	83, 83, 83, 151, 151, 150, 85, 85, 91, 90,
	90, 86, 86, 86, 86, 161, 161, 160, 160, 160,
	160, 70, 71, 71, 72, 108, 108, 159, 158, 158,
	158, 107, 107, 106, 106, 101, 101, 89, 89, 89,
	89, 157, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 387, 387, 155, 185, 185, 185, 191, 191, 184,
	184, 184, 184, 184, 195, 190, 190, 186, 186, 187,
	187, 187, 3, 3, 3, 3, 23, 23, 23, 23,
	27, 27, 364, 364, 20, 371, 374, 372, 375, 375,
	375, 376, 376, 376, 377, 377, 21, 373, 378, 378,
	378, 249, 249, 246, 247, 247, 244, 243, 243, 243,
	380, 380, 379, 379, 379, 188, 188, 22, 239, 239,
	241, 242, 242, 233, 233, 233, 233, 26, 237, 237,
	238, 238, 238, 238, 238, 234, 234, 236, 236, 232,
	232, 232, 232, 232, 25, 231, 231, 229, 229, 227,
	227, 228, 228, 226, 226, 226, 230, 230, 24, 24,
	75, 74, 74, 74, 74, 74, 76, 300, 300, 270,
	270, 273, 273, 280, 280, 281, 281, 279, 279, 286,
	286, 285, 285, 284, 284, 283, 283, 282, 282, 282,
	282, 277, 277, 276, 276, 271, 271, 271, 271, 271,
	272, 272, 275, 275, 278, 278, 132, 132, 133, 133,
	133, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	344, 344, 345, 135, 135, 135, 139, 139, 139, 139,
	139, 139, 134, 134, 136, 136, 116, 116, 114, 114,
	109, 109, 110, 110, 111, 111, 112, 112, 113, 113,
	113, 113, 113, 113, 256, 256, 342, 342, 343, 343,
	339, 339, 339, 341, 341, 341, 341, 341, 340, 340,
	117, 169, 169, 169, 189, 189, 189, 168, 168, 168,
	131, 131, 130, 130, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 255, 255,
	203, 203, 204, 204, 148, 147, 147, 147, 147, 147,
	145, 146, 144, 144, 144, 144, 144, 143, 143, 142,
	142, 142, 235, 235, 140, 140, 138, 138, 138, 137,
	137, 137, 287, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 212, 212, 217,
	217, 353, 353, 352, 118, 118, 118, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 127, 127, 127, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 311, 311, 311, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	167, 365, 365, 365, 349, 349, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 165, 165, 165, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 221, 221, 222, 222, 308, 308, 308, 308, 308,
	308, 309, 309, 310, 310, 310, 310, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 210, 162, 162, 162,
	223, 218, 218, 219, 219, 213, 213, 213, 213, 213,
	213, 213, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 214, 214, 216, 216, 225, 225, 225, 224,
	224, 224, 224, 224, 224, 224, 129, 129, 129, 129,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	120, 120, 120, 120, 124, 124, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	125, 125, 125, 125, 123, 123, 123, 123, 123, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 68, 69, 69, 122, 170,
	170, 288, 288, 291, 291, 289, 289, 290, 292, 292,
	292, 293, 293, 293, 294, 294, 294, 296, 296, 174,
	174, 174, 181, 181, 173, 173, 182, 182, 183, 183,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 9,
	9, 0, 2, 1, 3, 3, 3, 1, 3, 5,
	0, 2, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 0, 3, 3, 0, 3, 0, 3,
	0, 3, 0, 2, 1, 2, 3, 4, 3, 3,
	1, 0, 1, 1, 0, 1, 8, 5, 7, 0,
	3, 8, 5, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 4, 1, 3,
	1, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 2, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 3, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 2, 2, 0, 1, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 3, 4, 4, 1, 2, 9, 7, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 1, 6, 1, 1, 7, 7, 0,
	3, 0, 2, 0, 1, 1, 1, 1, 4, 2,
	2, 3, 3, 4, 5, 3, 4, 4, 2, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 5, 0,
	2, 7, 0, 1, 0, 1, 4, 1, 1, 1,
	3, 2, 3, 1, 1, 1, 6, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	6, 7, 4, 4, 7, 8, 0, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	5, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 4, 2,
	3, 3, 4, 6, 8, 8, 4, 6, 8, 8,
	4, 0, 1, 2, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 11, 0, 1, 7, 1, 4, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 5, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 10, 9,
	2, 2, 6, 10, 14, 18, 5, 0, 1, 0,
	6, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 1, 7, 7,
	7, 7, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 4, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 5,
	4, 4, 5, 5, 5, 5, 4, 5, 5, 5,
	5, 5, 5, 5, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 5, 4, 6, 6, 7, 4,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -382, -2, -1, -3, -4, -5, -6, -8, -52,
	-64, -66, -67, -28, -7, -63, -45, -46, -48, -54,
	-59, -60, -61, -62, -68, -69, -70, -77, -23, -22,
	-21, -20, 12, -9, -10, -354, -11, 229, -192, -193,
	-194, -383, -29, -30, -31, -35, -36, -37, -38, -40,
	-41, -42, -32, -33, -34, -44, -43, 206, -47, 61,
	-49, -50, -51, -55, -56, -57, -58, 320, 326, 378,
	387, 506, 507, 46, -78, -80, -24, -25, -26, -27,
	202, 14, 457, -12, -15, -13, -16, -14, -18, -19,
	-17, 224, 223, 37, 286, 287, 324, 222, 203, 13,
	135, 136, 138, 139, 30, -79, 67, 204, -81, 10,
	508, -87, 38, -114, -189, 70, -177, -180, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 427, 302, 454, 241, 265, 268,
	275, 135, 154, 148, 176, 168, 143, 245, 246, 77,
	138, 410, 87, 395, 375, 141, 260, 262, 264, 267,
	247, 164, 159, 259, 243, 506, 157, 248, 39, 249,
	181, 250, 251, 459, 391, 301, 397, 272, 373, 158,
	392, 263, 394, 183, 187, 402, 326, 152, 153, 399,
	404, 180, 221, 42, 456, 233, 405, 185, 179, 175,
	413, 276, 274, 178, 151, 174, 244, 50, 189, 188,
	190, 369, 370, 371, 372, 252, 253, 314, 401, 171,
	160, 305, 144, 22, 408, 228, 396, 327, 254, 269,
	277, 184, 186, 235, 240, 458, 377, 239, 273, 406,
	156, 232, 261, 227, 409, 145, 320, 329, 255, 139,
	266, 403, 412, 49, 342, 150, 142, 218, 136, 237,
	242, 11, 256, 257, 258, 279, 278, 270, 172, 234,
	177, 162, 149, 173, 137, 236, 411, 343, 504, 303,
	358, 170, 167, 238, 211, 407, 398, 140, 362, 344,
	165, 280, 501, 502, 503, 315, 300, 281, 282, 163,
	225, 390, 283, 285, 368, 293, 345, 376, -47, -10,
	-9, -79, -80, -114, 209, -196, 23, 373, -53, 374,
	206, 67, -189, -5, -4, -45, -77, -195, -189, 286,
	-195, 209, -189, 239, 357, -298, 214, -265, -239, 240,
	-264, -241, -267, -242, 31, 202, 204, 203, 236, 14,
	324, 210, 12, 10, 325, 222, 24, 25, 27, 13,
	326, 328, 28, 329, 332, 333, 334, 41, 337, 338,
	229, 70, 73, 247, 247, -219, -213, 94, 230, -215,
	-208, -209, -211, -335, -329, -207, 67, 119, 120, 127,
	95, -210, -287, 35, 97, 464, 425, -163, -164, -165,
	-166, -167, -189, -330, -328, 73, 78, 81, 84, 85,
	83, 82, 161, 80, 74, 132, -80, 70, -349, 472,
	-178, 492, 473, 491, 46, -303, -310, 208, -308, 166,
	225, 162, 12, 125, 368, 130, 163, 469, 488, 427,
	495, 466, 467, 461, 462, 463, 465, 474, 476, 487,
	-311, 483, 493, 494, 496, 72, 71, 486, 485, 470,
	471, 477, 460, 468, 478, 479, 484, 489, 490, 497,
	498, 308, 87, 309, 310, 417, 304, 311, 214, 373,
	55, 312, 313, 314, 315, 316, 424, 317, 56, 318,
	307, 229, 358, 319, 165, 182, 429, 428, 430, 421,
	418, 416, 419, 420, 422, 423, 480, 481, 482, -261,
	-259, -189, -71, -72, 499, -96, -97, -156, 19, 6,
	7, 8, 9, -300, 302, 358, 239, -233, -231, 283,
	335, 219, 218, 88, 417, 208, -366, -367, 199, 200,
	201, -356, 450, -355, -189, 26, 209, -39, -312, -297,
	398, 397, -200, 396, 389, 400, 391, 202, 451, -174,
	345, 376, 235, 414, 415, 322, 377, 402, 403, 392,
	87, 169, 166, 302, 358, -366, 140, 137, -252, 140,
	93, 145, 144, -252, 239, 357, 40, -258, 368, -257,
	-259, 402, 403, 413, 71, 72, 401, -174, 87, -97,
	-156, -96, -78, -80, -354, 302, 358, 239, 210, 209,
	211, 417, 286, -299, -362, 31, -304, 196, 197, 198,
	32, 33, -1, -103, 231, -114, 133, -97, -96, -97,
	-114, -168, -189, 375, 103, -53, -53, 374, -357, -358,
	-359, -361, 206, 374, 373, 133, 15, -195, 65, -114,
	-241, 239, -265, -239, 35, 64, 134, 212, 134, 64,
	67, 322, 302, 358, 323, 417, 209, 335, 211, 239,
	336, 302, 358, 209, 211, 417, 239, 302, 209, 211,
	358, 239, 336, 389, 390, 211, 26, 327, 330, 331,
	390, -316, 413, -316, 134, 93, 90, 91, 92, -213,
	110, -224, 103, 104, 105, 106, 107, 108, 109, 116,
	115, 126, 119, 120, 121, 122, 123, 124, 125, 117,
	118, 113, 94, 111, 112, 96, -80, -213, -219, -211,
	-211, -211, -211, -287, -217, -213, 67, 67, 133, -213,
	67, 67, 67, 67, 67, 67, 67, 67, 67, -309,
	67, 67, -221, -222, 67, 67, 73, 73, 67, 67,
	67, -211, 73, -222, -222, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 134, -120, -124, -121, -123, -122, -126, -125, 166,
	167, 130, 170, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 30, 182, 225, 162, 163, 164, 165,
	183, 148, 168, 455, 191, 149, 192, 150, 193, 151,
	194, 152, 153, 195, 154, 157, 158, 159, 156, 133,
	-97, 134, 67, -73, 38, -99, 21, -81, -80, 20,
	31, 32, 31, 32, 31, 32, 31, 32, -364, 209,
	450, -229, 214, -229, -229, 210, -229, 209, -368, 147,
	134, -356, -102, 67, 23, 237, -199, 111, -386, 210,
	399, 42, 238, 237, -98, -99, -98, 393, 390, -274,
	394, 395, -200, -199, -199, -200, 209, 211, 417, -384,
	-385, 15, 113, 237, -384, 30, 30, -298, -298, -369,
	213, 406, 457, 143, 144, 145, -241, 239, 239, 134,
	103, 23, -260, 103, 114, -259, -259, -259, -260, -260,
	-134, 40, -188, 130, -189, 73, -134, 40, -98, -81,
	-80, 68, 68, -298, -298, -298, -298, -298, -298, -298,
	-195, -82, -83, 121, -213, -189, -82, -305, 46, -77,
	67, 30, 67, -189, -98, -73, -99, 133, 78, 73,
	-53, 68, 134, -360, 84, 85, -363, 180, 172, -189,
	-65, 73, -3, -4, -5, -6, -28, -45, -77, -331,
	-329, 67, 31, 367, 64, 15, -266, 209, 417, 321,
	235, 211, 302, -264, -248, -245, -243, -188, -241, -244,
	-243, -269, -168, 390, -74, 379, -74, -213, -213, -213,
	-213, -213, 83, 94, 300, 84, 85, -208, -225, 31,
	281, 282, -209, -209, -209, -209, -209, -209, -209, -209,
	-209, -209, -209, -209, -216, -223, -287, 67, 113, 111,
	112, 96, -211, -209, -209, 68, 134, -353, -352, 98,
	-213, -213, -189, -350, -351, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 312, 307, 313, 311,
	304, 319, 314, 315, 165, 448, 449, 442, 443, 444,
	445, 446, 447, -218, -219, -218, -213, -350, -218, -162,
	32, 31, -162, -213, -365, 298, 297, 299, -100, -189,
	-218, 68, 68, 68, 78, -219, -218, -209, -218, -351,
	-162, -219, -219, -162, -162, -162, -162, 121, -162, -162,
	-162, -162, -162, -162, -162, 73, -259, 40, -294, 343,
	342, -288, -290, 67, -289, 67, -289, -288, -288, 67,
	67, -288, -291, 67, -291, -288, -292, 67, -292, -293,
	67, -292, -189, -98, -72, -314, -313, -213, 40, 500,
	-73, -213, -95, -94, -213, 211, -229, -371, 70, 94,
	-249, -246, -243, -239, -187, 70, 71, 72, -189, -229,
	-369, -355, 34, -101, -189, -243, -384, -152, 16, -211,
	-385, -199, -199, -201, -385, -197, -385, 390, -152, -152,
	-274, -198, -189, -198, -229, -176, -175, -189, -176, -371,
	-249, -90, -85, -89, -86, -91, -155, -157, -88, 67,
	-114, 497, 498, 407, 408, 141, 144, 143, 31, 367,
	-263, 367, 31, -239, -257, -253, 73, 368, -244, -262,
	64, 130, -313, -260, -260, -260, -262, -262, 129, -73,
	-371, -248, -239, -189, -116, -114, -116, -190, -187, -180,
	-151, 134, -150, 15, -184, -189, 34, 73, 133, -151,
	-306, 64, -307, -220, -348, 499, -105, 68, -100, -346,
	-347, -100, -104, -189, -73, -73, -182, -183, -173, -179,
	-186, -187, -180, 207, 31, 93, 34, 36, 308, 340,
	96, 130, 20, 97, 166, 129, 310, 425, 309, 202,
	59, 428, 430, 429, 418, 416, 360, 364, 366, 363,
	417, 389, 40, 14, 37, 223, 32, 33, 123, 204,
	100, 101, 226, 35, 224, 85, 44, 23, 62, 15,
	17, 18, 311, 359, 214, 213, 113, 379, 210, 57,
	12, 132, 38, 110, 361, 53, 89, 45, 55, 111,
	21, 419, 420, 41, 378, 387, 453, 230, 125, 312,
	313, 60, 94, 367, 83, 43, 64, 90, 19, 58,
	112, 205, 424, 56, 365, 316, 318, 328, 450, 317,
	208, 400, 10, 307, 426, 30, 222, 54, 209, 99,
	212, 84, 229, 6, 88, 13, 61, 65, 421, 422,
	423, 46, 98, 16, 319, 457, 380, 381, 382, 383,
	384, 385, 386, 191, 192, 193, 194, 195, 271, 217,
	215, 219, 220, 499, 500, 196, 197, 297, 299, 169,
	199, 200, 201, 231, 147, 7, 346, 347, 348, 349,
	351, 352, 353, 354, 355, 356, 357, 507, 23, -53,
	-358, 133, 134, -101, -266, -247, -244, -268, 121, 70,
	-254, 134, 457, 509, 71, 212, -380, -379, 359, 68,
	134, -317, 213, 424, 73, 510, -317, 83, 300, 84,
	85, -287, -219, -216, -211, -209, -209, -214, 226, 93,
	-213, -212, -352, 100, -213, 34, 134, 65, 133, 68,
	68, 15, 15, 68, -213, -213, 68, 15, 15, -213,
	68, 133, 68, 68, 68, 65, 68, 134, 68, 134,
	-213, 68, 68, -213, -213, -213, -219, 68, -213, -213,
	-213, -213, -213, -213, -213, 134, -213, -296, 344, 78,
	78, -170, 73, -170, 78, 78, 78, 134, 68, 73,
	134, 22, 134, -92, 36, 37, -114, 214, -114, -374,
	346, 35, -381, 134, 40, -379, -232, 65, -227, -228,
	-226, -230, 40, -114, 15, -84, -115, -189, 67, 68,
	134, -240, 65, -176, -213, -114, -152, -152, -199, -190,
	-201, -196, -201, -197, 133, -175, -374, -381, 30, -158,
	-159, -160, -161, 53, 57, 59, 54, 55, 56, 60,
	30, 134, -387, 34, -185, -191, 34, -186, 73, -187,
	-180, -85, -78, -80, -90, 67, -185, 67, 67, 142,
	145, 145, 144, 212, 67, 103, -262, -262, -262, 40,
	-188, 64, 134, -152, -83, -85, -189, 73, -189, 121,
	-152, 39, 134, 67, 68, 134, 46, 134, 103, 68,
	134, 133, 375, -189, -329, 68, -268, 134, 212, 133,
	133, -245, 326, -188, -247, 20, 457, -168, 38, 73,
	38, 68, -214, 93, -211, -208, 68, 101, -213, 99,
	-118, -120, 342, 343, -119, -125, 130, 166, 225, 165,
	164, 162, 342, 343, -134, -189, -213, -213, 68, 68,
	-213, -213, 15, -189, -134, -209, -213, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 73,
	68, 68, 68, 134, 68, 68, 68, 134, 68, 134,
	-313, -320, 394, -213, -213, -94, -93, 43, -102, 94,
	67, -376, 396, 348, -181, 103, -206, -205, 303, 41,
	-301, 368, 354, 355, -246, 239, 64, 292, 293, 294,
	295, -226, -174, 129, 250, 67, -114, -84, -189, 15,
	134, -370, 133, -1, -189, -239, -199, -152, -152, -199,
	-199, -201, -189, -376, -206, -251, -250, -168, -89, -89,
	-89, -89, 53, 53, 53, 58, 53, 58, 53, -160,
	-251, -91, -189, -191, 68, 68, -78, 73, -168, -219,
	145, -247, -202, 73, -253, -114, -114, -154, 17, 133,
	-154, 89, -220, -315, -314, 46, -77, -100, -307, -347,
	-313, -189, -182, -179, -187, -180, 78, 15, -244, -239,
	121, 121, 70, 327, -254, 73, 347, 73, 209, 103,
	209, -208, -213, 68, -127, 153, 152, -127, 68, -288,
	-289, -288, -291, -288, -127, -127, 68, 68, 23, 68,
	68, 68, -213, 68, 68, 134, 68, 73, 78, 78,
	-326, 385, 380, 382, 44, 45, 34, 35, -109, -110,
	-111, -117, -112, -168, -204, -113, 217, 215, 219, -343,
	88, 220, 271, 89, 210, -377, 77, -372, 73, -378,
	77, 349, 132, 305, 40, 350, 351, 365, 301, 78,
	78, 356, -373, 70, -114, -181, -181, -181, -109, -103,
	65, 133, -85, -115, -189, 121, 68, -152, -152, -152,
	-199, -377, -378, -152, 134, 103, -107, -106, 64, 65,
	-108, 64, -106, 53, 53, -152, -102, 68, 68, 134,
	68, 134, 68, 68, -153, 18, 20, 121, -153, 13,
	68, -307, -239, -254, 368, -114, 73, -114, -213, 68,
	-213, 68, 68, -295, 501, -324, 380, 20, 20, -77,
	-114, 68, 134, -120, -113, -189, 89, -342, -343, -229,
	-342, 89, 67, 73, -375, 359, 73, 73, 78, 40,
	78, 132, 352, -302, 67, -134, -136, -188, 130, 73,
	68, -185, -85, -189, -152, -370, 133, -152, -97, -250,
	-313, -213, 67, -213, 73, 73, -213, -219, -346, -76,
	-318, -274, 511, 134, -76, 68, 68, -141, 502, 73,
	20, 73, -322, 73, -102, -132, -133, -149, 340, 241,
	-230, 245, 77, 246, 375, 247, 210, 249, 250, 251,
	221, 252, 253, 254, 368, 255, 256, 257, 258, 323,
	6, 288, -111, -131, -130, -128, 83, 94, 40, 340,
	-129, 77, 129, 264, 242, 265, -148, -203, 64, 215,
	88, 89, 328, -204, -339, -340, -189, -340, -189, -339,
	-339, -229, -213, 20, 457, 304, 40, 78, 40, 353,
	-234, -236, -168, 67, -75, -74, -152, -152, -98, -101,
	68, 134, 68, 134, -325, 385, -321, -319, 380, 381,
	382, 383, 73, -171, 503, 78, 73, 382, 34, -270,
	231, 134, -149, -181, -181, -174, 129, -181, -181, -181,
	-181, 248, 248, -181, -181, -181, -181, -181, -181, -181,
	-181, -181, -181, -181, -181, -181, -181, 67, -128, 83,
	-209, 73, -136, -137, 40, 263, 259, -138, 40, 243,
	244, -140, 67, 271, 13, 89, 89, -114, 67, 65,
	280, 67, 67, 67, -340, 68, 73, 347, 73, 304,
	68, 134, -288, -213, -76, -97, 68, 84, 85, 84,
	85, -327, 213, -323, 384, -319, 20, 382, 20, 20,
	103, 67, 20, -77, 20, -149, 78, 78, -181, -181,
	78, 73, 73, 73, -181, -181, 78, 73, -191, 78,
	78, 78, 78, 40, 73, -139, 40, 259, 263, 260,
	261, 262, 78, 40, 78, 40, 78, 40, -189, 67,
	-344, -345, 73, 78, 67, -308, -235, 67, -234, -341,
	292, 293, 294, 296, 295, -341, -234, -234, -234, 67,
	-256, -255, 272, 94, 368, -237, -236, -92, 68, -98,
	68, 68, 68, 68, -334, 67, 78, -324, 20, -322,
	20, -322, -322, 73, -172, -189, -322, -271, 273, 274,
	-272, -278, 276, -134, -134, 73, 73, -135, 242, -116,
	68, 134, 103, 68, -213, -221, -143, -142, 453, -234,
	68, 68, 68, 68, -234, 272, -238, 221, 77, 457,
	290, 291, -92, -338, 30, 68, -333, -332, -169, -328,
	-189, 385, 386, 73, -322, 511, 134, 68, 134, -276,
	277, 67, -274, 67, -274, 89, 293, 243, 244, 68,
	-345, 73, 68, -147, -145, -146, 64, 392, 269, 270,
	68, -237, -237, -237, -237, 68, -181, 73, 289, -337,
	-336, -335, 68, 134, 133, 73, -189, -273, 278, 78,
	-209, 67, -209, 67, -275, 275, 67, -255, -146, 64,
	-145, 64, 14, 13, -148, 78, -187, 134, 103, -332,
	-189, 103, -280, 67, 20, 68, -269, 68, -269, 67,
	103, -209, -144, 266, 267, 30, 144, -144, -336, 40,
	-213, 133, 73, -281, -279, 231, -272, 68, 68, -269,
	78, 68, 83, 40, 268, -189, 511, 134, 68, 134,
	70, -277, 279, 68, 73, -279, -282, 46, 78, 103,
	-286, -283, 67, -149, 233, 113, 73, -286, -149, -285,
	-284, 278, 234, 67, 511, 68, 134, 70, 230, 67,
	-219, -284, -283, -219, 68, 68,
}

var yyDef = [...]int{
	28, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 602, 603,
	604, 605, 0, 388, 389, 0, 368, 0, 0, 0,
	0, 0, 294, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 265, 266, 0, 214, 210,
	189, 190, 191, 150, 151, 152, 153, 271, 0, 0,
	0, 0, 0, 0, 460, -2, 606, 607, 608, 609,
	-2, 401, 0, 369, 370, 371, 372, 373, 374, 375,
	376, 254, 255, 256, 251, 252, 253, -2, 0, 401,
	203, 0, 194, 194, 0, 480, 0, 0, 494, 516,
	28, 438, 0, 443, 788, 824, 825, 826, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 215, 390,
	391, 480, 480, 366, 0, 237, 0, 1418, 241, 0,
	0, 0, 363, 233, 234, 235, 236, 0, 594, 0,
	230, 0, 209, 1477, 0, 0, 0, 0, 0, 0,
	94, 648, 96, 650, 100, 107, 0, 0, 112, 113,
	116, 117, 118, 119, 120, 0, 124, 0, 126, 129,
	0, 131, 132, 0, 135, 136, 137, 0, 147, 148,
	149, 651, 652, 74, 74, 1175, 1073, 0, 1080, 1081,
	1092, 1101, 895, 896, 897, 898, 0, 0, 0, 0,
	0, 905, 906, 0, 919, 1564, 0, 912, 913, 914,
	915, 916, 37, 49, 50, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1046, 882, 824, 0, 1572,
	0, 1592, 1573, 1591, 0, 0, 1031, 0, 1021, 0,
	-2, -2, 0, 0, 1544, 0, -2, 1569, 1588, 1596,
	1595, 1566, 1567, 1561, 1562, 1563, 1565, 1574, 1576, 1587,
	0, 1583, 1593, 1594, 0, 51, 52, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1558,
	1559, 1037, -2, 1039, 1040, 1042, 1043, 1044, 1045, -2,
	1048, 1049, 1050, -2, -2, 1053, 1054, 1055, 1056, 1057,
	1058, 1061, -2, 1063, -2, 1065, 1033, 1034, 1035, 1036,
	1025, 1026, 1027, 1028, 1029, 1030, -2, -2, -2, 0,
	187, 185, 480, 552, 0, -2, 0, 0, 0, 499,
	502, 505, 508, 612, 677, 677, 677, 0, 677, 0,
	698, 654, 655, 656, 675, 676, 406, 402, 403, 404,
	405, 468, 0, 470, 473, 307, 0, 346, 0, 0,
	475, 475, 0, 355, 346, 346, -2, 0, 317, 318,
	319, 312, 0, 312, 323, 324, 325, 335, 336, 356,
	1199, 0, 0, 271, 271, 408, 204, 205, 193, 195,
	0, 199, 0, 192, 1477, 0, 0, 161, 1544, 166,
	0, 1425, 1491, 1440, 0, 0, 1458, 0, -2, 475,
	0, 481, 0, 480, 0, 271, 271, 271, 271, 271,
	271, 271, 0, 0, 0, 517, 518, 513, 514, 515,
	519, 520, 3, 0, 0, 442, 0, 475, -2, 0,
	367, 238, 827, 0, 0, 242, 243, 0, 0, 257,
	0, 260, 246, 247, 248, 0, 0, 232, 0, 0,
	211, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 104, 101, 108, 111, 121, 128, 0, 140, 142,
	145, 102, 109, 114, 115, 122, 143, 103, 105, 106,
	110, 144, 146, 123, 127, 141, 125, 130, 133, 134,
	139, 0, 75, 0, 0, 0, 0, 0, 0, 1079,
	0, 0, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1073, 0, 901,
	902, 903, 904, 907, 0, 920, 0, 0, 0, 0,
	1071, 1071, 0, 1071, 1067, 1067, 0, 0, 1071, 1009,
	0, 0, 1011, 1022, 0, 0, 1014, 1015, 1071, 0,
	1071, 1019, 1020, 1005, 1006, 0, 1067, 0, 0, 1067,
	1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
	0, 0, 1176, 1194, 1131, 1132, 1133, 1181, 1135, 1185,
	1185, 1181, 1181, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 0, 0, 1174, 1154, 1181, 1183, 1183, 1181,
	1178, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1188, 1188, 1191, 1188, 0,
	475, 0, 0, 463, 0, 444, 0, 496, 498, 0,
	500, 501, 503, 504, 506, 507, 509, 510, 0, 677,
	613, 0, 0, 0, 0, 0, 0, 677, 408, 407,
	0, 469, 0, 0, 0, 312, 525, 0, 0, 329,
	330, 331, 346, 346, 337, 476, 338, 339, 348, 0,
	353, 354, 0, 525, 525, 0, 0, 0, 677, 314,
	313, 351, 352, 321, 314, 1200, 1201, 0, 0, 0,
	409, 0, 0, 197, 0, 202, 154, 0, 0, 0,
	0, 0, 0, 183, 184, 0, 0, 0, 0, 0,
	174, 177, 782, 783, 645, 646, 178, 179, 444, 495,
	497, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	387, 533, 527, 529, 589, 37, 533, 417, 430, 412,
	0, 419, 0, 789, 444, 466, 444, 0, 239, 0,
	244, 0, 0, 259, 261, 262, 263, 249, 250, 364,
	228, 229, 221, 222, 223, 224, 225, 226, 227, 231,
	47, 0, 212, 213, 0, 0, 0, 88, 89, 90,
	91, 92, 93, 95, 79, 379, 381, 637, 649, 0,
	640, 0, 98, 138, 71, 0, 71, 1074, 1075, 1076,
	1077, 1078, 1082, 0, 1084, 1086, 1088, 1090, 0, 1106,
	-2, -2, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 1093, 1104, 1105, 0, 0, 0,
	0, 0, 1102, 1097, 0, 899, 0, 917, 921, 0,
	0, 0, 38, 1066, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 0, 1072, 0, 1073, 0, 0, 0,
	1068, 1069, 0, 0, 0, 971, 972, 973, 0, 425,
	0, 1032, 1010, 1023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 1197, 1195,
	1196, 1134, 1182, 0, 1159, 0, 1160, 1161, 1162, 0,
	0, 1155, 1156, 0, 1157, 1158, 1150, 0, 1151, 1152,
	0, 1153, 186, 551, 553, 0, 434, 436, 437, 0,
	464, 477, 482, 483, 486, 0, 0, 0, 615, 0,
	269, 631, 0, 647, 669, 599, 600, 601, -2, 0,
	0, 471, 0, 0, 565, 309, 314, 316, 0, 347,
	0, 525, 525, 346, 0, 348, 0, 348, 342, 343,
	0, 357, 360, 358, 0, 320, 315, 362, 322, 0,
	269, 538, 0, 539, 540, 536, 567, 581, 584, 0,
	584, 0, 0, 206, 207, 0, 0, 201, 155, 156,
	0, 158, 159, 160, 167, 162, 164, 0, 0, 168,
	180, 181, 182, 0, 0, 0, 172, 173, 0, 462,
	377, 378, 382, 0, 384, 786, 385, 386, 595, 596,
	525, 0, 534, 0, 530, 590, 0, 592, 0, 525,
	410, 0, 411, 427, 0, 431, 0, 0, 423, 416,
	420, 0, 0, 440, 465, 467, 828, 0, 1206, -2,
	1208, -2, -2, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 0, 245,
	258, 0, 0, 0, 0, 82, 634, 0, 83, 87,
	77, 0, 0, 0, 639, 0, 636, 641, 0, 97,
	0, 0, 72, 73, 691, 0, 0, 1083, 1085, 1087,
	1089, 1091, 0, 1094, 1102, 1098, 0, 1095, 0, 0,
	1074, 0, 922, 0, 0, 0, 0, 0, 0, 957,
	958, 0, 0, 962, 0, 0, 965, 0, 0, 0,
	969, 0, 1008, 1024, 1012, 0, 1016, 0, 1018, 0,
	0, 940, 941, 0, 0, 0, 0, 946, 0, 0,
	0, 0, 0, 0, 0, 0, 1177, 1130, 1198, 0,
	0, 0, 1179, 0, 0, 0, 0, 0, 554, 446,
	0, 0, 0, 489, 487, 488, 473, 0, 0, 621,
	1202, 678, 273, 0, 0, 633, 0, 0, 674, -2,
	681, 0, 687, 0, 0, 0, 395, 399, 28, 474,
	0, 308, 0, 346, 526, 525, 332, 333, 525, 349,
	346, 350, 346, 348, 0, 359, 621, 273, 0, 0,
	0, 0, 0, 558, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 582, 569, 585, 0, 587, 588, 597,
	598, 0, 0, 480, 538, 0, 583, 0, 0, 208,
	196, 198, 0, 0, 0, 0, 169, 170, 171, 175,
	176, 0, 0, 523, 528, 535, 591, 593, 38, 531,
	523, 0, 430, 432, 0, 0, 430, 0, 0, 439,
	0, 0, 0, 365, 48, 264, 0, 0, 0, 0,
	0, 380, 0, 638, 79, 0, 0, 99, 0, 0,
	0, 1070, 1096, 0, 1103, 1099, 900, 908, 918, 0,
	0, 924, 936, 936, 0, 927, 1181, 1185, 930, 1181,
	1183, 1181, 936, 936, 0, 39, 0, 0, 963, 964,
	0, 0, 0, 426, 0, 0, 0, 939, 942, 943,
	944, 945, 947, 948, 949, 950, 951, 952, 953, 0,
	1187, 1186, 1172, 0, 1173, 1184, 1189, 0, 1192, 0,
	435, 450, 0, 478, 479, 484, 485, 0, 0, 0,
	790, 624, 622, 623, 0, 1203, 628, 274, 275, 276,
	277, 0, 0, 0, 632, 0, 0, 670, 671, 672,
	673, 682, 1202, 1202, 1202, 790, 438, 0, -2, 0,
	0, 397, 0, 0, 566, 310, 525, 326, 340, 525,
	525, 346, 361, 624, 628, 525, 218, 0, 561, 555,
	0, 544, 559, 560, 547, 0, 549, 0, 545, 546,
	525, 537, 473, 586, 570, 571, 0, 0, 0, 0,
	200, 157, 0, 293, 163, 383, 787, 521, 0, 0,
	521, 0, 428, 0, 433, 430, 415, 424, 414, 421,
	422, 441, 829, 1207, 1204, 1205, 240, 0, 635, 79,
	84, 85, 86, 80, 78, 642, 0, 644, 0, 0,
	0, 1100, 923, 909, 925, 937, 938, 926, 910, 928,
	929, 931, 932, 933, 934, 935, 911, 959, 0, 961,
	966, 967, 0, 1013, 1017, 0, 970, 1180, 0, 0,
	452, 60, 0, 0, 490, 491, 0, 0, 0, 791,
	792, 794, 795, 0, 0, 797, 852, 0, 806, 677,
	806, 0, 0, 808, 809, 614, 0, 0, 617, 626,
	0, 0, 0, 279, 280, 0, 0, 0, 292, 288,
	289, 290, 270, 627, 0, 0, 0, 0, 0, 584,
	0, 0, 525, 396, 399, 400, 472, 311, 344, 341,
	525, 267, 268, 480, 0, 0, 541, 562, 0, 0,
	542, 0, 543, 548, 550, 217, 568, -2, 572, 0,
	576, 0, 580, 165, 511, 0, 0, 532, 512, 419,
	429, 413, 81, 76, 643, 62, 0, 62, 0, 968,
	0, 1190, 1193, 454, 0, 451, 0, 0, 0, 610,
	473, -2, 0, -2, 796, 853, 818, 818, 807, 818,
	818, 677, 0, 625, 616, 0, 629, 630, 0, 281,
	282, 0, 285, 291, 0, 683, 684, 784, 785, 685,
	0, 525, 525, -2, 393, 398, 0, 345, 475, 219,
	220, 563, 0, 556, 0, 0, 522, 524, 418, 30,
	56, 0, 692, 0, 29, 960, 1007, 456, 0, 453,
	0, 447, 449, 70, 0, 699, -2, 738, 1202, 1202,
	0, 1202, 1202, 1202, 1202, 0, 0, 1202, 1202, 1202,
	1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
	1202, 0, 793, 820, -2, 832, 834, 0, 0, 837,
	838, 0, 0, 0, 0, 874, 844, 0, 0, 0,
	1118, 1119, 0, 851, 0, 810, 819, 0, 819, 0,
	0, 818, 0, 0, 0, 278, 283, 0, 286, 287,
	0, 665, 1181, 0, 689, 62, 480, 394, 216, 0,
	573, 0, 577, 0, 53, 58, 63, 64, 0, 0,
	0, 0, 0, 445, 0, 455, 61, 0, 0, 688,
	0, 686, 740, 0, 0, 1202, 1202, 0, 0, 0,
	0, 1202, 1202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 833, 835,
	836, 839, 840, 841, 879, 880, 881, 842, 876, 877,
	878, 843, 0, 0, 0, 1116, 1117, 872, 0, 0,
	0, 0, 0, 0, 0, 804, 618, 0, 620, 284,
	658, 0, 486, 0, 690, 475, 564, 0, 0, 0,
	0, 40, 0, 60, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 611, 734, 739, 741, 742, 0, 0,
	745, 746, 747, 748, 0, 0, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 776, 777, 778, 779,
	780, 781, 761, 762, 763, 764, 765, 766, 773, 0,
	0, 770, 0, 0, 0, 1021, 867, 0, 0, 811,
	813, 814, 815, 816, 817, 812, 0, 0, 0, 0,
	803, 805, 848, 0, 619, 657, 666, 667, 486, 392,
	574, 575, 578, 579, 31, 0, 0, 57, 0, 66,
	0, 68, 69, 0, 0, 458, 448, 723, 0, 0,
	729, 0, 735, 743, 744, 749, 750, 767, 0, 0,
	769, 0, 0, 875, 0, 847, 855, 868, 0, 0,
	658, 658, 658, 658, 0, 849, 659, 1202, 0, 0,
	663, 664, 668, 696, 0, 41, 0, 43, 45, 46,
	821, 54, 55, 59, 67, 693, 0, 457, 0, 701,
	0, 0, 0, 0, 0, 732, 0, 774, 775, 768,
	771, 772, 845, 854, 856, 857, 0, 869, 870, 871,
	873, 798, 799, 800, 801, 0, 0, 661, 0, 32,
	33, 0, 42, 0, 0, 0, 459, 703, 0, 724,
	0, 0, 0, 0, 0, 0, 0, 846, 858, 0,
	859, 0, 0, 0, 802, 660, 662, 0, 0, 44,
	822, 0, 700, 0, 734, 725, 0, 727, 0, 0,
	0, 0, 860, 862, 863, 0, 0, 861, 34, 35,
	36, 0, 0, 0, 705, 0, 721, 726, 728, 0,
	733, 731, 864, 866, 865, 823, 694, 0, 704, 0,
	717, 702, 0, 730, 0, 706, -2, 0, 722, 0,
	707, -2, 0, 715, 0, 0, 0, 708, 716, 0,
	711, 0, 0, 0, 695, 710, 0, -2, 718, 0,
	0, 712, -2, 0, 720, 719,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 508,
	104, 103, 105, 3, 509, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 510, 115, 511, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:569
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:575
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:606
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:610
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:616
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:628
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:643
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:649
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:653
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:659
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:666
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:675
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:679
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:683
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:696
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:702
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:711
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:722
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:726
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:732
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:736
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:742
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:746
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:752
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:776
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:795
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:799
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:803
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:812
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:820
		{
			yyVAL.str = ""
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:824
		{
			yyVAL.str = yyDollar[3].str
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:829
		{
			yyVAL.str = "\n"
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:833
		{
			yyVAL.str = yyDollar[3].str
		}
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:842
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:866
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:870
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:876
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:882
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:900
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:917
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:940
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:944
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:953
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:957
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:976
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1000
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1004
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1014
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1027
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1040
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1052
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1059
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1067
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1076
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1080
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1084
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1088
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1092
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1096
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1103
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1107
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1113
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1120
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1129
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1133
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1139
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1143
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1147
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1151
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1155
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1159
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1163
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1167
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1171
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1175
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1179
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1183
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1199
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1203
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1207
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1215
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1219
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1223
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1227
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1231
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1235
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1239
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1243
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1247
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1251
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1323
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1327
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1331
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1335
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1347
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1354
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1361
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1370
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1400
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1414
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1420
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1424
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1431
		{
			yyVAL.str = yyDollar[3].str
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1437
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1441
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1447
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1455
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1464
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1480
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1503
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1526
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1533
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1555
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1571
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1575
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1579
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1585
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1589
		{
			yyVAL.str = yyDollar[1].str
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1596
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1602
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1606
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1623
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1628
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1632
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1636
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1666
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1674
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1678
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1683
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1694
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1707
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1714
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1721
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1731
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1738
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1749
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1764
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1770
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1782
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1823
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1839
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1851
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1907
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1911
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1917
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1923
		{
			yyVAL.str = yyDollar[1].str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1928
		{
			yyVAL.str = "true"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1929
		{
			yyVAL.str = "false"
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1930
		{
			yyVAL.str = yyDollar[1].str
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1935
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1946
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1973
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1978
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1982
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1991
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2035
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2039
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2055
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2063
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2067
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2073
		{
			yyVAL.item = nil
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2078
		{
			yyVAL.item = nil
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2115
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2126
		{
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2130
		{
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2135
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2148
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2164
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2172
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2190
		{
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2220
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2224
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2234
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2262
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2284
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2313
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2318
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2322
		{
			yyVAL.str = yyDollar[2].str
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2328
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2366
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2370
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2379
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2383
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2387
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2393
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2397
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2425
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2434
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2438
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2550
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2554
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2560
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2565
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2572
		{
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2574
		{
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2577
		{
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2586
		{
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2590
		{
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2605
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2612
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2618
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2626
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2633
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2640
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2663
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2686
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2690
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2705
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2709
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2715
		{
			yyVAL.str = yyDollar[1].str
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2719
		{
			yyVAL.str = yyDollar[3].str
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2725
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2729
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2735
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2740
		{
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2751
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2755
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2771
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2781
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2787
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2791
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2800
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2813
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2820
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2827
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2845
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2870
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2877
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2881
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2894
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2898
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2903
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2907
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2914
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2919
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2958
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2974
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2978
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2996
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3005
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3011
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3015
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3019
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3028
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3034
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3040
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3044
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3055
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3059
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3063
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3068
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3072
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3076
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3092
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3106
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3154
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3237
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3266
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3274
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3296
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3305
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3311
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3315
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3321
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3325
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3329
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3333
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3338
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3346
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3360
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3378
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3384
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3402
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3411
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3421
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3425
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3435
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3439
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3443
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3447
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3463
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3467
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3473
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3483
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3489
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3495
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3499
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3503
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3513
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3529
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3533
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3539
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3553
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3566
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3578
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3596
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3617
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3638
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3659
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3677
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3698
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3719
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3740
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3753
		{
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3754
		{
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3770
		{
			yyVAL.str = ""
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3774
		{
			yyVAL.str = yyDollar[1].str
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3778
		{
			yyVAL.str = yyDollar[2].str
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3787
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3791
		{
			yyVAL.str = yyDollar[1].str
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3795
		{
			yyVAL.str = yyDollar[2].str
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3799
		{
			yyVAL.str = yyDollar[1].str
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3803
		{
			yyVAL.str = yyDollar[2].str
		}
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3837
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3858
		{
		}
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3863
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3875
		{
			yyVAL.str = yyDollar[1].str
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3881
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3891
		{
			yyVAL.str = yyDollar[1].str
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3897
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3904
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3910
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3918
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3924
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3931
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3939
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3945
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3954
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3966
		{
			yyVAL.str = yyDollar[1].str
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3971
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3977
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3985
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4091
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4095
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4101
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4111
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4115
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4121
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4131
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4135
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4139
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4148
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4154
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4167
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4180
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4189
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4193
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4199
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4216
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4220
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4224
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4228
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4234
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4257
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4283
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4291
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4295
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4301
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4305
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4311
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4316
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4321
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4325
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4329
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4333
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4337
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4343
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4370
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4376
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4380
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4386
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4390
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4394
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4399
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4403
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4409
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4420
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4431
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4446
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4458
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4470
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4483
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4513
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4522
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4549
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4555
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4559
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4565
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4584
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4588
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4594
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4598
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4604
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4611
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4620
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4624
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4633
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4638
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4642
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4647
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4651
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4661
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4665
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4676
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4684
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4692
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4700
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4711
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4721
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4731
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4735
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4740
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4744
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4753
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4759
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4763
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4767
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4773
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4777
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4781
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4785
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4789
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4793
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4797
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4801
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4805
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4809
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4813
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4817
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4821
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4825
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4829
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4833
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4853
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4861
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4865
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4869
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4877
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4881
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4885
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4892
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4896
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4902
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4907
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4911
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4915
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4921
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4925
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4929
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4933
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4937
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4941
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4955
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4959
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4968
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4973
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4979
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4986
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4990
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5000
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5006
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5016
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5022
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5031
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5040
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5063
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5072
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5082
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5090
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5096
		{
			yyVAL.str = ""
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5100
		{
			yyVAL.str = yyDollar[1].str
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5110
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5116
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5122
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5136
		{
			yyVAL.str = ""
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5149
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5153
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5157
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5168
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5185
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5191
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5195
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5205
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5209
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5213
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5217
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5229
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5241
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5253
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5268
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5277
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5281
		{
			yyVAL.str = yyDollar[1].str
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5287
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5291
		{
			yyVAL.str = yyDollar[2].str
		}
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5297
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5309
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5316
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5323
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5330
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5337
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5346
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5352
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5362
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5390
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5394
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5403
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5408
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5412
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5428
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5438
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5442
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5446
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5450
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5454
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5458
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5462
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5466
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5470
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5474
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5482
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5488
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5492
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5496
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5504
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5508
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5524
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5528
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5532
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5537
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5545
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5553
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5562
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5566
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5570
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5574
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5578
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5583
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5587
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5592
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5596
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5602
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5606
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5612
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5622
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5639
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5656
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5669
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5682
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5694
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5708
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5738
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5755
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5770
		{
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5776
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5785
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5793
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5801
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5810
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5819
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5837
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5846
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5855
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5864
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5873
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5882
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5891
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5900
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5916
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5924
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5932
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5940
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5948
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5957
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5965
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5974
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5983
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5991
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5999
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6008
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6017
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6028
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6085
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6097
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6109
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6119
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6127
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6134
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6141
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6153
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6161
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6172
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6181
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6190
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6198
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6208
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6216
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6224
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6238
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6248
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6267
		{
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6269
		{
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6310
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6320
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6324
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6328
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6334
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6343
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6349
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6353
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6360
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6364
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6368
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6380
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6384
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6394
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6398
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6402
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6406
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6410
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6430
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6438
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6446
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6450
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6458
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6466
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6476
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6482
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6486
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6493
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6497
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6501
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6507
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6511
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6515
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6519
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6523
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6527
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6531
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6545
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6549
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6555
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6559
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6572
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6577
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6581
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6585
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6589
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6607
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6621
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6627
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6638
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6643
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6661
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6673
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6711
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6724
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6763
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6776
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6789
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6802
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6815
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6830
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6853
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6890
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6938
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6955
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6967
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6982
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7002
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7051
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7064
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7077
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7090
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7102
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7114
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7138
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7150
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7174
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7198
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7211
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7239
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7247
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7256
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7266
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7289
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7294
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7300
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7307
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7311
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7316
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7320
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7326
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7332
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7346
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7355
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7369
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7378
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7382
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7386
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7392
		{
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7404
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7408
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

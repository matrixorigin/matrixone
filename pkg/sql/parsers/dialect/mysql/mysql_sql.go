// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PUBLICATION = 57624
const SUBSCRIPTIONS = 57625
const PUBLICATIONS = 57626
const PROPERTIES = 57627
const PARSER = 57628
const VISIBLE = 57629
const INVISIBLE = 57630
const BTREE = 57631
const HASH = 57632
const RTREE = 57633
const BSI = 57634
const ZONEMAP = 57635
const LEADING = 57636
const BOTH = 57637
const TRAILING = 57638
const UNKNOWN = 57639
const EXPIRE = 57640
const ACCOUNT = 57641
const ACCOUNTS = 57642
const UNLOCK = 57643
const DAY = 57644
const NEVER = 57645
const PUMP = 57646
const MYSQL_COMPATBILITY_MODE = 57647
const SECOND = 57648
const ASCII = 57649
const COALESCE = 57650
const COLLATION = 57651
const HOUR = 57652
const MICROSECOND = 57653
const MINUTE = 57654
const MONTH = 57655
const QUARTER = 57656
const REPEAT = 57657
const REVERSE = 57658
const ROW_COUNT = 57659
const WEEK = 57660
const REVOKE = 57661
const FUNCTION = 57662
const PRIVILEGES = 57663
const TABLESPACE = 57664
const EXECUTE = 57665
const SUPER = 57666
const GRANT = 57667
const OPTION = 57668
const REFERENCES = 57669
const REPLICATION = 57670
const SLAVE = 57671
const CLIENT = 57672
const USAGE = 57673
const RELOAD = 57674
const FILE = 57675
const TEMPORARY = 57676
const ROUTINE = 57677
const EVENT = 57678
const SHUTDOWN = 57679
const NULLX = 57680
const AUTO_INCREMENT = 57681
const APPROXNUM = 57682
const SIGNED = 57683
const UNSIGNED = 57684
const ZEROFILL = 57685
const ENGINES = 57686
const LOW_CARDINALITY = 57687
const ADMIN_NAME = 57688
const RANDOM = 57689
const SUSPEND = 57690
const ATTRIBUTE = 57691
const HISTORY = 57692
const REUSE = 57693
const CURRENT = 57694
const OPTIONAL = 57695
const FAILED_LOGIN_ATTEMPTS = 57696
const PASSWORD_LOCK_TIME = 57697
const UNBOUNDED = 57698
const SECONDARY = 57699
const USER = 57700
const IDENTIFIED = 57701
const CIPHER = 57702
const ISSUER = 57703
const X509 = 57704
const SUBJECT = 57705
const SAN = 57706
const REQUIRE = 57707
const SSL = 57708
const NONE = 57709
const PASSWORD = 57710
const MAX_QUERIES_PER_HOUR = 57711
const MAX_UPDATES_PER_HOUR = 57712
const MAX_CONNECTIONS_PER_HOUR = 57713
const MAX_USER_CONNECTIONS = 57714
const FORMAT = 57715
const VERBOSE = 57716
const CONNECTION = 57717
const TRIGGERS = 57718
const PROFILES = 57719
const LOAD = 57720
const INFILE = 57721
const TERMINATED = 57722
const OPTIONALLY = 57723
const ENCLOSED = 57724
const ESCAPED = 57725
const STARTING = 57726
const LINES = 57727
const ROWS = 57728
const IMPORT = 57729
const MODUMP = 57730
const OVER = 57731
const PRECEDING = 57732
const FOLLOWING = 57733
const GROUPS = 57734
const DATABASES = 57735
const TABLES = 57736
const SEQUENCES = 57737
const EXTENDED = 57738
const FULL = 57739
const PROCESSLIST = 57740
const FIELDS = 57741
const COLUMNS = 57742
const OPEN = 57743
const ERRORS = 57744
const WARNINGS = 57745
const INDEXES = 57746
const SCHEMAS = 57747
const NODE = 57748
const LOCKS = 57749
const TABLE_NUMBER = 57750
const COLUMN_NUMBER = 57751
const TABLE_VALUES = 57752
const NAMES = 57753
const GLOBAL = 57754
const SESSION = 57755
const ISOLATION = 57756
const LEVEL = 57757
const READ = 57758
const WRITE = 57759
const ONLY = 57760
const REPEATABLE = 57761
const COMMITTED = 57762
const UNCOMMITTED = 57763
const SERIALIZABLE = 57764
const LOCAL = 57765
const EVENTS = 57766
const PLUGINS = 57767
const CURRENT_TIMESTAMP = 57768
const DATABASE = 57769
const CURRENT_TIME = 57770
const LOCALTIME = 57771
const LOCALTIMESTAMP = 57772
const UTC_DATE = 57773
const UTC_TIME = 57774
const UTC_TIMESTAMP = 57775
const REPLACE = 57776
const CONVERT = 57777
const SEPARATOR = 57778
const TIMESTAMPDIFF = 57779
const CURRENT_DATE = 57780
const CURRENT_USER = 57781
const CURRENT_ROLE = 57782
const SECOND_MICROSECOND = 57783
const MINUTE_MICROSECOND = 57784
const MINUTE_SECOND = 57785
const HOUR_MICROSECOND = 57786
const HOUR_SECOND = 57787
const HOUR_MINUTE = 57788
const DAY_MICROSECOND = 57789
const DAY_SECOND = 57790
const DAY_MINUTE = 57791
const DAY_HOUR = 57792
const YEAR_MONTH = 57793
const SQL_TSI_HOUR = 57794
const SQL_TSI_DAY = 57795
const SQL_TSI_WEEK = 57796
const SQL_TSI_MONTH = 57797
const SQL_TSI_QUARTER = 57798
const SQL_TSI_YEAR = 57799
const SQL_TSI_SECOND = 57800
const SQL_TSI_MINUTE = 57801
const RECURSIVE = 57802
const CONFIG = 57803
const DRAINER = 57804
const MATCH = 57805
const AGAINST = 57806
const BOOLEAN = 57807
const LANGUAGE = 57808
const WITH = 57809
const QUERY = 57810
const EXPANSION = 57811
const ADDDATE = 57812
const BIT_AND = 57813
const BIT_OR = 57814
const BIT_XOR = 57815
const CAST = 57816
const COUNT = 57817
const APPROX_COUNT_DISTINCT = 57818
const APPROX_PERCENTILE = 57819
const CURDATE = 57820
const CURTIME = 57821
const DATE_ADD = 57822
const DATE_SUB = 57823
const EXTRACT = 57824
const GROUP_CONCAT = 57825
const MAX = 57826
const MID = 57827
const MIN = 57828
const NOW = 57829
const POSITION = 57830
const SESSION_USER = 57831
const STD = 57832
const STDDEV = 57833
const MEDIAN = 57834
const STDDEV_POP = 57835
const STDDEV_SAMP = 57836
const SUBDATE = 57837
const SUBSTR = 57838
const SUBSTRING = 57839
const SUM = 57840
const SYSDATE = 57841
const SYSTEM_USER = 57842
const TRANSLATE = 57843
const TRIM = 57844
const VARIANCE = 57845
const VAR_POP = 57846
const VAR_SAMP = 57847
const AVG = 57848
const NEXTVAL = 57849
const SETVAL = 57850
const CURRVAL = 57851
const LASTVAL = 57852
const ARROW = 57853
const ROW = 57854
const OUTFILE = 57855
const HEADER = 57856
const MAX_FILE_SIZE = 57857
const FORCE_QUOTE = 57858
const PARALLEL = 57859
const UNUSED = 57860
const BINDINGS = 57861
const DO = 57862
const DECLARE = 57863
const KILL = 57864
const QUERY_RESULT = 57865

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8927

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 100,
	21, 571,
	-2, 552,
	-1, 109,
	215, 774,
	-2, 845,
	-1, 130,
	42, 396,
	215, 396,
	242, 403,
	243, 403,
	421, 396,
	-2, 429,
	-1, 456,
	291, 91,
	396, 91,
	-2, 1412,
	-1, 518,
	67, 1218,
	-2, 1552,
	-1, 519,
	67, 1236,
	-2, 1523,
	-1, 523,
	67, 1237,
	-2, 1551,
	-1, 545,
	67, 1150,
	-2, 1611,
	-1, 546,
	67, 1151,
	-2, 1610,
	-1, 547,
	67, 1152,
	-2, 1600,
	-1, 548,
	67, 1575,
	-2, 1595,
	-1, 549,
	67, 1576,
	-2, 1596,
	-1, 550,
	67, 1577,
	-2, 1602,
	-1, 551,
	67, 1578,
	-2, 1585,
	-1, 552,
	67, 1579,
	-2, 1593,
	-1, 553,
	67, 1580,
	-2, 1603,
	-1, 554,
	67, 1581,
	-2, 1604,
	-1, 555,
	67, 1582,
	-2, 1609,
	-1, 556,
	67, 1583,
	-2, 1614,
	-1, 557,
	67, 1584,
	-2, 1615,
	-1, 559,
	67, 1215,
	-2, 1404,
	-1, 566,
	67, 1224,
	-2, 1430,
	-1, 570,
	67, 1228,
	-2, 1469,
	-1, 571,
	67, 1229,
	-2, 1547,
	-1, 579,
	67, 1239,
	-2, 1532,
	-1, 581,
	67, 1241,
	-2, 1542,
	-1, 582,
	67, 1242,
	-2, 1566,
	-1, 593,
	67, 1128,
	-2, 1605,
	-1, 594,
	67, 1129,
	-2, 1606,
	-1, 595,
	67, 1130,
	-2, 1607,
	-1, 602,
	21, 572,
	-2, 535,
	-1, 660,
	416, 429,
	417, 429,
	-2, 397,
	-1, 709,
	104, 1404,
	115, 1404,
	135, 1404,
	-2, 1379,
	-1, 747,
	21, 572,
	-2, 535,
	-1, 846,
	21, 571,
	-2, 1036,
	-1, 1186,
	67, 1286,
	-2, 1549,
	-1, 1187,
	67, 1287,
	-2, 1550,
	-1, 1399,
	1, 306,
	68, 306,
	541, 306,
	-2, 809,
	-1, 1639,
	68, 1365,
	136, 1365,
	-2, 1534,
	-1, 1640,
	68, 1365,
	136, 1365,
	-2, 1533,
	-1, 1641,
	68, 1343,
	136, 1343,
	-2, 1520,
	-1, 1642,
	68, 1344,
	136, 1344,
	-2, 1525,
	-1, 1643,
	68, 1345,
	136, 1345,
	-2, 1457,
	-1, 1644,
	68, 1346,
	136, 1346,
	-2, 1451,
	-1, 1645,
	68, 1347,
	136, 1347,
	-2, 1395,
	-1, 1646,
	68, 1348,
	136, 1348,
	-2, 1522,
	-1, 1647,
	68, 1349,
	136, 1349,
	-2, 1455,
	-1, 1648,
	68, 1350,
	136, 1350,
	-2, 1450,
	-1, 1649,
	68, 1351,
	136, 1351,
	-2, 1443,
	-1, 1651,
	68, 1354,
	136, 1354,
	-2, 1566,
	-1, 1652,
	68, 1334,
	136, 1334,
	-2, 1552,
	-1, 1653,
	68, 1363,
	136, 1363,
	-2, 1523,
	-1, 1654,
	68, 1363,
	136, 1363,
	-2, 1551,
	-1, 1655,
	68, 1363,
	136, 1363,
	-2, 1413,
	-1, 1656,
	68, 1361,
	136, 1361,
	-2, 1542,
	-1, 1657,
	68, 1358,
	136, 1358,
	-2, 1435,
	-1, 1658,
	67, 1316,
	68, 1316,
	136, 1316,
	358, 1316,
	359, 1316,
	360, 1316,
	-2, 1394,
	-1, 1659,
	67, 1317,
	68, 1317,
	136, 1317,
	358, 1317,
	359, 1317,
	360, 1317,
	-2, 1396,
	-1, 1660,
	67, 1320,
	68, 1320,
	136, 1320,
	358, 1320,
	359, 1320,
	360, 1320,
	-2, 1524,
	-1, 1661,
	67, 1322,
	68, 1322,
	136, 1322,
	358, 1322,
	359, 1322,
	360, 1322,
	-2, 1507,
	-1, 1662,
	67, 1324,
	68, 1324,
	136, 1324,
	358, 1324,
	359, 1324,
	360, 1324,
	-2, 1456,
	-1, 1663,
	67, 1326,
	68, 1326,
	136, 1326,
	358, 1326,
	359, 1326,
	360, 1326,
	-2, 1439,
	-1, 1664,
	67, 1327,
	68, 1327,
	136, 1327,
	358, 1327,
	359, 1327,
	360, 1327,
	-2, 1440,
	-1, 1665,
	67, 1329,
	68, 1329,
	136, 1329,
	358, 1329,
	359, 1329,
	360, 1329,
	-2, 1393,
	-1, 1666,
	68, 1368,
	136, 1368,
	358, 1368,
	359, 1368,
	360, 1368,
	-2, 1418,
	-1, 1667,
	68, 1368,
	136, 1368,
	358, 1368,
	359, 1368,
	360, 1368,
	-2, 1431,
	-1, 1668,
	68, 1371,
	136, 1371,
	358, 1371,
	359, 1371,
	360, 1371,
	-2, 1414,
	-1, 1669,
	68, 1368,
	136, 1368,
	358, 1368,
	359, 1368,
	360, 1368,
	-2, 1492,
	-1, 1682,
	1, 802,
	68, 802,
	541, 802,
	-2, 809,
	-1, 1789,
	21, 571,
	-2, 663,
	-1, 1953,
	1, 803,
	68, 803,
	541, 803,
	-2, 809,
	-1, 1965,
	65, 479,
	136, 479,
	-2, 940,
	-1, 1982,
	276, 1004,
	-2, 983,
	-1, 2228,
	276, 1004,
	-2, 984,
	-1, 2354,
	88, 809,
	131, 809,
	168, 809,
	171, 809,
	-2, 888,
	-1, 2357,
	88, 809,
	131, 809,
	168, 809,
	171, 809,
	-2, 888,
	-1, 2367,
	65, 479,
	136, 479,
	-2, 941,
	-1, 2456,
	88, 809,
	131, 809,
	168, 809,
	171, 809,
	-2, 889,
	-1, 2747,
	68, 860,
	136, 860,
	-2, 809,
	-1, 2751,
	68, 860,
	136, 860,
	-2, 809,
	-1, 2765,
	68, 864,
	136, 864,
	-2, 809,
	-1, 2770,
	68, 865,
	136, 865,
	-2, 809,
}

const yyPrivate = 57344

const yyLast = 31842

var yyAct = [...]int{
	485, 1400, 2751, 2750, 2730, 2759, 1252, 465, 1167, 2640,
	467, 2688, 2572, 487, 2658, 2240, 2680, 2433, 2594, 2428,
	2595, 1629, 2450, 2487, 2306, 2579, 2583, 2563, 1018, 2449,
	2507, 2448, 2307, 2530, 877, 2431, 603, 1318, 2497, 1361,
	150, 150, 515, 1968, 2475, 2455, 150, 402, 409, 2423,
	1170, 409, 2205, 2048, 1163, 1363, 2047, 2337, 1073, 1462,
	2377, 2033, 2046, 2250, 1717, 2229, 2043, 1637, 2040, 1432,
	469, 1783, 1853, 2304, 1530, 1499, 2299, 420, 1722, 2069,
	2282, 2175, 2180, 2177, 414, 2249, 1691, 741, 708, 2203,
	1635, 464, 1475, 2126, 1852, 1507, 458, 1314, 598, 979,
	2087, 1526, 1508, 459, 1403, 1455, 1328, 1954, 1500, 1894,
	1936, 1525, 640, 2083, 714, 995, 1932, 1690, 1986, 1784,
	1026, 717, 30, 1820, 1251, 1718, 405, 7, 1435, 718,
	43, 1772, 406, 19, 3, 1166, 1348, 1336, 598, 403,
	8, 914, 1558, 404, 6, 1027, 997, 1161, 1527, 150,
	1309, 1319, 468, 1102, 1633, 1082, 466, 1459, 1371, 1675,
	457, 1736, 99, 1537, 1372, 407, 31, 1433, 1617, 1008,
	1216, 1200, 1152, 398, 758, 476, 43, 712, 1506, 959,
	1503, 1486, 1160, 1065, 700, 1791, 1347, 2456, 1388, 395,
	639, 1052, 1004, 600, 1221, 423, 422, 16, 9, 701,
	4, 1101, 143, 1222, 140, 2120, 408, 977, 1019, 655,
	637, 2120, 1855, 145, 146, 602, 1544, 1534, 2503, 666,
	2498, 2424, 2305, 1332, 2623, 872, 1502, 601, 878, 611,
	2538, 2441, 778, 144, 1840, 1848, 144, 929, 39, 132,
	110, 144, 1531, 2440, 2547, 418, 144, 2149, 391, 144,
	144, 1054, 144, 1119, 1679, 1542, 144, 412, 39, 132,
	110, 1112, 1035, 144, 1807, 1036, 812, 30, 1808, 1116,
	1443, 1444, 7, 2539, 419, 43, 1934, 1109, 19, 1821,
	739, 1473, 98, 2631, 676, 8, 2102, 1384, 2095, 6,
	1118, 1169, 144, 141, 39, 132, 110, 597, 1111, 98,
	2676, 810, 1055, 141, 715, 2516, 141, 141, 2674, 141,
	711, 31, 793, 141, 710, 794, 1024, 1025, 929, 1895,
	141, 588, 612, 587, 589, 590, 2568, 591, 592, 1933,
	681, 2624, 2625, 680, 2505, 1015, 1022, 2088, 1242, 917,
	1021, 1024, 1025, 796, 805, 2565, 2598, 2599, 1038, 141,
	815, 816, 817, 814, 2089, 1137, 2090, 937, 941, 943,
	945, 947, 948, 950, 2501, 954, 951, 952, 953, 2662,
	2663, 932, 933, 934, 935, 915, 916, 938, 2308, 918,
	604, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 930, 936, 1835, 786, 150, 751, 788, 1172, 752,
	940, 942, 944, 946, 949, 2508, 2509, 2510, 2511, 2578,
	761, 409, 409, 1257, 150, 791, 685, 2308, 750, 2317,
	917, 2565, 1456, 1153, 907, 789, 1157, 2338, 746, 748,
	2515, 1538, 2630, 682, 1448, 1148, 2517, 931, 937, 941,
	943, 945, 947, 948, 950, 761, 954, 951, 952, 953,
	1156, 2345, 932, 933, 934, 935, 915, 916, 938, 1927,
	918, 2191, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 930, 936, 792, 745, 1763, 848, 2522, 1674,
	1452, 940, 942, 944, 946, 949, 2597, 109, 1543, 142,
	1238, 1939, 684, 1037, 1235, 773, 2446, 782, 1237, 1234,
	1236, 1240, 1241, 1171, 1047, 2189, 1239, 747, 1013, 130,
	2633, 2634, 1471, 1472, 1614, 2181, 808, 809, 931, 453,
	784, 713, 455, 2247, 2115, 2113, 1158, 454, 807, 43,
	43, 798, 787, 790, 799, 1303, 1302, 1845, 803, 804,
	781, 2037, 1765, 795, 2185, 2535, 2525, 1155, 2443, 2202,
	2196, 1768, 1178, 1181, 1182, 2669, 783, 2186, 2187, 2678,
	2209, 683, 801, 1179, 715, 1868, 1869, 2587, 1547, 1549,
	1550, 1961, 2188, 754, 755, 2476, 2477, 2478, 2480, 2479,
	1532, 411, 1532, 1948, 1949, 1950, 1951, 410, 2397, 2584,
	1532, 763, 762, 2744, 2760, 2698, 2673, 2638, 2639, 460,
	2642, 2642, 2705, 1003, 2489, 2554, 2390, 2709, 1746, 1745,
	2264, 770, 1945, 2321, 976, 978, 1061, 766, 767, 2119,
	2385, 2403, 2404, 1060, 771, 785, 763, 762, 850, 851,
	852, 853, 1040, 715, 797, 2537, 956, 756, 2183, 640,
	1245, 1246, 1247, 1248, 1249, 1250, 1243, 1244, 1002, 1024,
	1025, 1017, 1016, 854, 1154, 2683, 2381, 1024, 1025, 1001,
	2761, 2755, 2731, 2531, 908, 2329, 2626, 2627, 742, 2359,
	802, 1559, 980, 1023, 418, 2071, 2073, 40, 2562, 1053,
	778, 1841, 150, 1020, 1049, 985, 1545, 601, 1533, 939,
	2632, 1798, 772, 800, 1535, 2442, 2536, 40, 1726, 1849,
	2767, 2118, 989, 598, 598, 598, 988, 111, 1077, 1077,
	111, 150, 987, 2018, 1014, 111, 981, 982, 983, 984,
	111, 986, 417, 111, 111, 990, 111, 413, 409, 978,
	111, 1105, 1105, 2171, 1457, 1546, 992, 111, 634, 635,
	636, 1084, 2075, 1440, 1795, 1114, 2128, 2127, 724, 719,
	723, 725, 1058, 888, 889, 2192, 732, 737, 738, 1797,
	1796, 777, 1075, 1075, 1446, 1135, 111, 1079, 1938, 2523,
	939, 2684, 713, 1056, 1057, 1120, 2679, 1447, 1077, 722,
	1077, 751, 1180, 149, 149, 2754, 2488, 1449, 1149, 393,
	1794, 1445, 687, 1005, 1009, 1009, 688, 1011, 1548, 2462,
	1364, 2773, 691, 1168, 2182, 1029, 1030, 963, 1032, 1033,
	1034, 1150, 961, 1781, 1005, 2116, 1005, 1723, 1726, 1010,
	2710, 1942, 1943, 1727, 2184, 1364, 2447, 727, 2386, 2387,
	1872, 602, 2072, 1451, 729, 1941, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1048, 994,
	690, 720, 1211, 1212, 693, 692, 954, 951, 952, 953,
	1220, 1039, 1877, 1041, 1876, 1875, 1873, 1028, 2766, 813,
	1031, 2214, 728, 1270, 1260, 1261, 1262, 1730, 605, 677,
	2383, 1165, 2772, 776, 2382, 1677, 43, 1276, 1277, 1071,
	1072, 1059, 743, 1279, 813, 43, 2681, 2682, 1143, 1627,
	1284, 1285, 1068, 1069, 1070, 1140, 1966, 1110, 598, 1139,
	721, 1117, 1183, 1162, 2279, 2275, 1085, 1130, 1131, 1782,
	1782, 1146, 2200, 391, 734, 735, 736, 1121, 1874, 1489,
	1126, 1144, 1590, 1106, 1098, 1589, 1099, 2019, 2021, 2022,
	2023, 2020, 1967, 1727, 689, 2279, 677, 2763, 1720, 2745,
	813, 1304, 1721, 1724, 1151, 2740, 1325, 1122, 775, 679,
	778, 602, 678, 1142, 1141, 2734, 1138, 2733, 815, 816,
	817, 814, 1823, 1159, 1164, 1269, 2355, 1623, 1840, 726,
	150, 1676, 1346, 1077, 1350, 1326, 1352, 1353, 1253, 1740,
	1256, 150, 2714, 1569, 640, 813, 1782, 1362, 1271, 1209,
	1210, 1077, 1729, 813, 1725, 1049, 1134, 1733, 1731, 1278,
	402, 1280, 1732, 1626, 1133, 2764, 1202, 1540, 1329, 815,
	816, 817, 814, 2741, 1929, 605, 679, 1967, 1383, 678,
	776, 1316, 1317, 1540, 2690, 1540, 1389, 1389, 1828, 1049,
	1049, 1006, 1049, 2652, 1345, 150, 2201, 1346, 1346, 1387,
	1487, 1077, 1430, 1442, 2605, 2600, 1878, 1879, 2556, 1255,
	1540, 818, 1351, 598, 1568, 1077, 1307, 1376, 1310, 1311,
	847, 815, 816, 817, 814, 778, 2555, 2552, 856, 1809,
	1531, 694, 1382, 1628, 1594, 1385, 1386, 1354, 1355, 1356,
	1522, 150, 1346, 1077, 1281, 1480, 150, 150, 1483, 861,
	2551, 1485, 2691, 1469, 1321, 1491, 1324, 1299, 993, 1426,
	1427, 2653, 1270, 1270, 1510, 1214, 2147, 2550, 1349, 1270,
	1270, 1062, 2527, 2527, 1517, 2344, 2557, 2549, 2728, 1373,
	2692, 1375, 2370, 2526, 2215, 2085, 1367, 1391, 749, 1453,
	1007, 1333, 957, 1380, 1695, 2527, 1969, 1005, 1362, 1370,
	2405, 1327, 1077, 1529, 1477, 1365, 1366, 769, 1377, 2266,
	1843, 744, 1842, 1378, 1379, 1834, 1458, 2066, 2527, 1009,
	1710, 1479, 828, 838, 839, 831, 832, 833, 834, 835,
	836, 837, 830, 1358, 1359, 2527, 1349, 1523, 1481, 1482,
	1918, 1585, 1511, 1381, 1369, 2527, 488, 497, 1393, 1374,
	1394, 2527, 489, 1392, 496, 490, 494, 493, 491, 492,
	1552, 1916, 1914, 1570, 1505, 1556, 1557, 1912, 1809, 1900,
	1521, 1505, 1856, 1838, 1832, 1390, 1830, 2267, 1162, 1466,
	1467, 1494, 1342, 1399, 632, 1782, 1825, 1429, 1431, 1694,
	1624, 1123, 955, 859, 764, 744, 1468, 1454, 830, 2219,
	2110, 998, 1463, 1464, 1465, 999, 498, 43, 1919, 1598,
	1597, 1588, 1259, 1258, 1474, 1579, 1578, 1577, 1539, 1127,
	2723, 2711, 1793, 2210, 715, 1478, 1863, 1064, 1006, 1917,
	1913, 715, 2588, 2463, 1066, 1913, 495, 813, 1495, 1595,
	813, 1695, 1826, 1737, 1831, 1067, 1602, 1344, 1514, 1512,
	1515, 1519, 1516, 1520, 1826, 1282, 1283, 1695, 1623, 1286,
	1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 2280, 2362, 1524, 2271, 2589, 2464, 813, 813, 813,
	1104, 1104, 2211, 813, 813, 813, 1540, 1128, 500, 100,
	744, 458, 751, 1670, 831, 832, 833, 834, 835, 836,
	837, 830, 2360, 1560, 1290, 150, 150, 150, 1063, 1692,
	1551, 2268, 1554, 1555, 1638, 2363, 715, 686, 2121, 1699,
	1049, 2038, 1208, 1829, 1800, 2212, 1553, 1007, 1703, 1217,
	1202, 753, 392, 817, 814, 100, 1564, 1205, 1207, 1204,
	2666, 1206, 1049, 814, 1217, 2361, 1565, 2393, 751, 2392,
	2091, 1735, 1996, 1044, 1995, 1046, 1990, 1050, 1051, 815,
	816, 817, 814, 1173, 1174, 1175, 1176, 1177, 1865, 1985,
	1716, 1887, 2708, 2374, 2749, 1045, 1701, 833, 834, 835,
	836, 837, 830, 2737, 1704, 1705, 2699, 2694, 1786, 1786,
	1442, 1786, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1713, 1274, 1100, 2643, 1083, 2444, 2613, 1218, 1219, 1671,
	1630, 1631, 1275, 1254, 2590, 2342, 2707, 1581, 2540, 1077,
	150, 1264, 821, 822, 823, 824, 825, 826, 827, 819,
	716, 2499, 1619, 453, 100, 751, 455, 2029, 1105, 2469,
	1442, 454, 1739, 1815, 2445, 1817, 2466, 815, 816, 817,
	814, 1632, 1707, 2041, 2343, 1708, 2465, 1638, 2364, 1790,
	1788, 1712, 1792, 1678, 2592, 815, 816, 817, 814, 1573,
	1580, 2027, 1836, 1805, 2582, 1529, 2028, 1706, 1700, 2435,
	2341, 2176, 1077, 1009, 1077, 2668, 1077, 815, 816, 817,
	814, 751, 1812, 815, 816, 817, 814, 815, 816, 817,
	814, 1819, 815, 816, 817, 814, 1711, 1709, 1330, 1814,
	2026, 2190, 1334, 1850, 1738, 1337, 1741, 1742, 1743, 1744,
	1077, 1881, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1888, 2166, 1846, 1766,
	2165, 1077, 2106, 2013, 2025, 815, 816, 817, 814, 2015,
	1890, 2012, 715, 815, 816, 817, 814, 829, 828, 838,
	839, 831, 832, 833, 834, 835, 836, 837, 830, 2011,
	2008, 1801, 1802, 1803, 1075, 1806, 1592, 2002, 1880, 1567,
	1999, 2140, 1892, 2024, 1998, 1867, 1622, 1621, 2014, 1811,
	1620, 1813, 1616, 1615, 1124, 1075, 974, 1847, 2429, 1889,
	2664, 2628, 2560, 1861, 838, 839, 831, 832, 833, 834,
	835, 836, 837, 830, 2524, 1330, 2500, 1162, 2434, 2454,
	2427, 1330, 1330, 1839, 2425, 1837, 2139, 1077, 2409, 1844,
	1946, 2571, 2407, 1920, 1346, 2034, 815, 816, 817, 814,
	1965, 815, 816, 817, 814, 2376, 1971, 1857, 1858, 815,
	816, 817, 814, 2402, 2340, 2339, 1930, 2336, 1896, 2326,
	1871, 1980, 2320, 1901, 1854, 2274, 1860, 2272, 2323, 2262,
	1984, 2261, 2170, 1343, 2164, 2117, 815, 816, 817, 814,
	1992, 1993, 1994, 2078, 1357, 2016, 1997, 2009, 100, 100,
	716, 815, 816, 817, 814, 2005, 1956, 2004, 2003, 1921,
	1786, 1625, 1316, 1317, 2143, 1618, 1962, 1496, 1974, 2542,
	2030, 1339, 1976, 544, 543, 2357, 1924, 1125, 887, 1346,
	751, 1442, 1442, 1442, 1442, 883, 1972, 815, 816, 817,
	814, 882, 751, 1442, 1982, 860, 1786, 1955, 1395, 740,
	2356, 1311, 2049, 144, 2354, 2331, 132, 110, 2330, 1077,
	1987, 2325, 1987, 2312, 2049, 2298, 2297, 1964, 2220, 846,
	150, 150, 1349, 1944, 1562, 30, 2145, 1566, 2138, 1321,
	7, 1324, 1988, 43, 2130, 2125, 19, 1270, 1970, 1270,
	1979, 2082, 2101, 8, 1476, 2105, 1935, 6, 2062, 1476,
	1476, 1077, 1989, 1983, 2112, 1928, 1915, 1973, 2142, 1975,
	141, 2396, 1911, 1910, 1977, 1978, 1603, 1576, 1593, 31,
	1591, 1587, 1586, 1584, 1575, 1583, 1572, 1571, 1273, 2010,
	1272, 815, 816, 817, 814, 1263, 1089, 2039, 144, 2035,
	1087, 2762, 2722, 1596, 1329, 2716, 1599, 1600, 1601, 2100,
	2706, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 2064,
	1612, 2000, 2001, 2098, 602, 2065, 2079, 2006, 2007, 2104,
	2076, 2063, 2061, 2133, 2703, 2135, 2701, 2612, 2074, 2109,
	2558, 879, 2114, 1306, 2099, 2036, 2485, 2473, 2470, 2097,
	751, 2094, 2092, 2086, 2417, 141, 2179, 2415, 2050, 2051,
	2052, 2053, 2108, 964, 2400, 2399, 2194, 2398, 150, 2395,
	2122, 2123, 1638, 2389, 2349, 2151, 1315, 1308, 751, 751,
	751, 996, 2031, 2129, 1696, 1991, 1959, 1442, 1692, 2141,
	2218, 1958, 2136, 2137, 2134, 1957, 2222, 1320, 1323, 1312,
	1716, 1716, 1716, 1824, 880, 1799, 2251, 2253, 1761, 2251,
	2251, 2096, 815, 816, 817, 814, 2258, 1693, 2103, 1203,
	141, 1077, 1077, 2150, 1484, 1341, 1313, 2152, 2153, 2154,
	2155, 628, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2172, 1147, 2167, 2131, 2132, 1113, 958, 906, 905, 2221,
	904, 903, 150, 2223, 2224, 902, 2216, 2179, 901, 900,
	899, 898, 1698, 1909, 2199, 1346, 1346, 2248, 2206, 2207,
	2252, 2213, 1086, 1908, 2217, 1075, 1075, 392, 1955, 2259,
	2260, 2198, 897, 1330, 1330, 1330, 815, 816, 817, 814,
	606, 607, 608, 609, 2254, 2255, 815, 816, 817, 814,
	100, 1681, 1907, 605, 100, 896, 1881, 1104, 895, 894,
	2256, 893, 892, 891, 890, 100, 886, 2174, 1684, 1685,
	1686, 885, 884, 2278, 100, 815, 816, 817, 814, 881,
	876, 2276, 2277, 875, 873, 768, 1906, 2269, 2290, 150,
	2270, 1702, 2273, 872, 2265, 871, 2225, 870, 869, 2648,
	1905, 2289, 1088, 2287, 630, 1904, 625, 868, 615, 815,
	816, 817, 814, 2646, 1903, 627, 626, 2226, 2291, 867,
	2294, 2295, 2296, 815, 816, 817, 814, 866, 815, 816,
	817, 814, 865, 2303, 1902, 1864, 619, 815, 816, 817,
	814, 2313, 864, 1882, 1883, 1899, 863, 862, 2314, 858,
	857, 1885, 1886, 780, 2316, 2315, 2596, 815, 816, 817,
	814, 2283, 2284, 2319, 1891, 2286, 1947, 1346, 815, 816,
	817, 814, 2288, 2353, 1810, 1498, 1898, 624, 779, 2055,
	1897, 623, 2054, 1083, 1786, 1442, 2367, 613, 2748, 2058,
	2056, 618, 1833, 1330, 2059, 2057, 1922, 1923, 1337, 815,
	816, 817, 814, 815, 816, 817, 814, 1077, 616, 2334,
	2375, 2332, 1893, 2060, 2335, 1778, 1779, 1827, 150, 1774,
	1777, 1778, 1779, 1775, 1926, 1776, 1780, 2253, 1425, 614,
	2168, 2169, 2369, 2348, 2347, 815, 816, 817, 814, 2420,
	82, 2419, 2368, 631, 2173, 1884, 1346, 42, 2371, 41,
	751, 2372, 1300, 147, 2366, 2365, 1822, 1630, 1631, 2655,
	1672, 2378, 1764, 2248, 2373, 1851, 960, 617, 815, 816,
	817, 814, 2049, 1107, 774, 2418, 2577, 1981, 2422, 1931,
	1688, 1360, 751, 1340, 388, 2411, 1259, 1258, 1862, 1428,
	2401, 389, 1213, 390, 387, 972, 973, 1043, 2408, 2406,
	970, 971, 1042, 2412, 2049, 968, 969, 806, 2410, 2293,
	2413, 815, 816, 817, 814, 815, 816, 817, 814, 1518,
	751, 1077, 1077, 966, 967, 1000, 751, 962, 2717, 2636,
	1769, 2350, 2351, 2352, 2437, 2619, 629, 2617, 2430, 2585,
	2570, 2569, 2567, 2559, 2496, 2495, 2438, 2426, 1716, 2310,
	2309, 2301, 2439, 1774, 1777, 1778, 1779, 1775, 965, 1776,
	1780, 1441, 605, 2300, 2084, 1364, 751, 2650, 2649, 751,
	751, 751, 2107, 2460, 1683, 1075, 2378, 2459, 2457, 2452,
	1574, 2369, 2453, 765, 2649, 2650, 1362, 2391, 2493, 2311,
	1012, 2467, 2468, 50, 1330, 1470, 1081, 2474, 1, 1330,
	2482, 2483, 2484, 1963, 2471, 2436, 606, 607, 608, 609,
	2490, 2521, 2481, 1338, 610, 2518, 2067, 2068, 2292, 605,
	716, 2070, 1536, 1762, 1673, 2491, 2193, 716, 1735, 991,
	633, 1265, 1132, 731, 760, 2124, 100, 1129, 759, 757,
	1215, 502, 1501, 2032, 751, 2492, 2654, 2687, 2519, 2611,
	2657, 1145, 486, 2561, 2504, 2615, 751, 2144, 2528, 2506,
	2432, 1541, 811, 2093, 2533, 2532, 651, 538, 513, 874,
	1115, 1108, 2148, 733, 2541, 2548, 2544, 512, 2346, 1940,
	2534, 622, 730, 652, 1613, 2502, 1301, 2553, 1322, 1305,
	2461, 2358, 2208, 1960, 2758, 2747, 2729, 2715, 751, 2641,
	2743, 2672, 2704, 2514, 2512, 2513, 2697, 2566, 2564, 2637,
	424, 1450, 846, 596, 698, 2486, 1497, 425, 1697, 2629,
	2581, 2472, 620, 2080, 2081, 1680, 621, 2580, 2606, 2609,
	2586, 1953, 1952, 1184, 820, 1201, 2327, 2328, 855, 463,
	2591, 1563, 475, 1937, 2241, 2601, 2602, 2603, 2604, 2610,
	2077, 49, 48, 47, 46, 1490, 2622, 2618, 2614, 2620,
	2621, 2257, 2616, 154, 504, 153, 2608, 2659, 484, 483,
	482, 481, 1773, 1771, 2635, 1770, 1437, 144, 1436, 39,
	132, 110, 1488, 2661, 2647, 2645, 2644, 1728, 1396, 2593,
	2545, 2651, 2546, 2388, 2017, 2384, 2660, 137, 2380, 2263,
	2227, 2228, 2234, 1687, 125, 913, 909, 751, 138, 2665,
	911, 912, 910, 98, 1870, 1866, 1714, 1715, 2204, 1242,
	975, 2520, 2333, 1636, 2686, 1634, 2675, 2677, 83, 2670,
	2285, 2281, 2195, 1509, 141, 1335, 2689, 2685, 1925, 1438,
	2695, 1434, 751, 1767, 1682, 74, 73, 80, 122, 2693,
	2696, 37, 2700, 2458, 2702, 599, 32, 27, 5, 29,
	28, 2197, 2661, 2713, 1168, 14, 15, 13, 1136, 12,
	18, 26, 751, 25, 751, 2660, 2712, 24, 92, 91,
	2719, 23, 2721, 90, 2724, 89, 88, 87, 22, 11,
	86, 2689, 2725, 751, 1168, 85, 1168, 2732, 84, 2739,
	2738, 2736, 2742, 21, 133, 134, 79, 135, 136, 77,
	2322, 20, 78, 75, 76, 1168, 2746, 2324, 61, 2753,
	60, 59, 71, 2757, 70, 2756, 69, 68, 67, 66,
	650, 2765, 58, 57, 56, 55, 54, 2753, 2770, 2768,
	2769, 72, 2757, 65, 2771, 1476, 64, 63, 1789, 829,
	828, 838, 839, 831, 832, 833, 834, 835, 836, 837,
	830, 62, 2667, 642, 53, 52, 51, 108, 107, 106,
	105, 1238, 109, 131, 142, 1235, 81, 104, 103, 1237,
	1234, 1236, 1240, 1241, 2720, 102, 841, 1239, 845, 33,
	34, 35, 36, 118, 130, 124, 123, 117, 1441, 119,
	121, 45, 120, 842, 844, 840, 115, 843, 829, 828,
	838, 839, 831, 832, 833, 834, 835, 836, 837, 830,
	113, 116, 2718, 114, 112, 677, 44, 10, 17, 2,
	0, 0, 2318, 829, 828, 838, 839, 831, 832, 833,
	834, 835, 836, 837, 830, 929, 0, 0, 0, 0,
	1330, 0, 0, 2414, 0, 0, 2416, 0, 0, 126,
	127, 128, 0, 1859, 0, 0, 0, 0, 0, 0,
	2421, 829, 828, 838, 839, 831, 832, 833, 834, 835,
	836, 837, 830, 0, 0, 139, 829, 828, 838, 839,
	831, 832, 833, 834, 835, 836, 837, 830, 0, 0,
	0, 0, 0, 93, 0, 679, 1561, 129, 678, 94,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1245, 1246, 1247, 1248, 1249, 1250, 1243, 1244, 829,
	828, 838, 839, 831, 832, 833, 834, 835, 836, 837,
	830, 0, 664, 0, 0, 0, 0, 917, 0, 0,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2394, 95, 0, 0, 937, 941, 943, 945, 947,
	948, 950, 38, 954, 951, 952, 953, 669, 0, 932,
	933, 934, 935, 915, 916, 938, 0, 918, 0, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 930,
	936, 0, 100, 0, 0, 0, 0, 0, 940, 942,
	944, 946, 949, 0, 0, 0, 0, 0, 40, 0,
	0, 2529, 829, 828, 838, 839, 831, 832, 833, 834,
	835, 836, 837, 830, 0, 0, 0, 663, 662, 0,
	2543, 0, 0, 0, 0, 931, 0, 0, 0, 0,
	0, 111, 0, 0, 661, 0, 0, 0, 2146, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 672, 0, 0, 0, 1441,
	1441, 1441, 1441, 0, 2576, 0, 0, 0, 0, 0,
	0, 1441, 0, 0, 0, 0, 0, 0, 667, 0,
	0, 0, 0, 0, 96, 97, 101, 829, 828, 838,
	839, 831, 832, 833, 834, 835, 836, 837, 830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	668, 673, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 100, 0, 2576, 0, 0, 0, 658, 0, 656,
	660, 676, 0, 0, 0, 657, 654, 653, 0, 659,
	645, 646, 647, 648, 649, 0, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 671,
	0, 0, 325, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 0,
	232, 0, 0, 257, 0, 665, 0, 511, 0, 0,
	317, 271, 0, 0, 0, 0, 567, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 2576, 0, 470, 0,
	100, 501, 544, 543, 488, 497, 0, 0, 213, 152,
	489, 0, 496, 490, 494, 493, 491, 492, 0, 559,
	0, 0, 0, 0, 0, 0, 461, 474, 2573, 478,
	0, 0, 0, 0, 0, 1441, 0, 0, 0, 0,
	0, 2727, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 471, 472, 0, 0, 0, 939, 521, 0,
	473, 0, 0, 516, 498, 499, 0, 0, 204, 322,
	338, 214, 313, 351, 219, 320, 209, 286, 309, 0,
	0, 206, 336, 319, 268, 251, 252, 205, 0, 304,
	230, 243, 226, 284, 495, 519, 523, 225, 581, 517,
	346, 208, 0, 345, 283, 332, 337, 269, 263, 207,
	334, 267, 262, 255, 234, 582, 247, 295, 261, 296,
	248, 273, 272, 274, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 348, 0, 0,
	565, 0, 0, 0, 321, 0, 0, 256, 0, 0,
	0, 518, 0, 307, 289, 578, 462, 0, 305, 259,
	333, 297, 339, 323, 347, 301, 298, 199, 324, 228,
	270, 210, 212, 224, 231, 233, 235, 236, 279, 280,
	292, 312, 326, 327, 328, 227, 220, 306, 221, 245,
	222, 200, 314, 223, 202, 293, 331, 0, 241, 302,
	266, 203, 265, 294, 330, 329, 211, 355, 361, 362,
	367, 0, 368, 0, 0, 0, 376, 380, 381, 382,
	384, 385, 386, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 360, 239, 196, 197, 343,
	563, 285, 0, 0, 577, 558, 560, 561, 564, 568,
	569, 570, 571, 572, 574, 576, 580, 310, 0, 0,
	0, 0, 0, 250, 291, 0, 311, 0, 0, 0,
	0, 0, 0, 1441, 0, 0, 0, 0, 0, 318,
	341, 353, 371, 374, 0, 0, 0, 201, 373, 0,
	2574, 0, 0, 0, 2575, 0, 579, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 522, 275, 276, 277,
	278, 566, 0, 218, 372, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 238, 244, 383, 246, 217, 290,
	240, 350, 253, 0, 377, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 588, 562, 587, 589, 590, 586,
	591, 592, 573, 480, 0, 526, 584, 583, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 551, 531,
	532, 533, 479, 534, 529, 530, 552, 524, 548, 549,
	503, 527, 535, 547, 536, 550, 553, 554, 593, 594,
	542, 595, 539, 555, 546, 545, 537, 525, 556, 557,
	510, 505, 540, 541, 528, 506, 507, 508, 509, 325,
	520, 0, 356, 357, 358, 379, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 511, 0, 0, 317, 271, 0,
	0, 0, 0, 567, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 0, 0, 501, 544,
	543, 488, 497, 0, 0, 213, 152, 489, 0, 496,
	490, 494, 493, 491, 492, 0, 559, 0, 0, 0,
	0, 0, 0, 461, 474, 0, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	472, 0, 0, 0, 0, 521, 0, 473, 0, 0,
	516, 498, 499, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 495, 519, 523, 225, 581, 517, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 582, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 348, 0, 0, 565, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 518, 0,
	307, 289, 578, 462, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 367, 0, 368,
	0, 0, 0, 376, 380, 381, 382, 384, 385, 386,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 1267,
	1266, 1268, 360, 239, 196, 197, 343, 563, 285, 0,
	0, 577, 558, 560, 561, 564, 568, 569, 570, 571,
	572, 574, 576, 580, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 371,
	374, 0, 0, 0, 201, 373, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 522, 275, 276, 277, 278, 566, 0,
	218, 372, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 238, 244, 383, 246, 217, 290, 240, 350, 253,
	0, 377, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 588, 562, 587, 589, 590, 586, 591, 592, 573,
	480, 0, 526, 584, 583, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 0, 299, 237, 551, 531, 532, 533, 479,
	534, 529, 530, 552, 524, 548, 549, 503, 527, 535,
	547, 536, 550, 553, 554, 593, 594, 542, 595, 539,
	555, 546, 545, 537, 525, 556, 557, 510, 505, 540,
	541, 528, 506, 507, 508, 509, 325, 520, 0, 356,
	357, 358, 379, 342, 0, 229, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 0, 232, 0, 0, 257, 0, 0,
	0, 511, 0, 0, 317, 271, 0, 0, 0, 0,
	567, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 0, 0, 501, 544, 543, 488, 497,
	0, 0, 213, 152, 489, 0, 496, 490, 494, 493,
	491, 492, 0, 559, 0, 0, 0, 0, 0, 0,
	461, 474, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 472, 0, 0,
	0, 0, 521, 0, 473, 0, 0, 516, 498, 499,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 495, 519,
	523, 225, 581, 517, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 582,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 348, 0, 0, 565, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 518, 0, 307, 289, 578,
	462, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 224, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 367, 0, 368, 0, 0, 0,
	376, 380, 381, 382, 384, 385, 386, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 360,
	239, 196, 197, 343, 563, 285, 0, 0, 577, 558,
	560, 561, 564, 568, 569, 570, 571, 572, 574, 576,
	580, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 371, 374, 0, 0,
	0, 201, 373, 0, 2574, 0, 0, 0, 2575, 0,
	579, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	522, 275, 276, 277, 278, 566, 0, 218, 372, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 238, 244,
	383, 246, 217, 290, 240, 350, 253, 0, 377, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 588, 562,
	587, 589, 590, 586, 591, 592, 573, 480, 0, 526,
	584, 583, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 551, 531, 532, 533, 479, 534, 529, 530,
	552, 524, 548, 549, 503, 527, 535, 547, 536, 550,
	553, 554, 593, 594, 542, 595, 539, 555, 546, 545,
	537, 525, 556, 557, 510, 505, 540, 541, 528, 506,
	507, 508, 509, 325, 520, 0, 356, 357, 358, 379,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	0, 232, 1331, 0, 257, 0, 0, 0, 511, 0,
	0, 317, 271, 0, 0, 0, 0, 567, 575, 0,
	0, 0, 0, 0, 0, 0, 1460, 0, 0, 470,
	0, 0, 501, 544, 543, 488, 497, 0, 0, 213,
	152, 489, 0, 496, 490, 494, 493, 491, 492, 0,
	559, 0, 0, 0, 0, 0, 0, 461, 474, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 472, 0, 0, 0, 0, 521,
	0, 473, 0, 0, 1461, 498, 499, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 495, 519, 523, 225, 581,
	517, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 582, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 348, 0,
	0, 565, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 518, 0, 307, 289, 578, 462, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 367, 0, 368, 0, 0, 0, 376, 380, 381,
	382, 384, 385, 386, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 563, 285, 0, 0, 577, 558, 560, 561, 564,
	568, 569, 570, 571, 572, 574, 576, 580, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 371, 374, 0, 0, 0, 201, 373,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 522, 275, 276,
	277, 278, 566, 0, 218, 372, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 238, 244, 383, 246, 217,
	290, 240, 350, 253, 0, 377, 0, 0, 0, 0,
	282, 249, 315, 254, 260, 303, 349, 288, 308, 215,
	340, 316, 264, 0, 0, 588, 562, 587, 589, 590,
	586, 591, 592, 573, 480, 0, 526, 584, 583, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 258, 0, 299, 237, 551,
	531, 532, 533, 479, 534, 529, 530, 552, 524, 548,
	549, 503, 527, 535, 547, 536, 550, 553, 554, 593,
	594, 542, 595, 539, 555, 546, 545, 537, 525, 556,
	557, 510, 505, 540, 541, 528, 506, 507, 508, 509,
	144, 325, 520, 356, 357, 358, 379, 342, 0, 229,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 849, 0, 0, 317,
	271, 0, 0, 0, 0, 567, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 0, 0,
	501, 544, 543, 488, 497, 0, 0, 213, 152, 489,
	0, 496, 490, 494, 493, 491, 492, 0, 559, 0,
	0, 0, 0, 0, 0, 461, 474, 0, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 472, 0, 0, 0, 0, 521, 0, 473,
	0, 0, 516, 498, 499, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 495, 519, 523, 225, 581, 517, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 582, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 348, 0, 0, 565,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	518, 0, 307, 289, 578, 462, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 367,
	0, 368, 0, 0, 0, 376, 380, 381, 382, 384,
	385, 386, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 563,
	285, 0, 0, 577, 558, 560, 561, 564, 568, 569,
	570, 571, 572, 574, 576, 580, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 371, 374, 0, 0, 0, 201, 373, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 522, 275, 276, 277, 278,
	566, 0, 218, 372, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 238, 244, 383, 246, 217, 290, 240,
	350, 253, 0, 377, 0, 0, 0, 0, 282, 249,
	315, 254, 260, 303, 349, 288, 308, 215, 340, 316,
	264, 0, 0, 588, 562, 587, 589, 590, 586, 591,
	592, 573, 480, 0, 526, 584, 583, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 258, 111, 299, 237, 551, 531, 532,
	533, 479, 534, 529, 530, 552, 524, 548, 549, 503,
	527, 535, 547, 536, 550, 553, 554, 593, 594, 542,
	595, 539, 555, 546, 545, 537, 525, 556, 557, 510,
	505, 540, 541, 528, 506, 507, 508, 509, 325, 520,
	0, 356, 357, 358, 379, 342, 0, 229, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 0, 232, 2726, 0, 257,
	0, 0, 0, 511, 0, 0, 317, 271, 0, 0,
	0, 0, 567, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 0, 0, 501, 544, 543,
	488, 497, 0, 0, 213, 152, 489, 0, 496, 490,
	494, 493, 491, 492, 0, 559, 0, 0, 0, 0,
	0, 0, 461, 474, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 472,
	0, 0, 0, 0, 521, 0, 473, 0, 0, 516,
	498, 499, 0, 0, 204, 322, 338, 214, 313, 351,
	219, 320, 209, 286, 309, 0, 0, 206, 336, 319,
	268, 251, 252, 205, 0, 304, 230, 243, 226, 284,
	495, 519, 523, 225, 581, 517, 346, 208, 0, 345,
	283, 332, 337, 269, 263, 207, 334, 267, 262, 255,
	234, 582, 247, 295, 261, 296, 248, 273, 272, 274,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 348, 0, 0, 565, 0, 0, 0,
	321, 0, 0, 256, 0, 0, 0, 518, 0, 307,
	289, 578, 462, 0, 305, 259, 333, 297, 339, 323,
	347, 301, 298, 199, 324, 228, 270, 210, 212, 224,
	231, 233, 235, 236, 279, 280, 292, 312, 326, 327,
	328, 227, 220, 306, 221, 245, 222, 200, 314, 223,
	202, 293, 331, 0, 241, 302, 266, 203, 265, 294,
	330, 329, 211, 355, 361, 362, 367, 0, 368, 0,
	0, 0, 376, 380, 381, 382, 384, 385, 386, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 360, 239, 196, 197, 343, 563, 285, 0, 0,
	577, 558, 560, 561, 564, 568, 569, 570, 571, 572,
	574, 576, 580, 310, 0, 0, 0, 0, 0, 250,
	291, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 341, 353, 371, 374,
	0, 0, 0, 201, 373, 0, 0, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 522, 275, 276, 277, 278, 566, 0, 218,
	372, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	238, 244, 383, 246, 217, 290, 240, 350, 253, 0,
	377, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	588, 562, 587, 589, 590, 586, 591, 592, 573, 480,
	0, 526, 584, 583, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 551, 531, 532, 533, 479, 534,
	529, 530, 552, 524, 548, 549, 503, 527, 535, 547,
	536, 550, 553, 554, 593, 594, 542, 595, 539, 555,
	546, 545, 537, 525, 556, 557, 510, 505, 540, 541,
	528, 506, 507, 508, 509, 325, 520, 0, 356, 357,
	358, 379, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 0, 232, 1331, 0, 257, 0, 0, 0,
	511, 0, 0, 317, 271, 0, 0, 0, 0, 567,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 0, 0, 501, 544, 543, 488, 497, 0,
	0, 213, 152, 489, 0, 496, 490, 494, 493, 491,
	492, 0, 559, 0, 0, 0, 0, 0, 0, 461,
	474, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 472, 0, 0, 0,
	0, 521, 0, 473, 0, 0, 516, 498, 499, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 495, 519, 523,
	225, 581, 517, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 582, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	348, 0, 0, 565, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 518, 0, 307, 289, 578, 462,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 367, 0, 368, 0, 0, 0, 376,
	380, 381, 382, 384, 385, 386, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 563, 285, 0, 0, 577, 558, 560,
	561, 564, 568, 569, 570, 571, 572, 574, 576, 580,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 371, 374, 0, 0, 0,
	201, 373, 0, 0, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 522,
	275, 276, 277, 278, 566, 0, 218, 372, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 238, 244, 383,
	246, 217, 290, 240, 350, 253, 0, 377, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 588, 562, 587,
	589, 590, 586, 591, 592, 573, 480, 0, 526, 584,
	583, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 0, 299,
	237, 551, 531, 532, 533, 479, 534, 529, 530, 552,
	524, 548, 549, 503, 527, 535, 547, 536, 550, 553,
	554, 593, 594, 542, 595, 539, 555, 546, 545, 537,
	525, 556, 557, 510, 505, 540, 541, 528, 506, 507,
	508, 509, 325, 520, 0, 356, 357, 358, 379, 342,
	0, 229, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 0,
	232, 0, 0, 257, 0, 0, 0, 511, 0, 0,
	317, 271, 0, 0, 0, 0, 567, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 0,
	0, 501, 544, 543, 488, 497, 0, 0, 213, 152,
	489, 0, 496, 490, 494, 493, 491, 492, 0, 559,
	0, 0, 0, 0, 0, 0, 461, 474, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 1103, 0, 0, 0, 521, 0,
	473, 0, 0, 516, 498, 499, 0, 0, 204, 322,
	338, 214, 313, 351, 219, 320, 209, 286, 309, 0,
	0, 206, 336, 319, 268, 251, 252, 205, 0, 304,
	230, 243, 226, 284, 495, 519, 523, 225, 581, 517,
	346, 208, 0, 345, 283, 332, 337, 269, 263, 207,
	334, 267, 262, 255, 234, 582, 247, 295, 261, 296,
	248, 273, 272, 274, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 348, 0, 0,
	565, 0, 0, 0, 321, 0, 0, 256, 0, 0,
	0, 518, 0, 307, 289, 578, 462, 0, 305, 259,
	333, 297, 339, 323, 347, 301, 298, 199, 324, 228,
	270, 210, 212, 224, 231, 233, 235, 236, 279, 280,
	292, 312, 326, 327, 328, 227, 220, 306, 221, 245,
	222, 200, 314, 223, 202, 293, 331, 0, 241, 302,
	266, 203, 265, 294, 330, 329, 211, 355, 361, 362,
	367, 0, 368, 0, 0, 0, 376, 380, 381, 382,
	384, 385, 386, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 360, 239, 196, 197, 343,
	563, 285, 0, 0, 577, 558, 560, 561, 564, 568,
	569, 570, 571, 572, 574, 576, 580, 310, 0, 0,
	0, 0, 0, 250, 291, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	341, 353, 371, 374, 0, 0, 0, 201, 373, 0,
	0, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 522, 275, 276, 277,
	278, 566, 0, 218, 372, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 238, 244, 383, 246, 217, 290,
	240, 350, 253, 0, 377, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 588, 562, 587, 589, 590, 586,
	591, 592, 573, 480, 0, 526, 584, 583, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 551, 531,
	532, 533, 479, 534, 529, 530, 552, 524, 548, 549,
	503, 527, 535, 547, 536, 550, 553, 554, 593, 594,
	542, 595, 539, 555, 546, 545, 537, 525, 556, 557,
	510, 505, 540, 541, 528, 506, 507, 508, 509, 0,
	0, 0, 356, 357, 358, 379, 342, 0, 229, 325,
	520, 0, 0, 1582, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 511, 0, 0, 317, 271, 0,
	0, 0, 0, 567, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 0, 0, 501, 544,
	543, 488, 497, 0, 0, 213, 152, 489, 0, 496,
	490, 494, 493, 491, 492, 0, 559, 0, 0, 0,
	0, 0, 0, 461, 474, 0, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	472, 0, 0, 0, 0, 521, 0, 473, 0, 0,
	516, 498, 499, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 495, 519, 523, 225, 581, 517, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 582, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 348, 0, 0, 565, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 518, 0,
	307, 289, 578, 462, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 367, 0, 368,
	0, 0, 0, 376, 380, 381, 382, 384, 385, 386,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 563, 285, 0,
	0, 577, 558, 560, 561, 564, 568, 569, 570, 571,
	572, 574, 576, 580, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 371,
	374, 0, 0, 0, 201, 373, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 522, 275, 276, 277, 278, 566, 0,
	218, 372, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 238, 244, 383, 246, 217, 290, 240, 350, 253,
	0, 377, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 588, 562, 587, 589, 590, 586, 591, 592, 573,
	480, 0, 526, 584, 583, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 0, 299, 237, 551, 531, 532, 533, 479,
	534, 529, 530, 552, 524, 548, 549, 503, 527, 535,
	547, 536, 550, 553, 554, 593, 594, 542, 595, 539,
	555, 546, 545, 537, 525, 556, 557, 510, 505, 540,
	541, 528, 506, 507, 508, 509, 325, 520, 0, 356,
	357, 358, 379, 342, 0, 229, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 0, 232, 0, 0, 257, 0, 0,
	0, 511, 0, 0, 317, 271, 0, 0, 0, 0,
	567, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 0, 0, 501, 544, 543, 488, 497,
	0, 0, 213, 152, 489, 0, 496, 490, 494, 493,
	491, 492, 0, 559, 0, 0, 0, 0, 0, 0,
	461, 474, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 472, 0, 0,
	0, 0, 521, 0, 473, 0, 0, 516, 498, 499,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 495, 519,
	523, 225, 581, 517, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 582,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 348, 0, 0, 565, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 518, 0, 307, 289, 578,
	462, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 224, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 367, 0, 368, 0, 0, 0,
	376, 380, 381, 382, 384, 385, 386, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 360,
	239, 196, 197, 343, 563, 285, 0, 0, 577, 558,
	560, 561, 564, 568, 569, 570, 571, 572, 574, 576,
	580, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 371, 374, 0, 0,
	0, 201, 373, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	522, 275, 276, 277, 278, 566, 0, 218, 372, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 238, 244,
	383, 246, 217, 290, 240, 350, 253, 0, 377, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 588, 562,
	587, 589, 590, 586, 591, 592, 573, 480, 0, 526,
	584, 583, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 551, 531, 532, 533, 479, 534, 529, 530,
	552, 524, 548, 549, 503, 527, 535, 547, 536, 550,
	553, 554, 593, 594, 542, 595, 539, 555, 546, 545,
	537, 525, 556, 557, 510, 505, 540, 541, 528, 506,
	507, 508, 509, 325, 520, 0, 356, 357, 358, 379,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 1185, 0, 0, 0, 477, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 511, 0,
	0, 317, 271, 0, 0, 0, 0, 567, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	0, 0, 501, 544, 543, 488, 497, 0, 0, 213,
	152, 489, 0, 496, 490, 494, 493, 491, 492, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 472, 0, 0, 0, 0, 521,
	0, 473, 0, 0, 516, 498, 499, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 495, 519, 523, 225, 581,
	517, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 582, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 348, 0,
	0, 565, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 518, 0, 307, 289, 578, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 1186,
	1187, 367, 0, 368, 0, 0, 0, 376, 380, 381,
	382, 384, 385, 386, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 563, 285, 0, 0, 577, 558, 560, 561, 564,
	568, 569, 570, 571, 572, 574, 576, 580, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 371, 374, 0, 0, 0, 201, 373,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 522, 275, 276,
	277, 278, 566, 0, 218, 372, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 238, 244, 383, 246, 217,
	290, 240, 350, 253, 0, 377, 0, 0, 0, 0,
	282, 249, 315, 254, 260, 303, 349, 288, 308, 215,
	340, 316, 264, 0, 0, 588, 562, 587, 589, 590,
	586, 591, 592, 573, 480, 0, 526, 584, 583, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 258, 0, 299, 237, 551,
	531, 532, 533, 479, 534, 529, 530, 552, 524, 548,
	549, 503, 527, 535, 547, 536, 550, 553, 554, 593,
	594, 542, 595, 539, 555, 546, 545, 537, 525, 556,
	557, 510, 505, 540, 541, 528, 506, 507, 508, 509,
	325, 520, 0, 356, 357, 358, 379, 342, 0, 229,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 0, 232, 0,
	0, 257, 0, 0, 0, 511, 0, 0, 317, 271,
	0, 0, 0, 0, 567, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	544, 543, 488, 497, 0, 0, 213, 152, 489, 0,
	496, 490, 494, 493, 491, 492, 0, 559, 0, 0,
	0, 0, 0, 0, 461, 474, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 472, 0, 0, 0, 0, 521, 0, 473, 0,
	0, 516, 498, 499, 0, 0, 204, 322, 338, 214,
	313, 351, 219, 320, 209, 286, 309, 0, 0, 206,
	336, 319, 268, 251, 252, 205, 0, 304, 230, 243,
	226, 284, 495, 519, 523, 225, 581, 517, 346, 208,
	0, 345, 283, 332, 337, 269, 263, 207, 334, 267,
	262, 255, 234, 582, 247, 295, 261, 296, 248, 273,
	272, 274, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 348, 0, 0, 565, 0,
	0, 0, 321, 0, 0, 256, 0, 0, 0, 518,
	0, 307, 289, 578, 462, 0, 305, 259, 333, 297,
	339, 323, 347, 301, 298, 199, 324, 228, 270, 210,
	212, 224, 231, 233, 235, 236, 279, 280, 292, 312,
	326, 327, 328, 227, 220, 306, 221, 245, 222, 200,
	314, 223, 202, 293, 331, 0, 241, 302, 266, 203,
	265, 294, 330, 329, 211, 355, 361, 362, 367, 0,
	368, 0, 0, 0, 376, 380, 381, 382, 384, 385,
	386, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 360, 239, 196, 197, 343, 563, 285,
	0, 0, 577, 558, 560, 561, 564, 568, 569, 570,
	571, 572, 574, 576, 580, 310, 0, 0, 0, 0,
	0, 250, 291, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 341, 353,
	371, 374, 0, 0, 0, 201, 373, 0, 0, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 522, 275, 276, 277, 278, 566,
	0, 218, 372, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 238, 244, 383, 246, 217, 290, 240, 350,
	253, 0, 377, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 588, 562, 587, 589, 590, 586, 591, 592,
	573, 480, 0, 526, 584, 583, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 551, 531, 532, 533,
	479, 534, 529, 530, 552, 524, 548, 549, 503, 527,
	535, 547, 536, 550, 553, 554, 593, 594, 542, 595,
	539, 555, 546, 545, 537, 525, 556, 557, 510, 505,
	540, 541, 528, 506, 507, 508, 509, 325, 520, 0,
	356, 357, 358, 379, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 511, 0, 0, 317, 271, 0, 0, 0,
	0, 567, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 0, 0, 501, 544, 543, 488,
	497, 0, 0, 213, 152, 489, 0, 496, 490, 494,
	493, 491, 492, 0, 559, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 0,
	0, 0, 0, 521, 0, 473, 0, 0, 516, 498,
	499, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 495,
	519, 523, 225, 581, 517, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	582, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 348, 0, 0, 565, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 518, 0, 307, 289,
	578, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 367, 0, 368, 0, 0,
	0, 376, 380, 381, 382, 384, 385, 386, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 563, 285, 0, 0, 577,
	558, 560, 561, 564, 568, 569, 570, 571, 572, 574,
	576, 580, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 371, 374, 0,
	0, 0, 201, 373, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 522, 275, 276, 277, 278, 566, 0, 218, 372,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 238,
	244, 383, 246, 217, 290, 240, 350, 253, 0, 377,
	0, 0, 0, 0, 282, 249, 315, 254, 260, 303,
	349, 288, 308, 215, 340, 316, 264, 0, 0, 588,
	562, 587, 589, 590, 586, 591, 592, 573, 480, 0,
	526, 584, 583, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 258,
	0, 299, 237, 551, 531, 532, 533, 479, 534, 529,
	530, 552, 524, 548, 549, 503, 527, 535, 547, 536,
	550, 553, 554, 593, 594, 542, 595, 539, 555, 546,
	545, 537, 525, 556, 557, 510, 505, 540, 541, 528,
	506, 507, 508, 509, 0, 0, 0, 356, 357, 358,
	379, 342, 0, 229, 144, 325, 39, 132, 110, 0,
	0, 0, 0, 0, 0, 0, 287, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 378, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 367, 0, 368, 0, 0, 0, 376,
	380, 381, 382, 384, 385, 386, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 371, 374, 0, 0, 0,
	201, 373, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 369,
	275, 276, 277, 278, 397, 399, 218, 372, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 238, 244, 383,
	246, 217, 290, 240, 350, 253, 0, 377, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 40, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 111, 299,
	237, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 192, 193,
	194, 195, 325, 0, 0, 356, 357, 358, 379, 342,
	0, 229, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	317, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 213, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 917, 0, 0, 0, 0, 204, 322,
	338, 214, 313, 351, 219, 320, 209, 286, 309, 0,
	0, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 0, 1669,
	1666, 1667, 1668, 284, 0, 1653, 1654, 1655, 1656, 915,
	1639, 1659, 0, 1640, 283, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1657, 295, 261, 296,
	248, 273, 272, 274, 940, 942, 944, 946, 949, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 256, 0, 0,
	0, 1652, 0, 307, 289, 0, 0, 0, 305, 259,
	333, 297, 339, 323, 347, 301, 298, 199, 324, 228,
	270, 210, 212, 224, 231, 233, 235, 236, 279, 280,
	292, 312, 326, 327, 328, 227, 220, 306, 221, 245,
	222, 200, 314, 223, 202, 293, 331, 0, 241, 302,
	266, 203, 265, 294, 330, 329, 211, 355, 361, 362,
	367, 0, 368, 0, 0, 0, 376, 380, 381, 382,
	384, 385, 386, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 360, 239, 196, 197, 343,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 359, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 250, 291, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	341, 353, 371, 374, 0, 0, 0, 201, 373, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 369, 275, 276, 277,
	278, 242, 0, 218, 372, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 238, 244, 383, 246, 217, 290,
	240, 350, 253, 0, 377, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 939, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 379, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 1723, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 378, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1727, 348, 0, 0, 0, 1720, 0,
	1719, 321, 1721, 1724, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 1725, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 367, 0, 368,
	0, 0, 0, 376, 380, 381, 382, 384, 385, 386,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 371,
	374, 0, 0, 0, 201, 373, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 369, 275, 276, 277, 278, 242, 0,
	218, 372, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 238, 244, 383, 246, 217, 290, 240, 350, 253,
	0, 377, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 0, 299, 237, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 192, 193, 194, 195, 325, 0, 0, 356,
	357, 358, 379, 342, 0, 229, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 232, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 317, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 1493, 0,
	0, 0, 213, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 815, 816, 817, 814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 0, 335,
	363, 225, 354, 0, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 378,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 364, 0, 307, 289, 0,
	0, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 224, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 367, 0, 368, 0, 0, 0,
	376, 380, 381, 382, 384, 385, 386, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 360,
	239, 196, 197, 343, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 359, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 371, 374, 0, 0,
	0, 201, 373, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	369, 275, 276, 277, 278, 242, 0, 218, 372, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 238, 244,
	383, 246, 217, 290, 240, 350, 253, 0, 377, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 379,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 697, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 705, 706, 0, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	679, 346, 208, 678, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 378, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 695, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 367, 0, 368, 0, 0, 0, 376, 380, 381,
	382, 384, 385, 386, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 371, 374, 0, 0, 0, 201, 373,
	0, 0, 0, 0, 0, 0, 696, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 699, 275, 276,
	277, 278, 242, 0, 218, 372, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 238, 244, 383, 246, 217,
	290, 240, 350, 253, 0, 377, 0, 0, 0, 0,
	707, 702, 703, 254, 260, 303, 349, 288, 308, 215,
	340, 316, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 258, 0, 299, 237, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 192, 193, 194, 195,
	144, 325, 0, 356, 357, 358, 379, 342, 0, 229,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 98, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1513, 0,
	151, 0, 0, 0, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 378, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 367,
	0, 368, 0, 0, 0, 376, 380, 381, 382, 384,
	385, 386, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 371, 374, 0, 0, 0, 201, 373, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 369, 275, 276, 277, 278,
	242, 0, 218, 372, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 238, 244, 383, 246, 217, 290, 240,
	350, 253, 0, 377, 0, 0, 0, 0, 282, 249,
	315, 254, 260, 303, 349, 288, 308, 215, 340, 316,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 258, 111, 299, 237, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 192, 193, 194, 195, 144, 325,
	0, 356, 357, 358, 379, 342, 0, 229, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 98, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 1504, 0, 151, 0,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 378, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 367, 0, 368,
	0, 0, 0, 376, 380, 381, 382, 384, 385, 386,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 371,
	374, 0, 0, 0, 201, 373, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 369, 275, 276, 277, 278, 242, 0,
	218, 372, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 238, 244, 383, 246, 217, 290, 240, 350, 253,
	0, 377, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 111, 299, 237, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 192, 193, 194, 195, 144, 325, 0, 356,
	357, 358, 379, 342, 0, 229, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 98, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1439, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	378, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 367, 0, 368, 0, 0,
	0, 376, 380, 381, 382, 384, 385, 386, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 371, 374, 0,
	0, 0, 201, 373, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 369, 275, 276, 277, 278, 242, 0, 218, 372,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 238,
	244, 383, 246, 217, 290, 240, 350, 253, 0, 377,
	0, 0, 0, 0, 282, 249, 315, 254, 260, 303,
	349, 288, 308, 215, 340, 316, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 258,
	111, 299, 237, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	192, 193, 194, 195, 325, 0, 0, 356, 357, 358,
	379, 342, 0, 229, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 317, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 705, 706, 0, 0, 0, 0,
	213, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 322, 338, 214, 313, 351, 219, 320, 209, 286,
	309, 0, 0, 206, 336, 319, 268, 251, 252, 205,
	0, 304, 230, 243, 226, 284, 0, 335, 363, 225,
	354, 679, 346, 208, 678, 345, 283, 332, 337, 269,
	263, 207, 334, 267, 262, 255, 234, 378, 247, 295,
	261, 296, 248, 273, 272, 274, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 256,
	0, 0, 0, 364, 0, 307, 289, 0, 0, 0,
	305, 259, 333, 297, 339, 323, 347, 301, 298, 199,
	324, 228, 270, 210, 212, 224, 231, 233, 235, 236,
	279, 280, 292, 312, 326, 327, 328, 227, 220, 306,
	221, 245, 222, 200, 314, 223, 202, 293, 331, 0,
	241, 302, 266, 203, 265, 294, 330, 329, 211, 355,
	361, 362, 367, 0, 368, 0, 0, 0, 376, 380,
	381, 382, 384, 385, 386, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 360, 239, 196,
	197, 343, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 359, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 250, 291, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 341, 353, 371, 374, 0, 0, 0, 201,
	373, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 369, 275,
	276, 277, 278, 242, 0, 218, 372, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 238, 244, 383, 246,
	217, 290, 240, 350, 253, 0, 377, 0, 0, 0,
	0, 707, 702, 703, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 379, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 378, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 0, 0,
	2044, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 367,
	0, 368, 0, 0, 0, 376, 380, 381, 382, 384,
	385, 386, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 371, 374, 0, 0, 0, 201, 373, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 369, 275, 276, 277, 278,
	242, 0, 218, 372, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 238, 244, 383, 246, 217, 290, 240,
	350, 253, 0, 377, 0, 0, 0, 0, 282, 249,
	315, 254, 260, 303, 349, 288, 308, 215, 340, 316,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 258, 0, 299, 237, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 192, 193, 194, 195, 325, 0,
	0, 356, 357, 358, 379, 342, 0, 229, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 1080, 0, 257,
	0, 0, 0, 0, 0, 0, 317, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	1078, 0, 0, 0, 213, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1076,
	0, 0, 0, 0, 204, 322, 338, 214, 313, 351,
	219, 320, 209, 286, 309, 0, 0, 206, 336, 319,
	268, 251, 252, 205, 0, 304, 230, 243, 226, 284,
	0, 335, 363, 225, 354, 0, 346, 208, 0, 345,
	283, 332, 337, 269, 263, 207, 334, 267, 262, 255,
	234, 378, 247, 295, 261, 296, 248, 273, 272, 274,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 256, 0, 0, 0, 364, 0, 307,
	289, 0, 0, 0, 305, 259, 333, 297, 339, 323,
	347, 301, 298, 199, 324, 228, 270, 210, 212, 224,
	231, 233, 235, 236, 279, 280, 292, 312, 326, 327,
	328, 227, 220, 306, 221, 245, 222, 200, 314, 223,
	202, 293, 331, 0, 241, 302, 266, 203, 265, 294,
	330, 329, 211, 355, 361, 362, 367, 0, 368, 0,
	0, 0, 376, 380, 381, 382, 384, 385, 386, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 360, 239, 196, 197, 343, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 359, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 250,
	291, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 341, 353, 371, 374,
	0, 0, 0, 201, 373, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 369, 275, 276, 277, 278, 242, 0, 218,
	372, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	238, 244, 383, 246, 217, 290, 240, 350, 253, 0,
	377, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 379, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 1074, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 1078, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1076, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 378, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 367, 0, 368, 0, 0, 0, 376,
	380, 381, 382, 384, 385, 386, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 371, 374, 0, 0, 0,
	201, 373, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 369,
	275, 276, 277, 278, 242, 0, 218, 372, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 238, 244, 383,
	246, 217, 290, 240, 350, 253, 0, 377, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 0, 299,
	237, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 192, 193,
	194, 195, 325, 0, 0, 356, 357, 358, 379, 342,
	0, 229, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	317, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2656,
	0, 151, 544, 0, 0, 0, 0, 0, 213, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 322,
	338, 214, 313, 351, 219, 320, 209, 286, 309, 0,
	0, 206, 336, 319, 268, 251, 252, 205, 0, 304,
	230, 243, 226, 284, 0, 335, 363, 225, 354, 0,
	346, 208, 0, 345, 283, 332, 337, 269, 263, 207,
	334, 267, 262, 255, 234, 378, 247, 295, 261, 296,
	248, 273, 272, 274, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 256, 0, 0,
	0, 364, 0, 307, 289, 0, 0, 0, 305, 259,
	333, 297, 339, 323, 347, 301, 298, 199, 324, 228,
	270, 210, 212, 224, 231, 233, 235, 236, 279, 280,
	292, 312, 326, 327, 328, 227, 220, 306, 221, 245,
	222, 200, 314, 223, 202, 293, 331, 0, 241, 302,
	266, 203, 265, 294, 330, 329, 211, 355, 361, 362,
	367, 0, 368, 0, 0, 0, 376, 380, 381, 382,
	384, 385, 386, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 360, 239, 196, 197, 343,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 359, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 250, 291, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	341, 353, 371, 374, 0, 0, 0, 201, 373, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 369, 275, 276, 277,
	278, 242, 0, 218, 372, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 238, 244, 383, 246, 217, 290,
	240, 350, 253, 0, 377, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 379, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 1078, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2379, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 378, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 367, 0, 368,
	0, 0, 0, 376, 380, 381, 382, 384, 385, 386,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 371,
	374, 0, 0, 0, 201, 373, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 369, 275, 276, 277, 278, 242, 0,
	218, 372, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 238, 244, 383, 246, 217, 290, 240, 350, 253,
	0, 377, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 0, 299, 237, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 192, 193, 194, 195, 325, 0, 0, 356,
	357, 358, 379, 342, 0, 229, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 317, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 1078, 0,
	0, 0, 213, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1076, 0, 0,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 0, 335,
	363, 225, 354, 0, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 378,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 364, 0, 307, 289, 0,
	0, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 224, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 367, 0, 368, 0, 0, 0,
	376, 380, 381, 382, 384, 385, 386, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 360,
	239, 196, 197, 343, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 359, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 371, 374, 0, 0,
	0, 201, 373, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	369, 275, 276, 277, 278, 242, 0, 218, 372, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 238, 244,
	383, 246, 217, 290, 240, 350, 253, 0, 377, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 379,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 1787, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 378, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 367, 0, 368, 0, 0, 0, 376, 380, 381,
	382, 384, 385, 386, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 371, 374, 0, 0, 0, 201, 373,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 369, 275, 276,
	277, 278, 242, 0, 218, 372, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 238, 244, 383, 246, 217,
	290, 240, 350, 253, 0, 377, 0, 0, 0, 0,
	282, 249, 315, 254, 260, 303, 349, 288, 308, 215,
	340, 316, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 258, 0, 299, 237, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 192, 193, 194, 195,
	325, 0, 0, 356, 357, 358, 379, 342, 0, 229,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 1804,
	0, 257, 0, 0, 0, 0, 0, 0, 317, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 1078, 0, 0, 0, 213, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 322, 338, 214,
	313, 351, 219, 320, 209, 286, 309, 0, 0, 206,
	336, 319, 268, 251, 252, 205, 0, 304, 230, 243,
	226, 284, 0, 335, 363, 225, 354, 0, 346, 208,
	0, 345, 283, 332, 337, 269, 263, 207, 334, 267,
	262, 255, 234, 378, 247, 295, 261, 296, 248, 273,
	272, 274, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 256, 0, 0, 0, 364,
	0, 307, 289, 0, 0, 0, 305, 259, 333, 297,
	339, 323, 347, 301, 298, 199, 324, 228, 270, 210,
	212, 224, 231, 233, 235, 236, 279, 280, 292, 312,
	326, 327, 328, 227, 220, 306, 221, 245, 222, 200,
	314, 223, 202, 293, 331, 0, 241, 302, 266, 203,
	265, 294, 330, 329, 211, 355, 361, 362, 367, 0,
	368, 0, 0, 0, 376, 380, 381, 382, 384, 385,
	386, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 360, 239, 196, 197, 343, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	359, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 250, 291, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 341, 353,
	371, 374, 0, 0, 0, 201, 373, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 369, 275, 276, 277, 278, 242,
	0, 218, 372, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 238, 244, 383, 246, 217, 290, 240, 350,
	253, 0, 377, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 192, 193, 194, 195, 325, 0, 0,
	356, 357, 358, 379, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2735, 0, 151, 0, 0, 0,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	378, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 367, 0, 368, 0, 0,
	0, 376, 380, 381, 382, 384, 385, 386, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 371, 374, 0,
	0, 0, 201, 373, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 369, 275, 276, 277, 278, 242, 0, 218, 372,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 238,
	244, 383, 246, 217, 290, 240, 350, 253, 0, 377,
	0, 0, 0, 0, 282, 249, 315, 254, 260, 303,
	349, 288, 308, 215, 340, 316, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 258,
	0, 299, 237, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	192, 193, 194, 195, 325, 0, 0, 356, 357, 358,
	379, 342, 0, 229, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 317, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 544, 0, 0, 0, 0, 0,
	213, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 322, 338, 214, 313, 351, 219, 320, 209, 286,
	309, 0, 0, 206, 336, 319, 268, 251, 252, 205,
	0, 304, 230, 243, 226, 284, 0, 335, 363, 225,
	354, 0, 346, 208, 0, 345, 283, 332, 337, 269,
	263, 207, 334, 267, 262, 255, 234, 378, 247, 295,
	261, 296, 248, 273, 272, 274, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 256,
	0, 0, 0, 364, 0, 307, 289, 0, 0, 0,
	305, 259, 333, 297, 339, 323, 347, 301, 298, 199,
	324, 228, 270, 210, 212, 224, 231, 233, 235, 236,
	279, 280, 292, 312, 326, 327, 328, 227, 220, 306,
	221, 245, 222, 200, 314, 223, 202, 293, 331, 0,
	241, 302, 266, 203, 265, 294, 330, 329, 211, 355,
	361, 362, 367, 0, 368, 0, 0, 0, 376, 380,
	381, 382, 384, 385, 386, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 360, 239, 196,
	197, 343, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 359, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 250, 291, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 341, 353, 371, 374, 0, 0, 0, 201,
	373, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 369, 275,
	276, 277, 278, 242, 0, 218, 372, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 238, 244, 383, 246,
	217, 290, 240, 350, 253, 0, 377, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 379, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2671, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 378, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 367,
	0, 368, 0, 0, 0, 376, 380, 381, 382, 384,
	385, 386, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 371, 374, 0, 0, 0, 201, 373, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 369, 275, 276, 277, 278,
	242, 0, 218, 372, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 238, 244, 383, 246, 217, 290, 240,
	350, 253, 0, 377, 0, 0, 0, 0, 282, 249,
	315, 254, 260, 303, 349, 288, 308, 215, 340, 316,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 258, 0, 299, 237, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 192, 193, 194, 195, 325, 0,
	0, 356, 357, 358, 379, 342, 0, 229, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 317, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 213, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 322, 338, 214, 313, 351,
	219, 320, 209, 286, 309, 0, 0, 206, 336, 319,
	268, 251, 252, 205, 0, 304, 230, 243, 226, 284,
	0, 335, 363, 225, 354, 0, 346, 208, 0, 345,
	283, 332, 337, 269, 263, 207, 334, 267, 262, 255,
	234, 378, 247, 295, 261, 296, 248, 273, 272, 274,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 2607, 0, 0,
	321, 0, 0, 256, 0, 0, 0, 364, 0, 307,
	289, 0, 0, 0, 305, 259, 333, 297, 339, 323,
	347, 301, 298, 199, 324, 228, 270, 210, 212, 224,
	231, 233, 235, 236, 279, 280, 292, 312, 326, 327,
	328, 227, 220, 306, 221, 245, 222, 200, 314, 223,
	202, 293, 331, 0, 241, 302, 266, 203, 265, 294,
	330, 329, 211, 355, 361, 362, 367, 0, 368, 0,
	0, 0, 376, 380, 381, 382, 384, 385, 386, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 360, 239, 196, 197, 343, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 359, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 250,
	291, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 341, 353, 371, 374,
	0, 0, 0, 201, 373, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 369, 275, 276, 277, 278, 242, 0, 218,
	372, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	238, 244, 383, 246, 217, 290, 240, 350, 253, 0,
	377, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 379, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2451, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 378, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 367, 0, 368, 0, 0, 0, 376,
	380, 381, 382, 384, 385, 386, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 371, 374, 0, 0, 0,
	201, 373, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 369,
	275, 276, 277, 278, 242, 0, 218, 372, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 238, 244, 383,
	246, 217, 290, 240, 350, 253, 0, 377, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 0, 299,
	237, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 192, 193,
	194, 195, 325, 0, 0, 356, 357, 358, 379, 342,
	0, 229, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	317, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 213, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 322,
	338, 214, 313, 351, 219, 320, 209, 286, 309, 0,
	0, 206, 336, 319, 268, 251, 252, 205, 0, 304,
	230, 243, 226, 284, 0, 335, 363, 225, 354, 0,
	346, 208, 0, 345, 283, 332, 337, 269, 263, 207,
	334, 267, 262, 255, 234, 378, 247, 295, 261, 296,
	248, 273, 272, 274, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 2494, 0, 0, 321, 0, 0, 256, 0, 0,
	0, 364, 0, 307, 289, 0, 0, 0, 305, 259,
	333, 297, 339, 323, 347, 301, 298, 199, 324, 228,
	270, 210, 212, 224, 231, 233, 235, 236, 279, 280,
	292, 312, 326, 327, 328, 227, 220, 306, 221, 245,
	222, 200, 314, 223, 202, 293, 331, 0, 241, 302,
	266, 203, 265, 294, 330, 329, 211, 355, 361, 362,
	367, 0, 368, 0, 0, 0, 376, 380, 381, 382,
	384, 385, 386, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 360, 239, 196, 197, 343,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 359, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 250, 291, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	341, 353, 371, 374, 0, 0, 0, 201, 373, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 369, 275, 276, 277,
	278, 242, 0, 218, 372, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 238, 244, 383, 246, 217, 290,
	240, 350, 253, 0, 377, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 379, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 378, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 367, 0, 368,
	0, 0, 0, 376, 380, 381, 382, 384, 385, 386,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 371,
	374, 0, 0, 0, 201, 373, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 369, 275, 276, 277, 278, 242, 0,
	218, 372, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 238, 244, 383, 246, 217, 290, 240, 350, 253,
	0, 377, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 0, 299, 237, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 192, 193, 194, 195, 325, 0, 0, 356,
	357, 358, 379, 342, 0, 229, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 317, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1439, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 213, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 0, 335,
	363, 225, 354, 0, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 378,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 364, 0, 307, 289, 0,
	0, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 224, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 367, 0, 368, 0, 0, 0,
	376, 380, 381, 382, 384, 385, 386, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 360,
	239, 196, 197, 343, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 359, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 371, 374, 0, 0,
	0, 201, 373, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	369, 275, 276, 277, 278, 242, 0, 218, 372, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 238, 244,
	383, 246, 217, 290, 240, 350, 253, 0, 377, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 379,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 378, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 367, 0, 368, 0, 0, 0, 376, 380, 381,
	382, 384, 385, 386, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 371, 374, 0, 0, 0, 201, 373,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 369, 275, 276,
	277, 278, 242, 0, 218, 372, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 238, 244, 383, 246, 217,
	290, 240, 350, 253, 0, 377, 0, 0, 0, 0,
	282, 249, 315, 254, 260, 303, 349, 288, 308, 215,
	340, 316, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 258, 0, 299, 237, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 192, 193, 194, 195,
	325, 0, 0, 356, 357, 358, 379, 342, 0, 229,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 317, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 2178, 0, 0, 0, 213, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 322, 338, 214,
	313, 351, 219, 320, 209, 286, 309, 0, 0, 206,
	336, 319, 268, 251, 252, 205, 0, 304, 230, 243,
	226, 284, 0, 335, 363, 225, 354, 0, 346, 208,
	0, 345, 283, 332, 337, 269, 263, 207, 334, 267,
	262, 255, 234, 378, 247, 295, 261, 296, 248, 273,
	272, 274, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 256, 0, 0, 0, 364,
	0, 307, 289, 0, 0, 0, 305, 259, 333, 297,
	339, 323, 347, 301, 298, 199, 324, 228, 270, 210,
	212, 224, 231, 233, 235, 236, 279, 280, 292, 312,
	326, 327, 328, 227, 220, 306, 221, 245, 222, 200,
	314, 223, 202, 293, 331, 0, 241, 302, 266, 203,
	265, 294, 330, 329, 211, 355, 361, 362, 367, 0,
	368, 0, 0, 0, 376, 380, 381, 382, 384, 385,
	386, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 360, 239, 196, 197, 343, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	359, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 250, 291, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 341, 353,
	371, 374, 0, 0, 0, 201, 373, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 369, 275, 276, 277, 278, 242,
	0, 218, 372, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 238, 244, 383, 246, 217, 290, 240, 350,
	253, 0, 377, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 192, 193, 194, 195, 325, 0, 0,
	356, 357, 358, 379, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	378, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 367, 0, 368, 0, 0,
	0, 376, 380, 381, 382, 384, 385, 386, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 371, 374, 0,
	0, 0, 201, 373, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 369, 275, 276, 277, 278, 242, 0, 218, 372,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 238,
	244, 383, 246, 217, 290, 240, 350, 253, 0, 377,
	0, 0, 0, 0, 282, 249, 315, 254, 260, 303,
	349, 288, 308, 215, 340, 316, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 258,
	0, 299, 237, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	192, 193, 194, 195, 325, 0, 0, 356, 357, 358,
	379, 342, 0, 229, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 317, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 1078, 0, 0, 0,
	213, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 322, 338, 214, 313, 351, 219, 320, 209, 286,
	309, 0, 0, 206, 336, 319, 268, 251, 252, 205,
	0, 304, 230, 243, 226, 284, 0, 335, 363, 225,
	354, 0, 346, 208, 0, 345, 283, 332, 337, 269,
	263, 207, 334, 267, 262, 255, 234, 378, 247, 295,
	261, 296, 248, 273, 272, 274, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 256,
	0, 0, 0, 364, 0, 307, 289, 0, 0, 0,
	305, 259, 333, 297, 339, 323, 347, 301, 298, 199,
	324, 228, 270, 210, 212, 224, 231, 233, 235, 236,
	279, 280, 292, 312, 326, 327, 328, 227, 220, 306,
	221, 245, 222, 200, 314, 223, 202, 293, 331, 0,
	241, 302, 266, 203, 265, 294, 330, 329, 211, 355,
	361, 362, 367, 0, 368, 0, 0, 0, 376, 380,
	381, 382, 384, 385, 386, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 360, 239, 196,
	197, 343, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 359, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 250, 291, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 341, 353, 371, 374, 0, 0, 0, 201,
	373, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 369, 275,
	276, 277, 278, 242, 0, 218, 372, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 238, 244, 383, 246,
	217, 290, 240, 350, 253, 0, 377, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 379, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 1787, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 378, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 367,
	0, 368, 0, 0, 0, 376, 380, 381, 382, 384,
	385, 386, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 371, 374, 0, 0, 0, 201, 373, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 369, 275, 276, 277, 278,
	242, 0, 218, 372, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 238, 244, 383, 246, 217, 290, 240,
	350, 253, 0, 377, 0, 0, 0, 0, 282, 249,
	315, 254, 260, 303, 349, 288, 308, 215, 340, 316,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 258, 0, 299, 237, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 192, 193, 194, 195, 325, 0,
	0, 356, 357, 358, 379, 342, 0, 229, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 317, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 213, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 322, 338, 214, 313, 351,
	219, 320, 209, 286, 309, 0, 0, 206, 336, 319,
	268, 251, 252, 205, 0, 304, 230, 243, 226, 284,
	0, 335, 363, 225, 354, 0, 346, 208, 0, 345,
	283, 332, 337, 269, 263, 207, 334, 267, 262, 255,
	234, 378, 247, 295, 261, 296, 248, 273, 272, 274,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 256, 0, 0, 0, 364, 0, 307,
	289, 0, 0, 0, 305, 259, 333, 297, 339, 323,
	347, 301, 298, 199, 324, 228, 270, 210, 212, 224,
	231, 233, 235, 236, 279, 280, 292, 312, 326, 327,
	328, 227, 220, 306, 221, 245, 222, 200, 314, 223,
	202, 293, 331, 0, 241, 302, 266, 203, 265, 294,
	330, 329, 211, 355, 361, 362, 367, 0, 368, 0,
	0, 0, 376, 380, 381, 382, 384, 385, 386, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 360, 239, 196, 197, 343, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 359, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 250,
	291, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 341, 353, 371, 374,
	0, 0, 0, 201, 373, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 369, 275, 276, 277, 278, 242, 0, 218,
	372, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	238, 244, 383, 246, 217, 290, 240, 350, 253, 0,
	377, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 379, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 378, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 367, 0, 368, 0, 0, 0, 376,
	380, 381, 382, 384, 385, 386, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 371, 374, 0, 0, 0,
	201, 373, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 369,
	275, 276, 277, 278, 242, 0, 218, 372, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 238, 244, 383,
	246, 217, 290, 240, 350, 253, 0, 377, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 0, 299,
	237, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 192, 193,
	194, 195, 325, 0, 0, 356, 357, 358, 379, 342,
	0, 229, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	317, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 1816, 0, 0, 0, 213, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 322,
	338, 214, 313, 351, 219, 320, 209, 286, 309, 0,
	0, 206, 336, 319, 268, 251, 252, 205, 0, 304,
	230, 243, 226, 284, 0, 335, 363, 225, 354, 0,
	346, 208, 0, 345, 283, 332, 337, 269, 263, 207,
	334, 267, 262, 255, 234, 378, 247, 295, 261, 296,
	248, 273, 272, 274, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 256, 0, 0,
	0, 364, 0, 307, 289, 0, 0, 0, 305, 259,
	333, 297, 339, 323, 347, 301, 298, 199, 324, 228,
	270, 210, 212, 224, 231, 233, 235, 236, 279, 280,
	292, 312, 326, 327, 328, 227, 220, 306, 221, 245,
	222, 200, 314, 223, 202, 293, 331, 0, 241, 302,
	266, 203, 265, 294, 330, 329, 211, 355, 361, 362,
	367, 0, 368, 0, 0, 0, 376, 380, 381, 382,
	384, 385, 386, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 360, 239, 196, 197, 343,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 359, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 250, 291, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	341, 353, 371, 374, 0, 0, 0, 201, 373, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 369, 275, 276, 277,
	278, 242, 0, 218, 372, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 238, 244, 383, 246, 217, 290,
	240, 350, 253, 0, 377, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 0,
	0, 0, 356, 357, 358, 379, 342, 325, 229, 0,
	0, 1689, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	378, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 367, 0, 368, 0, 0,
	0, 376, 380, 381, 382, 384, 385, 386, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 371, 374, 0,
	0, 0, 201, 373, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 369, 275, 276, 277, 278, 242, 0, 218, 372,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 238,
	244, 383, 246, 217, 290, 240, 350, 253, 0, 377,
	0, 0, 0, 0, 282, 249, 315, 254, 260, 303,
	349, 288, 308, 215, 340, 316, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 258,
	0, 299, 237, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	192, 193, 194, 195, 325, 0, 0, 356, 357, 358,
	379, 342, 0, 229, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 317, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 1078, 0, 0, 0,
	213, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 322, 338, 214, 313, 351, 219, 320, 209, 286,
	309, 0, 0, 206, 336, 319, 268, 251, 252, 205,
	0, 304, 230, 243, 226, 284, 0, 335, 363, 225,
	354, 0, 346, 208, 0, 345, 283, 332, 337, 269,
	263, 207, 334, 267, 262, 255, 234, 378, 247, 295,
	261, 296, 248, 273, 272, 274, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 256,
	0, 0, 0, 364, 0, 307, 289, 0, 0, 0,
	305, 259, 333, 297, 339, 323, 347, 1368, 298, 199,
	324, 228, 270, 210, 212, 224, 231, 233, 235, 236,
	279, 280, 292, 312, 326, 327, 328, 227, 220, 306,
	221, 245, 222, 200, 314, 223, 202, 293, 331, 0,
	241, 302, 266, 203, 265, 294, 330, 329, 211, 355,
	361, 362, 367, 0, 368, 0, 0, 0, 376, 380,
	381, 382, 384, 385, 386, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 360, 239, 196,
	197, 343, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 359, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 250, 291, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 341, 353, 371, 374, 0, 0, 0, 201,
	373, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 369, 275,
	276, 277, 278, 242, 0, 218, 372, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 238, 244, 383, 246,
	217, 290, 240, 350, 253, 0, 377, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 379, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 378, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 367,
	0, 368, 0, 0, 0, 376, 380, 381, 382, 384,
	385, 386, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 371, 374, 0, 0, 0, 201, 373, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 369, 275, 276, 277, 278,
	242, 0, 218, 372, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 238, 244, 383, 246, 217, 290, 240,
	350, 253, 0, 377, 0, 0, 0, 0, 282, 249,
	315, 254, 260, 303, 349, 288, 308, 215, 340, 316,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 198, 0, 258, 0, 299, 237, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 192, 193, 194, 195, 325, 0,
	0, 356, 357, 358, 379, 342, 0, 229, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 317, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 213, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 322, 338, 214, 313, 351,
	219, 320, 209, 286, 309, 0, 0, 206, 336, 319,
	268, 251, 252, 205, 0, 304, 230, 243, 226, 284,
	0, 335, 363, 225, 354, 0, 346, 208, 0, 345,
	283, 332, 337, 269, 263, 207, 334, 267, 262, 255,
	234, 378, 247, 295, 261, 296, 248, 273, 272, 274,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 256, 0, 0, 0, 364, 0, 307,
	289, 0, 0, 0, 305, 259, 333, 297, 339, 323,
	347, 415, 298, 199, 324, 228, 270, 210, 212, 224,
	231, 233, 235, 236, 279, 280, 292, 312, 326, 327,
	328, 227, 220, 306, 221, 245, 222, 200, 314, 223,
	202, 293, 331, 0, 241, 302, 266, 203, 265, 294,
	330, 329, 211, 355, 361, 362, 367, 0, 368, 0,
	0, 0, 376, 380, 381, 382, 384, 385, 386, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 360, 239, 196, 197, 343, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 359, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 250,
	291, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 341, 353, 371, 374,
	0, 0, 0, 201, 373, 0, 0, 0, 0, 0,
	0, 416, 344, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 369, 275, 276, 277, 278, 242, 0, 218,
	372, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	238, 244, 383, 246, 217, 290, 240, 350, 253, 0,
	377, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 379, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 378, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 367, 0, 368, 0, 0, 0, 376,
	380, 381, 382, 384, 385, 386, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 371, 374, 0, 0, 0,
	201, 373, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 369,
	275, 276, 277, 278, 242, 0, 218, 372, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 238, 244, 383,
	246, 217, 290, 240, 350, 253, 0, 377, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 0, 299,
	237, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 192, 193,
	194, 195, 325, 0, 0, 356, 357, 358, 379, 342,
	0, 229, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	232, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	317, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 213, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 322,
	338, 214, 313, 351, 219, 320, 209, 286, 309, 0,
	0, 206, 336, 319, 268, 251, 252, 205, 0, 304,
	230, 243, 226, 284, 0, 335, 363, 225, 354, 0,
	346, 208, 0, 345, 283, 332, 337, 269, 263, 207,
	334, 267, 262, 255, 234, 378, 247, 295, 261, 296,
	248, 273, 272, 274, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 256, 0, 0,
	0, 364, 0, 307, 289, 0, 0, 0, 305, 259,
	333, 297, 339, 323, 347, 301, 298, 199, 324, 228,
	270, 210, 212, 224, 231, 233, 235, 236, 279, 280,
	292, 312, 326, 327, 328, 227, 220, 306, 221, 245,
	222, 200, 314, 223, 202, 293, 331, 0, 241, 302,
	266, 203, 265, 294, 330, 329, 211, 355, 361, 362,
	367, 0, 368, 0, 0, 0, 376, 380, 381, 382,
	384, 385, 386, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 360, 239, 196, 197, 343,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 359, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 250, 291, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	341, 353, 371, 374, 0, 0, 0, 201, 373, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 369, 275, 276, 277,
	278, 242, 0, 218, 372, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 238, 244, 383, 246, 217, 290,
	240, 350, 253, 0, 377, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 379, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 378, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 367, 0, 368,
	0, 0, 0, 376, 380, 381, 382, 384, 385, 386,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 371,
	374, 0, 0, 0, 201, 373, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 369, 275, 276, 277, 278, 242, 0,
	218, 372, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 238, 244, 383, 246, 217, 290, 240, 350, 253,
	0, 377, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 0, 299, 237, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 192, 193, 194, 195, 325, 0, 0, 356,
	357, 358, 379, 342, 0, 229, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 317, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 213, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 0, 335,
	363, 225, 354, 0, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 378,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 364, 0, 307, 289, 0,
	0, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 456, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 367, 0, 368, 0, 0, 0,
	376, 380, 381, 382, 384, 385, 386, 0, 0, 0,
	0, 0, 370, 815, 816, 817, 814, 0, 0, 360,
	239, 196, 197, 343, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 359, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 371, 374, 0, 0,
	0, 201, 373, 0, 0, 1423, 0, 0, 0, 0,
	344, 0, 0, 0, 352, 0, 0, 0, 0, 1242,
	369, 275, 276, 277, 278, 242, 0, 218, 372, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1425,
	0, 0, 0, 1423, 0, 0, 365, 366, 238, 244,
	383, 246, 217, 290, 240, 350, 253, 0, 377, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 1405, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1405, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 0, 0, 0, 356, 357, 358, 379,
	342, 1238, 229, 0, 0, 1235, 0, 0, 0, 1237,
	1234, 1236, 1240, 1241, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 1398, 0, 0, 1397,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 1402, 0, 0, 0, 1404,
	1406, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1418,
	1419, 1420, 1421, 1413, 0, 0, 0, 0, 0, 0,
	1405, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 0, 0, 0, 1404, 1406, 1408,
	0, 1410, 1411, 1412, 1414, 1415, 1416, 1418, 1419, 1420,
	1421, 1424, 0, 0, 0, 0, 0, 0, 1405, 0,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1245, 1246, 1247, 1248, 1249, 1250, 1243, 1244, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 1422, 1424,
	0, 0, 435, 0, 434, 441, 431, 0, 0, 0,
	0, 0, 0, 0, 0, 1401, 438, 439, 0, 440,
	444, 0, 0, 426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 0, 0, 1422, 0, 0, 0,
	0, 0, 0, 0, 1417, 0, 0, 0, 0, 0,
	0, 1407, 0, 1401, 0, 0, 0, 0, 0, 0,
	0, 0, 453, 0, 0, 455, 0, 0, 1409, 435,
	454, 434, 441, 431, 0, 0, 0, 0, 0, 1413,
	0, 0, 1417, 438, 439, 0, 440, 444, 0, 1407,
	426, 0, 0, 0, 0, 0, 0, 0, 0, 1402,
	449, 0, 0, 1404, 1406, 1408, 1409, 1410, 1411, 1412,
	1414, 1415, 1416, 1418, 1419, 1420, 1421, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1402, 0, 0,
	2232, 1404, 1406, 1408, 0, 1410, 1411, 1412, 1414, 1415,
	1416, 1418, 1419, 1420, 1421, 1424, 0, 435, 0, 434,
	441, 431, 0, 0, 2242, 0, 0, 0, 0, 0,
	0, 438, 439, 0, 440, 444, 0, 2235, 426, 0,
	0, 0, 0, 0, 2230, 0, 0, 0, 449, 2245,
	2246, 0, 1422, 1424, 0, 2231, 0, 427, 429, 428,
	0, 0, 0, 0, 0, 0, 0, 433, 0, 1401,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 437,
	455, 0, 0, 0, 0, 454, 452, 0, 0, 0,
	1422, 2236, 0, 430, 0, 0, 0, 421, 1417, 0,
	0, 0, 0, 0, 0, 1407, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 429, 428, 0, 0, 0,
	0, 0, 0, 0, 433, 0, 1417, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 452, 0, 0, 0, 0, 0, 0,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2244, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 436, 442, 0, 443, 445, 0, 0,
	446, 447, 448, 0, 0, 450, 451, 2238, 0, 0,
	0, 0, 427, 429, 428, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 2237,
	2239, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 452, 0, 0, 0, 0, 0, 0, 430, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 432,
	436, 442, 0, 443, 445, 0, 0, 446, 447, 448,
	0, 0, 450, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2233, 0, 0, 0,
	0, 0, 2243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 432, 436, 442,
	0, 443, 445, 0, 0, 446, 447, 448, 0, 0,
	450, 451,
}

var yyPact = [...]int{
	2597, -1000, -328, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -326, 29601,
	29601, -1000, -1000, 1783, -1000, 29084, 9944, 30118, 295, 289,
	30118, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 514, -1000, 28567, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 455, 31332, 30635, 7865, 30118, -302, -1000,
	2430, -163, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1922,
	536, 28050, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2767, 117, 536, 650, 657, 708, 708, 12012, -97, -101,
	2430, 253, 535, -1000, 725, 2597, 1716, 432, 30118, -1000,
	1110, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 432, -1000, -1000,
	-1000, 2430, 2430, -1000, 30118, 30118, 7, 1277, -1000, 226,
	246, 236, 1109, -1000, -1000, -1000, -1000, -1000, 2398, -1000,
	30118, 30118, 2050, 30118, -1000, 1413, 380, 31487, 2269, 894,
	544, 2144, -1000, -1000, 2116, -1000, 202, 181, 99, 318,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 128, -1000, 2311,
	-1000, -1000, 185, -1000, -1000, 170, -1000, -1000, -1000, -110,
	-1000, -1000, -1000, -1000, -1000, -1000, -174, -1000, -1000, 758,
	1512, 7865, -1000, 1368, -1000, 2721, -1000, -1000, -1000, -1000,
	5270, 9416, 9416, 9416, 9416, -1000, -1000, 1933, 7865, 2113,
	2112, -1000, -1000, -1000, -1000, 1108, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1712, 8899,
	-1000, 2110, 2109, 2105, 2095, 2090, 2082, 2070, 2061, 2060,
	2058, 2056, 2047, 2046, 2043, 1854, 1917, 2042, 1708, 1702,
	2035, 2034, 2029, 1695, 1854, 1854, 2027, 2026, 2025, 2024,
	2022, 2021, 2018, 1995, 1974, 1973, 1972, 1971, 1968, 1964,
	1963, 1961, 1960, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 288, -1000, 1107, 1006,
	-1000, 1959, 2258, 2336, 1868, 2368, 2322, 2304, 2299, 2294,
	1567, -1000, -1000, 30118, 30118, 453, 453, 453, 453, 453,
	470, 453, 499, 493, 489, 453, -1000, -1000, -1000, -1000,
	-1000, -1000, 587, -1000, -1000, -1000, -1000, 972, 30118, -1000,
	1894, 1139, 2332, 417, 406, 324, -1000, 1263, 1263, 1263,
	1139, 293, 409, 2336, 2336, -75, 1263, -130, 1139, 1139,
	-130, 1139, 1139, 1139, 49, -1000, -1000, -1000, 1263, 390,
	1263, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2302, 2297,
	455, 30118, 26, 30118, 455, 455, 461, -1000, -182, -1000,
	-1000, 628, -1000, 605, -1000, 1413, 379, 372, 985, 1254,
	-1000, 1180, 30118, 30118, 30118, 1180, 1180, 15634, 15117, -1000,
	30118, -1000, 2336, 1868, -1000, 1812, 2064, 1808, 1868, 455,
	455, 455, 455, 455, 455, 455, 455, 30118, 30118, 455,
	6821, 6821, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2265, 231, 1958, -1000, 30118, 223, 2336, 2258, 2336, -1000,
	-1000, 1106, 1565, 1694, -1000, -1000, 226, 1201, -1000, 832,
	-1000, -1000, -1000, -1000, 30118, 282, -1000, -1000, 1692, 1954,
	-1000, 404, 747, 939, -1000, 210, 31399, 24423, 1413, 24423,
	30118, -1000, -1000, -1000, -1000, -1000, -1000, -120, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 107, -1000, 7865, 7865, 7865, 7865, 7865, -1000, 468,
	8382, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9416, 9416,
	9416, 9416, 9416, 9416, 9416, 9416, 9416, 9416, 9416, 9416,
	1932, 1275, 9416, 9416, 9416, 9416, 2064, 2254, 979, 158,
	-1000, -1000, -1000, -1000, -1000, 1280, 1512, 7865, 7865, 30118,
	-1000, 30852, 7865, 7865, 2482, 7865, 2285, 7865, 7865, 7865,
	1807, 3718, 30118, 7865, -1000, 1802, 1800, -1000, -1000, 1383,
	7865, 7865, -1000, -1000, 7865, 9416, 7865, -1000, -1000, -1000,
	171, 2285, 2285, 7865, 7865, 2285, 2285, 2285, 1231, 2285,
	2285, 2285, 2285, 2285, 2285, 2285, 2285, 30118, 2242, 177,
	-1000, -1000, -1000, 1856, -1000, 1890, 1890, 1890, 1890, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1912, 1939,
	-1000, -1000, 1889, 1889, 1889, 1856, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1910, 1910, 1911, 1910, 30118, 2336, -302, 6304, -1000,
	-307, 2258, 7865, -1000, -1000, 7865, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1688, 2279, -1000, 1938, 1097, 30118,
	1202, 30118, 24423, 30118, 1413, 30118, 30118, 453, 453, 453,
	30118, 461, -1000, 30118, 972, 2277, 30118, 2379, 9416, 9416,
	27533, 1263, 1139, -1000, 30118, -1000, -1000, -1000, 1263, 30118,
	1263, 2379, 1263, -1000, -1000, -1000, 1139, 1139, -1000, -1000,
	-1000, -1000, 1263, 1263, -1000, -1000, 2379, 30118, -124, 2379,
	2379, -100, -1000, -1000, -1000, 30118, 30118, 453, 30118, 30118,
	-1000, 30118, -1000, -1000, 30118, 30999, 30118, 30118, 2289, -1000,
	24423, 30118, 22355, -1000, -164, 648, 618, 632, -1000, -1000,
	403, 449, 14083, 349, 24423, 4752, -1000, -1000, 1180, 1180,
	1180, 4752, 4752, 1115, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 967, -1000, 79, 2258, -1000, -1000, -1000, -1000, -1000,
	30118, 30118, 24423, 1413, 30118, 30118, 30118, 30118, -1000, 1937,
	30118, 914, -1000, -1000, 11495, 1096, 914, 1684, 2141, -303,
	-1000, 13048, 30118, 30118, -1000, -1000, -303, -1000, 12530, 30118,
	2258, -1000, 2258, 30118, -1000, 2326, -1000, 226, 201, -1000,
	-1000, -1000, -1000, -1000, -1000, 1085, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 954, -1000, 30118, -1000, -1000,
	210, 24423, 25457, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	106, -1000, -1000, 146, -1000, 477, 55, 1200, -1000, -1000,
	37, 143, 537, 1512, -1000, 1290, 1290, 1299, -1000, 484,
	-1000, -1000, -1000, -1000, 1933, -1000, -1000, -1000, 1535, 1054,
	-1000, 1304, 1304, 1120, 1120, 1120, 1120, 1120, 1223, 1223,
	-1000, -1000, -1000, 5270, 1932, 9416, 9416, 9416, 9416, 440,
	440, 2935, 2842, -1000, 7865, 1295, -1000, 7865, 1595, 928,
	1078, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1799, 758, 1798, 1504, 2395, 1796, 7865, -1000, -1000,
	1199, 1198, 1197, -1000, 1452, 7348, -1000, -1000, -1000, 1795,
	1056, 1794, -1000, -1000, -1000, 1793, 1193, 867, 1792, 1490,
	1790, 948, 7865, 7865, 1192, 1191, 7865, 7865, 7865, 7865,
	1788, 7865, 7865, 7865, 7865, 7865, 7865, 7865, 7865, -1000,
	7865, 154, -1000, -1000, -1000, -1000, 1564, -1000, 1563, -1000,
	-1000, -1000, 1682, 1682, -1000, 1561, -1000, -1000, -1000, -1000,
	1558, -1000, -1000, 1557, -1000, -1000, -1000, -1000, 1172, -1000,
	1512, -1000, 1678, -1000, 877, 947, -1000, 1424, -1000, -1000,
	30118, 10461, 30118, 1894, 2255, 116, -1000, 845, -1000, 55,
	-190, 824, 2016, 2389, 30118, 30118, 30118, 2276, 27016, -1000,
	1930, 1171, -1000, -1000, 7865, -1000, -1000, 1977, 30118, 30118,
	2379, -1000, -1000, -1000, -1000, -1000, -1000, 30118, 2379, 2379,
	1139, 1263, -1000, -1000, 1263, -1000, -1000, 1263, -1000, 1035,
	-1000, 30118, -1000, -1000, -1000, 1894, -1000, 10978, 787, 31193,
	-1000, 1189, 1189, 858, 1189, 1189, 1189, 1189, 356, 355,
	1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189,
	1189, 1189, 1189, 1189, 1921, -1000, 113, 2262, 220, 845,
	235, 2330, 783, -1000, -1000, -1000, -1000, 17702, 17702, 13566,
	17702, -1000, 1205, -1000, -1000, 646, 597, 613, -1000, -1000,
	474, -1000, -1000, 824, -1000, -1000, -1000, 1918, 1270, -1000,
	-1000, 1917, -1000, 4752, 4752, 4752, -1000, -1000, 18219, 30118,
	-1000, -176, -1000, -166, -1000, 943, -1000, -1000, 944, 824,
	2140, 943, 943, -1000, 10461, -1000, 2379, 6821, -1000, 22355,
	-1000, -1000, 26491, -1000, 25974, 2379, -137, -1000, 2247, 836,
	-1000, 1916, -1000, 1168, 2201, -1000, 902, -1000, 1269, 1158,
	-1000, 836, 1156, 2176, 902, -1000, -1000, 1030, 1, -1000,
	-1000, 30118, 1692, 1155, 25457, 842, -1000, 464, 1027, 1025,
	-1000, 24423, 195, 24423, -1000, 24423, -1000, -1000, 215, -1000,
	30118, 2257, -1000, -1000, -1000, 1641, -331, -1000, -1000, -1000,
	-1000, -1000, 1154, -1000, 440, 440, 2935, 2799, -1000, 9416,
	-1000, 9416, 2250, 1174, -1000, 7865, 1318, 207, 698, 17185,
	30118, -1000, -1000, 7865, 7865, -1000, 2207, -1000, -1000, -1000,
	-1000, 7865, 7865, 1406, -1000, 30118, -1000, -1000, -1000, -1000,
	17185, -1000, 9416, -1000, 7865, 859, 2174, -87, -87, 2142,
	2138, 2107, 1151, -87, 2096, 2076, 2067, 2062, 2048, 2014,
	1985, 1975, 1512, -1000, -1000, 1785, 1784, 1149, -1000, 1144,
	1778, 1143, 1122, 6304, -1000, -137, 7865, 7865, 7865, 2211,
	-1000, -1000, 109, 1777, 888, -1000, -1000, -1000, 2845, 1890,
	1890, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1912, -1000, -1000, 1889, 1889, 1889, 1856, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1910, 1910, 1911, 1910,
	-1000, 2275, -1000, -89, 1189, 450, 24423, 368, -1000, 30118,
	2132, 277, 2218, 30118, 1908, 1904, 1899, 275, 2845, 30118,
	891, -1000, 1011, 2597, -1000, 30118, 1512, -1000, 1413, -1000,
	1139, -1000, 2379, 1026, -1000, -1000, 2379, 1139, 1139, 1263,
	30118, -1000, 2273, -1000, -1000, -1000, 2845, 728, -1000, 30118,
	1329, 608, 453, 608, 1316, 1898, -1000, -1000, -1000, 30118,
	30118, 30118, 1314, 1312, 31231, -1000, 1555, -1000, 1551, 1189,
	1189, 1548, 1675, 1674, 1672, 1189, 1189, 1541, 1664, 24940,
	1540, 1522, 1514, 1559, 1662, 673, 1554, 1481, 1447, 30118,
	1895, 1612, -89, 1189, 219, 1267, 450, 1426, 14600, 30118,
	22355, 22355, 22355, 22355, -1000, 2159, 2156, -1000, 2167, 2166,
	2190, 30118, 22355, 1894, -1000, 24940, -1000, -1000, -1000, 2064,
	1099, 2196, 614, 7865, -1000, -1000, -1000, 595, 24423, 1660,
	349, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30118,
	30118, 1763, 2377, -1000, 860, -1000, -1000, 1000, -1000, 2377,
	-65, -43, 1310, -303, 6304, 242, 30118, -303, 30118, 6304,
	-1000, 30118, 240, -303, 30118, 1513, -1000, -1000, -1000, 2387,
	24423, 1413, 1127, 23906, -1000, 182, -1000, 98, 451, 1652,
	-1000, 488, 75, -1000, 1264, 1641, -1000, -1000, -1000, 9416,
	-1000, -1000, -1000, -1000, 1512, 7865, 1757, -1000, 592, 592,
	1756, -1000, 1890, 1890, -1000, 1856, 1889, 1856, 592, 592,
	1750, -1000, 1608, 1901, -1000, 1780, 1686, 7865, -1000, 1748,
	3020, 980, -206, -87, -1000, 1888, -1000, -87, -87, -87,
	-87, -1000, -87, -87, -87, -87, -87, -87, -87, -87,
	-1000, -1000, -1000, 1651, -1000, -1000, -1000, 1511, -1000, 1508,
	-1000, -65, 1512, 1512, -1000, -1000, 2216, 1649, 522, 10461,
	2234, 239, 1454, -1000, -1000, 23389, 438, -1000, -1000, -1000,
	504, 190, 1482, 382, -1000, 30118, 234, 30118, -1000, -1000,
	-1000, -1000, -1000, 2218, -1000, 791, 250, 10978, 10978, 10978,
	262, 1253, -1000, 432, 806, 999, 22355, 30118, -1000, 21838,
	1740, -1000, 824, 2379, -1000, 30118, -1000, 2379, 2379, 1139,
	-1000, 239, 31440, -1000, -1000, 30118, 30118, -1000, 30118, 30118,
	453, 7865, -1000, -1000, -1000, 30118, -1000, -1000, -1000, -1000,
	17185, 17185, -1000, -1000, -1000, -1000, 1648, 1646, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	363, 30118, 1091, -1000, 1257, 1454, 23389, 1220, 1644, 438,
	-1000, 1642, -1000, 779, 30118, 30118, -1000, 809, -1000, 1217,
	2127, 2131, 2127, -1000, -1000, -1000, -1000, 2149, -1000, 2078,
	-1000, -1000, 809, -1000, -1000, -1000, -1000, -1000, 614, -1000,
	2316, 608, 608, 608, 1738, -1000, 842, 1737, -1000, -1000,
	-1000, -1000, -1000, 2375, 2361, 22872, 2375, -309, -19, 2360,
	2359, 2406, -1000, 1735, 841, -303, -1000, -1000, 836, -1000,
	-1000, -1000, -303, -1000, 836, -1000, -1000, 1413, -1000, 96,
	-1000, -1000, -1000, -1000, -1000, -1000, 34, -1000, 30118, -1000,
	1641, 1639, 69, -1000, 1512, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7865, -1000, -1000, -1000, 1650, -1000, -1000, 7865, 1733, 1636,
	-1000, 429, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1730, 1727, -309, -1000, -1000,
	-1000, 2845, -1000, 1123, -1000, -1000, 1634, 51, -1000, -1000,
	-1000, 1632, 1631, 1451, -1000, -1000, 1425, 991, 82, -1000,
	-1000, -1000, -1000, -1000, -1000, 1426, 30118, 1887, -1000, 1189,
	1189, 1189, 30118, 1726, 840, -1000, 1722, 1697, 434, 1273,
	1243, -1000, 1429, 17702, 22355, 21838, 784, -1000, 997, -1000,
	-1000, -1000, 2379, -1000, -1000, 2379, -1000, -1000, 31440, -1000,
	-1000, 1339, 9416, -1000, -1000, 1622, 16668, 616, 580, 1886,
	-1000, 330, 2404, -1000, 1309, 1307, -1000, 30118, -1000, 1882,
	1786, 302, 1880, -1000, 1878, 1877, 30118, 1635, -1000, -1000,
	-1000, -1000, -1000, -1000, 373, 1082, -1000, 1612, 1609, -1000,
	51, 1605, -1000, -1000, -1000, 30118, 779, 779, 2373, 30118,
	6304, -1000, -1000, 7865, 1870, -1000, 7865, -1000, -1000, -1000,
	-1000, -1000, 1867, 2252, -1000, -1000, -1000, -1000, -1000, -1000,
	7865, 7865, -1000, -1000, -311, 1601, -1000, -1000, 2357, 1597,
	1575, 30118, -1000, 836, 836, 824, -1000, -1000, -100, -1000,
	-1000, -1000, 1600, -1000, 1461, -87, -1000, 2373, -1000, 2356,
	-1000, -1000, -311, -240, -1000, -1000, -1000, -1000, 211, -1000,
	-1000, 229, -1000, -1000, 1415, 456, -1000, -1000, 779, 20804,
	17185, 16668, 1596, -1000, 31231, 10978, 107, 31231, 661, 1204,
	-1000, 1427, -1000, 1417, -1000, 2379, 784, 997, -1000, -1000,
	1126, -1000, -1000, -1000, -1000, 2935, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1410,
	1861, -122, -1000, -1000, 1860, 20804, 269, 269, 20804, 20804,
	20804, 1859, 509, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2336, -1000, -1000, 1512, 30118, 1512, 21321, -1000, 2355,
	2354, 1512, 758, -313, 1402, -1000, 1593, -35, -1000, -1000,
	778, -316, -68, 8, -1000, -1000, -1000, 27, 7865, -313,
	30118, 405, 1591, -1000, -1000, 227, -1000, -1000, 1065, -1000,
	1856, 7865, -1000, -1000, -1000, 427, 31193, -1000, -1000, -100,
	427, 399, 151, -1000, 1389, -1000, -1000, 2373, -1000, 1691,
	7865, 1854, -236, 20804, 1059, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1049, 1032, 1009, 20804, -1000, -1000, -1000, 328,
	-1000, 1008, 990, -1000, -1000, -1000, -1000, -1000, 1853, -1000,
	-1000, 2353, -1000, 1579, 460, 20, 8, -1000, 2352, -73,
	2351, 2350, 1613, -1000, 3201, -1000, -1000, -1000, 758, -1000,
	2272, -1000, -1000, 24, -1000, -1000, -1000, 20804, 2251, 1456,
	304, 2349, -1000, 304, -1000, 270, -1000, 1203, -1000, 1385,
	-1000, 2336, -1000, 1446, -1000, 2122, -1000, 72, 987, -1000,
	-1000, -1000, -1000, 986, -1000, -1000, -1000, 20287, 30118, 1575,
	-1000, 1850, 1377, -19, -56, 2347, -1000, 1575, 2345, 1575,
	1575, -1000, -1000, 4235, -305, -76, 259, 1578, -1000, 206,
	-1000, -1000, 2251, -1000, 2339, 319, -1000, -1000, -1000, 1374,
	-1000, -1000, 509, -1000, 2079, 2065, 2384, -1000, -1000, -1000,
	-1000, 206, 206, 206, 206, 179, -1000, -1000, 975, -1000,
	-1000, 2259, 16151, -33, -1000, -1000, -1000, 1577, -1000, 1575,
	-1000, -1000, 1296, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1189, 1462, 252, -1000, -1000, -1000, 19770, 314, 241, 233,
	-1000, 469, -1000, -1000, -1000, -1000, 2402, -1000, 2400, 625,
	625, -1000, -1000, 30118, -1000, 30118, -1000, 966, -1000, -1000,
	-1000, 995, -1000, -1000, -1000, -1000, 4235, 1358, -1000, 30118,
	-1000, 30118, 312, 1357, 9416, 1849, 9416, 1847, 322, 1823,
	-1000, -1000, -1000, 1382, 334, -1000, -1000, 684, -1000, 1167,
	-1000, 19253, 30118, -1000, -1000, -1000, 924, 1818, 2338, -1000,
	2784, 30118, 2746, 30118, 1815, 1166, 9416, -1000, -1000, -1000,
	30118, 5787, -1000, 993, -1000, -1000, 426, 320, -1000, 899,
	-1000, 897, 18736, 1354, 2662, -1000, -1000, 1512, 30118, 887,
	-1000, 30118, 309, -1000, -1000, -1000, 881, -1000, -1000, -1000,
	-1000, 426, 2172, -1000, 1345, -1000, -1000, 31037, 547, -1000,
	-1000, 31037, 311, -1000, 421, 1814, -1000, -1000, 879, -1000,
	30118, 633, 7865, -1000, 311, 31231, -1000, 7865, 814, -1000,
	31231, 733, -1000, -1000,
}

var yyPgo = [...]int{
	0, 134, 2859, 200, 143, 139, 198, 2858, 2857, 2279,
	2277, 2856, 2854, 2853, 2851, 2850, 2836, 2832, 2830, 2829,
	2827, 2823, 2822, 2821, 2820, 2819, 2815, 2808, 2807, 2800,
	2799, 2798, 2797, 197, 2796, 2795, 2794, 2791, 2777, 2776,
	2773, 2771, 2766, 2765, 2764, 2763, 2762, 2760, 2759, 2758,
	2757, 2756, 2754, 2752, 2751, 2750, 2748, 2744, 2743, 2742,
	132, 2741, 2270, 2739, 2736, 2733, 2728, 2725, 2720, 2719,
	173, 2718, 2717, 2716, 2715, 2713, 2711, 2709, 2708, 2707,
	2703, 2701, 2700, 2699, 2698, 2697, 2696, 2695, 126, 2690,
	2689, 121, 2688, 2687, 2686, 2685, 193, 179, 50, 2683,
	35, 2681, 2678, 2677, 2676, 2675, 68, 2674, 2673, 165,
	162, 204, 1338, 202, 201, 153, 117, 69, 2671, 2283,
	2669, 167, 185, 128, 21, 2668, 137, 2665, 114, 36,
	28, 208, 102, 39, 115, 87, 2663, 180, 66, 2662,
	80, 2661, 2660, 207, 154, 2655, 90, 2653, 2652, 2651,
	2650, 160, 89, 2648, 52, 2647, 125, 743, 86, 92,
	2646, 2645, 2644, 67, 2642, 2641, 2640, 2636, 141, 2635,
	2633, 93, 65, 2632, 2631, 2630, 45, 187, 58, 2629,
	60, 2628, 2625, 2624, 2623, 49, 2622, 2620, 16, 18,
	20, 2619, 15, 2618, 2617, 1, 2612, 181, 55, 76,
	113, 2608, 380, 2606, 2605, 2603, 131, 2602, 413, 2601,
	2600, 2599, 2598, 22, 2597, 168, 38, 2596, 72, 94,
	88, 164, 158, 2595, 2594, 2593, 161, 71, 54, 0,
	2585, 119, 2584, 2583, 2582, 206, 2581, 189, 169, 188,
	146, 209, 120, 2580, 2574, 64, 2573, 110, 70, 91,
	7, 2572, 156, 2571, 599, 142, 2569, 171, 2568, 124,
	6, 108, 2567, 2566, 34, 228, 2565, 2564, 2563, 107,
	2562, 2561, 99, 104, 2556, 2555, 2552, 31, 2551, 29,
	25, 2549, 77, 2548, 195, 2547, 135, 101, 147, 136,
	111, 182, 186, 53, 56, 2546, 944, 105, 74, 23,
	2545, 184, 2544, 199, 183, 2543, 157, 2541, 196, 274,
	172, 2540, 148, 8, 33, 26, 2539, 9, 2536, 109,
	2535, 2534, 12, 2533, 17, 2532, 2531, 2530, 2529, 4,
	2527, 2526, 2525, 2, 5, 2524, 3, 175, 2523, 2522,
	2521, 2520, 37, 150, 2519, 97, 151, 2518, 2516, 73,
	2515, 2514, 2513, 722, 2512, 2511, 2510, 2509, 2508, 2507,
	2503, 2502, 2501, 2500, 75, 42, 2499, 2498, 2497, 2496,
	59, 106, 2493, 2492, 2491, 2490, 30, 123, 2489, 19,
	2485, 24, 27, 32, 2484, 100, 2483, 13, 152, 2482,
	2481, 14, 2480, 2479, 10, 11, 2477, 2476, 85, 2475,
	63, 44, 118, 78, 2473, 61, 178, 95, 2472, 2471,
	194, 203, 170, 2470, 129, 190, 210, 2469, 174, 2468,
	2467, 2464, 2463, 2462, 2461, 1234, 2460, 2459, 191, 43,
	62, 83, 2456, 2454, 2453, 57, 116, 81, 82, 163,
	2452, 159, 2451, 2448, 79, 2447, 2446, 2444, 2443, 2428,
	155, 2426, 2425, 2423, 192, 145, 2420,
}

//line mysql_sql.y:8927
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 449, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 94, 447, 447, 447, 448, 448,
	92, 81, 93, 397, 397, 396, 396, 395, 395, 350,
	350, 394, 394, 394, 393, 393, 393, 392, 392, 391,
	391, 390, 390, 388, 388, 389, 387, 386, 386, 386,
	384, 384, 384, 380, 380, 382, 381, 381, 383, 375,
	375, 378, 378, 376, 376, 376, 376, 379, 374, 374,
	374, 373, 373, 80, 80, 80, 298, 298, 79, 79,
	312, 312, 312, 312, 312, 310, 310, 310, 310, 310,
	310, 309, 309, 308, 308, 313, 313, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 71, 71, 71,
	71, 74, 74, 74, 75, 307, 307, 307, 72, 73,
	73, 297, 297, 302, 302, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 306, 306, 306,
	304, 304, 303, 303, 305, 305, 65, 65, 65, 68,
	67, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	66, 66, 66, 66, 66, 66, 61, 61, 61, 61,
	61, 60, 60, 62, 62, 294, 294, 293, 76, 76,
	77, 451, 451, 450, 452, 452, 452, 452, 78, 84,
	84, 84, 84, 84, 84, 84, 83, 83, 86, 86,
	85, 87, 70, 70, 70, 70, 70, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 421, 421, 421, 423,
	423, 233, 234, 453, 236, 232, 232, 232, 417, 417,
	418, 419, 420, 420, 420, 82, 7, 7, 7, 7,
	7, 7, 59, 64, 193, 193, 193, 194, 194, 194,
	194, 194, 57, 63, 63, 434, 434, 58, 441, 441,
	353, 353, 247, 247, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	357, 358, 243, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 40, 39, 39,
	39, 283, 283, 38, 454, 454, 222, 222, 48, 49,
	50, 51, 52, 53, 37, 47, 47, 47, 47, 47,
	47, 47, 47, 47, 56, 56, 369, 369, 456, 456,
	456, 54, 55, 352, 352, 352, 46, 45, 44, 43,
	42, 42, 36, 36, 35, 35, 41, 104, 105, 240,
	240, 240, 242, 242, 238, 455, 455, 324, 324, 241,
	241, 34, 34, 34, 34, 239, 239, 221, 237, 237,
	237, 8, 8, 6, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 18, 19, 21, 291, 291,
	288, 20, 14, 13, 16, 12, 15, 17, 5, 5,
	5, 5, 9, 9, 10, 116, 116, 158, 158, 429,
	429, 425, 425, 426, 426, 426, 427, 427, 428, 428,
	88, 363, 363, 363, 363, 363, 363, 4, 139, 139,
	138, 138, 362, 362, 362, 362, 362, 362, 295, 295,
	406, 406, 406, 407, 137, 137, 132, 132, 364, 364,
	261, 408, 408, 372, 372, 371, 371, 370, 370, 135,
	135, 136, 136, 119, 119, 97, 97, 377, 377, 377,
	377, 385, 385, 349, 349, 185, 185, 216, 216, 217,
	217, 109, 109, 110, 110, 110, 110, 110, 110, 414,
	414, 416, 416, 415, 134, 134, 130, 130, 131, 131,
	131, 129, 129, 128, 127, 127, 126, 124, 124, 124,
	125, 125, 125, 112, 112, 112, 111, 111, 111, 111,
	111, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 113, 113, 422, 422, 422, 354, 354,
	354, 360, 360, 199, 199, 200, 200, 198, 198, 114,
	114, 115, 115, 115, 115, 197, 197, 196, 117, 117,
	123, 122, 122, 118, 118, 118, 118, 207, 207, 206,
	206, 206, 206, 91, 95, 95, 96, 142, 142, 205,
	204, 204, 204, 141, 141, 140, 140, 133, 133, 121,
	121, 121, 121, 203, 120, 201, 446, 446, 445, 445,
	444, 442, 442, 442, 443, 443, 443, 443, 399, 399,
	399, 399, 399, 227, 227, 227, 231, 231, 230, 230,
	230, 230, 230, 235, 3, 3, 3, 3, 3, 25,
	25, 25, 25, 25, 25, 25, 31, 150, 151, 30,
	143, 143, 144, 144, 145, 145, 146, 147, 147, 147,
	149, 148, 29, 22, 430, 433, 431, 431, 435, 435,
	435, 436, 436, 436, 437, 437, 23, 101, 106, 106,
	103, 108, 108, 108, 108, 108, 102, 432, 438, 438,
	438, 292, 292, 289, 290, 290, 287, 286, 286, 286,
	440, 440, 439, 439, 439, 228, 228, 24, 282, 282,
	284, 285, 285, 285, 276, 276, 276, 276, 28, 280,
	280, 281, 281, 281, 281, 281, 277, 277, 279, 279,
	275, 275, 275, 275, 275, 27, 107, 107, 274, 274,
	272, 272, 270, 270, 271, 271, 269, 269, 269, 273,
	273, 26, 26, 26, 99, 98, 98, 98, 219, 219,
	218, 218, 100, 32, 170, 170, 338, 338, 338, 338,
	338, 356, 356, 356, 339, 339, 339, 340, 340, 340,
	341, 341, 341, 341, 341, 355, 355, 314, 314, 315,
	315, 315, 318, 318, 330, 330, 331, 331, 329, 329,
	336, 336, 335, 335, 334, 334, 333, 333, 332, 332,
	332, 332, 327, 327, 326, 326, 316, 316, 316, 316,
	316, 317, 317, 317, 325, 325, 328, 328, 176, 176,
	177, 177, 177, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 404, 404, 405, 179, 179, 179, 183, 183,
	183, 183, 183, 183, 178, 178, 180, 180, 159, 159,
	157, 157, 152, 152, 153, 153, 154, 154, 155, 155,
	156, 156, 156, 156, 156, 156, 300, 300, 402, 402,
	403, 403, 398, 398, 398, 401, 401, 401, 401, 401,
	400, 400, 160, 214, 214, 214, 229, 229, 229, 229,
	213, 213, 213, 175, 175, 174, 174, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 299, 299, 244, 244, 245, 245, 192, 191,
	191, 191, 191, 191, 189, 190, 188, 188, 188, 188,
	188, 187, 187, 186, 186, 186, 278, 278, 184, 184,
	182, 182, 182, 181, 181, 181, 337, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	253, 253, 258, 258, 413, 413, 412, 161, 161, 161,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 171,
	171, 171, 322, 322, 322, 322, 322, 323, 323, 323,
	320, 320, 321, 321, 262, 263, 263, 361, 361, 319,
	319, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 368, 368,
	368, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 424, 424, 424,
	409, 409, 409, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 211, 211, 211, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 264, 264,
	265, 265, 365, 365, 365, 365, 365, 365, 366, 366,
	367, 367, 367, 367, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 251, 208, 208, 208, 266, 259, 259,
	260, 260, 254, 254, 254, 254, 254, 254, 254, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 255, 255, 257, 257, 268, 268, 268, 267, 267,
	267, 267, 267, 267, 267, 173, 173, 173, 173, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	163, 163, 163, 163, 167, 167, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	168, 168, 168, 168, 166, 166, 166, 166, 166, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 89, 90, 90, 165, 215,
	215, 342, 342, 345, 345, 343, 343, 344, 346, 346,
	346, 347, 347, 347, 348, 348, 348, 351, 351, 220,
	220, 220, 226, 226, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	10, 10, 2, 0, 2, 1, 3, 3, 3, 0,
	2, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 3, 0, 1, 3, 0, 1, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 8, 5, 7, 0, 3, 8, 5,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 4, 1, 3, 1, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 6, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 2, 2, 1, 2, 2, 2,
	3, 2, 7, 7, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 4, 4, 4, 1, 1, 1, 3, 2,
	3, 1, 1, 1, 6, 8, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 4,
	6, 7, 4, 4, 7, 8, 3, 3, 3, 0,
	2, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 4, 1, 3, 1, 1, 3,
	5, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 4, 1, 3,
	1, 4, 6, 4, 4, 4, 3, 6, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 0, 2,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	3, 2, 3, 1, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 7, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 8, 0, 2,
	6, 0, 2, 2, 3, 3, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 2, 0,
	6, 8, 6, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	4, 3, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -449, -2, -1, -3, -92, -4, -88, -5, -6,
	-8, -69, -83, -85, -87, -86, -33, -7, -82, -60,
	-61, -65, -71, -76, -79, -80, -81, -93, -89, -90,
	-91, -109, -94, -25, -24, -23, -22, -101, 405, 12,
	451, -9, -10, -414, -11, 234, -232, -233, -234, -236,
	-453, -34, -35, -36, -42, -43, -44, -45, -46, -54,
	-55, -56, -37, -38, -39, -40, -48, -49, -50, -51,
	-52, -53, -41, -104, -105, -58, -57, -63, -59, -64,
	-103, 209, -62, 61, -66, -67, -68, -72, -73, -74,
	-75, -77, -78, 336, 342, 395, 537, 538, 46, -110,
	-112, 539, -26, -27, -28, -29, -30, -31, -32, 205,
	14, 484, -12, -15, -13, -16, -14, -20, -21, -19,
	-17, -18, -102, 229, 228, 37, 292, 293, 294, 340,
	227, 206, 13, 137, 138, 140, 141, 30, 41, 318,
	-111, 67, 207, -113, 10, 541, 540, -119, 38, -157,
	-229, 70, 78, -223, -225, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 454, 524, 525, 526, 527, 316, 317, 481, 246,
	270, 366, 273, 280, 137, 156, 150, 178, 170, 145,
	250, 285, 251, 77, 140, 437, 88, 417, 392, 143,
	265, 267, 269, 272, 252, 166, 161, 264, 248, 537,
	159, 253, 39, 254, 183, 255, 256, 486, 413, 315,
	419, 277, 390, 160, 414, 268, 416, 185, 189, 429,
	342, 154, 155, 421, 431, 182, 226, 42, 483, 238,
	432, 187, 181, 177, 440, 281, 279, 180, 153, 176,
	249, 50, 191, 190, 192, 386, 387, 388, 389, 257,
	258, 330, 428, 173, 162, 320, 146, 22, 435, 233,
	418, 343, 259, 274, 282, 186, 188, 240, 245, 485,
	394, 244, 278, 433, 158, 237, 266, 232, 436, 147,
	336, 345, 260, 141, 271, 430, 439, 49, 358, 152,
	144, 223, 138, 242, 247, 11, 261, 262, 263, 284,
	283, 275, 174, 239, 179, 164, 151, 175, 139, 241,
	438, 359, 535, 318, 375, 172, 169, 243, 216, 434,
	420, 142, 379, 360, 167, 286, 531, 532, 533, 331,
	314, 287, 288, 165, 230, 411, 412, 289, 291, 385,
	307, 361, 393, 367, 362, 198, 295, 423, 184, 534,
	296, 297, 298, 415, 299, 300, 301, -119, -62, -10,
	-9, -111, -112, -157, 213, -237, 23, 390, -70, 391,
	209, 67, -229, -5, -4, -88, -60, -109, -235, -229,
	292, 292, -235, 213, -229, 244, 374, -353, 219, -309,
	-282, 245, -308, -284, -311, -285, 31, 205, 207, 206,
	241, 14, 340, 215, 12, 10, 341, 227, 24, 25,
	27, 13, 342, 344, 28, 345, 348, 349, 350, 41,
	353, 354, 234, 70, 78, 73, 252, -151, -229, -260,
	-254, 95, 235, -256, -249, -250, -252, -394, -388, -248,
	67, 121, 122, 129, 96, -251, -337, 35, 98, 491,
	452, -209, -210, -211, -212, -229, -389, -387, 73, 79,
	82, 85, 86, 84, 83, 163, 81, 74, 133, 134,
	-112, 70, -409, 499, -224, 520, 524, 525, 526, 527,
	519, 46, -359, -367, 212, -365, 132, 168, 230, 164,
	12, 127, 385, 165, 496, 516, 454, 500, 523, 493,
	494, 488, 489, 490, 492, 501, 503, 515, -368, 511,
	521, 522, 509, 72, 71, 514, 513, 502, 497, 498,
	504, 487, 495, 505, 506, 512, 517, 518, 324, 88,
	325, 326, 444, 319, 327, 219, 390, 55, 328, 329,
	330, 331, 332, 451, 333, 56, 334, 323, 234, 375,
	335, 167, 184, 456, 455, 457, 448, 445, 443, 446,
	447, 449, 450, 507, 508, 510, -305, -303, -229, -95,
	-96, 529, -128, -129, -202, 19, 6, 7, 8, 9,
	-447, 392, 485, 295, 337, 216, 316, 375, 299, 244,
	-276, -274, -355, 289, 285, 214, 224, 223, 89, 444,
	212, 351, -425, -426, 202, 203, 204, -416, 477, -415,
	-229, 326, 26, 213, 337, 423, 424, 425, 426, 427,
	-47, -369, -352, 420, 419, -241, 412, 418, 410, 422,
	413, 317, 301, 300, 205, 478, -220, 361, 393, 240,
	441, 442, 338, 394, 429, 430, 414, 88, 171, 168,
	216, 213, 316, 444, 375, 299, -425, 142, 139, -296,
	142, 94, 147, 146, -296, 244, 374, 40, -302, 385,
	-301, -303, 429, 430, 440, 71, 72, 428, -220, 88,
	411, 411, -129, -202, -128, -110, -112, -91, -414, 214,
	316, 375, 244, 215, 213, 216, 444, 292, 337, 299,
	-354, -422, 31, -360, 199, 200, 201, 32, 33, -1,
	73, -135, 236, -157, 135, -135, -129, -128, -129, -157,
	-213, -229, 392, 104, -70, -70, 391, -417, -418, -419,
	-421, 209, 391, 390, 135, 15, -235, -235, 65, -157,
	-284, 244, -309, -282, 35, 64, 136, 217, 136, 64,
	67, 338, 316, 375, 339, 444, 213, 351, 216, 244,
	352, 316, 375, 213, 216, 444, 244, 316, 213, 216,
	375, 244, 352, 410, 411, 216, 26, 343, 346, 347,
	411, -373, 440, 136, 94, 91, 92, 93, -254, 111,
	-267, 104, 105, 106, 107, 108, 109, 110, 118, 117,
	128, 121, 122, 123, 124, 125, 126, 127, 119, 120,
	114, 95, 112, 116, 113, 97, -112, -254, -260, 46,
	-252, -252, -252, -252, -337, -258, -254, 67, 67, 135,
	73, -254, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, -366, 67, 67, -264, -265, 67,
	67, 67, 73, 73, 67, 67, 67, 73, -265, -265,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 136, -163, -167,
	-164, -166, -165, -169, -168, 168, 169, 132, 172, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 30,
	184, 230, 164, 165, 166, 167, 185, 150, 170, 482,
	193, 151, 194, 152, 195, 153, 196, 154, 155, 197,
	156, 159, 160, 161, 158, 135, -129, 136, 67, -97,
	38, -131, 21, -113, -112, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 79, -150, -229, -143, -229, -272,
	219, -272, -272, -272, -272, 215, -272, 213, 213, 213,
	-272, -427, 149, 136, -416, -134, 67, -240, 112, 116,
	23, 242, 242, 279, -454, -455, 15, 114, -238, -455,
	-238, -240, -456, 215, 421, 42, 243, 242, -130, -131,
	-130, 415, 411, -324, 416, 417, -242, -455, -241, -240,
	-240, -241, -240, -240, -240, 213, 216, 444, 299, -454,
	242, -454, 30, 30, -353, -157, -353, 478, -221, -229,
	-353, -353, -428, 218, 433, 484, 145, 146, 147, -284,
	244, 244, 136, 104, 23, -304, 104, 115, -303, -303,
	-303, -304, -304, -178, 40, -228, 132, -229, 73, -178,
	40, -451, -450, -157, -130, -113, -112, 68, 68, 68,
	-353, -353, -353, -353, -353, -353, -353, -353, -235, -143,
	-353, -114, -115, 123, -254, -229, -114, 38, -362, 46,
	-109, 67, 30, 67, -229, -363, 46, -109, 67, 30,
	-130, -97, -131, 135, 79, 73, -70, 68, 136, -420,
	85, 86, -423, 182, 174, -229, -84, 73, -3, -4,
	-5, -6, -33, -60, -109, -390, -388, 67, 31, 384,
	64, 15, -310, 213, 444, 337, 240, 216, 316, -308,
	-291, -288, -286, -228, -284, -287, -286, -313, -213, 411,
	-98, 396, 291, -254, -254, -254, -254, -254, 84, 95,
	314, 85, 86, -249, -268, 31, 287, 288, -250, -250,
	-250, -250, -250, -250, -250, -250, -250, -250, -250, -250,
	-257, -266, -337, 67, 114, 112, 116, 113, 97, -252,
	-252, -250, -250, 68, 136, -413, -412, 99, -254, -254,
	-229, -410, -411, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 328, 323, 329, 327, 319, 335,
	330, 331, 167, 475, 476, 469, 470, 471, 472, 473,
	474, -259, -260, -259, -254, -410, -259, -208, 32, 31,
	-260, -260, -260, 68, -254, -424, 312, 311, 313, -132,
	-229, -259, 68, 68, 68, 79, -260, -260, -259, -250,
	-259, -411, -208, -208, -260, -260, -208, -208, -208, -208,
	123, -208, -208, -208, -208, -208, -208, -208, -208, -303,
	40, -348, 359, 358, -342, -344, 67, -343, 67, -343,
	-343, -343, 67, 67, -345, 67, -345, -345, -342, -346,
	67, -346, -347, 67, -346, -229, -130, -96, -371, -370,
	-254, 40, 530, -97, -254, -127, -126, -254, -448, 73,
	34, 67, 135, -157, 95, -430, -229, -292, -289, -286,
	-229, -282, -229, -229, -272, -272, -272, -157, -428, -415,
	34, -133, -229, -198, 16, -252, -252, -286, 244, -454,
	-240, -222, -221, -242, -237, -242, -198, -455, -240, -240,
	-242, -238, -198, -229, 411, -198, -198, -324, -239, -229,
	-239, -272, -221, -222, -222, -157, -193, 210, 207, -177,
	-195, 356, 246, -273, 250, 77, 251, 392, 252, 215,
	254, 255, 256, 226, 257, 258, 259, 385, 260, 261,
	262, 263, 339, 6, 302, 40, -430, -430, 30, -292,
	-229, -122, -117, -121, -118, -123, -201, -203, -120, 67,
	-157, -112, -229, 434, 435, 143, 146, 145, 31, 384,
	-307, 384, 31, -282, -301, -297, 73, 385, -287, -306,
	64, 132, -370, -304, -304, -304, -306, -306, 131, 136,
	-452, 433, 434, 202, -97, -159, -157, -430, -291, -282,
	-229, -159, -159, -229, 67, -229, -197, 136, -196, 15,
	-230, -229, 34, 73, 135, -197, 73, -295, 64, -364,
	-261, -408, 529, -137, 68, -132, -406, -407, -132, -136,
	-229, -364, -137, 68, -406, -97, -97, -229, 23, -70,
	-418, 135, 136, -133, -310, -290, -287, -312, 123, -229,
	-298, 136, 484, 542, 71, 217, -440, -439, 376, 68,
	136, -374, 218, 451, 73, 543, 198, 84, 314, 85,
	86, -337, -260, -257, -252, -252, -250, -250, -255, 231,
	-255, 94, -254, -253, -412, 101, -254, 34, 136, 65,
	135, 68, 68, 15, 15, 68, -254, 68, 68, 68,
	68, 15, 15, -254, 68, 135, 68, 68, 68, 68,
	65, 68, 136, 68, 136, -260, -254, 68, 68, -254,
	-254, -254, -260, 68, -254, -254, -254, -254, -254, -254,
	-254, -254, -254, -351, 360, 79, 79, -215, 73, -215,
	79, 79, 79, 136, 68, 73, 136, 22, 136, -124,
	36, 37, -151, -144, -145, -146, -147, -163, -213, 169,
	172, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 230, 164, 165, 166, 167, 185, 150, 170,
	151, 152, 153, 154, 155, 156, 159, 160, 161, 158,
	-229, -134, 35, -433, 363, -441, 136, 40, -439, 444,
	-275, 65, -107, 15, -157, -157, -157, -170, 34, 15,
	-116, -158, -229, 67, 68, 136, -254, -283, 65, -229,
	-222, -198, -157, -229, -198, -198, -240, -242, -242, -238,
	135, -221, -134, -154, -160, -155, -213, -245, -156, 222,
	220, 224, -403, 89, 225, 276, 90, 215, -194, 215,
	90, 221, 225, 220, 136, -195, -226, 104, -226, -220,
	131, -226, -226, -226, -226, 253, 253, -226, -226, -226,
	-226, -226, -226, -226, -226, -226, -226, -226, -226, -226,
	-226, 67, -434, 363, 30, 322, -441, -108, 316, 30,
	-204, -205, -206, -207, 53, 57, 59, 54, 55, 56,
	60, 30, 136, -227, -231, 34, -229, 73, -227, -112,
	-117, -122, -227, 67, 144, 147, 147, 146, 217, 67,
	104, -306, -306, -306, 40, -228, -450, 440, 434, 136,
	64, -144, -198, -115, -117, -229, 73, -229, 123, -198,
	-377, 416, 39, 136, 67, 68, 136, 46, 136, 104,
	68, 136, 68, 46, 135, 392, -229, -388, 68, -312,
	136, 217, 135, 135, -288, 342, -228, -290, 20, 484,
	-213, 38, -219, -218, 73, 543, 68, -255, -255, 94,
	-252, -249, 68, 102, -254, 100, -161, -163, 358, 359,
	-162, -168, 132, 168, 230, 167, 166, 164, 358, 359,
	-178, -229, -254, -254, 68, -254, -254, 15, -229, -178,
	-250, -254, -129, 68, -319, 406, -319, 68, 68, 68,
	68, -319, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 136, 68, 68, 68, 136, 68, 136,
	-370, -377, -254, -254, -126, -125, 43, 350, 68, 136,
	-163, 34, -436, 418, 365, -226, -247, -246, 318, 41,
	-357, 385, 371, 372, -289, 244, -229, 64, 306, 307,
	308, 309, -270, -271, -269, -273, -430, 67, 67, 67,
	-338, 296, -163, -157, -116, -229, 15, 136, -429, 135,
	-1, -229, -282, -240, -198, -455, -198, -240, -240, -242,
	-229, 34, -163, -156, -229, 90, -402, -403, -272, -402,
	90, 67, -229, -229, -229, 90, 90, -195, 79, 79,
	-226, -226, 79, 73, 73, 73, -226, -226, 79, 73,
	-231, 79, 79, 79, 79, 40, 73, -183, 40, 264,
	268, 265, 266, 267, 79, 40, 79, 40, 79, 40,
	-229, 67, -404, -405, 73, -436, -226, 322, 104, -247,
	-106, 77, 31, -138, 210, 207, -430, -294, -293, -213,
	-121, -121, -121, -121, 53, 53, 53, 58, 53, 58,
	53, -206, -294, -123, -134, -231, 68, -446, -445, -444,
	-442, 61, 218, 62, -259, 147, -290, -243, 73, -297,
	-157, -157, 68, -200, 17, 135, -200, -385, 402, 397,
	399, 90, -261, -372, -371, 46, -109, -132, -364, -407,
	-370, -229, 46, -109, -364, -229, 79, 15, -287, -282,
	123, 123, -229, 343, -298, 73, 364, 73, 213, 544,
	136, 104, -219, -249, -254, 68, -171, 155, 154, -171,
	68, -343, -343, -342, -345, -342, -171, -171, 68, 68,
	23, 68, 68, 68, -254, 68, 68, 136, -361, 453,
	-319, 67, -319, -319, -319, -319, -319, -319, -319, -319,
	-319, -319, -319, -319, 73, 79, 79, -385, 44, 45,
	73, 211, -146, 40, -109, -437, 77, -431, 73, -229,
	-438, 77, 366, 134, 320, 40, 367, 368, 382, 315,
	79, 79, 373, -432, -229, -139, 316, -157, -269, -220,
	131, 255, 299, -152, -153, -154, -152, -152, -339, 298,
	20, 79, 122, -135, 65, 135, -117, -158, -229, 123,
	68, -198, -229, -198, -198, -240, -109, -175, -174, -172,
	84, 95, 40, 356, -173, 77, 131, 269, 247, 270,
	-192, -244, 64, 362, 220, 89, 90, 344, -245, -398,
	-400, -229, -400, -229, -398, -398, -272, -254, -229, -178,
	-178, 73, 73, -179, 247, -159, 68, 136, 104, -437,
	-431, 104, 73, -438, 73, 136, -138, -138, -198, 136,
	104, -141, -140, 64, 65, -142, 64, -140, 53, 53,
	-198, -444, -443, 23, -403, -403, -403, 68, 68, -199,
	18, 20, 123, -199, -349, 531, -381, -383, 397, 20,
	20, 13, 68, -364, -364, -282, -298, 385, -157, -218,
	73, 544, -254, 68, -254, 68, 73, -263, -262, 236,
	68, 68, -349, -148, -163, -248, 73, -435, 376, 73,
	73, 79, 40, 79, 134, 369, -358, -106, -138, 67,
	-226, -226, -226, -229, 68, 136, 68, 68, -340, 235,
	79, 122, 79, 122, 79, -227, -117, -229, -198, -429,
	135, -198, -198, -172, 84, -250, 73, -180, -228, 132,
	-181, 40, 268, 264, -182, 40, 248, 249, -184, 67,
	276, 13, 90, 90, -157, 67, 65, 286, 67, 67,
	67, -400, 68, 248, 249, 68, -405, 73, -435, 73,
	-430, -129, -293, -370, -254, 67, -254, 67, 53, 19,
	17, -254, -260, -185, 532, 73, 20, 73, -379, 73,
	-294, -100, -375, -324, 68, 68, -319, -129, 20, -185,
	483, 20, 484, 319, 40, 79, 40, 370, -277, -279,
	-213, 67, -178, -180, 73, -176, -177, -154, -99, -98,
	-176, -341, 138, 79, 122, 79, 79, -198, -198, 79,
	67, -365, -278, 67, -277, -401, 306, 307, 308, 310,
	309, -401, -277, -277, -277, 67, -300, -299, 277, 95,
	-130, -133, -399, -229, 220, 20, 20, -216, 533, 79,
	73, 399, -350, 534, -384, 402, -378, -376, 397, 398,
	399, 400, -321, -320, -323, 403, 278, 409, -260, -216,
	-149, -229, 73, 364, 73, 319, 68, 136, -342, -254,
	-314, 236, -100, -314, -356, 146, 297, 484, 79, 122,
	79, -129, 68, -254, -264, -187, -186, 480, -277, 68,
	68, 68, 68, -277, 277, 68, 68, 136, 67, 20,
	73, -386, 218, -382, -383, 401, -376, 20, 399, 20,
	20, 68, -322, 97, 369, 373, -254, 34, 385, -280,
	-279, -124, 68, -315, 285, 20, -315, 297, 79, 122,
	79, -130, 68, -191, -189, -190, 64, 414, 274, 275,
	68, -280, -280, -280, -280, 68, -229, 220, -217, -229,
	-379, -393, 67, 79, -381, -380, -382, 20, -379, 20,
	-379, -379, -322, 529, 407, 408, 407, 408, 73, -281,
	226, 77, 484, 304, 305, -124, 20, -316, 278, 279,
	-317, -328, 281, 79, -299, -190, 64, -189, 64, 14,
	13, -192, 68, 136, -397, 30, 68, -392, -391, -214,
	-387, -229, 402, 403, 73, -379, 94, -226, 73, 303,
	-213, 67, -326, 282, 67, -324, 67, -324, 90, 307,
	-188, 271, 272, 30, 146, -188, -229, -396, -395, -394,
	68, 136, 135, -322, 79, -229, -313, -318, 283, 79,
	-250, 67, -250, 67, -325, 280, 67, 84, 40, 273,
	136, 104, -391, -229, 68, -330, 67, 20, 68, -313,
	68, -313, 67, 104, -250, -395, 40, -254, 135, -331,
	-329, 236, -317, 68, 68, 68, -313, 79, 68, -229,
	68, 136, -229, -327, 284, 68, -329, -332, 46, 79,
	-336, -333, 67, -195, 238, 114, -336, -195, -335, -334,
	283, 239, 67, 68, 136, -229, 235, 67, -260, -334,
	-333, -260, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 694, 695, 696, 697, 698, 0, 0,
	0, 468, 469, 0, 443, 0, 0, 0, 0, 0,
	0, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 365, 366, 296, 297, 298, 299, 300,
	301, 0, 231, 227, 206, 207, 208, 167, 168, 169,
	170, 238, 239, 320, 0, 0, 0, 0, 0, 551,
	-2, 35, 699, 700, 701, 702, 703, 704, 705, -2,
	481, 0, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 285, 286, 287, 281, 282, 284, 283,
	-2, 0, 481, 220, 0, 211, 211, 0, 0, 0,
	571, 0, 0, 586, 608, 33, 0, 529, 0, 534,
	940, 976, 977, 978, 979, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 529, 232, 470,
	471, 571, 571, 441, 0, 267, 0, 1430, 271, 0,
	0, 0, 438, 262, 263, 264, 265, 266, 0, 693,
	0, 0, 258, 0, 226, 1489, 0, 0, 0, 0,
	0, 0, 111, 768, 113, 770, 117, 124, 0, 0,
	129, 130, 133, 134, 135, 136, 137, 0, 141, 0,
	143, 146, 0, 148, 149, 0, 152, 153, 154, 0,
	164, 165, 166, 771, 772, 773, -2, 42, 708, 1355,
	1250, 0, 1257, 1258, 1269, 1280, 1049, 1050, 1051, 1052,
	0, 0, 0, 0, 0, 1059, 1060, 0, 1072, 1589,
	0, 1066, 1067, 1068, 1069, 51, 63, 64, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 0, 1223,
	1036, 976, 0, 1597, 0, 1617, 1622, 1623, 1624, 1625,
	1616, 0, 0, 1208, 0, 1198, 0, 0, -2, -2,
	0, 0, 1557, -2, 1594, 1613, 1621, 1598, 1620, 1591,
	1592, 1586, 1587, 1588, 1590, 1599, 1601, 1612, 0, 1608,
	1618, 1619, 0, 65, 66, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1214, -2,
	1216, 1217, 1219, 1220, 1221, 1222, -2, 1225, 1226, 1227,
	-2, -2, 1230, 1231, 1232, 1233, 1234, 1235, 1238, -2,
	1240, -2, -2, 1210, 1211, 1212, 1213, 1202, 1203, 1204,
	1205, 1206, 1207, -2, -2, -2, 0, 204, 202, 571,
	644, 0, -2, 0, 0, 0, 591, 594, 597, 600,
	0, 36, 37, 0, 0, 800, 800, 800, 800, 800,
	0, 800, 0, 0, 0, 800, 775, 776, 777, 798,
	799, 846, 486, 482, 483, 484, 485, 559, 0, 561,
	564, 419, 368, 0, 0, 0, 380, 374, 0, 0,
	419, 0, 0, 566, 566, 0, 422, 429, 419, 419,
	-2, 419, 419, 419, 0, 385, 386, 387, 374, 0,
	374, 391, 392, 393, 404, 405, 430, 1379, 0, 0,
	320, 0, 320, 0, 320, 320, 488, 221, 222, 210,
	212, 0, 216, 0, 209, 1489, 0, 0, 178, 1557,
	183, 0, 1437, 1503, 1452, 0, 0, 1470, 0, -2,
	0, 248, 566, 0, 572, 0, 571, 0, 0, 320,
	320, 320, 320, 320, 320, 320, 320, 0, 0, 320,
	0, 0, 609, 610, 605, 606, 607, 611, 612, 3,
	0, 0, 0, 533, 0, 0, 566, -2, 0, 442,
	268, 980, 0, 0, 272, 273, 0, 0, 288, 0,
	291, 276, 277, 278, 0, 0, 260, 261, 0, 0,
	228, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 121, 118, 125, 128, 138, 145, 0, 157, 159,
	162, 119, 126, 131, 132, 139, 160, 120, 122, 123,
	127, 161, 163, 140, 144, 158, 142, 147, 150, 151,
	156, 0, 92, 0, 0, 0, 0, 0, 1256, 0,
	0, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1250, 0, 0,
	1055, 1056, 1057, 1058, 1061, 0, 1073, 0, 0, 0,
	1309, 0, 1248, 1248, 0, 1248, 1244, 0, 0, 0,
	0, 0, 0, 1248, 1186, 0, 0, 1188, 1199, 0,
	0, 0, 1192, 1193, 1248, 0, 1248, 1197, 1182, 1183,
	0, 1244, 1244, 0, 0, 1244, 1244, 1244, 1244, 1244,
	1244, 1244, 1244, 1244, 1244, 1244, 1244, 0, 1356, 1374,
	1311, 1312, 1313, 1361, 1315, 1365, 1365, 1365, 1365, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 0, 0,
	1354, 1334, 1363, 1363, 1363, 1361, 1358, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1368, 1368, 1371, 1368, 0, 566, 0, 0, 554,
	0, 535, 0, 588, 590, 0, 592, 593, 595, 596,
	598, 599, 601, 602, 38, 0, 707, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 800, 800, 800,
	0, 488, 487, 0, 560, 0, 0, 617, 0, 0,
	0, 374, 419, 379, 376, 375, 425, 426, 422, 0,
	422, 617, 0, 398, 399, 400, 419, 419, 406, 567,
	407, 408, 422, 0, 427, 428, 617, 0, 0, 617,
	617, 0, 416, 417, 418, 0, 0, 800, 0, 376,
	389, 376, 1380, 1381, 0, 809, 0, 0, 0, 437,
	0, 0, 0, 489, 0, 0, 214, 0, 219, 171,
	0, 0, 0, 0, 0, 0, 200, 201, 0, 0,
	0, 0, 0, 191, 194, 934, 935, 765, 766, 195,
	196, 240, 241, 0, 535, 587, 589, 583, 584, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 0,
	0, 625, 619, 621, 688, 51, 625, 0, 508, 521,
	503, 0, 510, 0, 941, 490, 521, 492, 0, 510,
	535, 557, 535, 0, 269, 0, 274, 0, 0, 290,
	292, 293, 294, 279, 280, 439, 256, 257, 249, 250,
	251, 252, 253, 254, 255, 259, 61, 0, 229, 230,
	0, 0, 0, 105, 106, 107, 108, 109, 110, 112,
	96, 458, 460, 757, 769, 0, 760, 0, 115, 155,
	88, 0, 0, 1251, 1252, 1253, 1254, 1255, 1259, 0,
	1261, 1263, 1265, 1267, 0, 1285, -2, -2, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1270, 1283, 1284, 0, 0, 0, 0, 0, 0, 1281,
	1281, 1276, 0, 1053, 0, 1070, 1074, 0, 0, 0,
	52, 1243, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 0, 1249, 0, 1250, 0, 0, 0, 1245, 1246,
	0, 0, 0, 1141, 0, 0, 1147, 1148, 1149, 0,
	516, 0, 1209, 1187, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 1377, 1375, 1376, 1314, 1362, 0, 1339, 0, 1340,
	1341, 1342, 0, 0, 1335, 0, 1336, 1337, 1338, 1330,
	0, 1331, 1332, 0, 1333, 203, 643, 645, 0, 525,
	527, 528, 0, 555, 568, 573, 574, 577, 34, 39,
	0, 712, 0, 564, 0, 0, 724, 318, 751, 0,
	0, 767, 790, 796, 0, 0, 0, 824, 0, 562,
	0, 0, 657, 367, 0, 420, 421, 371, 1489, 376,
	617, 381, 377, 382, 424, 383, 384, 0, 617, 617,
	419, 422, 409, 423, 422, 412, 413, 0, 431, 435,
	432, 0, 434, 388, 390, 564, 303, 0, 0, -2,
	890, 1382, 1382, 0, 1382, 1382, 1382, 1382, 0, 0,
	1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
	1382, 1382, 1382, 1382, 0, 810, 315, 0, 0, 318,
	741, 630, 0, 631, 632, 628, 659, 683, 683, 0,
	683, 663, 940, 223, 224, 0, 0, 218, 172, 173,
	0, 175, 176, 177, 184, 179, 181, 0, 0, 185,
	197, 198, 199, 0, 0, 0, 189, 190, 0, 0,
	243, 244, 246, 0, 553, 455, 938, 456, 457, 461,
	0, 463, 464, 465, 712, 746, 617, 0, 626, 0,
	622, 689, 0, 691, 0, 617, 537, 497, 0, 502,
	518, 0, 522, 0, 0, 514, 507, 511, 0, 0,
	531, 491, 0, 0, 496, 556, 558, 981, 0, 275,
	289, 0, 0, 0, 0, 99, 754, 0, 100, 104,
	94, 0, 0, 0, 759, 0, 756, 761, 0, 114,
	0, 0, 89, 90, 815, 820, 0, 1260, 1262, 1264,
	1266, 1268, 0, 1271, 1281, 1281, 1277, 0, 1272, 0,
	1274, 0, 1251, 0, 1075, 0, 0, 0, 0, 0,
	0, 1131, 1132, 0, 0, 1136, 0, 1138, 1139, 1140,
	1142, 0, 0, 0, 1146, 0, 1185, 1201, 1189, 1190,
	0, 1194, 0, 1196, 0, 571, 0, 1109, 1109, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 1357, 1310, 1378, 0, 0, 0, 1359, 0,
	0, 0, 0, 0, 646, 537, 0, 0, 0, 580,
	578, 579, 0, 0, 713, 714, 716, 717, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1422, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	711, 0, 801, 731, 1382, 322, 0, 0, 753, 0,
	0, 0, -2, 0, 0, 0, 0, 826, 0, 0,
	0, 475, 479, 33, 565, 0, 618, 369, 0, 370,
	419, 378, 617, 940, 401, 402, 617, 419, 419, 422,
	0, 433, 0, 304, 946, 947, 0, 0, 949, 1006,
	0, 958, 800, 958, 0, 0, 960, 961, 305, 0,
	0, 0, 0, 0, 809, 892, 0, 1383, 0, 1382,
	1382, 0, 0, 0, 0, 1382, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 1382, 0, 0, 322, 738, 0, 0,
	0, 0, 0, 0, 650, 0, 0, 649, 0, 0,
	0, 0, 0, 564, 684, 0, 686, 687, 661, -2,
	0, 630, 666, 1248, 225, 213, 215, 0, 0, 0,
	0, 186, 187, 188, 192, 193, 242, 245, 247, 0,
	0, 0, 615, 620, 627, 690, 692, 52, 623, 615,
	541, 0, 0, 521, 523, 0, 0, 521, 0, 0,
	530, 0, 0, 521, 0, 0, 440, 62, 295, 0,
	0, 0, 0, 0, 459, 0, 758, 96, 0, 0,
	116, 0, 0, 818, 0, 820, 1247, 1273, 1275, 0,
	1282, 1278, 1054, 1062, 1071, 0, 0, 1077, 1089, 1089,
	0, 1080, 1365, 1365, 1083, 1361, 1363, 1361, 1089, 1089,
	0, 53, 0, 0, 1137, 0, 0, 0, 517, 0,
	0, 0, 1107, 1109, 1113, 0, 1114, 1109, 1109, 1109,
	1109, 1119, 1109, 1109, 1109, 1109, 1109, 1109, 1109, 1109,
	1367, 1366, 1352, 0, 1353, 1364, 1369, 0, 1372, 0,
	526, 541, 569, 570, 575, 576, 0, 0, 0, 0,
	718, 0, 734, 732, 733, 0, 748, 323, 324, 325,
	326, 0, 0, 0, 752, 0, 498, 0, 791, 792,
	793, 794, 795, -2, 804, 0, 0, 942, 942, 942,
	834, 0, 825, 529, 0, -2, 0, 0, 477, 0,
	0, 658, 372, 617, 394, 0, 410, 617, 617, 419,
	436, 0, -2, 948, 1007, 970, 970, 959, 970, 970,
	800, 0, 307, 308, 309, 0, 311, 891, 893, 894,
	0, 0, 897, 898, 899, 900, 0, 0, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 928, 929,
	930, 931, 932, 933, 913, 914, 915, 916, 917, 918,
	925, 0, 0, 922, 0, 734, 0, 0, 0, 748,
	740, 0, 742, 743, 0, 0, 500, 617, 235, 0,
	653, 647, 0, 636, 651, 652, 639, 0, 641, 0,
	637, 638, 617, 629, 660, 685, 662, 665, 667, 668,
	674, 0, 0, 0, 0, 217, 174, 0, 342, 180,
	939, 462, 467, 613, 0, 0, 613, 543, 76, 0,
	0, 0, 519, 0, 524, 521, 506, 515, 505, 512,
	513, 532, 521, 495, 494, 982, 270, 0, 755, 96,
	101, 102, 103, 97, 95, 762, 0, 764, 0, 816,
	820, 0, 0, 1279, 1076, 1063, 1078, 1090, 1091, 1079,
	1064, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1065, 1133,
	0, 1135, 1143, 1144, 0, 1191, 1195, 0, 0, 0,
	1112, 1105, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1360, 0, 0, 543, 581, 582,
	706, 0, 715, 0, 722, 723, 0, 0, 726, 727,
	736, 0, 0, 0, 328, 329, 0, 0, 0, 341,
	337, 338, 339, 319, 747, 738, 0, 0, 805, 1382,
	1382, 1382, 0, 0, 943, 944, 0, 0, 837, 0,
	0, 828, 0, 683, 0, 0, 617, 476, 479, 480,
	563, 373, 617, 414, 411, 617, 302, 972, -2, 985,
	987, 0, 0, 990, 991, 0, 0, 0, 0, 1028,
	997, 0, 0, 1001, 0, 1297, 1298, 0, 1005, 0,
	962, 971, 0, 971, 0, 0, 970, 0, 310, 895,
	896, 901, 902, 919, 0, 0, 921, 0, 0, 312,
	0, 0, 313, 317, 739, 0, 744, 745, 571, 0,
	0, 633, 654, 0, 0, 634, 0, 635, 640, 642,
	234, 669, 0, 0, 671, 672, 673, 664, 182, 603,
	0, 0, 624, 604, 545, 0, 542, 77, 0, 0,
	0, 0, 520, 504, 493, 98, 93, 763, 79, 819,
	821, 817, 0, 1145, 0, 1109, 1108, 571, 1106, 0,
	1370, 1373, 545, 0, 721, 719, 735, 725, 0, 749,
	750, 0, 330, 331, 0, 334, 340, 737, 499, 0,
	0, 0, 0, 797, -2, 0, 0, -2, 840, 0,
	835, 0, 827, 0, 830, 617, 617, -2, 473, 478,
	0, 395, 415, 986, 988, 989, 992, 993, 936, 937,
	994, 1033, 1034, 1035, 995, 1030, 1031, 1032, 996, 0,
	0, 0, 1295, 1296, 1026, 0, 0, 0, 0, 0,
	0, 0, 956, 926, 927, 920, 923, 924, 316, 314,
	501, 566, 236, 237, 655, 0, 648, 678, 675, 0,
	0, 614, 616, 547, 0, 544, 0, 538, 540, 87,
	509, 49, 70, 0, 1134, 1184, 1111, 1102, 0, 547,
	0, 0, 0, 327, 332, 0, 335, 336, 0, 786,
	1361, 0, 806, 807, 808, 847, -2, 945, 812, 79,
	847, 831, 0, 838, 0, 836, 829, 571, 474, 0,
	0, 1198, 1021, 0, 0, 963, 965, 966, 967, 968,
	969, 964, 0, 0, 0, 0, 955, 957, 1002, 0,
	233, 0, 0, 679, 681, 676, 677, 40, 0, 546,
	78, 0, 41, 0, 67, 0, 80, 81, 0, 0,
	0, 0, 0, 1103, 0, 1097, 1098, 1099, 1104, 536,
	0, 720, 728, 0, 730, 333, 779, 0, 577, 0,
	849, 0, 814, 849, 823, 0, 833, 0, 842, 0,
	839, 566, 1029, 0, 1000, 1009, 1022, 0, 0, 779,
	779, 779, 779, 0, 1003, 656, 670, 0, 0, 0,
	50, 54, 0, 76, 73, 0, 82, 0, 0, 0,
	0, 1110, 1100, 0, 0, 0, 0, 0, 729, 778,
	787, 788, 577, 811, 0, 886, 813, 832, 841, 0,
	844, 472, 998, 1008, 1010, 1011, 0, 1023, 1024, 1025,
	1027, 950, 951, 952, 953, 0, 680, 682, 0, 549,
	539, 43, 0, 0, 71, 72, 74, 0, 83, 0,
	85, 86, 0, 1092, 1093, 1095, 1094, 1096, 709, 780,
	1382, 0, 0, 784, 785, 789, 0, 874, 0, 0,
	880, 0, 887, 843, 999, 1012, 0, 1013, 0, 0,
	0, 954, 548, 0, 822, 0, 55, 0, 57, 59,
	60, 973, 68, 69, 75, 84, 0, 0, 782, 0,
	850, 0, 852, 0, 0, 0, 0, 0, 884, 0,
	1014, 1016, 1017, 0, 0, 1015, 550, 44, 45, 0,
	56, 0, 0, 1101, 781, 783, 0, 854, 0, 875,
	0, 0, 0, 0, 0, 0, 0, 1018, 1020, 1019,
	0, 0, 58, 974, 851, 848, 0, 886, 876, 0,
	878, 0, 0, 0, 0, 46, 47, 48, 0, 0,
	856, 0, 872, 877, 879, 881, 0, 885, 883, 975,
	855, 0, 868, 853, 0, 882, 857, -2, 0, 873,
	858, -2, 0, 866, 0, 0, 859, 867, 0, 862,
	0, 0, 0, 861, 0, -2, 869, 0, 0, 863,
	-2, 0, 871, 870,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 541,
	105, 104, 106, 3, 542, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 543, 117, 544, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:659
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:665
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:700
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:705
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:711
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:731
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:737
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:744
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:752
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:758
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:767
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:788
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:801
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:818
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:822
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:828
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:835
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:843
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:847
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:861
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:865
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:869
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:882
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:888
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:897
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:908
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:912
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:918
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:922
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:928
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:932
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:938
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:962
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:981
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:985
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:989
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1005
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1013
		{
			yyVAL.str = ""
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1020
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1025
		{
			yyVAL.str = "\n"
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1032
		{
			yyVAL.str = yyDollar[3].str
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1041
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1065
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1069
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1075
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1081
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1099
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1116
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1139
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1143
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1152
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1175
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1186
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1199
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1203
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1213
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1226
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1239
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1245
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1251
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1266
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1302
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1306
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1312
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1319
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1328
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1332
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1514
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1518
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1522
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1526
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1530
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1546
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1569
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1599
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1603
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1607
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1613
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1619
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1623
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1630
		{
			yyVAL.str = yyDollar[3].str
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1636
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1640
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1646
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1654
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1663
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1679
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1702
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1725
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1747
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1754
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1761
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1778
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1784
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1788
		{
			yyVAL.str = yyDollar[1].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1794
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1798
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1804
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1808
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1830
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1834
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1838
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1862
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1885
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1890
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1909
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1923
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1933
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1951
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1962
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1966
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1972
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1988
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1992
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:1998
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2004
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2008
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2012
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2016
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2034
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2040
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2044
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2054
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2066
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2076
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2082
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2086
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2090
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2094
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2098
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2102
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2110
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2128
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2169
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2173
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2179
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2185
		{
			yyVAL.str = yyDollar[1].str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = "true"
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2191
		{
			yyVAL.str = "false"
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2197
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2212
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2223
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2232
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2239
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2243
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2253
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2319
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2325
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2356
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2360
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2369
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2389
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2393
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2397
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2401
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2413
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2421
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2425
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2441
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2445
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2451
		{
			yyVAL.item = nil
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2456
		{
			yyVAL.item = nil
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2517
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2528
		{
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2532
		{
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2546
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2552
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2570
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2576
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2585
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2589
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2601
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2613
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2640
		{
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2642
		{
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2651
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2684
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2690
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2711
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2721
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2733
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2737
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2755
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2775
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2782
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2791
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2795
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2800
		{
			yyVAL.str = ""
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2804
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2810
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2823
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2827
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2833
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2852
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2856
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2862
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2868
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2872
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2876
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2882
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2886
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2917
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2935
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2939
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2945
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2963
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2979
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2991
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2997
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3008
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3013
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3020
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3036
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3049
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3060
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3064
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3070
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3075
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3082
		{
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3084
		{
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3087
		{
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3096
		{
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3100
		{
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3105
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3114
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3127
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3135
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3149
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3169
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3182
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3188
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3192
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3198
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3205
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3211
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3219
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3226
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3233
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3252
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3256
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3265
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3269
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3284
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3288
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3294
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3298
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3304
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3308
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3314
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3319
		{
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3330
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3334
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3341
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3350
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3356
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3360
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3366
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3370
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3406
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3424
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3456
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3460
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3473
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3477
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3482
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3486
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3493
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3498
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3511
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3515
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3527
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3553
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3557
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3575
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3584
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3590
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3598
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3607
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3613
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3619
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3623
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3629
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3634
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3638
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3642
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3647
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3651
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3655
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3661
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3669
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3683
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3717
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3737
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3754
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3778
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3786
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3794
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3802
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3810
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3818
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3828
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3839
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3853
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3857
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3861
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3866
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3870
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3874
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3887
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3896
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3905
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3911
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3915
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3921
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3925
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3930
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3934
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3939
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3947
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3953
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3961
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3969
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3979
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3985
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3994
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4003
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4012
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4022
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4026
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4036
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4040
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4044
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4048
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4054
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4064
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4068
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4074
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4084
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4090
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4096
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4100
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4104
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4114
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4120
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4124
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4130
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4134
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4140
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4144
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4154
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4167
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4173
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4179
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4192
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4203
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4210
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4214
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4220
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4230
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4234
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4243
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4247
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4251
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4255
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4264
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4268
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4272
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4276
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4281
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4285
		{
			yyVAL.str = yyDollar[1].str
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4289
		{
			yyVAL.str = yyDollar[2].str
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4295
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4301
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4305
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4309
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4313
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4317
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4323
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 706:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4355
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4365
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4371
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 709:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4378
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4390
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4395
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4412
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4424
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4428
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4432
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4438
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4444
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4461
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4473
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4479
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4489
		{
			yyVAL.str = yyDollar[1].str
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4493
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4499
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4512
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4520
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4533
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4541
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4547
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4568
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4579
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4583
		{
			yyVAL.str = yyDollar[2].str
		}
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4589
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4609
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4615
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4621
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4639
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4650
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4658
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4764
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4768
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4774
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4784
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4788
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4804
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4808
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4812
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4821
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4827
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4834
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4840
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4849
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4856
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4865
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4869
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4875
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4889
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4893
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4897
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4902
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4906
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4910
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4914
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4920
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4943
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4965
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4969
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4977
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4981
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4987
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4991
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4997
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5002
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5007
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5029
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5044
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5054
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5058
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5067
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5073
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5077
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5083
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5087
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5091
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5096
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5100
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5106
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5118
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5127
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5140
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5147
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5157
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5165
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5176
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5180
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5185
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5189
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5196
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5207
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5220
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5234
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5242
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5249
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5256
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5263
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5286
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5293
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5304
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5311
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5322
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5329
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5336
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5343
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5350
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5363
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5377
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5384
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5391
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5395
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5408
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5414
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5418
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5424
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5433
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5447
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5453
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5457
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5463
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5470
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5479
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5483
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5492
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5497
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5501
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5506
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5510
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5520
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5524
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5535
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5551
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5559
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5579
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5589
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5599
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5603
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5608
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5612
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5621
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5627
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5631
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5635
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5645
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5649
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5657
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5661
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5686
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5690
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5698
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5706
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5714
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5718
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5722
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5726
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5730
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5734
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5738
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5742
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5746
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5750
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5754
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5761
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5765
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5771
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5776
		{
			yyVAL.str = ""
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5780
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5784
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5790
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5794
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5798
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5802
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5806
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5824
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5828
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5837
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5842
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5848
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5855
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5859
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5865
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5869
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5875
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5887
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5893
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5902
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5911
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5934
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5943
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5953
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5961
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5967
		{
			yyVAL.str = ""
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5971
		{
			yyVAL.str = yyDollar[1].str
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5981
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5987
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5993
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6007
		{
			yyVAL.str = ""
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6011
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6017
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6023
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6027
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6031
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6037
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6041
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6045
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6049
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6055
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6059
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6063
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6068
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6072
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6078
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6082
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6104
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6108
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6113
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6117
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6121
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6125
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6129
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6133
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6137
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6141
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6154
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6160
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6169
		{
			yyVAL.str = ""
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6173
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6179
		{
			yyVAL.str = ""
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6183
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6189
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6201
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6208
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6222
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6229
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6238
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6244
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6250
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6271
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6278
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6282
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6286
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6295
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6300
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6304
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6326
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6330
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6334
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6338
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6342
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6346
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6350
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6354
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6358
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6362
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6366
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6370
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6374
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6380
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6384
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6392
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6396
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6400
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6408
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6416
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6420
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6424
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6429
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6437
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6446
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6455
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6459
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6463
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6467
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6476
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6485
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6491
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6495
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6501
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6511
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6528
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6545
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6558
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6571
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6583
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6597
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6612
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6627
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6644
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6659
		{
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6665
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6669
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6673
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6679
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6683
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6691
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6695
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6699
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6705
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6712
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6725
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6732
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6741
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6746
		{
			yyVAL.str = ","
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6750
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6759
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6769
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6780
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6790
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6799
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6808
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6818
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6838
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6848
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6858
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6868
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6878
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6888
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6898
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6908
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6928
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6945
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6953
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6961
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6969
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6977
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6987
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6995
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7004
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7012
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7020
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7028
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7036
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7047
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7057
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7069
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7080
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7102
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7150
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7162
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7173
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7188
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7195
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7207
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7215
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7223
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7234
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7243
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7252
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7260
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7270
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7278
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7292
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7302
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7321
		{
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7323
		{
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7364
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7375
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7379
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7383
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7389
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7398
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7404
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7408
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7415
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7419
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7423
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7431
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7435
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7439
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7449
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7453
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7457
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7461
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7465
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7469
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7473
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7477
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7481
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7485
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7493
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7497
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7501
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7505
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7509
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7513
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7517
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7521
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7525
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7529
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7539
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7545
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7549
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7556
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7560
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7564
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7570
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7586
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7594
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7635
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7648
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7652
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7674
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7678
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7685
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7696
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7701
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7707
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7719
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7731
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7743
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7756
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7769
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7795
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7808
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7821
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7847
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7873
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7888
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7915
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7957
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8005
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8034
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8054
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8074
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8136
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8149
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8174
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8198
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8210
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8246
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8258
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8270
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8283
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8296
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8311
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8319
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8328
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8338
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8361
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8366
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8372
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8379
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8383
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8388
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8392
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8398
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8404
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8411
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8418
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8427
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8434
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8441
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8450
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8464
		{
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8466
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8476
		{
			yyVAL.str = ""
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

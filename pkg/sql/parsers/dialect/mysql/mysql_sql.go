// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const INDEX = 57539
const VIEW = 57540
const TO = 57541
const IGNORE = 57542
const IF = 57543
const PRIMARY = 57544
const COLUMN = 57545
const CONSTRAINT = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const FOREIGN = 57549
const KEY_BLOCK_SIZE = 57550
const SHOW = 57551
const DESCRIBE = 57552
const EXPLAIN = 57553
const DATE = 57554
const ESCAPE = 57555
const REPAIR = 57556
const OPTIMIZE = 57557
const TRUNCATE = 57558
const MAXVALUE = 57559
const PARTITION = 57560
const REORGANIZE = 57561
const LESS = 57562
const THAN = 57563
const PROCEDURE = 57564
const TRIGGER = 57565
const STATUS = 57566
const VARIABLES = 57567
const ROLE = 57568
const PROXY = 57569
const AVG_ROW_LENGTH = 57570
const STORAGE = 57571
const DISK = 57572
const MEMORY = 57573
const CHECKSUM = 57574
const COMPRESSION = 57575
const DATA = 57576
const DIRECTORY = 57577
const DELAY_KEY_WRITE = 57578
const ENCRYPTION = 57579
const ENGINE = 57580
const MAX_ROWS = 57581
const MIN_ROWS = 57582
const PACK_KEYS = 57583
const ROW_FORMAT = 57584
const STATS_AUTO_RECALC = 57585
const STATS_PERSISTENT = 57586
const STATS_SAMPLE_PAGES = 57587
const DYNAMIC = 57588
const COMPRESSED = 57589
const REDUNDANT = 57590
const COMPACT = 57591
const FIXED = 57592
const COLUMN_FORMAT = 57593
const AUTO_RANDOM = 57594
const RESTRICT = 57595
const CASCADE = 57596
const ACTION = 57597
const PARTIAL = 57598
const SIMPLE = 57599
const CHECK = 57600
const ENFORCED = 57601
const RANGE = 57602
const LIST = 57603
const ALGORITHM = 57604
const LINEAR = 57605
const PARTITIONS = 57606
const SUBPARTITION = 57607
const SUBPARTITIONS = 57608
const CLUSTER = 57609
const TYPE = 57610
const ANY = 57611
const SOME = 57612
const EXTERNAL = 57613
const LOCALFILE = 57614
const URL = 57615
const PREPARE = 57616
const DEALLOCATE = 57617
const RESET = 57618
const EXTENSION = 57619
const PUBLICATION = 57620
const SUBSCRIPTIONS = 57621
const PUBLICATIONS = 57622
const PROPERTIES = 57623
const PARSER = 57624
const VISIBLE = 57625
const INVISIBLE = 57626
const BTREE = 57627
const HASH = 57628
const RTREE = 57629
const BSI = 57630
const ZONEMAP = 57631
const LEADING = 57632
const BOTH = 57633
const TRAILING = 57634
const UNKNOWN = 57635
const EXPIRE = 57636
const ACCOUNT = 57637
const ACCOUNTS = 57638
const UNLOCK = 57639
const DAY = 57640
const NEVER = 57641
const PUMP = 57642
const MYSQL_COMPATBILITY_MODE = 57643
const SECOND = 57644
const ASCII = 57645
const COALESCE = 57646
const COLLATION = 57647
const HOUR = 57648
const MICROSECOND = 57649
const MINUTE = 57650
const MONTH = 57651
const QUARTER = 57652
const REPEAT = 57653
const REVERSE = 57654
const ROW_COUNT = 57655
const WEEK = 57656
const REVOKE = 57657
const FUNCTION = 57658
const PRIVILEGES = 57659
const TABLESPACE = 57660
const EXECUTE = 57661
const SUPER = 57662
const GRANT = 57663
const OPTION = 57664
const REFERENCES = 57665
const REPLICATION = 57666
const SLAVE = 57667
const CLIENT = 57668
const USAGE = 57669
const RELOAD = 57670
const FILE = 57671
const TEMPORARY = 57672
const ROUTINE = 57673
const EVENT = 57674
const SHUTDOWN = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const ENGINES = 57682
const LOW_CARDINALITY = 57683
const ADMIN_NAME = 57684
const RANDOM = 57685
const SUSPEND = 57686
const ATTRIBUTE = 57687
const HISTORY = 57688
const REUSE = 57689
const CURRENT = 57690
const OPTIONAL = 57691
const FAILED_LOGIN_ATTEMPTS = 57692
const PASSWORD_LOCK_TIME = 57693
const UNBOUNDED = 57694
const SECONDARY = 57695
const USER = 57696
const IDENTIFIED = 57697
const CIPHER = 57698
const ISSUER = 57699
const X509 = 57700
const SUBJECT = 57701
const SAN = 57702
const REQUIRE = 57703
const SSL = 57704
const NONE = 57705
const PASSWORD = 57706
const MAX_QUERIES_PER_HOUR = 57707
const MAX_UPDATES_PER_HOUR = 57708
const MAX_CONNECTIONS_PER_HOUR = 57709
const MAX_USER_CONNECTIONS = 57710
const FORMAT = 57711
const VERBOSE = 57712
const CONNECTION = 57713
const TRIGGERS = 57714
const PROFILES = 57715
const LOAD = 57716
const INFILE = 57717
const TERMINATED = 57718
const OPTIONALLY = 57719
const ENCLOSED = 57720
const ESCAPED = 57721
const STARTING = 57722
const LINES = 57723
const ROWS = 57724
const IMPORT = 57725
const MODUMP = 57726
const OVER = 57727
const PRECEDING = 57728
const FOLLOWING = 57729
const GROUPS = 57730
const DATABASES = 57731
const TABLES = 57732
const EXTENDED = 57733
const FULL = 57734
const PROCESSLIST = 57735
const FIELDS = 57736
const COLUMNS = 57737
const OPEN = 57738
const ERRORS = 57739
const WARNINGS = 57740
const INDEXES = 57741
const SCHEMAS = 57742
const NODE = 57743
const LOCKS = 57744
const TABLE_NUMBER = 57745
const COLUMN_NUMBER = 57746
const TABLE_VALUES = 57747
const TABLE_SIZE = 57748
const NAMES = 57749
const GLOBAL = 57750
const SESSION = 57751
const ISOLATION = 57752
const LEVEL = 57753
const READ = 57754
const WRITE = 57755
const ONLY = 57756
const REPEATABLE = 57757
const COMMITTED = 57758
const UNCOMMITTED = 57759
const SERIALIZABLE = 57760
const LOCAL = 57761
const EVENTS = 57762
const PLUGINS = 57763
const CURRENT_TIMESTAMP = 57764
const DATABASE = 57765
const CURRENT_TIME = 57766
const LOCALTIME = 57767
const LOCALTIMESTAMP = 57768
const UTC_DATE = 57769
const UTC_TIME = 57770
const UTC_TIMESTAMP = 57771
const REPLACE = 57772
const CONVERT = 57773
const SEPARATOR = 57774
const TIMESTAMPDIFF = 57775
const CURRENT_DATE = 57776
const CURRENT_USER = 57777
const CURRENT_ROLE = 57778
const SECOND_MICROSECOND = 57779
const MINUTE_MICROSECOND = 57780
const MINUTE_SECOND = 57781
const HOUR_MICROSECOND = 57782
const HOUR_SECOND = 57783
const HOUR_MINUTE = 57784
const DAY_MICROSECOND = 57785
const DAY_SECOND = 57786
const DAY_MINUTE = 57787
const DAY_HOUR = 57788
const YEAR_MONTH = 57789
const SQL_TSI_HOUR = 57790
const SQL_TSI_DAY = 57791
const SQL_TSI_WEEK = 57792
const SQL_TSI_MONTH = 57793
const SQL_TSI_QUARTER = 57794
const SQL_TSI_YEAR = 57795
const SQL_TSI_SECOND = 57796
const SQL_TSI_MINUTE = 57797
const RECURSIVE = 57798
const CONFIG = 57799
const DRAINER = 57800
const MATCH = 57801
const AGAINST = 57802
const BOOLEAN = 57803
const LANGUAGE = 57804
const WITH = 57805
const QUERY = 57806
const EXPANSION = 57807
const ADDDATE = 57808
const BIT_AND = 57809
const BIT_OR = 57810
const BIT_XOR = 57811
const CAST = 57812
const COUNT = 57813
const APPROX_COUNT_DISTINCT = 57814
const APPROX_PERCENTILE = 57815
const CURDATE = 57816
const CURTIME = 57817
const DATE_ADD = 57818
const DATE_SUB = 57819
const EXTRACT = 57820
const GROUP_CONCAT = 57821
const MAX = 57822
const MID = 57823
const MIN = 57824
const NOW = 57825
const POSITION = 57826
const SESSION_USER = 57827
const STD = 57828
const STDDEV = 57829
const MEDIAN = 57830
const STDDEV_POP = 57831
const STDDEV_SAMP = 57832
const SUBDATE = 57833
const SUBSTR = 57834
const SUBSTRING = 57835
const SUM = 57836
const SYSDATE = 57837
const SYSTEM_USER = 57838
const TRANSLATE = 57839
const TRIM = 57840
const VARIANCE = 57841
const VAR_POP = 57842
const VAR_SAMP = 57843
const AVG = 57844
const ARROW = 57845
const ROW = 57846
const OUTFILE = 57847
const HEADER = 57848
const MAX_FILE_SIZE = 57849
const FORCE_QUOTE = 57850
const PARALLEL = 57851
const UNUSED = 57852
const BINDINGS = 57853
const DO = 57854
const DECLARE = 57855
const KILL = 57856
const QUERY_RESULT = 57857

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8717

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 100,
	21, 569,
	-2, 550,
	-1, 108,
	214, 771,
	-2, 820,
	-1, 128,
	42, 397,
	214, 397,
	241, 404,
	242, 404,
	416, 397,
	-2, 429,
	-1, 446,
	290, 91,
	392, 91,
	-2, 1383,
	-1, 504,
	67, 1189,
	-2, 1523,
	-1, 505,
	67, 1207,
	-2, 1494,
	-1, 509,
	67, 1208,
	-2, 1522,
	-1, 531,
	67, 1121,
	-2, 1578,
	-1, 532,
	67, 1122,
	-2, 1577,
	-1, 533,
	67, 1123,
	-2, 1567,
	-1, 534,
	67, 1542,
	-2, 1562,
	-1, 535,
	67, 1543,
	-2, 1563,
	-1, 536,
	67, 1544,
	-2, 1569,
	-1, 537,
	67, 1545,
	-2, 1552,
	-1, 538,
	67, 1546,
	-2, 1560,
	-1, 539,
	67, 1547,
	-2, 1570,
	-1, 540,
	67, 1548,
	-2, 1571,
	-1, 541,
	67, 1549,
	-2, 1576,
	-1, 542,
	67, 1550,
	-2, 1581,
	-1, 543,
	67, 1551,
	-2, 1582,
	-1, 545,
	67, 1186,
	-2, 1375,
	-1, 552,
	67, 1195,
	-2, 1401,
	-1, 556,
	67, 1199,
	-2, 1440,
	-1, 557,
	67, 1200,
	-2, 1518,
	-1, 565,
	67, 1210,
	-2, 1503,
	-1, 567,
	67, 1212,
	-2, 1513,
	-1, 568,
	67, 1213,
	-2, 1536,
	-1, 579,
	67, 1103,
	-2, 1572,
	-1, 580,
	67, 1104,
	-2, 1573,
	-1, 581,
	67, 1105,
	-2, 1574,
	-1, 588,
	21, 570,
	-2, 533,
	-1, 645,
	411, 429,
	412, 429,
	-2, 398,
	-1, 694,
	104, 1375,
	115, 1375,
	135, 1375,
	-2, 1350,
	-1, 731,
	21, 570,
	-2, 533,
	-1, 830,
	21, 569,
	-2, 1011,
	-1, 1163,
	67, 1257,
	-2, 1520,
	-1, 1164,
	67, 1258,
	-2, 1521,
	-1, 1371,
	1, 306,
	68, 306,
	533, 306,
	-2, 806,
	-1, 1607,
	68, 1336,
	136, 1336,
	-2, 1505,
	-1, 1608,
	68, 1336,
	136, 1336,
	-2, 1504,
	-1, 1609,
	68, 1314,
	136, 1314,
	-2, 1491,
	-1, 1610,
	68, 1315,
	136, 1315,
	-2, 1496,
	-1, 1611,
	68, 1316,
	136, 1316,
	-2, 1428,
	-1, 1612,
	68, 1317,
	136, 1317,
	-2, 1422,
	-1, 1613,
	68, 1318,
	136, 1318,
	-2, 1366,
	-1, 1614,
	68, 1319,
	136, 1319,
	-2, 1493,
	-1, 1615,
	68, 1320,
	136, 1320,
	-2, 1426,
	-1, 1616,
	68, 1321,
	136, 1321,
	-2, 1421,
	-1, 1617,
	68, 1322,
	136, 1322,
	-2, 1414,
	-1, 1619,
	68, 1325,
	136, 1325,
	-2, 1536,
	-1, 1620,
	68, 1305,
	136, 1305,
	-2, 1523,
	-1, 1621,
	68, 1334,
	136, 1334,
	-2, 1494,
	-1, 1622,
	68, 1334,
	136, 1334,
	-2, 1522,
	-1, 1623,
	68, 1334,
	136, 1334,
	-2, 1384,
	-1, 1624,
	68, 1332,
	136, 1332,
	-2, 1513,
	-1, 1625,
	68, 1329,
	136, 1329,
	-2, 1406,
	-1, 1626,
	67, 1287,
	68, 1287,
	136, 1287,
	354, 1287,
	355, 1287,
	356, 1287,
	-2, 1365,
	-1, 1627,
	67, 1288,
	68, 1288,
	136, 1288,
	354, 1288,
	355, 1288,
	356, 1288,
	-2, 1367,
	-1, 1628,
	67, 1291,
	68, 1291,
	136, 1291,
	354, 1291,
	355, 1291,
	356, 1291,
	-2, 1495,
	-1, 1629,
	67, 1293,
	68, 1293,
	136, 1293,
	354, 1293,
	355, 1293,
	356, 1293,
	-2, 1478,
	-1, 1630,
	67, 1295,
	68, 1295,
	136, 1295,
	354, 1295,
	355, 1295,
	356, 1295,
	-2, 1427,
	-1, 1631,
	67, 1297,
	68, 1297,
	136, 1297,
	354, 1297,
	355, 1297,
	356, 1297,
	-2, 1410,
	-1, 1632,
	67, 1298,
	68, 1298,
	136, 1298,
	354, 1298,
	355, 1298,
	356, 1298,
	-2, 1411,
	-1, 1633,
	67, 1300,
	68, 1300,
	136, 1300,
	354, 1300,
	355, 1300,
	356, 1300,
	-2, 1364,
	-1, 1634,
	68, 1339,
	136, 1339,
	354, 1339,
	355, 1339,
	356, 1339,
	-2, 1389,
	-1, 1635,
	68, 1339,
	136, 1339,
	354, 1339,
	355, 1339,
	356, 1339,
	-2, 1402,
	-1, 1636,
	68, 1342,
	136, 1342,
	354, 1342,
	355, 1342,
	356, 1342,
	-2, 1385,
	-1, 1637,
	68, 1339,
	136, 1339,
	354, 1339,
	355, 1339,
	356, 1339,
	-2, 1463,
	-1, 1650,
	1, 799,
	68, 799,
	533, 799,
	-2, 806,
	-1, 1756,
	21, 569,
	-2, 661,
	-1, 1920,
	1, 800,
	68, 800,
	533, 800,
	-2, 806,
	-1, 1929,
	65, 477,
	136, 477,
	-2, 915,
	-1, 1946,
	275, 979,
	-2, 958,
	-1, 2187,
	275, 979,
	-2, 959,
	-1, 2313,
	88, 806,
	131, 806,
	168, 806,
	171, 806,
	-2, 863,
	-1, 2316,
	88, 806,
	131, 806,
	168, 806,
	171, 806,
	-2, 863,
	-1, 2319,
	65, 477,
	136, 477,
	-2, 916,
	-1, 2408,
	88, 806,
	131, 806,
	168, 806,
	171, 806,
	-2, 864,
	-1, 2681,
	68, 835,
	136, 835,
	-2, 806,
	-1, 2685,
	68, 835,
	136, 835,
	-2, 806,
	-1, 2699,
	68, 839,
	136, 839,
	-2, 806,
	-1, 2704,
	68, 840,
	136, 840,
	-2, 806,
}

const yyPrivate = 57344

const yyLast = 31167

var yyAct = [...]int{
	475, 2693, 1372, 2685, 1229, 2684, 2664, 455, 1144, 2575,
	457, 2402, 450, 477, 2622, 2592, 2614, 2385, 2511, 2380,
	2529, 2199, 2530, 2502, 1597, 2433, 2522, 2265, 2401, 2453,
	2518, 2266, 998, 2400, 857, 589, 2383, 2476, 1291, 2443,
	148, 148, 1333, 501, 2421, 1932, 148, 392, 399, 2407,
	2329, 399, 2169, 1147, 1051, 2375, 2011, 2012, 2296, 2010,
	1997, 1434, 2209, 2188, 1750, 1684, 2007, 1605, 2004, 2263,
	459, 1820, 1501, 1689, 1470, 2258, 2241, 410, 2144, 2141,
	2033, 2139, 1451, 1404, 404, 1335, 2208, 2051, 725, 1657,
	1921, 2167, 693, 1603, 454, 1819, 448, 959, 584, 1479,
	1478, 449, 2090, 1375, 1497, 2047, 1301, 699, 1471, 397,
	31, 625, 1861, 1496, 1427, 1751, 1407, 1739, 1903, 974,
	3, 1405, 1685, 1140, 1899, 1950, 1656, 1228, 1321, 1345,
	703, 43, 396, 19, 1309, 1787, 584, 393, 8, 1529,
	394, 6, 1703, 702, 30, 894, 1143, 148, 1292, 458,
	1498, 1138, 1282, 1079, 1601, 976, 1060, 395, 7, 99,
	1343, 1508, 447, 1643, 1585, 1193, 1177, 1129, 939, 1474,
	388, 466, 1457, 1477, 697, 1137, 1320, 43, 1431, 456,
	685, 1344, 742, 1758, 1360, 1043, 624, 2408, 385, 983,
	1287, 1030, 412, 586, 999, 1198, 16, 1199, 9, 4,
	1078, 398, 413, 138, 686, 957, 987, 141, 588, 622,
	2084, 2084, 1515, 1346, 142, 641, 39, 130, 109, 1822,
	1505, 651, 143, 144, 2449, 2444, 2376, 2264, 1305, 2558,
	1473, 852, 587, 858, 135, 2566, 142, 2393, 142, 597,
	142, 123, 39, 130, 109, 136, 2392, 381, 1412, 762,
	98, 1815, 402, 31, 142, 142, 39, 130, 109, 1032,
	1807, 2486, 142, 1502, 723, 83, 408, 2113, 142, 1513,
	1774, 139, 98, 142, 43, 1096, 19, 142, 777, 1647,
	778, 8, 1089, 666, 6, 665, 1219, 30, 147, 147,
	1013, 1093, 1014, 139, 383, 139, 796, 139, 1086, 700,
	1775, 7, 583, 142, 2066, 39, 130, 109, 780, 2059,
	1033, 139, 1095, 98, 1415, 1416, 1445, 1114, 2610, 1088,
	574, 995, 573, 575, 576, 139, 577, 578, 1901, 1788,
	139, 2608, 598, 1002, 139, 2462, 1001, 1004, 1005, 1004,
	1005, 131, 132, 661, 133, 134, 2533, 2534, 799, 800,
	801, 798, 409, 1356, 1146, 794, 696, 789, 695, 1862,
	139, 2559, 2560, 2596, 2597, 670, 2267, 2451, 2052, 770,
	2504, 772, 1016, 2454, 2455, 2456, 2457, 775, 2504, 2053,
	1900, 2054, 667, 2565, 2507, 148, 735, 2447, 2267, 708,
	707, 709, 1149, 745, 1802, 727, 736, 734, 590, 773,
	2517, 399, 399, 2276, 148, 1420, 1428, 1125, 2297, 108,
	129, 140, 1509, 81, 2155, 2398, 2304, 730, 732, 706,
	1234, 1730, 2145, 1642, 1582, 1894, 1130, 2206, 1134, 2077,
	128, 122, 121, 1424, 1215, 745, 776, 45, 1212, 2468,
	791, 669, 1214, 1211, 1213, 1217, 1218, 1812, 1906, 108,
	1216, 140, 1133, 1276, 1275, 2079, 765, 2461, 2568, 2569,
	2149, 2153, 2001, 2463, 802, 832, 729, 711, 766, 1732,
	128, 713, 443, 831, 2471, 445, 792, 793, 2395, 2160,
	444, 840, 2532, 1735, 2603, 757, 2612, 2166, 704, 401,
	731, 768, 400, 993, 1148, 124, 125, 126, 2523, 1514,
	2349, 2678, 845, 771, 774, 779, 2694, 2632, 2607, 712,
	668, 982, 2577, 2150, 2151, 2639, 2493, 1015, 137, 2643,
	43, 43, 1025, 2573, 2574, 1135, 2577, 767, 2152, 782,
	2342, 783, 1518, 1520, 1521, 1713, 93, 698, 2435, 1712,
	127, 2223, 94, 1443, 1444, 1982, 1132, 705, 787, 788,
	2617, 700, 2355, 2356, 2147, 1155, 1158, 1159, 1912, 785,
	738, 739, 1915, 1916, 1917, 1918, 1156, 1039, 1038, 755,
	747, 746, 1018, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1222, 1223, 1224, 1225, 1226, 1227,
	1220, 1221, 2333, 1503, 981, 95, 769, 997, 996, 980,
	956, 958, 750, 751, 1503, 38, 2695, 1503, 754, 1530,
	2280, 2083, 747, 746, 2689, 2665, 710, 740, 2701, 2477,
	700, 936, 2288, 726, 625, 965, 960, 408, 781, 2501,
	2035, 2037, 1031, 733, 1808, 1765, 2082, 762, 2567, 838,
	1506, 834, 835, 836, 837, 2422, 2423, 2424, 2426, 2425,
	888, 40, 753, 1131, 1693, 969, 1517, 968, 967, 1003,
	2561, 2562, 1004, 1005, 786, 403, 2618, 148, 2135, 1027,
	676, 1690, 1693, 1000, 1516, 1004, 1005, 40, 2337, 619,
	620, 621, 971, 1504, 110, 587, 2039, 784, 584, 584,
	584, 2092, 2091, 1055, 1055, 994, 148, 2394, 1419, 2613,
	961, 962, 963, 964, 2156, 966, 110, 2146, 110, 407,
	110, 1816, 399, 958, 1429, 1082, 1082, 761, 675, 2434,
	1762, 1905, 678, 677, 110, 110, 2469, 1081, 1081, 1091,
	1062, 1036, 110, 96, 97, 101, 2148, 2688, 110, 1418,
	40, 2399, 2080, 110, 868, 869, 1761, 110, 1057, 1112,
	1417, 716, 721, 722, 1421, 672, 1126, 673, 1519, 2644,
	756, 1336, 1055, 1097, 1055, 735, 2707, 1697, 1983, 1985,
	1986, 1987, 1984, 110, 1909, 1910, 1145, 1930, 1694, 797,
	698, 1157, 1423, 2706, 941, 2700, 2036, 2238, 1908, 1336,
	2615, 2616, 991, 1764, 1763, 2697, 1694, 2234, 943, 1007,
	1008, 1687, 1010, 1011, 1012, 1688, 1691, 1034, 1035, 588,
	1150, 1151, 1152, 1153, 1154, 2335, 1053, 1053, 2173, 2334,
	1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 1176, 762, 973, 797, 1087, 1188, 1189, 1645, 1094,
	1460, 989, 990, 1017, 1197, 1019, 984, 988, 988, 988,
	1026, 797, 1790, 1243, 1195, 1196, 2679, 1692, 1006, 1121,
	1231, 1009, 662, 2698, 1237, 1249, 1250, 984, 1142, 984,
	1128, 43, 1558, 1252, 662, 1557, 1049, 1050, 1257, 1258,
	43, 1749, 1120, 1037, 1748, 2338, 2339, 1117, 584, 1931,
	1116, 1696, 1046, 1047, 1048, 2314, 1700, 1698, 1931, 1160,
	1098, 1699, 1123, 2674, 2668, 2164, 1063, 381, 1139, 2238,
	2667, 1103, 1591, 1075, 2648, 1023, 1083, 1707, 1076, 718,
	719, 720, 1107, 1108, 1511, 2624, 1807, 1099, 591, 2586,
	2540, 2535, 1277, 2495, 1644, 591, 1298, 2494, 588, 1749,
	1896, 2491, 664, 797, 1061, 663, 1119, 1795, 1118, 1115,
	1127, 1303, 1242, 1136, 664, 1307, 2490, 663, 1310, 1777,
	148, 1458, 1319, 1055, 1323, 1141, 1325, 1326, 1502, 1299,
	2489, 2675, 1511, 625, 1596, 1230, 1334, 1233, 1511, 2488,
	1055, 1244, 1511, 1562, 1027, 2472, 2357, 2225, 1595, 392,
	1749, 762, 1251, 2625, 1253, 1493, 1179, 2587, 2473, 2473,
	1302, 2496, 490, 100, 1441, 1661, 1186, 1187, 1540, 2473,
	972, 1111, 2030, 985, 1361, 1361, 759, 1027, 1027, 1110,
	1027, 1318, 760, 148, 2473, 1319, 1319, 1359, 2165, 1055,
	1402, 1414, 1885, 1191, 799, 800, 801, 798, 2473, 1883,
	1881, 584, 1324, 1055, 1232, 797, 382, 2473, 1280, 100,
	1283, 1284, 937, 2473, 1777, 2226, 1303, 799, 800, 801,
	798, 1040, 1303, 1303, 2662, 1327, 1328, 1329, 1254, 1319,
	1055, 1879, 1450, 148, 148, 1454, 1867, 1350, 1456, 1539,
	1749, 1294, 1462, 1297, 1398, 1399, 1823, 1805, 760, 1243,
	1243, 1481, 1272, 1357, 1358, 1799, 1243, 1243, 2626, 2303,
	1886, 1488, 1594, 1797, 1289, 1290, 1792, 1884, 1880, 1322,
	1306, 1660, 986, 1363, 1592, 1566, 1565, 1425, 1556, 1348,
	1349, 799, 800, 801, 798, 1334, 1339, 2322, 1447, 1055,
	1500, 1300, 1354, 728, 1510, 1104, 2174, 1342, 1440, 1880,
	2049, 1760, 701, 2178, 797, 1933, 100, 1430, 1449, 1810,
	1809, 1801, 1352, 1353, 797, 1661, 1453, 1337, 1338, 1331,
	1677, 1553, 1330, 1793, 1541, 2074, 2111, 1494, 1482, 1492,
	1341, 1798, 1465, 674, 1793, 1322, 1315, 1347, 1365, 1661,
	1366, 617, 1591, 797, 797, 1523, 797, 1100, 1476, 935,
	843, 748, 1527, 1528, 984, 1476, 728, 814, 1364, 1362,
	2657, 1044, 1511, 1105, 1533, 1401, 1351, 1537, 1316, 728,
	1355, 1371, 1045, 1042, 1403, 2645, 1139, 988, 1236, 1235,
	1704, 1426, 817, 818, 819, 820, 821, 814, 1438, 1439,
	2239, 1446, 1435, 1436, 1437, 43, 815, 816, 817, 818,
	819, 820, 821, 814, 985, 1448, 977, 1547, 700, 2230,
	978, 1551, 2227, 2085, 2002, 700, 1466, 1796, 1767, 737,
	1563, 1830, 1194, 1194, 1536, 1483, 1486, 1570, 1487, 1564,
	1485, 1367, 1567, 1568, 1569, 1490, 1317, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 2600, 1580, 798, 1491, 1854,
	801, 798, 1255, 1256, 1041, 1495, 1259, 1260, 1261, 1262,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 679, 2345,
	1263, 2344, 671, 2055, 448, 735, 1638, 1960, 1959, 1185,
	1954, 1452, 1452, 1949, 2326, 2642, 1606, 1531, 148, 148,
	148, 1658, 2396, 1522, 1182, 1184, 1181, 2683, 1183, 2301,
	700, 1665, 1027, 986, 1247, 2671, 2672, 1668, 1524, 1662,
	2633, 443, 1670, 1179, 445, 1248, 2628, 2005, 1535, 444,
	2140, 2548, 1525, 1526, 1027, 799, 800, 801, 798, 2641,
	735, 2397, 2445, 2415, 1702, 1022, 2104, 1024, 2302, 1028,
	1029, 1683, 822, 823, 815, 816, 817, 818, 819, 820,
	821, 814, 100, 100, 701, 813, 812, 822, 823, 815,
	816, 817, 818, 819, 820, 821, 814, 2300, 2154, 2130,
	1753, 1753, 1414, 1753, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 2103, 1680, 1077, 799, 800, 801, 798, 1667, 2527,
	1993, 1991, 2602, 1832, 1598, 1599, 1639, 1544, 1671, 1672,
	1989, 1055, 148, 2129, 799, 800, 801, 798, 1303, 1303,
	1303, 1587, 799, 800, 801, 798, 735, 2521, 2070, 1082,
	1977, 1414, 1976, 830, 1782, 1979, 1784, 1606, 1706, 1992,
	1990, 1081, 1975, 1972, 2387, 1755, 1600, 1759, 1966, 1988,
	799, 800, 801, 798, 1646, 1674, 1675, 1679, 1963, 799,
	800, 801, 798, 1803, 1962, 1757, 1500, 799, 800, 801,
	798, 2381, 1666, 1055, 1978, 1055, 1590, 1055, 1589, 1588,
	1673, 1584, 735, 799, 800, 801, 798, 1705, 1583, 1708,
	1709, 1710, 1711, 1817, 1101, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 954,
	2598, 1055, 1848, 1779, 1781, 1678, 2563, 2499, 2470, 1831,
	2446, 2406, 1786, 1839, 1855, 2379, 2377, 1849, 1850, 1055,
	2361, 2359, 1852, 1853, 1772, 1733, 1676, 1998, 1857, 2328,
	2299, 700, 2298, 988, 2295, 1858, 1652, 1653, 1654, 934,
	931, 932, 933, 2285, 2279, 1844, 1821, 1843, 1842, 1840,
	2233, 1549, 2231, 944, 2221, 1847, 2220, 2134, 1773, 1859,
	1669, 1538, 2128, 2081, 1303, 2042, 1834, 1889, 1890, 1310,
	1778, 1980, 1780, 1856, 1768, 1769, 1770, 1973, 1969, 2510,
	1814, 1968, 1967, 478, 487, 530, 529, 1828, 1813, 479,
	1593, 486, 480, 484, 483, 481, 482, 799, 800, 801,
	798, 1586, 1467, 1804, 1548, 1055, 1806, 1312, 1913, 1139,
	1841, 1102, 1319, 1887, 1811, 867, 1929, 863, 799, 800,
	801, 798, 1935, 862, 1053, 1824, 1825, 799, 800, 801,
	798, 844, 724, 142, 1897, 2481, 130, 109, 1944, 1863,
	2316, 2315, 1053, 488, 1868, 1838, 2313, 1948, 2290, 2289,
	1061, 2284, 2271, 2257, 2256, 2179, 2109, 1956, 1957, 1958,
	2102, 1064, 2094, 2089, 1961, 2046, 382, 1895, 1882, 1878,
	1827, 1923, 1877, 485, 1571, 1561, 1559, 1753, 805, 806,
	807, 808, 809, 810, 811, 803, 1555, 1994, 100, 1888,
	139, 1891, 100, 1554, 1552, 1546, 1319, 735, 1414, 1414,
	1414, 1414, 1936, 100, 1543, 1542, 1246, 1245, 2013, 735,
	1414, 1946, 100, 1753, 1922, 1938, 1067, 1065, 142, 1940,
	2013, 1284, 1951, 2696, 1951, 2656, 1055, 2650, 2640, 31,
	2637, 2635, 2547, 1911, 2497, 1845, 1846, 148, 148, 859,
	1934, 1279, 1928, 2348, 1294, 1902, 1297, 1952, 2431, 1664,
	43, 1322, 19, 2419, 1243, 2386, 1243, 8, 2416, 2065,
	6, 2354, 2069, 30, 1303, 2026, 1943, 1947, 1055, 1303,
	1826, 2076, 2369, 1289, 1290, 139, 1953, 7, 799, 800,
	801, 798, 1937, 2367, 799, 800, 801, 798, 2352, 2351,
	1941, 1942, 1974, 813, 812, 822, 823, 815, 816, 817,
	818, 819, 820, 821, 814, 2088, 2350, 2347, 2341, 1964,
	1965, 2308, 2003, 1302, 1999, 1970, 1971, 2115, 2064, 2014,
	2015, 2016, 2017, 1288, 588, 2025, 2027, 2108, 2029, 2062,
	2028, 1281, 975, 2000, 1995, 2068, 1955, 1926, 1925, 2040,
	1924, 2097, 2043, 2099, 1939, 1293, 2073, 2078, 2038, 1219,
	1296, 1285, 2050, 2061, 1791, 860, 2063, 735, 2058, 2056,
	1766, 1728, 2060, 2143, 1927, 1659, 1180, 139, 1606, 2067,
	1455, 1314, 2072, 2158, 1286, 148, 1124, 1090, 2086, 2282,
	938, 2087, 886, 885, 884, 735, 735, 735, 883, 882,
	881, 1414, 1658, 2107, 2177, 880, 1683, 1683, 1683, 2093,
	2181, 879, 799, 800, 801, 798, 2106, 878, 2100, 2101,
	2210, 2212, 877, 2210, 2210, 876, 799, 800, 801, 798,
	2217, 875, 874, 873, 872, 1055, 1055, 871, 2216, 799,
	800, 801, 798, 2114, 2105, 870, 2131, 2116, 2117, 2118,
	2119, 1876, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2136, 866, 2095, 2096, 865, 864, 148, 799, 800, 801,
	798, 2143, 861, 856, 799, 800, 801, 798, 2138, 1319,
	1319, 2162, 2207, 2211, 2175, 2163, 2172, 2170, 2171, 2218,
	2219, 2176, 855, 2180, 1922, 2044, 2045, 2182, 2183, 853,
	852, 851, 850, 1413, 2098, 849, 848, 1215, 847, 2213,
	2214, 1212, 846, 842, 841, 1214, 1211, 1213, 1217, 1218,
	1848, 764, 2215, 1216, 1649, 2185, 2242, 2243, 813, 812,
	822, 823, 815, 816, 817, 818, 819, 820, 821, 814,
	752, 592, 593, 594, 595, 2235, 2236, 1560, 2224, 1875,
	2229, 2228, 2232, 148, 591, 2582, 2580, 2531, 1053, 1053,
	2245, 701, 1914, 2246, 1776, 1874, 1469, 2237, 701, 2184,
	763, 2248, 799, 800, 801, 798, 1873, 100, 2247, 2253,
	2254, 2255, 2249, 2250, 1872, 2019, 2018, 2281, 799, 800,
	801, 798, 2682, 2022, 2283, 1800, 2262, 1871, 2023, 799,
	800, 801, 798, 1066, 2272, 2132, 2133, 799, 800, 801,
	798, 2273, 2020, 1794, 1893, 1870, 2275, 2021, 1397, 2274,
	799, 800, 801, 798, 1869, 2024, 2278, 1745, 1746, 145,
	82, 1319, 2372, 2161, 2371, 2137, 1273, 2312, 799, 800,
	801, 798, 1789, 1753, 1414, 2319, 1640, 799, 800, 801,
	798, 42, 41, 830, 1598, 1599, 1866, 1222, 1223, 1224,
	1225, 1226, 1227, 1220, 1221, 1865, 1055, 1818, 2370, 2327,
	377, 2291, 940, 2293, 378, 1084, 1864, 148, 2294, 799,
	800, 801, 798, 758, 2516, 1945, 2212, 1860, 799, 800,
	801, 798, 1851, 2321, 1898, 379, 380, 2307, 2306, 799,
	800, 801, 798, 1332, 2589, 1319, 1313, 2317, 1731, 735,
	799, 800, 801, 798, 1452, 799, 800, 801, 798, 1400,
	2013, 2325, 1303, 2207, 1021, 2366, 1020, 2318, 2368, 1236,
	1235, 2320, 952, 953, 790, 2374, 2252, 2323, 950, 951,
	2324, 735, 2373, 2363, 1829, 948, 949, 1489, 2353, 1190,
	946, 947, 2013, 2654, 979, 942, 2651, 2358, 2360, 613,
	2571, 2554, 2552, 2524, 2362, 2509, 2364, 799, 800, 801,
	798, 2365, 799, 800, 801, 798, 2309, 2310, 2311, 735,
	1055, 1055, 2508, 2506, 2498, 735, 2442, 2441, 2390, 2330,
	2378, 2269, 2389, 2048, 2268, 2260, 1683, 2382, 945, 591,
	2259, 2277, 813, 812, 822, 823, 815, 816, 817, 818,
	819, 820, 821, 814, 1336, 2584, 2583, 2391, 735, 1736,
	2071, 735, 735, 735, 1651, 1545, 1741, 1744, 1745, 1746,
	1742, 2405, 1743, 1747, 2404, 2321, 2412, 2409, 1334, 2411,
	2439, 749, 1741, 1744, 1745, 1746, 1742, 2583, 1743, 1747,
	2584, 2420, 2343, 2270, 2428, 2429, 2430, 2417, 592, 593,
	594, 595, 992, 2467, 2427, 2464, 2436, 2388, 50, 1442,
	1059, 591, 1, 2413, 2414, 1311, 596, 2031, 2032, 2251,
	2437, 1702, 615, 2034, 1756, 601, 2475, 1507, 1729, 1641,
	735, 2157, 612, 611, 970, 618, 1238, 1109, 715, 2482,
	744, 2465, 735, 1053, 2330, 1106, 743, 741, 1192, 492,
	1472, 2474, 1996, 605, 2438, 2588, 2621, 2546, 2478, 2480,
	2479, 2591, 2483, 2487, 1122, 2346, 476, 2500, 2450, 2550,
	2452, 2384, 1512, 1413, 795, 2492, 2057, 637, 524, 499,
	1395, 854, 1092, 2515, 735, 1085, 2112, 717, 498, 2305,
	1907, 608, 2505, 2503, 610, 714, 638, 1581, 609, 2448,
	1274, 1295, 1278, 2692, 599, 604, 2681, 2541, 2544, 2520,
	2663, 2649, 2519, 2576, 1397, 2677, 2525, 2606, 2638, 2460,
	2458, 2459, 602, 2526, 2631, 2572, 414, 1422, 2545, 2536,
	2537, 2538, 2539, 582, 683, 2515, 2553, 2551, 2555, 2556,
	2549, 2557, 2432, 600, 1468, 415, 1663, 2564, 2418, 606,
	1648, 1377, 607, 1920, 1919, 1161, 2570, 616, 2595, 804,
	1178, 2581, 2579, 2578, 2286, 2287, 839, 453, 1534, 465,
	1904, 2594, 2585, 2200, 2041, 49, 48, 47, 46, 1461,
	152, 603, 735, 494, 2599, 151, 2543, 2593, 474, 473,
	472, 471, 1740, 2604, 1738, 1737, 1409, 1408, 2620, 1459,
	1695, 2609, 2611, 1368, 2528, 2484, 2485, 2340, 1981, 2336,
	2623, 2619, 2332, 2222, 2629, 2186, 735, 2187, 2193, 893,
	889, 891, 892, 2515, 2630, 890, 2634, 1145, 2636, 2627,
	1837, 1833, 1681, 1682, 2168, 955, 2595, 2647, 2466, 2292,
	1604, 1602, 2244, 2240, 2159, 1480, 735, 1308, 735, 2594,
	614, 2646, 1892, 1410, 2653, 1406, 2655, 1145, 2658, 1145,
	1734, 1650, 74, 73, 80, 2623, 120, 735, 2661, 2659,
	37, 2666, 100, 2673, 2410, 2670, 2676, 585, 1145, 32,
	27, 1370, 5, 29, 1369, 28, 14, 15, 1381, 2652,
	13, 1113, 2680, 12, 2687, 18, 26, 25, 2691, 1385,
	24, 2690, 92, 91, 23, 2699, 90, 89, 88, 87,
	2703, 2702, 2687, 2704, 22, 11, 2705, 2691, 2601, 1374,
	86, 85, 84, 1376, 1378, 1380, 21, 1382, 1383, 1384,
	1386, 1387, 1388, 1390, 1391, 1392, 1393, 79, 813, 812,
	822, 823, 815, 816, 817, 818, 819, 820, 821, 814,
	1413, 1413, 1413, 1413, 77, 20, 825, 78, 829, 75,
	76, 60, 1413, 59, 2110, 58, 71, 1532, 70, 69,
	68, 67, 1396, 826, 828, 824, 66, 827, 813, 812,
	822, 823, 815, 816, 817, 818, 819, 820, 821, 814,
	813, 812, 822, 823, 815, 816, 817, 818, 819, 820,
	821, 814, 65, 636, 57, 100, 56, 55, 54, 1394,
	72, 64, 100, 813, 812, 822, 823, 815, 816, 817,
	818, 819, 820, 821, 814, 63, 1373, 813, 812, 822,
	823, 815, 816, 817, 818, 819, 820, 821, 814, 62,
	61, 53, 52, 51, 107, 106, 319, 506, 105, 104,
	103, 102, 33, 34, 35, 1389, 36, 281, 117, 116,
	118, 119, 1379, 114, 112, 115, 113, 111, 44, 10,
	467, 17, 2, 0, 226, 0, 0, 251, 0, 0,
	0, 497, 0, 0, 311, 265, 0, 0, 0, 0,
	553, 561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 0, 0, 491, 530, 529, 478, 487,
	0, 100, 207, 150, 479, 0, 486, 480, 484, 483,
	481, 482, 0, 545, 0, 0, 0, 0, 0, 0,
	451, 464, 2512, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 812, 822, 823, 815, 816, 817,
	818, 819, 820, 821, 814, 0, 461, 462, 100, 0,
	0, 0, 507, 0, 463, 0, 0, 502, 488, 489,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 485, 505,
	509, 219, 567, 503, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 568,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	342, 0, 0, 551, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 504, 0, 301, 283, 564, 452,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	549, 279, 0, 0, 563, 544, 546, 547, 550, 554,
	555, 556, 557, 558, 560, 562, 566, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	2513, 0, 0, 0, 2514, 0, 565, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 508, 269, 270, 271,
	272, 552, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 574, 548, 573, 575, 576, 572,
	577, 578, 559, 470, 0, 512, 570, 569, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 537, 517,
	518, 519, 469, 520, 515, 516, 538, 510, 534, 535,
	493, 513, 521, 533, 522, 536, 539, 540, 579, 580,
	528, 581, 525, 541, 532, 531, 523, 511, 542, 543,
	496, 495, 526, 527, 514, 319, 506, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	497, 0, 0, 311, 265, 0, 0, 0, 0, 553,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 0, 0, 491, 530, 529, 478, 487, 0,
	0, 207, 150, 479, 0, 486, 480, 484, 483, 481,
	482, 0, 545, 0, 0, 0, 0, 0, 0, 451,
	464, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 0, 0, 0,
	0, 507, 0, 463, 0, 0, 502, 488, 489, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 485, 505, 509,
	219, 567, 503, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 568, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 342,
	0, 0, 551, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 504, 0, 301, 283, 564, 452, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 1240, 1239, 1241, 354, 233, 190, 191, 337, 549,
	279, 0, 0, 563, 544, 546, 547, 550, 554, 555,
	556, 557, 558, 560, 562, 566, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 565, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 508, 269, 270, 271, 272,
	552, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 574, 548, 573, 575, 576, 572, 577,
	578, 559, 470, 0, 512, 570, 569, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 252, 0, 293, 231, 537, 517, 518,
	519, 469, 520, 515, 516, 538, 510, 534, 535, 493,
	513, 521, 533, 522, 536, 539, 540, 579, 580, 528,
	581, 525, 541, 532, 531, 523, 511, 542, 543, 496,
	495, 526, 527, 514, 319, 506, 0, 350, 351, 352,
	372, 336, 0, 223, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 0,
	0, 0, 226, 0, 0, 251, 0, 0, 0, 497,
	0, 0, 311, 265, 0, 0, 0, 0, 553, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 491, 530, 529, 478, 487, 0, 0,
	207, 150, 479, 0, 486, 480, 484, 483, 481, 482,
	0, 545, 0, 0, 0, 0, 0, 0, 451, 464,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 462, 0, 0, 0, 0,
	507, 0, 463, 0, 0, 502, 488, 489, 0, 0,
	198, 316, 332, 208, 307, 345, 213, 314, 203, 280,
	303, 0, 0, 200, 330, 313, 262, 245, 246, 199,
	0, 298, 224, 237, 220, 278, 485, 505, 509, 219,
	567, 503, 340, 202, 0, 339, 277, 326, 331, 263,
	257, 201, 328, 261, 256, 249, 228, 568, 241, 289,
	255, 290, 242, 267, 266, 268, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 342, 0,
	0, 551, 0, 0, 0, 315, 0, 0, 250, 0,
	0, 0, 504, 0, 301, 283, 564, 452, 0, 299,
	253, 327, 291, 333, 317, 341, 295, 292, 193, 318,
	222, 264, 204, 206, 218, 225, 227, 229, 230, 273,
	274, 286, 306, 320, 321, 322, 221, 214, 300, 215,
	239, 216, 194, 308, 217, 196, 287, 325, 0, 235,
	296, 260, 197, 259, 288, 324, 323, 205, 349, 355,
	356, 360, 0, 361, 0, 0, 0, 369, 374, 375,
	376, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 354, 233, 190, 191, 337, 549, 279,
	0, 0, 563, 544, 546, 547, 550, 554, 555, 556,
	557, 558, 560, 562, 566, 304, 0, 0, 0, 0,
	0, 244, 285, 0, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 335, 347,
	364, 367, 0, 0, 0, 195, 366, 0, 2513, 0,
	0, 0, 2514, 0, 565, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 508, 269, 270, 271, 272, 552,
	0, 212, 365, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 232, 238, 373, 240, 211, 284, 234, 344, 247,
	0, 370, 0, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 574, 548, 573, 575, 576, 572, 577, 578,
	559, 470, 0, 512, 570, 569, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 537, 517, 518, 519,
	469, 520, 515, 516, 538, 510, 534, 535, 493, 513,
	521, 533, 522, 536, 539, 540, 579, 580, 528, 581,
	525, 541, 532, 531, 523, 511, 542, 543, 496, 495,
	526, 527, 514, 319, 506, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 226, 1304, 0, 251, 0, 0, 0, 497, 0,
	0, 311, 265, 0, 0, 0, 0, 553, 561, 0,
	0, 0, 0, 0, 0, 0, 1432, 0, 0, 460,
	0, 0, 491, 530, 529, 478, 487, 0, 0, 207,
	150, 479, 0, 486, 480, 484, 483, 481, 482, 0,
	545, 0, 0, 0, 0, 0, 0, 451, 464, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 0, 0, 0, 0, 507,
	0, 463, 0, 0, 1433, 488, 489, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 485, 505, 509, 219, 567,
	503, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 568, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 342, 0, 0,
	551, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 504, 0, 301, 283, 564, 452, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 549, 279, 0,
	0, 563, 544, 546, 547, 550, 554, 555, 556, 557,
	558, 560, 562, 566, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 508, 269, 270, 271, 272, 552, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 0, 276, 243, 309, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 258, 0,
	0, 574, 548, 573, 575, 576, 572, 577, 578, 559,
	470, 0, 512, 570, 569, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 0, 293, 231, 537, 517, 518, 519, 469,
	520, 515, 516, 538, 510, 534, 535, 493, 513, 521,
	533, 522, 536, 539, 540, 579, 580, 528, 581, 525,
	541, 532, 531, 523, 511, 542, 543, 496, 495, 526,
	527, 514, 142, 319, 506, 350, 351, 352, 372, 336,
	0, 223, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 833, 0,
	0, 311, 265, 0, 0, 0, 0, 553, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	0, 0, 491, 530, 529, 478, 487, 0, 0, 207,
	150, 479, 0, 486, 480, 484, 483, 481, 482, 0,
	545, 0, 0, 0, 0, 0, 0, 451, 464, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 0, 0, 0, 0, 507,
	0, 463, 0, 0, 502, 488, 489, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 485, 505, 509, 219, 567,
	503, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 568, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 342, 0, 0,
	551, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 504, 0, 301, 283, 564, 452, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 549, 279, 0,
	0, 563, 544, 546, 547, 550, 554, 555, 556, 557,
	558, 560, 562, 566, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 508, 269, 270, 271, 272, 552, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 0, 276, 243, 309, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 258, 0,
	0, 574, 548, 573, 575, 576, 572, 577, 578, 559,
	470, 0, 512, 570, 569, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 110, 293, 231, 537, 517, 518, 519, 469,
	520, 515, 516, 538, 510, 534, 535, 493, 513, 521,
	533, 522, 536, 539, 540, 579, 580, 528, 581, 525,
	541, 532, 531, 523, 511, 542, 543, 496, 495, 526,
	527, 514, 319, 506, 0, 350, 351, 352, 372, 336,
	0, 223, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 0, 0, 0,
	226, 2660, 0, 251, 0, 0, 0, 497, 0, 0,
	311, 265, 0, 0, 0, 0, 553, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 0,
	0, 491, 530, 529, 478, 487, 0, 0, 207, 150,
	479, 0, 486, 480, 484, 483, 481, 482, 0, 545,
	0, 0, 0, 0, 0, 0, 451, 464, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 462, 0, 0, 0, 0, 507, 0,
	463, 0, 0, 502, 488, 489, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 485, 505, 509, 219, 567, 503,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 568, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 342, 0, 0, 551,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	504, 0, 301, 283, 564, 452, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 549, 279, 0, 0,
	563, 544, 546, 547, 550, 554, 555, 556, 557, 558,
	560, 562, 566, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 0, 0, 0, 0,
	0, 0, 565, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 508, 269, 270, 271, 272, 552, 0, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	574, 548, 573, 575, 576, 572, 577, 578, 559, 470,
	0, 512, 570, 569, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 537, 517, 518, 519, 469, 520,
	515, 516, 538, 510, 534, 535, 493, 513, 521, 533,
	522, 536, 539, 540, 579, 580, 528, 581, 525, 541,
	532, 531, 523, 511, 542, 543, 496, 495, 526, 527,
	514, 319, 506, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 226,
	1304, 0, 251, 0, 0, 0, 497, 0, 0, 311,
	265, 0, 0, 0, 0, 553, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 0, 0,
	491, 530, 529, 478, 487, 0, 0, 207, 150, 479,
	0, 486, 480, 484, 483, 481, 482, 0, 545, 0,
	0, 0, 0, 0, 0, 451, 464, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 462, 0, 0, 0, 0, 507, 0, 463,
	0, 0, 502, 488, 489, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 485, 505, 509, 219, 567, 503, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 568, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 342, 0, 0, 551, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 504,
	0, 301, 283, 564, 452, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 549, 279, 0, 0, 563,
	544, 546, 547, 550, 554, 555, 556, 557, 558, 560,
	562, 566, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 565, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 508, 269, 270, 271, 272, 552, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 574,
	548, 573, 575, 576, 572, 577, 578, 559, 470, 0,
	512, 570, 569, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	0, 293, 231, 537, 517, 518, 519, 469, 520, 515,
	516, 538, 510, 534, 535, 493, 513, 521, 533, 522,
	536, 539, 540, 579, 580, 528, 581, 525, 541, 532,
	531, 523, 511, 542, 543, 496, 495, 526, 527, 514,
	319, 506, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 0, 0, 0, 226, 0,
	0, 251, 0, 0, 0, 497, 0, 0, 311, 265,
	0, 0, 0, 0, 553, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 0, 0, 491,
	530, 529, 478, 487, 0, 0, 207, 150, 479, 0,
	486, 480, 484, 483, 481, 482, 0, 545, 0, 0,
	0, 0, 0, 0, 451, 464, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 462, 1080, 0, 0, 0, 507, 0, 463, 0,
	0, 502, 488, 489, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 200,
	330, 313, 262, 245, 246, 199, 0, 298, 224, 237,
	220, 278, 485, 505, 509, 219, 567, 503, 340, 202,
	0, 339, 277, 326, 331, 263, 257, 201, 328, 261,
	256, 249, 228, 568, 241, 289, 255, 290, 242, 267,
	266, 268, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 342, 0, 0, 551, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 504, 0,
	301, 283, 564, 452, 0, 299, 253, 327, 291, 333,
	317, 341, 295, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 354,
	233, 190, 191, 337, 549, 279, 0, 0, 563, 544,
	546, 547, 550, 554, 555, 556, 557, 558, 560, 562,
	566, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 0,
	565, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	508, 269, 270, 271, 272, 552, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 574, 548,
	573, 575, 576, 572, 577, 578, 559, 470, 0, 512,
	570, 569, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 537, 517, 518, 519, 469, 520, 515, 516,
	538, 510, 534, 535, 493, 513, 521, 533, 522, 536,
	539, 540, 579, 580, 528, 581, 525, 541, 532, 531,
	523, 511, 542, 543, 496, 495, 526, 527, 514, 0,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 319,
	506, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 497, 0, 0, 311, 265, 0,
	0, 0, 0, 553, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 491, 530,
	529, 478, 487, 0, 0, 207, 150, 479, 0, 486,
	480, 484, 483, 481, 482, 0, 545, 0, 0, 0,
	0, 0, 0, 451, 464, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	462, 0, 0, 0, 0, 507, 0, 463, 0, 0,
	502, 488, 489, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 485, 505, 509, 219, 567, 503, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 568, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 342, 0, 0, 551, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 504, 0, 301,
	283, 564, 452, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 549, 279, 0, 0, 563, 544, 546,
	547, 550, 554, 555, 556, 557, 558, 560, 562, 566,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 508,
	269, 270, 271, 272, 552, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 0, 276, 243, 309, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 258, 0, 0, 574, 548, 573,
	575, 576, 572, 577, 578, 559, 470, 0, 512, 570,
	569, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 252, 0, 293,
	231, 537, 517, 518, 519, 469, 520, 515, 516, 538,
	510, 534, 535, 493, 513, 521, 533, 522, 536, 539,
	540, 579, 580, 528, 581, 525, 541, 532, 531, 523,
	511, 542, 543, 496, 495, 526, 527, 514, 319, 506,
	0, 350, 351, 352, 372, 336, 0, 223, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 0, 0, 0, 226, 0, 0, 251,
	0, 0, 0, 497, 0, 0, 311, 265, 0, 0,
	0, 0, 553, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 0, 0, 491, 530, 529,
	478, 487, 0, 0, 207, 150, 479, 0, 486, 480,
	484, 483, 481, 482, 0, 545, 0, 0, 0, 0,
	0, 0, 451, 464, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 462,
	0, 0, 0, 0, 507, 0, 463, 0, 0, 502,
	488, 489, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	485, 505, 509, 219, 567, 503, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 568, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 342, 0, 0, 551, 0, 0, 0, 315,
	0, 0, 250, 0, 0, 0, 504, 0, 301, 283,
	564, 452, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 0, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 549, 279, 0, 0, 563, 544, 546, 547,
	550, 554, 555, 556, 557, 558, 560, 562, 566, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 0, 0, 0, 0, 0, 0, 565, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 508, 269,
	270, 271, 272, 552, 0, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 574, 548, 573, 575,
	576, 572, 577, 578, 559, 470, 0, 512, 570, 569,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	537, 517, 518, 519, 469, 520, 515, 516, 538, 510,
	534, 535, 493, 513, 521, 533, 522, 536, 539, 540,
	579, 580, 528, 581, 525, 541, 532, 531, 523, 511,
	542, 543, 496, 495, 526, 527, 514, 319, 506, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 0,
	0, 467, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 497, 0, 0, 311, 265, 0, 0, 0,
	0, 553, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 0, 0, 491, 530, 529, 478,
	487, 0, 0, 207, 150, 479, 0, 486, 480, 484,
	483, 481, 482, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 464, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 462, 0,
	0, 0, 0, 507, 0, 463, 0, 0, 502, 488,
	489, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 485,
	505, 509, 219, 567, 503, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	568, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 342, 0, 0, 551, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 504, 0, 301, 283, 564,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 1163, 1164, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 549, 279, 0, 0, 563, 544, 546, 547, 550,
	554, 555, 556, 557, 558, 560, 562, 566, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 565, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 508, 269, 270,
	271, 272, 552, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 574, 548, 573, 575, 576,
	572, 577, 578, 559, 470, 0, 512, 570, 569, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 0, 293, 231, 537,
	517, 518, 519, 469, 520, 515, 516, 538, 510, 534,
	535, 493, 513, 521, 533, 522, 536, 539, 540, 579,
	580, 528, 581, 525, 541, 532, 531, 523, 511, 542,
	543, 496, 495, 526, 527, 514, 319, 506, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 0, 0, 0, 226, 0, 0, 251, 0, 0,
	0, 497, 0, 0, 311, 265, 0, 0, 0, 0,
	553, 561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 530, 529, 478, 487,
	0, 0, 207, 150, 479, 0, 486, 480, 484, 483,
	481, 482, 0, 545, 0, 0, 0, 0, 0, 0,
	451, 464, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 462, 0, 0,
	0, 0, 507, 0, 463, 0, 0, 502, 488, 489,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 485, 505,
	509, 219, 567, 503, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 568,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	342, 0, 0, 551, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 504, 0, 301, 283, 564, 452,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	549, 279, 0, 0, 563, 544, 546, 547, 550, 554,
	555, 556, 557, 558, 560, 562, 566, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	0, 0, 0, 0, 0, 0, 565, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 508, 269, 270, 271,
	272, 552, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 574, 548, 573, 575, 576, 572,
	577, 578, 559, 470, 0, 512, 570, 569, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 537, 517,
	518, 519, 469, 520, 515, 516, 538, 510, 534, 535,
	493, 513, 521, 533, 522, 536, 539, 540, 579, 580,
	528, 581, 525, 541, 532, 531, 523, 511, 542, 543,
	496, 495, 526, 527, 514, 319, 506, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	497, 0, 0, 311, 265, 0, 0, 0, 0, 553,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 0, 0, 491, 530, 529, 478, 487, 0,
	0, 207, 150, 479, 0, 486, 480, 484, 483, 481,
	482, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	464, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 0, 0, 0,
	0, 507, 0, 463, 0, 0, 502, 488, 489, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 485, 505, 509,
	219, 567, 503, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 568, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 342,
	0, 0, 551, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 504, 0, 301, 283, 564, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 549,
	279, 0, 0, 563, 544, 546, 547, 550, 554, 555,
	556, 557, 558, 560, 562, 566, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 565, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 508, 269, 270, 271, 272,
	552, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 574, 548, 573, 575, 576, 572, 577,
	578, 559, 470, 0, 512, 570, 569, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 252, 0, 293, 231, 537, 517, 518,
	519, 469, 520, 515, 516, 538, 510, 534, 535, 493,
	513, 521, 533, 522, 536, 539, 540, 579, 580, 528,
	581, 525, 541, 532, 531, 523, 511, 542, 543, 496,
	495, 526, 527, 514, 0, 0, 0, 350, 351, 352,
	372, 336, 0, 223, 142, 319, 39, 130, 109, 0,
	0, 0, 0, 0, 0, 0, 281, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	387, 389, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 40, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 252, 110, 293, 231, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 0,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 319, 0, 0, 350, 351, 352,
	372, 336, 0, 223, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 909, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 311, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	207, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 897, 0, 0, 0, 0,
	198, 316, 332, 208, 307, 345, 213, 314, 203, 280,
	303, 0, 0, 1626, 1628, 1629, 1630, 1631, 1632, 1633,
	0, 1637, 1634, 1635, 1636, 278, 0, 1621, 1622, 1623,
	1624, 895, 1607, 1627, 0, 1608, 277, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1625, 289,
	255, 290, 242, 267, 266, 268, 920, 922, 924, 926,
	929, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 250, 0,
	0, 0, 1620, 0, 301, 283, 0, 0, 0, 299,
	253, 327, 291, 333, 317, 341, 295, 292, 193, 318,
	222, 264, 204, 206, 218, 225, 227, 229, 230, 273,
	274, 286, 306, 320, 321, 322, 221, 214, 300, 215,
	239, 216, 194, 308, 217, 196, 287, 325, 0, 235,
	296, 260, 197, 259, 288, 324, 323, 205, 349, 355,
	356, 360, 0, 361, 0, 0, 0, 369, 374, 375,
	376, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 354, 233, 190, 191, 337, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	353, 0, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 244, 285, 0, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 335, 347,
	364, 367, 0, 0, 0, 195, 366, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 362, 269, 270, 271, 272, 236,
	0, 212, 365, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 232, 238, 373, 240, 211, 284, 234, 344, 247,
	0, 370, 0, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 919, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 1690, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1694, 342, 0, 0,
	0, 1687, 0, 1686, 315, 1688, 1691, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 1692, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 0, 276, 243, 309, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 0, 293, 231, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 0, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 319, 0, 0, 350, 351, 352, 372, 336,
	0, 223, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1463, 0, 0, 0, 0,
	226, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	311, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 1464, 0, 0, 0, 207, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 799, 800, 801, 798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 0, 329, 357, 219, 348, 0,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 371, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	358, 0, 301, 283, 0, 0, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 353, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 362, 269, 270, 271, 272, 236, 0, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	682, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 690, 691, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 664, 340,
	202, 663, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 680, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	681, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 684, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 0, 692, 687, 688, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	0, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	142, 319, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 98, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 1484, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	110, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	142, 319, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 98, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 1475, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	110, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	142, 319, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 98, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	110, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	319, 0, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 311, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	690, 691, 0, 0, 0, 0, 207, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 200,
	330, 313, 262, 245, 246, 199, 0, 298, 224, 237,
	220, 278, 0, 329, 357, 219, 348, 664, 340, 202,
	663, 339, 277, 326, 331, 263, 257, 201, 328, 261,
	256, 249, 228, 371, 241, 289, 255, 290, 242, 267,
	266, 268, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 358, 0,
	301, 283, 0, 0, 0, 299, 253, 327, 291, 333,
	317, 341, 295, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 354,
	233, 190, 191, 337, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 353, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	362, 269, 270, 271, 272, 236, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 0, 692, 687, 688, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 689, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 909, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 897,
	0, 0, 0, 887, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 917, 921, 923,
	925, 927, 928, 930, 0, 934, 931, 932, 933, 0,
	0, 912, 913, 914, 915, 895, 896, 918, 0, 898,
	0, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 910, 916, 0, 0, 0, 0, 0, 0, 0,
	920, 922, 924, 926, 929, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 911, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 0, 0, 2008, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 919, 370, 0, 0, 0,
	0, 0, 276, 243, 309, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 252, 0, 293,
	231, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 0, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 319, 0,
	0, 350, 351, 352, 372, 336, 0, 223, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 1058, 0, 251,
	0, 0, 0, 0, 0, 0, 311, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	1056, 0, 0, 0, 207, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	0, 329, 357, 219, 348, 0, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 371, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 250, 0, 0, 0, 358, 0, 301, 283,
	0, 0, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 0, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 353, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 362, 269,
	270, 271, 272, 236, 0, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 1052, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 1056,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 0, 293, 231, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 0, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 319, 0, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 311, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2590, 0, 149, 530, 0, 0, 0,
	0, 0, 207, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 0, 329,
	357, 219, 348, 0, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 371,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 358, 0, 301, 283, 0, 0,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 353, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 362, 269, 270, 271,
	272, 236, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 1056, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2331, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 252, 0, 293, 231, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 0,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 319, 0, 0, 350, 351, 352,
	372, 336, 0, 223, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 311, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 1056, 0, 0, 0,
	207, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	198, 316, 332, 208, 307, 345, 213, 314, 203, 280,
	303, 0, 0, 200, 330, 313, 262, 245, 246, 199,
	0, 298, 224, 237, 220, 278, 0, 329, 357, 219,
	348, 0, 340, 202, 0, 339, 277, 326, 331, 263,
	257, 201, 328, 261, 256, 249, 228, 371, 241, 289,
	255, 290, 242, 267, 266, 268, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 250, 0,
	0, 0, 358, 0, 301, 283, 0, 0, 0, 299,
	253, 327, 291, 333, 317, 341, 295, 292, 193, 318,
	222, 264, 204, 206, 218, 225, 227, 229, 230, 273,
	274, 286, 306, 320, 321, 322, 221, 214, 300, 215,
	239, 216, 194, 308, 217, 196, 287, 325, 0, 235,
	296, 260, 197, 259, 288, 324, 323, 205, 349, 355,
	356, 360, 0, 361, 0, 0, 0, 369, 374, 375,
	376, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 354, 233, 190, 191, 337, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	353, 0, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 244, 285, 0, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 335, 347,
	364, 367, 0, 0, 0, 195, 366, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 362, 269, 270, 271, 272, 236,
	0, 212, 365, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 232, 238, 373, 240, 211, 284, 234, 344, 247,
	0, 370, 0, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 909, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 897, 0, 1754, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 917, 921, 923, 925, 927, 928, 930, 0, 934,
	931, 932, 933, 0, 0, 912, 913, 914, 915, 895,
	896, 918, 0, 898, 0, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 910, 916, 0, 0, 0,
	0, 0, 0, 0, 920, 922, 924, 926, 929, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	911, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 919,
	370, 0, 0, 0, 0, 0, 276, 243, 309, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 0, 293, 231, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 0, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 319, 0, 0, 350, 351, 352, 372, 336,
	0, 223, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 1771, 0, 251, 0, 0, 0, 0, 0, 0,
	311, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 1056, 0, 0, 0, 207, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 0, 329, 357, 219, 348, 0,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 371, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	358, 0, 301, 283, 0, 0, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 353, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 362, 269, 270, 271, 272, 236, 0, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2669, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	0, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	319, 0, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 311, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	530, 0, 0, 0, 0, 0, 207, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 200,
	330, 313, 262, 245, 246, 199, 0, 298, 224, 237,
	220, 278, 0, 329, 357, 219, 348, 0, 340, 202,
	0, 339, 277, 326, 331, 263, 257, 201, 328, 261,
	256, 249, 228, 371, 241, 289, 255, 290, 242, 267,
	266, 268, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 358, 0,
	301, 283, 0, 0, 0, 299, 253, 327, 291, 333,
	317, 341, 295, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 354,
	233, 190, 191, 337, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 353, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	362, 269, 270, 271, 272, 236, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2605, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 0, 276, 243, 309, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 252, 0, 293,
	231, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 0, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 319, 0,
	0, 350, 351, 352, 372, 336, 0, 223, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 311, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 207, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	0, 329, 357, 219, 348, 0, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 371, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 2542, 0, 0, 315,
	0, 0, 250, 0, 0, 0, 358, 0, 301, 283,
	0, 0, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 0, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 353, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 362, 269,
	270, 271, 272, 236, 0, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2403, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 0, 293, 231, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 0, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 319, 0, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 311, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 207, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 0, 329,
	357, 219, 348, 0, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 371,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 2440, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 358, 0, 301, 283, 0, 0,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 353, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 362, 269, 270, 271,
	272, 236, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 252, 0, 293, 231, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 0,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 319, 0, 0, 350, 351, 352,
	372, 336, 0, 223, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 311, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	207, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 316, 332, 208, 307, 345, 213, 314, 203, 280,
	303, 0, 0, 200, 330, 313, 262, 245, 246, 199,
	0, 298, 224, 237, 220, 278, 0, 329, 357, 219,
	348, 0, 340, 202, 0, 339, 277, 326, 331, 263,
	257, 201, 328, 261, 256, 249, 228, 371, 241, 289,
	255, 290, 242, 267, 266, 268, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 250, 0,
	0, 0, 358, 0, 301, 283, 0, 0, 0, 299,
	253, 327, 291, 333, 317, 341, 295, 292, 193, 318,
	222, 264, 204, 206, 218, 225, 227, 229, 230, 273,
	274, 286, 306, 320, 321, 322, 221, 214, 300, 215,
	239, 216, 194, 308, 217, 196, 287, 325, 0, 235,
	296, 260, 197, 259, 288, 324, 323, 205, 349, 355,
	356, 360, 0, 361, 0, 0, 0, 369, 374, 375,
	376, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 354, 233, 190, 191, 337, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	353, 0, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 244, 285, 0, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 335, 347,
	364, 367, 0, 0, 0, 195, 366, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 362, 269, 270, 271, 272, 236,
	0, 212, 365, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 232, 238, 373, 240, 211, 284, 234, 344, 247,
	0, 370, 0, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 0, 276, 243, 309, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 0, 293, 231, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 0, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 319, 0, 0, 350, 351, 352, 372, 336,
	0, 223, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	311, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 2142, 0, 0, 0, 207, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 0, 329, 357, 219, 348, 0,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 371, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	358, 0, 301, 283, 0, 0, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 353, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 362, 269, 270, 271, 272, 236, 0, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	0, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	319, 0, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 311, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 1056, 0, 0, 0, 207, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 200,
	330, 313, 262, 245, 246, 199, 0, 298, 224, 237,
	220, 278, 0, 329, 357, 219, 348, 0, 340, 202,
	0, 339, 277, 326, 331, 263, 257, 201, 328, 261,
	256, 249, 228, 371, 241, 289, 255, 290, 242, 267,
	266, 268, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 358, 0,
	301, 283, 0, 0, 0, 299, 253, 327, 291, 333,
	317, 341, 295, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 354,
	233, 190, 191, 337, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 353, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	362, 269, 270, 271, 272, 236, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 1754, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 0, 276, 243, 309, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 252, 0, 293,
	231, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 0, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 319, 0,
	0, 350, 351, 352, 372, 336, 0, 223, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 311, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 207, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	0, 329, 357, 219, 348, 0, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 371, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 250, 0, 0, 0, 358, 0, 301, 283,
	0, 0, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 0, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 353, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 362, 269,
	270, 271, 272, 236, 0, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 0, 293, 231, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 0, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 319, 0, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 311, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 1783, 0,
	0, 0, 207, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 0, 329,
	357, 219, 348, 0, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 371,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 358, 0, 301, 283, 0, 0,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 353, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 362, 269, 270, 271,
	272, 236, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 0, 0, 0, 350, 351,
	352, 372, 336, 319, 223, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 0, 276, 243, 309, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 0, 293, 231, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 0, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 319, 0, 0, 350, 351, 352, 372, 336,
	0, 223, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	311, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 1056, 0, 0, 0, 207, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 0, 329, 357, 219, 348, 0,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 371, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	358, 0, 301, 283, 0, 0, 0, 299, 253, 327,
	291, 333, 317, 341, 1340, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 353, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 362, 269, 270, 271, 272, 236, 0, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 192, 0, 252,
	0, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	319, 0, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 311, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 207, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 200,
	330, 313, 262, 245, 246, 199, 0, 298, 224, 237,
	220, 278, 0, 329, 357, 219, 348, 0, 340, 202,
	0, 339, 277, 326, 331, 263, 257, 201, 328, 261,
	256, 249, 228, 371, 241, 289, 255, 290, 242, 267,
	266, 268, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 358, 0,
	301, 283, 0, 0, 0, 299, 253, 327, 291, 333,
	317, 341, 405, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 354,
	233, 190, 191, 337, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 353, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 406,
	338, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	362, 269, 270, 271, 272, 236, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 0, 276, 243, 309, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 252, 0, 293,
	231, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 0, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 319, 0,
	0, 350, 351, 352, 372, 336, 0, 223, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 226, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 311, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 207, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	0, 329, 357, 219, 348, 0, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 371, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 250, 0, 0, 0, 358, 0, 301, 283,
	0, 0, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 0, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 353, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 362, 269,
	270, 271, 272, 236, 0, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 0, 293, 231, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 0, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 319, 0, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 311, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 207, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 0, 329,
	357, 219, 348, 0, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 371,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 358, 0, 301, 283, 0, 0,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 446, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 353, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 362, 269, 270, 271,
	272, 236, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1395, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 909, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 1397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 2686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1377, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 662, 897, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 917, 921, 923, 925, 927, 928,
	930, 0, 934, 931, 932, 933, 0, 0, 912, 913,
	914, 915, 895, 896, 918, 0, 898, 0, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 910, 916,
	799, 800, 801, 798, 0, 0, 0, 920, 922, 924,
	926, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1381, 0,
	0, 0, 0, 911, 0, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 1395, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 1374,
	628, 0, 0, 1376, 1378, 1380, 1219, 1382, 1383, 1384,
	1386, 1387, 1388, 1390, 1391, 1392, 1393, 0, 1397, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	0, 0, 0, 0, 1395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1396, 0, 0, 1377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 647, 0, 0, 0, 0, 1394,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 1836,
	646, 0, 0, 0, 0, 1377, 1373, 0, 0, 626,
	0, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	629, 657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1389, 0, 0, 0, 0,
	0, 0, 1379, 0, 652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 0, 0, 1212, 0,
	0, 0, 1214, 1211, 1213, 1217, 1218, 0, 0, 0,
	1216, 0, 0, 0, 0, 0, 653, 658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1381, 643, 0, 645, 661, 0, 0, 0,
	642, 640, 639, 1385, 644, 630, 631, 632, 633, 634,
	635, 0, 659, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 919, 1374, 655, 656, 0, 1376, 1378, 1380,
	0, 1382, 1383, 1384, 1386, 1387, 1388, 1390, 1391, 1392,
	1393, 425, 1381, 424, 431, 421, 0, 0, 0, 0,
	0, 0, 0, 1385, 0, 428, 429, 0, 430, 434,
	0, 650, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 439, 1374, 0, 0, 1396, 1376, 1378, 1380,
	0, 1382, 1383, 1384, 1386, 1387, 1388, 1390, 1391, 1392,
	1393, 0, 0, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1222, 1223, 1224, 1225, 1226, 1227,
	1220, 1221, 0, 1394, 425, 0, 424, 431, 421, 0,
	0, 0, 0, 0, 0, 0, 1396, 0, 428, 429,
	1373, 430, 434, 0, 0, 416, 425, 0, 424, 431,
	421, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	428, 429, 0, 430, 434, 0, 0, 416, 0, 1389,
	0, 0, 0, 1394, 0, 0, 1379, 439, 2191, 0,
	0, 0, 0, 0, 443, 0, 0, 445, 0, 0,
	1373, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2201, 0, 0, 0, 443, 0, 0, 445,
	0, 0, 0, 0, 444, 2194, 0, 0, 0, 1389,
	0, 0, 2189, 0, 0, 0, 1379, 2204, 2205, 0,
	0, 0, 0, 2190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 419, 418, 0,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 2195,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	419, 418, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 417, 419, 418, 0, 0, 0, 442, 0, 0,
	423, 0, 0, 0, 420, 0, 0, 2203, 411, 1686,
	0, 0, 427, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 420, 422, 426, 432,
	0, 433, 435, 0, 2197, 436, 437, 438, 0, 0,
	440, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2196, 2198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	422, 426, 432, 0, 433, 435, 0, 0, 436, 437,
	438, 0, 0, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 422, 426, 432, 0, 433, 435, 2206, 0,
	436, 437, 438, 0, 0, 440, 441, 0, 0, 0,
	2192, 0, 0, 0, 0, 0, 2202,
}

var yyPact = [...]int{
	204, -1000, -311, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -309, 28817,
	28817, -1000, -1000, 1663, -1000, 28308, 9464, 29326, 201, 198,
	29326, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 452, -1000, 27799, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 409, 30784, 29835, 7417, 29326, -289, -1000,
	2382, -149, -1000, -1000, -1000, -1000, -1000, -1000, 2200, 477,
	27290, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30267, 70,
	477, 613, 618, 576, 576, 11500, -49, -51, 2382, 267,
	176, -1000, 720, 204, 1599, 388, 29326, -1000, 1061, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 388, -1000, -1000,
	-1000, 2382, 2382, -1000, 29326, 29326, 8, 1155, -1000, 293,
	230, 226, 1056, -1000, -1000, -1000, -1000, -1000, 2356, -1000,
	29326, 29326, 2005, 29326, -1000, 1281, 326, 30806, 2178, 952,
	501, 2036, -1000, -1000, 1984, -1000, 122, 156, 65, 316,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 142, -1000, 2238,
	-1000, -1000, 101, -1000, -1000, 134, -1000, -1000, -1000, -52,
	-1000, -1000, -1000, -1000, -1000, -1000, -140, -1000, -1000, 643,
	1546, 7417, -1000, 1614, -1000, 2651, -1000, -1000, -1000, -1000,
	4862, 8944, 8944, 8944, 8944, -1000, -1000, 1840, 7417, 1977,
	1976, -1000, -1000, -1000, -1000, 1055, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1598, 8435,
	-1000, 1975, 1971, 1969, 1968, 1965, 1964, 1963, 1962, 1955,
	1936, 1712, 1828, 1935, 1590, 1584, 1928, 1927, 1924, 1582,
	1712, 1712, 1908, 1900, 1897, 1896, 1895, 1894, 1888, 1885,
	1880, 1874, 1868, 1863, 1862, 1861, 1857, 1856, 1855, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13987, -1000, 1054, 916, -1000, 1853, 2164, 2264,
	1748, 2308, 2249, 2244, 2237, 2231, 1460, -1000, -1000, 29326,
	29326, 408, 408, 408, 408, 408, 411, 408, 445, 444,
	442, -1000, -1000, -1000, -1000, -1000, -1000, 533, -1000, -1000,
	-1000, -1000, 874, 29326, -1000, 1805, 1134, 2261, 358, 353,
	233, -1000, 1229, 1229, 1229, 1229, 1134, 279, 356, 2264,
	2264, -74, -66, 1134, 1134, -66, 1134, 1134, 1134, 77,
	-1000, -1000, -1000, 1229, 331, 1229, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2226, 2224, 409, 29326, 48, 29326, 409,
	409, 415, -1000, -170, -1000, -1000, 662, -1000, 584, -1000,
	1281, 325, 324, 925, 1190, -1000, 1097, 29326, 29326, 29326,
	1097, 1097, 15066, 14557, -1000, 29326, -1000, 2264, 1748, -1000,
	1689, 2065, 1688, 1748, 409, 409, 409, 409, 409, 409,
	409, 29326, 29326, 409, 6389, 6389, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2167, 252, 1850, -1000, 29326, 245,
	2264, 2164, 2264, -1000, -1000, 1052, 1445, 1578, -1000, -1000,
	293, 1067, -1000, 837, -1000, -1000, -1000, -1000, 29326, 244,
	-1000, -1000, 1554, 1849, -1000, 376, 886, 855, -1000, 213,
	30711, 23719, 1281, 23719, 29326, -1000, -1000, -1000, -1000, -1000,
	-1000, -53, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 102, -1000, 7417, 7417, 7417,
	7417, 7417, -1000, 471, 7926, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8944, 8944, 8944, 8944, 8944, 8944, 8944, 8944,
	8944, 8944, 8944, 8944, 1839, 1222, 8944, 8944, 8944, 8944,
	2065, 2211, 897, 164, -1000, -1000, -1000, -1000, -1000, 1164,
	1546, 7417, 7417, 29326, -1000, 30319, 7417, 7417, 119, 7417,
	2228, 3334, 29326, 7417, -1000, 1679, 1678, -1000, -1000, 1276,
	7417, 7417, -1000, -1000, 7417, 8944, 7417, -1000, -1000, -1000,
	1722, 2228, 2228, 7417, 7417, 2228, 2228, 2228, 1187, 2228,
	2228, 2228, 2228, 2228, 2228, 2228, 2228, 29326, 2126, 99,
	-1000, -1000, -1000, 1714, -1000, 1804, 1804, 1804, 1804, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1824, 1847,
	-1000, -1000, 1796, 1796, 1796, 1714, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1818, 1818, 1823, 1818, 29326, 2264, -289, 5880, -1000,
	-294, 2164, 7417, -1000, -1000, 7417, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1574, 2202, -1000, 1844, 1041, 29326,
	1181, 29326, 23719, 29326, 1281, 29326, 29326, 408, 408, 408,
	415, -1000, 29326, 874, 2199, 29326, 2328, 8944, 8944, 26781,
	1229, 1134, -1000, 29326, -1000, -1000, -1000, 1229, 29326, 1229,
	1229, 2328, 1229, -1000, -1000, -1000, 1134, 1134, -1000, -1000,
	-1000, -1000, 1229, 1229, -1000, -1000, -54, 2328, 2328, -72,
	-1000, -1000, -1000, 29326, 29326, 408, 29326, 29326, -1000, 29326,
	-1000, -1000, 29326, 2464, 29326, 29326, 2219, -1000, 23719, 29326,
	21683, -1000, -116, 607, 593, 553, -1000, -1000, 374, 402,
	13539, 333, 23719, 4352, -1000, -1000, 1097, 1097, 1097, 4352,
	4352, 1007, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 868,
	-1000, 114, 2164, -1000, -1000, -1000, -1000, -1000, 29326, 23719,
	1281, 29326, 29326, 29326, 29326, -1000, 1843, 29326, 825, -1000,
	-1000, 10991, 1037, 825, 1569, 2032, -291, -1000, 12520, 29326,
	29326, -1000, -1000, -291, -1000, 12010, 29326, 2164, -1000, 2164,
	29326, -1000, 2254, -1000, 293, 184, -1000, -1000, -1000, -1000,
	-1000, -1000, 1034, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 859, -1000, 29326, -1000, -1000, 213, 23719, 24737,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 127, -1000, -1000,
	149, -1000, 424, 40, 1066, -1000, -1000, 52, 139, 458,
	1546, -1000, 1197, 1197, 1193, -1000, 448, -1000, -1000, -1000,
	-1000, 1840, -1000, -1000, -1000, 1263, 2816, -1000, 1099, 1099,
	1069, 1069, 1069, 1069, 1069, 1115, 1115, -1000, -1000, -1000,
	4862, 1839, 8944, 8944, 8944, 8944, 379, 379, 2700, 2663,
	-1000, 7417, 1163, -1000, 7417, 1567, 943, 1029, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1677, 643,
	1676, 1422, 2340, 1667, 7417, -1000, -1000, 1576, 6908, -1000,
	-1000, -1000, 1666, 1026, 1665, -1000, -1000, -1000, 1658, 1050,
	807, 1648, 1941, 1647, 847, 7417, 7417, 1048, 1047, 7417,
	7417, 7417, 7417, 1646, 7417, 7417, 7417, 7417, 7417, 7417,
	7417, 7417, -1000, 7417, 68, -1000, -1000, -1000, -1000, 1439,
	-1000, 1432, -1000, -1000, -1000, 1568, 1568, -1000, 1430, -1000,
	-1000, -1000, -1000, 1429, -1000, -1000, 1427, -1000, -1000, -1000,
	-1000, 1046, -1000, 1546, -1000, 1557, -1000, 966, 838, -1000,
	1398, -1000, -1000, 29326, 9973, 29326, 1805, 2141, 64, -1000,
	798, -1000, 40, -161, 696, 1989, 2339, 29326, 29326, 29326,
	26272, -1000, 1838, 1043, -1000, -1000, 7417, -1000, -1000, 1724,
	29326, 29326, 2328, -1000, -1000, -1000, 29326, -1000, -1000, -1000,
	-1000, 29326, 2328, 2328, 1134, 1229, 1229, -1000, -1000, 1229,
	-1000, 1025, -1000, 29326, -1000, -1000, -1000, 1805, -1000, 10482,
	677, 30458, -1000, 1116, 1116, 786, 1116, 1116, 1116, 1116,
	287, 283, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
	1116, 1116, 1116, 1116, 1116, 1116, 1834, -1000, 62, 2208,
	151, 798, 171, 2319, 854, -1000, -1000, -1000, -1000, 17102,
	17102, 13030, 17102, -1000, 1074, -1000, -1000, 602, 573, 647,
	-1000, -1000, 419, -1000, -1000, 696, -1000, -1000, -1000, 1833,
	1154, -1000, -1000, 1828, -1000, 4352, 4352, 4352, -1000, -1000,
	17611, 29326, -1000, -166, -1000, -130, -1000, -1000, 832, 696,
	2030, 823, -1000, 823, -1000, 9973, -1000, 2328, 6389, -1000,
	21683, -1000, -1000, 25755, -1000, 25246, 2328, -82, -1000, 2133,
	716, -1000, 1827, -1000, 1038, 2097, -1000, 811, -1000, 1153,
	1035, -1000, 716, 1027, 2079, 811, -1000, -1000, 1016, 6,
	-1000, -1000, 29326, 1554, 1019, 24737, 790, -1000, 418, 1015,
	1014, -1000, 23719, 109, 23719, -1000, 23719, -1000, -1000, 231,
	-1000, 29326, 2159, -1000, -1000, -1000, 1513, -316, -1000, -1000,
	-1000, -1000, -1000, 1018, -1000, 379, 379, 2700, 1716, -1000,
	8944, -1000, 8944, 2206, 1159, -1000, 7417, 1333, 30224, 1421,
	16593, 29326, -1000, -1000, 7417, 7417, -1000, 2154, -1000, 7417,
	7417, 1274, -1000, 29326, -1000, -1000, -1000, -1000, 16593, -1000,
	8944, -1000, 7417, 909, 2149, -43, -43, 2138, 2127, 2118,
	1008, -43, 2086, 2077, 2059, 2046, 2038, 2027, 2011, 1913,
	1546, -1000, -1000, 1644, 1641, 1003, -1000, 972, 1640, 971,
	964, 5880, -1000, -82, 7417, 7417, 7417, 2101, -1000, -1000,
	79, 1639, 804, -1000, -1000, -1000, 17041, 1804, 1804, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1824, -1000,
	-1000, 1796, 1796, 1796, 1714, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1818, 1818, 1823, 1818, -1000, 2190,
	-1000, -33, 1116, 407, 23719, 315, -1000, 29326, 2028, 260,
	2108, 29326, 1813, 1811, 1810, 29326, 762, -1000, 1010, 204,
	-1000, 29326, 1546, -1000, 1281, -1000, 1134, -1000, -1000, 2328,
	998, -1000, -1000, 2328, 1134, 1134, 1229, 29326, -1000, 2181,
	-1000, -1000, -1000, 17041, 582, -1000, 29326, 1233, 564, 408,
	564, 1230, 1809, -1000, -1000, -1000, 29326, 29326, 29326, 1228,
	1227, 30508, -1000, 1415, -1000, 1409, 1116, 1116, 1399, 1549,
	1548, 1545, 1116, 1116, 1394, 1544, 24228, 1393, 1383, 1381,
	1425, 1538, 505, 1400, 1391, 1390, 29326, 1807, 1494, -33,
	1116, 144, 1150, 407, 1280, 14048, 29326, 21683, 21683, 21683,
	21683, -1000, 2063, 2062, -1000, 2089, 2070, 2102, 29326, 21683,
	1805, -1000, 24228, -1000, -1000, -1000, 2065, 944, 2303, 569,
	7417, -1000, -1000, -1000, 539, 23719, 1532, 333, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 29326, 29326, 1637, 2306,
	-1000, 803, -1000, -1000, 1005, -1000, 2306, -30, -14, 1223,
	-291, 5880, 263, 29326, -291, 29326, 5880, -1000, 29326, 258,
	-291, 29326, 1379, -1000, -1000, -1000, 2335, 23719, 1281, 1042,
	23210, -1000, 90, -1000, 124, 382, 1530, -1000, 423, 75,
	-1000, 1149, 1513, -1000, -1000, -1000, 8944, -1000, -1000, -1000,
	-1000, 1546, 7417, 1635, -1000, 537, 537, 1634, -1000, 1804,
	1804, -1000, 1714, 1796, 1714, 537, 537, 1632, -1000, 1353,
	1906, -1000, 1878, 1865, 7417, -1000, 1628, 2686, 1030, -182,
	-43, -1000, 1790, -1000, -43, -43, -43, -43, -1000, -43,
	-43, -43, -43, -43, -43, -43, -43, -1000, -1000, -1000,
	1529, -1000, -1000, -1000, 1364, -1000, 1330, -1000, -30, 1546,
	1546, -1000, -1000, 2091, 1524, 457, 9973, 2125, 228, 1283,
	-1000, -1000, 22701, 345, -1000, -1000, -1000, 420, 150, 1329,
	335, -1000, 29326, 167, 29326, -1000, -1000, -1000, -1000, -1000,
	2108, -1000, 774, 192, 10482, 10482, 10482, 388, 753, 1001,
	21683, 29326, -1000, 21174, 1627, -1000, 696, 2328, -1000, 29326,
	-1000, 2328, 2328, 1134, -1000, 228, 30808, -1000, -1000, 29326,
	29326, -1000, 29326, 29326, 408, 7417, -1000, -1000, -1000, 29326,
	-1000, -1000, -1000, -1000, 16593, 16593, -1000, -1000, -1000, -1000,
	1523, 1521, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 295, 29326, 919, -1000, 1148, 1283,
	22701, 1145, 1519, 345, -1000, 1517, -1000, 661, 29326, 29326,
	-1000, 773, -1000, 1126, 1992, 2026, 1992, -1000, -1000, -1000,
	-1000, 2055, -1000, 2048, -1000, -1000, 773, -1000, -1000, -1000,
	-1000, -1000, 569, -1000, 2243, 564, 564, 564, 1626, -1000,
	790, 1625, -1000, -1000, -1000, -1000, -1000, 2312, 2305, 22192,
	2312, -296, -5, 2304, 2301, 2370, -1000, 1624, 776, -291,
	-1000, -1000, 716, -1000, -1000, -1000, -291, -1000, 716, -1000,
	-1000, 1281, -1000, 113, -1000, -1000, -1000, -1000, -1000, -1000,
	22, -1000, 29326, -1000, 1513, 1511, 74, -1000, 1546, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7417, -1000, -1000, -1000, 1851, -1000,
	-1000, 7417, 1623, 1510, -1000, 387, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1621,
	1620, -296, -1000, -1000, -1000, 17041, -1000, 1550, -1000, -1000,
	1501, 36, -1000, -1000, -1000, 1499, 1497, 1328, -1000, -1000,
	1299, 965, 51, -1000, -1000, -1000, -1000, -1000, -1000, 1280,
	29326, 1784, -1000, 1116, 1116, 1116, 29326, 1618, 759, -1000,
	1613, 1612, 17102, 21683, 21174, 745, -1000, 992, -1000, -1000,
	-1000, 2328, -1000, -1000, 2328, -1000, -1000, 30808, -1000, -1000,
	1240, 8944, -1000, -1000, 1496, 16084, 552, 638, 1781, -1000,
	255, 2369, -1000, 1221, 1219, -1000, 29326, -1000, 1780, 1718,
	215, 1779, -1000, 1762, 1761, 29326, 1733, -1000, -1000, -1000,
	-1000, -1000, -1000, 305, 918, -1000, 1494, 1488, -1000, 36,
	1487, -1000, -1000, -1000, 29326, 661, 661, 2310, 29326, 5880,
	-1000, -1000, 7417, 1756, -1000, 7417, -1000, -1000, -1000, -1000,
	-1000, 1745, 2145, -1000, -1000, -1000, -1000, -1000, -1000, 7417,
	7417, -1000, -1000, -298, 1483, -1000, -1000, 2300, 1482, 1428,
	29326, -1000, 716, 716, 696, -1000, -1000, -72, -1000, -1000,
	-1000, 1727, -1000, 1406, -43, -1000, 2310, -1000, 2298, -1000,
	-1000, -298, -233, -1000, -1000, -1000, -1000, 217, -1000, -1000,
	163, -1000, -1000, 1292, 375, -1000, -1000, 661, 20156, 16593,
	16084, 1478, -1000, 30508, 10482, 102, 30508, 2328, 745, 992,
	-1000, -1000, 1020, -1000, -1000, -1000, -1000, 2700, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1294, 1731, -119, -1000, -1000, 1726, 20156, 343, 343,
	20156, 20156, 20156, 1721, 443, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2264, -1000, -1000, 1546, 29326, 1546, 20665,
	-1000, 2297, 2296, 1546, 643, -300, 1293, -1000, 1477, -8,
	-1000, -1000, 651, -302, -31, -20, -1000, -1000, -1000, 58,
	7417, -300, 29326, 366, 1475, -1000, -1000, 159, -1000, -1000,
	917, -1000, 1714, 7417, -1000, -1000, -1000, 384, 30458, -1000,
	-1000, -72, 384, 2310, -1000, 1607, 7417, 1712, -215, 20156,
	911, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 902, 888,
	873, 20156, -1000, -1000, -1000, 240, -1000, 869, 865, -1000,
	-1000, -1000, -1000, -1000, 1707, -1000, -1000, 2294, -1000, 1474,
	412, -27, -20, -1000, 2293, -11, 2292, 2275, 1551, -1000,
	2825, -1000, -1000, -1000, 643, -1000, 2180, -1000, -1000, 19,
	-1000, -1000, -1000, 20156, 2148, 1389, 214, 2273, -1000, 214,
	2264, -1000, 1361, -1000, 2023, -1000, 73, 863, -1000, -1000,
	-1000, -1000, 862, -1000, -1000, -1000, 19647, 29326, 1428, -1000,
	1705, 1282, -5, -19, 2272, -1000, 1428, 2271, 1428, 1428,
	-1000, -1000, 3843, -292, -42, 257, 1473, -1000, 158, -1000,
	-1000, 2148, -1000, 2270, 246, -1000, -1000, 443, -1000, 2022,
	2021, 2332, -1000, -1000, -1000, -1000, 158, 158, 158, 158,
	87, -1000, -1000, 861, -1000, -1000, 2204, 15575, -35, -1000,
	-1000, -1000, 1467, -1000, 1428, -1000, -1000, 1191, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1116, 1359, 185, -1000, -1000,
	-1000, 19138, 227, 264, 251, -1000, 396, -1000, -1000, -1000,
	2367, -1000, 2363, 520, 520, -1000, -1000, 29326, -1000, 29326,
	-1000, 857, -1000, -1000, -1000, 963, -1000, -1000, -1000, -1000,
	3843, 1277, -1000, 29326, -1000, 29326, 225, 1271, 8944, 1704,
	8944, 1703, 236, 1701, -1000, -1000, -1000, 1285, 247, -1000,
	-1000, 623, -1000, 1111, -1000, 18629, 29326, -1000, -1000, -1000,
	846, 1700, 2266, -1000, 2611, 29326, 2215, 29326, 1698, 1096,
	8944, -1000, -1000, -1000, 29326, 5371, -1000, 929, -1000, -1000,
	380, 232, -1000, 842, -1000, 836, 18120, 1266, 1278, -1000,
	-1000, 1546, 29326, 835, -1000, 29326, 218, -1000, -1000, -1000,
	788, -1000, -1000, -1000, -1000, 380, 2076, -1000, 1258, -1000,
	-1000, 30234, 500, -1000, -1000, 30234, 224, -1000, 368, 1696,
	-1000, -1000, 727, -1000, 29326, 551, 7417, -1000, 224, 30508,
	-1000, 7417, 715, -1000, 30508, 698, -1000, -1000,
}

var yyPgo = [...]int{
	0, 120, 2862, 199, 140, 137, 198, 2861, 2859, 2182,
	2181, 2858, 2857, 2856, 2855, 2854, 2853, 2851, 2850, 2849,
	2848, 2846, 2844, 2843, 2842, 2841, 2840, 2839, 2838, 2835,
	2834, 196, 2833, 2832, 2831, 2830, 2829, 2815, 2801, 2800,
	2798, 2797, 2796, 2794, 2793, 2792, 2766, 2761, 2760, 2759,
	2758, 2756, 2755, 2753, 2751, 2750, 2749, 2747, 132, 2745,
	2160, 2744, 2727, 2716, 2712, 2711, 2710, 2705, 170, 2704,
	2699, 2698, 2697, 2696, 2694, 2693, 2692, 2690, 2687, 2686,
	2685, 2683, 2681, 2680, 2677, 2676, 157, 2675, 2673, 143,
	2672, 2670, 2669, 2667, 193, 168, 53, 2664, 36, 2660,
	2656, 2654, 2653, 2652, 68, 2651, 2650, 109, 159, 203,
	1002, 207, 200, 153, 126, 83, 2645, 2159, 2643, 121,
	183, 116, 24, 2642, 134, 2637, 107, 35, 32, 194,
	99, 42, 119, 88, 2635, 169, 66, 2634, 76, 2633,
	2632, 205, 154, 2631, 93, 2630, 2629, 2628, 2625, 162,
	91, 2624, 52, 2623, 122, 248, 89, 82, 2622, 2621,
	2620, 67, 2615, 2612, 2611, 2610, 145, 2609, 102, 63,
	2608, 2607, 2605, 49, 187, 54, 2603, 50, 2602, 2599,
	2598, 2597, 55, 2596, 2595, 16, 20, 22, 2594, 21,
	2593, 2590, 2, 2589, 172, 85, 75, 105, 2587, 398,
	2586, 2585, 2584, 117, 2582, 420, 2581, 2580, 2579, 2578,
	11, 2577, 164, 39, 2576, 71, 95, 92, 181, 160,
	2575, 2573, 2570, 142, 64, 123, 0, 2569, 115, 2568,
	2567, 2566, 201, 2565, 188, 206, 184, 155, 215, 129,
	2564, 2563, 65, 2560, 118, 70, 94, 7, 2559, 179,
	2558, 12, 139, 2557, 166, 2556, 127, 4, 108, 2555,
	2554, 34, 233, 2550, 2549, 2545, 90, 2544, 2543, 97,
	103, 2542, 2540, 2539, 33, 2538, 28, 30, 2537, 77,
	2536, 202, 2535, 146, 104, 151, 128, 113, 175, 176,
	57, 56, 2534, 1173, 114, 72, 25, 2532, 180, 2524,
	204, 185, 2523, 178, 2517, 192, 352, 167, 2516, 150,
	8, 37, 26, 2515, 9, 2514, 112, 2511, 2510, 18,
	2509, 17, 2508, 2507, 2505, 2503, 6, 2501, 2500, 2496,
	3, 1, 2493, 5, 171, 38, 152, 2492, 190, 148,
	2491, 2490, 69, 2489, 2487, 2486, 709, 2485, 2481, 2480,
	2479, 2478, 2477, 2476, 2475, 2472, 74, 43, 2471, 2469,
	2468, 2467, 61, 106, 2466, 2464, 2462, 2461, 29, 135,
	2460, 19, 2459, 27, 23, 31, 2458, 87, 2457, 13,
	149, 2456, 2454, 15, 2451, 2447, 10, 14, 2446, 2445,
	86, 2444, 62, 44, 125, 73, 2442, 60, 173, 100,
	2440, 2439, 195, 197, 165, 2438, 130, 186, 209, 2437,
	182, 2436, 2435, 2430, 2428, 2427, 2426, 1181, 2425, 2424,
	191, 45, 59, 79, 2421, 2419, 2418, 58, 124, 81,
	78, 161, 2417, 163, 2413, 2409, 80, 2408, 2407, 2406,
	2405, 2402, 156, 2400, 2399, 2398, 189, 213, 2392,
}

//line mysql_sql.y:8717
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 441, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 92, 439, 439, 439, 440, 440,
	90, 79, 91, 389, 389, 388, 388, 387, 387, 343,
	343, 386, 386, 386, 385, 385, 385, 384, 384, 383,
	383, 382, 382, 380, 380, 381, 379, 378, 378, 378,
	376, 376, 376, 372, 372, 374, 373, 373, 375, 367,
	367, 370, 370, 368, 368, 368, 368, 371, 366, 366,
	366, 365, 365, 78, 78, 78, 295, 295, 77, 77,
	309, 309, 309, 309, 309, 307, 307, 307, 307, 307,
	307, 306, 306, 305, 305, 310, 310, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 69, 69, 69,
	69, 72, 72, 72, 73, 304, 304, 304, 70, 71,
	71, 294, 294, 299, 299, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 303, 303, 303,
	301, 301, 300, 300, 302, 302, 63, 63, 63, 66,
	65, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	64, 64, 64, 64, 64, 64, 59, 59, 59, 59,
	59, 58, 58, 60, 60, 291, 291, 290, 74, 74,
	75, 443, 443, 442, 444, 444, 444, 444, 76, 82,
	82, 82, 82, 82, 82, 82, 81, 81, 84, 84,
	83, 85, 68, 68, 68, 68, 68, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 413, 413, 413, 415,
	415, 230, 231, 445, 233, 229, 229, 229, 409, 409,
	410, 411, 412, 412, 412, 80, 7, 7, 7, 7,
	7, 7, 57, 62, 190, 190, 190, 191, 191, 191,
	191, 191, 55, 61, 61, 426, 426, 56, 433, 433,
	346, 346, 244, 244, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	349, 350, 240, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 38, 37, 37,
	37, 280, 280, 36, 446, 446, 219, 219, 45, 46,
	47, 48, 49, 50, 51, 35, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 54, 54, 361, 361, 448,
	448, 448, 52, 53, 345, 345, 345, 43, 42, 41,
	40, 40, 34, 34, 33, 33, 39, 102, 103, 237,
	237, 237, 239, 239, 235, 447, 447, 321, 321, 238,
	238, 32, 32, 32, 32, 236, 236, 218, 234, 234,
	234, 8, 8, 6, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 18, 20, 288, 288, 285, 19,
	14, 13, 16, 12, 15, 17, 5, 5, 5, 5,
	9, 9, 10, 114, 114, 156, 156, 421, 421, 417,
	417, 418, 418, 418, 419, 419, 420, 420, 86, 355,
	355, 355, 355, 355, 355, 4, 137, 137, 136, 136,
	354, 354, 354, 354, 354, 354, 292, 292, 398, 398,
	398, 399, 135, 135, 130, 130, 356, 356, 258, 400,
	400, 364, 364, 363, 363, 362, 362, 133, 133, 134,
	134, 117, 117, 95, 95, 369, 369, 369, 369, 377,
	377, 342, 342, 182, 182, 213, 213, 214, 214, 107,
	107, 108, 108, 108, 108, 108, 108, 406, 406, 408,
	408, 407, 132, 132, 128, 128, 129, 129, 129, 127,
	127, 126, 125, 125, 124, 122, 122, 122, 123, 123,
	123, 110, 110, 110, 109, 109, 109, 109, 109, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 111, 111, 414, 414, 414, 347, 347, 347, 352,
	352, 196, 196, 197, 197, 195, 195, 112, 112, 113,
	113, 113, 113, 194, 194, 193, 115, 115, 121, 120,
	120, 116, 116, 116, 116, 204, 204, 203, 203, 203,
	203, 89, 93, 93, 94, 140, 140, 202, 201, 201,
	201, 139, 139, 138, 138, 131, 131, 119, 119, 119,
	119, 200, 118, 198, 438, 438, 437, 437, 436, 434,
	434, 434, 435, 435, 435, 435, 391, 391, 391, 391,
	391, 224, 224, 224, 228, 228, 227, 227, 227, 227,
	227, 232, 3, 3, 3, 3, 3, 24, 24, 24,
	24, 24, 24, 30, 148, 149, 29, 141, 141, 142,
	142, 143, 143, 144, 145, 145, 145, 147, 146, 28,
	21, 422, 425, 423, 423, 427, 427, 427, 428, 428,
	428, 429, 429, 22, 99, 104, 104, 101, 106, 106,
	106, 106, 106, 100, 424, 430, 430, 430, 289, 289,
	286, 287, 287, 284, 283, 283, 283, 432, 432, 431,
	431, 431, 225, 225, 23, 279, 279, 281, 282, 282,
	282, 273, 273, 273, 273, 27, 277, 277, 278, 278,
	278, 278, 278, 274, 274, 276, 276, 272, 272, 272,
	272, 272, 26, 105, 105, 271, 271, 269, 269, 267,
	267, 268, 268, 266, 266, 266, 270, 270, 25, 25,
	25, 97, 96, 96, 96, 216, 216, 215, 215, 98,
	348, 348, 311, 311, 312, 312, 312, 315, 315, 327,
	327, 328, 328, 326, 326, 333, 333, 332, 332, 331,
	331, 330, 330, 329, 329, 329, 329, 324, 324, 323,
	323, 313, 313, 313, 313, 313, 314, 314, 314, 322,
	322, 325, 325, 173, 173, 174, 174, 174, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 396, 396, 397,
	176, 176, 176, 180, 180, 180, 180, 180, 180, 175,
	175, 177, 177, 157, 157, 155, 155, 150, 150, 151,
	151, 152, 152, 153, 153, 154, 154, 154, 154, 154,
	154, 297, 297, 394, 394, 395, 395, 390, 390, 390,
	393, 393, 393, 393, 393, 392, 392, 158, 211, 211,
	211, 226, 226, 226, 226, 210, 210, 210, 172, 172,
	171, 171, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 296, 296, 241,
	241, 242, 242, 189, 188, 188, 188, 188, 188, 186,
	187, 185, 185, 185, 185, 185, 184, 184, 183, 183,
	183, 275, 275, 181, 181, 179, 179, 179, 178, 178,
	178, 334, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 250, 250, 255, 255, 405,
	405, 404, 159, 159, 159, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 168, 168, 168, 319, 319, 319,
	319, 319, 320, 320, 320, 317, 317, 318, 318, 259,
	260, 260, 353, 353, 316, 316, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 360, 360, 360, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 416, 416,
	416, 401, 401, 401, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 208, 208, 208, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 261,
	261, 262, 262, 357, 357, 357, 357, 357, 357, 358,
	358, 359, 359, 359, 359, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 248, 205, 205, 205, 263, 256,
	256, 257, 257, 251, 251, 251, 251, 251, 251, 251,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 252, 252, 254, 254, 265, 265, 265, 264,
	264, 264, 264, 264, 264, 264, 170, 170, 170, 170,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 161, 161, 161, 161, 165, 165, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 166, 166, 166, 166, 164, 164, 164, 164, 164,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 87, 88, 88, 163,
	212, 212, 335, 335, 338, 338, 336, 336, 337, 339,
	339, 339, 340, 340, 340, 341, 341, 341, 344, 344,
	217, 217, 217, 223, 223, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	10, 10, 2, 0, 2, 1, 3, 3, 3, 0,
	2, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 3, 0, 1, 3, 0, 1, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 8, 5, 7, 0, 3, 8, 5,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 4, 1, 3, 1, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 6, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 2, 2, 1, 2, 2, 2,
	3, 2, 7, 7, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 4, 4, 4, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	6, 7, 4, 4, 7, 8, 3, 3, 3, 0,
	2, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 4, 1, 3, 1, 1, 3,
	5, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 6, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 0, 2, 1, 3,
	2, 1, 5, 4, 4, 2, 0, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 1, 3, 4, 0,
	1, 0, 1, 1, 3, 1, 1, 0, 4, 1,
	3, 2, 1, 0, 8, 0, 4, 7, 4, 0,
	2, 0, 2, 0, 2, 0, 4, 1, 3, 1,
	1, 4, 3, 4, 5, 4, 5, 2, 3, 1,
	3, 6, 0, 3, 0, 1, 2, 4, 4, 0,
	1, 3, 1, 3, 3, 0, 1, 1, 0, 2,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 12, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 7,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 8, 0, 2, 6, 0, 2,
	2, 3, 3, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 6, 0, 4, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 11, 9,
	11, 2, 2, 4, 5, 1, 3, 0, 3, 5,
	0, 1, 0, 6, 0, 3, 5, 0, 4, 0,
	3, 1, 3, 4, 5, 0, 3, 1, 3, 2,
	3, 1, 2, 0, 4, 6, 5, 0, 2, 0,
	2, 4, 5, 4, 5, 1, 5, 6, 5, 0,
	3, 0, 1, 0, 1, 1, 3, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 4, 1, 3, 3,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 1, 7, 7, 7, 7, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 5, 6, 4, 1, 1, 2, 0,
	1, 1, 2, 5, 0, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 5, 6, 6,
	6, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 6, 8, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 6, 6, 7, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 8, 4, 2, 3, 2,
	4, 4, 6, 2, 2, 4, 6, 4, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 2, 3, 5, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -441, -2, -1, -3, -90, -4, -86, -5, -6,
	-8, -67, -81, -83, -85, -84, -31, -7, -80, -58,
	-59, -63, -69, -74, -77, -78, -79, -91, -87, -88,
	-89, -107, -92, -24, -23, -22, -21, -99, 401, 12,
	447, -9, -10, -406, -11, 233, -229, -230, -231, -233,
	-445, -32, -33, -34, -40, -41, -42, -43, -52, -53,
	-54, -35, -36, -37, -38, -45, -46, -47, -48, -49,
	-50, -51, -39, -102, -103, -56, -55, -61, -57, -62,
	-101, 209, -60, 61, -64, -65, -66, -70, -71, -72,
	-73, -75, -76, 332, 338, 391, 529, 530, 46, -108,
	-110, 531, -25, -26, -27, -28, -29, -30, 205, 14,
	480, -12, -15, -13, -16, -14, -19, -20, -18, -17,
	-100, 228, 227, 37, 291, 292, 293, 336, 226, 206,
	13, 137, 138, 140, 141, 30, 41, 314, -109, 67,
	207, -111, 10, 533, 532, -117, 38, -155, -226, 70,
	78, -220, -222, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 450,
	312, 313, 477, 245, 269, 362, 272, 279, 137, 156,
	150, 178, 170, 145, 249, 284, 250, 77, 140, 433,
	88, 412, 388, 143, 264, 266, 268, 271, 251, 166,
	161, 263, 247, 529, 159, 252, 39, 253, 183, 254,
	255, 482, 408, 311, 414, 276, 386, 160, 409, 267,
	411, 185, 189, 425, 338, 154, 155, 416, 427, 182,
	225, 42, 479, 237, 428, 187, 181, 177, 436, 280,
	278, 180, 153, 176, 248, 50, 191, 190, 192, 382,
	383, 384, 385, 256, 257, 326, 424, 173, 162, 316,
	146, 22, 431, 232, 413, 339, 258, 273, 281, 186,
	188, 239, 244, 481, 390, 243, 277, 429, 158, 236,
	265, 231, 432, 147, 332, 341, 259, 141, 270, 426,
	435, 49, 354, 152, 144, 222, 138, 241, 246, 11,
	260, 261, 262, 283, 282, 274, 174, 238, 179, 164,
	151, 175, 139, 240, 434, 355, 527, 314, 371, 172,
	169, 242, 215, 430, 415, 142, 375, 356, 167, 285,
	523, 524, 525, 327, 310, 286, 287, 165, 229, 407,
	288, 290, 381, 303, 357, 389, 363, 358, 198, 294,
	418, 184, 526, 410, 295, 296, 297, -117, -60, -10,
	-9, -109, -110, -155, 213, -234, 23, 386, -68, 387,
	209, 67, -226, -5, -4, -86, -58, -107, -232, -226,
	291, 291, -232, 213, -226, 243, 370, -346, 218, -306,
	-279, 244, -305, -281, -308, -282, 31, 205, 207, 206,
	240, 14, 336, 214, 12, 10, 337, 226, 24, 25,
	27, 13, 338, 340, 28, 341, 344, 345, 346, 41,
	349, 350, 233, 70, 78, 73, 251, -149, -226, -257,
	-251, 95, 234, -253, -246, -247, -249, -386, -380, -245,
	67, 121, 122, 129, 96, -248, -334, 35, 98, 487,
	448, -206, -207, -208, -209, -226, -381, -379, 73, 79,
	82, 85, 86, 84, 83, 163, 81, 74, 133, 134,
	-110, 70, -401, 495, -221, 516, 515, 46, -351, -359,
	212, -357, 132, 168, 229, 164, 12, 127, 381, 165,
	492, 512, 450, 496, 519, 489, 490, 484, 485, 486,
	488, 497, 499, 511, -360, 507, 517, 518, 505, 72,
	71, 510, 509, 498, 493, 494, 500, 483, 491, 501,
	502, 508, 513, 514, 320, 88, 321, 322, 440, 315,
	323, 218, 386, 55, 324, 325, 326, 327, 328, 447,
	329, 56, 330, 319, 233, 371, 331, 167, 184, 452,
	451, 453, 444, 441, 439, 442, 443, 445, 446, 503,
	504, 506, -302, -300, -226, -93, -94, 521, -126, -127,
	-199, 19, 6, 7, 8, 9, -439, 388, 481, 294,
	333, 215, 312, 371, 295, 243, -273, -271, -348, 288,
	284, 223, 222, 89, 440, 212, 347, -417, -418, 202,
	203, 204, -408, 473, -407, -226, 322, 26, 213, 333,
	418, 419, 420, 421, 422, 423, -44, -361, -345, 415,
	414, -238, 413, 406, 417, 408, 313, 297, 296, 205,
	474, -217, 357, 389, 239, 437, 438, 334, 390, 425,
	426, 409, 88, 171, 168, 215, 213, 312, 440, 371,
	295, -417, 142, 139, -293, 142, 94, 147, 146, -293,
	243, 370, 40, -299, 381, -298, -300, 425, 426, 436,
	71, 72, 424, -217, 88, 407, 407, -127, -199, -126,
	-108, -110, -89, -406, 312, 371, 243, 214, 213, 215,
	440, 291, 333, 295, -347, -414, 31, -352, 199, 200,
	201, 32, 33, -1, 73, -133, 235, -155, 135, -133,
	-127, -126, -127, -155, -210, -226, 388, 104, -68, -68,
	387, -409, -410, -411, -413, 209, 387, 386, 135, 15,
	-232, -232, 65, -155, -281, 243, -306, -279, 35, 64,
	136, 216, 136, 64, 67, 334, 312, 371, 335, 440,
	213, 347, 215, 243, 348, 312, 371, 213, 215, 440,
	243, 312, 213, 215, 371, 243, 348, 406, 407, 215,
	26, 339, 342, 343, 407, -365, 436, 136, 94, 91,
	92, 93, -251, 111, -264, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-110, -251, -257, 46, -249, -249, -249, -249, -334, -255,
	-251, 67, 67, 135, 73, -251, 67, 67, 67, 67,
	67, 67, 67, 67, -358, 67, 67, -261, -262, 67,
	67, 67, 73, 73, 67, 67, 67, 73, -262, -262,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 136, -161, -165,
	-162, -164, -163, -167, -166, 168, 169, 132, 172, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 30,
	184, 229, 164, 165, 166, 167, 185, 150, 170, 478,
	193, 151, 194, 152, 195, 153, 196, 154, 155, 197,
	156, 159, 160, 161, 158, 135, -127, 136, 67, -95,
	38, -129, 21, -111, -110, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 79, -148, -226, -141, -226, -269,
	218, -269, -269, -269, -269, 214, -269, 213, 213, 213,
	-419, 149, 136, -408, -132, 67, -237, 112, 116, 23,
	241, 241, 278, -446, -447, 15, 114, -235, -447, -235,
	-235, -237, -448, 214, 416, 42, 242, 241, -128, -129,
	-128, 410, 407, -321, 411, 412, -238, -237, -237, -238,
	-237, -237, -237, 213, 215, 440, 295, -446, 241, -446,
	30, 30, -346, -155, -346, 474, -218, -226, -346, -346,
	-420, 217, 429, 480, 145, 146, 147, -281, 243, 243,
	136, 104, 23, -301, 104, 115, -300, -300, -300, -301,
	-301, -175, 40, -225, 132, -226, 73, -175, 40, -443,
	-442, -155, -128, -111, -110, 68, 68, 68, -346, -346,
	-346, -346, -346, -346, -346, -232, -141, -346, -112, -113,
	123, -251, -226, -112, 38, -354, 46, -107, 67, 30,
	67, -226, -355, 46, -107, 67, 30, -128, -95, -129,
	135, 79, 73, -68, 68, 136, -412, 85, 86, -415,
	182, 174, -226, -82, 73, -3, -4, -5, -6, -31,
	-58, -107, -382, -380, 67, 31, 380, 64, 15, -307,
	213, 440, 333, 239, 215, 312, -305, -288, -285, -283,
	-225, -281, -284, -283, -310, -210, 407, -96, 392, 290,
	-251, -251, -251, -251, -251, 84, 95, 310, 85, 86,
	-246, -265, 31, 286, 287, -247, -247, -247, -247, -247,
	-247, -247, -247, -247, -247, -247, -247, -254, -263, -334,
	67, 114, 112, 116, 113, 97, -249, -249, -247, -247,
	68, 136, -405, -404, 99, -251, -251, -226, -402, -403,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 324, 319, 325, 323, 315, 331, 326, 327, 167,
	471, 472, 465, 466, 467, 468, 469, 470, -256, -257,
	-256, -251, -402, -256, -205, 32, 31, -251, -416, 308,
	307, 309, -130, -226, -256, 68, 68, 68, 79, -257,
	-257, -256, -247, -256, -403, -205, -205, -257, -257, -205,
	-205, -205, -205, 123, -205, -205, -205, -205, -205, -205,
	-205, -205, -300, 40, -341, 355, 354, -335, -337, 67,
	-336, 67, -336, -336, -336, 67, 67, -338, 67, -338,
	-338, -335, -339, 67, -339, -340, 67, -339, -226, -128,
	-94, -363, -362, -251, 40, 522, -95, -251, -125, -124,
	-251, -440, 73, 34, 67, 135, -155, 95, -422, -226,
	-289, -286, -283, -226, -279, -226, -226, -269, -269, -269,
	-420, -407, 34, -131, -226, -195, 16, -249, -249, -283,
	243, -446, -237, -219, -218, -239, -447, -234, -239, -239,
	-195, -447, -237, -237, -239, -235, 407, -195, -195, -321,
	-236, -226, -236, -269, -218, -219, -219, -155, -190, 210,
	207, -174, -192, 352, 245, -270, 249, 77, 250, 388,
	251, 214, 253, 254, 255, 225, 256, 257, 258, 381,
	259, 260, 261, 262, 335, 6, 298, 40, -422, -422,
	30, -289, -226, -120, -115, -119, -116, -121, -198, -200,
	-118, 67, -155, -110, -226, 430, 431, 143, 146, 145,
	31, 380, -304, 380, 31, -279, -298, -294, 73, 381,
	-284, -303, 64, 132, -362, -301, -301, -301, -303, -303,
	131, 136, -444, 429, 430, 202, -95, -422, -288, -279,
	-226, -157, -155, -157, -226, 67, -226, -194, 136, -193,
	15, -227, -226, 34, 73, 135, -194, 73, -292, 64,
	-356, -258, -400, 521, -135, 68, -130, -398, -399, -130,
	-134, -226, -356, -135, 68, -398, -95, -95, -226, 23,
	-68, -410, 135, 136, -131, -307, -287, -284, -309, 123,
	-226, -295, 136, 480, 534, 71, 216, -432, -431, 372,
	68, 136, -366, 217, 447, 73, 535, 198, 84, 310,
	85, 86, -334, -257, -254, -249, -249, -247, -247, -252,
	230, -252, 94, -251, -250, -404, 101, -251, 34, 136,
	65, 135, 68, 68, 15, 15, 68, -251, 68, 15,
	15, -251, 68, 135, 68, 68, 68, 68, 65, 68,
	136, 68, 136, -257, -251, 68, 68, -251, -251, -251,
	-257, 68, -251, -251, -251, -251, -251, -251, -251, -251,
	-251, -344, 356, 79, 79, -212, 73, -212, 79, 79,
	79, 136, 68, 73, 136, 22, 136, -122, 36, 37,
	-149, -142, -143, -144, -145, -161, -210, 169, 172, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	229, 164, 165, 166, 167, 185, 150, 170, 151, 152,
	153, 154, 155, 156, 159, 160, 161, 158, -226, -132,
	35, -425, 359, -433, 136, 40, -431, 440, -272, 65,
	-105, 15, -155, -155, -155, 15, -114, -156, -226, 67,
	68, 136, -251, -280, 65, -226, -219, -195, -226, -155,
	-226, -195, -195, -237, -239, -239, -235, 135, -218, -132,
	-152, -158, -153, -210, -242, -154, 221, 219, 223, -395,
	89, 224, 275, 90, 214, -191, 214, 90, 220, 224,
	219, 136, -192, -223, 104, -223, -217, 131, -223, -223,
	-223, -223, 252, 252, -223, -223, -223, -223, -223, -223,
	-223, -223, -223, -223, -223, -223, -223, -223, 67, -426,
	359, 30, 318, -433, -106, 312, 30, -201, -202, -203,
	-204, 53, 57, 59, 54, 55, 56, 60, 30, 136,
	-224, -228, 34, -226, 73, -224, -110, -115, -120, -224,
	67, 144, 147, 147, 146, 216, 67, 104, -303, -303,
	-303, 40, -225, -442, 436, 430, 64, 136, -142, -195,
	-113, -115, -226, 73, -226, 123, -195, -369, 411, 39,
	136, 67, 68, 136, 46, 136, 104, 68, 136, 68,
	46, 135, 388, -226, -380, 68, -309, 136, 216, 135,
	135, -285, 338, -225, -287, 20, 480, -210, 38, -216,
	-215, 73, 535, 68, -252, -252, 94, -249, -246, 68,
	102, -251, 100, -159, -161, 354, 355, -160, -166, 132,
	168, 229, 167, 166, 164, 354, 355, -175, -226, -251,
	-251, 68, -251, -251, 15, -226, -175, -247, -251, -127,
	68, -316, 402, -316, 68, 68, 68, 68, -316, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	136, 68, 68, 68, 136, 68, 136, -362, -369, -251,
	-251, -124, -123, 43, 346, 68, 136, -161, 34, -428,
	413, 361, -223, -244, -243, 314, 41, -349, 381, 367,
	368, -286, 243, -226, 64, 302, 303, 304, 305, -267,
	-268, -266, -270, -422, 67, 67, 67, -155, -114, -226,
	15, 136, -421, 135, -1, -226, -279, -237, -195, -447,
	-195, -237, -237, -239, -226, 34, -161, -154, -226, 90,
	-394, -395, -269, -394, 90, 67, -226, -226, -226, 90,
	90, -192, 79, 79, -223, -223, 79, 73, 73, 73,
	-223, -223, 79, 73, -228, 79, 79, 79, 79, 40,
	73, -180, 40, 263, 267, 264, 265, 266, 79, 40,
	79, 40, 79, 40, -226, 67, -396, -397, 73, -428,
	-223, 318, 104, -244, -104, 77, 31, -136, 210, 207,
	-422, -291, -290, -210, -119, -119, -119, -119, 53, 53,
	53, 58, 53, 58, 53, -203, -291, -121, -132, -228,
	68, -438, -437, -436, -434, 61, 217, 62, -256, 147,
	-287, -240, 73, -294, -155, -155, 68, -197, 17, 135,
	-197, -377, 398, 393, 395, 90, -258, -364, -363, 46,
	-107, -130, -356, -399, -362, -226, 46, -107, -356, -226,
	79, 15, -284, -279, 123, 123, -226, 339, -295, 73,
	360, 73, 213, 536, 136, 104, -216, -246, -251, 68,
	-168, 155, 154, -168, 68, -336, -336, -335, -338, -335,
	-168, -168, 68, 68, 23, 68, 68, 68, -251, 68,
	68, 136, -353, 449, -316, 67, -316, -316, -316, -316,
	-316, -316, -316, -316, -316, -316, -316, -316, 73, 79,
	79, -377, 44, 45, 73, 211, -144, 40, -107, -429,
	77, -423, 73, -226, -430, 77, 362, 134, 316, 40,
	363, 364, 378, 311, 79, 79, 369, -424, -226, -137,
	312, -155, -266, -217, 131, 254, 295, -150, -151, -152,
	-150, -150, -133, 65, 135, -115, -156, -226, 123, 68,
	-195, -226, -195, -195, -237, -107, -172, -171, -169, 84,
	95, 40, 352, -170, 77, 131, 268, 246, 269, -189,
	-241, 64, 358, 219, 89, 90, 340, -242, -390, -392,
	-226, -392, -226, -390, -390, -269, -251, -226, -175, -175,
	73, 73, -176, 246, -157, 68, 136, 104, -429, -423,
	104, 73, -430, 73, 136, -136, -136, -195, 136, 104,
	-139, -138, 64, 65, -140, 64, -138, 53, 53, -195,
	-436, -435, 23, -395, -395, -395, 68, 68, -196, 18,
	20, 123, -196, -342, 523, -373, -375, 393, 20, 20,
	13, 68, -356, -356, -279, -295, 381, -155, -215, 73,
	536, -251, 68, -251, 68, 73, -260, -259, 235, 68,
	68, -342, -146, -161, -245, 73, -427, 372, 73, 73,
	79, 40, 79, 134, 365, -350, -104, -136, 67, -223,
	-223, -223, -226, 68, 136, 68, 68, -224, -115, -226,
	-195, -421, 135, -195, -195, -169, 84, -247, 73, -177,
	-225, 132, -178, 40, 267, 263, -179, 40, 247, 248,
	-181, 67, 275, 13, 90, 90, -155, 67, 65, 285,
	67, 67, 67, -392, 68, 247, 248, 68, -397, 73,
	-427, 73, -422, -127, -290, -362, -251, 67, -251, 67,
	53, 19, 17, -251, -257, -182, 524, 73, 20, 73,
	-371, 73, -291, -98, -367, -321, 68, 68, -316, -127,
	20, -182, 479, 20, 480, 315, 40, 79, 40, 366,
	-274, -276, -210, 67, -175, -177, 73, -173, -174, -152,
	-97, -96, -173, -195, -195, 79, 67, -357, -275, 67,
	-274, -393, 302, 303, 304, 306, 305, -393, -274, -274,
	-274, 67, -297, -296, 276, 95, -128, -131, -391, -226,
	219, 20, 20, -213, 525, 79, 73, 395, -343, 526,
	-376, 398, -370, -368, 393, 394, 395, 396, -318, -317,
	-320, 399, 277, 405, -257, -213, -147, -226, 73, 360,
	73, 315, 68, 136, -335, -251, -311, 235, -98, -311,
	-127, 68, -251, -261, -184, -183, 476, -274, 68, 68,
	68, 68, -274, 276, 68, 68, 136, 67, 20, 73,
	-378, 217, -374, -375, 397, -368, 20, 395, 20, 20,
	68, -319, 97, 365, 369, -251, 34, 381, -277, -276,
	-122, 68, -312, 284, 20, -312, -128, 68, -188, -186,
	-187, 64, 409, 273, 274, 68, -277, -277, -277, -277,
	68, -226, 219, -214, -226, -371, -385, 67, 79, -373,
	-372, -374, 20, -371, 20, -371, -371, -319, 521, 403,
	404, 403, 404, 73, -278, 225, 77, 480, 300, 301,
	-122, 20, -313, 277, 278, -314, -325, 280, -296, -187,
	64, -186, 64, 14, 13, -189, 68, 136, -389, 30,
	68, -384, -383, -211, -379, -226, 398, 399, 73, -371,
	94, -223, 73, 299, -210, 67, -323, 281, 67, -321,
	67, -321, 90, 303, -185, 270, 271, 30, 146, -185,
	-226, -388, -387, -386, 68, 136, 135, -319, 79, -226,
	-310, -315, 282, 79, -247, 67, -247, 67, -322, 279,
	67, 84, 40, 272, 136, 104, -383, -226, 68, -327,
	67, 20, 68, -310, 68, -310, 67, 104, -247, -387,
	40, -251, 135, -328, -326, 235, -314, 68, 68, 68,
	-310, 79, 68, -226, 68, 136, -226, -324, 283, 68,
	-326, -329, 46, 79, -333, -330, 67, -192, 237, 114,
	-333, -192, -332, -331, 282, 238, 67, 68, 136, -226,
	234, 67, -257, -331, -330, -257, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 692, 693, 694, 695, 696, 0, 0,
	0, 466, 467, 0, 443, 0, 0, 0, 0, 0,
	0, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 365, 366, 296, 297, 298, 299, 300,
	301, 0, 231, 227, 206, 207, 208, 167, 168, 169,
	170, 238, 239, 320, 0, 0, 0, 0, 0, 549,
	-2, 35, 697, 698, 699, 700, 701, 702, -2, 479,
	0, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 285, 286, 287, 281, 282, 284, 283, -2, 0,
	479, 220, 0, 211, 211, 0, 0, 0, 569, 0,
	0, 584, 606, 33, 0, 527, 0, 532, 915, 951,
	952, 953, 954, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 527, 232, 468,
	469, 569, 569, 441, 0, 267, 0, 1401, 271, 0,
	0, 0, 438, 262, 263, 264, 265, 266, 0, 691,
	0, 0, 258, 0, 226, 1460, 0, 0, 0, 0,
	0, 0, 111, 765, 113, 767, 117, 124, 0, 0,
	129, 130, 133, 134, 135, 136, 137, 0, 141, 0,
	143, 146, 0, 148, 149, 0, 152, 153, 154, 0,
	164, 165, 166, 768, 769, 770, -2, 42, 705, 1326,
	1221, 0, 1228, 1229, 1240, 1251, 1024, 1025, 1026, 1027,
	0, 0, 0, 0, 0, 1034, 1035, 0, 1047, 1556,
	0, 1041, 1042, 1043, 1044, 51, 63, 64, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 0, 1194,
	1011, 951, 0, 1564, 0, 1584, 1583, 0, 0, 1179,
	0, 1169, 0, 0, -2, -2, 0, 0, 1527, -2,
	1561, 1580, 1588, 1565, 1587, 1558, 1559, 1553, 1554, 1555,
	1557, 1566, 1568, 1579, 0, 1575, 1585, 1586, 0, 65,
	66, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1185, -2, 1187, 1188, 1190, 1191,
	1192, 1193, -2, 1196, 1197, 1198, -2, -2, 1201, 1202,
	1203, 1204, 1205, 1206, 1209, -2, 1211, -2, -2, 1181,
	1182, 1183, 1184, 1173, 1174, 1175, 1176, 1177, 1178, -2,
	-2, -2, 0, 204, 202, 569, 642, 0, -2, 0,
	0, 0, 589, 592, 595, 598, 0, 36, 37, 0,
	0, 797, 797, 797, 797, 797, 0, 797, 0, 0,
	0, 772, 773, 774, 795, 796, 821, 484, 480, 481,
	482, 483, 557, 0, 559, 562, 419, 368, 0, 0,
	0, 380, 374, 0, 0, 0, 419, 0, 0, 564,
	564, 0, 429, 419, 419, -2, 419, 419, 419, 0,
	386, 387, 388, 374, 0, 374, 392, 393, 394, 405,
	406, 430, 1350, 0, 0, 320, 0, 320, 0, 320,
	320, 486, 221, 222, 210, 212, 0, 216, 0, 209,
	1460, 0, 0, 178, 1527, 183, 0, 1408, 1474, 1423,
	0, 0, 1441, 0, -2, 0, 248, 564, 0, 570,
	0, 569, 0, 0, 320, 320, 320, 320, 320, 320,
	320, 0, 0, 320, 0, 0, 607, 608, 603, 604,
	605, 609, 610, 3, 0, 0, 0, 531, 0, 0,
	564, -2, 0, 442, 268, 955, 0, 0, 272, 273,
	0, 0, 288, 0, 291, 276, 277, 278, 0, 0,
	260, 261, 0, 0, 228, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 121, 118, 125, 128, 138,
	145, 0, 157, 159, 162, 119, 126, 131, 132, 139,
	160, 120, 122, 123, 127, 161, 163, 140, 144, 158,
	142, 147, 150, 151, 156, 0, 92, 0, 0, 0,
	0, 0, 1227, 0, 0, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1221, 0, 0, 1030, 1031, 1032, 1033, 1036, 0,
	1048, 0, 0, 0, 1280, 0, 1219, 1219, 0, 1219,
	1215, 0, 0, 1219, 1157, 0, 0, 1159, 1170, 0,
	0, 0, 1163, 1164, 1219, 0, 1219, 1168, 1153, 1154,
	0, 1215, 1215, 0, 0, 1215, 1215, 1215, 1215, 1215,
	1215, 1215, 1215, 1215, 1215, 1215, 1215, 0, 1327, 1345,
	1282, 1283, 1284, 1332, 1286, 1336, 1336, 1336, 1336, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 0, 0,
	1325, 1305, 1334, 1334, 1334, 1332, 1329, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1339, 1339, 1342, 1339, 0, 564, 0, 0, 552,
	0, 533, 0, 586, 588, 0, 590, 591, 593, 594,
	596, 597, 599, 600, 38, 0, 704, 0, 707, 0,
	0, 0, 0, 0, 0, 0, 0, 797, 797, 797,
	486, 485, 0, 558, 0, 0, 615, 0, 0, 0,
	374, 419, 379, 376, 375, 425, 426, 422, 0, 422,
	422, 615, 0, 399, 400, 401, 419, 419, 407, 565,
	408, 409, 422, 0, 427, 428, 0, 615, 615, 0,
	416, 417, 418, 0, 0, 797, 0, 376, 390, 376,
	1351, 1352, 0, 806, 0, 0, 0, 437, 0, 0,
	0, 487, 0, 0, 214, 0, 219, 171, 0, 0,
	0, 0, 0, 0, 200, 201, 0, 0, 0, 0,
	0, 191, 194, 909, 910, 762, 763, 195, 196, 240,
	241, 0, 533, 585, 587, 581, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 464, 0, 0, 623, 617,
	619, 686, 51, 623, 0, 506, 519, 501, 0, 508,
	0, 916, 488, 519, 490, 0, 508, 533, 555, 533,
	0, 269, 0, 274, 0, 0, 290, 292, 293, 294,
	279, 280, 439, 256, 257, 249, 250, 251, 252, 253,
	254, 255, 259, 61, 0, 229, 230, 0, 0, 0,
	105, 106, 107, 108, 109, 110, 112, 96, 456, 458,
	754, 766, 0, 757, 0, 115, 155, 88, 0, 0,
	1222, 1223, 1224, 1225, 1226, 1230, 0, 1232, 1234, 1236,
	1238, 0, 1256, -2, -2, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1241, 1254, 1255,
	0, 0, 0, 0, 0, 0, 1252, 1252, 1247, 0,
	1028, 0, 1045, 1049, 0, 0, 0, 52, 1214, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 0, 1220,
	0, 1221, 0, 0, 0, 1216, 1217, 0, 0, 1118,
	1119, 1120, 0, 514, 0, 1180, 1158, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 1348, 1346, 1347, 1285, 1333, 0,
	1310, 0, 1311, 1312, 1313, 0, 0, 1306, 0, 1307,
	1308, 1309, 1301, 0, 1302, 1303, 0, 1304, 203, 641,
	643, 0, 523, 525, 526, 0, 553, 566, 571, 572,
	575, 34, 39, 0, 709, 0, 562, 0, 0, 721,
	318, 748, 0, 0, 764, 787, 793, 0, 0, 0,
	0, 560, 0, 0, 655, 367, 0, 420, 421, 371,
	1460, 376, 615, 381, 377, 382, 0, 424, 383, 384,
	385, 0, 615, 615, 419, 422, 422, 412, 413, 0,
	431, 435, 432, 0, 434, 389, 391, 562, 303, 0,
	0, -2, 865, 1353, 1353, 0, 1353, 1353, 1353, 1353,
	0, 0, 1353, 1353, 1353, 1353, 1353, 1353, 1353, 1353,
	1353, 1353, 1353, 1353, 1353, 1353, 0, 807, 315, 0,
	0, 318, 738, 628, 0, 629, 630, 626, 657, 681,
	681, 0, 681, 661, 915, 223, 224, 0, 0, 218,
	172, 173, 0, 175, 176, 177, 184, 179, 181, 0,
	0, 185, 197, 198, 199, 0, 0, 0, 189, 190,
	0, 0, 243, 244, 246, 0, 551, 454, 455, 459,
	0, 461, 913, 462, 463, 709, 743, 615, 0, 624,
	0, 620, 687, 0, 689, 0, 615, 535, 495, 0,
	500, 516, 0, 520, 0, 0, 512, 505, 509, 0,
	0, 529, 489, 0, 0, 494, 554, 556, 956, 0,
	275, 289, 0, 0, 0, 0, 99, 751, 0, 100,
	104, 94, 0, 0, 0, 756, 0, 753, 758, 0,
	114, 0, 0, 89, 90, 812, 817, 0, 1231, 1233,
	1235, 1237, 1239, 0, 1242, 1252, 1252, 1248, 0, 1243,
	0, 1245, 0, 1222, 0, 1050, 0, 0, 0, 0,
	0, 0, 1106, 1107, 0, 0, 1111, 0, 1113, 0,
	0, 0, 1117, 0, 1156, 1172, 1160, 1161, 0, 1165,
	0, 1167, 0, 569, 0, 1084, 1084, 0, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 1281, 1349, 0, 0, 0, 1330, 0, 0, 0,
	0, 0, 644, 535, 0, 0, 0, 578, 576, 577,
	0, 0, 710, 711, 713, 714, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1393, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 708, 0,
	798, 728, 1353, 322, 0, 0, 750, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 473, 477, 33,
	563, 0, 616, 369, 0, 370, 419, 378, 423, 615,
	915, 402, 403, 615, 419, 419, 422, 0, 433, 0,
	304, 921, 922, 0, 0, 924, 981, 0, 933, 797,
	933, 0, 0, 935, 936, 305, 0, 0, 0, 0,
	0, 806, 867, 0, 1354, 0, 1353, 1353, 0, 0,
	0, 0, 1353, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	1353, 0, 0, 322, 735, 0, 0, 0, 0, 0,
	0, 648, 0, 0, 647, 0, 0, 0, 0, 0,
	562, 682, 0, 684, 685, 659, -2, 0, 628, 664,
	1219, 225, 213, 215, 0, 0, 0, 0, 186, 187,
	188, 192, 193, 242, 245, 247, 0, 0, 0, 613,
	618, 625, 688, 690, 52, 621, 613, 539, 0, 0,
	519, 521, 0, 0, 519, 0, 0, 528, 0, 0,
	519, 0, 0, 440, 62, 295, 0, 0, 0, 0,
	0, 457, 0, 755, 96, 0, 0, 116, 0, 0,
	815, 0, 817, 1218, 1244, 1246, 0, 1253, 1249, 1029,
	1037, 1046, 0, 0, 1052, 1064, 1064, 0, 1055, 1336,
	1336, 1058, 1332, 1334, 1332, 1064, 1064, 0, 53, 0,
	0, 1112, 0, 0, 0, 515, 0, 0, 0, 1082,
	1084, 1088, 0, 1089, 1084, 1084, 1084, 1084, 1094, 1084,
	1084, 1084, 1084, 1084, 1084, 1084, 1084, 1338, 1337, 1323,
	0, 1324, 1335, 1340, 0, 1343, 0, 524, 539, 567,
	568, 573, 574, 0, 0, 0, 0, 715, 0, 731,
	729, 730, 0, 745, 323, 324, 325, 326, 0, 0,
	0, 749, 0, 496, 0, 788, 789, 790, 791, 792,
	-2, 801, 0, 0, 917, 917, 917, 527, 0, -2,
	0, 0, 475, 0, 0, 656, 372, 615, 395, 0,
	410, 615, 615, 419, 436, 0, -2, 923, 982, 945,
	945, 934, 945, 945, 797, 0, 307, 308, 309, 0,
	311, 866, 868, 869, 0, 0, 872, 873, 874, 875,
	0, 0, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 903, 904, 905, 906, 907, 908, 888, 889,
	890, 891, 892, 893, 900, 0, 0, 897, 0, 731,
	0, 0, 0, 745, 737, 0, 739, 740, 0, 0,
	498, 615, 235, 0, 651, 645, 0, 634, 649, 650,
	637, 0, 639, 0, 635, 636, 615, 627, 658, 683,
	660, 663, 665, 666, 672, 0, 0, 0, 0, 217,
	174, 0, 342, 180, 460, 914, 465, 611, 0, 0,
	611, 541, 76, 0, 0, 0, 517, 0, 522, 519,
	504, 513, 503, 510, 511, 530, 519, 493, 492, 957,
	270, 0, 752, 96, 101, 102, 103, 97, 95, 759,
	0, 761, 0, 813, 817, 0, 0, 1250, 1051, 1038,
	1053, 1065, 1066, 1054, 1039, 1056, 1057, 1059, 1060, 1061,
	1062, 1063, 1040, 1108, 0, 1110, 1114, 1115, 0, 1162,
	1166, 0, 0, 0, 1087, 1080, 1090, 1091, 1092, 1093,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1331, 0,
	0, 541, 579, 580, 703, 0, 712, 0, 719, 720,
	0, 0, 723, 724, 733, 0, 0, 0, 328, 329,
	0, 0, 0, 341, 337, 338, 339, 319, 744, 735,
	0, 0, 802, 1353, 1353, 1353, 0, 0, 918, 919,
	0, 0, 681, 0, 0, 615, 474, 477, 478, 561,
	373, 615, 414, 411, 615, 302, 947, -2, 960, 962,
	0, 0, 965, 966, 0, 0, 0, 0, 1003, 972,
	0, 0, 976, 0, 1268, 1269, 0, 980, 0, 937,
	946, 0, 946, 0, 0, 945, 0, 310, 870, 871,
	876, 877, 894, 0, 0, 896, 0, 0, 312, 0,
	0, 313, 317, 736, 0, 741, 742, 569, 0, 0,
	631, 652, 0, 0, 632, 0, 633, 638, 640, 234,
	667, 0, 0, 669, 670, 671, 662, 182, 601, 0,
	0, 622, 602, 543, 0, 540, 77, 0, 0, 0,
	0, 518, 502, 491, 98, 93, 760, 79, 816, 818,
	814, 0, 1116, 0, 1084, 1083, 569, 1081, 0, 1341,
	1344, 543, 0, 718, 716, 732, 722, 0, 746, 747,
	0, 330, 331, 0, 334, 340, 734, 497, 0, 0,
	0, 0, 794, -2, 0, 0, -2, 615, 615, -2,
	471, 476, 0, 396, 415, 961, 963, 964, 967, 968,
	911, 912, 969, 1008, 1009, 1010, 970, 1005, 1006, 1007,
	971, 0, 0, 0, 1266, 1267, 1001, 0, 0, 0,
	0, 0, 0, 0, 931, 901, 902, 895, 898, 899,
	316, 314, 499, 564, 236, 237, 653, 0, 646, 676,
	673, 0, 0, 612, 614, 545, 0, 542, 0, 536,
	538, 87, 507, 49, 70, 0, 1109, 1155, 1086, 1077,
	0, 545, 0, 0, 0, 327, 332, 0, 335, 336,
	0, 783, 1332, 0, 803, 804, 805, 822, -2, 920,
	809, 79, 822, 569, 472, 0, 0, 1169, 996, 0,
	0, 938, 940, 941, 942, 943, 944, 939, 0, 0,
	0, 0, 930, 932, 977, 0, 233, 0, 0, 677,
	679, 674, 675, 40, 0, 544, 78, 0, 41, 0,
	67, 0, 80, 81, 0, 0, 0, 0, 0, 1078,
	0, 1072, 1073, 1074, 1079, 534, 0, 717, 725, 0,
	727, 333, 776, 0, 575, 0, 824, 0, 811, 824,
	564, 1004, 0, 975, 984, 997, 0, 0, 776, 776,
	776, 776, 0, 978, 654, 668, 0, 0, 0, 50,
	54, 0, 76, 73, 0, 82, 0, 0, 0, 0,
	1085, 1075, 0, 0, 0, 0, 0, 726, 775, 784,
	785, 575, 808, 0, 861, 810, 470, 973, 983, 985,
	986, 0, 998, 999, 1000, 1002, 925, 926, 927, 928,
	0, 678, 680, 0, 547, 537, 43, 0, 0, 71,
	72, 74, 0, 83, 0, 85, 86, 0, 1067, 1068,
	1070, 1069, 1071, 706, 777, 1353, 0, 0, 781, 782,
	786, 0, 849, 0, 0, 855, 0, 862, 974, 987,
	0, 988, 0, 0, 0, 929, 546, 0, 819, 0,
	55, 0, 57, 59, 60, 948, 68, 69, 75, 84,
	0, 0, 779, 0, 825, 0, 827, 0, 0, 0,
	0, 0, 859, 0, 989, 991, 992, 0, 0, 990,
	548, 44, 45, 0, 56, 0, 0, 1076, 778, 780,
	0, 829, 0, 850, 0, 0, 0, 0, 0, 0,
	0, 993, 995, 994, 0, 0, 58, 949, 826, 823,
	0, 861, 851, 0, 853, 0, 0, 0, 0, 46,
	47, 48, 0, 0, 831, 0, 847, 852, 854, 856,
	0, 860, 858, 950, 830, 0, 843, 828, 0, 857,
	832, -2, 0, 848, 833, -2, 0, 841, 0, 0,
	834, 842, 0, 837, 0, 0, 0, 836, 0, -2,
	844, 0, 0, 838, -2, 0, 846, 845,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 533,
	105, 104, 106, 3, 534, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 535, 117, 536, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:646
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:652
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:687
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:692
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:698
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:718
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:724
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:731
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:739
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:745
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:754
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:788
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:799
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:805
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:809
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:815
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:822
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:830
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:834
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:848
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:852
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:856
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:869
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:875
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:884
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:895
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:899
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:905
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:909
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:915
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:919
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:925
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:949
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:968
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:972
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:976
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:985
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1000
		{
			yyVAL.str = ""
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1007
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1012
		{
			yyVAL.str = "\n"
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1019
		{
			yyVAL.str = yyDollar[3].str
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1028
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1052
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1056
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1068
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1086
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1103
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1126
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1130
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1134
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1139
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1149
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1173
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1186
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1190
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1200
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1213
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1226
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1232
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1238
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1245
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1253
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1289
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1293
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1299
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1306
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1315
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1319
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1481
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1485
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1489
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1493
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1497
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1501
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1505
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1509
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1513
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1517
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1521
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1533
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1556
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1586
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1594
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1600
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1617
		{
			yyVAL.str = yyDollar[3].str
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1623
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1627
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1633
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1641
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1650
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1658
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1666
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1689
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1712
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1719
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1726
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1734
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1741
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1748
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1765
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1771
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1775
		{
			yyVAL.str = yyDollar[1].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1781
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1785
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1791
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1795
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1806
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1867
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1877
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1890
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1927
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1949
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1953
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1959
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1975
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1979
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:1985
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:1991
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:1995
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:1999
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2003
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2021
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2027
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2031
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2037
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2053
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2077
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2081
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2085
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2097
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2115
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2156
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2160
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2166
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2172
		{
			yyVAL.str = yyDollar[1].str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2177
		{
			yyVAL.str = "true"
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2178
		{
			yyVAL.str = "false"
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2179
		{
			yyVAL.str = yyDollar[1].str
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2219
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2226
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2230
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2254
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2306
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2312
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2343
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2347
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2356
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2372
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2376
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2380
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2384
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2438
		{
			yyVAL.item = nil
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2443
		{
			yyVAL.item = nil
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2504
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2515
		{
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2519
		{
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2551
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2557
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2563
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2582
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2586
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2590
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2594
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2602
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2606
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2610
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2616
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2633
		{
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2635
		{
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2683
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2695
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2705
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2721
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2727
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2739
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2753
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2759
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2775
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2779
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2784
		{
			yyVAL.str = ""
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2788
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2794
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2807
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2811
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2817
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2830
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2836
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2840
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2846
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2852
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2856
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2860
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2866
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2870
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2891
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2909
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2913
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2965
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2982
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2987
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2994
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3010
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3023
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3034
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3038
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3044
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3049
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3056
		{
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3058
		{
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3061
		{
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3070
		{
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3074
		{
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3079
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3088
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3101
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3109
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3123
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3143
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3156
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3162
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3166
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3172
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3185
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3193
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3207
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3226
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3230
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3239
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3243
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3258
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3262
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3268
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3272
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3278
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3282
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3288
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3293
		{
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3304
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3308
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3324
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3330
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3334
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3340
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3344
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3353
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3380
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3398
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3423
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3434
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3447
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3451
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3456
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3460
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3467
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3472
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3479
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3497
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3511
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3518
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3527
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3531
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3549
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3554
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3558
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3568
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3581
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3587
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3593
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3597
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3603
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3608
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3612
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3616
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3625
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3629
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3635
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3639
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3643
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3657
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3661
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3671
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3736
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3744
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3768
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3776
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3792
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3802
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3813
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3827
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3831
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3835
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3840
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3844
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3848
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3861
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3870
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3879
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3885
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3889
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3895
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3899
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3904
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3908
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3913
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3921
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3927
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3935
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3953
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3959
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3968
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3977
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3986
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3996
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4000
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4010
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4014
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4018
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4022
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4028
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4038
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4042
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4048
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4058
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4064
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4070
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4074
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4078
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4088
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4094
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4098
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4104
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4108
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4114
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4128
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4141
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4147
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4166
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4184
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4188
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4194
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4204
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4208
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4212
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4217
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4221
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4225
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4229
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4238
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4242
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4246
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4250
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4255
		{
			yyVAL.str = ""
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4259
		{
			yyVAL.str = yyDollar[1].str
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4263
		{
			yyVAL.str = yyDollar[2].str
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4269
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4275
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4279
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4283
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4287
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4291
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4297
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4338
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4344
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 706:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4351
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4363
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4368
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4374
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4381
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4385
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4391
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4411
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4423
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4434
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4446
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4452
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4462
		{
			yyVAL.str = yyDollar[1].str
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4466
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4472
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4479
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4485
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4493
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4499
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4514
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4520
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4552
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4556
		{
			yyVAL.str = yyDollar[2].str
		}
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4562
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4576
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4588
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4594
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4612
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4617
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4623
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4737
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4741
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4757
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4761
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4767
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4777
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4781
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4785
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4794
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4800
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4807
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4813
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4822
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4829
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4838
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4842
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4848
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4862
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4866
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4870
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4875
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4879
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4887
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4893
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4916
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4942
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4950
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4960
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4964
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4970
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4975
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4980
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4988
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4992
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5002
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5017
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5040
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5046
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5050
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5056
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5060
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5064
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5079
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5091
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5100
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5113
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5130
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5138
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5149
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5153
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5158
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5162
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5169
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5180
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5193
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5203
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5207
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5214
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5225
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5238
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5244
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5248
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5254
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5263
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5277
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5283
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5287
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5293
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5300
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5309
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5313
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5322
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5327
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5331
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5336
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5340
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5350
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5354
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5365
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5373
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5381
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5389
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5400
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5409
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5419
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5429
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5433
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5451
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5457
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5461
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5465
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5479
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5483
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5487
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5491
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5496
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5504
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5508
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5524
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5528
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5532
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5536
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5540
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5544
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5548
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5552
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5556
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5560
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5564
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5568
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5572
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5576
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5591
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5595
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5601
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5606
		{
			yyVAL.str = ""
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5610
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5614
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5620
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5624
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5628
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5632
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5636
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5640
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5658
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5667
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5672
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5685
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5689
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5695
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5699
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5705
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5717
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5723
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5732
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5741
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5764
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5773
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5783
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5791
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5797
		{
			yyVAL.str = ""
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5801
		{
			yyVAL.str = yyDollar[1].str
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5811
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5817
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5823
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5837
		{
			yyVAL.str = ""
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5841
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5847
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5853
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5857
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5861
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5885
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5889
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5893
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5902
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5908
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5912
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5918
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5922
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5926
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5930
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5934
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5938
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5943
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5947
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5951
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5955
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5959
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5963
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5967
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5984
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5999
		{
			yyVAL.str = ""
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6003
		{
			yyVAL.str = yyDollar[1].str
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6009
		{
			yyVAL.str = ""
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6013
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6019
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6031
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6038
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6045
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6052
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6059
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6068
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6074
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6080
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6084
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6101
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6108
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6112
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6116
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6125
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6130
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6134
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6150
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6156
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6160
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6164
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6168
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6172
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6180
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6184
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6188
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6192
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6196
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6200
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6204
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6210
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6214
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6218
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6226
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6230
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6238
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6242
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6246
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6250
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6254
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6259
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6267
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6276
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6285
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6289
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6293
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6297
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6306
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6315
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6321
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6325
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6331
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6341
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6358
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6375
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6388
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6401
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6413
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6427
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6442
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6457
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6474
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6489
		{
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6495
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6499
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6503
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6509
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6513
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6521
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6525
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6529
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6535
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6542
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6551
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6555
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6562
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6571
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6576
		{
			yyVAL.str = ","
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6580
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6589
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6599
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6620
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6629
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6638
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6658
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6668
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6678
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6688
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6718
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6728
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6738
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6748
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6758
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6775
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6783
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6791
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6799
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6807
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6817
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6825
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6834
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6845
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6855
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6867
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6878
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6900
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6936
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6948
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6960
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6979
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6993
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7005
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7013
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7021
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7032
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7041
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7050
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7058
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7068
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7076
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7090
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7100
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7119
		{
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7121
		{
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7162
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7173
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7177
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7181
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7187
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7196
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7202
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7206
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7213
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7217
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7221
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7241
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7279
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7283
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7299
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7303
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7307
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7315
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7319
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7323
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7327
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7337
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7343
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7347
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7354
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7368
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7372
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7376
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7380
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7384
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7392
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7398
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7402
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7416
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7420
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7433
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7438
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7442
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7446
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7450
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7454
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7458
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7472
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7476
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7483
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7494
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7499
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7505
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7529
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7541
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7554
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7686
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7713
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7755
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7803
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7820
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7832
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7852
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7872
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7892
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7908
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7921
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7934
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7947
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7984
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7996
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8032
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8044
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8056
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8068
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8081
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8109
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8117
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8126
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8136
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8159
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8164
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8170
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8177
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8181
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8186
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8190
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8196
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8202
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8209
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8216
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8225
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8232
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8239
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8248
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8256
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8262
		{
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8274
		{
			yyVAL.str = ""
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8278
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

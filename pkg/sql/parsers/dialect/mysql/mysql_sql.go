// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const INTEGRAL = 57433
const HEX = 57434
const BIT_LITERAL = 57435
const FLOAT = 57436
const HEXNUM = 57437
const NULL = 57438
const TRUE = 57439
const FALSE = 57440
const LOWER_THAN_CHARSET = 57441
const CHARSET = 57442
const UNIQUE = 57443
const KEY = 57444
const OR = 57445
const PIPE_CONCAT = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const ELSEIF = 57456
const LOWER_THAN_EQ = 57457
const LE = 57458
const GE = 57459
const NE = 57460
const NULL_SAFE_EQUAL = 57461
const IS = 57462
const LIKE = 57463
const REGEXP = 57464
const IN = 57465
const ASSIGNMENT = 57466
const ILIKE = 57467
const SHIFT_LEFT = 57468
const SHIFT_RIGHT = 57469
const DIV = 57470
const MOD = 57471
const UNARY = 57472
const COLLATE = 57473
const BINARY = 57474
const UNDERSCORE_BINARY = 57475
const INTERVAL = 57476
const OUT = 57477
const INOUT = 57478
const BEGIN = 57479
const START = 57480
const TRANSACTION = 57481
const COMMIT = 57482
const ROLLBACK = 57483
const WORK = 57484
const CONSISTENT = 57485
const SNAPSHOT = 57486
const CHAIN = 57487
const NO = 57488
const RELEASE = 57489
const PRIORITY = 57490
const QUICK = 57491
const BIT = 57492
const TINYINT = 57493
const SMALLINT = 57494
const MEDIUMINT = 57495
const INT = 57496
const INTEGER = 57497
const BIGINT = 57498
const INTNUM = 57499
const REAL = 57500
const DOUBLE = 57501
const FLOAT_TYPE = 57502
const DECIMAL = 57503
const NUMERIC = 57504
const DECIMAL_VALUE = 57505
const TIME = 57506
const TIMESTAMP = 57507
const DATETIME = 57508
const YEAR = 57509
const CHAR = 57510
const VARCHAR = 57511
const BOOL = 57512
const CHARACTER = 57513
const VARBINARY = 57514
const NCHAR = 57515
const TEXT = 57516
const TINYTEXT = 57517
const MEDIUMTEXT = 57518
const LONGTEXT = 57519
const BLOB = 57520
const TINYBLOB = 57521
const MEDIUMBLOB = 57522
const LONGBLOB = 57523
const JSON = 57524
const ENUM = 57525
const UUID = 57526
const GEOMETRY = 57527
const POINT = 57528
const LINESTRING = 57529
const POLYGON = 57530
const GEOMETRYCOLLECTION = 57531
const MULTIPOINT = 57532
const MULTILINESTRING = 57533
const MULTIPOLYGON = 57534
const INT1 = 57535
const INT2 = 57536
const INT3 = 57537
const INT4 = 57538
const INT8 = 57539
const S3OPTION = 57540
const SQL_SMALL_RESULT = 57541
const SQL_BIG_RESULT = 57542
const SQL_BUFFER_RESULT = 57543
const LOW_PRIORITY = 57544
const HIGH_PRIORITY = 57545
const DELAYED = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const RETURNS = 57553
const SCHEMA = 57554
const TABLE = 57555
const SEQUENCE = 57556
const INDEX = 57557
const VIEW = 57558
const TO = 57559
const IGNORE = 57560
const IF = 57561
const PRIMARY = 57562
const COLUMN = 57563
const CONSTRAINT = 57564
const SPATIAL = 57565
const FULLTEXT = 57566
const FOREIGN = 57567
const KEY_BLOCK_SIZE = 57568
const SHOW = 57569
const DESCRIBE = 57570
const EXPLAIN = 57571
const DATE = 57572
const ESCAPE = 57573
const REPAIR = 57574
const OPTIMIZE = 57575
const TRUNCATE = 57576
const MAXVALUE = 57577
const PARTITION = 57578
const REORGANIZE = 57579
const LESS = 57580
const THAN = 57581
const PROCEDURE = 57582
const TRIGGER = 57583
const STATUS = 57584
const VARIABLES = 57585
const ROLE = 57586
const PROXY = 57587
const AVG_ROW_LENGTH = 57588
const STORAGE = 57589
const DISK = 57590
const MEMORY = 57591
const CHECKSUM = 57592
const COMPRESSION = 57593
const DATA = 57594
const DIRECTORY = 57595
const DELAY_KEY_WRITE = 57596
const ENCRYPTION = 57597
const ENGINE = 57598
const MAX_ROWS = 57599
const MIN_ROWS = 57600
const PACK_KEYS = 57601
const ROW_FORMAT = 57602
const STATS_AUTO_RECALC = 57603
const STATS_PERSISTENT = 57604
const STATS_SAMPLE_PAGES = 57605
const DYNAMIC = 57606
const COMPRESSED = 57607
const REDUNDANT = 57608
const COMPACT = 57609
const FIXED = 57610
const COLUMN_FORMAT = 57611
const AUTO_RANDOM = 57612
const ENGINE_ATTRIBUTE = 57613
const SECONDARY_ENGINE_ATTRIBUTE = 57614
const INSERT_METHOD = 57615
const RESTRICT = 57616
const CASCADE = 57617
const ACTION = 57618
const PARTIAL = 57619
const SIMPLE = 57620
const CHECK = 57621
const ENFORCED = 57622
const RANGE = 57623
const LIST = 57624
const ALGORITHM = 57625
const LINEAR = 57626
const PARTITIONS = 57627
const SUBPARTITION = 57628
const SUBPARTITIONS = 57629
const CLUSTER = 57630
const TYPE = 57631
const ANY = 57632
const SOME = 57633
const EXTERNAL = 57634
const LOCALFILE = 57635
const URL = 57636
const PREPARE = 57637
const DEALLOCATE = 57638
const RESET = 57639
const EXTENSION = 57640
const INCREMENT = 57641
const CYCLE = 57642
const MINVALUE = 57643
const PUBLICATION = 57644
const SUBSCRIPTIONS = 57645
const PUBLICATIONS = 57646
const PROPERTIES = 57647
const PARSER = 57648
const VISIBLE = 57649
const INVISIBLE = 57650
const BTREE = 57651
const HASH = 57652
const RTREE = 57653
const BSI = 57654
const ZONEMAP = 57655
const LEADING = 57656
const BOTH = 57657
const TRAILING = 57658
const UNKNOWN = 57659
const EXPIRE = 57660
const ACCOUNT = 57661
const ACCOUNTS = 57662
const UNLOCK = 57663
const DAY = 57664
const NEVER = 57665
const PUMP = 57666
const MYSQL_COMPATIBILITY_MODE = 57667
const SECOND = 57668
const ASCII = 57669
const COALESCE = 57670
const COLLATION = 57671
const HOUR = 57672
const MICROSECOND = 57673
const MINUTE = 57674
const MONTH = 57675
const QUARTER = 57676
const REPEAT = 57677
const REVERSE = 57678
const ROW_COUNT = 57679
const WEEK = 57680
const REVOKE = 57681
const FUNCTION = 57682
const PRIVILEGES = 57683
const TABLESPACE = 57684
const EXECUTE = 57685
const SUPER = 57686
const GRANT = 57687
const OPTION = 57688
const REFERENCES = 57689
const REPLICATION = 57690
const SLAVE = 57691
const CLIENT = 57692
const USAGE = 57693
const RELOAD = 57694
const FILE = 57695
const TEMPORARY = 57696
const ROUTINE = 57697
const EVENT = 57698
const SHUTDOWN = 57699
const NULLX = 57700
const AUTO_INCREMENT = 57701
const APPROXNUM = 57702
const SIGNED = 57703
const UNSIGNED = 57704
const ZEROFILL = 57705
const ENGINES = 57706
const LOW_CARDINALITY = 57707
const AUTOEXTEND_SIZE = 57708
const ADMIN_NAME = 57709
const RANDOM = 57710
const SUSPEND = 57711
const ATTRIBUTE = 57712
const HISTORY = 57713
const REUSE = 57714
const CURRENT = 57715
const OPTIONAL = 57716
const FAILED_LOGIN_ATTEMPTS = 57717
const PASSWORD_LOCK_TIME = 57718
const UNBOUNDED = 57719
const SECONDARY = 57720
const RESTRICTED = 57721
const USER = 57722
const IDENTIFIED = 57723
const CIPHER = 57724
const ISSUER = 57725
const X509 = 57726
const SUBJECT = 57727
const SAN = 57728
const REQUIRE = 57729
const SSL = 57730
const NONE = 57731
const PASSWORD = 57732
const SHARED = 57733
const EXCLUSIVE = 57734
const MAX_QUERIES_PER_HOUR = 57735
const MAX_UPDATES_PER_HOUR = 57736
const MAX_CONNECTIONS_PER_HOUR = 57737
const MAX_USER_CONNECTIONS = 57738
const FORMAT = 57739
const VERBOSE = 57740
const CONNECTION = 57741
const TRIGGERS = 57742
const PROFILES = 57743
const LOAD = 57744
const INFILE = 57745
const TERMINATED = 57746
const OPTIONALLY = 57747
const ENCLOSED = 57748
const ESCAPED = 57749
const STARTING = 57750
const LINES = 57751
const ROWS = 57752
const IMPORT = 57753
const DISCARD = 57754
const MODUMP = 57755
const OVER = 57756
const PRECEDING = 57757
const FOLLOWING = 57758
const GROUPS = 57759
const DATABASES = 57760
const TABLES = 57761
const SEQUENCES = 57762
const EXTENDED = 57763
const FULL = 57764
const PROCESSLIST = 57765
const FIELDS = 57766
const COLUMNS = 57767
const OPEN = 57768
const ERRORS = 57769
const WARNINGS = 57770
const INDEXES = 57771
const SCHEMAS = 57772
const NODE = 57773
const LOCKS = 57774
const ROLES = 57775
const TABLE_NUMBER = 57776
const COLUMN_NUMBER = 57777
const TABLE_VALUES = 57778
const TABLE_SIZE = 57779
const NAMES = 57780
const GLOBAL = 57781
const PERSIST = 57782
const SESSION = 57783
const ISOLATION = 57784
const LEVEL = 57785
const READ = 57786
const WRITE = 57787
const ONLY = 57788
const REPEATABLE = 57789
const COMMITTED = 57790
const UNCOMMITTED = 57791
const SERIALIZABLE = 57792
const LOCAL = 57793
const EVENTS = 57794
const PLUGINS = 57795
const CURRENT_TIMESTAMP = 57796
const DATABASE = 57797
const CURRENT_TIME = 57798
const LOCALTIME = 57799
const LOCALTIMESTAMP = 57800
const UTC_DATE = 57801
const UTC_TIME = 57802
const UTC_TIMESTAMP = 57803
const REPLACE = 57804
const CONVERT = 57805
const SEPARATOR = 57806
const TIMESTAMPDIFF = 57807
const CURRENT_DATE = 57808
const CURRENT_USER = 57809
const CURRENT_ROLE = 57810
const SECOND_MICROSECOND = 57811
const MINUTE_MICROSECOND = 57812
const MINUTE_SECOND = 57813
const HOUR_MICROSECOND = 57814
const HOUR_SECOND = 57815
const HOUR_MINUTE = 57816
const DAY_MICROSECOND = 57817
const DAY_SECOND = 57818
const DAY_MINUTE = 57819
const DAY_HOUR = 57820
const YEAR_MONTH = 57821
const SQL_TSI_HOUR = 57822
const SQL_TSI_DAY = 57823
const SQL_TSI_WEEK = 57824
const SQL_TSI_MONTH = 57825
const SQL_TSI_QUARTER = 57826
const SQL_TSI_YEAR = 57827
const SQL_TSI_SECOND = 57828
const SQL_TSI_MINUTE = 57829
const RECURSIVE = 57830
const CONFIG = 57831
const DRAINER = 57832
const MATCH = 57833
const AGAINST = 57834
const BOOLEAN = 57835
const LANGUAGE = 57836
const WITH = 57837
const QUERY = 57838
const EXPANSION = 57839
const WITHOUT = 57840
const VALIDATION = 57841
const ADDDATE = 57842
const BIT_AND = 57843
const BIT_OR = 57844
const BIT_XOR = 57845
const CAST = 57846
const COUNT = 57847
const APPROX_COUNT_DISTINCT = 57848
const APPROX_PERCENTILE = 57849
const CURDATE = 57850
const CURTIME = 57851
const DATE_ADD = 57852
const DATE_SUB = 57853
const EXTRACT = 57854
const GROUP_CONCAT = 57855
const MAX = 57856
const MID = 57857
const MIN = 57858
const NOW = 57859
const POSITION = 57860
const SESSION_USER = 57861
const STD = 57862
const STDDEV = 57863
const MEDIAN = 57864
const STDDEV_POP = 57865
const STDDEV_SAMP = 57866
const SUBDATE = 57867
const SUBSTR = 57868
const SUBSTRING = 57869
const SUM = 57870
const SYSDATE = 57871
const SYSTEM_USER = 57872
const TRANSLATE = 57873
const TRIM = 57874
const VARIANCE = 57875
const VAR_POP = 57876
const VAR_SAMP = 57877
const AVG = 57878
const RANK = 57879
const ROW_NUMBER = 57880
const DENSE_RANK = 57881
const NEXTVAL = 57882
const SETVAL = 57883
const CURRVAL = 57884
const LASTVAL = 57885
const ARROW = 57886
const ROW = 57887
const OUTFILE = 57888
const HEADER = 57889
const MAX_FILE_SIZE = 57890
const FORCE_QUOTE = 57891
const PARALLEL = 57892
const UNUSED = 57893
const BINDINGS = 57894
const DO = 57895
const DECLARE = 57896
const LOOP = 57897
const WHILE = 57898
const LEAVE = 57899
const ITERATE = 57900
const UNTIL = 57901
const CALL = 57902
const SPBEGIN = 57903
const BACKEND = 57904
const SERVERS = 57905
const KILL = 57906
const QUERY_RESULT = 57907

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9936

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 111,
	21, 678,
	-2, 659,
	-1, 125,
	232, 915,
	-2, 986,
	-1, 147,
	42, 500,
	232, 500,
	259, 507,
	260, 507,
	446, 500,
	-2, 533,
	-1, 183,
	584, 1681,
	-2, 418,
	-1, 510,
	311, 130,
	420, 130,
	-2, 1593,
	-1, 573,
	81, 1392,
	-2, 1735,
	-1, 574,
	81, 1410,
	-2, 1706,
	-1, 578,
	81, 1411,
	-2, 1734,
	-1, 603,
	81, 1322,
	-2, 1799,
	-1, 604,
	81, 1323,
	-2, 1798,
	-1, 605,
	81, 1324,
	-2, 1788,
	-1, 606,
	81, 1763,
	-2, 1783,
	-1, 607,
	81, 1764,
	-2, 1784,
	-1, 608,
	81, 1765,
	-2, 1790,
	-1, 609,
	81, 1766,
	-2, 1773,
	-1, 610,
	81, 1767,
	-2, 1781,
	-1, 611,
	81, 1768,
	-2, 1791,
	-1, 612,
	81, 1769,
	-2, 1792,
	-1, 613,
	81, 1770,
	-2, 1797,
	-1, 614,
	81, 1771,
	-2, 1802,
	-1, 615,
	81, 1772,
	-2, 1803,
	-1, 617,
	81, 1389,
	-2, 1582,
	-1, 621,
	81, 1394,
	-2, 1594,
	-1, 624,
	81, 1398,
	-2, 1612,
	-1, 628,
	81, 1402,
	-2, 1652,
	-1, 629,
	81, 1403,
	-2, 1730,
	-1, 637,
	81, 1413,
	-2, 1715,
	-1, 638,
	81, 1414,
	-2, 1760,
	-1, 639,
	81, 1415,
	-2, 1725,
	-1, 640,
	81, 1416,
	-2, 1750,
	-1, 651,
	81, 1300,
	-2, 1793,
	-1, 652,
	81, 1301,
	-2, 1794,
	-1, 653,
	81, 1302,
	-2, 1795,
	-1, 657,
	21, 679,
	-2, 642,
	-1, 733,
	441, 533,
	442, 533,
	-2, 501,
	-1, 776,
	119, 1582,
	130, 1582,
	150, 1582,
	-2, 1557,
	-1, 878,
	21, 679,
	-2, 642,
	-1, 978,
	21, 678,
	-2, 1200,
	-1, 1337,
	81, 1460,
	-2, 1732,
	-1, 1338,
	81, 1461,
	-2, 1733,
	-1, 1472,
	82, 822,
	-2, 828,
	-1, 1839,
	82, 1543,
	151, 1543,
	-2, 1717,
	-1, 1840,
	82, 1543,
	151, 1543,
	-2, 1716,
	-1, 1841,
	82, 1521,
	151, 1521,
	-2, 1703,
	-1, 1842,
	82, 1522,
	151, 1522,
	-2, 1708,
	-1, 1843,
	82, 1523,
	151, 1523,
	-2, 1640,
	-1, 1844,
	82, 1524,
	151, 1524,
	-2, 1634,
	-1, 1845,
	82, 1525,
	151, 1525,
	-2, 1573,
	-1, 1846,
	82, 1526,
	151, 1526,
	-2, 1705,
	-1, 1847,
	82, 1527,
	151, 1527,
	-2, 1638,
	-1, 1848,
	82, 1528,
	151, 1528,
	-2, 1633,
	-1, 1849,
	82, 1529,
	151, 1529,
	-2, 1626,
	-1, 1851,
	82, 1532,
	151, 1532,
	-2, 1750,
	-1, 1852,
	82, 1512,
	151, 1512,
	-2, 1735,
	-1, 1853,
	82, 1541,
	151, 1541,
	-2, 1706,
	-1, 1854,
	82, 1541,
	151, 1541,
	-2, 1734,
	-1, 1855,
	82, 1541,
	151, 1541,
	-2, 1595,
	-1, 1856,
	82, 1539,
	151, 1539,
	-2, 1725,
	-1, 1857,
	82, 1536,
	151, 1536,
	-2, 1617,
	-1, 1858,
	81, 1493,
	82, 1493,
	151, 1493,
	378, 1493,
	379, 1493,
	380, 1493,
	-2, 1572,
	-1, 1859,
	81, 1494,
	82, 1494,
	151, 1494,
	378, 1494,
	379, 1494,
	380, 1494,
	-2, 1574,
	-1, 1860,
	81, 1497,
	82, 1497,
	151, 1497,
	378, 1497,
	379, 1497,
	380, 1497,
	-2, 1707,
	-1, 1861,
	81, 1499,
	82, 1499,
	151, 1499,
	378, 1499,
	379, 1499,
	380, 1499,
	-2, 1690,
	-1, 1862,
	81, 1501,
	82, 1501,
	151, 1501,
	378, 1501,
	379, 1501,
	380, 1501,
	-2, 1639,
	-1, 1863,
	81, 1503,
	82, 1503,
	151, 1503,
	378, 1503,
	379, 1503,
	380, 1503,
	-2, 1622,
	-1, 1864,
	81, 1504,
	82, 1504,
	151, 1504,
	378, 1504,
	379, 1504,
	380, 1504,
	-2, 1623,
	-1, 1865,
	81, 1506,
	82, 1506,
	151, 1506,
	378, 1506,
	379, 1506,
	380, 1506,
	-2, 1571,
	-1, 1866,
	82, 1546,
	151, 1546,
	378, 1546,
	379, 1546,
	380, 1546,
	-2, 1600,
	-1, 1867,
	82, 1546,
	151, 1546,
	378, 1546,
	379, 1546,
	380, 1546,
	-2, 1613,
	-1, 1868,
	82, 1549,
	151, 1549,
	378, 1549,
	379, 1549,
	380, 1549,
	-2, 1596,
	-1, 1869,
	82, 1549,
	151, 1549,
	378, 1549,
	379, 1549,
	380, 1549,
	-2, 1655,
	-1, 1870,
	82, 1546,
	151, 1546,
	378, 1546,
	379, 1546,
	380, 1546,
	-2, 1675,
	-1, 1884,
	102, 950,
	146, 950,
	185, 950,
	188, 950,
	272, 950,
	-2, 943,
	-1, 2015,
	21, 678,
	-2, 772,
	-1, 2205,
	102, 950,
	146, 950,
	185, 950,
	188, 950,
	272, 950,
	-2, 944,
	-1, 2217,
	79, 588,
	151, 588,
	-2, 1089,
	-1, 2239,
	188, 950,
	296, 1168,
	-2, 1142,
	-1, 2534,
	188, 950,
	296, 1168,
	-2, 1143,
	-1, 2678,
	102, 950,
	146, 950,
	185, 950,
	188, 950,
	-2, 1032,
	-1, 2681,
	102, 950,
	146, 950,
	185, 950,
	188, 950,
	-2, 1032,
	-1, 2691,
	79, 588,
	151, 588,
	-2, 1090,
	-1, 2798,
	102, 950,
	146, 950,
	185, 950,
	188, 950,
	-2, 1033,
	-1, 3124,
	82, 1004,
	151, 1004,
	-2, 950,
	-1, 3128,
	82, 1004,
	151, 1004,
	-2, 950,
	-1, 3142,
	82, 1008,
	151, 1008,
	-2, 950,
	-1, 3147,
	82, 1009,
	151, 1009,
	-2, 950,
}

const yyPrivate = 57344

const yyLast = 37812

var yyAct = [...]int{
	540, 1256, 1544, 3127, 3128, 3107, 174, 3136, 3009, 521,
	1318, 519, 542, 3066, 3032, 3054, 529, 2766, 2942, 2930,
	2761, 2960, 2823, 2548, 2961, 1817, 2632, 1314, 2573, 2922,
	2946, 2631, 2856, 2791, 658, 1009, 1121, 2790, 1179, 427,
	2884, 775, 1246, 2764, 2846, 2931, 2933, 1502, 433, 2220,
	438, 438, 570, 2797, 2506, 1321, 438, 454, 463, 2659,
	2756, 463, 2701, 2327, 159, 2328, 1633, 2312, 2326, 2662,
	2563, 2535, 2792, 1923, 2009, 2320, 523, 1630, 2629, 2108,
	1598, 1725, 2617, 2349, 53, 1926, 2600, 2323, 2800, 2482,
	2479, 1645, 2477, 2562, 1893, 2504, 2206, 2235, 468, 872,
	1835, 1993, 2386, 1837, 2107, 474, 2425, 1721, 512, 1827,
	513, 1694, 518, 1703, 1702, 1504, 1172, 1454, 1668, 1626,
	2057, 781, 1242, 1695, 2010, 1601, 2183, 2369, 710, 1720,
	1599, 1095, 1998, 2188, 36, 1237, 1531, 1924, 2507, 2241,
	1540, 1130, 170, 8, 1892, 2074, 169, 7, 6, 1075,
	1481, 427, 826, 1462, 1753, 1722, 1312, 2037, 522, 1247,
	1211, 1250, 1255, 1833, 432, 1188, 1158, 1877, 2509, 2508,
	1732, 1513, 110, 35, 174, 769, 174, 511, 817, 818,
	2150, 1367, 1303, 1317, 1514, 1351, 1701, 513, 779, 740,
	889, 460, 1097, 1698, 1218, 1684, 1129, 1311, 520, 1658,
	26, 1157, 530, 768, 15, 2017, 1480, 13, 447, 1110,
	1155, 1373, 1106, 655, 426, 14, 1372, 709, 32, 476,
	450, 23, 477, 16, 2149, 10, 160, 153, 687, 1122,
	707, 1047, 1210, 657, 156, 691, 728, 1739, 813, 785,
	815, 2110, 462, 1071, 2419, 2419, 157, 1729, 49, 149,
	126, 2624, 2063, 2061, 1221, 2060, 2058, 459, 1225, 814,
	810, 455, 810, 809, 457, 810, 150, 471, 158, 434,
	1010, 1142, 458, 142, 1223, 456, 2754, 151, 2382, 2380,
	1673, 443, 2852, 2847, 2757, 1948, 947, 948, 949, 946,
	2630, 947, 948, 949, 946, 1458, 109, 2935, 1004, 1697,
	656, 8, 3000, 466, 1956, 7, 157, 808, 666, 2660,
	157, 97, 49, 149, 126, 910, 2895, 154, 1063, 2778,
	2905, 157, 2095, 2783, 157, 157, 1270, 782, 784, 2103,
	2448, 472, 1737, 157, 1087, 157, 157, 49, 149, 126,
	1726, 157, 157, 49, 149, 126, 1881, 473, 794, 791,
	786, 790, 792, 1263, 1407, 646, 1267, 645, 647, 648,
	2896, 649, 650, 1138, 2781, 2035, 1139, 2023, 944, 1064,
	2022, 2401, 1643, 2024, 109, 2394, 797, 1269, 2036, 925,
	789, 154, 926, 1260, 2356, 2357, 109, 1288, 1611, 1612,
	113, 114, 154, 115, 116, 154, 154, 1466, 1467, 1159,
	1304, 1161, 2355, 1308, 1262, 667, 154, 154, 754, 1610,
	928, 753, 154, 154, 1118, 1125, 2185, 1127, 1128, 1124,
	1127, 1128, 918, 2964, 2965, 920, 2186, 1307, 659, 2075,
	3050, 795, 3048, 749, 1527, 937, 1320, 438, 798, 942,
	778, 777, 2774, 2938, 2996, 2937, 2995, 438, 882, 2936,
	2994, 2938, 1141, 921, 2999, 787, 2937, 2936, 125, 148,
	155, 2854, 95, 1808, 2387, 463, 463, 2924, 438, 1393,
	3036, 3037, 2388, 2184, 2389, 2927, 796, 2850, 877, 879,
	147, 141, 140, 2633, 1323, 923, 892, 55, 2857, 2858,
	2859, 2860, 2633, 2090, 1224, 1222, 2924, 758, 883, 2941,
	2491, 2663, 1627, 2642, 1621, 1617, 1309, 1299, 2191, 2268,
	1733, 2670, 1988, 2483, 755, 2788, 788, 697, 514, 2940,
	881, 2174, 125, 2493, 155, 1876, 980, 1306, 914, 820,
	2876, 2414, 1681, 1231, 1230, 3002, 3003, 2412, 785, 876,
	892, 940, 941, 2558, 147, 939, 924, 2100, 143, 144,
	145, 916, 2868, 2488, 2489, 2869, 1954, 507, 913, 2755,
	509, 2381, 2316, 919, 922, 508, 878, 1991, 2963, 2490,
	2863, 2773, 882, 2487, 152, 757, 1738, 905, 2775, 1990,
	2879, 2785, 780, 1994, 3043, 2503, 460, 460, 2892, 915,
	2513, 793, 105, 1322, 2571, 2572, 146, 2952, 106, 930,
	2213, 1150, 931, 465, 1116, 1140, 464, 2868, 2871, 785,
	2869, 1329, 1332, 1333, 1641, 1642, 1742, 1744, 1745, 2725,
	3121, 927, 1330, 3052, 1389, 2947, 782, 784, 1386, 3047,
	933, 3137, 1388, 1385, 1387, 1391, 1392, 935, 936, 2870,
	1390, 3075, 1305, 3011, 1014, 3082, 3007, 3008, 1013, 3011,
	756, 1105, 459, 459, 2730, 107, 455, 455, 2875, 457,
	457, 2716, 2705, 2871, 917, 1965, 48, 458, 458, 2575,
	456, 456, 885, 886, 894, 893, 1727, 1069, 433, 1072,
	2646, 2418, 2485, 1727, 2824, 2825, 2826, 2828, 2827, 1044,
	811, 812, 902, 3086, 2870, 816, 1942, 782, 784, 1964,
	896, 1727, 2197, 1944, 3138, 929, 1168, 898, 899, 710,
	2200, 2201, 2202, 2203, 2039, 50, 1985, 1986, 810, 810,
	810, 810, 810, 3001, 982, 983, 984, 985, 894, 893,
	810, 1167, 3057, 2711, 986, 2894, 1740, 1120, 1119, 1103,
	887, 934, 2893, 903, 461, 1102, 1126, 1728, 127, 1101,
	461, 2059, 1929, 3108, 2885, 438, 1226, 1152, 873, 3144,
	1943, 3132, 427, 427, 1123, 2464, 932, 2683, 1754, 2096,
	2752, 427, 427, 2782, 1076, 1183, 1183, 472, 438, 656,
	2351, 2353, 1396, 1397, 1398, 1399, 1400, 1401, 1394, 1395,
	1127, 1128, 1127, 1128, 2921, 2027, 463, 1072, 433, 1947,
	1214, 1214, 1181, 1181, 50, 2190, 108, 38, 127, 2484,
	50, 174, 127, 47, 1185, 2784, 1190, 112, 1117, 904,
	427, 2104, 1628, 127, 2494, 1156, 127, 127, 2877, 2415,
	1952, 1077, 1078, 1079, 1080, 127, 1082, 127, 127, 910,
	1086, 1730, 1070, 127, 127, 1081, 3053, 1331, 2417, 2864,
	1022, 1023, 1743, 2865, 2366, 2367, 1932, 2574, 1085, 2194,
	2195, 1107, 1111, 1111, 1111, 3058, 2789, 1084, 1232, 1254,
	1083, 1257, 780, 2486, 2193, 2269, 1265, 2270, 2271, 1620,
	1618, 467, 1300, 2472, 1107, 1107, 1928, 3131, 1049, 1177,
	1178, 1930, 1741, 700, 1051, 701, 1286, 2718, 2266, 801,
	806, 807, 1092, 2707, 2864, 657, 2173, 2706, 2932, 1104,
	1183, 1821, 1183, 882, 1271, 1074, 1114, 704, 705, 706,
	2296, 1067, 909, 1469, 1132, 1133, 1470, 1135, 1136, 1137,
	3143, 1112, 1113, 2427, 2426, 1823, 1822, 1163, 1165, 1094,
	2352, 1151, 1820, 698, 1468, 1931, 1175, 1176, 668, 1281,
	1282, 2287, 2288, 750, 1977, 1143, 1144, 785, 2712, 2713,
	669, 785, 1207, 1235, 750, 1238, 1239, 1131, 1244, 1245,
	1134, 2806, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1933, 1319, 1166, 3087, 1362, 1363,
	1065, 1066, 1371, 3055, 3056, 1227, 2218, 1951, 660, 1946,
	3150, 1410, 1411, 1412, 660, 1420, 3149, 1261, 2501, 1879,
	945, 1268, 672, 443, 1426, 1191, 2007, 1427, 2597, 1316,
	1201, 1147, 460, 1149, 1249, 1153, 1154, 1253, 1252, 1434,
	1435, 1429, 1295, 1215, 950, 3140, 752, 1216, 1205, 751,
	1206, 1285, 3122, 979, 2518, 1785, 910, 752, 1784, 1284,
	751, 988, 2077, 3117, 1196, 1197, 1198, 1199, 1200, 1297,
	1202, 1203, 1204, 671, 2593, 1334, 1209, 674, 673, 945,
	2286, 1073, 3111, 993, 3110, 945, 438, 1505, 1479, 1183,
	1483, 1452, 1485, 1486, 803, 804, 805, 438, 459, 2679,
	1183, 1830, 455, 1313, 710, 457, 1811, 1503, 1294, 2095,
	657, 1183, 1291, 458, 3141, 1290, 456, 1152, 1277, 1273,
	1272, 1735, 454, 1455, 1831, 1832, 2219, 945, 1419, 1293,
	1878, 1292, 3118, 1289, 2008, 1505, 2179, 2176, 1310, 2082,
	945, 1526, 2219, 1315, 2502, 2039, 1045, 2008, 699, 1532,
	1532, 1735, 1152, 1735, 1152, 1152, 1478, 3091, 438, 1726,
	1479, 1479, 1530, 3068, 1183, 1596, 1608, 1402, 1403, 3026,
	1406, 2297, 2299, 2300, 2301, 2298, 1609, 1764, 1421, 2975,
	427, 1301, 1183, 1360, 1361, 1353, 1916, 907, 2966, 543,
	552, 1428, 2915, 1430, 2914, 544, 1484, 551, 545, 549,
	548, 546, 547, 947, 948, 949, 946, 438, 1479, 1183,
	2910, 1650, 1661, 438, 1653, 1654, 947, 948, 949, 946,
	1657, 1816, 2008, 1405, 1663, 1789, 1735, 2909, 1591, 1592,
	1717, 174, 3069, 1475, 174, 174, 1302, 174, 3027, 1639,
	1519, 2908, 2907, 1487, 1488, 1489, 1431, 1547, 2881, 1763,
	553, 1093, 1365, 1107, 908, 1525, 1815, 2881, 1528, 1529,
	908, 2916, 2446, 1897, 2880, 1636, 1637, 1520, 2733, 1453,
	2597, 1169, 1482, 1420, 1420, 1705, 1647, 3105, 1111, 2881,
	1420, 1420, 550, 1495, 1622, 1712, 1533, 3070, 2694, 1629,
	1614, 1459, 1616, 2519, 1508, 1672, 2881, 2371, 1675, 1676,
	1534, 1678, 1634, 1635, 1652, 1511, 1512, 1506, 1507, 1503,
	2881, 2881, 1499, 1183, 1724, 1649, 2221, 1515, 2583, 1517,
	1518, 1500, 1521, 1522, 1510, 1536, 1537, 2098, 1213, 1213,
	1516, 2127, 1523, 2881, 1108, 2097, 1535, 2039, 2089, 947,
	948, 949, 946, 1913, 1780, 1765, 1524, 1482, 1659, 1716,
	2346, 2155, 2111, 1666, 1474, 2093, 1718, 785, 2086, 867,
	863, 864, 865, 866, 785, 2132, 1747, 2131, 2130, 2128,
	1595, 1597, 910, 1274, 1613, 991, 1615, 895, 875, 870,
	1751, 1752, 868, 1623, 702, 1814, 1700, 2584, 2669, 1706,
	1432, 1433, 1313, 1700, 1436, 1437, 1438, 1439, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1648, 961, 960, 970,
	971, 963, 964, 965, 966, 967, 968, 969, 962, 2008,
	945, 945, 1669, 460, 1897, 1667, 1787, 2080, 2084, 2836,
	2114, 2129, 1644, 960, 970, 971, 963, 964, 965, 966,
	967, 968, 969, 962, 1790, 782, 784, 1686, 1109, 785,
	2731, 1797, 782, 784, 961, 960, 970, 971, 963, 964,
	965, 966, 967, 968, 969, 962, 2079, 1709, 962, 875,
	2072, 2070, 2068, 1707, 1324, 1325, 1326, 1327, 1328, 1651,
	1715, 2066, 512, 1638, 882, 1871, 438, 2523, 1896, 459,
	1812, 1793, 1792, 455, 1719, 1783, 457, 2085, 438, 438,
	438, 1774, 1773, 1772, 458, 1734, 2409, 456, 1278, 1714,
	1894, 2953, 2019, 1710, 3100, 1711, 1409, 1408, 1369, 1370,
	1901, 1152, 2514, 2807, 1404, 2686, 1755, 1368, 2622, 2684,
	3088, 1906, 1414, 3115, 759, 2080, 1173, 782, 784, 2073,
	2071, 2067, 1098, 1949, 2709, 1152, 1099, 1174, 1746, 1171,
	2067, 1748, 882, 1937, 1108, 2954, 1838, 1897, 1759, 1811,
	945, 945, 2133, 2134, 945, 1749, 1750, 2808, 1353, 2687,
	945, 945, 945, 2685, 1735, 1456, 2708, 1279, 973, 1460,
	977, 875, 1463, 961, 960, 970, 971, 963, 964, 965,
	966, 967, 968, 969, 962, 2515, 974, 976, 972, 1950,
	975, 961, 960, 970, 971, 963, 964, 965, 966, 967,
	968, 969, 962, 2598, 2012, 2012, 1608, 2012, 1873, 2588,
	2585, 2058, 2420, 1440, 1922, 970, 971, 963, 964, 965,
	966, 967, 968, 969, 962, 427, 427, 1903, 1904, 2516,
	1807, 1809, 1810, 882, 2318, 1170, 2083, 1907, 1908, 1183,
	438, 963, 964, 965, 966, 967, 968, 969, 962, 1824,
	2029, 1089, 438, 1880, 2118, 1088, 882, 433, 1109, 884,
	1214, 2052, 1608, 1670, 2373, 2047, 2033, 2049, 670, 1477,
	1915, 174, 1111, 965, 966, 967, 968, 969, 962, 2014,
	1918, 2018, 1902, 1359, 949, 946, 2016, 1368, 2720, 1760,
	785, 1456, 2025, 1219, 2026, 1670, 1456, 1456, 2993, 1356,
	1358, 1355, 946, 1357, 2719, 1014, 2390, 2253, 2252, 1013,
	1921, 1920, 2030, 2031, 2247, 2245, 1909, 2091, 2698, 1914,
	1724, 1910, 2786, 3126, 1911, 3114, 3085, 1183, 1838, 1183,
	3076, 1183, 3071, 3013, 2667, 2053, 882, 2984, 1671, 1606,
	1912, 1674, 2046, 2041, 1677, 2321, 2955, 1679, 953, 954,
	955, 956, 957, 958, 959, 951, 2101, 947, 948, 949,
	946, 2897, 1424, 1992, 2848, 1183, 2136, 2815, 2625, 947,
	948, 949, 946, 1425, 2044, 2787, 2020, 2810, 782, 784,
	2062, 2143, 2809, 2051, 3084, 675, 1183, 2668, 2688, 437,
	437, 2666, 1181, 2492, 507, 445, 2405, 509, 2142, 2145,
	1163, 1165, 508, 2135, 2385, 2034, 2384, 2291, 2105, 947,
	948, 949, 946, 1181, 947, 948, 949, 946, 2623, 2042,
	2045, 2043, 2290, 2120, 2144, 2147, 947, 948, 949, 946,
	882, 947, 948, 949, 946, 2054, 2289, 2281, 1955, 1219,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 2439, 2308, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	2102, 1978, 1979, 1980, 1981, 1982, 2122, 1983, 2088, 2116,
	2957, 947, 948, 949, 946, 2094, 2092, 1762, 2166, 1183,
	1220, 2478, 2198, 2099, 1757, 2306, 1479, 1761, 947, 948,
	949, 946, 2217, 947, 948, 949, 946, 2275, 2223, 2945,
	2274, 2307, 2177, 2273, 2112, 2113, 2438, 2272, 1689, 1688,
	1313, 1687, 1683, 1682, 2232, 2304, 2126, 1818, 1819, 2293,
	882, 1275, 947, 948, 949, 946, 1771, 1062, 2244, 947,
	948, 949, 946, 3042, 1778, 2762, 2249, 2250, 2305, 2251,
	3038, 2997, 2180, 2254, 2255, 2256, 1532, 2919, 947, 948,
	949, 946, 1791, 2115, 2208, 1794, 1795, 1796, 2878, 2167,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 2303, 2012,
	2170, 2849, 2292, 2207, 2814, 2813, 1239, 1244, 1245, 2796,
	2760, 2758, 1776, 2309, 2737, 2735, 947, 948, 949, 946,
	2313, 427, 1922, 2700, 2214, 1479, 882, 1608, 1608, 1608,
	1608, 2665, 2664, 2661, 2181, 1547, 2224, 2651, 882, 1608,
	2645, 2242, 2012, 555, 111, 2242, 2109, 2592, 2151, 111,
	2590, 2226, 2581, 2156, 1898, 2228, 2239, 1249, 1183, 2196,
	1253, 1252, 947, 948, 949, 946, 2216, 2580, 8, 2469,
	438, 438, 7, 2468, 2222, 2416, 2383, 2360, 2227, 1775,
	2302, 2294, 2284, 2282, 3139, 174, 2278, 2234, 2238, 2277,
	174, 2240, 1482, 2276, 602, 601, 2899, 444, 2329, 2246,
	111, 2342, 947, 948, 949, 946, 2243, 1813, 1691, 1685,
	2329, 1420, 2258, 1420, 1465, 1276, 2400, 2768, 1021, 1017,
	2404, 1016, 2767, 2283, 992, 2225, 1183, 2729, 871, 2411,
	2861, 2681, 2680, 2229, 2230, 2678, 2650, 2637, 2628, 2231,
	947, 948, 949, 946, 2314, 947, 948, 949, 946, 2374,
	947, 948, 949, 946, 2378, 2627, 2319, 2330, 2331, 2332,
	2333, 2616, 2615, 1456, 2343, 1456, 2345, 657, 2524, 2341,
	2444, 2344, 2437, 2429, 2424, 1455, 2368, 2178, 2175, 2361,
	2399, 2069, 157, 1456, 1456, 149, 126, 2358, 2065, 2064,
	1798, 1788, 2187, 1786, 785, 1768, 2317, 1782, 783, 1781,
	1779, 785, 111, 2432, 2375, 2434, 874, 2376, 1213, 2372,
	882, 1770, 2354, 1767, 2413, 1766, 880, 111, 2481, 111,
	1690, 1451, 1450, 2397, 2396, 1449, 2393, 2398, 2496, 2403,
	438, 2391, 2408, 2407, 1423, 1422, 1413, 901, 1195, 2648,
	882, 882, 882, 1193, 2395, 2421, 3099, 3093, 157, 1608,
	1894, 2402, 2522, 154, 3083, 3080, 3078, 2422, 2526, 2983,
	2917, 2428, 947, 948, 949, 946, 2264, 2265, 882, 1011,
	2435, 2436, 2561, 1234, 2564, 2832, 2564, 2564, 2820, 2500,
	2279, 2280, 1838, 2569, 2433, 947, 948, 949, 946, 2816,
	2746, 2744, 2727, 2430, 2431, 1183, 1183, 785, 2726, 2723,
	2465, 2722, 2715, 2673, 2315, 1243, 1236, 1096, 2310, 2119,
	2473, 2471, 1922, 1922, 1922, 2576, 2470, 2137, 2138, 154,
	2248, 2211, 1181, 1181, 2207, 2140, 2141, 3097, 2442, 2520,
	2497, 2210, 2499, 2577, 2578, 2209, 2510, 2511, 2146, 1248,
	2531, 438, 2560, 2559, 2521, 2517, 2481, 2476, 785, 1251,
	1240, 947, 948, 949, 946, 1479, 1479, 2165, 2554, 2078,
	1456, 2028, 1984, 2168, 2169, 1463, 2532, 2441, 1895, 2565,
	2566, 2525, 1354, 154, 1655, 2527, 2528, 961, 960, 970,
	971, 963, 964, 965, 966, 967, 968, 969, 962, 1473,
	947, 948, 949, 946, 1472, 1298, 2974, 2440, 2530, 1264,
	1241, 1046, 2136, 2449, 3018, 2164, 1043, 2450, 2451, 2452,
	2453, 2626, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	947, 948, 949, 946, 1042, 1041, 1040, 2567, 947, 948,
	949, 946, 2582, 2163, 1039, 1038, 2587, 2586, 1037, 2591,
	1036, 1035, 2594, 2595, 1034, 1033, 1032, 1031, 438, 2605,
	3095, 2162, 1030, 1029, 2529, 2161, 947, 948, 949, 946,
	1028, 1027, 2609, 1026, 2589, 2972, 2160, 2612, 2613, 2614,
	1025, 1024, 1020, 2596, 947, 948, 949, 946, 947, 948,
	949, 946, 1019, 1018, 1015, 2621, 1008, 1007, 2608, 947,
	948, 949, 946, 2159, 1005, 111, 111, 783, 1004, 1003,
	961, 960, 970, 971, 963, 964, 965, 966, 967, 968,
	969, 962, 1002, 3016, 2158, 1001, 947, 948, 949, 946,
	2641, 1000, 999, 998, 1148, 997, 996, 2652, 1756, 2644,
	995, 994, 990, 989, 2677, 912, 2638, 947, 948, 949,
	946, 2157, 2640, 2639, 869, 2970, 2154, 1189, 2012, 1608,
	2691, 2968, 961, 960, 970, 971, 963, 964, 965, 966,
	967, 968, 969, 962, 947, 948, 949, 946, 978, 947,
	948, 949, 946, 1183, 2654, 2601, 2602, 2724, 1900, 1883,
	2699, 2657, 900, 2962, 661, 662, 663, 664, 2153, 438,
	785, 2604, 2152, 2199, 2040, 1693, 911, 660, 2561, 2338,
	2702, 2607, 2693, 2672, 2339, 2606, 2656, 2377, 2335, 2379,
	1183, 947, 948, 949, 946, 947, 948, 949, 946, 2148,
	2336, 2749, 2689, 2748, 1479, 2337, 2334, 1456, 882, 2690,
	3125, 2087, 1456, 2139, 2081, 1090, 2697, 1181, 2559, 2117,
	2658, 2172, 947, 948, 949, 946, 1583, 2340, 2732, 2004,
	2005, 2751, 1953, 2554, 174, 1364, 947, 948, 949, 946,
	1194, 2740, 947, 948, 949, 946, 2692, 882, 2728, 2423,
	2474, 2747, 2695, 1497, 1498, 2696, 2076, 96, 947, 948,
	949, 946, 2734, 1995, 2236, 2776, 2237, 2736, 1492, 1493,
	1494, 2443, 2739, 2741, 1228, 2742, 52, 2738, 51, 2106,
	2329, 2466, 2467, 1052, 882, 1183, 1183, 1048, 2260, 435,
	882, 2799, 1818, 1819, 2799, 2261, 2262, 2263, 2753, 1258,
	2000, 2003, 2004, 2005, 2001, 1874, 2002, 2006, 1656, 906,
	2763, 440, 1181, 2702, 2000, 2003, 2004, 2005, 2001, 2329,
	2002, 2006, 2939, 2794, 2475, 2777, 2233, 2182, 2779, 1890,
	441, 1501, 442, 882, 882, 1471, 3029, 882, 882, 2818,
	439, 1409, 1408, 2579, 2801, 2804, 2803, 1989, 2795, 1060,
	1061, 2693, 1058, 1059, 1594, 1503, 1146, 2840, 2829, 1056,
	1057, 1145, 1922, 1054, 1055, 2844, 2845, 938, 2834, 2611,
	2821, 2822, 2038, 1713, 2830, 2831, 1100, 2568, 1050, 3094,
	2817, 661, 662, 663, 664, 3005, 2990, 2837, 2988, 2874,
	2948, 2929, 2928, 2926, 660, 660, 2674, 2675, 2676, 2867,
	2918, 2843, 2838, 2842, 1192, 2759, 2653, 2635, 2634, 444,
	2619, 2887, 1053, 2618, 2370, 2811, 2812, 1505, 3020, 3019,
	1115, 2406, 1885, 1769, 897, 1476, 3019, 3020, 2862, 2866,
	2717, 882, 2872, 2636, 111, 2362, 1490, 161, 3, 60,
	2, 1160, 2021, 882, 1640, 2882, 1183, 1187, 1, 1464,
	665, 2347, 2888, 2348, 2610, 2890, 2898, 2889, 2350, 1731,
	1987, 1875, 2495, 2901, 1091, 703, 1415, 1283, 2906, 800,
	891, 1280, 890, 1181, 888, 1366, 557, 1696, 2311, 2285,
	2911, 2839, 3028, 3065, 2912, 2769, 2982, 3031, 1296, 541,
	2934, 2923, 882, 2920, 2853, 2986, 111, 1538, 2925, 2949,
	111, 2855, 2765, 1736, 943, 2392, 724, 593, 568, 1006,
	1266, 111, 1259, 2958, 2447, 802, 567, 2671, 2944, 2192,
	2365, 111, 2891, 799, 1183, 2943, 725, 2977, 2980, 1680,
	2851, 2951, 1229, 1233, 2805, 2682, 2967, 2969, 2971, 2973,
	2512, 2212, 3135, 3124, 3106, 2956, 1646, 3092, 3010, 2981,
	3120, 1181, 1646, 3046, 3081, 2772, 2770, 2989, 2771, 2991,
	2992, 1183, 2976, 2987, 2985, 3074, 3006, 478, 2647, 1619,
	425, 766, 2833, 1692, 479, 2649, 1899, 2998, 2819, 685,
	1882, 3004, 686, 2205, 2204, 1335, 952, 1352, 1181, 2462,
	2463, 987, 517, 3017, 3035, 3015, 3014, 1758, 2189, 3012,
	2549, 3021, 2359, 3022, 59, 3023, 3034, 3024, 58, 3025,
	57, 56, 1662, 182, 559, 181, 882, 2979, 3033, 539,
	2934, 3039, 538, 3040, 712, 537, 536, 2835, 535, 1999,
	1997, 1996, 1603, 1602, 1660, 3049, 3051, 2570, 3064, 2257,
	1941, 1934, 1539, 2959, 2903, 2904, 3059, 2714, 2295, 3067,
	3060, 3061, 3062, 3063, 3072, 1491, 882, 1945, 1553, 2267,
	1550, 1549, 2259, 2710, 2704, 1580, 3073, 2798, 2533, 2534,
	3077, 2540, 3079, 1889, 825, 821, 823, 824, 822, 2125,
	3035, 3090, 2121, 1917, 2505, 1829, 1828, 1826, 3044, 882,
	1825, 882, 3034, 1068, 3089, 2873, 2655, 1836, 1834, 3096,
	750, 3098, 2603, 2599, 1704, 3101, 1461, 3067, 2171, 1604,
	882, 3102, 1600, 3109, 2902, 1884, 3116, 2780, 1456, 3119,
	3113, 1496, 679, 87, 86, 94, 138, 1456, 1319, 46,
	2743, 166, 2913, 2745, 3123, 165, 168, 3130, 167, 164,
	2055, 3134, 3133, 2056, 163, 1217, 162, 2750, 3142, 2802,
	654, 3145, 2445, 37, 33, 3130, 3148, 3147, 12, 3146,
	3134, 1319, 11, 1319, 34, 21, 22, 20, 1287, 157,
	19, 49, 149, 126, 25, 31, 30, 104, 103, 1607,
	29, 102, 1319, 752, 2950, 101, 751, 100, 99, 150,
	98, 28, 18, 41, 40, 39, 142, 9, 93, 91,
	151, 27, 961, 960, 970, 971, 963, 964, 965, 966,
	967, 968, 969, 962, 92, 89, 90, 88, 71, 109,
	737, 70, 69, 84, 83, 1872, 82, 81, 713, 80,
	79, 77, 78, 723, 97, 68, 67, 1886, 1887, 1888,
	154, 66, 65, 64, 111, 75, 85, 111, 111, 76,
	111, 74, 73, 72, 63, 715, 961, 960, 970, 971,
	963, 964, 965, 966, 967, 968, 969, 962, 62, 61,
	1905, 123, 124, 122, 1581, 121, 120, 119, 118, 117,
	42, 43, 44, 45, 134, 133, 783, 135, 137, 139,
	136, 131, 129, 783, 132, 3041, 130, 128, 54, 17,
	24, 4, 111, 0, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 113, 114, 0, 115, 116, 736, 735,
	0, 0, 2883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 0, 0, 0, 0,
	0, 0, 1581, 0, 711, 2900, 0, 0, 0, 3129,
	0, 0, 0, 0, 0, 714, 745, 0, 0, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1583, 1552, 978, 741,
	0, 125, 148, 155, 0, 95, 1584, 1585, 0, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	993, 1646, 0, 147, 141, 140, 0, 0, 0, 0,
	55, 0, 1551, 0, 0, 742, 746, 0, 0, 0,
	0, 0, 0, 1574, 0, 0, 0, 1558, 0, 0,
	0, 0, 0, 731, 0, 729, 733, 749, 0, 0,
	0, 730, 727, 726, 0, 732, 717, 718, 716, 719,
	720, 721, 722, 0, 747, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 743, 744, 0,
	0, 143, 144, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 0, 0, 152, 0, 0,
	1562, 0, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 1568, 0, 0, 0, 105, 0, 0, 0, 146,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1556, 1590, 0, 0, 1557, 1559, 1561, 0, 1563,
	1564, 1565, 1569, 1570, 1571, 1573, 1576, 1577, 1578, 0,
	0, 0, 0, 0, 0, 0, 1566, 1575, 1567, 1543,
	1542, 1545, 0, 1541, 0, 0, 0, 0, 1562, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 107, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	1582, 0, 0, 0, 0, 0, 0, 0, 0, 1556,
	1590, 0, 0, 1557, 1559, 1561, 0, 1563, 1564, 1565,
	1569, 1570, 1571, 1573, 1576, 1577, 1578, 3104, 0, 0,
	0, 0, 0, 0, 1566, 1575, 1567, 1579, 0, 2015,
	0, 0, 0, 0, 0, 0, 1546, 0, 50, 0,
	0, 2215, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 841, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 1560, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1555, 0, 0, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	38, 0, 0, 0, 0, 0, 47, 5, 0, 0,
	112, 841, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 1560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 1586, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2363,
	2364, 0, 0, 849, 853, 855, 857, 859, 860, 862,
	0, 867, 863, 864, 865, 866, 0, 844, 845, 846,
	847, 827, 828, 850, 841, 830, 1548, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 842, 848, 0,
	0, 0, 0, 0, 0, 0, 852, 854, 856, 858,
	861, 0, 0, 0, 1393, 0, 0, 0, 1589, 0,
	0, 1588, 0, 0, 0, 0, 0, 0, 829, 0,
	0, 0, 819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 843, 0, 0, 0, 0, 849, 853,
	855, 857, 859, 860, 862, 0, 867, 863, 864, 865,
	866, 0, 844, 845, 846, 847, 827, 828, 850, 0,
	830, 0, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 842, 848, 0, 0, 0, 0, 0, 111,
	0, 852, 854, 856, 858, 861, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 0, 0, 0, 0, 700,
	0, 701, 0, 0, 0, 0, 0, 0, 0, 2498,
	0, 849, 853, 855, 857, 859, 860, 862, 843, 867,
	863, 864, 865, 866, 0, 844, 845, 846, 847, 827,
	828, 850, 0, 830, 0, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 842, 848, 694, 0, 698,
	0, 0, 0, 0, 852, 854, 856, 858, 861, 1389,
	0, 2538, 0, 1386, 2123, 2124, 0, 1388, 1385, 1387,
	1391, 1392, 0, 0, 0, 1390, 0, 0, 0, 0,
	1607, 1607, 1607, 1607, 0, 947, 948, 949, 946, 0,
	0, 843, 1607, 0, 0, 0, 0, 0, 0, 2550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2541, 0, 0, 0, 0, 0, 0, 2536,
	1646, 0, 0, 0, 2556, 2557, 0, 0, 0, 0,
	2537, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 1393, 0, 0, 2542, 0, 0,
	111, 0, 0, 696, 0, 690, 0, 680, 0, 0,
	0, 0, 0, 0, 693, 692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 677, 0, 0, 0, 684, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1396, 1397, 1398,
	1399, 1400, 1401, 1394, 1395, 0, 0, 2643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 699, 0, 0, 0, 0, 689,
	0, 0, 0, 688, 0, 0, 0, 0, 2555, 676,
	1927, 0, 0, 683, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 851, 0, 0, 0, 2546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 678, 1607, 0, 0, 0, 0, 2543, 2547, 2545,
	2544, 0, 0, 0, 0, 697, 0, 111, 0, 1389,
	0, 0, 0, 1386, 0, 0, 0, 1388, 1385, 1387,
	1391, 1392, 0, 0, 0, 1390, 0, 0, 0, 0,
	0, 682, 0, 0, 0, 2552, 2553, 0, 0, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	358, 575, 0, 0, 0, 0, 0, 0, 2721, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 2558, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 2539, 0, 0,
	0, 0, 0, 2551, 423, 0, 424, 0, 0, 566,
	0, 0, 350, 305, 0, 0, 695, 0, 625, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 556, 602, 601, 543, 552, 0, 0,
	244, 180, 544, 0, 551, 545, 549, 548, 546, 547,
	0, 617, 0, 0, 0, 0, 0, 0, 515, 528,
	0, 532, 0, 0, 0, 0, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1396, 1397, 1398,
	1399, 1400, 1401, 1394, 1395, 525, 526, 0, 0, 0,
	0, 576, 0, 527, 0, 0, 571, 553, 554, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 550,
	574, 578, 260, 639, 572, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	640, 281, 329, 295, 330, 282, 307, 306, 308, 111,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 381, 0, 0, 623, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 573, 0, 341, 323,
	636, 516, 1607, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	1417, 1416, 1418, 393, 273, 227, 228, 431, 621, 319,
	0, 0, 635, 616, 618, 619, 622, 626, 627, 628,
	629, 630, 632, 634, 638, 430, 0, 111, 0, 0,
	0, 429, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 577, 0, 0, 309,
	310, 311, 312, 624, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 609, 586, 587, 588,
	533, 589, 584, 585, 610, 579, 606, 607, 558, 582,
	590, 605, 591, 608, 611, 612, 651, 652, 597, 653,
	594, 613, 604, 603, 592, 580, 614, 615, 565, 560,
	595, 596, 583, 598, 599, 600, 561, 562, 563, 564,
	358, 575, 0, 389, 390, 391, 413, 375, 0, 428,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 0, 0, 0, 266, 1457,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 424, 0, 0, 566,
	0, 0, 350, 305, 0, 0, 0, 0, 625, 633,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	524, 0, 0, 556, 602, 601, 543, 552, 0, 0,
	244, 180, 544, 0, 551, 545, 549, 548, 546, 547,
	0, 617, 0, 0, 0, 0, 0, 0, 515, 528,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 0, 0, 0,
	0, 576, 0, 527, 0, 0, 1632, 553, 554, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 550,
	574, 578, 260, 639, 572, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	640, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 381, 0, 0, 623, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 573, 0, 341, 323,
	636, 516, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 431, 621, 319,
	0, 0, 635, 616, 618, 619, 622, 626, 627, 628,
	629, 630, 632, 634, 638, 430, 0, 0, 0, 0,
	0, 429, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 577, 0, 0, 309,
	310, 311, 312, 624, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 609, 586, 587, 588,
	533, 589, 584, 585, 610, 579, 606, 607, 558, 582,
	590, 605, 591, 608, 611, 612, 651, 652, 597, 653,
	594, 613, 604, 603, 592, 580, 614, 615, 565, 560,
	595, 596, 583, 598, 599, 600, 561, 562, 563, 564,
	157, 358, 575, 389, 390, 391, 413, 375, 0, 428,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	981, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 515,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 127, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 358, 575, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 266,
	3103, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 515,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 358, 575, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 266,
	1457, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 515,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 358, 575, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 515,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 1212, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 0, 0, 0, 389, 390, 391, 413, 375, 0,
	428, 358, 575, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 515,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 358, 575, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 515,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 358, 575, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 531, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 0,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 1337, 1338, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 358, 575, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 515,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 358, 575, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 244, 180, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 0,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 621,
	319, 0, 0, 635, 616, 618, 619, 622, 626, 627,
	628, 629, 630, 632, 634, 638, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 0, 0,
	309, 310, 311, 312, 624, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 646, 620, 645, 647, 648, 644, 649, 650, 631,
	534, 0, 581, 642, 641, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 0, 0, 0, 389, 390, 391, 413, 375, 0,
	428, 157, 358, 49, 149, 126, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 142, 0,
	266, 0, 151, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 109, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 154, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 125, 148, 155, 0, 95, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 172, 0, 0,
	0, 354, 0, 0, 290, 147, 141, 140, 397, 0,
	341, 323, 55, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 143, 144, 145, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 376,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 175, 0, 0, 422, 183, 0, 0,
	0, 146, 0, 184, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 127, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 0, 0, 0, 389, 390, 391, 413, 375,
	358, 185, 38, 173, 176, 178, 177, 0, 47, 5,
	0, 321, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 424, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1012, 0, 0, 179, 0, 0, 543, 552, 0, 0,
	244, 180, 544, 0, 551, 545, 549, 548, 546, 547,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 550,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 431, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 430, 0, 0, 0, 0,
	0, 429, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	0, 0, 0, 389, 390, 391, 413, 375, 0, 428,
	157, 358, 49, 149, 126, 0, 0, 0, 0, 0,
	0, 0, 321, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 0, 0,
	309, 310, 311, 312, 449, 451, 249, 405, 334, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 127, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	841, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 1858, 1860, 1861,
	1862, 1863, 1864, 1865, 0, 1870, 1866, 1867, 1868, 1869,
	0, 1853, 1854, 1855, 1856, 827, 1839, 1859, 0, 1840,
	317, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1857, 329, 295, 330, 282, 307, 306, 308,
	852, 854, 856, 858, 861, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 1852, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 0, 0,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	851, 292, 0, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 1929, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 381, 0, 0, 0, 1928, 1919, 1927,
	354, 1925, 1930, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 1931, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 0, 0,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 1929, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 381, 0, 0, 0, 1928, 0, 1927,
	354, 1925, 1930, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 1931, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 0, 0,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 1665, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 947, 948, 949, 946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 0, 0,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	765, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 772, 773, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 760, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 752, 379, 239, 751, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 763, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 764, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 767, 0, 0,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 774, 761, 770, 762, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 0, 424, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 381, 0, 0, 0, 1940, 1938, 0,
	354, 0, 1939, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 431, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 430, 0, 0, 0,
	0, 0, 429, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 0, 0,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 157, 358, 0, 389, 390, 391, 413, 375, 0,
	428, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 109, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 1708, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 127, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 157, 358, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 423, 0, 424,
	0, 0, 109, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 1699, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	431, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 430, 0,
	0, 0, 0, 0, 429, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	0, 0, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 127, 333, 271, 0, 0, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 157, 358, 0, 389, 390, 391, 413,
	375, 0, 428, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 109, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 127, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 772, 773,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 752, 379,
	239, 751, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 774, 1624,
	770, 1625, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 2322, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 2325, 0, 0,
	2324, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 1186, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	1184, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 1180, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	1184, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3030, 0, 179, 602, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	1184, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	1184, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2703, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	2013, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 2032, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	1184, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3112, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 602, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3045, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	2978, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2793, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	2841, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	2480, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	1184, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	2013, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 428, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	424, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	2048, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 431, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 430,
	0, 0, 0, 0, 0, 429, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 0, 0, 0, 389, 390, 391,
	413, 375, 358, 428, 0, 0, 1891, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 1184, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 1509, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 1208, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 708, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 469, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 470, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 1164, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 1162, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 428, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 424, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	510, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 431,
	259, 319, 0, 0, 1581, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 430, 0, 0,
	0, 0, 0, 429, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1583, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1558,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 2886,
	0, 0, 0, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1581, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	1583, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 0, 0, 0, 389, 390, 391, 413, 375,
	1562, 428, 489, 0, 488, 495, 485, 0, 0, 0,
	0, 1568, 0, 0, 0, 0, 492, 493, 0, 494,
	498, 1558, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 1556, 1590, 503, 0, 1557, 1559, 1561, 0, 1563,
	1564, 1565, 1569, 1570, 1571, 1573, 1576, 1577, 1578, 489,
	0, 488, 495, 485, 0, 0, 1566, 1575, 1567, 0,
	0, 0, 0, 492, 493, 0, 494, 498, 0, 0,
	480, 0, 0, 0, 0, 0, 507, 0, 0, 509,
	503, 0, 0, 0, 508, 1574, 0, 0, 0, 0,
	1582, 0, 0, 0, 0, 0, 0, 489, 0, 488,
	495, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 493, 0, 494, 498, 0, 0, 480, 0,
	0, 0, 0, 507, 0, 0, 509, 1579, 503, 0,
	0, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 1560, 0, 0, 0, 0, 0,
	0, 0, 0, 1556, 1590, 0, 0, 1557, 1559, 1561,
	0, 1563, 1564, 1565, 1569, 1570, 1571, 1573, 1576, 1577,
	1578, 0, 0, 0, 481, 483, 482, 0, 1566, 1575,
	1567, 0, 0, 0, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	484, 0, 1582, 0, 475, 0, 0, 0, 0, 0,
	0, 481, 483, 482, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 1579,
	506, 0, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 1555, 0, 0, 481,
	483, 482, 0, 1554, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 1572, 506, 0,
	0, 0, 0, 0, 0, 484, 1560, 0, 0, 0,
	0, 0, 486, 490, 496, 0, 497, 499, 0, 0,
	500, 501, 502, 0, 0, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 486,
	490, 496, 0, 497, 499, 0, 0, 500, 501, 502,
	0, 0, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 490, 496,
	0, 497, 499, 0, 0, 500, 501, 502, 0, 0,
	504, 505,
}

var yyPact = [...]int{
	3149, -1000, -1000, -1000, -315, 10351, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35131, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35131, -313, 34581,
	34581, -1000, -1000, 2142, -1000, 34031, 11470, 35131, 294, 291,
	35131, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 651, -1000, 33481, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 541, 37342, 36781, 8140, -262,
	-1000, 2765, -108, 789, 804, 904, 904, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3874, 698, 32931, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2988, 178, 698,
	14220, 5, 4, 2765, 326, 119, -1000, 868, 236, 147,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8140, 8140, 10351, -325, 10351, 8140, 35131, 35131, -1000,
	-1000, -1000, -1000, 541, 37342, 8140, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3701, -1000, 1222, -1000, -1000,
	-1000, -1000, 2433, 1219, 2011, 505, 35131, -1000, 1218, 505,
	-1000, -1000, -1000, 2765, 2765, -1000, 35131, 35131, 82, 1540,
	-1000, 331, 325, 314, 1217, -1000, -1000, -1000, -1000, -1000,
	-1000, 431, 2799, -1000, 35131, 35131, 2473, 35131, -1000, 1710,
	482, 37389, 2664, 1099, 688, 2488, -1000, -1000, 2424, -1000,
	200, 192, 149, 369, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 202, -1000, 2731, -1000, -1000, 182, -1000, -1000, 175,
	-1000, -1000, -1000, 3, -1000, -1000, -1000, -1000, -1000, -1000,
	-100, -1000, -1000, 859, 1927, 8140, -1000, 1629, -1000, 1459,
	-1000, -1000, -1000, -1000, 5380, 9790, 9790, 9790, 9790, -1000,
	-1000, 2262, 8140, 2422, 2421, -1000, -1000, -1000, -1000, -1000,
	1215, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2007, 9240, -1000, 2420, 2419, 2415, 2414,
	2412, 2411, 2410, 2404, 2401, 2388, 2387, 2383, 2376, 2375,
	2158, 10909, 2373, 2004, 2002, 2372, 2371, 2361, 2001, 2158,
	2158, 2360, 2359, 2352, 2350, 2349, 2342, 2341, 2336, 2335,
	2334, 2333, 2330, 2329, 2327, 2324, 2323, 2315, 2314, 2313,
	2295, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 985, -1000, 2290, 2639, 2747, 2208,
	2782, 2722, 2718, 2711, 2708, 1834, -1000, -1000, -1000, -143,
	-1000, -1000, 828, -1000, 757, -1000, 35131, 35131, 35131, 838,
	538, 538, 538, 538, 538, 613, 538, 640, 637, 628,
	538, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -145, 1536,
	1532, 2547, 736, -1000, -1000, -1000, -1000, 1090, 35131, -1000,
	2196, 1405, 2743, 490, 486, 480, 1405, 352, -1000, 1529,
	1529, 1529, 1529, 1405, 372, 478, 2747, 2747, -21, 1529,
	-6, 1405, 1405, -6, 1405, 1405, 1405, 133, -309, -1000,
	-1000, -1000, 1529, 1529, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2721, 2716, 541, 35131, 95, 35131, 541, 541, 590,
	-60, 36231, 35681, 1710, 470, 445, 1110, 1516, -1000, 1407,
	35131, 35131, 1407, 1407, 18623, 18073, -1000, 35131, -1000, 2747,
	2208, -1000, 2131, 2548, 2126, 2208, 541, 541, 541, 541,
	541, 146, 541, 541, 541, 35131, 35131, 32381, 541, 7030,
	7030, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10351, 1726, 1766, 138, -78, -318, 186, -1000, -1000, 35131,
	2624, 155, -1000, -1000, -1000, 2162, -1000, 2195, 2195, 2195,
	2195, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2239, 2289, -1000, -1000, 2194, 2194, 2194, 2162, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2228, 2228, 2238, 2238, 2228, 35131, 8140,
	35131, 2651, 323, 2288, -1000, 35131, 296, 2747, 2639, 2747,
	-1000, -1000, 1213, 1828, 1998, -1000, -1000, 331, 1416, -1000,
	850, -1000, -1000, -1000, -1000, 35131, -100, 300, -1000, -1000,
	1979, 2284, -1000, 476, 1093, 1211, -1000, 170, 37437, 27973,
	1710, 27973, 35131, -1000, -1000, -1000, -1000, -1000, -1000, 0,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 173, -1000, 8140, 8140, 8140, 8140, 8140,
	-1000, 513, 8690, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9790, 9790, 9790, 9790, 9790, 9790, 9790, 9790, 9790, 9790,
	9790, 9790, 2261, 1572, 9790, 9790, 9790, 9790, 2548, 2543,
	1091, 217, -1000, -1000, -1000, -1000, -1000, 1404, 1927, 8140,
	8140, 35131, -1000, 3910, 8140, 8140, 3650, 8140, 2700, 8140,
	8140, 8140, 2124, 4279, 35131, 8140, -1000, 2123, 2122, -1000,
	-1000, 1680, 8140, -1000, -1000, 8140, -1000, -1000, 8140, 9790,
	8140, -1000, -1000, -1000, 285, 2700, 2700, 8140, 8140, 2700,
	2700, 2700, 1475, 2700, 2700, 2700, 2700, 2700, 2700, 2700,
	2700, 2113, 2110, 2109, 2747, -262, 6480, -1000, -268, 2639,
	8140, -1000, -1000, 8140, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1997, -65, 784, 760, 764, -1000, 2691, -1000,
	2283, 2278, 1194, 538, -1000, 35131, 1560, 35131, 27973, 35131,
	1710, 35131, 35131, 538, 538, 538, 35131, -1000, 2606, 27973,
	2588, 590, -1000, 35131, 1090, 2687, 35131, 2791, 9790, 9790,
	31831, 1529, 1405, 1405, -1000, -1000, 35131, -1000, -1000, -1000,
	1529, 35131, 1529, 1529, 2791, 1529, -1000, -1000, -1000, 1405,
	1405, -1000, -1000, -1000, -1000, 1529, 1529, -1000, -1000, 2791,
	35131, -2, 2791, 2791, -24, -1000, -1000, -1000, 35131, 35131,
	538, 35131, -1000, 35131, 35131, -1000, -1000, 35131, 3326, 35131,
	31281, 2714, -1000, 27973, 35131, 25773, -1000, 1015, -1000, -51,
	-1000, -74, -60, 1407, -60, 1407, -1000, 474, 473, 16973,
	415, 27973, 4829, -1000, -1000, 1407, 1407, 4829, 4829, 1327,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1078, -1000, 153,
	2639, -1000, -1000, -1000, -1000, -1000, 35131, 35131, 27973, 1710,
	35131, 541, 35131, 35131, 35131, -1000, 2263, -1000, 2663, 35131,
	1187, -1000, -1000, 13670, 1193, 1187, -1000, 1580, -1000, 8140,
	10351, -292, 8140, 10351, 10351, 8140, 10351, -1000, 8140, 152,
	-1000, -1000, -1000, -1000, 1820, -1000, 1819, -1000, -1000, -1000,
	1992, 1992, -1000, 1818, -1000, -1000, -1000, -1000, 1816, -1000,
	-1000, 1815, -1000, -1000, -1000, 2108, 859, -1000, 1991, 2487,
	-263, -1000, 15872, 35131, 35131, -1000, -1000, -263, -1000, 15321,
	35131, 2639, -1000, 2639, 35131, -1000, 2740, -1000, 331, 260,
	-1000, -1000, -1000, -1000, -1000, -1000, 1189, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1069, -1000, 35131, -1000,
	-1000, 170, 27973, 29073, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 189, -1000, -1000, 162, -1000, 607, 112, 1413, -1000,
	-1000, 97, 150, 677, 1927, -1000, 1577, 1577, 1594, -1000,
	518, -1000, -1000, -1000, -1000, 2262, -1000, -1000, -1000, 1481,
	1290, -1000, 1535, 1535, 1315, 1315, 1315, 1315, 1315, 1505,
	1505, -1000, -1000, -1000, 5380, 2261, 9790, 9790, 9790, 9790,
	520, 520, 3114, 2390, -1000, 8140, 1574, -1000, 8140, 1843,
	1088, 1185, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2103, 2101, 2150, 2798, 2099, 8140, -1000, -1000,
	1411, 1410, 1409, -1000, 1967, 7590, -1000, -1000, -1000, 2088,
	1184, 2087, -1000, -1000, -1000, 2085, 1403, 966, 2081, 1265,
	2079, 1064, 8140, 8140, 1400, 1399, 8140, 8140, 8140, 8140,
	2078, 8140, 8140, 8140, 8140, 8140, 8140, 8140, 8140, 32,
	32, 32, -1000, -1000, 1398, -1000, 1927, -1000, 1990, -1000,
	1224, 1060, -1000, 1881, -1000, -1000, -1000, -1000, 781, 747,
	772, 35131, 962, 12020, 35131, 35131, 2196, 2660, 141, -1000,
	969, -1000, 112, -126, 895, 2470, 2797, 35131, 35131, 35131,
	2685, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30731,
	-1000, 2257, 1396, -1000, -1000, 8140, -1000, -1000, 2469, 35131,
	35131, 2791, 2791, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35131, 2791, 2791, 1405, 1529, -1000, -1000, 1529, -1000, -1000,
	1529, -1000, 1183, -1000, 35131, -1000, -1000, -1000, 2196, 1025,
	-1000, 12570, 14770, 464, -1000, 765, 1414, 851, 596, 2580,
	197, -1000, 1414, -212, 1414, 1414, 1414, 1414, 1414, 1414,
	1414, 429, 395, 1414, 1414, 1414, 1414, 1414, 1414, 1414,
	1414, 1414, 1414, 1414, 798, 1414, 1414, 1414, 1414, 1414,
	-1000, 1414, 2251, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	451, 128, 2707, 237, 225, 969, 247, 2623, 986, -1000,
	-1000, -1000, -1000, 20823, 20823, 16423, 20823, -1000, 1421, -60,
	-94, -1000, -1000, 1015, 4829, 1015, 4829, -1000, -1000, 561,
	-1000, -1000, 895, -1000, 35131, 35131, -1000, -1000, 2250, 1531,
	-1000, -1000, 10909, -1000, 4829, 4829, -1000, -1000, 21373, 35131,
	-1000, -103, -1000, -84, 2739, 984, -1000, -1000, 998, 895,
	2486, 35131, 984, -1000, -1000, 12020, 35131, -1000, 2791, 7030,
	-1000, 25773, -1000, -1000, 30173, -1000, 29623, 2791, 1545, -1000,
	10351, 1721, 139, -1000, 181, -321, 137, 1664, 136, 1927,
	-1000, -1000, 2077, 2076, 1389, -1000, 1380, 2069, 1379, 1378,
	-1000, -12, -1000, 2607, 901, -1000, 2248, -1000, 1374, 2544,
	-1000, 978, -1000, 1517, 1336, -1000, 901, 1266, 2541, 978,
	2739, -1000, 1178, 77, -1000, -1000, 35131, 1979, 1263, 29073,
	948, -1000, 535, 1175, 1167, -1000, 27973, 185, 27973, -1000,
	27973, -1000, -1000, 309, -1000, 35131, 2631, -1000, -1000, -1000,
	1929, -345, -1000, -1000, -1000, -1000, -1000, 1260, -1000, 520,
	520, 3114, 1312, -1000, 9790, -1000, 9790, 2527, 1538, -1000,
	8140, 1709, 3616, 1174, 19723, 35131, -1000, -1000, 8140, 8140,
	-1000, 2521, -1000, -1000, -1000, -1000, 8140, 8140, 1783, -1000,
	35131, -1000, -1000, -1000, -1000, 19723, -1000, 9790, -1000, 8140,
	979, 2507, 32, 32, 2480, 2476, 2434, 1259, 32, 2429,
	2402, 2381, 2354, 2343, 2339, 2321, 2293, -1000, 2246, -1000,
	-1000, 6480, -1000, -12, 8140, 8140, 8140, 2568, -1000, -1000,
	-1000, -1000, -1000, 742, 151, 2066, 976, -1000, -1000, 35131,
	-1000, -1000, -1000, 2065, 975, -1000, -1000, -1000, 3774, 2195,
	2195, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2239, -1000, -1000, 2194, 2194, 2194, 2162, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2228, 2228, 2238, 2238,
	2228, -1000, 2196, 2683, -1000, 30, 1414, 467, 27973, 441,
	-1000, 35131, 2485, 384, 2576, 35131, 2224, 2220, 2210, 284,
	3774, 35131, 981, -1000, 1156, 236, -1000, 35131, 1927, -1000,
	1710, -1000, 1405, -1000, -1000, 2791, 1309, -1000, -1000, 2791,
	1405, 1405, 1529, 35131, -1000, 2682, 3326, -1000, 2610, 35131,
	-1000, -1000, 3774, 649, -1000, 752, 538, 35131, 1611, 752,
	1610, 2209, -1000, -1000, -1000, 35131, 35131, -1000, 35131, 1604,
	1603, -1000, 35131, 35131, 35131, 35131, -1000, -1000, 2638, -1000,
	1414, 1414, 710, -1000, -1000, 469, -1000, 1814, 1810, 1807,
	1804, 1976, 1972, 1969, 1414, 1414, 1744, 1966, 28523, 1965,
	907, 1743, 1729, 1714, 1879, 1964, 880, -1000, 1963, 1875,
	1845, 1808, 35131, 2197, 1903, -1000, -1000, 30, 1414, 220,
	35131, 1515, 467, 1654, 17523, 35131, 25773, 25773, 25773, 25773,
	-1000, 2529, 2511, -1000, 2523, 2502, 2550, 35131, 25773, 2196,
	-1000, 28523, -1000, -1000, -1000, 2548, 1258, 2637, 705, 8140,
	-1000, -1000, -59, -81, -1000, -1000, -1000, 27973, 1960, 415,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2812, 35131,
	35131, 563, 2064, -1000, 2787, -1000, 973, -1000, -1000, 1137,
	-1000, 2787, 1552, -323, 10351, 1548, 1494, -1000, 8140, 10351,
	8140, -293, 209, -295, -1000, -1000, -1000, 1959, -1000, -1000,
	-1000, 1713, -1000, 1711, 38, 51, 1602, -263, 6480, 315,
	35131, -263, 35131, 6480, -1000, 35131, 311, -263, -1000, 35131,
	1703, -1000, -1000, -1000, 2796, 27973, 1710, 1358, 27423, -1000,
	174, -1000, 171, 444, 1958, -1000, 618, 94, -1000, 1493,
	1929, -1000, -1000, -1000, 9790, -1000, -1000, -1000, -1000, 1927,
	8140, 2062, -1000, 762, 762, 2061, -1000, 2195, 2195, -1000,
	2162, 2194, 2162, 762, 762, 2060, -1000, 1824, 2285, -1000,
	2255, 2216, 8140, -1000, 2058, 3060, 1101, -151, 32, -1000,
	-1000, -1000, 32, 32, 32, 32, -1000, 32, 32, 32,
	32, 32, 32, 32, 32, 512, -1000, 38, 1927, 1927,
	-1000, -1000, 2627, -1000, 1956, 1952, 962, 3774, 655, 12020,
	2600, 2680, 332, 1790, -1000, -1000, -1000, 26873, 422, -1000,
	-1000, -1000, 533, 165, 1700, 430, -1000, 35131, 247, 35131,
	-1000, -1000, -1000, -1000, -1000, 2576, -1000, 862, 266, 13120,
	13120, 13120, 272, 1492, -1000, 505, 965, 1133, 25773, 35131,
	-1000, 25223, 2056, -1000, 895, 2791, -1000, 35131, -1000, 2791,
	2791, 1405, -1000, 332, -1000, -1000, -1000, 35131, 2610, 3951,
	-1000, 35131, -1000, 35131, -1000, 35131, 35131, 538, 8140, -1000,
	-1000, -1000, 35131, -1000, 270, 560, 560, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19723, 19723, 2703, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1950,
	1935, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35131, 1226, -1000, 1491, 1790, 26873, 1490, 1407, 1933, 422,
	-1000, 1930, -1000, 913, 35131, 35131, -1000, 1109, -1000, 1484,
	2467, 2483, 2467, -1000, -1000, -1000, -1000, 2508, -1000, 2504,
	-1000, -1000, 1109, -1000, -1000, -1000, -1000, -1000, 705, -1000,
	2736, 752, 752, 752, 2050, -1000, -1000, -1000, 948, 2049,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2785,
	2780, 26323, 2785, -1000, -323, 1402, -1000, 1704, 135, 1652,
	35131, -1000, -1000, -1000, 2043, 2026, -274, 62, 2778, 2777,
	2810, -1000, 2025, 945, -263, -1000, -1000, 901, -1000, -1000,
	-1000, -263, -1000, 901, -1000, -1000, 1710, -1000, 164, -1000,
	-1000, -1000, -1000, -1000, -1000, 96, -1000, 35131, -1000, 1929,
	1923, 93, -1000, 1927, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8140,
	-1000, -1000, -1000, 2127, -1000, -1000, 8140, 2024, 1920, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2766, -1000, 2776, -274, -1000, -1000, -1000, -1000,
	-1000, -1000, 3774, -1000, 1092, 332, -203, -1000, 1916, 103,
	-1000, -1000, -1000, 1915, 1914, 1698, -1000, -1000, 1694, 1229,
	121, -1000, -1000, -1000, -1000, -1000, -1000, 1654, 2192, -1000,
	1414, 1414, 1414, 35131, 2023, 938, -1000, -1000, -1000, -1000,
	2020, 2019, 515, 1426, 1422, -1000, 1695, 20823, 25773, 25223,
	1061, -1000, 1128, -1000, -1000, -1000, 2791, -1000, -1000, 2791,
	-1000, -1000, -1000, -1000, 3951, -1000, -1000, 1620, 9790, -1000,
	-1000, 1906, 20273, 622, 1447, 1415, 693, 2191, -1000, 365,
	2807, -1000, -1000, -1000, 709, 1600, 1584, -1000, 35131, -1000,
	2190, -1000, 2188, 2468, 313, 2187, 2181, 35131, 2015, -1000,
	-1000, -1000, -1000, -1000, -1000, 357, -1000, 1294, -1000, 19723,
	-1000, -1000, 1176, -1000, 1903, 1898, -1000, 103, 1897, 4829,
	-1000, -1000, -1000, 35131, 913, 913, 2766, 35131, 6480, -1000,
	-1000, 8140, 2180, -1000, 8140, -1000, -1000, -1000, -1000, -1000,
	2179, 2574, -1000, -1000, -1000, -1000, -1000, -1000, 8140, 8140,
	-1000, -1000, 534, 10351, -297, 207, -1000, -1000, -1000, -281,
	1894, -1000, -1000, 2775, 1893, 1848, 35131, -1000, 901, 901,
	895, -1000, -1000, -24, -1000, -1000, -1000, 2010, -1000, 2005,
	32, -1000, 144, 8140, -281, -192, -1000, -1000, -203, -1000,
	305, -1000, -1000, 303, -1000, -1000, 242, -1000, -1000, 1682,
	475, -1000, -1000, 24123, 19723, 20273, 1892, -1000, 37280, 13120,
	173, 37280, 816, 1420, -1000, 1689, -1000, 1684, -1000, 2791,
	1061, 1128, -1000, -1000, 1339, -1000, -1000, -1000, -1000, 3114,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1888, 1887,
	-1000, -1000, -1000, -1000, -1000, 1674, 2178, -116, 2699, -1000,
	-1000, 2167, 24123, 24123, 358, 358, 24123, 24123, 2164, 560,
	-1000, 1414, 1273, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2747, -1000, -1000, 1927, 35131, 1927, 24673, -1000, 2773, 2771,
	1927, 859, -1000, -323, 35131, 35131, -283, 1671, -1000, 1884,
	54, -1000, -1000, 867, -285, 35, 67, -1000, -1000, -1000,
	2018, -1000, 459, -1000, -1000, -1000, 859, -283, 35131, -1000,
	362, -1000, -1000, 443, 1871, -1000, -1000, 241, -1000, -1000,
	1172, -1000, 2162, 8140, -1000, -1000, -1000, 501, 37118, -1000,
	851, -1000, -1000, -24, 501, 425, 223, -1000, 1668, -1000,
	-1000, 2766, -1000, -1000, -1000, 1984, 8140, 2158, 1414, -188,
	24123, 1150, 1149, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1135, 1118, 24123, -1000, -1000, 19723, 1414, -1000, 1102, 1100,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2149, -1000, -1000,
	2770, -1000, 1860, 559, 71, 67, -1000, 2763, 52, 2762,
	2761, -1000, -1000, 514, -265, 25, 24, 19, -1000, -1000,
	-1000, 8140, -1000, 2678, -1000, 156, -1000, 92, -1000, -1000,
	-1000, 24123, 2646, 1817, 320, 2760, 37280, -1000, 1414, -1000,
	320, -1000, 280, -1000, 1408, -1000, 1653, -1000, 2747, -1000,
	1788, -1000, 35131, 2475, -1000, 129, 1096, 2442, 2436, 2356,
	2287, 1087, -1000, 19723, -1000, -1000, 23573, 35131, 1848, -1000,
	2148, 1644, 62, 42, 2758, -1000, 1848, 2756, 1848, 1848,
	1590, -1000, 17, 13, 11, -1000, -1000, -1000, -1000, 1854,
	-1000, -1000, 211, -1000, -1000, 2646, -1000, 2755, 348, -1000,
	19723, -1000, -1000, -1000, 1640, -1000, -1000, 560, -1000, -1000,
	2405, 2296, 2795, -1000, -1000, -1000, -1000, 211, 358, 211,
	358, 211, 358, 211, 358, 179, -1000, -1000, -1000, 1077,
	-1000, -1000, 2696, 19173, 44, -1000, -1000, -1000, 1853, -1000,
	1848, -1000, -1000, 514, -1000, -1000, -1000, -1000, -1000, 1414,
	1846, 261, -1000, -1000, -1000, 23023, 327, 351, 349, -1000,
	519, -1000, -1000, -1000, -1000, -1000, 2804, -1000, 2802, 702,
	702, -1000, -1000, -1000, -1000, -1000, -1000, 35131, -1000, 35131,
	-1000, 1071, -1000, -1000, -1000, 1127, -1000, -1000, -1000, -1000,
	-1000, 1639, -1000, 35131, -1000, 35131, 338, 1637, 9790, 2145,
	9790, 2144, 345, 2143, -1000, -1000, -1000, 1686, 400, -1000,
	211, 211, 211, 211, -1000, 836, -1000, 1401, -1000, 22473,
	35131, -1000, -1000, 1065, 2136, 2749, -1000, 2338, 35131, 2215,
	35131, 2135, 1385, 9790, -1000, -1000, -1000, 35131, 5930, -1000,
	1117, -1000, -1000, 500, 342, -1000, 992, -1000, 990, 21923,
	1632, 1441, -1000, -1000, 1927, 35131, 971, -1000, 35131, 316,
	-1000, -1000, -1000, 960, -1000, -1000, -1000, -1000, 500, 2540,
	-1000, 1630, -1000, -1000, 3258, 632, -1000, -1000, 3258, 328,
	-1000, 448, 1973, -1000, -1000, 953, -1000, 35131, 678, 8140,
	-1000, 328, 37280, -1000, 8140, 924, -1000, 37280, 918, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 148, 2827, 226, 146, 3291, 64, 225, 207, 204,
	223, 3290, 3289, 2668, 2666, 3288, 3287, 3286, 3284, 3282,
	3281, 3280, 3279, 3278, 3277, 3275, 3274, 3273, 3272, 3271,
	3270, 3269, 3268, 3267, 3266, 3265, 3263, 3262, 3261, 221,
	3259, 3258, 3244, 3243, 3242, 3241, 3239, 3236, 3235, 3233,
	3232, 3231, 3226, 3225, 3223, 3222, 3221, 3220, 3219, 3217,
	3216, 3214, 3213, 3212, 3211, 3208, 3207, 3206, 3205, 3204,
	200, 3191, 2647, 3189, 3188, 3187, 3185, 3184, 3183, 3182,
	220, 3181, 3180, 3178, 3177, 3175, 3171, 3170, 3168, 3167,
	3166, 3165, 218, 3164, 3160, 3158, 3157, 3156, 3155, 215,
	3154, 142, 173, 3152, 3148, 3144, 3143, 3140, 213, 231,
	55, 3139, 43, 3136, 194, 3135, 118, 3134, 120, 3133,
	3130, 3129, 3128, 3126, 3125, 3121, 3119, 3116, 3115, 3114,
	3113, 75, 3112, 235, 3111, 59, 3107, 3105, 101, 134,
	172, 227, 2013, 234, 232, 160, 144, 80, 3102, 2679,
	3099, 130, 205, 125, 25, 3098, 153, 3096, 121, 34,
	36, 229, 113, 47, 131, 99, 3094, 193, 87, 86,
	3093, 3092, 157, 243, 163, 3088, 100, 3087, 3086, 3085,
	3083, 177, 164, 3080, 3077, 109, 3076, 3075, 95, 3074,
	54, 169, 137, 168, 3073, 1739, 94, 91, 138, 3072,
	3069, 103, 3068, 3067, 3066, 3065, 152, 3064, 3063, 106,
	71, 3061, 3059, 3058, 53, 3057, 38, 3055, 62, 3054,
	3053, 3052, 3051, 3050, 3049, 3048, 3047, 3045, 3038, 3037,
	60, 3035, 3034, 15, 21, 24, 3033, 23, 3032, 140,
	3031, 3030, 3029, 97, 3027, 2, 3024, 199, 115, 82,
	127, 3023, 428, 3022, 3021, 3020, 132, 3019, 354, 3018,
	3016, 3015, 3012, 3009, 72, 3008, 195, 44, 3007, 79,
	104, 41, 184, 171, 3005, 3004, 3003, 285, 74, 27,
	0, 3002, 124, 3001, 3000, 2998, 242, 2994, 208, 209,
	136, 192, 236, 196, 2992, 2990, 73, 2988, 133, 76,
	46, 112, 11, 16, 198, 2987, 518, 154, 2982, 185,
	2981, 162, 1, 123, 2980, 2979, 35, 270, 2977, 2976,
	2975, 96, 2974, 2973, 149, 88, 2972, 2970, 2969, 37,
	2968, 33, 18, 2967, 105, 2966, 222, 2964, 183, 107,
	156, 150, 129, 197, 206, 65, 63, 2963, 1668, 119,
	81, 28, 2962, 203, 2961, 175, 116, 2960, 77, 2959,
	219, 347, 182, 2957, 155, 10, 40, 30, 2956, 8,
	2955, 224, 180, 2948, 2946, 19, 45, 2945, 17, 2944,
	2943, 2940, 2938, 5, 2937, 2934, 2933, 4, 7, 2932,
	3, 202, 2931, 2930, 2925, 2924, 42, 135, 2923, 122,
	159, 161, 2922, 78, 2920, 2919, 2916, 267, 2913, 228,
	2912, 2910, 2909, 2907, 2906, 2905, 2904, 2902, 2900, 111,
	52, 2899, 2898, 2897, 2896, 66, 117, 2895, 2894, 2893,
	2892, 32, 145, 2891, 20, 2885, 31, 29, 26, 2884,
	102, 2883, 12, 158, 2879, 2878, 14, 2877, 2876, 9,
	13, 2873, 2872, 93, 2871, 70, 22, 139, 85, 2869,
	2868, 67, 186, 114, 2867, 2866, 216, 211, 181, 2865,
	84, 217, 230, 2864, 190, 2862, 2861, 2860, 2859, 2857,
	2856, 1374, 2855, 2854, 210, 49, 68, 90, 2852, 2851,
	2850, 69, 126, 92, 89, 170, 2849, 167, 2848, 2844,
	83, 2843, 2841, 2840, 2839, 2838, 165, 2837, 2834, 166,
	201, 2832, 2831, 2830, 2829, 212, 141, 2810,
}

//line mysql_sql.y:9936
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 505, 513, 513, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 106, 503, 503, 503, 504, 504, 103, 123,
	122, 125, 125, 124, 124, 121, 121, 117, 120, 120,
	119, 119, 118, 113, 115, 115, 114, 116, 116, 104,
	92, 105, 452, 452, 451, 451, 450, 450, 404, 404,
	449, 449, 449, 448, 448, 448, 447, 447, 446, 446,
	445, 445, 443, 443, 444, 442, 441, 441, 441, 439,
	439, 439, 435, 435, 437, 436, 436, 438, 430, 430,
	433, 433, 431, 431, 431, 431, 434, 429, 429, 429,
	428, 428, 91, 91, 91, 350, 350, 90, 90, 364,
	364, 364, 364, 364, 362, 362, 362, 362, 362, 362,
	361, 361, 360, 360, 365, 365, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 81, 81, 81, 81,
	81, 86, 86, 86, 510, 510, 509, 509, 511, 511,
	511, 511, 512, 512, 84, 84, 84, 85, 359, 359,
	359, 82, 83, 83, 349, 349, 354, 354, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 358, 358, 358, 356, 356, 355, 355, 357, 357,
	75, 75, 75, 78, 77, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 76, 76, 76, 76, 76, 76,
	71, 71, 71, 71, 71, 70, 70, 72, 72, 346,
	346, 345, 87, 87, 88, 507, 507, 506, 508, 508,
	508, 508, 89, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 97, 97, 96, 98, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 477, 477, 477, 479, 479, 284, 285, 514, 287,
	283, 283, 283, 473, 473, 474, 475, 476, 476, 476,
	93, 11, 11, 11, 11, 11, 11, 69, 74, 238,
	238, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 226, 226, 226,
	221, 221, 221, 221, 222, 222, 223, 223, 224, 224,
	224, 224, 225, 225, 243, 243, 243, 242, 240, 240,
	240, 240, 240, 240, 241, 241, 241, 244, 244, 67,
	73, 73, 73, 490, 490, 68, 497, 497, 407, 407,
	298, 298, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 412, 413,
	294, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 46,
	45, 45, 45, 335, 335, 44, 515, 515, 273, 273,
	56, 55, 48, 57, 58, 59, 60, 61, 62, 43,
	54, 54, 54, 54, 54, 54, 54, 54, 65, 65,
	424, 424, 517, 517, 517, 63, 64, 406, 406, 406,
	53, 52, 51, 50, 49, 49, 42, 42, 41, 41,
	47, 129, 130, 291, 291, 291, 293, 293, 289, 516,
	516, 378, 378, 292, 292, 40, 40, 40, 40, 66,
	290, 290, 272, 288, 288, 288, 12, 12, 10, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 23, 24, 26, 343, 343, 340, 25, 18, 17,
	20, 16, 16, 19, 21, 22, 22, 9, 9, 9,
	9, 13, 13, 14, 146, 146, 196, 196, 485, 485,
	481, 481, 482, 482, 482, 483, 483, 484, 484, 99,
	418, 418, 418, 418, 418, 418, 8, 168, 168, 417,
	417, 417, 417, 417, 417, 347, 347, 462, 462, 462,
	463, 167, 167, 162, 162, 419, 419, 313, 464, 464,
	427, 427, 426, 426, 425, 425, 165, 165, 166, 166,
	149, 149, 109, 109, 432, 432, 432, 432, 440, 440,
	403, 403, 230, 230, 267, 267, 268, 268, 139, 139,
	140, 140, 140, 140, 140, 140, 470, 470, 472, 472,
	471, 164, 164, 160, 160, 161, 161, 161, 159, 159,
	158, 157, 157, 156, 154, 154, 154, 155, 155, 155,
	172, 172, 142, 142, 142, 141, 141, 141, 141, 141,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 143, 143, 478, 478, 478, 408, 408, 408,
	415, 415, 249, 249, 250, 250, 248, 248, 144, 144,
	145, 145, 145, 145, 247, 247, 246, 147, 147, 153,
	152, 152, 148, 148, 148, 148, 257, 257, 256, 256,
	256, 256, 102, 107, 107, 108, 171, 171, 255, 254,
	254, 254, 170, 170, 169, 169, 163, 163, 151, 151,
	151, 151, 253, 150, 251, 502, 502, 501, 501, 500,
	498, 498, 498, 499, 499, 499, 499, 454, 454, 454,
	454, 454, 278, 278, 278, 282, 282, 281, 281, 281,
	281, 281, 286, 7, 7, 7, 7, 7, 30, 30,
	30, 30, 30, 30, 30, 30, 36, 180, 181, 37,
	182, 182, 183, 183, 184, 184, 185, 186, 187, 187,
	187, 187, 35, 173, 173, 174, 174, 175, 175, 176,
	177, 177, 177, 179, 178, 34, 34, 27, 132, 132,
	133, 133, 133, 133, 135, 135, 227, 227, 227, 134,
	134, 136, 136, 136, 486, 489, 487, 487, 491, 491,
	491, 492, 492, 492, 492, 493, 493, 28, 126, 131,
	131, 128, 138, 138, 138, 138, 138, 127, 488, 494,
	494, 494, 344, 344, 341, 342, 342, 339, 338, 338,
	338, 496, 496, 495, 495, 495, 279, 279, 29, 334,
	334, 336, 337, 337, 337, 328, 328, 328, 328, 33,
	332, 332, 333, 333, 333, 333, 333, 329, 329, 331,
	331, 327, 327, 327, 327, 327, 32, 137, 137, 326,
	326, 324, 324, 322, 322, 323, 323, 321, 321, 321,
	325, 325, 31, 31, 31, 111, 110, 110, 110, 270,
	270, 269, 269, 112, 38, 208, 208, 392, 392, 392,
	392, 392, 410, 410, 410, 393, 393, 393, 394, 394,
	394, 395, 395, 395, 395, 395, 409, 409, 411, 411,
	411, 366, 366, 367, 367, 367, 370, 370, 384, 384,
	385, 385, 383, 383, 390, 390, 389, 389, 388, 388,
	387, 387, 386, 386, 386, 386, 381, 381, 380, 380,
	368, 368, 368, 368, 368, 369, 369, 369, 379, 379,
	382, 382, 214, 214, 215, 215, 215, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 460, 460, 461, 217, 217, 228, 228, 228,
	228, 228, 228, 216, 216, 218, 218, 197, 197, 195,
	195, 188, 188, 189, 189, 190, 190, 190, 194, 194,
	193, 193, 193, 193, 191, 191, 192, 192, 192, 192,
	192, 192, 352, 352, 457, 457, 458, 458, 453, 453,
	453, 456, 456, 456, 456, 456, 459, 459, 459, 455,
	455, 198, 265, 265, 265, 280, 280, 280, 280, 264,
	264, 264, 213, 213, 212, 212, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 351, 351, 295, 295,
	296, 296, 237, 236, 236, 236, 236, 236, 234, 235,
	233, 233, 233, 233, 233, 232, 232, 231, 231, 231,
	330, 330, 229, 229, 220, 220, 220, 219, 219, 219,
	391, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 263, 263, 263, 305, 305,
	310, 310, 469, 469, 468, 199, 199, 199, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 209, 209, 209,
	375, 375, 375, 375, 376, 376, 376, 376, 377, 377,
	377, 373, 373, 374, 374, 314, 315, 315, 416, 416,
	371, 371, 372, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	423, 423, 423, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 480,
	480, 480, 465, 465, 465, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 261, 261, 261, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 316, 316, 317, 317, 420, 420, 420, 420,
	420, 420, 421, 421, 422, 422, 422, 422, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 303, 258, 258,
	258, 318, 311, 311, 312, 312, 306, 306, 306, 306,
	306, 306, 306, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 307, 307, 309, 309, 320,
	320, 320, 319, 319, 319, 319, 319, 319, 319, 211,
	211, 211, 211, 300, 300, 300, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 201, 201, 201,
	201, 205, 205, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 206, 206, 206,
	206, 206, 204, 204, 204, 204, 204, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 100, 101, 101, 203, 266, 266, 396,
	396, 399, 399, 397, 397, 398, 400, 400, 400, 401,
	401, 401, 402, 402, 402, 405, 405, 271, 271, 271,
	277, 277, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 7, 4, 1,
	3, 2, 2, 2, 1, 3, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 2, 1, 2, 2,
	1, 2, 3, 2, 3, 3, 3, 1, 1, 7,
	7, 8, 8, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 1, 3, 1, 4, 6, 6,
	4, 4, 4, 3, 6, 3, 5, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 5, 1, 3, 2,
	1, 5, 4, 4, 2, 0, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 1, 3, 4, 0, 1,
	0, 1, 1, 3, 1, 1, 0, 4, 1, 3,
	2, 1, 0, 8, 0, 4, 7, 4, 0, 2,
	0, 2, 0, 2, 0, 4, 1, 3, 1, 1,
	5, 3, 4, 6, 4, 5, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	0, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 7,
	1, 3, 0, 1, 1, 3, 1, 3, 0, 1,
	1, 1, 12, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 9, 8, 7, 1, 2,
	2, 3, 3, 3, 0, 4, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 1, 0, 2, 7, 8, 0,
	2, 6, 0, 2, 2, 3, 3, 4, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 6, 0, 4, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 11, 9, 11, 2, 2, 4, 5, 1,
	3, 0, 3, 5, 10, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 3, 2, 4, 3, 0, 1, 0, 1,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 4, 1, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	7, 9, 7, 9, 2, 1, 7, 9, 7, 9,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 3, 3, 2, 2, 1, 5,
	6, 4, 1, 1, 1, 5, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 4, 4, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 1, 6, 8, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 2, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -505, -513, -2, -5, 578, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -139, -106, 571, -76,
	-77, -78, -30, -29, -28, -27, -126, 577, 430, 12,
	479, -13, -14, -470, -15, 251, -283, -284, -285, -287,
	-514, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -129, -130, -66, -68,
	-67, -73, -69, -74, -128, 226, -72, 75, -82, -83,
	-84, -85, -86, -88, -89, 356, 362, 419, 570, 60,
	-140, -142, 581, 154, 155, 157, 158, -31, -32, -33,
	-34, -35, -36, -38, -37, 222, 14, 512, -16, -19,
	-17, -20, -18, -25, -26, -24, -21, -23, -127, -22,
	246, 245, 37, 312, 313, 314, 360, 244, 223, 13,
	30, 41, 338, -141, 81, 224, -143, 10, 583, -6,
	-3, -2, -113, -117, -121, -124, -125, -122, -123, -4,
	-101, 112, 236, 572, -280, 352, 573, 575, 574, 84,
	92, -274, -276, 356, 362, 570, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 482, 557, 558, 559, 560, 336, 337, 509,
	263, 287, 387, 293, 300, 154, 173, 167, 195, 187,
	162, 267, 305, 268, 91, 157, 465, 102, 442, 416,
	160, 282, 284, 286, 289, 288, 290, 292, 269, 339,
	183, 178, 281, 265, 176, 270, 39, 271, 200, 272,
	273, 514, 438, 335, 444, 297, 414, 177, 439, 285,
	441, 202, 206, 456, 457, 171, 172, 446, 459, 199,
	243, 42, 511, 255, 460, 204, 198, 194, 468, 301,
	299, 197, 170, 193, 266, 64, 208, 207, 209, 410,
	411, 412, 413, 274, 275, 350, 455, 190, 179, 340,
	163, 22, 463, 250, 443, 363, 276, 294, 302, 203,
	205, 257, 262, 513, 418, 261, 298, 461, 175, 254,
	283, 249, 464, 164, 365, 277, 158, 291, 458, 467,
	63, 378, 169, 161, 240, 155, 259, 264, 11, 278,
	279, 280, 304, 303, 295, 191, 256, 196, 181, 168,
	192, 156, 258, 466, 379, 568, 338, 397, 189, 186,
	260, 233, 462, 445, 159, 401, 380, 184, 306, 564,
	565, 566, 351, 334, 307, 308, 182, 247, 436, 437,
	309, 311, 407, 327, 381, 417, 388, 382, 215, 315,
	448, 450, 201, 567, 316, 317, 318, 440, 319, 320,
	321, 322, 355, 55, 57, -357, -355, -280, 570, 362,
	356, 338, -182, -280, 582, -149, 38, -195, -280, -149,
	-72, -14, -13, -141, -142, -195, 230, -288, 23, 414,
	-80, 415, 226, 81, -280, -9, -92, -8, -99, -70,
	-139, 419, -286, -280, 312, 312, -286, 230, -280, 261,
	395, -407, 236, -361, -334, 262, -360, -336, -363, -337,
	31, 222, 224, 223, 258, 14, 360, 232, 12, 10,
	361, 244, 24, 25, 27, 13, 362, 364, 28, 365,
	368, 369, 370, 41, 373, 374, 251, 84, 92, 87,
	269, -181, -280, -312, -306, 109, 252, -308, -301, -302,
	-304, -449, -443, -299, 81, 136, 137, 144, 110, -303,
	-391, 35, 112, 521, 480, -259, -260, -261, -262, -263,
	-280, -444, -442, 87, 93, 96, 99, 100, 98, 97,
	180, 95, 88, 148, 149, -142, 84, -465, 529, -275,
	550, 557, 558, 559, 560, 549, 60, -414, -422, 229,
	-420, 147, 185, 247, 181, 12, 142, 407, 182, 526,
	546, 482, 530, 553, 523, 524, 518, 519, 520, 522,
	531, 533, 545, -423, 541, 551, 552, 539, 554, 555,
	556, 86, 85, 544, 543, 532, 527, 528, 534, 517,
	525, 535, 536, 542, 547, 548, 344, 102, 345, 346,
	472, 339, 347, 236, 414, 69, 348, 349, 350, 351,
	352, 479, 353, 70, 354, 343, 251, 397, 355, 184,
	201, 484, 483, 485, 476, 473, 471, 474, 475, 477,
	478, 537, 538, 540, -107, -108, 562, -158, -159, -252,
	19, 6, 7, 8, 9, -503, 416, 513, 159, 156,
	-348, 159, 108, 164, 163, -348, 315, 257, 357, -132,
	233, 336, 397, 319, 261, -328, -326, -409, 309, 305,
	231, -133, 241, 240, 103, 472, 229, 371, 105, 300,
	55, 57, -481, -482, 219, 220, 221, -472, 505, -471,
	-280, 346, 26, 230, 357, 257, 450, 448, 449, 451,
	452, 453, 454, -54, -424, -406, 445, 444, -292, 437,
	443, 435, 447, 438, 337, 321, 320, 222, 579, 506,
	-271, 381, 417, 469, 470, 358, 418, 456, 458, 439,
	102, 188, 185, 233, 230, 336, 472, 397, 319, -481,
	156, 456, 458, 261, 395, 40, -354, 407, -353, -355,
	457, 468, 85, 86, 455, -271, 102, 436, 436, -159,
	-252, -158, -140, -142, -102, -470, 231, 336, 397, 261,
	232, 230, 233, 472, 229, 312, 357, 257, 319, -408,
	-478, 31, -415, 216, 217, 218, 32, 33, -1, 116,
	583, -306, -306, -6, 584, -6, -306, -280, -280, 151,
	-201, -205, -202, -204, -203, -207, -206, 185, 186, 147,
	189, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 30, 201, 247, 181, 182, 183, 184, 202, 167,
	187, 510, 210, 168, 211, 169, 212, 170, 213, 171,
	172, 214, 173, 176, 177, 178, 179, 175, 150, 81,
	150, 87, -165, 253, -195, 150, -165, -159, -158, -159,
	-195, -264, -280, 416, 119, -80, -80, 415, -473, -474,
	-475, -477, 226, 415, 414, 150, 269, 15, -286, -286,
	79, -195, -336, 261, -361, -334, 35, 78, 151, 234,
	151, 78, 81, 358, 336, 397, 359, 472, 230, 371,
	233, 261, 372, 336, 397, 230, 233, 472, 261, 336,
	230, 233, 397, 261, 372, 435, 436, 233, 26, 363,
	366, 367, 436, -428, 468, 151, 108, 105, 106, 107,
	-306, 126, -319, 119, 120, 121, 122, 123, 124, 125,
	133, 132, 143, 136, 137, 138, 139, 140, 141, 142,
	134, 135, 129, 109, 127, 131, 128, 111, -142, -306,
	-312, 60, -304, -304, -304, -304, -391, -310, -306, 81,
	81, 150, 87, -306, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, -421, 81, 81, -316,
	-317, 81, 81, -299, -264, 81, 87, 87, 81, 81,
	81, 87, -317, -317, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, -159, 151, 81, -109, 38, -161,
	21, -143, -142, 20, 31, 32, 31, 32, 31, 32,
	31, 32, 93, 461, 512, 162, 163, 164, -180, -280,
	-182, -173, -280, 233, -133, -324, 236, -324, -324, -324,
	-324, 232, -324, 230, 230, 230, -324, 479, 119, 119,
	58, -483, 166, 151, -472, -164, 81, -291, 127, 131,
	23, 259, 259, 259, -291, 299, -515, -516, 15, 129,
	-289, -516, -289, -289, -291, -517, 232, 446, 42, 260,
	259, -160, -161, -160, 440, 436, -378, 441, 442, -293,
	-516, -292, -291, -291, -292, -291, -291, -291, 230, 233,
	472, 319, 580, -515, -515, 30, 30, -407, -195, -407,
	506, -272, -280, -407, -407, -484, 235, -510, -509, 459,
	-512, 461, 156, -355, 156, -355, -336, 261, 261, 151,
	119, 23, -356, 119, 130, -355, -355, -356, -356, -216,
	40, -279, 147, -280, 87, -216, 40, -507, -506, -195,
	-160, -143, -142, 82, 82, 82, -407, -407, -407, -407,
	-407, -409, -407, -407, -407, -286, -173, -182, 236, -407,
	-144, -145, 138, -306, -280, -144, -3, -115, -114, 113,
	114, 116, 573, 352, 572, 576, 570, -355, 40, -402,
	379, 378, -396, -398, 81, -397, 81, -397, -397, -397,
	81, 81, -399, 81, -399, -399, -396, -400, 81, -400,
	-401, 81, -401, -400, -280, -311, -312, -280, 38, -417,
	60, -139, 81, 30, 81, -280, -418, 60, -139, 81,
	30, -160, -109, -161, 150, 93, 87, -80, 82, 151,
	-476, 99, 100, -479, 199, 191, -280, -95, 87, -7,
	-8, -9, -10, -39, -70, -139, -445, -443, 81, 31,
	406, 78, 15, -362, 230, 472, 357, 257, 233, 336,
	-360, -343, -340, -338, -279, -336, -339, -338, -365, -264,
	436, -110, 420, 311, -306, -306, -306, -306, -306, 98,
	109, 334, 99, 100, -301, -320, 31, 307, 308, -302,
	-302, -302, -302, -302, -302, -302, -302, -302, -302, -302,
	-302, -309, -318, -391, 81, 129, 127, 131, 128, 111,
	-304, -304, -302, -302, 82, 151, -469, -468, 113, -306,
	-306, -280, -466, -467, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 348, 343, 349, 347, 339,
	355, 350, 351, 184, 503, 504, 497, 498, 499, 500,
	501, 502, -311, -311, -306, -466, -311, -258, 32, 31,
	-312, -312, -312, 82, -306, -480, 332, 331, 333, -162,
	-280, -311, 82, 82, 82, 93, -312, -312, -311, -302,
	-311, -467, -258, -258, -312, -312, -258, -258, -258, -258,
	138, -258, -258, -258, -258, -258, -258, -258, -258, 82,
	82, 82, -160, -108, -426, -425, -306, 40, 563, -109,
	-306, -157, -156, -306, -504, 87, 462, 463, 160, 163,
	162, 34, 81, 81, 150, -324, -195, 109, -486, -280,
	-344, -341, -338, -280, -334, -280, -280, -324, -324, -324,
	-195, -227, 52, 53, 54, -338, -134, 55, 56, -484,
	-471, 34, -163, -280, -248, 16, -304, -304, -338, 261,
	-515, -291, -291, -273, -272, -293, -288, -293, -293, -248,
	-516, -291, -291, -293, -289, -248, -280, 436, -248, -248,
	-378, -290, -280, -290, -324, -272, -273, -273, -195, -238,
	-239, 227, 224, 223, -245, 225, 300, -325, 480, -222,
	-223, 76, 41, -225, 383, 376, 263, 267, 91, 268,
	416, 269, 232, 271, 272, 273, 288, 290, 243, 274,
	275, 276, 407, 277, 155, 289, 278, 279, 280, 359,
	-217, 6, 322, 40, 50, 51, 429, 428, 515, 512,
	264, -486, -486, 30, 30, -344, -280, -152, -147, -151,
	-148, -153, -251, -253, -150, 81, -195, -142, -280, 151,
	460, 462, 463, -510, -356, -510, -356, 31, 406, -359,
	406, 31, -334, -353, 456, 458, -349, 87, 407, -339,
	-358, 78, 147, -425, -356, -356, -358, -358, 146, 151,
	-508, 461, 462, 219, -109, -197, -195, -486, -343, -334,
	-280, -407, -197, -280, -280, 81, 35, -280, -247, 151,
	-246, 15, -281, -280, 34, 87, 150, -247, -116, -114,
	115, -306, -6, 572, -306, -6, -6, -306, -6, -306,
	-405, 380, 93, 93, -266, 87, -266, 93, 93, 93,
	82, 87, -347, 78, -419, -313, -464, 562, -167, 82,
	-162, -462, -463, -162, -166, -280, -419, -167, 82, -462,
	-109, -109, -280, 23, -80, -474, 150, 151, -163, -362,
	-342, -339, -364, 138, -280, -350, 151, 512, 585, 85,
	234, -496, -495, 398, 82, 151, -429, 235, 479, 87,
	586, 215, 98, 334, 99, 100, -391, -312, -309, -304,
	-304, -302, -302, -307, 248, -307, 108, -306, -305, -468,
	115, -306, 34, 151, 79, 150, 82, 82, 15, 15,
	82, -306, 82, 82, 82, 82, 15, 15, -306, 82,
	150, 82, 82, 82, 82, 79, 82, 151, 82, 151,
	-312, -306, 82, 82, -306, -306, -306, -312, 82, -306,
	-306, -306, -306, -306, -306, -306, -306, -372, 431, -372,
	-372, 151, 82, 87, 151, 22, 151, -154, 36, 37,
	161, 164, 164, 163, -181, -183, -184, -185, -186, -187,
	129, 152, 153, -174, -175, -176, -177, -201, -264, 186,
	189, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 247, 181, 182, 183, 184, 202, 167, 187,
	168, 169, 170, 171, 172, 173, 176, 177, 178, 179,
	175, -280, -195, -164, 35, -489, 384, -497, 151, 40,
	-495, 472, -327, 79, -137, 15, -195, -195, -195, -208,
	34, 15, -146, -196, -280, 81, 82, 151, -306, -335,
	79, -280, -273, -248, -248, -195, -280, -248, -248, -291,
	-293, -293, -289, 150, -272, -164, 151, -194, -198, 238,
	-191, -193, -264, -296, -192, 241, -458, 239, 237, 103,
	242, 296, 104, 232, -240, 232, 104, -280, 238, 242,
	237, -241, 232, 296, 239, -226, 234, 34, -277, 119,
	-271, 146, 234, 42, 359, -277, 516, -277, -277, -277,
	-277, -277, -277, -277, 270, 270, -277, -277, -277, -277,
	-277, -277, -277, -277, -277, -277, -277, 156, -277, -277,
	-277, -277, -277, -277, 81, 265, 266, -490, 384, 30,
	342, 342, -497, -138, 336, 30, -254, -255, -256, -257,
	67, 71, 73, 68, 69, 70, 74, 30, 151, -278,
	-282, 34, -280, 87, -278, -142, -147, -152, -278, 81,
	-509, -511, 464, 461, 467, -358, -358, 234, 81, 119,
	-358, -358, 40, -279, -506, 468, 462, -172, 23, 151,
	78, -197, -174, -182, -248, -145, -147, -280, 87, -280,
	138, -248, 116, -6, 114, -120, -119, -118, 117, 570,
	576, 116, 116, 116, 82, 82, 82, 151, 82, 82,
	82, 151, 82, 151, -432, 441, 39, 151, 81, 82,
	151, 60, 151, 119, 82, 151, 82, 60, -172, 150,
	416, -280, -443, 82, -364, 151, 234, 150, 150, -340,
	362, -279, -342, 20, 512, -264, 38, -270, -269, 87,
	586, 82, -307, -307, 108, -304, -301, 82, 116, -306,
	114, -199, -201, 378, 379, -200, -206, 147, 185, 247,
	184, 183, 181, 378, 379, -216, -280, -306, -306, 82,
	-306, -306, 15, -280, -216, -302, -306, -159, 82, -371,
	-372, -371, 82, 82, 82, 82, -371, 82, 82, 82,
	82, 82, 82, 82, 82, 81, -425, -432, -306, -306,
	-156, -155, 43, 164, 370, 82, 151, -264, 82, 151,
	-201, -164, 34, -492, 443, 386, 396, -277, -298, -297,
	338, 41, -412, 407, 392, 393, -341, 261, -280, 78,
	326, 327, 328, 329, -322, -323, -321, -325, -486, 81,
	81, 81, -392, 316, -201, -195, -146, -280, 15, 151,
	-485, 150, -1, -280, -334, -291, -248, -516, -248, -291,
	-291, -293, -280, 34, -239, -243, 44, 46, -198, -201,
	-192, -457, -458, -324, -280, 104, -457, 104, 81, -280,
	-280, -280, 104, 104, -280, -280, -280, -242, -290, -221,
	40, 47, 48, 49, -277, -277, 188, -224, 40, 406,
	408, 409, 93, 93, 93, 93, 87, 87, 87, -277,
	-277, 93, 87, -282, 87, -459, 163, 44, 45, 93,
	93, 93, 93, 40, 87, -228, 40, 281, 285, 282,
	283, 284, 87, 93, 40, 93, 40, 93, 40, -280,
	81, -460, -461, 87, -492, -277, 342, -355, 119, -298,
	-131, 91, 31, -168, 227, 224, -486, -346, -345, -264,
	-151, -151, -151, -151, 67, 67, 67, 72, 67, 72,
	67, -256, -346, -153, -164, -282, 82, -502, -501, -500,
	-498, 75, 235, 76, -311, 461, 465, 466, -342, -294,
	87, -349, 13, -195, -195, -411, 291, 292, 82, -250,
	17, 150, -250, 112, -6, -116, -118, -306, -6, -306,
	572, 352, 573, 87, 93, 93, -440, 426, 421, 423,
	104, -313, -427, -426, 60, -139, -162, -419, -463, -425,
	-280, 60, -139, -419, -280, 93, 15, -339, -334, 138,
	138, -280, 363, -350, 87, 385, 87, 230, 587, 151,
	119, -270, -301, -306, 82, -209, 172, 171, -209, 82,
	-397, -397, -396, -399, -396, -209, -209, 82, 82, 23,
	82, 82, 82, -306, 82, 82, 151, -416, 481, -371,
	-371, -371, -371, -371, -371, -371, -371, -371, -371, -371,
	-371, -371, -315, -314, 253, -440, 44, 45, 87, 87,
	-185, -201, 228, -176, 40, 34, -139, -493, 91, -487,
	87, -280, -494, 91, 387, 149, 340, 40, 388, 389,
	404, 335, 93, 93, 394, -488, -280, -138, -195, -321,
	-271, 146, 272, 319, -188, -189, -190, -198, -191, -193,
	-188, -188, -393, 318, 20, 93, 137, -165, 79, 150,
	-147, -196, -280, 138, 82, -248, -280, -248, -248, -291,
	-139, -264, -243, -213, -212, -210, 98, 109, 40, 376,
	-211, 91, 146, 286, 289, 288, 264, 287, -237, -295,
	78, 382, 324, 325, -325, 237, 103, 104, 364, -296,
	-455, -280, -453, -455, -280, -453, -453, -324, -306, -280,
	-244, 324, 325, -351, 297, 109, -351, -216, -216, 30,
	87, 87, -197, 82, 151, 119, -493, -487, 119, -356,
	87, -494, 87, 151, -168, -168, -248, 151, 119, -170,
	-169, 78, 79, -171, 78, -169, 67, 67, -248, -500,
	-499, 23, -458, -458, -458, 82, 82, -249, 18, 20,
	138, -249, 116, 114, 116, 116, -280, 82, 82, -403,
	564, -436, -438, 421, 20, 20, 13, 82, -419, -419,
	-334, -350, 407, -195, -269, 87, 587, -306, 82, -306,
	82, 87, -159, 20, -403, -178, -201, -299, -139, -135,
	512, 87, -491, 398, 87, 87, 93, 40, 93, 149,
	390, -413, -131, 81, -277, -277, -277, -280, 82, 151,
	82, 82, -394, 252, 93, 137, 93, 137, 93, -278,
	-147, -280, -248, -485, 150, -248, -248, -210, 98, -302,
	87, -218, -279, 147, -219, 40, 285, 281, 119, 119,
	-220, 40, 265, 266, -229, 81, 296, 13, 188, 104,
	104, -195, 81, 81, 79, 306, 81, 81, -455, 82,
	297, 146, -216, 82, -461, 87, -491, 87, -358, -486,
	-159, -345, -425, -306, 81, -306, 81, 67, 19, 17,
	-306, -312, 236, -6, 573, 352, -230, 565, 87, 20,
	87, -434, 87, -346, -112, -430, -378, 82, 82, -371,
	-374, -373, -377, 427, 298, 434, -312, -230, 511, -135,
	-136, 59, 468, 20, 512, 339, 40, 93, 40, 391,
	-329, -331, -264, 81, -216, -218, 87, -214, -215, -245,
	-325, -190, -111, -110, -214, -395, 155, 93, 137, 93,
	93, -248, -248, 87, 87, 93, 81, -420, 30, -330,
	81, -329, -329, -456, 326, 327, 328, 330, 329, -456,
	-329, -329, 81, -352, -351, -277, 146, -160, -163, -454,
	-280, 237, 20, 20, -280, -280, -267, 566, 93, 87,
	423, -404, 567, -439, 426, -433, -431, 421, 422, 423,
	424, 82, -376, 111, 390, 394, -300, -303, 93, 96,
	180, 149, -267, -179, -280, 296, 87, 385, 87, 339,
	82, 151, -396, -306, -366, 253, 151, -245, -271, -112,
	-366, -410, 163, 317, 512, 93, 137, 93, -159, 82,
	-306, -316, -277, -232, -231, 508, -329, 82, 82, 82,
	82, -329, -216, -277, 82, 82, 151, 81, 20, 87,
	-441, 235, -437, -438, 425, -431, 20, 423, 20, 20,
	-375, -376, 394, -300, -303, 562, 432, 432, 432, 34,
	363, 407, -332, -331, -154, 82, -367, 305, 20, -245,
	-277, -367, 317, 93, 137, 93, -160, 82, -280, -236,
	-234, -235, 78, 439, 294, 295, 82, -332, 79, -332,
	79, -332, 79, -332, 79, 82, -216, -280, 237, -268,
	-280, -434, -448, 81, 93, -436, -435, -437, 20, -434,
	20, -434, -434, 108, 433, 433, 433, 87, -333, 243,
	91, 512, 324, 325, -154, 20, -368, 298, 299, -369,
	-382, 301, -216, 93, -351, -235, 78, -234, 78, 14,
	13, -456, -456, -456, -456, -237, 82, 151, -452, 30,
	82, -447, -446, -265, -442, -280, 426, 427, 87, -434,
	-375, -277, 87, 323, -264, 81, -380, 302, 81, -378,
	81, -378, 104, 327, -233, 291, 292, 30, 163, -233,
	-332, -332, -332, -332, -280, -451, -450, -449, 82, 151,
	150, 93, -280, -365, -370, 303, 93, -302, 81, -302,
	81, -379, 300, 81, 98, 40, 293, 151, 119, -446,
	-280, 82, -384, 81, 20, 82, -365, 82, -365, 81,
	119, -302, -450, 40, -306, 150, -385, -383, 253, -369,
	82, 82, 82, -365, 93, 82, -280, 82, 151, -280,
	-381, 304, 82, -383, -386, 60, 93, -390, -387, 81,
	-245, 255, 129, -390, -245, -389, -388, 303, 256, 81,
	82, 151, -280, 252, 81, -312, -388, -387, -312, 82,
	82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 803, 804, 805, 806, 807, 0, 0, 0,
	0, 577, 578, 0, 548, 0, 0, 0, 0, 0,
	0, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 351,
	352, 353, 354, 355, 356, 0, 285, 281, 206, 207,
	208, 209, 210, 292, 293, 418, 0, 0, 0, 0,
	658, -2, 53, 274, 0, 265, 265, 808, 809, 810,
	811, 812, 813, 814, 815, -2, 590, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	340, 341, 342, 336, 337, 339, 338, -2, 0, 590,
	0, 0, 0, 678, 0, 0, 695, 717, 23, 0,
	7, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 0, 0, 19, 0, 19, 0, 0, 0, 1135,
	1136, 1137, 1138, -2, 1621, 1599, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 0, 258, 256, 1599, 1621,
	1681, 1714, 0, 820, 0, 636, 0, 641, 1089, 636,
	286, 579, 580, 678, 678, 546, 0, 322, 0, 1612,
	326, 0, 0, 0, 543, 316, 317, 318, 319, 320,
	321, 0, 0, 802, 0, 0, 312, 0, 280, 1672,
	0, 0, 0, 0, 0, 0, 150, 909, 152, 911,
	156, 163, 0, 0, 168, 169, 172, 173, 174, 175,
	176, 0, 180, 0, 182, 185, 0, 187, 188, 0,
	191, 192, 193, 0, 203, 204, 205, 912, 913, 914,
	-2, 81, 818, 1533, 1424, 0, 1431, 1432, 1443, 1454,
	1213, 1214, 1215, 1216, 0, 0, 0, 0, 0, 1223,
	1224, 0, 1240, 1777, 0, 1230, 1231, 1232, 1233, 1234,
	90, 102, 103, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 0, 1397, 1200, 1135, 0, 1785, 0,
	1805, 1810, 1811, 1812, 1813, 1804, 0, 0, 1382, 0,
	1372, 0, 0, -2, -2, 0, 0, 1740, -2, 1782,
	1801, 1809, 1786, 1808, 1779, 1780, 1774, 1775, 1776, 1778,
	1787, 1789, 1800, 0, 1796, 1806, 1807, 0, 0, 0,
	0, 104, 105, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1388, -2, 1390, 1391,
	1393, -2, 1395, 1396, -2, 1399, 1400, 1401, -2, -2,
	1404, 1405, 1406, 1407, 1408, 1409, 1412, -2, -2, -2,
	-2, 1384, 1385, 1386, 1387, 1376, 1377, 1378, 1379, 1380,
	1381, -2, -2, -2, 678, 753, 0, -2, 0, 0,
	0, 700, 703, 706, 709, 0, 54, 55, 275, 276,
	264, 266, 0, 270, 0, 263, 0, 0, 0, 0,
	941, 941, 941, 941, 941, 0, 941, 0, 0, 0,
	941, 848, 916, 917, 918, 939, 940, 987, 0, 0,
	0, 0, 595, 591, 592, 593, 594, 666, 0, 668,
	671, 523, 470, 0, 0, 0, 523, 0, 484, 476,
	0, 0, 0, 523, 0, 0, 673, 673, 0, 526,
	533, 523, 523, -2, 523, 523, 523, 0, 0, 490,
	491, 492, 476, 476, 495, 496, 497, 508, 509, 534,
	1557, 0, 0, 418, 0, 418, 0, 418, 418, 597,
	1709, 1619, 1686, 1672, 0, 0, 231, 1740, 236, 0,
	1620, 1635, 0, 0, 1653, 0, -2, 0, 302, 673,
	0, 679, 0, 678, 0, 0, 418, 418, 418, 418,
	418, 986, 418, 418, 418, 0, 0, 0, 418, 0,
	0, 718, 719, 714, 715, 716, 720, 721, 5, 6,
	19, 0, 0, 0, 0, 0, 0, 60, 59, 0,
	1534, 1552, 1488, 1489, 1490, 1539, 1492, 1543, 1543, 1543,
	1543, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	0, 0, 1532, 1512, 1541, 1541, 1541, 1539, 1536, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1546, 1546, 1549, 1549, 1546, 0, 1422,
	0, 0, 0, 0, 640, 0, 0, 673, -2, 0,
	547, 323, 1139, 0, 0, 327, 328, 0, 0, 343,
	0, 346, 331, 332, 333, 0, 130, 0, 314, 315,
	0, 0, 282, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 160, 157, 164, 167, 177, 184, 0,
	196, 198, 201, 158, 165, 170, 171, 178, 199, 159,
	161, 162, 166, 200, 202, 179, 183, 197, 181, 186,
	189, 190, 195, 0, 131, 0, 0, 0, 0, 0,
	1430, 0, 0, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1424,
	0, 0, 1219, 1220, 1221, 1222, 1225, 0, 1241, 0,
	0, 0, 1486, 0, 1422, 1422, 0, 1422, 1418, 0,
	0, 0, 0, 0, 0, 1422, 1358, 0, 0, 1360,
	1373, 0, 0, 1362, 1363, 0, 1366, 1367, 1422, 0,
	1422, 1371, 1354, 1355, 0, 1418, 1418, 0, 0, 1418,
	1418, 1418, 1418, 1418, 1418, 1418, 1418, 1418, 1418, 1418,
	1418, 0, 0, 0, 673, 0, 0, 661, 0, 642,
	0, 697, 699, 0, 701, 702, 704, 705, 707, 708,
	710, 711, 56, 0, 0, 268, 0, 273, 0, 817,
	0, 0, 833, 941, 849, 0, 0, 0, 0, 0,
	0, 0, 0, 941, 941, 941, 0, 850, 0, 0,
	0, 597, 596, 0, 667, 0, 0, 726, 0, 0,
	0, 476, 523, 523, 482, 483, 478, 477, 529, 530,
	526, 0, 526, 526, 726, 0, 502, 503, 504, 523,
	523, 510, 674, 511, 512, 526, 0, 531, 532, 726,
	0, 0, 726, 726, 0, 520, 521, 522, 0, 0,
	941, 0, 539, 478, 478, 1558, 1559, 0, 950, 0,
	0, 0, 542, 0, 0, 0, 598, 211, 214, 0,
	217, 0, 1709, 0, 1709, 0, 224, 0, 0, 0,
	0, 0, 0, 254, 255, 0, 0, 0, 0, 245,
	248, 1083, 1084, 906, 907, 249, 250, 294, 295, 0,
	642, 696, 698, 692, 693, 694, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 573, 0, 575, 0, 0,
	734, 728, 730, 797, 90, 734, 8, 77, 74, 0,
	19, 0, 0, 19, 19, 0, 19, 259, 0, 1555,
	1553, 1554, 1491, 1540, 0, 1517, 0, 1518, 1519, 1520,
	0, 0, 1513, 0, 1514, 1515, 1516, 1507, 0, 1508,
	1509, 0, 1510, 1511, 257, 0, 1423, 821, 0, 615,
	628, 610, 0, 617, 0, 1090, 599, 628, 601, 0,
	617, 642, 664, 642, 0, 324, 0, 329, 0, 0,
	345, 347, 348, 349, 334, 335, 544, 310, 311, 303,
	304, 305, 306, 307, 308, 309, 313, 100, 0, 283,
	284, 0, 0, 0, 144, 145, 146, 147, 148, 149,
	151, 135, 564, 566, 898, 910, 0, 901, 0, 154,
	194, 127, 0, 0, 1425, 1426, 1427, 1428, 1429, 1433,
	0, 1435, 1437, 1439, 1441, 0, 1459, -2, -2, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1444, 1457, 1458, 0, 0, 0, 0, 0, 0,
	1455, 1455, 1450, 0, 1217, 0, 1238, 1242, 0, 0,
	0, 91, 1417, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 0, 0, 1424, 0, 0, 0, 1419, 1420,
	0, 0, 0, 1313, 0, 0, 1319, 1320, 1321, 0,
	623, 0, 1383, 1359, 1374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 754, 0, 632, 634, 635, 0, 662,
	675, 680, 681, 684, 52, 57, 277, 278, 0, 0,
	272, 0, -2, 835, 0, 0, 671, 0, 0, 864,
	416, 892, 0, 0, 908, 931, 937, 0, 0, 0,
	965, 851, 856, 857, 858, 852, 853, 859, 860, 0,
	669, 0, 0, 766, 469, 0, 524, 525, 473, 1672,
	478, 726, 726, 485, 479, 486, 528, 487, 488, 489,
	0, 726, 726, 523, 526, 513, 527, 526, 516, 517,
	0, 535, 540, 536, 0, 538, 493, 494, 671, 358,
	359, 0, 0, 0, 364, 377, 1560, 0, 0, 0,
	0, 374, 1560, 0, 1560, 1560, 1560, 1560, 1560, 1560,
	1560, 0, 0, 1560, 1560, 1560, 1560, 1560, 1560, 1560,
	1560, 1560, 1560, 1560, 0, 1560, 1560, 1560, 1560, 1560,
	1069, 1560, 0, 951, 384, 385, 386, 387, 392, 393,
	0, 413, 0, 0, 0, 416, 882, 739, 0, 740,
	741, 737, 768, 792, 792, 0, 792, 772, 1089, 0,
	0, 222, 223, 212, 0, 213, 0, 225, 226, 0,
	228, 229, 230, 237, 1619, 1686, 232, 234, 0, 0,
	238, 251, 252, 253, 0, 0, 243, 244, 0, 0,
	297, 298, 300, 0, 690, 561, 1087, 562, 563, 567,
	0, 0, 570, 571, 572, 835, 0, 887, 726, 0,
	735, 0, 731, 798, 0, 800, 0, 726, 0, 75,
	19, 0, 68, 65, 0, 0, 0, 0, 0, 1535,
	1487, 1556, 0, 0, 0, 1537, 0, 0, 0, 0,
	58, 644, 606, 0, 609, 625, 0, 629, 0, 0,
	621, 614, 618, 0, 0, 638, 600, 0, 0, 605,
	690, 665, 1140, 0, 330, 344, 0, 0, 0, 0,
	138, 895, 0, 139, 143, 133, 0, 0, 0, 900,
	0, 897, 902, 0, 153, 0, 0, 128, 129, 956,
	961, 0, 1434, 1436, 1438, 1440, 1442, 0, 1445, 1455,
	1455, 1451, 0, 1446, 0, 1448, 0, 1425, 0, 1243,
	0, 0, 0, 0, 0, 0, 1303, 1304, 0, 0,
	1308, 0, 1310, 1311, 1312, 1314, 0, 0, 0, 1318,
	0, 1357, 1375, 1361, 1364, 0, 1368, 0, 1370, 0,
	678, 0, 1280, 1280, 0, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 1236,
	1237, 0, 755, 644, 0, 0, 0, 687, 685, 686,
	279, 267, 269, 0, 0, 0, 823, 824, 826, 0,
	829, 830, 831, 0, 836, 837, 839, 840, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1604, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 834, 671, 0, 942, 871, 1560, 420, 0, 0,
	894, 0, 0, 0, -2, 0, 0, 0, 0, 967,
	0, 0, 0, 584, 588, 23, 672, 0, 727, 471,
	0, 472, 523, 480, 481, 726, 1089, 505, 506, 726,
	523, 523, 526, 0, 537, 0, 950, 361, 394, 0,
	1098, 1099, 0, 0, 1105, 1114, 941, 1170, 0, 1114,
	0, 0, 1116, 1117, 362, 0, 0, 400, 0, 0,
	0, 363, 0, 0, 0, 0, 378, 379, 0, 1561,
	1560, 1560, 0, 372, 373, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 1560, 1560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	0, 0, 0, 0, 0, 1075, 1076, 871, 1560, 0,
	0, 0, 420, 879, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 758, 0, 0, 0, 0, 0, 671,
	793, 0, 795, 796, 770, -2, 0, 739, 775, 1422,
	215, 216, 0, 0, 221, 239, 241, 0, 0, 0,
	240, 242, 246, 247, 296, 299, 301, 660, 0, 0,
	0, 988, 0, 576, 724, 729, 736, 799, 801, 91,
	732, 724, 0, 78, 19, 77, 69, 70, 0, 19,
	0, 0, 0, 0, 1545, 1544, 1530, 0, 1531, 1542,
	1547, 0, 1550, 0, 648, 0, 0, 628, 630, 0,
	0, 628, 0, 0, 637, 0, 0, 628, 663, 0,
	0, 545, 101, 350, 0, 0, 0, 0, 0, 565,
	0, 899, 135, 0, 0, 155, 0, 0, 959, 0,
	961, 1421, 1447, 1449, 0, 1456, 1452, 1218, 1226, 1239,
	0, 0, 1245, 1257, 1257, 0, 1248, 1543, 1543, 1251,
	1539, 1541, 1539, 1257, 1257, 0, 92, 0, 0, 1309,
	0, 0, 0, 624, 0, 0, 0, 1278, 1280, 1285,
	1281, 1286, 1280, 1280, 1280, 1280, 1291, 1280, 1280, 1280,
	1280, 1280, 1280, 1280, 1280, 1276, 633, 648, 676, 677,
	682, 683, 0, 271, 0, 0, 828, 0, 0, 0,
	841, 0, 0, 875, 872, 873, 874, 0, 889, 421,
	422, 423, 424, 0, 0, 0, 893, 0, 882, 0,
	932, 933, 934, 935, 936, -2, 945, 0, 0, 1091,
	1091, 1091, 975, 0, 966, 636, 0, -2, 0, 0,
	586, 0, 0, 767, 474, 726, 498, 0, 514, 726,
	726, 523, 541, 0, 360, 366, 395, 0, 394, -2,
	1104, 1129, 1115, 1129, 1171, 1129, 1129, 941, 0, 398,
	399, 401, 0, 403, 0, 0, 0, 365, 397, 368,
	380, 381, 382, 383, 0, 0, 0, 375, 388, 389,
	390, 391, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 0,
	0, 1048, 1049, 1050, 1051, 1052, 1126, 1127, 1128, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1077, 1078, 1079, 1080,
	1081, 1082, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	0, 0, 1072, 0, 875, 0, 0, 0, 0, 889,
	881, 0, 883, 884, 0, 0, 607, 726, 289, 0,
	762, 756, 0, 745, 760, 761, 748, 0, 750, 0,
	746, 747, 726, 738, 769, 794, 771, 774, 776, 777,
	783, 0, 0, 0, 0, 218, 219, 220, 227, 0,
	440, 233, 691, 1088, 568, 569, 989, 990, 574, 722,
	0, 0, 722, 73, 76, 0, 71, 0, 0, 0,
	0, 63, 61, 1538, 0, 0, 650, 115, 0, 0,
	0, 626, 0, 631, 628, 613, 622, 612, 619, 620,
	639, 628, 604, 603, 1141, 325, 0, 896, 135, 140,
	141, 142, 136, 134, 903, 0, 905, 0, 957, 961,
	0, 0, 1453, 1244, 1227, 1246, 1258, 1259, 1247, 1228,
	1249, 1250, 1252, 1253, 1254, 1255, 1256, 1229, 1305, 0,
	1307, 1315, 1316, 0, 1365, 1369, 0, 0, 0, 1284,
	1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 678, 1277, 0, 650, 688, 689, 816, 819,
	825, 827, 0, 838, 0, 0, 854, 847, 0, 0,
	866, 867, 877, 0, 0, 0, 426, 427, 0, 0,
	0, 439, 435, 436, 437, 417, 888, 879, 0, 946,
	1560, 1560, 1560, 0, 0, 1092, 1093, 1095, 1096, 1097,
	0, 0, 978, 0, 0, 969, 0, 792, 0, 0,
	726, 585, 588, 589, 670, 475, 726, 518, 515, 726,
	357, 396, 367, 1131, -2, 1144, 1146, 0, 951, 1149,
	1150, 0, 0, 0, 0, 0, 0, 1192, 1158, 0,
	0, 1162, 1163, 1164, 0, 0, 1471, 1472, 0, 1169,
	0, 1130, 0, 1118, 1130, 0, 0, 1129, 0, 402,
	404, 407, 408, 405, 1166, 0, 406, 1040, 1041, 0,
	1046, 1047, 0, 1071, 0, 0, 409, 0, 0, 0,
	410, 415, 880, 0, 885, 886, 678, 0, 0, 742,
	763, 0, 0, 743, 0, 744, 749, 751, 288, 778,
	0, 0, 780, 781, 782, 773, 235, 712, 0, 0,
	733, 713, 0, 19, 0, 0, 66, 1548, 1551, 652,
	0, 649, 116, 0, 0, 0, 0, 627, 611, 602,
	137, 132, 904, 118, 960, 962, 958, 0, 1317, 0,
	1280, 1279, 1273, 0, 652, 0, 844, 842, 854, 846,
	861, 876, 865, 0, 890, 891, 0, 428, 429, 0,
	432, 438, 878, 0, 0, 0, 0, 938, -2, 0,
	0, -2, 981, 0, 976, 0, 968, 0, 971, 726,
	726, -2, 582, 587, 0, 499, 519, 1145, 1147, 1148,
	1151, 1152, 1085, 1086, 1153, 1197, 1198, 1199, 0, 0,
	1156, 1194, 1195, 1196, 1157, 0, 0, 0, 0, 1469,
	1470, 1190, 0, 0, 0, 0, 0, 0, 0, 1112,
	1167, 1560, 370, 1070, 1073, 1074, 414, 411, 412, 608,
	673, 290, 291, 764, 0, 757, 787, 784, 0, 0,
	723, 725, 67, 72, 0, 0, 654, 0, 651, 0,
	645, 647, 126, 616, 88, 109, 0, 1306, 1356, 1283,
	0, 1274, 0, 1268, 1269, 1270, 1275, 654, 0, 845,
	0, 862, 863, 0, 0, 425, 430, 0, 433, 434,
	0, 927, 1539, 0, 947, 948, 949, 991, -2, 1034,
	0, 1094, 953, 118, 991, 972, 0, 979, 0, 977,
	970, 678, 583, 1154, 1155, 0, 0, 1372, 1560, 1185,
	0, 0, 0, 1119, 1121, 1122, 1123, 1124, 1125, 1120,
	0, 0, 0, 1111, 1113, 0, 1560, 287, 0, 0,
	788, 790, 785, 786, 62, 64, 79, 0, 653, 117,
	0, 80, 0, 106, 0, 119, 120, 0, 0, 0,
	0, 1282, 1271, 0, 0, 0, 0, 0, 1473, 1474,
	1475, 0, 643, 0, 843, 0, 868, 0, 870, 431,
	920, 0, 684, 0, 993, 0, 950, 1036, 1560, 955,
	993, 964, 0, 974, 0, 983, 0, 980, 673, 1193,
	0, 1161, 0, 1173, 1186, 0, 0, 920, 920, 920,
	920, 0, 369, 0, 765, 779, 0, 0, 0, 89,
	93, 0, 115, 112, 0, 121, 0, 0, 0, 0,
	0, 1260, 0, 0, 0, 1264, 1265, 1266, 1267, 0,
	855, 869, 919, 928, 929, 684, 952, 0, 1030, 1035,
	0, 954, 973, 982, 0, 985, 581, 1159, 1165, 1172,
	1174, 1175, 0, 1187, 1188, 1189, 1191, 1100, 0, 1102,
	0, 1106, 0, 1108, 0, 0, 371, 789, 791, 0,
	656, 646, 82, 0, 0, 110, 111, 113, 0, 122,
	0, 124, 125, 0, 1261, 1262, 1263, 832, 921, 1560,
	0, 0, 925, 926, 930, 0, 1018, 0, 0, 1024,
	0, 1031, 1040, 984, 1160, 1176, 0, 1177, 0, 0,
	0, 920, 920, 920, 920, 1110, 655, 0, 963, 0,
	94, 0, 96, 98, 99, 1132, 107, 108, 114, 123,
	1272, 0, 923, 0, 994, 0, 996, 0, 0, 0,
	0, 0, 1028, 0, 1178, 1180, 1181, 0, 0, 1179,
	1101, 1103, 1107, 1109, 657, 83, 84, 0, 95, 0,
	0, 922, 924, 0, 998, 0, 1019, 0, 0, 0,
	0, 0, 0, 0, 1182, 1184, 1183, 0, 0, 97,
	1133, 995, 992, 0, 1030, 1020, 0, 1022, 0, 0,
	0, 0, 85, 86, 87, 0, 0, 1000, 0, 1016,
	1021, 1023, 1025, 0, 1029, 1027, 1134, 999, 0, 1012,
	997, 0, 1026, 1001, -2, 0, 1017, 1002, -2, 0,
	1010, 0, 0, 1003, 1011, 0, 1006, 0, 0, 0,
	1005, 0, -2, 1013, 0, 0, 1007, -2, 0, 1015,
	1014,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 110, 3, 3, 3, 141, 133, 3,
	81, 82, 138, 136, 151, 137, 150, 139, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 584, 583,
	120, 119, 121, 3, 585, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 143, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 586, 132, 587, 144,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 111, 112, 113, 114,
	115, 116, 117, 118, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 134, 135, 140, 142, 145, 146,
	147, 148, 149, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:725
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:732
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:738
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:746
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:752
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:756
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:786
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:790
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:822
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:829
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:849
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:855
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:862
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:870
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:876
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:885
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:903
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:911
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:919
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:937
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:954
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:977
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:983
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:987
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:993
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1002
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1012
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1016
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1022
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1035
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1041
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1075
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1086
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1092
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1096
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1102
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1109
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1121
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1135
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1139
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1143
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1156
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1162
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1171
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1182
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1186
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1192
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1196
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1202
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1206
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1212
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1236
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1255
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1259
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1263
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1272
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1279
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1287
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1294
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1299
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1306
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1315
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1339
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1343
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1349
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1355
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1373
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1390
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1413
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1417
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1421
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1436
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1449
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1460
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1473
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1477
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1487
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1519
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1549
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1553
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1557
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1561
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1565
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1569
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1576
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1580
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1586
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1593
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1602
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1606
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1612
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1616
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1620
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1624
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1628
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1632
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1636
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1835
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1845
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1849
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1862
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1870
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1888
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1892
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1921
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1955
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1959
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1971
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1982
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1988
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1992
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1998
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2006
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2032
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2040
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2063
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2086
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2108
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2115
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2131
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2135
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2139
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2145
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2149
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2155
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2159
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2165
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2169
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2191
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2195
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2199
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2203
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2207
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2211
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2215
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2219
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2223
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2229
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2237
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2264
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2284
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2312
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2323
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2327
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2349
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2353
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2359
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2365
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2369
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2373
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2377
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2383
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2395
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2401
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2438
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2531
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2535
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2541
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2547
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2552
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2553
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2554
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2574
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2585
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2594
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2598
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2604
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2611
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2615
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2619
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2623
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2627
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2636
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2651
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2655
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2659
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2663
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2667
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2671
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2675
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2679
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2684
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2715
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2721
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2727
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2745
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2759
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2788
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2795
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2811
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2815
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2834
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2850
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2863
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2869
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2891
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2900
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2904
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2913
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2933
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2945
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2989
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2995
		{
			yyVAL.item = nil
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3000
		{
			yyVAL.item = nil
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3039
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3044
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3048
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3052
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3065
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3076
		{
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3080
		{
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3149
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3158
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3162
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3178
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3182
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3186
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3199
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3209
		{
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3211
		{
		}
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3243
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3247
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3253
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3265
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3351
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3360
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3364
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3369
		{
			yyVAL.str = ""
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3373
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3379
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3402
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3411
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3427
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3431
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3437
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3443
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3447
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3451
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3457
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3461
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3511
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3515
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3549
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3555
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3561
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3571
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3593
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3604
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3609
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3616
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3632
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3645
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3656
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3660
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3666
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3671
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3678
		{
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3680
		{
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3683
		{
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3692
		{
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3696
		{
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3701
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3710
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3717
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3723
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3731
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3738
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3745
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3765
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3775
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3779
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3785
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3792
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3798
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3806
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3813
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3820
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3839
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3843
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3848
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3852
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3856
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3862
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3871
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3875
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3881
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3885
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3891
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3895
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3901
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3906
		{
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3910
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3917
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3921
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3928
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3937
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3943
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3947
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3953
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3957
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3966
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3979
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3986
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3993
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4011
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4036
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4043
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4047
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4060
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4064
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4069
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4073
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4080
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4085
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4092
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4098
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4106
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4110
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4124
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4131
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4140
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4144
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4150
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4162
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4171
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4177
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4185
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4194
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4200
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4206
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4210
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4216
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4221
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4225
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4229
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4234
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4251
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4263
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4267
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4281
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4285
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4295
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4315
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4335
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4343
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4352
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4360
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4368
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4376
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4384
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4392
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4408
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4416
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4426
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4451
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4455
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4459
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4464
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4468
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4472
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4485
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4494
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4503
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4509
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4513
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4523
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4528
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4532
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4537
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4545
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4559
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4577
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4592
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4610
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4620
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4624
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4634
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4638
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4642
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4646
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4652
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4662
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4666
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4672
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4688
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4694
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4698
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4702
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4708
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4712
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4718
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4728
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4732
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4738
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4742
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4752
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4765
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4771
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4777
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4790
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4808
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4812
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4818
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4828
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4832
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4836
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4841
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4853
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4862
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4866
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4870
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4874
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4879
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4883
		{
			yyVAL.str = yyDollar[1].str
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4887
		{
			yyVAL.str = yyDollar[2].str
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4893
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4899
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4903
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4907
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4915
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4921
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 816:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4964
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4970
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4976
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4986
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4991
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5008
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5020
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5029
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5033
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5037
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5044
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5056
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5061
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5067
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5078
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5084
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5090
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5094
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5098
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5104
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5110
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5116
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5125
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5136
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5152
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5158
		{
			yyVAL.str = "OR REPLACE"
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5162
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5166
		{
			yyVAL.str = "DEFINER = "
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5170
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5175
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5179
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5193
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5201
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5207
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5217
		{
			yyVAL.str = yyDollar[1].str
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5221
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5227
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5234
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5240
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5268
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5276
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5282
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5291
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5303
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5314
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5318
		{
			yyVAL.str = yyDollar[2].str
		}
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5324
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5338
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5344
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5350
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5356
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5365
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5374
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5499
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5503
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5509
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5519
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5523
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5529
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5539
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5547
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5556
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5562
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5569
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5575
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5584
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5600
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5604
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5610
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5624
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5628
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5632
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5637
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5645
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5649
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5655
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5678
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5700
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5704
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5708
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5712
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5716
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5722
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5726
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5732
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5737
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5742
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5746
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5750
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5754
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5758
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5764
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5779
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5789
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5793
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5802
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5808
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5812
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5818
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5822
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5826
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5831
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5835
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5841
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5853
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5862
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5875
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5882
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5892
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5900
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5911
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5915
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5920
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5924
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5931
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5942
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5955
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5969
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5977
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5984
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5998
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6009
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6013
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6021
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6039
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6046
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6057
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6064
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6071
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6078
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6085
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6089
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6098
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6102
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6111
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6125
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6132
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6143
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6156
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6162
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6166
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6172
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6181
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6195
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6201
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6205
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6211
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6218
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6227
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6231
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6240
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6245
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6249
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6254
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6258
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6268
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6272
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6283
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6299
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6307
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6318
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6327
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6337
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6347
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6351
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6356
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6360
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6369
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6375
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6379
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6383
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6389
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6393
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6397
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6401
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6405
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6409
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6413
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6430
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6434
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6438
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6446
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6450
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6458
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6466
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6470
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6474
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6478
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6482
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6486
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6490
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6494
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6498
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6502
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6506
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6510
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6514
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6518
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6522
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6526
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6532
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6536
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6542
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6548
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6552
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6562
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6566
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6570
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6574
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6578
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6592
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6596
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6605
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6610
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6616
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6623
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6627
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6633
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6637
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6641
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6647
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6651
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6657
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6666
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6675
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6698
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6723
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6737
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6743
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6752
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6761
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6770
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6779
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6789
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6797
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6803
		{
			yyVAL.str = ""
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6807
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6817
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6823
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6829
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6848
		{
			yyVAL.str = ""
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6852
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6858
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6864
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6868
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6872
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6886
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6890
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6896
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6900
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6904
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6913
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6919
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6923
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6929
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6937
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6941
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6945
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6949
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6954
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6958
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6970
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6978
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6982
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6986
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6990
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7003
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7007
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7011
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7021
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7025
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7030
		{
			yyVAL.str = ""
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7034
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7040
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7044
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7050
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7062
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7069
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7076
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7083
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7090
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7099
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7105
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7111
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7127
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7132
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7143
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7147
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7156
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7161
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7165
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7181
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7187
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7191
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7195
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7199
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7203
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7227
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7231
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7235
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7241
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7245
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7249
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7269
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7277
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7281
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7285
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7290
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7298
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7303
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7307
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7316
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7320
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7324
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7328
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7332
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7346
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7354
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7367
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7376
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7382
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7386
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7392
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7401
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7413
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7430
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7447
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7460
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7473
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7485
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7499
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7514
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7529
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7546
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7561
		{
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7568
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7572
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7576
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7582
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7586
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7590
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7594
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7614
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7622
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7636
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7643
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7652
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7657
		{
			yyVAL.str = ","
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7661
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7673
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7699
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7710
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7720
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7729
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7738
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7748
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7758
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7768
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7778
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7788
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7798
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7808
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7818
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7838
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7848
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7858
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7875
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7891
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7899
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7907
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7917
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7925
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7934
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7942
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7950
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7958
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7966
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7977
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7987
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7999
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8010
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8032
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8080
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8092
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8103
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8111
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8118
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8145
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8155
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8165
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8173
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8184
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8193
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8202
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8210
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8220
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8228
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8242
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8252
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8271
		{
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8273
		{
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8314
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8325
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8329
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8333
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8339
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8348
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8354
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8358
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8365
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8369
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8373
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8381
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8385
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8389
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8393
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8399
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8403
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8407
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8411
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8415
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8419
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8423
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8427
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8431
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8435
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8443
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8447
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8451
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8455
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8459
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8463
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8467
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8471
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8475
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8479
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8489
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8495
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8499
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8506
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8510
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8514
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8520
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8524
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8528
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8532
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8536
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8540
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8544
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8550
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8554
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8558
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8562
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8568
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8581
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8586
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8592
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8596
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8609
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8614
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8618
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8622
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8626
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8630
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8634
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8648
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8652
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8659
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8670
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8675
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8681
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8693
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8705
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8717
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8730
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8743
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8756
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8769
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8795
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8808
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8821
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8847
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8862
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8889
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8931
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8967
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9003
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9032
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9052
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9072
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9092
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9121
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9184
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9208
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9220
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9232
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9244
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9281
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9294
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9309
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9317
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9326
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9336
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9359
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9364
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9370
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9377
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9381
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9386
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9390
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9396
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9402
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9409
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9416
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9425
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9432
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9439
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9448
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9452
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9456
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9462
		{
		}
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9474
		{
			yyVAL.str = ""
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

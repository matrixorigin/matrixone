// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PUBLICATION = 57624
const SUBSCRIPTIONS = 57625
const PUBLICATIONS = 57626
const PROPERTIES = 57627
const PARSER = 57628
const VISIBLE = 57629
const INVISIBLE = 57630
const BTREE = 57631
const HASH = 57632
const RTREE = 57633
const BSI = 57634
const ZONEMAP = 57635
const LEADING = 57636
const BOTH = 57637
const TRAILING = 57638
const UNKNOWN = 57639
const EXPIRE = 57640
const ACCOUNT = 57641
const ACCOUNTS = 57642
const UNLOCK = 57643
const DAY = 57644
const NEVER = 57645
const PUMP = 57646
const MYSQL_COMPATBILITY_MODE = 57647
const SECOND = 57648
const ASCII = 57649
const COALESCE = 57650
const COLLATION = 57651
const HOUR = 57652
const MICROSECOND = 57653
const MINUTE = 57654
const MONTH = 57655
const QUARTER = 57656
const REPEAT = 57657
const REVERSE = 57658
const ROW_COUNT = 57659
const WEEK = 57660
const REVOKE = 57661
const FUNCTION = 57662
const PRIVILEGES = 57663
const TABLESPACE = 57664
const EXECUTE = 57665
const SUPER = 57666
const GRANT = 57667
const OPTION = 57668
const REFERENCES = 57669
const REPLICATION = 57670
const SLAVE = 57671
const CLIENT = 57672
const USAGE = 57673
const RELOAD = 57674
const FILE = 57675
const TEMPORARY = 57676
const ROUTINE = 57677
const EVENT = 57678
const SHUTDOWN = 57679
const NULLX = 57680
const AUTO_INCREMENT = 57681
const APPROXNUM = 57682
const SIGNED = 57683
const UNSIGNED = 57684
const ZEROFILL = 57685
const ENGINES = 57686
const LOW_CARDINALITY = 57687
const ADMIN_NAME = 57688
const RANDOM = 57689
const SUSPEND = 57690
const ATTRIBUTE = 57691
const HISTORY = 57692
const REUSE = 57693
const CURRENT = 57694
const OPTIONAL = 57695
const FAILED_LOGIN_ATTEMPTS = 57696
const PASSWORD_LOCK_TIME = 57697
const UNBOUNDED = 57698
const SECONDARY = 57699
const USER = 57700
const IDENTIFIED = 57701
const CIPHER = 57702
const ISSUER = 57703
const X509 = 57704
const SUBJECT = 57705
const SAN = 57706
const REQUIRE = 57707
const SSL = 57708
const NONE = 57709
const PASSWORD = 57710
const MAX_QUERIES_PER_HOUR = 57711
const MAX_UPDATES_PER_HOUR = 57712
const MAX_CONNECTIONS_PER_HOUR = 57713
const MAX_USER_CONNECTIONS = 57714
const FORMAT = 57715
const VERBOSE = 57716
const CONNECTION = 57717
const TRIGGERS = 57718
const PROFILES = 57719
const LOAD = 57720
const INFILE = 57721
const TERMINATED = 57722
const OPTIONALLY = 57723
const ENCLOSED = 57724
const ESCAPED = 57725
const STARTING = 57726
const LINES = 57727
const ROWS = 57728
const IMPORT = 57729
const MODUMP = 57730
const OVER = 57731
const PRECEDING = 57732
const FOLLOWING = 57733
const GROUPS = 57734
const DATABASES = 57735
const TABLES = 57736
const SEQUENCES = 57737
const EXTENDED = 57738
const FULL = 57739
const PROCESSLIST = 57740
const FIELDS = 57741
const COLUMNS = 57742
const OPEN = 57743
const ERRORS = 57744
const WARNINGS = 57745
const INDEXES = 57746
const SCHEMAS = 57747
const NODE = 57748
const LOCKS = 57749
const TABLE_NUMBER = 57750
const COLUMN_NUMBER = 57751
const TABLE_VALUES = 57752
const TABLE_SIZE = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const LOCAL = 57766
const EVENTS = 57767
const PLUGINS = 57768
const CURRENT_TIMESTAMP = 57769
const DATABASE = 57770
const CURRENT_TIME = 57771
const LOCALTIME = 57772
const LOCALTIMESTAMP = 57773
const UTC_DATE = 57774
const UTC_TIME = 57775
const UTC_TIMESTAMP = 57776
const REPLACE = 57777
const CONVERT = 57778
const SEPARATOR = 57779
const TIMESTAMPDIFF = 57780
const CURRENT_DATE = 57781
const CURRENT_USER = 57782
const CURRENT_ROLE = 57783
const SECOND_MICROSECOND = 57784
const MINUTE_MICROSECOND = 57785
const MINUTE_SECOND = 57786
const HOUR_MICROSECOND = 57787
const HOUR_SECOND = 57788
const HOUR_MINUTE = 57789
const DAY_MICROSECOND = 57790
const DAY_SECOND = 57791
const DAY_MINUTE = 57792
const DAY_HOUR = 57793
const YEAR_MONTH = 57794
const SQL_TSI_HOUR = 57795
const SQL_TSI_DAY = 57796
const SQL_TSI_WEEK = 57797
const SQL_TSI_MONTH = 57798
const SQL_TSI_QUARTER = 57799
const SQL_TSI_YEAR = 57800
const SQL_TSI_SECOND = 57801
const SQL_TSI_MINUTE = 57802
const RECURSIVE = 57803
const CONFIG = 57804
const DRAINER = 57805
const MATCH = 57806
const AGAINST = 57807
const BOOLEAN = 57808
const LANGUAGE = 57809
const WITH = 57810
const QUERY = 57811
const EXPANSION = 57812
const ADDDATE = 57813
const BIT_AND = 57814
const BIT_OR = 57815
const BIT_XOR = 57816
const CAST = 57817
const COUNT = 57818
const APPROX_COUNT_DISTINCT = 57819
const APPROX_PERCENTILE = 57820
const CURDATE = 57821
const CURTIME = 57822
const DATE_ADD = 57823
const DATE_SUB = 57824
const EXTRACT = 57825
const GROUP_CONCAT = 57826
const MAX = 57827
const MID = 57828
const MIN = 57829
const NOW = 57830
const POSITION = 57831
const SESSION_USER = 57832
const STD = 57833
const STDDEV = 57834
const MEDIAN = 57835
const STDDEV_POP = 57836
const STDDEV_SAMP = 57837
const SUBDATE = 57838
const SUBSTR = 57839
const SUBSTRING = 57840
const SUM = 57841
const SYSDATE = 57842
const SYSTEM_USER = 57843
const TRANSLATE = 57844
const TRIM = 57845
const VARIANCE = 57846
const VAR_POP = 57847
const VAR_SAMP = 57848
const AVG = 57849
const RANK = 57850
const NEXTVAL = 57851
const SETVAL = 57852
const CURRVAL = 57853
const LASTVAL = 57854
const ARROW = 57855
const ROW = 57856
const OUTFILE = 57857
const HEADER = 57858
const MAX_FILE_SIZE = 57859
const FORCE_QUOTE = 57860
const PARALLEL = 57861
const UNUSED = 57862
const BINDINGS = 57863
const DO = 57864
const DECLARE = 57865
const KILL = 57866
const QUERY_RESULT = 57867

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8952

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 101,
	21, 573,
	-2, 554,
	-1, 110,
	215, 776,
	-2, 847,
	-1, 131,
	42, 398,
	215, 398,
	242, 405,
	243, 405,
	421, 398,
	-2, 431,
	-1, 457,
	291, 91,
	396, 91,
	-2, 1417,
	-1, 520,
	67, 1223,
	-2, 1557,
	-1, 521,
	67, 1241,
	-2, 1528,
	-1, 525,
	67, 1242,
	-2, 1556,
	-1, 548,
	67, 1155,
	-2, 1616,
	-1, 549,
	67, 1156,
	-2, 1615,
	-1, 550,
	67, 1157,
	-2, 1605,
	-1, 551,
	67, 1580,
	-2, 1600,
	-1, 552,
	67, 1581,
	-2, 1601,
	-1, 553,
	67, 1582,
	-2, 1607,
	-1, 554,
	67, 1583,
	-2, 1590,
	-1, 555,
	67, 1584,
	-2, 1598,
	-1, 556,
	67, 1585,
	-2, 1608,
	-1, 557,
	67, 1586,
	-2, 1609,
	-1, 558,
	67, 1587,
	-2, 1614,
	-1, 559,
	67, 1588,
	-2, 1619,
	-1, 560,
	67, 1589,
	-2, 1620,
	-1, 562,
	67, 1220,
	-2, 1409,
	-1, 569,
	67, 1229,
	-2, 1435,
	-1, 573,
	67, 1233,
	-2, 1474,
	-1, 574,
	67, 1234,
	-2, 1552,
	-1, 582,
	67, 1244,
	-2, 1537,
	-1, 584,
	67, 1246,
	-2, 1547,
	-1, 585,
	67, 1247,
	-2, 1571,
	-1, 596,
	67, 1133,
	-2, 1610,
	-1, 597,
	67, 1134,
	-2, 1611,
	-1, 598,
	67, 1135,
	-2, 1612,
	-1, 605,
	21, 574,
	-2, 537,
	-1, 664,
	416, 431,
	417, 431,
	-2, 399,
	-1, 713,
	104, 1409,
	115, 1409,
	135, 1409,
	-2, 1384,
	-1, 751,
	21, 574,
	-2, 537,
	-1, 850,
	21, 573,
	-2, 1038,
	-1, 1192,
	67, 1291,
	-2, 1554,
	-1, 1193,
	67, 1292,
	-2, 1555,
	-1, 1407,
	1, 306,
	68, 306,
	543, 306,
	-2, 811,
	-1, 1649,
	68, 1370,
	136, 1370,
	-2, 1539,
	-1, 1650,
	68, 1370,
	136, 1370,
	-2, 1538,
	-1, 1651,
	68, 1348,
	136, 1348,
	-2, 1525,
	-1, 1652,
	68, 1349,
	136, 1349,
	-2, 1530,
	-1, 1653,
	68, 1350,
	136, 1350,
	-2, 1462,
	-1, 1654,
	68, 1351,
	136, 1351,
	-2, 1456,
	-1, 1655,
	68, 1352,
	136, 1352,
	-2, 1400,
	-1, 1656,
	68, 1353,
	136, 1353,
	-2, 1527,
	-1, 1657,
	68, 1354,
	136, 1354,
	-2, 1460,
	-1, 1658,
	68, 1355,
	136, 1355,
	-2, 1455,
	-1, 1659,
	68, 1356,
	136, 1356,
	-2, 1448,
	-1, 1661,
	68, 1359,
	136, 1359,
	-2, 1571,
	-1, 1662,
	68, 1339,
	136, 1339,
	-2, 1557,
	-1, 1663,
	68, 1368,
	136, 1368,
	-2, 1528,
	-1, 1664,
	68, 1368,
	136, 1368,
	-2, 1556,
	-1, 1665,
	68, 1368,
	136, 1368,
	-2, 1418,
	-1, 1666,
	68, 1366,
	136, 1366,
	-2, 1547,
	-1, 1667,
	68, 1363,
	136, 1363,
	-2, 1440,
	-1, 1668,
	67, 1321,
	68, 1321,
	136, 1321,
	358, 1321,
	359, 1321,
	360, 1321,
	-2, 1399,
	-1, 1669,
	67, 1322,
	68, 1322,
	136, 1322,
	358, 1322,
	359, 1322,
	360, 1322,
	-2, 1401,
	-1, 1670,
	67, 1325,
	68, 1325,
	136, 1325,
	358, 1325,
	359, 1325,
	360, 1325,
	-2, 1529,
	-1, 1671,
	67, 1327,
	68, 1327,
	136, 1327,
	358, 1327,
	359, 1327,
	360, 1327,
	-2, 1512,
	-1, 1672,
	67, 1329,
	68, 1329,
	136, 1329,
	358, 1329,
	359, 1329,
	360, 1329,
	-2, 1461,
	-1, 1673,
	67, 1331,
	68, 1331,
	136, 1331,
	358, 1331,
	359, 1331,
	360, 1331,
	-2, 1444,
	-1, 1674,
	67, 1332,
	68, 1332,
	136, 1332,
	358, 1332,
	359, 1332,
	360, 1332,
	-2, 1445,
	-1, 1675,
	67, 1334,
	68, 1334,
	136, 1334,
	358, 1334,
	359, 1334,
	360, 1334,
	-2, 1398,
	-1, 1676,
	68, 1373,
	136, 1373,
	358, 1373,
	359, 1373,
	360, 1373,
	-2, 1423,
	-1, 1677,
	68, 1373,
	136, 1373,
	358, 1373,
	359, 1373,
	360, 1373,
	-2, 1436,
	-1, 1678,
	68, 1376,
	136, 1376,
	358, 1376,
	359, 1376,
	360, 1376,
	-2, 1419,
	-1, 1679,
	68, 1373,
	136, 1373,
	358, 1373,
	359, 1373,
	360, 1373,
	-2, 1497,
	-1, 1692,
	1, 804,
	68, 804,
	543, 804,
	-2, 811,
	-1, 1799,
	21, 573,
	-2, 665,
	-1, 1964,
	1, 805,
	68, 805,
	543, 805,
	-2, 811,
	-1, 1976,
	65, 481,
	136, 481,
	-2, 942,
	-1, 1993,
	276, 1006,
	-2, 985,
	-1, 2241,
	276, 1006,
	-2, 986,
	-1, 2366,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 890,
	-1, 2369,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 890,
	-1, 2379,
	65, 481,
	136, 481,
	-2, 943,
	-1, 2473,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 891,
	-1, 2757,
	68, 862,
	136, 862,
	-2, 811,
	-1, 2761,
	68, 862,
	136, 862,
	-2, 811,
	-1, 2775,
	68, 866,
	136, 866,
	-2, 811,
	-1, 2780,
	68, 867,
	136, 867,
	-2, 811,
}

const yyPrivate = 57344

const yyLast = 32004

var yyAct = [...]int{
	487, 1408, 1258, 2761, 2760, 2740, 2769, 1173, 2699, 2651,
	468, 1746, 489, 2669, 2691, 2440, 2530, 2445, 2253, 2610,
	1639, 2611, 2467, 2579, 2504, 2319, 2595, 2599, 1024, 2466,
	2524, 2465, 2320, 2546, 606, 2443, 461, 881, 1325, 2514,
	151, 151, 1368, 2492, 517, 1979, 151, 403, 410, 2472,
	2389, 410, 2218, 1176, 1169, 2435, 2058, 1470, 2349, 2059,
	2044, 2263, 2054, 1079, 1727, 2242, 1440, 2051, 470, 2057,
	1793, 2317, 1863, 1647, 2080, 1507, 2312, 421, 1538, 2295,
	2190, 466, 2193, 1701, 1732, 415, 1483, 2188, 1448, 2262,
	745, 1645, 1862, 2216, 712, 1965, 984, 459, 1370, 601,
	460, 2098, 408, 31, 1411, 2137, 1904, 465, 1335, 1534,
	1515, 1463, 1508, 643, 2094, 718, 1516, 1000, 1794, 1533,
	1441, 1947, 1943, 1443, 1321, 1997, 1782, 1257, 150, 150,
	1728, 3, 1032, 1700, 394, 1355, 407, 19, 1343, 601,
	404, 8, 1830, 1033, 1566, 1002, 919, 1535, 1108, 1167,
	151, 721, 30, 1316, 1643, 469, 1088, 405, 6, 1172,
	100, 406, 7, 1685, 458, 722, 43, 1013, 1627, 1545,
	1222, 1206, 1379, 1378, 1905, 1158, 716, 467, 399, 762,
	1514, 1494, 477, 1467, 964, 1511, 704, 1166, 1801, 1354,
	2473, 396, 1071, 1396, 1009, 642, 1058, 1326, 1228, 1227,
	603, 423, 16, 9, 4, 982, 1107, 1025, 409, 640,
	141, 424, 43, 1552, 2131, 2131, 144, 605, 659, 1865,
	1542, 146, 147, 2520, 2515, 2436, 670, 2318, 1339, 2588,
	876, 1510, 604, 882, 2458, 2642, 145, 614, 747, 705,
	782, 1850, 1248, 2554, 1539, 145, 1060, 2457, 145, 31,
	39, 133, 111, 145, 392, 39, 133, 111, 2563, 413,
	419, 1858, 2160, 145, 145, 39, 133, 111, 145, 1689,
	1550, 145, 2113, 145, 1817, 816, 1818, 145, 743, 1451,
	1452, 2106, 420, 19, 1125, 2687, 2555, 8, 1021, 685,
	1481, 1118, 684, 142, 1945, 1831, 1041, 1061, 30, 1042,
	1122, 680, 142, 719, 6, 142, 2685, 1115, 7, 99,
	142, 809, 43, 99, 1392, 145, 1143, 39, 133, 111,
	142, 1124, 1030, 1031, 2453, 142, 790, 1175, 1117, 792,
	142, 615, 814, 1159, 142, 138, 1163, 591, 600, 590,
	592, 593, 126, 594, 595, 715, 139, 1944, 1028, 714,
	1621, 99, 1027, 1030, 1031, 797, 2522, 793, 798, 2099,
	1162, 2614, 2615, 2589, 2590, 2581, 84, 2584, 728, 723,
	727, 729, 142, 2673, 2674, 689, 2525, 2526, 2527, 2528,
	2518, 2321, 1044, 2321, 2641, 2581, 800, 819, 820, 821,
	818, 2100, 686, 2101, 1244, 607, 151, 755, 1241, 726,
	765, 1845, 1243, 1240, 1242, 1246, 1247, 756, 1178, 2594,
	1245, 2330, 410, 410, 2202, 151, 2350, 1464, 1546, 754,
	1950, 1773, 1456, 2463, 1154, 2357, 1684, 750, 752, 786,
	1460, 1624, 1938, 2204, 2260, 2194, 1164, 812, 813, 2538,
	2126, 2124, 134, 135, 1855, 136, 137, 731, 110, 2452,
	143, 688, 788, 811, 733, 2454, 785, 1161, 795, 1310,
	1309, 1019, 2644, 2645, 791, 794, 2199, 2200, 2048, 454,
	131, 724, 456, 1775, 852, 2198, 765, 455, 2541, 749,
	2460, 2201, 2209, 1778, 753, 2689, 2680, 2215, 787, 2551,
	2222, 2603, 732, 1972, 412, 411, 777, 2409, 2600, 822,
	2754, 2613, 2770, 773, 1551, 807, 808, 2708, 851, 751,
	110, 132, 143, 1177, 82, 2684, 860, 796, 2653, 1008,
	1053, 687, 1479, 1480, 1184, 1187, 1188, 2570, 1043, 2715,
	725, 2402, 131, 125, 124, 1185, 1756, 717, 865, 45,
	1555, 1557, 1558, 2719, 1755, 1251, 1252, 1253, 1254, 1255,
	1256, 1249, 1250, 2493, 2494, 2495, 2497, 2496, 789, 2649,
	2650, 2277, 2653, 719, 1956, 1160, 43, 43, 1067, 2196,
	1959, 1960, 1961, 1962, 2506, 802, 1066, 2393, 803, 758,
	759, 767, 766, 2397, 2415, 2416, 775, 799, 1046, 1540,
	1540, 1023, 1022, 1540, 418, 1007, 681, 127, 128, 129,
	730, 1006, 2771, 2371, 2029, 2777, 805, 2741, 2547, 746,
	2176, 1567, 990, 985, 782, 419, 2765, 981, 983, 2578,
	770, 771, 1059, 140, 2334, 2130, 1851, 1808, 774, 760,
	2082, 2084, 719, 1543, 1030, 1031, 1882, 961, 2129, 2213,
	2552, 94, 643, 2643, 994, 130, 993, 95, 2184, 2553,
	854, 855, 856, 857, 992, 1030, 1031, 767, 766, 414,
	1554, 858, 959, 956, 957, 958, 997, 1020, 1887, 2086,
	1886, 1885, 1883, 913, 1736, 1805, 683, 1029, 801, 682,
	1263, 1064, 637, 638, 639, 1553, 151, 1026, 1055, 1455,
	40, 1733, 1736, 1541, 604, 781, 1454, 1949, 681, 2459,
	96, 776, 2690, 2591, 2592, 40, 1804, 601, 601, 601,
	38, 112, 1083, 1083, 806, 151, 986, 987, 988, 989,
	112, 991, 2694, 112, 2195, 995, 1859, 2205, 112, 1465,
	2539, 2127, 410, 983, 1884, 1111, 1111, 804, 112, 112,
	2764, 1750, 1453, 112, 2479, 1090, 112, 691, 112, 1120,
	1953, 1954, 112, 2464, 1186, 2197, 2505, 40, 692, 1740,
	892, 893, 1791, 2214, 1952, 2720, 1081, 1081, 817, 1141,
	1556, 1110, 1110, 2776, 1051, 1457, 1085, 1155, 683, 1126,
	2292, 682, 1083, 1459, 1083, 755, 2288, 2083, 717, 1371,
	112, 2398, 2399, 2783, 1010, 1014, 1014, 1014, 782, 1737,
	1017, 2395, 2782, 1089, 1833, 2394, 2367, 1174, 1035, 1036,
	1633, 1038, 1039, 1040, 966, 2227, 1010, 1737, 1010, 1850,
	1015, 1016, 1730, 1792, 968, 1940, 1731, 1734, 2030, 2032,
	2033, 2034, 2031, 2139, 2138, 1838, 605, 693, 2695, 2773,
	1136, 1137, 608, 695, 97, 98, 102, 1819, 1116, 1807,
	1806, 999, 1123, 1539, 1179, 1180, 1181, 1182, 1183, 1638,
	1054, 817, 1888, 1889, 1226, 1062, 1063, 1045, 1792, 1047,
	817, 1602, 1150, 1530, 1266, 1267, 1268, 1276, 1735, 1598,
	1034, 1371, 1597, 1037, 1739, 2356, 1978, 1282, 1283, 1743,
	1741, 694, 608, 1171, 1742, 697, 696, 2755, 1224, 1225,
	1290, 1291, 1077, 1078, 1260, 1477, 1149, 2774, 1637, 1792,
	1146, 1065, 1270, 601, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 43, 1145, 1152, 1140,
	1217, 1218, 1189, 392, 1091, 43, 1127, 1139, 1105, 1132,
	1104, 1168, 1112, 490, 499, 2750, 1074, 1075, 1076, 491,
	817, 498, 492, 496, 495, 493, 494, 1311, 2744, 817,
	1128, 1332, 2743, 2692, 2693, 1548, 605, 2724, 736, 741,
	742, 1285, 1148, 1147, 1144, 698, 2701, 819, 820, 821,
	818, 2663, 1165, 1687, 2621, 151, 998, 1353, 1083, 1357,
	1333, 1359, 1360, 1275, 1170, 1259, 151, 1262, 2616, 643,
	1337, 2292, 1369, 500, 1341, 1277, 1083, 1344, 1220, 962,
	1055, 1577, 1068, 2751, 2738, 403, 1284, 2572, 1286, 2571,
	2568, 1336, 1636, 1156, 1215, 1216, 1548, 1208, 2567, 1476,
	1548, 2703, 2566, 497, 1391, 1548, 2382, 819, 820, 821,
	818, 2565, 1397, 1397, 2702, 1055, 1055, 2228, 1055, 2664,
	2096, 151, 2543, 1353, 1353, 1395, 1352, 1083, 1438, 1450,
	2542, 2417, 1977, 1323, 1324, 2279, 2543, 1358, 1261, 601,
	1980, 1083, 1011, 1350, 1314, 1853, 1317, 1318, 1497, 1686,
	502, 101, 1576, 1852, 1364, 2573, 1157, 1705, 2543, 1361,
	1362, 1363, 2077, 1287, 779, 780, 2543, 151, 1353, 1083,
	2543, 1488, 151, 151, 1491, 1844, 1929, 1493, 1337, 2543,
	1927, 1499, 1720, 1593, 1337, 1337, 1384, 1578, 1276, 1276,
	1518, 1529, 1434, 1435, 393, 1276, 1276, 101, 2543, 1819,
	1525, 1390, 1925, 2280, 1393, 1394, 738, 739, 740, 1403,
	1399, 819, 820, 821, 818, 1461, 1380, 1356, 1382, 1383,
	1010, 1340, 1306, 1377, 1369, 1328, 1923, 1331, 1083, 1537,
	1792, 1388, 1385, 1334, 1910, 1374, 780, 1485, 1386, 1387,
	1866, 1012, 1848, 1014, 1930, 1842, 1840, 1487, 1928, 1502,
	1466, 1372, 1373, 1978, 1835, 1484, 2158, 1349, 1489, 1490,
	1484, 1484, 748, 1365, 1366, 1704, 1531, 1389, 1519, 1495,
	1924, 1376, 1634, 1606, 1605, 1596, 1381, 782, 1587, 1586,
	1129, 960, 1560, 863, 1585, 768, 1356, 1400, 748, 1401,
	1547, 1402, 1133, 720, 1924, 1803, 834, 101, 2232, 2121,
	2733, 635, 817, 1003, 1513, 2721, 1398, 1004, 817, 2638,
	1705, 1513, 1407, 1836, 1841, 2223, 1437, 1439, 1747, 2604,
	1265, 1264, 1836, 2293, 2480, 1462, 1223, 1570, 1168, 2374,
	1574, 1474, 1475, 1705, 2372, 1070, 2284, 1471, 1472, 1473,
	1633, 817, 817, 817, 1873, 1482, 817, 817, 719, 1050,
	1011, 1052, 817, 1056, 1057, 719, 1486, 2281, 1548, 1351,
	1134, 1603, 2605, 748, 1503, 1564, 1565, 2481, 1610, 43,
	1584, 2132, 2375, 2049, 2224, 1072, 1522, 2373, 1591, 1839,
	1520, 1523, 1527, 1524, 1528, 1810, 1073, 757, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1604, 818, 1106, 1607,
	1608, 1609, 1532, 2405, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1296, 1223, 1622, 1573, 1069, 2225, 459, 755,
	1680, 842, 843, 835, 836, 837, 838, 839, 840, 841,
	834, 1568, 151, 151, 151, 690, 1702, 821, 818, 2404,
	719, 1648, 2102, 1559, 2007, 2006, 1709, 1055, 1897, 1012,
	2001, 2386, 1561, 2759, 1996, 2747, 1713, 2709, 1214, 1562,
	1563, 1280, 1572, 1208, 837, 838, 839, 840, 841, 834,
	1055, 2718, 1281, 1211, 1213, 1210, 755, 1212, 1706, 1745,
	833, 832, 842, 843, 835, 836, 837, 838, 839, 840,
	841, 834, 1748, 2704, 1751, 1752, 1753, 1754, 1726, 1600,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 2654, 2717, 1796, 1796, 1450, 1796,
	1694, 1695, 1696, 2461, 819, 820, 821, 818, 1723, 835,
	836, 837, 838, 839, 840, 841, 834, 2629, 1681, 2606,
	819, 820, 821, 818, 1712, 2556, 1711, 1083, 151, 1875,
	1620, 101, 101, 720, 2354, 1714, 1715, 2516, 2040, 1629,
	1640, 1641, 2462, 755, 454, 2486, 1111, 456, 1450, 2038,
	2483, 1825, 455, 1827, 2036, 2482, 1749, 2376, 1337, 1337,
	1337, 2353, 1642, 2203, 1800, 1648, 2179, 1798, 2178, 1802,
	2117, 1722, 1717, 2355, 2024, 1718, 1688, 2039, 2052, 2023,
	1846, 1815, 1110, 1537, 1716, 1581, 2026, 2022, 2037, 1014,
	1083, 2019, 1083, 2035, 1083, 819, 820, 821, 818, 755,
	1710, 2013, 850, 825, 826, 827, 828, 829, 830, 831,
	823, 2010, 2009, 1719, 1824, 1632, 1089, 819, 820, 821,
	818, 1860, 1721, 1631, 1630, 2025, 1288, 1289, 1083, 1891,
	1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1626, 1822, 1898, 1625, 1856, 2151, 2608, 1083,
	1130, 1776, 1829, 979, 2189, 2598, 2679, 2441, 719, 2675,
	1874, 819, 820, 821, 818, 2639, 2576, 2540, 1892, 1893,
	2517, 819, 820, 821, 818, 1589, 1895, 1896, 819, 820,
	821, 818, 1081, 2471, 1816, 2447, 2439, 2437, 1902, 1901,
	2659, 1890, 2150, 2421, 1823, 2419, 2045, 1821, 2388, 1877,
	2352, 2351, 2348, 1081, 2339, 1811, 1812, 1813, 819, 820,
	821, 818, 1899, 1857, 2333, 819, 820, 821, 818, 1575,
	1337, 1864, 2287, 1933, 1934, 1344, 2285, 1871, 1588, 2275,
	1849, 2274, 1900, 2558, 2183, 2177, 1847, 1083, 969, 1854,
	1957, 1931, 2128, 2089, 1353, 2027, 1946, 2020, 2748, 1168,
	1976, 819, 820, 821, 818, 2016, 1982, 1867, 1868, 2446,
	2015, 2014, 1635, 1906, 547, 546, 2529, 1628, 1911, 1504,
	1346, 1991, 1941, 1881, 1131, 891, 819, 820, 821, 818,
	1995, 887, 819, 820, 821, 818, 886, 864, 744, 2369,
	2003, 2004, 2005, 2368, 2366, 1870, 2008, 833, 832, 842,
	843, 835, 836, 837, 838, 839, 840, 841, 834, 2343,
	1796, 2011, 2012, 1967, 2342, 2338, 2325, 2017, 2018, 2311,
	2041, 145, 1973, 2310, 133, 111, 2233, 1935, 1932, 1353,
	755, 1450, 1450, 1450, 1450, 2047, 1983, 2156, 1974, 1323,
	1324, 2149, 755, 1450, 2141, 2136, 1796, 1966, 1092, 2093,
	1993, 1939, 2060, 393, 1318, 1926, 31, 1922, 1921, 1083,
	1611, 1985, 1601, 1599, 2060, 1987, 1998, 1595, 1998, 1594,
	151, 151, 1955, 1592, 1583, 1580, 101, 1579, 142, 1999,
	101, 2730, 1305, 1975, 1279, 1981, 1278, 1276, 1269, 1276,
	19, 101, 2112, 145, 8, 2116, 1356, 1095, 2073, 1093,
	101, 1083, 1990, 2772, 2123, 30, 1984, 1986, 1994, 2000,
	2732, 6, 2726, 1988, 1989, 7, 2716, 2713, 2711, 43,
	2628, 1337, 2574, 883, 1313, 1328, 1337, 1331, 2021, 2502,
	833, 832, 842, 843, 835, 836, 837, 838, 839, 840,
	841, 834, 1336, 2490, 2487, 2046, 2429, 2111, 2050, 2427,
	142, 2061, 2062, 2063, 2064, 2412, 2411, 2410, 2091, 2092,
	2407, 2075, 2135, 2109, 2076, 605, 2074, 2072, 2401, 2115,
	2361, 1322, 2090, 1315, 2144, 1001, 2146, 2042, 2087, 2120,
	2002, 2085, 1970, 1969, 2155, 1968, 2125, 1327, 2107, 1330,
	1319, 755, 2414, 2105, 2097, 2114, 2103, 2192, 1920, 2110,
	2336, 1834, 884, 2108, 1809, 1771, 1703, 2207, 2133, 151,
	2119, 1209, 142, 1648, 1492, 819, 820, 821, 818, 755,
	755, 755, 1348, 819, 820, 821, 818, 2134, 1450, 1702,
	2154, 2231, 1320, 1153, 1119, 2140, 963, 2235, 911, 910,
	909, 1726, 1726, 1726, 2147, 2148, 908, 2264, 2266, 907,
	2264, 2264, 906, 819, 820, 821, 818, 2271, 905, 904,
	2161, 2145, 1083, 1083, 2162, 2163, 2164, 2165, 903, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2758, 2153, 902,
	901, 900, 2185, 899, 2180, 898, 2142, 2143, 897, 2270,
	896, 895, 894, 151, 2229, 2187, 890, 2210, 2192, 2408,
	2728, 819, 820, 821, 818, 2152, 1353, 1353, 2261, 2265,
	2211, 2212, 2230, 2219, 2220, 2226, 1081, 1081, 1919, 1966,
	889, 888, 885, 880, 879, 2272, 2273, 877, 819, 820,
	821, 818, 876, 2234, 875, 874, 873, 2236, 2237, 2267,
	2268, 819, 820, 821, 818, 2239, 872, 1891, 2269, 833,
	832, 842, 843, 835, 836, 837, 838, 839, 840, 841,
	834, 871, 631, 870, 869, 868, 867, 866, 2289, 2290,
	1843, 1918, 862, 861, 2657, 1917, 784, 1708, 2283, 2278,
	151, 1484, 2612, 2286, 2282, 1916, 2238, 2296, 2297, 1449,
	1915, 1691, 772, 2300, 819, 820, 821, 818, 819, 820,
	821, 818, 1914, 2299, 2304, 1958, 1820, 2291, 819, 820,
	821, 818, 1506, 819, 820, 821, 818, 2307, 2308, 2309,
	783, 2302, 2303, 2301, 2316, 819, 820, 821, 818, 2069,
	2067, 2066, 2326, 2065, 2070, 2068, 2181, 2182, 2335, 2327,
	2071, 1837, 1788, 1789, 83, 2337, 2328, 1913, 720, 2329,
	609, 610, 611, 612, 2332, 720, 1937, 1912, 148, 2340,
	1353, 1433, 42, 608, 101, 41, 2365, 1909, 2331, 2186,
	819, 820, 821, 818, 2362, 2363, 2364, 1796, 1450, 2379,
	819, 820, 821, 818, 1832, 633, 1307, 628, 389, 618,
	819, 820, 821, 818, 1640, 1641, 630, 629, 1861, 388,
	1083, 965, 2344, 1113, 1682, 2347, 390, 778, 2346, 391,
	2593, 151, 1094, 1992, 1942, 1698, 2432, 622, 2431, 1367,
	2266, 1347, 2360, 1265, 1264, 1908, 2359, 2381, 832, 842,
	843, 835, 836, 837, 838, 839, 840, 841, 834, 1353,
	850, 977, 978, 755, 2378, 975, 976, 2377, 819, 820,
	821, 818, 2430, 2666, 2390, 1774, 2261, 2385, 627, 810,
	973, 974, 626, 971, 972, 2060, 1436, 2434, 616, 1049,
	1048, 2306, 621, 1526, 1005, 755, 2423, 2387, 2380, 967,
	1337, 2413, 608, 2426, 2383, 2727, 2428, 2384, 2647, 619,
	2635, 2418, 2420, 2633, 2455, 2601, 1907, 2060, 2586, 2406,
	2433, 2425, 2424, 1903, 609, 610, 611, 612, 2422, 1894,
	617, 2313, 755, 1083, 1083, 2585, 2583, 608, 755, 819,
	820, 821, 818, 2575, 634, 2513, 819, 820, 821, 818,
	1872, 2442, 819, 820, 821, 818, 2512, 2438, 2341, 2323,
	1726, 2322, 2314, 970, 2095, 1371, 2661, 2660, 620, 2118,
	2456, 1693, 1582, 819, 820, 821, 818, 769, 755, 1219,
	2660, 755, 755, 755, 2470, 2661, 2403, 1081, 2390, 2477,
	2474, 2324, 2476, 1018, 50, 2381, 2469, 1478, 1369, 1087,
	2510, 1, 819, 820, 821, 818, 1779, 1345, 613, 2491,
	2078, 2079, 2499, 2500, 2501, 2448, 2305, 2081, 2488, 1544,
	1772, 1683, 2507, 2498, 2206, 996, 636, 1271, 2537, 1784,
	1787, 1788, 1789, 1785, 1138, 1786, 1790, 735, 632, 764,
	2508, 1135, 763, 761, 1221, 1745, 2484, 2485, 1784, 1787,
	1788, 1789, 1785, 504, 1786, 1790, 1509, 2043, 2534, 2509,
	2665, 755, 2698, 2627, 2668, 1151, 2535, 488, 2577, 2521,
	2631, 2523, 2444, 755, 1549, 2545, 2544, 815, 2104, 655,
	540, 2549, 2548, 515, 878, 1121, 1114, 2159, 737, 2557,
	514, 2358, 2564, 1951, 2559, 2550, 2560, 625, 1799, 734,
	656, 1623, 2519, 1308, 2569, 1329, 1312, 2478, 2370, 2221,
	1971, 2768, 2757, 2739, 755, 2725, 2652, 2753, 2587, 2683,
	2714, 2451, 2449, 2450, 2582, 2580, 2707, 2648, 425, 1458,
	599, 702, 2503, 2245, 1505, 2597, 426, 1707, 2534, 2640,
	2489, 623, 1690, 2596, 2622, 2625, 624, 2602, 1449, 1964,
	1963, 1190, 824, 1207, 2174, 2175, 2607, 2255, 859, 464,
	1571, 2626, 2617, 2618, 2619, 2620, 476, 1948, 2254, 2634,
	2248, 2636, 2637, 2088, 2632, 2630, 49, 2243, 48, 47,
	46, 1498, 2258, 2259, 155, 506, 154, 2624, 2244, 2646,
	2670, 486, 485, 484, 483, 482, 1783, 1781, 1780, 2672,
	1445, 2658, 2656, 2655, 1444, 1496, 1738, 1404, 2609, 2561,
	2662, 2671, 2562, 2400, 2028, 2396, 2392, 2276, 755, 2240,
	2241, 2676, 2247, 2678, 2249, 2677, 1697, 1431, 918, 914,
	916, 917, 915, 1880, 1876, 2697, 1724, 2686, 2688, 1725,
	2681, 2217, 980, 2536, 2345, 2534, 2696, 2700, 1646, 1644,
	2298, 2705, 2294, 755, 934, 2208, 1517, 1342, 1936, 1446,
	2706, 1433, 1442, 1777, 1692, 75, 74, 81, 123, 37,
	2475, 602, 32, 2672, 2723, 1174, 27, 5, 29, 28,
	14, 15, 755, 13, 755, 2671, 2722, 1142, 2762, 2729,
	12, 2731, 18, 26, 25, 24, 93, 92, 1413, 2735,
	23, 2700, 91, 755, 1174, 90, 1174, 2742, 89, 2749,
	2746, 88, 2752, 2257, 22, 1729, 11, 87, 86, 85,
	21, 80, 78, 20, 79, 1174, 76, 2756, 2737, 2763,
	77, 61, 60, 2767, 59, 72, 2766, 2710, 71, 2712,
	2251, 2775, 70, 69, 68, 2778, 67, 2763, 66, 2780,
	2781, 2779, 2767, 654, 101, 58, 922, 57, 56, 55,
	912, 54, 2250, 2252, 73, 65, 64, 63, 2734, 62,
	53, 52, 51, 109, 942, 946, 948, 950, 952, 953,
	955, 108, 959, 956, 957, 958, 107, 106, 937, 938,
	939, 940, 920, 921, 943, 105, 923, 104, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 935, 941,
	103, 33, 34, 35, 36, 119, 118, 945, 947, 949,
	951, 954, 120, 122, 121, 116, 114, 117, 115, 113,
	44, 1449, 1449, 1449, 1449, 10, 1417, 2260, 17, 2,
	0, 0, 0, 1449, 0, 0, 0, 1421, 0, 2246,
	0, 0, 0, 0, 936, 2256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 0, 0,
	0, 1412, 1414, 1416, 0, 1418, 1419, 1420, 1422, 1423,
	1424, 1426, 1427, 1428, 1429, 845, 101, 849, 0, 0,
	0, 0, 0, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 846, 848, 844, 0, 847, 833, 832, 842,
	843, 835, 836, 837, 838, 839, 840, 841, 834, 0,
	0, 0, 0, 1432, 326, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 833, 832, 842, 843,
	835, 836, 837, 838, 839, 840, 841, 834, 478, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 513,
	1430, 0, 318, 272, 0, 2157, 0, 0, 570, 578,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	471, 0, 0, 503, 547, 546, 490, 499, 0, 0,
	214, 153, 491, 101, 498, 492, 496, 495, 493, 494,
	0, 562, 0, 0, 0, 0, 1425, 0, 462, 475,
	2531, 479, 0, 1415, 833, 832, 842, 843, 835, 836,
	837, 838, 839, 840, 841, 834, 0, 0, 1449, 0,
	0, 0, 0, 0, 472, 473, 0, 0, 0, 0,
	523, 0, 474, 101, 0, 518, 500, 501, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 497, 521, 525, 226,
	584, 519, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 585, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 944, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 349,
	0, 0, 568, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 520, 0, 308, 290, 581, 463, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 566, 286, 0, 0, 580, 561, 563, 564,
	567, 571, 572, 573, 574, 575, 577, 579, 583, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 1449, 202,
	374, 0, 2532, 0, 0, 1869, 2533, 0, 582, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 524, 276,
	277, 278, 279, 569, 0, 219, 373, 301, 833, 832,
	842, 843, 835, 836, 837, 838, 839, 840, 841, 834,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 1569, 0, 591, 565, 590,
	592, 593, 589, 594, 595, 576, 481, 0, 528, 587,
	586, 588, 0, 0, 0, 0, 0, 0, 833, 832,
	842, 843, 835, 836, 837, 838, 839, 840, 841, 834,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 554, 533, 534, 535, 480, 536, 531, 532, 555,
	526, 551, 552, 505, 529, 537, 550, 538, 553, 556,
	557, 596, 597, 544, 598, 541, 558, 549, 548, 539,
	527, 559, 560, 512, 507, 542, 543, 530, 545, 508,
	509, 510, 511, 326, 522, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 513, 0,
	0, 318, 272, 0, 0, 0, 0, 570, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 503, 547, 546, 490, 499, 0, 0, 214,
	153, 491, 0, 498, 492, 496, 495, 493, 494, 0,
	562, 0, 0, 0, 0, 0, 0, 462, 475, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 473, 0, 0, 0, 0, 523,
	0, 474, 0, 0, 518, 500, 501, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 497, 521, 525, 226, 584,
	519, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 585, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 349, 0,
	0, 568, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 520, 0, 308, 290, 581, 463, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 1273, 1272, 1274, 361, 240, 197, 198,
	344, 566, 286, 0, 0, 580, 561, 563, 564, 567,
	571, 572, 573, 574, 575, 577, 579, 583, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 524, 276, 277,
	278, 279, 569, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 591, 565, 590, 592,
	593, 589, 594, 595, 576, 481, 0, 528, 587, 586,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	554, 533, 534, 535, 480, 536, 531, 532, 555, 526,
	551, 552, 505, 529, 537, 550, 538, 553, 556, 557,
	596, 597, 544, 598, 541, 558, 549, 548, 539, 527,
	559, 560, 512, 507, 542, 543, 530, 545, 508, 509,
	510, 511, 326, 522, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 513, 0, 0,
	318, 272, 0, 0, 0, 0, 570, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 503, 547, 546, 490, 499, 0, 0, 214, 153,
	491, 0, 498, 492, 496, 495, 493, 494, 0, 562,
	0, 0, 0, 0, 0, 0, 462, 475, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 473, 0, 0, 0, 0, 523, 0,
	474, 0, 0, 518, 500, 501, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 497, 521, 525, 226, 584, 519,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 585, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 349, 0, 0,
	568, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 520, 0, 308, 290, 581, 463, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	566, 286, 0, 0, 580, 561, 563, 564, 567, 571,
	572, 573, 574, 575, 577, 579, 583, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	2532, 0, 0, 0, 2533, 0, 582, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 524, 276, 277, 278,
	279, 569, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 591, 565, 590, 592, 593,
	589, 594, 595, 576, 481, 0, 528, 587, 586, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 554,
	533, 534, 535, 480, 536, 531, 532, 555, 526, 551,
	552, 505, 529, 537, 550, 538, 553, 556, 557, 596,
	597, 544, 598, 541, 558, 549, 548, 539, 527, 559,
	560, 512, 507, 542, 543, 530, 545, 508, 509, 510,
	511, 326, 522, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 0, 233,
	1338, 0, 258, 0, 0, 0, 513, 0, 0, 318,
	272, 0, 0, 0, 0, 570, 578, 0, 0, 0,
	0, 0, 0, 0, 1468, 0, 0, 471, 0, 0,
	503, 547, 546, 490, 499, 0, 0, 214, 153, 491,
	0, 498, 492, 496, 495, 493, 494, 0, 562, 0,
	0, 0, 0, 0, 0, 462, 475, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 473, 0, 0, 0, 0, 523, 0, 474,
	0, 0, 1469, 500, 501, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 497, 521, 525, 226, 584, 519, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 585, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 349, 0, 0, 568,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	520, 0, 308, 290, 581, 463, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 566,
	286, 0, 0, 580, 561, 563, 564, 567, 571, 572,
	573, 574, 575, 577, 579, 583, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 524, 276, 277, 278, 279,
	569, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 591, 565, 590, 592, 593, 589,
	594, 595, 576, 481, 0, 528, 587, 586, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 554, 533,
	534, 535, 480, 536, 531, 532, 555, 526, 551, 552,
	505, 529, 537, 550, 538, 553, 556, 557, 596, 597,
	544, 598, 541, 558, 549, 548, 539, 527, 559, 560,
	512, 507, 542, 543, 530, 545, 508, 509, 510, 511,
	145, 326, 522, 357, 358, 359, 380, 343, 0, 230,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 853, 0, 0, 318,
	272, 0, 0, 0, 0, 570, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	503, 547, 546, 490, 499, 0, 0, 214, 153, 491,
	0, 498, 492, 496, 495, 493, 494, 0, 562, 0,
	0, 0, 0, 0, 0, 462, 475, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 473, 0, 0, 0, 0, 523, 0, 474,
	0, 0, 518, 500, 501, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 497, 521, 525, 226, 584, 519, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 585, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 349, 0, 0, 568,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	520, 0, 308, 290, 581, 463, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 566,
	286, 0, 0, 580, 561, 563, 564, 567, 571, 572,
	573, 574, 575, 577, 579, 583, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 524, 276, 277, 278, 279,
	569, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 591, 565, 590, 592, 593, 589,
	594, 595, 576, 481, 0, 528, 587, 586, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 112, 300, 238, 554, 533,
	534, 535, 480, 536, 531, 532, 555, 526, 551, 552,
	505, 529, 537, 550, 538, 553, 556, 557, 596, 597,
	544, 598, 541, 558, 549, 548, 539, 527, 559, 560,
	512, 507, 542, 543, 530, 545, 508, 509, 510, 511,
	326, 522, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 0, 233, 2736,
	0, 258, 0, 0, 0, 513, 0, 0, 318, 272,
	0, 0, 0, 0, 570, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 503,
	547, 546, 490, 499, 0, 0, 214, 153, 491, 0,
	498, 492, 496, 495, 493, 494, 0, 562, 0, 0,
	0, 0, 0, 0, 462, 475, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 473, 0, 0, 0, 0, 523, 0, 474, 0,
	0, 518, 500, 501, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 497, 521, 525, 226, 584, 519, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 585, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 349, 0, 0, 568, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 520,
	0, 308, 290, 581, 463, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 566, 286,
	0, 0, 580, 561, 563, 564, 567, 571, 572, 573,
	574, 575, 577, 579, 583, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 524, 276, 277, 278, 279, 569,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 591, 565, 590, 592, 593, 589, 594,
	595, 576, 481, 0, 528, 587, 586, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 554, 533, 534,
	535, 480, 536, 531, 532, 555, 526, 551, 552, 505,
	529, 537, 550, 538, 553, 556, 557, 596, 597, 544,
	598, 541, 558, 549, 548, 539, 527, 559, 560, 512,
	507, 542, 543, 530, 545, 508, 509, 510, 511, 326,
	522, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 0, 233, 1338, 0,
	258, 0, 0, 0, 513, 0, 0, 318, 272, 0,
	0, 0, 0, 570, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 503, 547,
	546, 490, 499, 0, 0, 214, 153, 491, 0, 498,
	492, 496, 495, 493, 494, 0, 562, 0, 0, 0,
	0, 0, 0, 462, 475, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	473, 0, 0, 0, 0, 523, 0, 474, 0, 0,
	518, 500, 501, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 497, 521, 525, 226, 584, 519, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 585, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 349, 0, 0, 568, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 520, 0,
	308, 290, 581, 463, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 566, 286, 0,
	0, 580, 561, 563, 564, 567, 571, 572, 573, 574,
	575, 577, 579, 583, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 524, 276, 277, 278, 279, 569, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 591, 565, 590, 592, 593, 589, 594, 595,
	576, 481, 0, 528, 587, 586, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 554, 533, 534, 535,
	480, 536, 531, 532, 555, 526, 551, 552, 505, 529,
	537, 550, 538, 553, 556, 557, 596, 597, 544, 598,
	541, 558, 549, 548, 539, 527, 559, 560, 512, 507,
	542, 543, 530, 545, 508, 509, 510, 511, 326, 522,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 513, 0, 0, 318, 272, 0, 0,
	0, 0, 570, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 503, 547, 546,
	490, 499, 0, 0, 214, 153, 491, 0, 498, 492,
	496, 495, 493, 494, 0, 562, 0, 0, 0, 0,
	0, 0, 462, 475, 0, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 473,
	1109, 0, 0, 0, 523, 0, 474, 0, 0, 518,
	500, 501, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	497, 521, 525, 226, 584, 519, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 585, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 349, 0, 0, 568, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 520, 0, 308,
	290, 581, 463, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 566, 286, 0, 0,
	580, 561, 563, 564, 567, 571, 572, 573, 574, 575,
	577, 579, 583, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 524, 276, 277, 278, 279, 569, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 591, 565, 590, 592, 593, 589, 594, 595, 576,
	481, 0, 528, 587, 586, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 554, 533, 534, 535, 480,
	536, 531, 532, 555, 526, 551, 552, 505, 529, 537,
	550, 538, 553, 556, 557, 596, 597, 544, 598, 541,
	558, 549, 548, 539, 527, 559, 560, 512, 507, 542,
	543, 530, 545, 508, 509, 510, 511, 0, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 326, 522, 0,
	0, 1590, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 513, 0, 0, 318, 272, 0, 0, 0,
	0, 570, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 503, 547, 546, 490,
	499, 0, 0, 214, 153, 491, 0, 498, 492, 496,
	495, 493, 494, 0, 562, 0, 0, 0, 0, 0,
	0, 462, 475, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 473, 0,
	0, 0, 0, 523, 0, 474, 0, 0, 518, 500,
	501, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 497,
	521, 525, 226, 584, 519, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	585, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 349, 0, 0, 568, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 520, 0, 308, 290,
	581, 463, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 566, 286, 0, 0, 580,
	561, 563, 564, 567, 571, 572, 573, 574, 575, 577,
	579, 583, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 524, 276, 277, 278, 279, 569, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	591, 565, 590, 592, 593, 589, 594, 595, 576, 481,
	0, 528, 587, 586, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 554, 533, 534, 535, 480, 536,
	531, 532, 555, 526, 551, 552, 505, 529, 537, 550,
	538, 553, 556, 557, 596, 597, 544, 598, 541, 558,
	549, 548, 539, 527, 559, 560, 512, 507, 542, 543,
	530, 545, 508, 509, 510, 511, 326, 522, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 513, 0, 0, 318, 272, 0, 0, 0, 0,
	570, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 503, 547, 546, 490, 499,
	0, 0, 214, 153, 491, 0, 498, 492, 496, 495,
	493, 494, 0, 562, 0, 0, 0, 0, 0, 0,
	462, 475, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 473, 0, 0,
	0, 0, 523, 0, 474, 0, 0, 518, 500, 501,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 497, 521,
	525, 226, 584, 519, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 585,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 349, 0, 0, 568, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 520, 0, 308, 290, 581,
	463, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 566, 286, 0, 0, 580, 561,
	563, 564, 567, 571, 572, 573, 574, 575, 577, 579,
	583, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	524, 276, 277, 278, 279, 569, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 591,
	565, 590, 592, 593, 589, 594, 595, 576, 481, 0,
	528, 587, 586, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 554, 533, 534, 535, 480, 536, 531,
	532, 555, 526, 551, 552, 505, 529, 537, 550, 538,
	553, 556, 557, 596, 597, 544, 598, 541, 558, 549,
	548, 539, 527, 559, 560, 512, 507, 542, 543, 530,
	545, 508, 509, 510, 511, 326, 522, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 1191, 0, 0, 0, 478,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	513, 0, 0, 318, 272, 0, 0, 0, 0, 570,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 503, 547, 546, 490, 499, 0,
	0, 214, 153, 491, 0, 498, 492, 496, 495, 493,
	494, 0, 562, 0, 0, 0, 0, 0, 0, 0,
	475, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 473, 0, 0, 0,
	0, 523, 0, 474, 0, 0, 518, 500, 501, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 497, 521, 525,
	226, 584, 519, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 585, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	349, 0, 0, 568, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 520, 0, 308, 290, 581, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 1192, 1193, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 566, 286, 0, 0, 580, 561, 563,
	564, 567, 571, 572, 573, 574, 575, 577, 579, 583,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 524,
	276, 277, 278, 279, 569, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 591, 565,
	590, 592, 593, 589, 594, 595, 576, 481, 0, 528,
	587, 586, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 554, 533, 534, 535, 480, 536, 531, 532,
	555, 526, 551, 552, 505, 529, 537, 550, 538, 553,
	556, 557, 596, 597, 544, 598, 541, 558, 549, 548,
	539, 527, 559, 560, 512, 507, 542, 543, 530, 545,
	508, 509, 510, 511, 326, 522, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 513,
	0, 0, 318, 272, 0, 0, 0, 0, 570, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 547, 546, 490, 499, 0, 0,
	214, 153, 491, 0, 498, 492, 496, 495, 493, 494,
	0, 562, 0, 0, 0, 0, 0, 0, 462, 475,
	0, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 473, 0, 0, 0, 0,
	523, 0, 474, 0, 0, 518, 500, 501, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 497, 521, 525, 226,
	584, 519, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 585, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 349,
	0, 0, 568, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 520, 0, 308, 290, 581, 463, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 566, 286, 0, 0, 580, 561, 563, 564,
	567, 571, 572, 573, 574, 575, 577, 579, 583, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 524, 276,
	277, 278, 279, 569, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 591, 565, 590,
	592, 593, 589, 594, 595, 576, 481, 0, 528, 587,
	586, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 554, 533, 534, 535, 480, 536, 531, 532, 555,
	526, 551, 552, 505, 529, 537, 550, 538, 553, 556,
	557, 596, 597, 544, 598, 541, 558, 549, 548, 539,
	527, 559, 560, 512, 507, 542, 543, 530, 545, 508,
	509, 510, 511, 326, 522, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 513, 0,
	0, 318, 272, 0, 0, 0, 0, 570, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 503, 547, 546, 490, 499, 0, 0, 214,
	153, 491, 0, 498, 492, 496, 495, 493, 494, 0,
	562, 0, 0, 0, 0, 0, 0, 0, 475, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 473, 0, 0, 0, 0, 523,
	0, 474, 0, 0, 518, 500, 501, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 497, 521, 525, 226, 584,
	519, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 585, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 349, 0,
	0, 568, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 520, 0, 308, 290, 581, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 566, 286, 0, 0, 580, 561, 563, 564, 567,
	571, 572, 573, 574, 575, 577, 579, 583, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 524, 276, 277,
	278, 279, 569, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 591, 565, 590, 592,
	593, 589, 594, 595, 576, 481, 0, 528, 587, 586,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	554, 533, 534, 535, 480, 536, 531, 532, 555, 526,
	551, 552, 505, 529, 537, 550, 538, 553, 556, 557,
	596, 597, 544, 598, 541, 558, 549, 548, 539, 527,
	559, 560, 512, 507, 542, 543, 530, 545, 508, 509,
	510, 511, 0, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 145, 326, 39, 133, 111, 0, 0, 0,
	0, 0, 0, 0, 288, 397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 398, 400, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 40, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 112, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 922, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 0, 1679,
	1676, 1677, 1678, 285, 0, 1663, 1664, 1665, 1666, 920,
	1649, 1669, 0, 1650, 284, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1667, 296, 262, 297,
	249, 274, 273, 275, 945, 947, 949, 951, 954, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 1662, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 944, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 1733,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 349, 0, 0, 0,
	1730, 0, 1729, 322, 1731, 1734, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 1735, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 1501, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	819, 820, 821, 818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 701, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 709,
	710, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 683, 347, 209, 682,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 699, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 700, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 703, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 711, 706, 707,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 145, 326,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 99, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 1521, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 112, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 145, 326,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 99, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 1512, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 112, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 145, 326,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 99, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1447, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 112, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 709, 710,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 683, 347, 209, 682, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 711, 706, 707, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 2053, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 2055, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 1086, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 1084, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 1080, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 1084, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2667, 0, 152, 547, 0, 0, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 1084, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2391, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 1084, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 1797, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 1814,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 1084, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2745, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 547, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2682, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 2623, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2468, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 2511, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1447, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 2191, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	1084, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 1797,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 1826, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 0, 0, 0, 357, 358, 359, 380,
	343, 326, 230, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 1084, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 1375, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 416, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 417, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 457, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 934, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 934, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 1248, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 922, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 942, 946, 948, 950, 952, 953, 955, 645, 959,
	956, 957, 958, 0, 0, 937, 938, 939, 940, 920,
	921, 943, 0, 923, 0, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 935, 941, 0, 0, 0,
	922, 0, 0, 0, 945, 947, 949, 951, 954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 942, 946,
	948, 950, 952, 953, 955, 0, 959, 956, 957, 958,
	681, 0, 937, 938, 939, 940, 920, 921, 943, 0,
	923, 936, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 935, 941, 0, 0, 0, 0, 0, 0,
	0, 945, 947, 949, 951, 954, 0, 0, 819, 820,
	821, 818, 0, 0, 0, 1244, 0, 0, 0, 1241,
	0, 0, 0, 1243, 1240, 1242, 1246, 1247, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	683, 0, 0, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 668, 0, 0,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	1879, 0, 0, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1433, 0,
	0, 0, 0, 0, 0, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1251, 1252, 1253, 1254,
	1255, 1256, 1249, 1250, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 666, 0, 1413, 0, 1431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	676, 1433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 1244, 0, 0, 0,
	1241, 0, 0, 671, 1243, 1240, 1242, 1246, 1247, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 1413, 1431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 944, 662, 1433, 660, 664, 680, 0, 0, 0,
	661, 658, 657, 0, 663, 648, 649, 650, 651, 652,
	653, 0, 678, 679, 0, 1406, 0, 1744, 1405, 0,
	0, 0, 0, 1417, 674, 675, 0, 0, 0, 0,
	1413, 0, 0, 0, 1421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 1412, 1414,
	1416, 669, 1418, 1419, 1420, 1422, 1423, 1424, 1426, 1427,
	1428, 1429, 0, 0, 0, 0, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1251, 1252, 1253,
	1254, 1255, 1256, 1249, 1250, 0, 1417, 0, 436, 0,
	435, 442, 432, 0, 0, 0, 0, 1421, 0, 0,
	1432, 0, 439, 440, 0, 441, 445, 0, 0, 427,
	0, 0, 0, 0, 0, 0, 0, 1410, 0, 450,
	0, 1412, 1414, 1416, 0, 1418, 1419, 1420, 1422, 1423,
	1424, 1426, 1427, 1428, 1429, 0, 0, 1430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 0,
	0, 456, 0, 0, 1409, 0, 455, 436, 1417, 435,
	442, 432, 0, 0, 0, 0, 0, 0, 0, 1421,
	0, 439, 440, 1432, 441, 445, 0, 0, 427, 0,
	0, 0, 0, 1425, 0, 0, 0, 0, 450, 1410,
	1415, 0, 0, 1412, 1414, 1416, 0, 1418, 1419, 1420,
	1422, 1423, 1424, 1426, 1427, 1428, 1429, 0, 0, 0,
	1430, 0, 0, 0, 0, 0, 0, 454, 0, 436,
	456, 435, 442, 432, 0, 455, 0, 1409, 0, 0,
	0, 0, 0, 439, 440, 0, 441, 445, 0, 0,
	427, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	450, 0, 0, 0, 0, 0, 1425, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1430, 428, 430, 429, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 431,
	0, 0, 0, 422, 0, 0, 0, 0, 1425, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 430, 429, 0, 0, 0, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 453, 0, 0, 0, 0, 0, 0, 431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 430, 429, 0, 433, 437,
	443, 0, 444, 446, 434, 0, 447, 448, 449, 0,
	0, 451, 452, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 437, 443,
	0, 444, 446, 0, 0, 447, 448, 449, 0, 0,
	451, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	437, 443, 0, 444, 446, 0, 0, 447, 448, 449,
	0, 0, 451, 452,
}

var yyPact = [...]int{
	305, -1000, -322, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -320, 29445,
	29445, -1000, -1000, 1761, -1000, 28926, 9712, 29964, 203, 202,
	29964, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 446, -1000, 28407, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 396, 31518, 30483, 7625, 29964, -299,
	-1000, 2348, -155, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2023, 480, 27888, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 31012, 76, 480, 605, 619, 749, 749, 11788, -62,
	-66, 2348, 263, 155, -1000, 937, 305, 1665, 373, 29964,
	-1000, 1083, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 373, -1000,
	-1000, -1000, 2348, 2348, -1000, 29964, 29964, 15, 1213, -1000,
	253, 238, 267, 1080, -1000, -1000, -1000, -1000, -1000, 2392,
	-1000, 29964, 29964, 2077, 29964, -1000, 1424, 342, 31587, 2222,
	1030, 478, 2106, -1000, -1000, 2059, -1000, 118, 113, 142,
	362, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 95, -1000,
	2283, -1000, -1000, 110, -1000, -1000, 91, -1000, -1000, -1000,
	-79, -1000, -1000, -1000, -1000, -1000, -1000, -166, -1000, -1000,
	632, 1476, 7625, -1000, 1449, -1000, 2820, -1000, -1000, -1000,
	-1000, 5020, 9182, 9182, 9182, 9182, -1000, -1000, 1895, 7625,
	2056, 2055, -1000, -1000, -1000, -1000, -1000, 1078, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1664, 8663, -1000, 2050, 2049, 2048, 2047, 2046, 2044, 2029,
	2019, 2018, 2017, 2015, 2010, 2007, 2006, 1806, 1885, 2005,
	1663, 1658, 2004, 2003, 1979, 1652, 1806, 1806, 1975, 1974,
	1973, 1971, 1968, 1966, 1964, 1963, 1962, 1951, 1942, 1941,
	1935, 1932, 1929, 1923, 1922, 1921, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2654,
	-1000, 1076, 873, -1000, 1919, 2213, 2308, 1833, 2373, 2282,
	2279, 2264, 2260, 1524, -1000, -1000, 29964, 29964, 394, 394,
	394, 394, 394, 397, 394, 441, 433, 431, 394, -1000,
	-1000, -1000, -1000, -1000, -1000, 517, -1000, -1000, -1000, -1000,
	850, 29964, -1000, 1858, 1121, 2301, 359, 353, 240, -1000,
	1265, 1265, 1265, 1265, 1121, 246, 349, 2308, 2308, -63,
	1265, -113, 1121, 1121, -113, 1121, 1121, 1121, 83, -1000,
	-1000, -1000, 1265, 346, 1265, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2290, 2289, 396, 29964, 41, 29964, 396, 396,
	404, -1000, -188, -1000, -1000, 720, -1000, 534, -1000, 1424,
	332, 324, 876, 1242, -1000, 1201, 29964, 29964, 29964, 1201,
	1201, 15424, 14905, -1000, 29964, -1000, 2308, 1833, -1000, 1781,
	2194, 1779, 1833, 396, 396, 396, 396, 396, 396, 396,
	396, 29964, 29964, 396, 6577, 6577, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2215, 261, 1917, -1000, 29964, 254,
	2308, 2213, 2308, -1000, -1000, 1075, 1521, 1651, -1000, -1000,
	253, 1154, -1000, 755, -1000, -1000, -1000, -1000, 29964, 243,
	-1000, -1000, 1643, 1916, -1000, 393, 959, 1071, -1000, 120,
	31649, 24247, 1424, 24247, 29964, -1000, -1000, -1000, -1000, -1000,
	-1000, -84, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 117, -1000, 7625, 7625, 7625,
	7625, 7625, -1000, 440, 8144, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9182, 9182, 9182, 9182, 9182, 9182, 9182, 9182,
	9182, 9182, 9182, 9182, 1894, 1291, 9182, 9182, 9182, 9182,
	2194, 2341, 872, 163, -1000, -1000, -1000, -1000, -1000, 1157,
	1476, 7625, 7625, 29964, -1000, 31047, 7625, 7625, 30826, 7625,
	2242, 7625, 7625, 7625, 1770, 3462, 29964, 7625, -1000, 1768,
	1766, -1000, -1000, 1323, 7625, 7625, -1000, -1000, 7625, 9182,
	7625, -1000, -1000, -1000, 75, 2242, 2242, 7625, 7625, 2242,
	2242, 2242, 1219, 2242, 2242, 2242, 2242, 2242, 2242, 2242,
	2242, 1764, 29964, 2196, 101, -1000, -1000, -1000, 1807, -1000,
	1856, 1856, 1856, 1856, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1873, 1915, -1000, -1000, 1854, 1854, 1854,
	1807, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1870, 1870, 1872, 1870,
	29964, 2308, -299, 6058, -1000, -304, 2213, 7625, -1000, -1000,
	7625, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1647,
	2237, -1000, 1905, 1052, 29964, 1194, 29964, 24247, 29964, 1424,
	29964, 29964, 394, 394, 394, 29964, 404, -1000, 29964, 850,
	2235, 29964, 2379, 9182, 9182, 27369, 1265, 1121, -1000, 29964,
	-1000, -1000, -1000, 1265, 29964, 1265, 1265, 2379, 1265, -1000,
	-1000, -1000, 1121, 1121, -1000, -1000, -1000, -1000, 1265, 1265,
	-1000, -1000, 2379, 29964, -97, 2379, 2379, -94, -1000, -1000,
	-1000, 29964, 29964, 394, 29964, 29964, -1000, 29964, -1000, -1000,
	29964, 31238, 29964, 29964, 2286, -1000, 24247, 29964, 22171, -1000,
	-156, 599, 550, 544, -1000, -1000, 391, 399, 13867, 344,
	24247, 4500, -1000, -1000, 1201, 1201, 1201, 4500, 4500, 898,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 769, -1000, 88,
	2213, -1000, -1000, -1000, -1000, -1000, 29964, 29964, 24247, 1424,
	29964, 29964, 29964, 29964, -1000, 1897, 29964, 1063, -1000, -1000,
	11269, 1044, 1063, 1646, 2098, -300, -1000, 12828, 29964, 29964,
	-1000, -1000, -300, -1000, 12308, 29964, 2213, -1000, 2213, 29964,
	-1000, 2300, -1000, 253, 191, -1000, -1000, -1000, -1000, -1000,
	-1000, 986, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 737, -1000, 29964, -1000, -1000, 120, 24247, 25285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 108, -1000, -1000, 149,
	-1000, 416, 42, 1152, -1000, -1000, 52, 140, 462, 1476,
	-1000, 1274, 1274, 1233, -1000, 456, -1000, -1000, -1000, -1000,
	1895, -1000, -1000, -1000, 1232, 2160, -1000, 1271, 1271, 1098,
	1098, 1098, 1098, 1098, 1338, 1338, -1000, -1000, -1000, 5020,
	1894, 9182, 9182, 9182, 9182, 380, 380, 2849, 3291, -1000,
	7625, 1244, -1000, 7625, 1635, 946, 982, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1759, 632, 1757,
	1520, 2387, 1756, 7625, -1000, -1000, 1146, 1141, 1140, -1000,
	1610, 7106, -1000, -1000, -1000, 1755, 978, 1751, -1000, -1000,
	-1000, 1749, 1137, 814, 1745, 1293, 1744, 735, 7625, 7625,
	1136, 1135, 7625, 7625, 7625, 7625, 1742, 7625, 7625, 7625,
	7625, 7625, 7625, 7625, 7625, -56, -1000, 7625, 71, -1000,
	-1000, -1000, -1000, 1516, -1000, 1513, -1000, -1000, -1000, 1644,
	1644, -1000, 1495, -1000, -1000, -1000, -1000, 1494, -1000, -1000,
	1486, -1000, -1000, -1000, -1000, 1134, -1000, 1476, -1000, 1639,
	-1000, 886, 723, -1000, 1454, -1000, -1000, 29964, 10231, 29964,
	1858, 2219, 63, -1000, 943, -1000, 42, -176, 662, 2076,
	2386, 29964, 29964, 29964, 2231, 26850, -1000, 1889, 1127, -1000,
	-1000, 7625, -1000, -1000, 2062, 29964, 29964, 2379, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29964, 2379, 2379, 1121, 1265,
	-1000, -1000, 1265, -1000, -1000, 1265, -1000, 977, -1000, 29964,
	-1000, -1000, -1000, 1858, -1000, 10750, 669, 31311, -1000, 1144,
	1144, 610, 1144, 1144, 1144, 1144, 291, 283, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1888, -1000, 58, 2275, 151, 943, 167, 2406,
	732, -1000, -1000, -1000, -1000, 17500, 17500, 13348, 17500, -1000,
	1158, -1000, -1000, 562, 528, 703, -1000, -1000, 410, -1000,
	-1000, 662, -1000, -1000, -1000, 1887, 1211, -1000, -1000, 1885,
	-1000, 4500, 4500, 4500, -1000, -1000, 18019, 29964, -1000, -167,
	-1000, -159, -1000, 711, -1000, -1000, 717, 662, 2092, 711,
	711, -1000, 10231, -1000, 2379, 6577, -1000, 22171, -1000, -1000,
	26323, -1000, 25804, 2379, -121, -1000, 2195, 668, -1000, 1884,
	-1000, 1116, 2145, -1000, 699, -1000, 1205, 1108, -1000, 668,
	1107, 2074, 699, -1000, -1000, 970, 9, -1000, -1000, 29964,
	1643, 1104, 25285, 683, -1000, 409, 948, 940, -1000, 24247,
	102, 24247, -1000, 24247, -1000, -1000, 241, -1000, 29964, 2210,
	-1000, -1000, -1000, 1598, -326, -1000, -1000, -1000, -1000, -1000,
	1102, -1000, 380, 380, 2849, 3221, -1000, 9182, -1000, 9182,
	2312, 1172, -1000, 7625, 1379, 30881, 504, 16981, 29964, -1000,
	-1000, 7625, 7625, -1000, 2291, -1000, -1000, -1000, -1000, 7625,
	7625, 1363, -1000, 29964, -1000, -1000, -1000, -1000, 16981, -1000,
	9182, -1000, 7625, 823, 2285, -56, -56, 2278, 2207, 2149,
	1096, -56, 2139, 2129, 2084, 2072, 2067, 2057, 2053, 2000,
	-1000, 1881, 1476, -1000, -1000, 1740, 1739, 1088, -1000, 1064,
	1737, 1042, 1038, 6058, -1000, -121, 7625, 7625, 7625, 2163,
	-1000, -1000, 82, 1733, 689, -1000, -1000, -1000, 30938, 1856,
	1856, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1873, -1000, -1000, 1854, 1854, 1854, 1807, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1870, 1870, 1872, 1870,
	-1000, 2230, -1000, -71, 1144, 379, 24247, 320, -1000, 29964,
	2091, 264, 2171, 29964, 1868, 1866, 1865, 197, 30938, 29964,
	1047, -1000, 935, 305, -1000, 29964, 1476, -1000, 1424, -1000,
	1121, -1000, 2379, 1057, -1000, -1000, 2379, 1121, 1121, 1265,
	29964, -1000, 2229, -1000, -1000, -1000, 30938, 602, -1000, 29964,
	1294, 584, 394, 584, 1290, 1863, -1000, -1000, -1000, 29964,
	29964, 29964, 1285, 1284, 31383, -1000, 1483, -1000, 1482, 1144,
	1144, 1472, 1638, 1637, 1632, 1144, 1144, 1462, 1624, 24766,
	1458, 1450, 1445, 1496, 1622, 564, 1464, 1459, 1448, 29964,
	1860, 1573, -71, 1144, 146, 1199, 379, 1451, 14386, 29964,
	22171, 22171, 22171, 22171, -1000, 2130, 2128, -1000, 2127, 2126,
	2137, 29964, 22171, 1858, -1000, 24766, -1000, -1000, -1000, 2194,
	1024, 2425, 569, 7625, -1000, -1000, -1000, 522, 24247, 1620,
	344, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29964,
	29964, 1731, 2377, -1000, 687, -1000, -1000, 915, -1000, 2377,
	-43, -6, 1282, -300, 6058, 235, 29964, -300, 29964, 6058,
	-1000, 29964, 226, -300, 29964, 1441, -1000, -1000, -1000, 2384,
	24247, 1424, 1106, 23728, -1000, 98, -1000, 105, 367, 1619,
	-1000, 425, 79, -1000, 1197, 1598, -1000, -1000, -1000, 9182,
	-1000, -1000, -1000, -1000, 1476, 7625, 1727, -1000, 679, 679,
	1726, -1000, 1856, 1856, -1000, 1807, 1854, 1807, 679, 679,
	1723, -1000, 1574, 1987, -1000, 1960, 1912, 7625, -1000, 1719,
	2927, 1050, -192, -56, -1000, -1000, -1000, -56, -56, -56,
	-56, -1000, -56, -56, -56, -56, -56, -56, -56, -56,
	374, -1000, -1000, -1000, 1612, -1000, -1000, -1000, 1439, -1000,
	1437, -1000, -43, 1476, 1476, -1000, -1000, 2142, 1611, 437,
	10231, 2179, 258, 1527, -1000, -1000, 23209, 358, -1000, -1000,
	-1000, 435, 99, 1434, 354, -1000, 29964, 166, 29964, -1000,
	-1000, -1000, -1000, -1000, 2171, -1000, 508, 188, 10750, 10750,
	10750, 192, 1225, -1000, 373, 750, 912, 22171, 29964, -1000,
	21652, 1708, -1000, 662, 2379, -1000, 29964, -1000, 2379, 2379,
	1121, -1000, 258, 2523, -1000, -1000, 29964, 29964, -1000, 29964,
	29964, 394, 7625, -1000, -1000, -1000, 29964, -1000, -1000, -1000,
	-1000, 16981, 16981, -1000, -1000, -1000, -1000, 1608, 1606, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 314, 29964, 997, -1000, 1183, 1527, 23209, 1162, 1603,
	358, -1000, 1599, -1000, 650, 29964, 29964, -1000, 865, -1000,
	1149, 2073, 2089, 2073, -1000, -1000, -1000, -1000, 2120, -1000,
	2118, -1000, -1000, 865, -1000, -1000, -1000, -1000, -1000, 569,
	-1000, 2298, 584, 584, 584, 1705, -1000, 683, 1701, -1000,
	-1000, -1000, -1000, -1000, 2343, 2372, 22690, 2343, -306, -14,
	2371, 2369, 2408, -1000, 1698, 674, -300, -1000, -1000, 668,
	-1000, -1000, -1000, -300, -1000, 668, -1000, -1000, 1424, -1000,
	104, -1000, -1000, -1000, -1000, -1000, -1000, 26, -1000, 29964,
	-1000, 1598, 1591, 78, -1000, 1476, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7625, -1000, -1000, -1000, 1882, -1000, -1000, 7625, 1697,
	1581, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2313, -1000, 2368, -1000, 1696, 1691,
	-306, -1000, -1000, -1000, 30938, -1000, 870, -1000, -1000, 1579,
	40, -1000, -1000, -1000, 1578, 1577, 1432, -1000, -1000, 1444,
	751, 56, -1000, -1000, -1000, -1000, -1000, -1000, 1451, 29964,
	1853, -1000, 1144, 1144, 1144, 29964, 1676, 670, -1000, 1675,
	1671, 368, 1185, 1180, -1000, 1428, 17500, 22171, 21652, 773,
	-1000, 901, -1000, -1000, -1000, 2379, -1000, -1000, 2379, -1000,
	-1000, 2523, -1000, -1000, 1297, 9182, -1000, -1000, 1575, 16462,
	537, 543, 1851, -1000, 255, 2403, -1000, 1279, 1243, -1000,
	29964, -1000, 1843, 1984, 211, 1840, -1000, 1839, 1838, 29964,
	1874, -1000, -1000, -1000, -1000, -1000, -1000, 336, 993, -1000,
	1573, 1572, -1000, 40, 1570, -1000, -1000, -1000, 29964, 650,
	650, 2313, 29964, 6058, -1000, -1000, 7625, 1832, -1000, 7625,
	-1000, -1000, -1000, -1000, -1000, 1829, 2249, -1000, -1000, -1000,
	-1000, -1000, -1000, 7625, 7625, -1000, -1000, -309, 1564, -1000,
	-1000, 2367, 1563, 1534, 29964, -1000, 668, 668, 662, -1000,
	-1000, -94, -1000, -1000, -1000, 1641, -1000, 1567, -56, -1000,
	46, 7625, -1000, -1000, -309, -237, -1000, -1000, -1000, -1000,
	214, -1000, -1000, 161, -1000, -1000, 1413, 383, -1000, -1000,
	650, 20614, 16981, 16462, 1560, -1000, 31383, 10750, 117, 31383,
	606, 1175, -1000, 1426, -1000, 1421, -1000, 2379, 773, 901,
	-1000, -1000, 1105, -1000, -1000, -1000, -1000, 2849, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1416, 1827, -107, -1000, -1000, 1826, 20614, 247, 247,
	20614, 20614, 20614, 1812, 479, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2308, -1000, -1000, 1476, 29964, 1476, 21133,
	-1000, 2366, 2355, 1476, 632, -311, 1408, -1000, 1547, -19,
	-1000, -1000, 644, -313, -46, -21, -1000, -1000, -1000, 1648,
	-1000, 2943, -1000, -1000, -1000, 632, -311, 29964, 366, 1544,
	-1000, -1000, 159, -1000, -1000, 992, -1000, 1807, 7625, -1000,
	-1000, -1000, 372, 31311, -1000, -1000, -94, 372, 343, 164,
	-1000, 1396, -1000, -1000, 2313, -1000, 1615, 7625, 1806, -223,
	20614, 973, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 964,
	960, 952, 20614, -1000, -1000, -1000, 250, -1000, 951, 949,
	-1000, -1000, -1000, -1000, -1000, 1805, -1000, -1000, 2353, -1000,
	1543, 401, -16, -21, -1000, 2346, -32, 2345, 2328, -1000,
	-1000, 3981, -302, -44, 296, -1000, 2226, -1000, -1000, 24,
	-1000, -1000, -1000, 20614, 2208, 1537, 213, 2325, -1000, 213,
	-1000, 194, -1000, 1170, -1000, 1390, -1000, 2308, -1000, 1530,
	-1000, 2068, -1000, 87, 930, -1000, -1000, -1000, -1000, 916,
	-1000, -1000, -1000, 20095, 29964, 1534, -1000, 1803, 1388, -14,
	-36, 2323, -1000, 1534, 2320, 1534, 1534, 1145, -1000, -1000,
	-1000, -1000, -1000, 1542, -1000, 158, -1000, -1000, 2208, -1000,
	2318, 281, -1000, -1000, -1000, 1365, -1000, -1000, 479, -1000,
	2060, 1576, 2383, -1000, -1000, -1000, -1000, 158, 158, 158,
	158, 90, -1000, -1000, 913, -1000, -1000, 2273, 15943, -29,
	-1000, -1000, -1000, 1536, -1000, 1534, -1000, -1000, 3981, -1000,
	-1000, 1144, 1533, 183, -1000, -1000, -1000, 19576, 233, 239,
	218, -1000, 395, -1000, -1000, -1000, -1000, 2402, -1000, 2396,
	692, 692, -1000, -1000, 29964, -1000, 29964, -1000, 908, -1000,
	-1000, -1000, 896, -1000, -1000, -1000, -1000, -1000, 1344, -1000,
	29964, -1000, 29964, 224, 1308, 9182, 1801, 9182, 1800, 249,
	1799, -1000, -1000, -1000, 1361, 270, -1000, -1000, 629, -1000,
	1131, -1000, 19057, 29964, -1000, -1000, 899, 1795, 2315, -1000,
	1982, 29964, 1763, 29964, 1793, 1126, 9182, -1000, -1000, -1000,
	29964, 5539, -1000, 879, -1000, -1000, 371, 237, -1000, 894,
	-1000, 890, 18538, 1306, 1630, -1000, -1000, 1476, 29964, 877,
	-1000, 29964, 216, -1000, -1000, -1000, 829, -1000, -1000, -1000,
	-1000, 371, 1981, -1000, 1304, -1000, -1000, 2651, 502, -1000,
	-1000, 2651, 219, -1000, 363, 1786, -1000, -1000, 771, -1000,
	29964, 538, 7625, -1000, 219, 31383, -1000, 7625, 734, -1000,
	31383, 725, -1000, -1000,
}

var yyPgo = [...]int{
	0, 131, 2869, 204, 157, 140, 203, 2868, 2865, 2215,
	2212, 2860, 2859, 2858, 2857, 2856, 2855, 2854, 2853, 2852,
	2846, 2845, 2844, 2843, 2842, 2841, 2840, 2827, 2825, 2817,
	2816, 2811, 2803, 202, 2802, 2801, 2800, 2799, 2797, 2796,
	2795, 2794, 2791, 2789, 2788, 2787, 2785, 2783, 2778, 2776,
	2774, 2773, 2772, 2768, 2765, 2764, 2762, 2761, 2760, 2756,
	2754, 136, 2753, 2194, 2752, 2751, 2750, 2749, 2748, 2747,
	2746, 178, 2744, 2741, 2738, 2735, 2732, 2730, 2727, 2726,
	2725, 2724, 2723, 2722, 2720, 2717, 2713, 2711, 2710, 161,
	2709, 2708, 151, 2707, 2706, 2702, 2701, 200, 184, 53,
	2700, 35, 2699, 2698, 2697, 2696, 2695, 67, 2694, 2693,
	102, 160, 210, 1080, 216, 206, 148, 133, 66, 2692,
	2208, 2689, 120, 188, 123, 20, 2688, 138, 2687, 115,
	34, 28, 207, 116, 42, 117, 90, 2686, 185, 62,
	2685, 79, 2682, 2680, 205, 154, 2679, 91, 2678, 2674,
	2673, 2672, 164, 93, 2671, 52, 2669, 130, 88, 83,
	86, 2666, 2664, 2663, 73, 2662, 2661, 2660, 2659, 146,
	2658, 2656, 105, 65, 2652, 2650, 2649, 49, 190, 63,
	2647, 50, 2646, 2645, 2644, 2643, 55, 2642, 2639, 14,
	19, 21, 2638, 18, 2637, 2636, 1, 2635, 181, 98,
	76, 114, 2634, 395, 2630, 2628, 2627, 126, 2626, 680,
	2625, 2624, 2623, 2622, 2621, 22, 2620, 168, 39, 2617,
	72, 92, 94, 172, 173, 2616, 2615, 2614, 11, 70,
	54, 0, 2611, 118, 2610, 2609, 2608, 208, 2606, 191,
	167, 193, 145, 218, 132, 2603, 2598, 64, 2597, 121,
	68, 107, 81, 2596, 177, 2590, 36, 144, 2589, 171,
	2588, 127, 2, 112, 2585, 2584, 37, 233, 2583, 2582,
	2581, 95, 2580, 2579, 96, 104, 2576, 2572, 2571, 31,
	2570, 29, 26, 2569, 77, 2567, 211, 2566, 159, 109,
	149, 135, 119, 187, 189, 59, 56, 2564, 837, 111,
	78, 24, 2562, 186, 2561, 239, 192, 2560, 183, 2559,
	201, 282, 175, 2558, 147, 7, 33, 27, 2557, 9,
	2556, 106, 174, 2553, 2552, 16, 2551, 17, 2550, 2549,
	2547, 2546, 5, 2545, 2543, 2542, 3, 6, 2541, 4,
	182, 2540, 2539, 2538, 2537, 38, 153, 2536, 124, 197,
	2535, 2533, 71, 2532, 2531, 2530, 594, 2529, 2527, 2525,
	2523, 2521, 2520, 2518, 2517, 2516, 2515, 75, 44, 2514,
	2513, 2510, 2509, 57, 108, 2508, 2507, 2504, 2502, 30,
	142, 2501, 15, 2500, 25, 23, 32, 2499, 101, 2498,
	12, 155, 2497, 2495, 13, 2494, 2493, 10, 8, 2492,
	2490, 89, 2489, 61, 43, 125, 84, 2487, 60, 180,
	110, 2486, 2483, 199, 198, 170, 2474, 165, 195, 209,
	2473, 179, 2472, 2471, 2469, 2467, 2464, 2457, 1231, 2456,
	2455, 196, 45, 69, 80, 2454, 2451, 2450, 58, 122,
	87, 82, 169, 2449, 163, 2447, 2446, 74, 2441, 2440,
	2438, 2437, 2431, 156, 2429, 2427, 2424, 194, 143, 2423,
}

//line mysql_sql.y:8952
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 452, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 95, 450, 450, 450, 451, 451,
	93, 82, 94, 400, 400, 399, 399, 398, 398, 353,
	353, 397, 397, 397, 396, 396, 396, 395, 395, 394,
	394, 393, 393, 391, 391, 392, 390, 389, 389, 389,
	387, 387, 387, 383, 383, 385, 384, 384, 386, 378,
	378, 381, 381, 379, 379, 379, 379, 382, 377, 377,
	377, 376, 376, 81, 81, 81, 300, 300, 80, 80,
	314, 314, 314, 314, 314, 312, 312, 312, 312, 312,
	312, 311, 311, 310, 310, 315, 315, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 72, 72, 72,
	72, 75, 75, 75, 76, 309, 309, 309, 73, 74,
	74, 299, 299, 304, 304, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 308, 308, 308,
	306, 306, 305, 305, 307, 307, 66, 66, 66, 69,
	68, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	67, 67, 67, 67, 67, 67, 62, 62, 62, 62,
	62, 61, 61, 63, 63, 296, 296, 295, 77, 77,
	78, 454, 454, 453, 455, 455, 455, 455, 79, 85,
	85, 85, 85, 85, 85, 85, 84, 84, 87, 87,
	86, 88, 71, 71, 71, 71, 71, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 424, 424, 424, 426,
	426, 235, 236, 456, 238, 234, 234, 234, 420, 420,
	421, 422, 423, 423, 423, 83, 7, 7, 7, 7,
	7, 7, 60, 65, 194, 194, 194, 195, 195, 195,
	195, 195, 58, 64, 64, 437, 437, 59, 444, 444,
	356, 356, 249, 249, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	360, 361, 245, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 40, 39,
	39, 39, 285, 285, 38, 457, 457, 224, 224, 48,
	49, 50, 51, 52, 53, 54, 37, 47, 47, 47,
	47, 47, 47, 47, 47, 47, 57, 57, 372, 372,
	459, 459, 459, 55, 56, 355, 355, 355, 46, 45,
	44, 43, 42, 42, 36, 36, 35, 35, 41, 105,
	106, 242, 242, 242, 244, 244, 240, 458, 458, 327,
	327, 243, 243, 34, 34, 34, 34, 241, 241, 223,
	239, 239, 239, 8, 8, 6, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 18, 19, 21,
	293, 293, 290, 20, 14, 13, 16, 12, 15, 17,
	5, 5, 5, 5, 9, 9, 10, 117, 117, 159,
	159, 432, 432, 428, 428, 429, 429, 429, 430, 430,
	431, 431, 89, 366, 366, 366, 366, 366, 366, 4,
	140, 140, 139, 139, 365, 365, 365, 365, 365, 365,
	297, 297, 409, 409, 409, 410, 138, 138, 133, 133,
	367, 367, 263, 411, 411, 375, 375, 374, 374, 373,
	373, 136, 136, 137, 137, 120, 120, 98, 98, 380,
	380, 380, 380, 388, 388, 352, 352, 186, 186, 218,
	218, 219, 219, 110, 110, 111, 111, 111, 111, 111,
	111, 417, 417, 419, 419, 418, 135, 135, 131, 131,
	132, 132, 132, 130, 130, 129, 128, 128, 127, 125,
	125, 125, 126, 126, 126, 113, 113, 113, 112, 112,
	112, 112, 112, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 114, 114, 425, 425, 425,
	357, 357, 357, 363, 363, 200, 200, 201, 201, 199,
	199, 115, 115, 116, 116, 116, 116, 198, 198, 197,
	118, 118, 124, 123, 123, 119, 119, 119, 119, 208,
	208, 207, 207, 207, 207, 92, 96, 96, 97, 143,
	143, 206, 205, 205, 205, 142, 142, 141, 141, 134,
	134, 122, 122, 122, 122, 204, 121, 202, 449, 449,
	448, 448, 447, 445, 445, 445, 446, 446, 446, 446,
	402, 402, 402, 402, 402, 229, 229, 229, 233, 233,
	232, 232, 232, 232, 232, 237, 3, 3, 3, 3,
	3, 25, 25, 25, 25, 25, 25, 25, 31, 151,
	152, 30, 144, 144, 145, 145, 146, 146, 147, 148,
	148, 148, 150, 149, 29, 22, 433, 436, 434, 434,
	438, 438, 438, 439, 439, 439, 440, 440, 23, 102,
	107, 107, 104, 109, 109, 109, 109, 109, 103, 435,
	441, 441, 441, 294, 294, 291, 292, 292, 289, 288,
	288, 288, 443, 443, 442, 442, 442, 230, 230, 24,
	284, 284, 286, 287, 287, 287, 278, 278, 278, 278,
	28, 282, 282, 283, 283, 283, 283, 283, 279, 279,
	281, 281, 277, 277, 277, 277, 277, 27, 108, 108,
	276, 276, 274, 274, 272, 272, 273, 273, 271, 271,
	271, 275, 275, 26, 26, 26, 100, 99, 99, 99,
	221, 221, 220, 220, 101, 32, 171, 171, 341, 341,
	341, 341, 341, 359, 359, 359, 342, 342, 342, 343,
	343, 343, 344, 344, 344, 344, 344, 358, 358, 316,
	316, 317, 317, 317, 320, 320, 333, 333, 334, 334,
	332, 332, 339, 339, 338, 338, 337, 337, 336, 336,
	335, 335, 335, 335, 330, 330, 329, 329, 318, 318,
	318, 318, 318, 319, 319, 319, 328, 328, 331, 331,
	177, 177, 178, 178, 178, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 407, 407, 408, 180, 180, 180,
	184, 184, 184, 184, 184, 184, 179, 179, 181, 181,
	160, 160, 158, 158, 153, 153, 154, 154, 155, 155,
	156, 156, 157, 157, 157, 157, 157, 157, 302, 302,
	405, 405, 406, 406, 401, 401, 401, 404, 404, 404,
	404, 404, 403, 403, 161, 216, 216, 216, 231, 231,
	231, 231, 215, 215, 215, 176, 176, 175, 175, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 301, 301, 246, 246, 247, 247,
	193, 192, 192, 192, 192, 192, 190, 191, 189, 189,
	189, 189, 189, 188, 188, 187, 187, 187, 280, 280,
	185, 185, 183, 183, 183, 182, 182, 182, 340, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 214, 255, 255, 260, 260, 416, 416,
	415, 162, 162, 162, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 172, 172, 172, 325, 325, 325, 325,
	325, 326, 326, 326, 323, 323, 324, 324, 264, 265,
	265, 364, 364, 321, 321, 322, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 371, 371, 371, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 427, 427, 427, 412, 412, 412, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 212, 212, 212,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 266, 266, 267, 267, 368, 368, 368,
	368, 368, 368, 369, 369, 370, 370, 370, 370, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 253, 209,
	209, 209, 268, 261, 261, 262, 262, 256, 256, 256,
	256, 256, 256, 256, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 257, 257, 259, 259,
	270, 270, 270, 269, 269, 269, 269, 269, 269, 269,
	174, 174, 174, 174, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 164, 164, 164, 164, 168,
	168, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 169, 169, 169, 169, 167,
	167, 167, 167, 167, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	90, 91, 91, 166, 217, 217, 345, 345, 348, 348,
	346, 346, 347, 349, 349, 349, 350, 350, 350, 351,
	351, 351, 354, 354, 222, 222, 222, 228, 228, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	10, 10, 2, 0, 2, 1, 3, 3, 3, 0,
	2, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 3, 0, 1, 3, 0, 1, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 8, 5, 7, 0, 3, 8, 5,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 4, 1, 3, 1, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 6, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 2, 2, 1, 2, 2, 2,
	3, 2, 7, 7, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 2, 3, 1, 1, 1, 6, 8, 0, 1,
	1, 1, 1, 5, 5, 0, 1, 1, 3, 3,
	3, 4, 6, 7, 4, 4, 7, 8, 3, 3,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 4, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 2, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	1, 12, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 7, 7, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 0, 2, 7, 8,
	0, 2, 6, 0, 2, 2, 3, 3, 4, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 6, 0, 4,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 11, 9, 11, 2, 2, 4, 5,
	1, 3, 0, 3, 5, 10, 0, 2, 0, 3,
	2, 4, 3, 0, 2, 1, 0, 2, 3, 0,
	2, 3, 0, 3, 2, 4, 3, 0, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 1, 1,
	1, 1, 1, 4, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 4, 6, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	2, 3, 5, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -452, -2, -1, -3, -93, -4, -89, -5, -6,
	-8, -70, -84, -86, -88, -87, -33, -7, -83, -61,
	-62, -66, -72, -77, -80, -81, -82, -94, -90, -91,
	-92, -110, -95, -25, -24, -23, -22, -102, 405, 12,
	452, -9, -10, -417, -11, 234, -234, -235, -236, -238,
	-456, -34, -35, -36, -42, -43, -44, -45, -46, -55,
	-56, -57, -37, -38, -39, -40, -48, -49, -50, -51,
	-52, -53, -54, -41, -105, -106, -59, -58, -64, -60,
	-65, -104, 209, -63, 61, -67, -68, -69, -73, -74,
	-75, -76, -78, -79, 336, 342, 395, 539, 540, 46,
	-111, -113, 541, -26, -27, -28, -29, -30, -31, -32,
	205, 14, 485, -12, -15, -13, -16, -14, -20, -21,
	-19, -17, -18, -103, 229, 228, 37, 292, 293, 294,
	340, 227, 206, 13, 137, 138, 140, 141, 30, 41,
	318, -112, 67, 207, -114, 10, 543, 542, -120, 38,
	-158, -231, 70, 78, -225, -227, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 455, 526, 527, 528, 529, 316, 317, 482,
	246, 270, 366, 273, 280, 137, 156, 150, 178, 170,
	145, 250, 285, 251, 77, 140, 438, 88, 417, 392,
	143, 265, 267, 269, 272, 252, 166, 161, 264, 248,
	539, 159, 253, 39, 254, 183, 255, 256, 487, 413,
	315, 419, 277, 390, 160, 414, 268, 416, 185, 189,
	430, 342, 154, 155, 421, 432, 182, 226, 42, 484,
	238, 433, 187, 181, 177, 441, 281, 279, 180, 153,
	176, 249, 50, 191, 190, 192, 386, 387, 388, 389,
	257, 258, 330, 429, 173, 162, 320, 146, 22, 436,
	233, 418, 343, 259, 274, 282, 186, 188, 240, 245,
	486, 394, 244, 278, 434, 158, 237, 266, 232, 437,
	147, 336, 345, 260, 141, 271, 431, 440, 49, 358,
	152, 144, 223, 138, 242, 247, 11, 261, 262, 263,
	284, 283, 275, 174, 239, 179, 164, 151, 175, 139,
	241, 439, 359, 537, 318, 375, 172, 169, 243, 216,
	435, 420, 142, 379, 360, 167, 286, 533, 534, 535,
	331, 314, 287, 288, 165, 230, 411, 412, 289, 291,
	385, 307, 361, 393, 367, 362, 198, 295, 423, 184,
	536, 296, 297, 298, 415, 299, 300, 301, -120, -63,
	-10, -9, -112, -113, -158, 213, -239, 23, 390, -71,
	391, 209, 67, -231, -5, -4, -89, -61, -110, -237,
	-231, 292, 292, -237, 213, -231, 244, 374, -356, 219,
	-311, -284, 245, -310, -286, -313, -287, 31, 205, 207,
	206, 241, 14, 340, 215, 12, 10, 341, 227, 24,
	25, 27, 13, 342, 344, 28, 345, 348, 349, 350,
	41, 353, 354, 234, 70, 78, 73, 252, -152, -231,
	-262, -256, 95, 235, -258, -251, -252, -254, -397, -391,
	-250, 67, 121, 122, 129, 96, -253, -340, 35, 98,
	492, 453, -210, -211, -212, -213, -214, -231, -392, -390,
	73, 79, 82, 85, 86, 84, 83, 163, 81, 74,
	133, 134, -113, 70, -412, 500, -226, 521, 526, 527,
	528, 529, 520, 46, -362, -370, 212, -368, 132, 168,
	230, 164, 12, 127, 385, 165, 497, 517, 455, 501,
	524, 494, 495, 489, 490, 491, 493, 502, 504, 516,
	-371, 512, 522, 523, 510, 525, 72, 71, 515, 514,
	503, 498, 499, 505, 488, 496, 506, 507, 513, 518,
	519, 324, 88, 325, 326, 445, 319, 327, 219, 390,
	55, 328, 329, 330, 331, 332, 452, 333, 56, 334,
	323, 234, 375, 335, 167, 184, 457, 456, 458, 449,
	446, 444, 447, 448, 450, 451, 508, 509, 511, -307,
	-305, -231, -96, -97, 531, -129, -130, -203, 19, 6,
	7, 8, 9, -450, 392, 486, 295, 337, 216, 316,
	375, 299, 244, -278, -276, -358, 289, 285, 214, 224,
	223, 89, 445, 212, 351, -428, -429, 202, 203, 204,
	-419, 478, -418, -231, 326, 26, 213, 337, 423, 424,
	425, 426, 427, 428, -47, -372, -355, 420, 419, -243,
	412, 418, 410, 422, 413, 317, 301, 300, 205, 479,
	-222, 361, 393, 240, 442, 443, 338, 394, 430, 431,
	414, 88, 171, 168, 216, 213, 316, 445, 375, 299,
	-428, 142, 139, -298, 142, 94, 147, 146, -298, 244,
	374, 40, -304, 385, -303, -305, 430, 431, 441, 71,
	72, 429, -222, 88, 411, 411, -130, -203, -129, -111,
	-113, -92, -417, 214, 316, 375, 244, 215, 213, 216,
	445, 292, 337, 299, -357, -425, 31, -363, 199, 200,
	201, 32, 33, -1, 73, -136, 236, -158, 135, -136,
	-130, -129, -130, -158, -215, -231, 392, 104, -71, -71,
	391, -420, -421, -422, -424, 209, 391, 390, 135, 15,
	-237, -237, 65, -158, -286, 244, -311, -284, 35, 64,
	136, 217, 136, 64, 67, 338, 316, 375, 339, 445,
	213, 351, 216, 244, 352, 316, 375, 213, 216, 445,
	244, 316, 213, 216, 375, 244, 352, 410, 411, 216,
	26, 343, 346, 347, 411, -376, 441, 136, 94, 91,
	92, 93, -256, 111, -269, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-113, -256, -262, 46, -254, -254, -254, -254, -340, -260,
	-256, 67, 67, 135, 73, -256, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -369, 67,
	67, -266, -267, 67, 67, 67, 73, 73, 67, 67,
	67, 73, -267, -267, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 136, -164, -168, -165, -167, -166, -170, -169,
	168, 169, 132, 172, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 30, 184, 230, 164, 165, 166,
	167, 185, 150, 170, 483, 193, 151, 194, 152, 195,
	153, 196, 154, 155, 197, 156, 159, 160, 161, 158,
	135, -130, 136, 67, -98, 38, -132, 21, -114, -113,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 79,
	-151, -231, -144, -231, -274, 219, -274, -274, -274, -274,
	215, -274, 213, 213, 213, -274, -430, 149, 136, -419,
	-135, 67, -242, 112, 116, 23, 242, 242, 279, -457,
	-458, 15, 114, -240, -458, -240, -240, -242, -459, 215,
	421, 42, 243, 242, -131, -132, -131, 415, 411, -327,
	416, 417, -244, -458, -243, -242, -242, -243, -242, -242,
	-242, 213, 216, 445, 299, -457, 242, -457, 30, 30,
	-356, -158, -356, 479, -223, -231, -356, -356, -431, 218,
	434, 485, 145, 146, 147, -286, 244, 244, 136, 104,
	23, -306, 104, 115, -305, -305, -305, -306, -306, -179,
	40, -230, 132, -231, 73, -179, 40, -454, -453, -158,
	-131, -114, -113, 68, 68, 68, -356, -356, -356, -356,
	-356, -356, -356, -356, -237, -144, -356, -115, -116, 123,
	-256, -231, -115, 38, -365, 46, -110, 67, 30, 67,
	-231, -366, 46, -110, 67, 30, -131, -98, -132, 135,
	79, 73, -71, 68, 136, -423, 85, 86, -426, 182,
	174, -231, -85, 73, -3, -4, -5, -6, -33, -61,
	-110, -393, -391, 67, 31, 384, 64, 15, -312, 213,
	445, 337, 240, 216, 316, -310, -293, -290, -288, -230,
	-286, -289, -288, -315, -215, 411, -99, 396, 291, -256,
	-256, -256, -256, -256, 84, 95, 314, 85, 86, -251,
	-270, 31, 287, 288, -252, -252, -252, -252, -252, -252,
	-252, -252, -252, -252, -252, -252, -259, -268, -340, 67,
	114, 112, 116, 113, 97, -254, -254, -252, -252, 68,
	136, -416, -415, 99, -256, -256, -231, -413, -414, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	328, 323, 329, 327, 319, 335, 330, 331, 167, 476,
	477, 470, 471, 472, 473, 474, 475, -261, -262, -261,
	-256, -413, -261, -209, 32, 31, -262, -262, -262, 68,
	-256, -427, 312, 311, 313, -133, -231, -261, 68, 68,
	68, 79, -262, -262, -261, -252, -261, -414, -209, -209,
	-262, -262, -209, -209, -209, -209, 123, -209, -209, -209,
	-209, -209, -209, -209, -209, 68, -305, 40, -351, 359,
	358, -345, -347, 67, -346, 67, -346, -346, -346, 67,
	67, -348, 67, -348, -348, -345, -349, 67, -349, -350,
	67, -349, -231, -131, -97, -374, -373, -256, 40, 532,
	-98, -256, -128, -127, -256, -451, 73, 34, 67, 135,
	-158, 95, -433, -231, -294, -291, -288, -231, -284, -231,
	-231, -274, -274, -274, -158, -431, -418, 34, -134, -231,
	-199, 16, -254, -254, -288, 244, -457, -242, -224, -223,
	-244, -239, -244, -244, -199, -458, -242, -242, -244, -240,
	-199, -231, 411, -199, -199, -327, -241, -231, -241, -274,
	-223, -224, -224, -158, -194, 210, 207, -178, -196, 356,
	246, -275, 250, 77, 251, 392, 252, 215, 254, 255,
	256, 226, 257, 258, 259, 385, 260, 261, 262, 263,
	339, 6, 302, 40, -433, -433, 30, -294, -231, -123,
	-118, -122, -119, -124, -202, -204, -121, 67, -158, -113,
	-231, 435, 436, 143, 146, 145, 31, 384, -309, 384,
	31, -284, -303, -299, 73, 385, -289, -308, 64, 132,
	-373, -306, -306, -306, -308, -308, 131, 136, -455, 434,
	435, 202, -98, -160, -158, -433, -293, -284, -231, -160,
	-160, -231, 67, -231, -198, 136, -197, 15, -232, -231,
	34, 73, 135, -198, 73, -297, 64, -367, -263, -411,
	531, -138, 68, -133, -409, -410, -133, -137, -231, -367,
	-138, 68, -409, -98, -98, -231, 23, -71, -421, 135,
	136, -134, -312, -292, -289, -314, 123, -231, -300, 136,
	485, 544, 71, 217, -443, -442, 376, 68, 136, -377,
	218, 452, 73, 545, 198, 84, 314, 85, 86, -340,
	-262, -259, -254, -254, -252, -252, -257, 231, -257, 94,
	-256, -255, -415, 101, -256, 34, 136, 65, 135, 68,
	68, 15, 15, 68, -256, 68, 68, 68, 68, 15,
	15, -256, 68, 135, 68, 68, 68, 68, 65, 68,
	136, 68, 136, -262, -256, 68, 68, -256, -256, -256,
	-262, 68, -256, -256, -256, -256, -256, -256, -256, -256,
	-322, 406, -256, -354, 360, 79, 79, -217, 73, -217,
	79, 79, 79, 136, 68, 73, 136, 22, 136, -125,
	36, 37, -152, -145, -146, -147, -148, -164, -215, 169,
	172, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 230, 164, 165, 166, 167, 185, 150, 170,
	151, 152, 153, 154, 155, 156, 159, 160, 161, 158,
	-231, -135, 35, -436, 363, -444, 136, 40, -442, 445,
	-277, 65, -108, 15, -158, -158, -158, -171, 34, 15,
	-117, -159, -231, 67, 68, 136, -256, -285, 65, -231,
	-224, -199, -158, -231, -199, -199, -242, -244, -244, -240,
	135, -223, -135, -155, -161, -156, -215, -247, -157, 222,
	220, 224, -406, 89, 225, 276, 90, 215, -195, 215,
	90, 221, 225, 220, 136, -196, -228, 104, -228, -222,
	131, -228, -228, -228, -228, 253, 253, -228, -228, -228,
	-228, -228, -228, -228, -228, -228, -228, -228, -228, -228,
	-228, 67, -437, 363, 30, 322, -444, -109, 316, 30,
	-205, -206, -207, -208, 53, 57, 59, 54, 55, 56,
	60, 30, 136, -229, -233, 34, -231, 73, -229, -113,
	-118, -123, -229, 67, 144, 147, 147, 146, 217, 67,
	104, -308, -308, -308, 40, -230, -453, 441, 435, 136,
	64, -145, -199, -116, -118, -231, 73, -231, 123, -199,
	-380, 416, 39, 136, 67, 68, 136, 46, 136, 104,
	68, 136, 68, 46, 135, 392, -231, -391, 68, -314,
	136, 217, 135, 135, -290, 342, -230, -292, 20, 485,
	-215, 38, -221, -220, 73, 545, 68, -257, -257, 94,
	-254, -251, 68, 102, -256, 100, -162, -164, 358, 359,
	-163, -169, 132, 168, 230, 167, 166, 164, 358, 359,
	-179, -231, -256, -256, 68, -256, -256, 15, -231, -179,
	-252, -256, -130, 68, -321, -322, -321, 68, 68, 68,
	68, -321, 68, 68, 68, 68, 68, 68, 68, 68,
	67, 68, 68, 68, 136, 68, 68, 68, 136, 68,
	136, -373, -380, -256, -256, -127, -126, 43, 350, 68,
	136, -164, 34, -439, 418, 365, -228, -249, -248, 318,
	41, -360, 385, 371, 372, -291, 244, -231, 64, 306,
	307, 308, 309, -272, -273, -271, -275, -433, 67, 67,
	67, -341, 296, -164, -158, -117, -231, 15, 136, -432,
	135, -1, -231, -284, -242, -199, -458, -199, -242, -242,
	-244, -231, 34, -164, -157, -231, 90, -405, -406, -274,
	-405, 90, 67, -231, -231, -231, 90, 90, -196, 79,
	79, -228, -228, 79, 73, 73, 73, -228, -228, 79,
	73, -233, 79, 79, 79, 79, 40, 73, -184, 40,
	264, 268, 265, 266, 267, 79, 40, 79, 40, 79,
	40, -231, 67, -407, -408, 73, -439, -228, 322, 104,
	-249, -107, 77, 31, -139, 210, 207, -433, -296, -295,
	-215, -122, -122, -122, -122, 53, 53, 53, 58, 53,
	58, 53, -207, -296, -124, -135, -233, 68, -449, -448,
	-447, -445, 61, 218, 62, -261, 147, -292, -245, 73,
	-299, -158, -158, 68, -201, 17, 135, -201, -388, 402,
	397, 399, 90, -263, -375, -374, 46, -110, -133, -367,
	-410, -373, -231, 46, -110, -367, -231, 79, 15, -289,
	-284, 123, 123, -231, 343, -300, 73, 364, 73, 213,
	546, 136, 104, -221, -251, -256, 68, -172, 155, 154,
	-172, 68, -346, -346, -345, -348, -345, -172, -172, 68,
	68, 23, 68, 68, 68, -256, 68, 68, 136, -364,
	454, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -265, -264, 236, 73, 79, 79,
	-388, 44, 45, 73, 211, -147, 40, -110, -440, 77,
	-434, 73, -231, -441, 77, 366, 134, 320, 40, 367,
	368, 382, 315, 79, 79, 373, -435, -231, -140, 316,
	-158, -271, -222, 131, 255, 299, -153, -154, -155, -153,
	-153, -342, 298, 20, 79, 122, -136, 65, 135, -118,
	-159, -231, 123, 68, -199, -231, -199, -199, -242, -110,
	-176, -175, -173, 84, 95, 40, 356, -174, 77, 131,
	269, 247, 270, -193, -246, 64, 362, 220, 89, 90,
	344, -247, -401, -403, -231, -403, -231, -401, -401, -274,
	-256, -231, -179, -179, 73, 73, -180, 247, -160, 68,
	136, 104, -440, -434, 104, 73, -441, 73, 136, -139,
	-139, -199, 136, 104, -142, -141, 64, 65, -143, 64,
	-141, 53, 53, -199, -447, -446, 23, -406, -406, -406,
	68, 68, -200, 18, 20, 123, -200, -352, 533, -384,
	-386, 397, 20, 20, 13, 68, -367, -367, -284, -300,
	385, -158, -220, 73, 546, -256, 68, -256, 68, 73,
	-130, 20, 68, 68, -352, -149, -164, -250, 73, -438,
	376, 73, 73, 79, 40, 79, 134, 369, -361, -107,
	-139, 67, -228, -228, -228, -231, 68, 136, 68, 68,
	-343, 235, 79, 122, 79, 122, 79, -229, -118, -231,
	-199, -432, 135, -199, -199, -173, 84, -252, 73, -181,
	-230, 132, -182, 40, 268, 264, -183, 40, 248, 249,
	-185, 67, 276, 13, 90, 90, -158, 67, 65, 286,
	67, 67, 67, -403, 68, 248, 249, 68, -408, 73,
	-438, 73, -433, -130, -295, -373, -256, 67, -256, 67,
	53, 19, 17, -256, -262, -186, 534, 73, 20, 73,
	-382, 73, -296, -101, -378, -327, 68, 68, -321, -324,
	-323, -326, 403, 278, 409, -262, -186, 484, 20, 485,
	319, 40, 79, 40, 370, -279, -281, -215, 67, -179,
	-181, 73, -177, -178, -155, -100, -99, -177, -344, 138,
	79, 122, 79, 79, -199, -199, 79, 67, -368, -280,
	67, -279, -404, 306, 307, 308, 310, 309, -404, -279,
	-279, -279, 67, -302, -301, 277, 95, -131, -134, -402,
	-231, 220, 20, 20, -218, 535, 79, 73, 399, -353,
	536, -387, 402, -381, -379, 397, 398, 399, 400, 68,
	-325, 97, 369, 373, -256, -218, -150, -231, 73, 364,
	73, 319, 68, 136, -345, -256, -316, 236, -101, -316,
	-359, 146, 297, 485, 79, 122, 79, -130, 68, -256,
	-266, -188, -187, 481, -279, 68, 68, 68, 68, -279,
	277, 68, 68, 136, 67, 20, 73, -389, 218, -385,
	-386, 401, -379, 20, 399, 20, 20, -325, 531, 407,
	408, 407, 408, 34, 385, -282, -281, -125, 68, -317,
	285, 20, -317, 297, 79, 122, 79, -131, 68, -192,
	-190, -191, 64, 414, 274, 275, 68, -282, -282, -282,
	-282, 68, -231, 220, -219, -231, -382, -396, 67, 79,
	-384, -383, -385, 20, -382, 20, -382, -382, 94, 73,
	-283, 226, 77, 485, 304, 305, -125, 20, -318, 278,
	279, -319, -331, 281, 79, -301, -191, 64, -190, 64,
	14, 13, -193, 68, 136, -400, 30, 68, -395, -394,
	-216, -390, -231, 402, 403, 73, -382, -325, -228, 73,
	303, -215, 67, -329, 282, 67, -327, 67, -327, 90,
	307, -189, 271, 272, 30, 146, -189, -231, -399, -398,
	-397, 68, 136, 135, 79, -231, -315, -320, 283, 79,
	-252, 67, -252, 67, -328, 280, 67, 84, 40, 273,
	136, 104, -394, -231, 68, -333, 67, 20, 68, -315,
	68, -315, 67, 104, -252, -398, 40, -256, 135, -334,
	-332, 236, -319, 68, 68, 68, -315, 79, 68, -231,
	68, 136, -231, -330, 284, 68, -332, -335, 46, 79,
	-339, -336, 67, -196, 238, 114, -339, -196, -338, -337,
	283, 239, 67, 68, 136, -231, 235, 67, -262, -337,
	-336, -262, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 696, 697, 698, 699, 700, 0, 0,
	0, 470, 471, 0, 445, 0, 0, 0, 0, 0,
	0, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 296, 297, 298, 299,
	300, 301, 0, 231, 227, 206, 207, 208, 167, 168,
	169, 170, 238, 239, 320, 0, 0, 0, 0, 0,
	553, -2, 35, 701, 702, 703, 704, 705, 706, 707,
	-2, 483, 0, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 285, 286, 287, 281, 282, 284,
	283, -2, 0, 483, 220, 0, 211, 211, 0, 0,
	0, 573, 0, 0, 588, 610, 33, 0, 531, 0,
	536, 942, 978, 979, 980, 981, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 531, 232,
	472, 473, 573, 573, 443, 0, 267, 0, 1435, 271,
	0, 0, 0, 440, 262, 263, 264, 265, 266, 0,
	695, 0, 0, 258, 0, 226, 1494, 0, 0, 0,
	0, 0, 0, 111, 770, 113, 772, 117, 124, 0,
	0, 129, 130, 133, 134, 135, 136, 137, 0, 141,
	0, 143, 146, 0, 148, 149, 0, 152, 153, 154,
	0, 164, 165, 166, 773, 774, 775, -2, 42, 710,
	1360, 1255, 0, 1262, 1263, 1274, 1285, 1051, 1052, 1053,
	1054, 0, 0, 0, 0, 0, 1061, 1062, 0, 1076,
	1594, 0, 1068, 1069, 1070, 1071, 1072, 51, 63, 64,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	0, 1228, 1038, 978, 0, 1602, 0, 1622, 1627, 1628,
	1629, 1630, 1621, 0, 0, 1213, 0, 1203, 0, 0,
	-2, -2, 0, 0, 1562, -2, 1599, 1618, 1626, 1603,
	1625, 1596, 1597, 1591, 1592, 1593, 1595, 1604, 1606, 1617,
	0, 1613, 1623, 1624, 0, 0, 65, 66, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1219, -2, 1221, 1222, 1224, 1225, 1226, 1227, -2,
	1230, 1231, 1232, -2, -2, 1235, 1236, 1237, 1238, 1239,
	1240, 1243, -2, 1245, -2, -2, 1215, 1216, 1217, 1218,
	1207, 1208, 1209, 1210, 1211, 1212, -2, -2, -2, 0,
	204, 202, 573, 646, 0, -2, 0, 0, 0, 593,
	596, 599, 602, 0, 36, 37, 0, 0, 802, 802,
	802, 802, 802, 0, 802, 0, 0, 0, 802, 777,
	778, 779, 800, 801, 848, 488, 484, 485, 486, 487,
	561, 0, 563, 566, 421, 369, 0, 0, 0, 381,
	375, 0, 0, 0, 421, 0, 0, 568, 568, 0,
	424, 431, 421, 421, -2, 421, 421, 421, 0, 387,
	388, 389, 375, 0, 375, 393, 394, 395, 406, 407,
	432, 1384, 0, 0, 320, 0, 320, 0, 320, 320,
	490, 221, 222, 210, 212, 0, 216, 0, 209, 1494,
	0, 0, 178, 1562, 183, 0, 1442, 1508, 1457, 0,
	0, 1475, 0, -2, 0, 248, 568, 0, 574, 0,
	573, 0, 0, 320, 320, 320, 320, 320, 320, 320,
	320, 0, 0, 320, 0, 0, 611, 612, 607, 608,
	609, 613, 614, 3, 0, 0, 0, 535, 0, 0,
	568, -2, 0, 444, 268, 982, 0, 0, 272, 273,
	0, 0, 288, 0, 291, 276, 277, 278, 0, 0,
	260, 261, 0, 0, 228, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 121, 118, 125, 128, 138,
	145, 0, 157, 159, 162, 119, 126, 131, 132, 139,
	160, 120, 122, 123, 127, 161, 163, 140, 144, 158,
	142, 147, 150, 151, 156, 0, 92, 0, 0, 0,
	0, 0, 1261, 0, 0, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1255, 0, 0, 1057, 1058, 1059, 1060, 1063, 0,
	1077, 0, 0, 0, 1314, 0, 1253, 1253, 0, 1253,
	1249, 0, 0, 0, 0, 0, 0, 1253, 1191, 0,
	0, 1193, 1204, 0, 0, 0, 1197, 1198, 1253, 0,
	1253, 1202, 1187, 1188, 0, 1249, 1249, 0, 0, 1249,
	1249, 1249, 1249, 1249, 1249, 1249, 1249, 1249, 1249, 1249,
	1249, 0, 0, 1361, 1379, 1316, 1317, 1318, 1366, 1320,
	1370, 1370, 1370, 1370, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 0, 0, 1359, 1339, 1368, 1368, 1368,
	1366, 1363, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1373, 1373, 1376, 1373,
	0, 568, 0, 0, 556, 0, 537, 0, 590, 592,
	0, 594, 595, 597, 598, 600, 601, 603, 604, 38,
	0, 709, 0, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 802, 802, 802, 0, 490, 489, 0, 562,
	0, 0, 619, 0, 0, 0, 375, 421, 380, 377,
	376, 427, 428, 424, 0, 424, 424, 619, 0, 400,
	401, 402, 421, 421, 408, 569, 409, 410, 424, 0,
	429, 430, 619, 0, 0, 619, 619, 0, 418, 419,
	420, 0, 0, 802, 0, 377, 391, 377, 1385, 1386,
	0, 811, 0, 0, 0, 439, 0, 0, 0, 491,
	0, 0, 214, 0, 219, 171, 0, 0, 0, 0,
	0, 0, 200, 201, 0, 0, 0, 0, 0, 191,
	194, 936, 937, 767, 768, 195, 196, 240, 241, 0,
	537, 589, 591, 585, 586, 587, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 627, 621, 623,
	690, 51, 627, 0, 510, 523, 505, 0, 512, 0,
	943, 492, 523, 494, 0, 512, 537, 559, 537, 0,
	269, 0, 274, 0, 0, 290, 292, 293, 294, 279,
	280, 441, 256, 257, 249, 250, 251, 252, 253, 254,
	255, 259, 61, 0, 229, 230, 0, 0, 0, 105,
	106, 107, 108, 109, 110, 112, 96, 460, 462, 759,
	771, 0, 762, 0, 115, 155, 88, 0, 0, 1256,
	1257, 1258, 1259, 1260, 1264, 0, 1266, 1268, 1270, 1272,
	0, 1290, -2, -2, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1275, 1288, 1289, 0,
	0, 0, 0, 0, 0, 1286, 1286, 1281, 0, 1055,
	0, 1074, 1078, 0, 0, 0, 52, 1248, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 0, 1254, 0,
	1255, 0, 0, 0, 1250, 1251, 0, 0, 0, 1146,
	0, 0, 1152, 1153, 1154, 0, 518, 0, 1214, 1192,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 1382, 1380,
	1381, 1319, 1367, 0, 1344, 0, 1345, 1346, 1347, 0,
	0, 1340, 0, 1341, 1342, 1343, 1335, 0, 1336, 1337,
	0, 1338, 203, 645, 647, 0, 527, 529, 530, 0,
	557, 570, 575, 576, 579, 34, 39, 0, 714, 0,
	566, 0, 0, 726, 318, 753, 0, 0, 769, 792,
	798, 0, 0, 0, 826, 0, 564, 0, 0, 659,
	368, 0, 422, 423, 372, 1494, 377, 619, 382, 378,
	383, 426, 384, 385, 386, 0, 619, 619, 421, 424,
	411, 425, 424, 414, 415, 0, 433, 437, 434, 0,
	436, 390, 392, 566, 303, 0, 0, -2, 892, 1387,
	1387, 0, 1387, 1387, 1387, 1387, 0, 0, 1387, 1387,
	1387, 1387, 1387, 1387, 1387, 1387, 1387, 1387, 1387, 1387,
	1387, 1387, 0, 812, 315, 0, 0, 318, 743, 632,
	0, 633, 634, 630, 661, 685, 685, 0, 685, 665,
	942, 223, 224, 0, 0, 218, 172, 173, 0, 175,
	176, 177, 184, 179, 181, 0, 0, 185, 197, 198,
	199, 0, 0, 0, 189, 190, 0, 0, 243, 244,
	246, 0, 555, 457, 940, 458, 459, 463, 0, 465,
	466, 467, 714, 748, 619, 0, 628, 0, 624, 691,
	0, 693, 0, 619, 539, 499, 0, 504, 520, 0,
	524, 0, 0, 516, 509, 513, 0, 0, 533, 493,
	0, 0, 498, 558, 560, 983, 0, 275, 289, 0,
	0, 0, 0, 99, 756, 0, 100, 104, 94, 0,
	0, 0, 761, 0, 758, 763, 0, 114, 0, 0,
	89, 90, 817, 822, 0, 1265, 1267, 1269, 1271, 1273,
	0, 1276, 1286, 1286, 1282, 0, 1277, 0, 1279, 0,
	1256, 0, 1079, 0, 0, 0, 0, 0, 0, 1136,
	1137, 0, 0, 1141, 0, 1143, 1144, 1145, 1147, 0,
	0, 0, 1151, 0, 1190, 1206, 1194, 1195, 0, 1199,
	0, 1201, 0, 573, 0, 1113, 1113, 0, 0, 0,
	0, 1113, 0, 0, 0, 0, 0, 0, 0, 0,
	1073, 0, 1362, 1315, 1383, 0, 0, 0, 1364, 0,
	0, 0, 0, 0, 648, 539, 0, 0, 0, 582,
	580, 581, 0, 0, 715, 716, 718, 719, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1427, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	713, 0, 803, 733, 1387, 322, 0, 0, 755, 0,
	0, 0, -2, 0, 0, 0, 0, 828, 0, 0,
	0, 477, 481, 33, 567, 0, 620, 370, 0, 371,
	421, 379, 619, 942, 403, 404, 619, 421, 421, 424,
	0, 435, 0, 304, 948, 949, 0, 0, 951, 1008,
	0, 960, 802, 960, 0, 0, 962, 963, 305, 0,
	0, 0, 0, 0, 811, 894, 0, 1388, 0, 1387,
	1387, 0, 0, 0, 0, 1387, 1387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 1387, 0, 0, 322, 740, 0, 0,
	0, 0, 0, 0, 652, 0, 0, 651, 0, 0,
	0, 0, 0, 566, 686, 0, 688, 689, 663, -2,
	0, 632, 668, 1253, 225, 213, 215, 0, 0, 0,
	0, 186, 187, 188, 192, 193, 242, 245, 247, 0,
	0, 0, 617, 622, 629, 692, 694, 52, 625, 617,
	543, 0, 0, 523, 525, 0, 0, 523, 0, 0,
	532, 0, 0, 523, 0, 0, 442, 62, 295, 0,
	0, 0, 0, 0, 461, 0, 760, 96, 0, 0,
	116, 0, 0, 820, 0, 822, 1252, 1278, 1280, 0,
	1287, 1283, 1056, 1064, 1075, 0, 0, 1081, 1093, 1093,
	0, 1084, 1370, 1370, 1087, 1366, 1368, 1366, 1093, 1093,
	0, 53, 0, 0, 1142, 0, 0, 0, 519, 0,
	0, 0, 1111, 1113, 1118, 1114, 1119, 1113, 1113, 1113,
	1113, 1124, 1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113,
	1109, 1372, 1371, 1357, 0, 1358, 1369, 1374, 0, 1377,
	0, 528, 543, 571, 572, 577, 578, 0, 0, 0,
	0, 720, 0, 736, 734, 735, 0, 750, 323, 324,
	325, 326, 0, 0, 0, 754, 0, 500, 0, 793,
	794, 795, 796, 797, -2, 806, 0, 0, 944, 944,
	944, 836, 0, 827, 531, 0, -2, 0, 0, 479,
	0, 0, 660, 373, 619, 396, 0, 412, 619, 619,
	421, 438, 0, -2, 950, 1009, 972, 972, 961, 972,
	972, 802, 0, 307, 308, 309, 0, 311, 893, 895,
	896, 0, 0, 899, 900, 901, 902, 0, 0, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 930,
	931, 932, 933, 934, 935, 915, 916, 917, 918, 919,
	920, 927, 0, 0, 924, 0, 736, 0, 0, 0,
	750, 742, 0, 744, 745, 0, 0, 502, 619, 235,
	0, 655, 649, 0, 638, 653, 654, 641, 0, 643,
	0, 639, 640, 619, 631, 662, 687, 664, 667, 669,
	670, 676, 0, 0, 0, 0, 217, 174, 0, 342,
	180, 941, 464, 469, 615, 0, 0, 615, 545, 76,
	0, 0, 0, 521, 0, 526, 523, 508, 517, 507,
	514, 515, 534, 523, 497, 496, 984, 270, 0, 757,
	96, 101, 102, 103, 97, 95, 764, 0, 766, 0,
	818, 822, 0, 0, 1284, 1080, 1065, 1082, 1094, 1095,
	1083, 1066, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1067,
	1138, 0, 1140, 1148, 1149, 0, 1196, 1200, 0, 0,
	0, 1117, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 573, 1110, 0, 1365, 0, 0,
	545, 583, 584, 708, 0, 717, 0, 724, 725, 0,
	0, 728, 729, 738, 0, 0, 0, 328, 329, 0,
	0, 0, 341, 337, 338, 339, 319, 749, 740, 0,
	0, 807, 1387, 1387, 1387, 0, 0, 945, 946, 0,
	0, 839, 0, 0, 830, 0, 685, 0, 0, 619,
	478, 481, 482, 565, 374, 619, 416, 413, 619, 302,
	974, -2, 987, 989, 0, 0, 992, 993, 0, 0,
	0, 0, 1030, 999, 0, 0, 1003, 0, 1302, 1303,
	0, 1007, 0, 964, 973, 0, 973, 0, 0, 972,
	0, 310, 897, 898, 903, 904, 921, 0, 0, 923,
	0, 0, 312, 0, 0, 313, 317, 741, 0, 746,
	747, 573, 0, 0, 635, 656, 0, 0, 636, 0,
	637, 642, 644, 234, 671, 0, 0, 673, 674, 675,
	666, 182, 605, 0, 0, 626, 606, 547, 0, 544,
	77, 0, 0, 0, 0, 522, 506, 495, 98, 93,
	765, 79, 821, 823, 819, 0, 1150, 0, 1113, 1112,
	1106, 0, 1375, 1378, 547, 0, 723, 721, 737, 727,
	0, 751, 752, 0, 330, 331, 0, 334, 340, 739,
	501, 0, 0, 0, 0, 799, -2, 0, 0, -2,
	842, 0, 837, 0, 829, 0, 832, 619, 619, -2,
	475, 480, 0, 397, 417, 988, 990, 991, 994, 995,
	938, 939, 996, 1035, 1036, 1037, 997, 1032, 1033, 1034,
	998, 0, 0, 0, 1300, 1301, 1028, 0, 0, 0,
	0, 0, 0, 0, 958, 928, 929, 922, 925, 926,
	316, 314, 503, 568, 236, 237, 657, 0, 650, 680,
	677, 0, 0, 616, 618, 549, 0, 546, 0, 540,
	542, 87, 511, 49, 70, 0, 1139, 1189, 1116, 0,
	1107, 0, 1101, 1102, 1103, 1108, 549, 0, 0, 0,
	327, 332, 0, 335, 336, 0, 788, 1366, 0, 808,
	809, 810, 849, -2, 947, 814, 79, 849, 833, 0,
	840, 0, 838, 831, 573, 476, 0, 0, 1203, 1023,
	0, 0, 965, 967, 968, 969, 970, 971, 966, 0,
	0, 0, 0, 957, 959, 1004, 0, 233, 0, 0,
	681, 683, 678, 679, 40, 0, 548, 78, 0, 41,
	0, 67, 0, 80, 81, 0, 0, 0, 0, 1115,
	1104, 0, 0, 0, 0, 538, 0, 722, 730, 0,
	732, 333, 781, 0, 579, 0, 851, 0, 816, 851,
	825, 0, 835, 0, 844, 0, 841, 568, 1031, 0,
	1002, 1011, 1024, 0, 0, 781, 781, 781, 781, 0,
	1005, 658, 672, 0, 0, 0, 50, 54, 0, 76,
	73, 0, 82, 0, 0, 0, 0, 0, 1096, 1097,
	1099, 1098, 1100, 0, 731, 780, 789, 790, 579, 813,
	0, 888, 815, 834, 843, 0, 846, 474, 1000, 1010,
	1012, 1013, 0, 1025, 1026, 1027, 1029, 952, 953, 954,
	955, 0, 682, 684, 0, 551, 541, 43, 0, 0,
	71, 72, 74, 0, 83, 0, 85, 86, 0, 711,
	782, 1387, 0, 0, 786, 787, 791, 0, 876, 0,
	0, 882, 0, 889, 845, 1001, 1014, 0, 1015, 0,
	0, 0, 956, 550, 0, 824, 0, 55, 0, 57,
	59, 60, 975, 68, 69, 75, 84, 1105, 0, 784,
	0, 852, 0, 854, 0, 0, 0, 0, 0, 886,
	0, 1016, 1018, 1019, 0, 0, 1017, 552, 44, 45,
	0, 56, 0, 0, 783, 785, 0, 856, 0, 877,
	0, 0, 0, 0, 0, 0, 0, 1020, 1022, 1021,
	0, 0, 58, 976, 853, 850, 0, 888, 878, 0,
	880, 0, 0, 0, 0, 46, 47, 48, 0, 0,
	858, 0, 874, 879, 881, 883, 0, 887, 885, 977,
	857, 0, 870, 855, 0, 884, 859, -2, 0, 875,
	860, -2, 0, 868, 0, 0, 861, 869, 0, 864,
	0, 0, 0, 863, 0, -2, 871, 0, 0, 865,
	-2, 0, 873, 872,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 543,
	105, 104, 106, 3, 544, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 545, 117, 546, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:660
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:666
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:706
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:712
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:732
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:738
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:745
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:753
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:759
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:802
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:813
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:819
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:823
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:829
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:836
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:844
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:848
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:862
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:866
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:870
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:883
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:889
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:898
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:909
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:913
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:919
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:923
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:929
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:933
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:939
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:963
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:982
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:986
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:990
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1014
		{
			yyVAL.str = ""
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1021
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1026
		{
			yyVAL.str = "\n"
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1033
		{
			yyVAL.str = yyDollar[3].str
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1042
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1066
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1070
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1076
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1082
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1100
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1117
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1140
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1144
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1148
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1157
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1187
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1214
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1227
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1240
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1252
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1267
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1276
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1280
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1284
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1288
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1292
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1296
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1303
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1307
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1313
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1320
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1329
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1333
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1339
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1343
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1347
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1351
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1355
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1359
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1363
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1391
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1403
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1407
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1411
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1415
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1419
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1423
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1427
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1431
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1451
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1455
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1459
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1463
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1467
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1471
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1475
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1479
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1483
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1487
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1491
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1495
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1499
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1503
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1507
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1511
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1515
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1519
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1523
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1527
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1531
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1535
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1554
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1561
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1570
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1600
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1604
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1608
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1624
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1631
		{
			yyVAL.str = yyDollar[3].str
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1637
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1641
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1655
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1672
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1680
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1703
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1726
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1733
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1740
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1748
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1755
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1762
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1779
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1785
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1789
		{
			yyVAL.str = yyDollar[1].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1795
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1799
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1805
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1809
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1826
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1839
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1843
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1847
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1851
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1855
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1859
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1863
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1877
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1886
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1891
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1917
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1934
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1941
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1967
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1973
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1989
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1993
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:1999
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2005
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2009
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2013
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2017
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2035
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2045
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2055
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2067
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2077
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2083
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2087
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2091
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2099
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2103
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2111
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2119
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2129
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2170
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2174
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2180
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2186
		{
			yyVAL.str = yyDollar[1].str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2191
		{
			yyVAL.str = "true"
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
			yyVAL.str = "false"
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2213
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2233
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2240
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2244
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2254
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2320
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2326
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2370
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2386
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2390
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2394
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2398
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2402
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2410
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2414
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2430
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2434
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2438
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2442
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2446
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2452
		{
			yyVAL.item = nil
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2457
		{
			yyVAL.item = nil
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2502
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2506
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2519
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2530
		{
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2534
		{
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2548
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2554
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2560
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2572
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2601
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2613
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2631
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2638
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2648
		{
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2650
		{
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2669
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2686
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2692
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2704
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2729
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2741
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2745
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2751
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2763
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2790
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2799
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2803
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2808
		{
			yyVAL.str = ""
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2812
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2818
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2831
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2835
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2841
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2860
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2864
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2870
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2876
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2880
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2884
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2890
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2894
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2934
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2943
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2947
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2999
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3016
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3021
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3028
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3044
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3057
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3068
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3072
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3078
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3083
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3090
		{
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3092
		{
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3095
		{
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3104
		{
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3108
		{
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3113
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3122
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3135
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3143
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3150
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3157
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3177
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3190
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3196
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3200
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3206
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3213
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3219
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3227
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3241
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3260
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3264
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3273
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3277
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3283
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3292
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3296
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3302
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3306
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3312
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3316
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3322
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3327
		{
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3338
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3342
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3358
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3364
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3368
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3374
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3378
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3414
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3432
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3468
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3481
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3485
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3490
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3494
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3501
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3506
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3527
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3545
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3561
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3565
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3571
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3583
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3592
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3598
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3602
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3606
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3615
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3621
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3627
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3631
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3637
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3642
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3646
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3650
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3655
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3659
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3663
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3669
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3677
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3691
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3695
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3705
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3715
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3737
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3753
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3778
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3786
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3794
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3802
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3810
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3818
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3826
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3836
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3861
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3865
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3869
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3878
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3882
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3891
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3895
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3904
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3913
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3919
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3923
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3929
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3933
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3938
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3942
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3947
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3955
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3961
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3969
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3977
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3987
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3993
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4002
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4011
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4020
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4030
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4034
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4044
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4048
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4052
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4056
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4062
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4072
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4076
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4082
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4092
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4098
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4104
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4108
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4112
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4122
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4128
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4132
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4142
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4148
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4152
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4162
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4175
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4187
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4200
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4218
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4222
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4246
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4251
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4255
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4259
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4263
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4272
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4276
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4280
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4284
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4289
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4293
		{
			yyVAL.str = yyDollar[1].str
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4297
		{
			yyVAL.str = yyDollar[2].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4303
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4309
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4313
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4317
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4321
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4325
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4331
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 708:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4363
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4373
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4379
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 711:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4386
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4398
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4403
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4416
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4420
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4426
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4432
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4436
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4440
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4446
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4452
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4458
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4481
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4487
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4497
		{
			yyVAL.str = yyDollar[1].str
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4501
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4507
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4514
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4520
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4528
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4534
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4541
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4549
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4555
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4576
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4587
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4591
		{
			yyVAL.str = yyDollar[2].str
		}
	case 742:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4597
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4611
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4617
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4629
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4638
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4647
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4652
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4658
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4666
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4772
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4776
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4782
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4792
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4796
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4802
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4812
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4816
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4820
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4829
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4835
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4842
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4848
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4857
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4864
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4873
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4877
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4883
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4897
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4901
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4905
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4910
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4914
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4918
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4928
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4951
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4977
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4981
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4989
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4995
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4999
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5005
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5010
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5037
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5052
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5062
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5066
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5075
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5081
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5085
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5091
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5095
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5104
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5108
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5114
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5126
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5135
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5148
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5155
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5165
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5173
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5184
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5188
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5193
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5197
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5215
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5228
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5242
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5250
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5257
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5264
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5271
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5282
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5286
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5294
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5301
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5312
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5319
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5330
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5337
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5344
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5351
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5371
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5385
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5392
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5403
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5416
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5422
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5426
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5432
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5441
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5455
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5461
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5465
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5471
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5478
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5487
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5491
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5500
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5505
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5509
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5514
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5518
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5528
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5532
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5551
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5559
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5567
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5578
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5587
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5597
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5607
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5611
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5620
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5629
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5635
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5639
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5643
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5649
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5657
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5665
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5669
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5686
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5690
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5698
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5706
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5710
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5714
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5718
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5722
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5726
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5730
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5734
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5738
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5742
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5746
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5750
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5754
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5758
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5762
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5769
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5773
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5779
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5784
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5788
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5792
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5798
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5802
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5806
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5818
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5832
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5836
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5845
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5850
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5856
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5863
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5867
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5873
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5877
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5883
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5895
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5901
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5910
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5919
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5942
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5951
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5961
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5969
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5975
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5979
		{
			yyVAL.str = yyDollar[1].str
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5989
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5995
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6001
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6015
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6019
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6025
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6031
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6035
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6039
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6045
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6049
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6053
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6057
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6063
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6067
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6071
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6080
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6086
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6090
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6104
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6108
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6112
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6116
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6121
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6125
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6129
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6133
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6137
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6141
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6145
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6149
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6162
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6177
		{
			yyVAL.str = ""
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6181
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6187
		{
			yyVAL.str = ""
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6191
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6197
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6209
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6216
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6223
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6230
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6237
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6246
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6252
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6274
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6279
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6286
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6290
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6294
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6303
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6308
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6312
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6328
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6334
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6338
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6342
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6346
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6350
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6354
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6358
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6362
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6366
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6370
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6374
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6378
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6382
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6388
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6392
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6400
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6408
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6416
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6420
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6424
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6428
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6432
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6437
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6445
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6450
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6454
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6463
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6467
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6471
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6475
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6479
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6485
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6498
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6507
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6513
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6517
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6523
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6533
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6550
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6605
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6634
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6649
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6666
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6681
		{
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6687
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6691
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6695
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6701
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6705
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6713
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6717
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6721
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6727
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6734
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6747
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6754
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6763
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6768
		{
			yyVAL.str = ","
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6772
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6784
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6794
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6805
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6815
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6824
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6833
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6843
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6853
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6863
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6873
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6893
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6903
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6913
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6923
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6933
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6943
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6953
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6970
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6978
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6994
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7002
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7012
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7020
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7029
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7037
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7045
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7053
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7061
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7072
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7082
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7094
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7105
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7127
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7163
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7175
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7187
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7198
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7213
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7220
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7232
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7240
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7248
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7259
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7268
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7277
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7285
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7295
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7303
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7317
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7327
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7346
		{
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7348
		{
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7389
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7400
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7404
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7408
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7414
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7423
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7429
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7433
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7440
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7444
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7448
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7456
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7460
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7464
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7468
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7474
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7478
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7482
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7486
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7490
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7494
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7498
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7502
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7506
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7510
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7518
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7522
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7526
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7530
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7550
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7554
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7564
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7570
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7574
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7581
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7585
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7589
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7595
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7599
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7603
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7607
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7611
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7615
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7619
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7625
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7629
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7633
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7637
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7643
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7647
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7665
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7669
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7673
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7677
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7681
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7685
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7699
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7703
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7710
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7721
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7726
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7732
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7744
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7756
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7768
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7781
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7794
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7807
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7820
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7833
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7846
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7859
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7872
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7885
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7898
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7913
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7940
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7982
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8030
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8047
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8059
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8079
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8099
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8119
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8135
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8148
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8161
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8174
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8187
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8211
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8223
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8235
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8247
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8259
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8271
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8283
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8295
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8308
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8321
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8336
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8344
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8353
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8363
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8386
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8391
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8397
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8404
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8408
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8413
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8417
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8423
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8429
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8436
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8443
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8452
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8459
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8466
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8475
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8479
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8483
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8489
		{
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8501
		{
			yyVAL.str = ""
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8505
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

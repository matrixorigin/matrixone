// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const ELSEIF = 57442
const LOWER_THAN_EQ = 57443
const LE = 57444
const GE = 57445
const NE = 57446
const NULL_SAFE_EQUAL = 57447
const IS = 57448
const LIKE = 57449
const REGEXP = 57450
const IN = 57451
const ASSIGNMENT = 57452
const ILIKE = 57453
const SHIFT_LEFT = 57454
const SHIFT_RIGHT = 57455
const DIV = 57456
const MOD = 57457
const UNARY = 57458
const COLLATE = 57459
const BINARY = 57460
const UNDERSCORE_BINARY = 57461
const INTERVAL = 57462
const OUT = 57463
const INOUT = 57464
const BEGIN = 57465
const START = 57466
const TRANSACTION = 57467
const COMMIT = 57468
const ROLLBACK = 57469
const WORK = 57470
const CONSISTENT = 57471
const SNAPSHOT = 57472
const CHAIN = 57473
const NO = 57474
const RELEASE = 57475
const PRIORITY = 57476
const QUICK = 57477
const BIT = 57478
const TINYINT = 57479
const SMALLINT = 57480
const MEDIUMINT = 57481
const INT = 57482
const INTEGER = 57483
const BIGINT = 57484
const INTNUM = 57485
const REAL = 57486
const DOUBLE = 57487
const FLOAT_TYPE = 57488
const DECIMAL = 57489
const NUMERIC = 57490
const DECIMAL_VALUE = 57491
const TIME = 57492
const TIMESTAMP = 57493
const DATETIME = 57494
const YEAR = 57495
const CHAR = 57496
const VARCHAR = 57497
const BOOL = 57498
const CHARACTER = 57499
const VARBINARY = 57500
const NCHAR = 57501
const TEXT = 57502
const TINYTEXT = 57503
const MEDIUMTEXT = 57504
const LONGTEXT = 57505
const BLOB = 57506
const TINYBLOB = 57507
const MEDIUMBLOB = 57508
const LONGBLOB = 57509
const JSON = 57510
const ENUM = 57511
const UUID = 57512
const GEOMETRY = 57513
const POINT = 57514
const LINESTRING = 57515
const POLYGON = 57516
const GEOMETRYCOLLECTION = 57517
const MULTIPOINT = 57518
const MULTILINESTRING = 57519
const MULTIPOLYGON = 57520
const INT1 = 57521
const INT2 = 57522
const INT3 = 57523
const INT4 = 57524
const INT8 = 57525
const S3OPTION = 57526
const SQL_SMALL_RESULT = 57527
const SQL_BIG_RESULT = 57528
const SQL_BUFFER_RESULT = 57529
const LOW_PRIORITY = 57530
const HIGH_PRIORITY = 57531
const DELAYED = 57532
const CREATE = 57533
const ALTER = 57534
const DROP = 57535
const RENAME = 57536
const ANALYZE = 57537
const ADD = 57538
const RETURNS = 57539
const SCHEMA = 57540
const TABLE = 57541
const SEQUENCE = 57542
const INDEX = 57543
const VIEW = 57544
const TO = 57545
const IGNORE = 57546
const IF = 57547
const PRIMARY = 57548
const COLUMN = 57549
const CONSTRAINT = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const FOREIGN = 57553
const KEY_BLOCK_SIZE = 57554
const SHOW = 57555
const DESCRIBE = 57556
const EXPLAIN = 57557
const DATE = 57558
const ESCAPE = 57559
const REPAIR = 57560
const OPTIMIZE = 57561
const TRUNCATE = 57562
const MAXVALUE = 57563
const PARTITION = 57564
const REORGANIZE = 57565
const LESS = 57566
const THAN = 57567
const PROCEDURE = 57568
const TRIGGER = 57569
const STATUS = 57570
const VARIABLES = 57571
const ROLE = 57572
const PROXY = 57573
const AVG_ROW_LENGTH = 57574
const STORAGE = 57575
const DISK = 57576
const MEMORY = 57577
const CHECKSUM = 57578
const COMPRESSION = 57579
const DATA = 57580
const DIRECTORY = 57581
const DELAY_KEY_WRITE = 57582
const ENCRYPTION = 57583
const ENGINE = 57584
const MAX_ROWS = 57585
const MIN_ROWS = 57586
const PACK_KEYS = 57587
const ROW_FORMAT = 57588
const STATS_AUTO_RECALC = 57589
const STATS_PERSISTENT = 57590
const STATS_SAMPLE_PAGES = 57591
const DYNAMIC = 57592
const COMPRESSED = 57593
const REDUNDANT = 57594
const COMPACT = 57595
const FIXED = 57596
const COLUMN_FORMAT = 57597
const AUTO_RANDOM = 57598
const RESTRICT = 57599
const CASCADE = 57600
const ACTION = 57601
const PARTIAL = 57602
const SIMPLE = 57603
const CHECK = 57604
const ENFORCED = 57605
const RANGE = 57606
const LIST = 57607
const ALGORITHM = 57608
const LINEAR = 57609
const PARTITIONS = 57610
const SUBPARTITION = 57611
const SUBPARTITIONS = 57612
const CLUSTER = 57613
const TYPE = 57614
const ANY = 57615
const SOME = 57616
const EXTERNAL = 57617
const LOCALFILE = 57618
const URL = 57619
const PREPARE = 57620
const DEALLOCATE = 57621
const RESET = 57622
const EXTENSION = 57623
const INCREMENT = 57624
const CYCLE = 57625
const MINVALUE = 57626
const PUBLICATION = 57627
const SUBSCRIPTIONS = 57628
const PUBLICATIONS = 57629
const PROPERTIES = 57630
const PARSER = 57631
const VISIBLE = 57632
const INVISIBLE = 57633
const BTREE = 57634
const HASH = 57635
const RTREE = 57636
const BSI = 57637
const ZONEMAP = 57638
const LEADING = 57639
const BOTH = 57640
const TRAILING = 57641
const UNKNOWN = 57642
const EXPIRE = 57643
const ACCOUNT = 57644
const ACCOUNTS = 57645
const UNLOCK = 57646
const DAY = 57647
const NEVER = 57648
const PUMP = 57649
const MYSQL_COMPATIBILITY_MODE = 57650
const SECOND = 57651
const ASCII = 57652
const COALESCE = 57653
const COLLATION = 57654
const HOUR = 57655
const MICROSECOND = 57656
const MINUTE = 57657
const MONTH = 57658
const QUARTER = 57659
const REPEAT = 57660
const REVERSE = 57661
const ROW_COUNT = 57662
const WEEK = 57663
const REVOKE = 57664
const FUNCTION = 57665
const PRIVILEGES = 57666
const TABLESPACE = 57667
const EXECUTE = 57668
const SUPER = 57669
const GRANT = 57670
const OPTION = 57671
const REFERENCES = 57672
const REPLICATION = 57673
const SLAVE = 57674
const CLIENT = 57675
const USAGE = 57676
const RELOAD = 57677
const FILE = 57678
const TEMPORARY = 57679
const ROUTINE = 57680
const EVENT = 57681
const SHUTDOWN = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const ENGINES = 57689
const LOW_CARDINALITY = 57690
const ADMIN_NAME = 57691
const RANDOM = 57692
const SUSPEND = 57693
const ATTRIBUTE = 57694
const HISTORY = 57695
const REUSE = 57696
const CURRENT = 57697
const OPTIONAL = 57698
const FAILED_LOGIN_ATTEMPTS = 57699
const PASSWORD_LOCK_TIME = 57700
const UNBOUNDED = 57701
const SECONDARY = 57702
const USER = 57703
const IDENTIFIED = 57704
const CIPHER = 57705
const ISSUER = 57706
const X509 = 57707
const SUBJECT = 57708
const SAN = 57709
const REQUIRE = 57710
const SSL = 57711
const NONE = 57712
const PASSWORD = 57713
const MAX_QUERIES_PER_HOUR = 57714
const MAX_UPDATES_PER_HOUR = 57715
const MAX_CONNECTIONS_PER_HOUR = 57716
const MAX_USER_CONNECTIONS = 57717
const FORMAT = 57718
const VERBOSE = 57719
const CONNECTION = 57720
const TRIGGERS = 57721
const PROFILES = 57722
const LOAD = 57723
const INFILE = 57724
const TERMINATED = 57725
const OPTIONALLY = 57726
const ENCLOSED = 57727
const ESCAPED = 57728
const STARTING = 57729
const LINES = 57730
const ROWS = 57731
const IMPORT = 57732
const MODUMP = 57733
const OVER = 57734
const PRECEDING = 57735
const FOLLOWING = 57736
const GROUPS = 57737
const DATABASES = 57738
const TABLES = 57739
const SEQUENCES = 57740
const EXTENDED = 57741
const FULL = 57742
const PROCESSLIST = 57743
const FIELDS = 57744
const COLUMNS = 57745
const OPEN = 57746
const ERRORS = 57747
const WARNINGS = 57748
const INDEXES = 57749
const SCHEMAS = 57750
const NODE = 57751
const LOCKS = 57752
const ROLES = 57753
const TABLE_NUMBER = 57754
const COLUMN_NUMBER = 57755
const TABLE_VALUES = 57756
const TABLE_SIZE = 57757
const NAMES = 57758
const GLOBAL = 57759
const PERSIST = 57760
const SESSION = 57761
const ISOLATION = 57762
const LEVEL = 57763
const READ = 57764
const WRITE = 57765
const ONLY = 57766
const REPEATABLE = 57767
const COMMITTED = 57768
const UNCOMMITTED = 57769
const SERIALIZABLE = 57770
const LOCAL = 57771
const EVENTS = 57772
const PLUGINS = 57773
const CURRENT_TIMESTAMP = 57774
const DATABASE = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const UTC_DATE = 57779
const UTC_TIME = 57780
const UTC_TIMESTAMP = 57781
const REPLACE = 57782
const CONVERT = 57783
const SEPARATOR = 57784
const TIMESTAMPDIFF = 57785
const CURRENT_DATE = 57786
const CURRENT_USER = 57787
const CURRENT_ROLE = 57788
const SECOND_MICROSECOND = 57789
const MINUTE_MICROSECOND = 57790
const MINUTE_SECOND = 57791
const HOUR_MICROSECOND = 57792
const HOUR_SECOND = 57793
const HOUR_MINUTE = 57794
const DAY_MICROSECOND = 57795
const DAY_SECOND = 57796
const DAY_MINUTE = 57797
const DAY_HOUR = 57798
const YEAR_MONTH = 57799
const SQL_TSI_HOUR = 57800
const SQL_TSI_DAY = 57801
const SQL_TSI_WEEK = 57802
const SQL_TSI_MONTH = 57803
const SQL_TSI_QUARTER = 57804
const SQL_TSI_YEAR = 57805
const SQL_TSI_SECOND = 57806
const SQL_TSI_MINUTE = 57807
const RECURSIVE = 57808
const CONFIG = 57809
const DRAINER = 57810
const MATCH = 57811
const AGAINST = 57812
const BOOLEAN = 57813
const LANGUAGE = 57814
const WITH = 57815
const QUERY = 57816
const EXPANSION = 57817
const ADDDATE = 57818
const BIT_AND = 57819
const BIT_OR = 57820
const BIT_XOR = 57821
const CAST = 57822
const COUNT = 57823
const APPROX_COUNT_DISTINCT = 57824
const APPROX_PERCENTILE = 57825
const CURDATE = 57826
const CURTIME = 57827
const DATE_ADD = 57828
const DATE_SUB = 57829
const EXTRACT = 57830
const GROUP_CONCAT = 57831
const MAX = 57832
const MID = 57833
const MIN = 57834
const NOW = 57835
const POSITION = 57836
const SESSION_USER = 57837
const STD = 57838
const STDDEV = 57839
const MEDIAN = 57840
const STDDEV_POP = 57841
const STDDEV_SAMP = 57842
const SUBDATE = 57843
const SUBSTR = 57844
const SUBSTRING = 57845
const SUM = 57846
const SYSDATE = 57847
const SYSTEM_USER = 57848
const TRANSLATE = 57849
const TRIM = 57850
const VARIANCE = 57851
const VAR_POP = 57852
const VAR_SAMP = 57853
const AVG = 57854
const RANK = 57855
const NEXTVAL = 57856
const SETVAL = 57857
const CURRVAL = 57858
const LASTVAL = 57859
const ARROW = 57860
const ROW = 57861
const OUTFILE = 57862
const HEADER = 57863
const MAX_FILE_SIZE = 57864
const FORCE_QUOTE = 57865
const PARALLEL = 57866
const UNUSED = 57867
const BINDINGS = 57868
const DO = 57869
const DECLARE = 57870
const LOOP = 57871
const WHILE = 57872
const LEAVE = 57873
const ITERATE = 57874
const UNTIL = 57875
const CALL = 57876
const SPBEGIN = 57877
const BACKEND = 57878
const SERVERS = 57879
const KILL = 57880
const QUERY_RESULT = 57881

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9402

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 110,
	21, 626,
	-2, 607,
	-1, 124,
	218, 843,
	-2, 914,
	-1, 146,
	42, 449,
	218, 449,
	245, 456,
	246, 456,
	424, 449,
	-2, 482,
	-1, 182,
	558, 1574,
	-2, 367,
	-1, 500,
	294, 130,
	399, 130,
	-2, 1487,
	-1, 563,
	67, 1293,
	-2, 1628,
	-1, 564,
	67, 1311,
	-2, 1599,
	-1, 568,
	67, 1312,
	-2, 1627,
	-1, 591,
	67, 1223,
	-2, 1689,
	-1, 592,
	67, 1224,
	-2, 1688,
	-1, 593,
	67, 1225,
	-2, 1678,
	-1, 594,
	67, 1653,
	-2, 1673,
	-1, 595,
	67, 1654,
	-2, 1674,
	-1, 596,
	67, 1655,
	-2, 1680,
	-1, 597,
	67, 1656,
	-2, 1663,
	-1, 598,
	67, 1657,
	-2, 1671,
	-1, 599,
	67, 1658,
	-2, 1681,
	-1, 600,
	67, 1659,
	-2, 1682,
	-1, 601,
	67, 1660,
	-2, 1687,
	-1, 602,
	67, 1661,
	-2, 1692,
	-1, 603,
	67, 1662,
	-2, 1693,
	-1, 605,
	67, 1290,
	-2, 1479,
	-1, 612,
	67, 1299,
	-2, 1505,
	-1, 616,
	67, 1303,
	-2, 1545,
	-1, 617,
	67, 1304,
	-2, 1623,
	-1, 625,
	67, 1314,
	-2, 1608,
	-1, 627,
	67, 1316,
	-2, 1618,
	-1, 628,
	67, 1317,
	-2, 1643,
	-1, 639,
	67, 1201,
	-2, 1683,
	-1, 640,
	67, 1202,
	-2, 1684,
	-1, 641,
	67, 1203,
	-2, 1685,
	-1, 645,
	21, 627,
	-2, 590,
	-1, 715,
	419, 482,
	420, 482,
	-2, 450,
	-1, 757,
	105, 1479,
	116, 1479,
	136, 1479,
	-2, 1454,
	-1, 857,
	21, 627,
	-2, 590,
	-1, 956,
	21, 626,
	-2, 1106,
	-1, 1298,
	67, 1361,
	-2, 1625,
	-1, 1299,
	67, 1362,
	-2, 1626,
	-1, 1431,
	68, 768,
	-2, 774,
	-1, 1757,
	68, 1440,
	137, 1440,
	-2, 1610,
	-1, 1758,
	68, 1440,
	137, 1440,
	-2, 1609,
	-1, 1759,
	68, 1418,
	137, 1418,
	-2, 1596,
	-1, 1760,
	68, 1419,
	137, 1419,
	-2, 1601,
	-1, 1761,
	68, 1420,
	137, 1420,
	-2, 1533,
	-1, 1762,
	68, 1421,
	137, 1421,
	-2, 1527,
	-1, 1763,
	68, 1422,
	137, 1422,
	-2, 1470,
	-1, 1764,
	68, 1423,
	137, 1423,
	-2, 1598,
	-1, 1765,
	68, 1424,
	137, 1424,
	-2, 1531,
	-1, 1766,
	68, 1425,
	137, 1425,
	-2, 1526,
	-1, 1767,
	68, 1426,
	137, 1426,
	-2, 1519,
	-1, 1769,
	68, 1429,
	137, 1429,
	-2, 1643,
	-1, 1770,
	68, 1409,
	137, 1409,
	-2, 1628,
	-1, 1771,
	68, 1438,
	137, 1438,
	-2, 1599,
	-1, 1772,
	68, 1438,
	137, 1438,
	-2, 1627,
	-1, 1773,
	68, 1438,
	137, 1438,
	-2, 1488,
	-1, 1774,
	68, 1436,
	137, 1436,
	-2, 1618,
	-1, 1775,
	68, 1433,
	137, 1433,
	-2, 1510,
	-1, 1776,
	67, 1391,
	68, 1391,
	137, 1391,
	361, 1391,
	362, 1391,
	363, 1391,
	-2, 1469,
	-1, 1777,
	67, 1392,
	68, 1392,
	137, 1392,
	361, 1392,
	362, 1392,
	363, 1392,
	-2, 1471,
	-1, 1778,
	67, 1395,
	68, 1395,
	137, 1395,
	361, 1395,
	362, 1395,
	363, 1395,
	-2, 1600,
	-1, 1779,
	67, 1397,
	68, 1397,
	137, 1397,
	361, 1397,
	362, 1397,
	363, 1397,
	-2, 1583,
	-1, 1780,
	67, 1399,
	68, 1399,
	137, 1399,
	361, 1399,
	362, 1399,
	363, 1399,
	-2, 1532,
	-1, 1781,
	67, 1401,
	68, 1401,
	137, 1401,
	361, 1401,
	362, 1401,
	363, 1401,
	-2, 1515,
	-1, 1782,
	67, 1402,
	68, 1402,
	137, 1402,
	361, 1402,
	362, 1402,
	363, 1402,
	-2, 1516,
	-1, 1783,
	67, 1404,
	68, 1404,
	137, 1404,
	361, 1404,
	362, 1404,
	363, 1404,
	-2, 1468,
	-1, 1784,
	68, 1443,
	137, 1443,
	361, 1443,
	362, 1443,
	363, 1443,
	-2, 1493,
	-1, 1785,
	68, 1443,
	137, 1443,
	361, 1443,
	362, 1443,
	363, 1443,
	-2, 1506,
	-1, 1786,
	68, 1446,
	137, 1446,
	361, 1446,
	362, 1446,
	363, 1446,
	-2, 1489,
	-1, 1787,
	68, 1443,
	137, 1443,
	361, 1443,
	362, 1443,
	363, 1443,
	-2, 1568,
	-1, 1800,
	88, 878,
	132, 878,
	171, 878,
	174, 878,
	258, 878,
	-2, 871,
	-1, 1911,
	21, 626,
	-2, 718,
	-1, 2090,
	88, 878,
	132, 878,
	171, 878,
	174, 878,
	258, 878,
	-2, 872,
	-1, 2102,
	65, 536,
	137, 536,
	-2, 1009,
	-1, 2120,
	279, 1074,
	-2, 1053,
	-1, 2380,
	279, 1074,
	-2, 1054,
	-1, 2513,
	88, 878,
	132, 878,
	171, 878,
	174, 878,
	-2, 957,
	-1, 2516,
	88, 878,
	132, 878,
	171, 878,
	174, 878,
	-2, 957,
	-1, 2526,
	65, 536,
	137, 536,
	-2, 1010,
	-1, 2625,
	88, 878,
	132, 878,
	171, 878,
	174, 878,
	-2, 958,
	-1, 2915,
	68, 929,
	137, 929,
	-2, 878,
	-1, 2919,
	68, 929,
	137, 929,
	-2, 878,
	-1, 2933,
	68, 933,
	137, 933,
	-2, 878,
	-1, 2938,
	68, 934,
	137, 934,
	-2, 878,
}

const yyPrivate = 57344

const yyLast = 34724

var yyAct = [...]int{
	530, 2919, 2918, 1494, 2809, 2927, 173, 2898, 509, 511,
	1217, 2849, 1279, 2857, 532, 2827, 2592, 2597, 2685, 2392,
	2768, 2657, 2769, 2619, 1735, 2736, 1091, 2469, 2752, 2756,
	2618, 2679, 646, 2470, 2617, 987, 2701, 1208, 2595, 419,
	2669, 1452, 2105, 2646, 560, 2624, 2357, 1282, 425, 2587,
	430, 430, 2186, 2185, 1142, 2187, 430, 446, 453, 2536,
	1549, 453, 1275, 2497, 1552, 1838, 158, 2171, 2404, 1905,
	2467, 2381, 1527, 2179, 513, 1645, 1995, 1614, 1755, 2455,
	464, 2208, 2438, 1841, 2182, 2333, 2330, 2403, 2328, 851,
	1133, 1809, 1049, 1566, 1753, 2238, 1454, 1889, 458, 756,
	1745, 2355, 1994, 1623, 2091, 1622, 508, 502, 1497, 53,
	2277, 1413, 1588, 1615, 1945, 1545, 1204, 762, 503, 36,
	2221, 1640, 1906, 1641, 1528, 1894, 748, 692, 2069, 1199,
	1530, 1065, 2073, 2122, 1839, 1490, 1808, 1100, 169, 8,
	168, 7, 6, 1439, 806, 1278, 1673, 1209, 1421, 1273,
	419, 1642, 1962, 1173, 1464, 512, 1751, 424, 1099, 1652,
	1080, 501, 109, 1793, 1312, 418, 1463, 2037, 1328, 1264,
	1621, 868, 1216, 173, 1151, 173, 451, 797, 798, 1618,
	1604, 14, 35, 1180, 1578, 760, 520, 1023, 1067, 1272,
	747, 1913, 1438, 1481, 439, 503, 1076, 643, 466, 691,
	2036, 1334, 1047, 26, 1333, 15, 1092, 23, 1125, 159,
	1172, 442, 16, 1857, 10, 152, 710, 13, 155, 689,
	2271, 2271, 988, 452, 510, 1535, 1659, 1997, 645, 1649,
	467, 2462, 1951, 1949, 1183, 1948, 1187, 794, 449, 793,
	1946, 795, 790, 790, 789, 790, 722, 157, 426, 1112,
	1185, 925, 926, 927, 924, 2585, 925, 926, 927, 924,
	450, 2234, 447, 766, 2232, 1593, 2675, 2670, 2588, 435,
	2468, 1417, 2745, 1617, 448, 429, 429, 982, 644, 654,
	156, 437, 1354, 2609, 456, 156, 888, 49, 148, 125,
	2711, 156, 156, 49, 148, 125, 8, 2800, 7, 2610,
	788, 1039, 156, 156, 156, 156, 1982, 1646, 2720, 156,
	462, 463, 1231, 2300, 1657, 156, 763, 49, 148, 125,
	1990, 1797, 1224, 634, 1926, 633, 635, 636, 1228, 637,
	638, 922, 903, 1927, 2712, 904, 765, 153, 1221, 2253,
	2246, 108, 153, 2845, 1108, 108, 1564, 1109, 153, 1230,
	821, 2071, 1040, 1425, 1426, 1963, 1368, 1097, 1098, 1223,
	153, 153, 153, 906, 731, 1088, 153, 1477, 736, 647,
	2843, 735, 153, 1281, 920, 655, 1095, 759, 1249, 758,
	1094, 1097, 1098, 2772, 2773, 2746, 2747, 925, 926, 927,
	924, 1728, 2831, 2832, 2680, 2681, 2682, 2683, 2471, 2741,
	2677, 915, 2738, 2738, 2070, 2239, 896, 2673, 2605, 898,
	2240, 2471, 2241, 1977, 862, 1546, 871, 2751, 2480, 1284,
	2498, 1653, 2344, 1538, 2505, 2615, 2334, 1884, 1792, 430,
	1111, 2693, 2266, 1601, 1350, 901, 2399, 899, 1347, 430,
	861, 2076, 1349, 1346, 1348, 1352, 1353, 1260, 2061, 2799,
	1351, 1193, 1192, 809, 740, 453, 453, 2264, 430, 918,
	919, 1186, 1184, 860, 917, 1987, 2696, 891, 856, 858,
	504, 737, 2175, 829, 833, 835, 837, 839, 840, 842,
	2586, 846, 843, 844, 845, 2233, 1887, 824, 825, 826,
	827, 807, 808, 830, 902, 810, 800, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 822, 828, 892,
	1886, 871, 1890, 124, 2612, 154, 832, 834, 836, 838,
	841, 855, 761, 2771, 1283, 958, 2338, 2802, 2803, 2847,
	739, 2838, 894, 2604, 1265, 146, 2354, 1269, 2361, 2606,
	2761, 1086, 883, 2098, 897, 900, 2412, 2413, 2342, 455,
	1658, 2708, 454, 823, 857, 766, 2647, 2648, 2649, 2651,
	2650, 1268, 861, 451, 451, 2757, 905, 1542, 893, 1662,
	1664, 1665, 1120, 908, 2557, 2912, 909, 2928, 1110, 2540,
	1562, 1563, 2811, 2866, 1075, 992, 2727, 1357, 1358, 1359,
	1360, 1361, 1362, 1355, 1356, 913, 914, 873, 872, 2842,
	2339, 2340, 738, 2549, 911, 2873, 497, 2877, 763, 499,
	2085, 2086, 2087, 2088, 498, 2341, 1290, 1293, 1294, 2807,
	2808, 2336, 2811, 1867, 766, 449, 449, 1291, 765, 2659,
	2156, 1866, 2562, 2563, 2419, 2544, 991, 1270, 2082, 1647,
	895, 791, 792, 1129, 2484, 2270, 796, 450, 450, 447,
	447, 1128, 1090, 1089, 853, 864, 865, 881, 1267, 1647,
	1647, 448, 448, 1073, 859, 1045, 425, 1048, 1072, 866,
	1071, 2929, 2923, 2899, 2702, 1020, 907, 763, 876, 877,
	2935, 2010, 2011, 879, 852, 2316, 790, 790, 790, 790,
	880, 692, 873, 872, 790, 1097, 1098, 765, 2518, 790,
	1674, 2710, 2709, 2583, 1947, 1050, 2748, 2749, 964, 1188,
	2801, 732, 912, 1660, 2210, 2212, 462, 1648, 2335, 2345,
	2735, 2075, 1097, 1098, 1126, 2694, 2267, 1983, 1096, 888,
	1547, 1916, 50, 2852, 1844, 910, 1093, 430, 50, 1122,
	960, 961, 962, 963, 1650, 1856, 644, 1087, 461, 2848,
	419, 419, 419, 419, 2269, 2352, 1146, 1146, 2616, 430,
	126, 1051, 1052, 1053, 1054, 126, 1056, 1847, 1266, 2611,
	1060, 126, 126, 882, 2079, 2080, 453, 1048, 425, 1539,
	1176, 1176, 126, 126, 126, 126, 1055, 1153, 2078, 126,
	1991, 173, 1000, 1001, 734, 126, 2014, 733, 2922, 1059,
	419, 1058, 1663, 1261, 1057, 761, 2542, 457, 831, 2337,
	2541, 1148, 887, 2324, 2658, 686, 687, 688, 1144, 1144,
	1661, 2279, 2278, 1046, 846, 843, 844, 845, 1242, 1243,
	2019, 1062, 2018, 2017, 2015, 1741, 1740, 2060, 1739, 1077,
	1081, 1081, 1081, 1194, 1140, 1141, 2545, 2546, 1215, 1292,
	1218, 2934, 2853, 1025, 1043, 1226, 1428, 2157, 2159, 2160,
	2161, 2158, 1077, 1077, 1082, 1083, 1027, 1429, 1843, 1851,
	781, 786, 787, 1845, 2211, 1247, 1136, 1137, 1138, 1139,
	684, 2353, 645, 1232, 1041, 1042, 732, 1074, 1146, 1738,
	1146, 861, 1427, 1121, 1084, 1848, 2016, 656, 657, 2632,
	1455, 1903, 1102, 1103, 2878, 1105, 1106, 1107, 923, 1705,
	1064, 1455, 1704, 2435, 1280, 888, 2504, 1965, 2941, 1078,
	1246, 1113, 1114, 1541, 1846, 1262, 1189, 2940, 1245, 1101,
	1861, 648, 1104, 2366, 2431, 1169, 1748, 1197, 2514, 1200,
	1201, 1729, 1206, 1207, 2103, 2931, 1581, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1749,
	1750, 766, 1118, 1323, 1324, 766, 2913, 660, 1982, 734,
	1332, 1222, 733, 1127, 648, 1229, 928, 2850, 2851, 1168,
	1154, 923, 435, 1381, 1152, 957, 451, 923, 1371, 1372,
	1373, 1177, 1211, 966, 1214, 1256, 923, 1850, 886, 1167,
	1178, 1387, 1854, 1852, 1388, 2104, 1390, 1853, 1904, 925,
	926, 927, 924, 1277, 2932, 971, 1395, 1396, 659, 1079,
	2908, 1904, 662, 661, 2020, 2021, 1733, 1904, 2066, 741,
	2902, 2901, 2435, 1274, 1258, 1655, 1263, 1295, 2882, 2859,
	854, 783, 784, 785, 2821, 1233, 2063, 1411, 449, 923,
	430, 1970, 1437, 1146, 1441, 2298, 1443, 1444, 2779, 2774,
	2729, 430, 1795, 2728, 692, 1234, 2104, 1453, 1579, 2725,
	450, 1146, 447, 2724, 645, 2723, 1928, 1122, 1238, 1255,
	2722, 1252, 446, 1254, 448, 1271, 1380, 1414, 1253, 2909,
	1250, 1646, 1021, 1251, 2697, 925, 926, 927, 924, 1655,
	1655, 1476, 1832, 1734, 1709, 1436, 2564, 1655, 2860, 1482,
	1482, 2421, 1122, 2822, 1122, 1122, 2205, 885, 430, 1276,
	1437, 1437, 1480, 2042, 1146, 1525, 1537, 2698, 2698, 2730,
	1637, 419, 1813, 1146, 1560, 1442, 1998, 1314, 2698, 1980,
	1063, 1732, 2698, 1974, 2698, 1363, 1364, 1326, 1367, 2698,
	1445, 1446, 1447, 1972, 1130, 2896, 1382, 1559, 888, 1794,
	430, 1437, 1146, 2698, 1571, 430, 430, 1574, 1967, 1389,
	2861, 1391, 1577, 1520, 1521, 1928, 1583, 1321, 1322, 1366,
	2422, 1469, 2529, 173, 2371, 1904, 173, 173, 2367, 173,
	886, 940, 923, 2223, 2106, 1985, 1475, 1984, 1440, 1478,
	1479, 1557, 1558, 1484, 1392, 923, 1976, 2261, 1813, 1077,
	1543, 2891, 1968, 1418, 1568, 1960, 1458, 1829, 1684, 1412,
	1958, 658, 1973, 1470, 1381, 1381, 1625, 1553, 1554, 1555,
	1556, 1381, 1381, 1956, 1081, 1954, 1632, 1968, 1700, 1465,
	1812, 1467, 1468, 1570, 925, 926, 927, 924, 1685, 1592,
	1175, 1175, 1595, 1596, 1473, 1598, 1548, 1474, 1572, 1573,
	1453, 1461, 1462, 1450, 1146, 1644, 1485, 1730, 1460, 1440,
	1449, 1636, 1586, 1713, 1433, 1434, 1466, 1712, 1471, 1472,
	1486, 1487, 1235, 2879, 1961, 969, 1448, 874, 1134, 1959,
	1683, 854, 849, 1456, 1457, 847, 1370, 1369, 1858, 1135,
	1078, 1638, 1955, 1483, 1955, 2762, 1626, 1274, 1703, 1813,
	1694, 1693, 1692, 1654, 1239, 1068, 1524, 1526, 1915, 1069,
	2436, 1544, 2426, 2423, 2272, 1132, 1667, 1620, 1671, 1672,
	2177, 1946, 1971, 766, 1620, 1918, 1729, 663, 863, 2460,
	766, 1565, 923, 1488, 533, 542, 923, 1329, 2633, 2763,
	534, 1569, 541, 535, 539, 538, 536, 537, 2005, 451,
	1393, 1394, 1587, 1589, 1397, 1398, 1399, 1400, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 2362, 923, 1940, 923,
	923, 923, 1655, 1240, 1606, 1567, 763, 854, 1590, 1401,
	1567, 1567, 2634, 763, 1285, 1286, 1287, 1288, 1289, 1329,
	1079, 1680, 1629, 2225, 1710, 543, 765, 1131, 1435, 2521,
	1627, 1717, 1635, 765, 943, 944, 945, 946, 947, 940,
	1630, 449, 1631, 2519, 1181, 766, 1590, 925, 926, 927,
	924, 502, 1639, 861, 1788, 2363, 2461, 540, 1330, 1331,
	927, 924, 2796, 450, 1365, 447, 430, 430, 430, 924,
	1810, 1634, 1375, 2522, 2552, 2551, 1756, 448, 2242, 2134,
	1817, 1122, 925, 926, 927, 924, 2133, 2520, 2128, 1675,
	2126, 1822, 2533, 2463, 925, 926, 927, 924, 763, 2364,
	1385, 1668, 1181, 1666, 1117, 1122, 1119, 497, 1123, 1124,
	499, 1386, 861, 1415, 2917, 498, 1679, 1419, 765, 2905,
	1422, 2613, 2502, 1314, 938, 948, 949, 941, 942, 943,
	944, 945, 946, 947, 940, 1837, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 2867, 2862, 2876, 1171, 925, 926,
	927, 924, 2812, 1908, 1908, 1537, 1908, 1320, 1833, 1950,
	2614, 2503, 1669, 1670, 941, 942, 943, 944, 945, 946,
	947, 940, 861, 1317, 1319, 1316, 2787, 1318, 1819, 1820,
	1146, 430, 925, 926, 927, 924, 1789, 2167, 1823, 1824,
	2875, 2007, 2764, 2713, 2165, 992, 861, 425, 1727, 2671,
	1176, 2837, 1537, 2639, 2636, 1935, 2163, 1937, 2635, 2153,
	2523, 173, 1742, 925, 926, 927, 924, 1860, 2501, 1756,
	1796, 2343, 1942, 1910, 1415, 1914, 2166, 1912, 2257, 2237,
	2236, 1415, 1415, 2164, 1919, 1920, 1921, 1922, 1081, 2151,
	1831, 2150, 1924, 1682, 2149, 2162, 991, 1818, 2152, 925,
	926, 927, 924, 1826, 1736, 1737, 1827, 1978, 1182, 1830,
	1644, 1828, 2146, 2140, 766, 2137, 2136, 1146, 1609, 1146,
	1608, 1146, 1591, 1607, 1934, 1594, 861, 1941, 1597, 1603,
	1602, 1599, 1825, 931, 932, 933, 934, 935, 936, 937,
	929, 1802, 1803, 1804, 1236, 1932, 1038, 2180, 2329, 1992,
	925, 926, 927, 924, 1939, 1146, 2023, 2593, 1888, 925,
	926, 927, 924, 2833, 2797, 2291, 1821, 763, 2029, 2733,
	2695, 2030, 925, 926, 927, 924, 1146, 2672, 2623, 2591,
	1859, 1988, 1862, 1863, 1864, 1865, 2032, 765, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1930, 1933, 1931, 1925, 2589, 2568, 2566, 2022,
	2290, 2172, 1688, 2034, 2535, 2715, 1696, 1144, 861, 948,
	949, 941, 942, 943, 944, 945, 946, 947, 940, 2500,
	2031, 2009, 2499, 925, 926, 927, 924, 2496, 1144, 2489,
	2483, 2064, 1989, 1996, 925, 926, 927, 924, 2430, 2428,
	2766, 2417, 2416, 2003, 2321, 2930, 1152, 2755, 2320, 2268,
	2235, 1981, 1274, 1979, 2053, 1146, 1986, 1677, 2083, 1695,
	1681, 2216, 1437, 925, 926, 927, 924, 2154, 2102, 2147,
	925, 926, 927, 924, 2108, 2143, 1999, 2000, 925, 926,
	927, 924, 925, 926, 927, 924, 2142, 2141, 2013, 1731,
	2117, 590, 589, 2890, 1611, 2067, 2599, 1605, 1424, 1691,
	1237, 2884, 999, 2125, 995, 994, 970, 1698, 850, 2684,
	2516, 2130, 2131, 2132, 2515, 2093, 2513, 2135, 2488, 925,
	926, 927, 924, 156, 2475, 1711, 148, 125, 1714, 1715,
	1716, 1908, 2466, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 2168, 2465, 2057, 2054, 2099, 2454, 419, 1201, 1206,
	1207, 1437, 861, 1537, 1537, 1537, 1537, 2109, 2453, 2002,
	2372, 2296, 2289, 2281, 861, 1537, 2276, 2220, 1908, 2092,
	2065, 2062, 1957, 1953, 2038, 2188, 2120, 1146, 2111, 2043,
	153, 2874, 2113, 1952, 2123, 1718, 1814, 2188, 2123, 430,
	430, 1708, 1706, 1211, 2124, 1214, 1702, 1701, 2081, 2598,
	1440, 1699, 1690, 173, 2101, 1687, 1686, 1610, 173, 1410,
	8, 1384, 7, 1383, 2107, 1374, 2201, 1158, 1156, 2871,
	2112, 2869, 925, 926, 927, 924, 2561, 2786, 2119, 1381,
	2731, 1381, 2486, 2121, 2252, 156, 2294, 2256, 2127, 989,
	1196, 2655, 2643, 1146, 2640, 2577, 2263, 2116, 2575, 925,
	926, 927, 924, 2148, 2559, 925, 926, 927, 924, 925,
	926, 927, 924, 2558, 545, 110, 2072, 2110, 2555, 2226,
	110, 2554, 2173, 2176, 2230, 2114, 2115, 2189, 2190, 2191,
	2192, 2178, 2548, 2508, 1415, 1415, 1415, 1415, 2200, 645,
	2204, 1414, 153, 2100, 2217, 2202, 2251, 2203, 2214, 649,
	650, 651, 652, 1205, 2817, 2293, 1198, 2249, 1066, 2169,
	1175, 2129, 648, 2255, 2096, 2284, 2227, 2286, 436, 2228,
	2224, 110, 2095, 2094, 2260, 2265, 1210, 861, 925, 926,
	927, 924, 2248, 2332, 2138, 2139, 2250, 766, 2245, 2243,
	2144, 2145, 1213, 2347, 766, 430, 2292, 2247, 2213, 1202,
	1756, 2051, 2052, 1966, 2254, 861, 861, 861, 2174, 1917,
	2273, 1157, 1882, 1811, 1537, 1810, 2259, 2370, 2274, 925,
	926, 927, 924, 2374, 925, 926, 927, 924, 1837, 1837,
	1837, 1315, 2280, 2402, 153, 2405, 1575, 2405, 2405, 1432,
	1431, 2287, 2288, 1259, 2410, 2285, 1225, 1203, 1022, 1146,
	1146, 1019, 1018, 2323, 2282, 2283, 1017, 2815, 2050, 1016,
	2317, 2006, 1015, 1014, 2218, 2219, 1013, 1012, 764, 2024,
	2025, 2325, 110, 1011, 2322, 1010, 1009, 2027, 2028, 1008,
	430, 925, 926, 927, 924, 2332, 2368, 110, 766, 110,
	2033, 2348, 1007, 1006, 1437, 1437, 2400, 1005, 2327, 1004,
	2365, 2401, 2351, 2414, 2415, 2350, 2369, 2358, 2359, 2092,
	1415, 1144, 1144, 2055, 2056, 1422, 1003, 2373, 1002, 998,
	997, 2375, 2376, 996, 2406, 2407, 993, 986, 985, 983,
	982, 2408, 981, 980, 2023, 979, 978, 977, 766, 772,
	767, 771, 773, 2464, 976, 975, 2301, 974, 2378, 973,
	2302, 2303, 2304, 2305, 972, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2049, 968, 967, 777, 890, 848, 2556,
	770, 2425, 2424, 2420, 2429, 2439, 2440, 2427, 2432, 2433,
	430, 1816, 1799, 878, 2443, 2770, 925, 926, 927, 924,
	2442, 2084, 1929, 2434, 2445, 1613, 889, 2916, 2048, 2447,
	96, 52, 51, 2047, 2450, 2451, 2452, 2046, 2446, 2444,
	2194, 2197, 2045, 2193, 2459, 2377, 2198, 2580, 775, 2579,
	2349, 925, 926, 927, 924, 778, 925, 926, 927, 924,
	925, 926, 927, 924, 2476, 925, 926, 927, 924, 2195,
	1975, 2477, 768, 2044, 2196, 427, 2479, 2041, 2199, 2478,
	1900, 1901, 1969, 2578, 432, 433, 434, 2490, 2482, 2318,
	2319, 2059, 1519, 776, 2326, 2512, 925, 926, 927, 924,
	925, 926, 927, 924, 1190, 1964, 1908, 1537, 2526, 1736,
	1737, 939, 938, 948, 949, 941, 942, 943, 944, 945,
	946, 947, 940, 1993, 1024, 1219, 431, 1790, 2492, 1146,
	1707, 769, 1576, 2534, 884, 1567, 2824, 2750, 2118, 2068,
	430, 2495, 2040, 2494, 1896, 1899, 1900, 1901, 1897, 2402,
	1898, 1902, 1806, 2528, 1451, 1430, 1885, 2229, 1523, 2231,
	1116, 1115, 2507, 1370, 1369, 925, 926, 927, 924, 916,
	2039, 2449, 1437, 1036, 1037, 2524, 861, 1415, 1633, 2525,
	1034, 1035, 1415, 1032, 1033, 1070, 2400, 1026, 110, 110,
	764, 2537, 2532, 925, 926, 927, 924, 2035, 648, 2188,
	1030, 1031, 173, 774, 2885, 2527, 2805, 2571, 2582, 2793,
	2791, 2530, 2758, 2743, 2531, 861, 2742, 2560, 2275, 2740,
	925, 926, 927, 924, 2732, 2570, 2666, 2665, 2569, 2567,
	2565, 2572, 2590, 2906, 2491, 2481, 2473, 2472, 2188, 2026,
	2295, 2573, 2607, 2457, 1029, 680, 2004, 1455, 2456, 861,
	1146, 1146, 2222, 2819, 2818, 861, 2258, 2626, 1801, 956,
	2626, 1689, 925, 926, 927, 924, 875, 2594, 2584, 925,
	926, 927, 924, 2818, 2819, 2550, 2474, 1085, 1837, 160,
	3, 60, 2608, 939, 938, 948, 949, 941, 942, 943,
	944, 945, 946, 947, 940, 861, 861, 1325, 2, 861,
	861, 2627, 2630, 2629, 2621, 2509, 2510, 2511, 1561, 2528,
	2622, 1150, 1144, 2537, 1, 1423, 1453, 653, 2663, 1891,
	925, 926, 927, 924, 2206, 2207, 2667, 2668, 2448, 2644,
	2645, 2209, 1651, 2653, 2654, 2641, 1883, 1791, 2660, 2346,
	2409, 2652, 1896, 1899, 1900, 1901, 1897, 1061, 1898, 1902,
	2692, 649, 650, 651, 652, 685, 1376, 2661, 1244, 780,
	870, 2637, 2638, 1241, 648, 2553, 869, 867, 1327, 2704,
	547, 682, 1616, 677, 2170, 667, 2384, 2662, 2823, 2856,
	2785, 2826, 679, 678, 861, 1257, 531, 2734, 2676, 2690,
	2789, 2678, 1028, 2596, 1656, 921, 861, 2699, 2244, 665,
	2394, 706, 583, 671, 558, 984, 1227, 2706, 2705, 1220,
	2714, 2299, 782, 2387, 557, 2506, 2077, 2717, 2721, 2707,
	2382, 674, 779, 707, 1600, 2397, 2398, 2674, 1191, 2600,
	2726, 2383, 1212, 1195, 2631, 2517, 2360, 2097, 2926, 861,
	2915, 2897, 2883, 2810, 676, 2744, 2911, 2759, 675, 2841,
	2739, 2737, 2872, 2603, 664, 2601, 2602, 2865, 670, 2806,
	468, 1540, 417, 745, 2754, 2656, 1612, 469, 2388, 2753,
	1815, 2780, 2783, 2798, 2642, 668, 2760, 672, 1798, 673,
	2090, 2765, 2089, 1296, 930, 1313, 2314, 2315, 965, 2784,
	507, 2775, 2776, 2777, 2778, 1678, 666, 2792, 519, 2794,
	2795, 2074, 2485, 2790, 2788, 2393, 1155, 2215, 59, 2487,
	683, 436, 58, 57, 56, 1582, 181, 549, 180, 2782,
	2804, 2828, 529, 528, 527, 526, 525, 2830, 2813, 1895,
	2816, 2814, 1893, 1892, 669, 110, 1532, 1531, 1580, 2820,
	2411, 2829, 1855, 1849, 1489, 2767, 861, 2718, 2719, 2547,
	2834, 694, 2155, 2543, 2539, 2835, 2418, 2625, 2379, 2396,
	2380, 1842, 2386, 2855, 1805, 2844, 2846, 805, 801, 2839,
	803, 2854, 804, 802, 2858, 2012, 2008, 1834, 1836, 2863,
	1835, 861, 2356, 1747, 1746, 1744, 2390, 1743, 1044, 2691,
	2493, 1754, 2868, 2864, 2870, 1752, 110, 2441, 2437, 1624,
	110, 2830, 2881, 1420, 1280, 2058, 681, 1533, 2389, 2391,
	861, 110, 861, 732, 1529, 2829, 2880, 1800, 87, 86,
	110, 94, 2887, 2892, 2889, 137, 1517, 46, 2858, 165,
	2900, 861, 2893, 1280, 164, 1280, 167, 2907, 1415, 166,
	2910, 163, 1943, 2904, 1944, 162, 1179, 1415, 161, 2628,
	2574, 642, 821, 2576, 1280, 37, 33, 2914, 12, 2921,
	1519, 11, 2924, 2925, 34, 21, 22, 2581, 20, 2933,
	1248, 19, 25, 32, 31, 2938, 30, 2921, 2937, 103,
	102, 2936, 2925, 2399, 29, 101, 2939, 2920, 951, 100,
	955, 99, 98, 28, 18, 2385, 734, 1499, 41, 733,
	40, 2395, 39, 9, 93, 91, 952, 954, 950, 27,
	953, 939, 938, 948, 949, 941, 942, 943, 944, 945,
	946, 947, 940, 92, 89, 90, 88, 71, 70, 69,
	84, 83, 82, 719, 81, 80, 79, 77, 78, 705,
	68, 695, 67, 66, 65, 64, 75, 85, 76, 74,
	73, 72, 63, 2836, 62, 809, 61, 122, 123, 799,
	121, 120, 119, 118, 117, 116, 42, 43, 697, 44,
	45, 133, 132, 134, 136, 829, 833, 835, 837, 839,
	840, 842, 138, 846, 843, 844, 845, 135, 130, 824,
	825, 826, 827, 807, 808, 830, 128, 810, 131, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 822,
	828, 129, 127, 54, 2689, 17, 24, 4, 832, 834,
	836, 838, 841, 0, 0, 0, 0, 0, 718, 717,
	0, 2700, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 716, 0, 0, 2888, 1507,
	0, 2716, 0, 0, 693, 823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 727, 0, 0, 1496,
	1536, 0, 0, 1498, 1500, 1502, 0, 1504, 1505, 1506,
	1508, 1509, 1510, 1512, 1513, 1514, 1515, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 2689, 939, 938,
	948, 949, 941, 942, 943, 944, 945, 946, 947, 940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 724, 728, 0, 0, 1518, 0, 110, 0, 0,
	110, 110, 0, 110, 0, 0, 0, 0, 713, 0,
	711, 715, 731, 0, 0, 0, 712, 709, 708, 0,
	714, 699, 700, 698, 701, 702, 703, 704, 0, 729,
	0, 730, 1516, 0, 0, 0, 0, 0, 764, 0,
	0, 0, 725, 726, 0, 764, 0, 0, 0, 1495,
	0, 0, 0, 0, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 2689, 1511, 721,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 521,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	556, 0, 0, 345, 300, 0, 0, 0, 0, 613,
	621, 2886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 546, 590, 589, 533, 542, 0,
	956, 243, 179, 534, 0, 541, 535, 539, 538, 536,
	537, 0, 605, 0, 0, 0, 0, 0, 720, 505,
	518, 2686, 522, 0, 0, 0, 0, 0, 0, 0,
	2895, 939, 938, 948, 949, 941, 942, 943, 944, 945,
	946, 947, 940, 0, 0, 0, 515, 516, 0, 0,
	831, 0, 566, 0, 517, 0, 0, 561, 543, 544,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 2297, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	540, 564, 568, 255, 627, 562, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 628, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 939, 938, 948, 949,
	941, 942, 943, 944, 945, 946, 947, 940, 0, 559,
	0, 0, 0, 376, 0, 0, 611, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 563, 0, 336,
	318, 624, 506, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 1911,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 609, 314, 0, 0,
	623, 604, 606, 607, 610, 614, 615, 616, 617, 618,
	620, 622, 626, 422, 1517, 0, 1536, 0, 0, 421,
	320, 0, 339, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 2687, 0, 1519, 2001,
	2688, 0, 625, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 567, 304, 305, 306, 307, 612, 0, 248,
	400, 329, 0, 939, 938, 948, 949, 941, 942, 943,
	944, 945, 946, 947, 940, 1499, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 634, 608, 633, 635, 636, 632, 637,
	638, 619, 524, 0, 571, 630, 629, 631, 0, 0,
	0, 0, 0, 0, 925, 926, 927, 924, 0, 0,
	0, 0, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 597, 576, 577,
	578, 523, 579, 574, 575, 598, 569, 594, 595, 548,
	572, 580, 593, 581, 596, 599, 600, 639, 640, 587,
	641, 584, 601, 592, 591, 582, 570, 602, 603, 555,
	550, 585, 586, 573, 588, 551, 552, 553, 554, 0,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	0, 0, 0, 1354, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 809, 0, 1496, 0, 0,
	0, 1498, 1500, 1502, 0, 1504, 1505, 1506, 1508, 1509,
	1510, 1512, 1513, 1514, 1515, 829, 833, 835, 837, 839,
	840, 842, 0, 846, 843, 844, 845, 0, 0, 824,
	825, 826, 827, 807, 808, 830, 0, 810, 0, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 822,
	828, 0, 0, 1518, 0, 0, 0, 0, 832, 834,
	836, 838, 841, 0, 0, 0, 0, 1536, 1536, 1536,
	1536, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 110, 0, 1347,
	0, 0, 110, 1349, 1346, 1348, 1352, 1353, 1676, 0,
	0, 1351, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 110, 1501, 0, 0, 0, 0, 0, 110,
	0, 0, 939, 938, 948, 949, 941, 942, 943, 944,
	945, 946, 947, 940, 0, 353, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 939, 938, 948,
	949, 941, 942, 943, 944, 945, 946, 947, 940, 521,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	556, 0, 0, 345, 300, 0, 0, 0, 0, 613,
	621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 546, 590, 589, 533, 542, 0,
	0, 243, 179, 534, 0, 541, 535, 539, 538, 536,
	537, 0, 605, 110, 0, 0, 0, 0, 0, 505,
	518, 0, 522, 0, 0, 0, 0, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1357, 1358,
	1359, 1360, 1361, 1362, 1355, 1356, 515, 516, 1536, 0,
	0, 0, 566, 0, 517, 0, 0, 561, 543, 544,
	0, 0, 0, 110, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	540, 564, 568, 255, 627, 562, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 628, 276, 324, 290, 325, 277, 302, 301, 303,
	831, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 376, 0, 0, 611, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 563, 0, 336,
	318, 624, 506, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 1378, 1377,
	1379, 388, 268, 226, 227, 423, 609, 314, 0, 0,
	623, 604, 606, 607, 610, 614, 615, 616, 617, 618,
	620, 622, 626, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 625, 0, 0, 0, 380, 0, 0, 0,
	0, 1536, 567, 304, 305, 306, 307, 612, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 634, 608, 633, 635, 636, 632, 637,
	638, 619, 524, 0, 571, 630, 629, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 597, 576, 577,
	578, 523, 579, 574, 575, 598, 569, 594, 595, 548,
	572, 580, 593, 581, 596, 599, 600, 639, 640, 587,
	641, 584, 601, 592, 591, 582, 570, 602, 603, 555,
	550, 585, 586, 573, 588, 551, 552, 553, 554, 353,
	565, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 556, 0, 0, 345, 300, 0,
	0, 0, 0, 613, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 0, 0, 546, 590,
	589, 533, 542, 0, 0, 243, 179, 534, 0, 541,
	535, 539, 538, 536, 537, 0, 605, 0, 0, 0,
	0, 0, 0, 505, 518, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 516, 0, 0, 0, 0, 566, 0, 517, 0,
	0, 561, 543, 544, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 540, 564, 568, 255, 627, 562,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 628, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 376, 0, 0,
	611, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 563, 0, 336, 318, 624, 506, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	609, 314, 0, 0, 623, 604, 606, 607, 610, 614,
	615, 616, 617, 618, 620, 622, 626, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	2687, 0, 0, 0, 2688, 0, 625, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 567, 304, 305, 306,
	307, 612, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 634, 608, 633,
	635, 636, 632, 637, 638, 619, 524, 0, 571, 630,
	629, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 597, 576, 577, 578, 523, 579, 574, 575, 598,
	569, 594, 595, 548, 572, 580, 593, 581, 596, 599,
	600, 639, 640, 587, 641, 584, 601, 592, 591, 582,
	570, 602, 603, 555, 550, 585, 586, 573, 588, 551,
	552, 553, 554, 353, 565, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 0, 0,
	0, 261, 1416, 0, 286, 0, 0, 0, 556, 0,
	0, 345, 300, 0, 0, 0, 0, 613, 621, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 514,
	0, 0, 546, 590, 589, 533, 542, 0, 0, 243,
	179, 534, 0, 541, 535, 539, 538, 536, 537, 0,
	605, 0, 0, 0, 0, 0, 0, 505, 518, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 0, 0, 0, 0,
	566, 0, 517, 0, 0, 1551, 543, 544, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 540, 564,
	568, 255, 627, 562, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 628,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 376, 0, 0, 611, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 563, 0, 336, 318, 624,
	506, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 609, 314, 0, 0, 623, 604,
	606, 607, 610, 614, 615, 616, 617, 618, 620, 622,
	626, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	625, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	567, 304, 305, 306, 307, 612, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 634, 608, 633, 635, 636, 632, 637, 638, 619,
	524, 0, 571, 630, 629, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 597, 576, 577, 578, 523,
	579, 574, 575, 598, 569, 594, 595, 548, 572, 580,
	593, 581, 596, 599, 600, 639, 640, 587, 641, 584,
	601, 592, 591, 582, 570, 602, 603, 555, 550, 585,
	586, 573, 588, 551, 552, 553, 554, 156, 353, 565,
	384, 385, 386, 408, 370, 0, 420, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 959, 0, 0, 345, 300, 0, 0,
	0, 0, 613, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 0, 546, 590, 589,
	533, 542, 0, 0, 243, 179, 534, 0, 541, 535,
	539, 538, 536, 537, 0, 605, 0, 0, 0, 0,
	0, 0, 505, 518, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	516, 0, 0, 0, 0, 566, 0, 517, 0, 0,
	561, 543, 544, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 540, 564, 568, 255, 627, 562, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 628, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 376, 0, 0, 611,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	563, 0, 336, 318, 624, 506, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 609,
	314, 0, 0, 623, 604, 606, 607, 610, 614, 615,
	616, 617, 618, 620, 622, 626, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 625, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 567, 304, 305, 306, 307,
	612, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 634, 608, 633, 635,
	636, 632, 637, 638, 619, 524, 0, 571, 630, 629,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 126, 328, 266,
	597, 576, 577, 578, 523, 579, 574, 575, 598, 569,
	594, 595, 548, 572, 580, 593, 581, 596, 599, 600,
	639, 640, 587, 641, 584, 601, 592, 591, 582, 570,
	602, 603, 555, 550, 585, 586, 573, 588, 551, 552,
	553, 554, 353, 565, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 0, 0, 0,
	261, 2894, 0, 286, 0, 0, 0, 556, 0, 0,
	345, 300, 0, 0, 0, 0, 613, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 546, 590, 589, 533, 542, 0, 0, 243, 179,
	534, 0, 541, 535, 539, 538, 536, 537, 0, 605,
	0, 0, 0, 0, 0, 0, 505, 518, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 566,
	0, 517, 0, 0, 561, 543, 544, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 540, 564, 568,
	255, 627, 562, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 628, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	376, 0, 0, 611, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 563, 0, 336, 318, 624, 506,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 609, 314, 0, 0, 623, 604, 606,
	607, 610, 614, 615, 616, 617, 618, 620, 622, 626,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 625,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 567,
	304, 305, 306, 307, 612, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	634, 608, 633, 635, 636, 632, 637, 638, 619, 524,
	0, 571, 630, 629, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 597, 576, 577, 578, 523, 579,
	574, 575, 598, 569, 594, 595, 548, 572, 580, 593,
	581, 596, 599, 600, 639, 640, 587, 641, 584, 601,
	592, 591, 582, 570, 602, 603, 555, 550, 585, 586,
	573, 588, 551, 552, 553, 554, 353, 565, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 0, 0, 261, 1416, 0, 286, 0, 0,
	0, 556, 0, 0, 345, 300, 0, 0, 0, 0,
	613, 621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 0, 546, 590, 589, 533, 542,
	0, 0, 243, 179, 534, 0, 541, 535, 539, 538,
	536, 537, 0, 605, 0, 0, 0, 0, 0, 0,
	505, 518, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 516, 0,
	0, 0, 0, 566, 0, 517, 0, 0, 561, 543,
	544, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 540, 564, 568, 255, 627, 562, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 628, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 376, 0, 0, 611, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 563, 0,
	336, 318, 624, 506, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 609, 314, 0,
	0, 623, 604, 606, 607, 610, 614, 615, 616, 617,
	618, 620, 622, 626, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 625, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 567, 304, 305, 306, 307, 612, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 634, 608, 633, 635, 636, 632,
	637, 638, 619, 524, 0, 571, 630, 629, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 597, 576,
	577, 578, 523, 579, 574, 575, 598, 569, 594, 595,
	548, 572, 580, 593, 581, 596, 599, 600, 639, 640,
	587, 641, 584, 601, 592, 591, 582, 570, 602, 603,
	555, 550, 585, 586, 573, 588, 551, 552, 553, 554,
	353, 565, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 556, 0, 0, 345, 300,
	0, 0, 0, 0, 613, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 546,
	590, 589, 533, 542, 0, 0, 243, 179, 534, 0,
	541, 535, 539, 538, 536, 537, 0, 605, 0, 0,
	0, 0, 0, 0, 505, 518, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 516, 1174, 0, 0, 0, 566, 0, 517,
	0, 0, 561, 543, 544, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 540, 564, 568, 255, 627,
	562, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 628, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 376, 0,
	0, 611, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 563, 0, 336, 318, 624, 506, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 609, 314, 0, 0, 623, 604, 606, 607, 610,
	614, 615, 616, 617, 618, 620, 622, 626, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 625, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 567, 304, 305,
	306, 307, 612, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 634, 608,
	633, 635, 636, 632, 637, 638, 619, 524, 0, 571,
	630, 629, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 597, 576, 577, 578, 523, 579, 574, 575,
	598, 569, 594, 595, 548, 572, 580, 593, 581, 596,
	599, 600, 639, 640, 587, 641, 584, 601, 592, 591,
	582, 570, 602, 603, 555, 550, 585, 586, 573, 588,
	551, 552, 553, 554, 0, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 353, 565, 0, 0, 1697, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 556,
	0, 0, 345, 300, 0, 0, 0, 0, 613, 621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 546, 590, 589, 533, 542, 0, 0,
	243, 179, 534, 0, 541, 535, 539, 538, 536, 537,
	0, 605, 0, 0, 0, 0, 0, 0, 505, 518,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 516, 0, 0, 0,
	0, 566, 0, 517, 0, 0, 561, 543, 544, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 540,
	564, 568, 255, 627, 562, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	628, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 376, 0, 0, 611, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 563, 0, 336, 318,
	624, 506, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 609, 314, 0, 0, 623,
	604, 606, 607, 610, 614, 615, 616, 617, 618, 620,
	622, 626, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 625, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 567, 304, 305, 306, 307, 612, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 634, 608, 633, 635, 636, 632, 637, 638,
	619, 524, 0, 571, 630, 629, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 597, 576, 577, 578,
	523, 579, 574, 575, 598, 569, 594, 595, 548, 572,
	580, 593, 581, 596, 599, 600, 639, 640, 587, 641,
	584, 601, 592, 591, 582, 570, 602, 603, 555, 550,
	585, 586, 573, 588, 551, 552, 553, 554, 353, 565,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 556, 0, 0, 345, 300, 0, 0,
	0, 0, 613, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 0, 546, 590, 589,
	533, 542, 0, 0, 243, 179, 534, 0, 541, 535,
	539, 538, 536, 537, 0, 605, 0, 0, 0, 0,
	0, 0, 505, 518, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	516, 0, 0, 0, 0, 566, 0, 517, 0, 0,
	561, 543, 544, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 540, 564, 568, 255, 627, 562, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 628, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 376, 0, 0, 611,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	563, 0, 336, 318, 624, 506, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 609,
	314, 0, 0, 623, 604, 606, 607, 610, 614, 615,
	616, 617, 618, 620, 622, 626, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 625, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 567, 304, 305, 306, 307,
	612, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 634, 608, 633, 635,
	636, 632, 637, 638, 619, 524, 0, 571, 630, 629,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	597, 576, 577, 578, 523, 579, 574, 575, 598, 569,
	594, 595, 548, 572, 580, 593, 581, 596, 599, 600,
	639, 640, 587, 641, 584, 601, 592, 591, 582, 570,
	602, 603, 555, 550, 585, 586, 573, 588, 551, 552,
	553, 554, 353, 565, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 0, 0, 521, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 556, 0, 0,
	345, 300, 0, 0, 0, 0, 613, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 546, 590, 589, 533, 542, 0, 0, 243, 179,
	534, 0, 541, 535, 539, 538, 536, 537, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 518, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 566,
	0, 517, 0, 0, 561, 543, 544, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 540, 564, 568,
	255, 627, 562, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 628, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	376, 0, 0, 611, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 563, 0, 336, 318, 624, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 1298, 1299, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 609, 314, 0, 0, 623, 604, 606,
	607, 610, 614, 615, 616, 617, 618, 620, 622, 626,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 625,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 567,
	304, 305, 306, 307, 612, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	634, 608, 633, 635, 636, 632, 637, 638, 619, 524,
	0, 571, 630, 629, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 597, 576, 577, 578, 523, 579,
	574, 575, 598, 569, 594, 595, 548, 572, 580, 593,
	581, 596, 599, 600, 639, 640, 587, 641, 584, 601,
	592, 591, 582, 570, 602, 603, 555, 550, 585, 586,
	573, 588, 551, 552, 553, 554, 353, 565, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 556, 0, 0, 345, 300, 0, 0, 0, 0,
	613, 621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 590, 589, 533, 542,
	0, 0, 243, 179, 534, 0, 541, 535, 539, 538,
	536, 537, 0, 605, 0, 0, 0, 0, 0, 0,
	505, 518, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 516, 0,
	0, 0, 0, 566, 0, 517, 0, 0, 561, 543,
	544, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 540, 564, 568, 255, 627, 562, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 628, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 376, 0, 0, 611, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 563, 0,
	336, 318, 624, 506, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 609, 314, 0,
	0, 623, 604, 606, 607, 610, 614, 615, 616, 617,
	618, 620, 622, 626, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 625, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 567, 304, 305, 306, 307, 612, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 634, 608, 633, 635, 636, 632,
	637, 638, 619, 524, 0, 571, 630, 629, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 597, 576,
	577, 578, 523, 579, 574, 575, 598, 569, 594, 595,
	548, 572, 580, 593, 581, 596, 599, 600, 639, 640,
	587, 641, 584, 601, 592, 591, 582, 570, 602, 603,
	555, 550, 585, 586, 573, 588, 551, 552, 553, 554,
	353, 565, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 556, 0, 0, 345, 300,
	0, 0, 0, 0, 613, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 546,
	590, 589, 533, 542, 0, 0, 243, 179, 534, 0,
	541, 535, 539, 538, 536, 537, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 518, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 516, 0, 0, 0, 0, 566, 0, 517,
	0, 0, 561, 543, 544, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 540, 564, 568, 255, 627,
	562, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 628, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 376, 0,
	0, 611, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 563, 0, 336, 318, 624, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 609, 314, 0, 0, 623, 604, 606, 607, 610,
	614, 615, 616, 617, 618, 620, 622, 626, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 625, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 567, 304, 305,
	306, 307, 612, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 634, 608,
	633, 635, 636, 632, 637, 638, 619, 524, 0, 571,
	630, 629, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 597, 576, 577, 578, 523, 579, 574, 575,
	598, 569, 594, 595, 548, 572, 580, 593, 581, 596,
	599, 600, 639, 640, 587, 641, 584, 601, 592, 591,
	582, 570, 602, 603, 555, 550, 585, 586, 573, 588,
	551, 552, 553, 554, 0, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 156, 353, 49, 148, 125, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 141, 0, 261, 0, 150, 286, 0, 0, 0,
	108, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 153, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 124, 147, 154, 0, 95, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 171, 0, 0, 0,
	349, 0, 0, 285, 146, 140, 139, 392, 0, 336,
	318, 55, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 142,
	143, 144, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 371, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 174,
	0, 0, 0, 182, 0, 0, 0, 145, 0, 183,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 48, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 126, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 0,
	0, 0, 384, 385, 386, 408, 370, 353, 184, 38,
	172, 175, 177, 176, 0, 47, 5, 0, 316, 111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 990, 0, 0, 178, 0, 0, 533,
	542, 0, 0, 243, 179, 534, 0, 541, 535, 539,
	538, 536, 537, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 540, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 0, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 156, 353, 49, 148, 125, 0, 0, 0, 0,
	0, 0, 0, 316, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 441, 443, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 126, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 809, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 1776, 1778,
	1779, 1780, 1781, 1782, 1783, 0, 1787, 1784, 1785, 1786,
	313, 0, 1771, 1772, 1773, 1774, 807, 1757, 1777, 0,
	1758, 312, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1775, 324, 290, 325, 277, 302, 301,
	303, 832, 834, 836, 838, 841, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 1770, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 1354, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 1347, 0, 0, 0, 1349, 1346, 1348,
	1352, 1353, 228, 831, 287, 1351, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 1844, 1847,
	0, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1357, 1358, 1359, 1360, 1361, 1362, 1355, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 376, 0,
	0, 0, 1843, 0, 1842, 349, 1840, 1845, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 1846, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1584, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 1585, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 925, 926, 927, 924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 744, 0, 286,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 753, 754,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 734, 374,
	238, 733, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 742, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 743, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 746, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	755, 749, 750, 751, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 156, 353, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 108, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	1628, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 126, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 156, 353, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 108, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 1619, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 126, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 156, 353, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 108, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 126, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 753, 754, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 734, 374, 238,
	733, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 755,
	749, 750, 751, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 2181, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	2184, 0, 0, 2183, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 271, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 1149, 0, 286, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1147, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1145, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1143, 0,
	286, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1147, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1145, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2825, 0, 178, 590, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 1147,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2538,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 1147, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1145, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 271, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1907, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1909, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1923, 0,
	286, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1147, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2903, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 590, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2840, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 271, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 2781, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2620, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 2664, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2371, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 271, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 2331, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 1147,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 1909, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 271, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 1936, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 0, 0, 0,
	384, 385, 386, 408, 370, 353, 420, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 1147, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 1459,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 1170, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 271, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 690, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 459, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 460, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 500, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 271, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 156, 406, 49,
	148, 125, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 149, 0, 0,
	0, 0, 0, 0, 141, 0, 0, 0, 150, 0,
	221, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 153, 0, 0, 228, 0, 287,
	0, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 0, 0, 0, 384, 385,
	386, 408, 370, 156, 420, 49, 148, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 113, 0,
	114, 115, 0, 149, 0, 0, 0, 0, 0, 0,
	141, 0, 0, 0, 150, 0, 0, 0, 0, 108,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 124, 147, 154, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 146, 140, 139,
	0, 0, 0, 0, 55, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 113, 0, 114, 115, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 143, 144, 1499, 0, 0, 479, 0,
	478, 485, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 483, 0, 484, 488, 0, 151, 470,
	0, 124, 147, 154, 0, 95, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	145, 0, 105, 146, 140, 139, 0, 0, 0, 0,
	55, 0, 0, 0, 0, 2703, 0, 0, 497, 0,
	0, 499, 0, 0, 0, 0, 498, 1493, 1492, 0,
	0, 1491, 0, 0, 0, 479, 1503, 478, 485, 475,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 482,
	483, 0, 484, 488, 0, 106, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 48, 493, 1496, 142, 143,
	144, 1498, 1500, 1502, 0, 1504, 1505, 1506, 1508, 1509,
	1510, 1512, 1513, 1514, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 497, 1503, 0, 499, 0,
	0, 0, 0, 498, 0, 0, 0, 1507, 0, 0,
	0, 0, 104, 0, 50, 0, 145, 0, 105, 0,
	0, 0, 0, 1518, 0, 0, 0, 1496, 0, 0,
	0, 1498, 1500, 1502, 0, 1504, 1505, 1506, 1508, 1509,
	1510, 1512, 1513, 1514, 1515, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 473, 472, 0,
	1516, 0, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 1495, 481, 0,
	0, 48, 0, 1518, 0, 496, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 0, 465, 0, 0, 0,
	0, 107, 38, 0, 0, 0, 1511, 0, 47, 5,
	0, 0, 111, 1501, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 471, 473, 472, 479, 1495, 478, 485,
	475, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	482, 483, 0, 484, 488, 481, 0, 470, 0, 0,
	0, 0, 496, 126, 0, 0, 1511, 493, 0, 474,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 480, 486, 0, 487, 489, 0, 0, 490,
	491, 492, 0, 0, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 38, 0,
	0, 0, 0, 0, 47, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 480,
	486, 0, 487, 489, 0, 0, 490, 491, 492, 0,
	0, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 473, 472, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 0, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	480, 486, 0, 487, 489, 0, 0, 490, 491, 492,
	0, 0, 494, 495,
}

var yyPact = [...]int{
	33797, -1000, -1000, -1000, -310, 10294, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32856, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32856, -308, 32332,
	32332, -1000, -1000, 1853, -1000, 31808, 11361, 32856, 257, 254,
	32856, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 591, -1000, 31284, -1000, -1000,
	-1000, -1000, -1000, -1000, 494, 34088, 33380, 8187, -258, -1000,
	2605, -116, 752, 756, 873, 873, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2416, 610, 30760, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2785, 152, 610, 13457,
	-35, -37, 2605, 295, 2013, -1000, 839, 33913, 142, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8187, 8187, 10294, -321, 10294, 8187, 32856, 32856, -1000, -1000,
	-1000, -1000, 494, 34088, 8187, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -37, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2882, -1000, 1159,
	-1000, -1000, -1000, -1000, 2191, 1156, 1775, 445, 32856, -1000,
	1155, 445, -1000, -1000, -1000, 2605, 2605, -1000, 32856, 32856,
	19, 1233, -1000, 281, 275, 299, 1151, -1000, -1000, -1000,
	-1000, -1000, 2511, -1000, 32856, 32856, 2208, 32856, -1000, 1417,
	410, 34165, 2359, 1053, 592, 2222, -1000, -1000, 2190, -1000,
	126, 190, 116, 357, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 182, -1000, 2403, -1000, -1000, 118, -1000, -1000, 110,
	-1000, -1000, -1000, -40, -1000, -1000, -1000, -1000, -1000, -1000,
	-115, -1000, -1000, 771, 1611, 8187, -1000, 1558, -1000, 2853,
	-1000, -1000, -1000, -1000, 5557, 9759, 9759, 9759, 9759, -1000,
	-1000, 2057, 8187, 2188, 2187, -1000, -1000, -1000, -1000, -1000,
	1149, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1773, 9235, -1000, 2177, 2172, 2170, 2168,
	2167, 2160, 2159, 2158, 2156, 2155, 2153, 2152, 2151, 2150,
	1912, 10826, 2149, 1772, 1771, 2146, 2143, 2142, 1769, 1912,
	1912, 2141, 2139, 2122, 2120, 2116, 2115, 2102, 2099, 2098,
	2096, 2090, 2089, 2086, 2085, 2082, 2079, 2075, 2074, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 955, -1000, 2071, 2346, 2426, 1965, 2484, 2429,
	2412, 2409, 2402, 1597, -1000, -1000, -1000, -138, -1000, -1000,
	736, -1000, 704, -1000, 32856, 32856, 32856, 483, 483, 483,
	483, 483, 568, 483, 588, 585, 583, 483, -1000, -1000,
	-1000, -1000, -1000, -1000, 679, -1000, -1000, -1000, -1000, 1003,
	32856, -1000, 1981, 1202, 2422, 425, 423, 418, 1202, 302,
	-1000, 1285, 1285, 1285, 1285, 1202, 323, 407, 2426, 2426,
	-38, 1285, -53, 1202, 1202, -53, 1202, 1202, 1202, 128,
	-305, -1000, -1000, -1000, 1285, 1285, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2391, 2390, 494, 32856, 88, 32856, 494,
	494, 503, 1417, 404, 396, 1017, 1302, -1000, 1183, 32856,
	32856, 32856, 32856, 1183, 1183, 17128, 16604, -1000, 32856, -1000,
	2426, 1965, -1000, 1890, 2033, 1889, 1965, 494, 494, 494,
	494, 494, 494, 494, 494, 32856, 32856, 30236, 494, 7129,
	7129, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10294, 1383, 1538, 132, -85, -314, 165, -1000, -1000, 32856,
	2324, 90, -1000, -1000, -1000, 1913, -1000, 1979, 1979, 1979,
	1979, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2022, 2070, -1000, -1000, 1976, 1976, 1976, 1913, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1999, 1999, 2015, 1999, 32856, 8187, 32856,
	2347, 292, 2069, -1000, 32856, 282, 2426, 2346, 2426, -1000,
	-1000, 1146, 1595, 1767, -1000, -1000, 281, 1246, -1000, 743,
	-1000, -1000, -1000, -1000, 32856, 305, -1000, -1000, 1760, 2066,
	-1000, 416, 861, 1021, -1000, 318, 34366, 26036, 1417, 26036,
	32856, -1000, -1000, -1000, -1000, -1000, -1000, -41, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 125, -1000, 8187, 8187, 8187, 8187, 8187, -1000, 532,
	8711, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9759, 9759,
	9759, 9759, 9759, 9759, 9759, 9759, 9759, 9759, 9759, 9759,
	2054, 1440, 9759, 9759, 9759, 9759, 2033, 2489, 1010, 210,
	-1000, -1000, -1000, -1000, -1000, 1248, 1611, 8187, 8187, 32856,
	-1000, 3623, 8187, 8187, 12037, 8187, 2392, 8187, 8187, 8187,
	1887, 3984, 32856, 8187, -1000, 1885, 1883, -1000, -1000, 1412,
	8187, -1000, -1000, 8187, -1000, -1000, 8187, 9759, 8187, -1000,
	-1000, -1000, 112, 2392, 2392, 8187, 8187, 2392, 2392, 2392,
	1265, 2392, 2392, 2392, 2392, 2392, 2392, 2392, 2392, 1881,
	2426, -258, 6605, -1000, -266, 2346, 8187, -1000, -1000, 8187,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1765, -87,
	746, 707, 719, -1000, 2381, -1000, 2063, 2062, 1138, 32856,
	1313, 32856, 26036, 32856, 1417, 32856, 32856, 483, 483, 483,
	32856, 503, -1000, 32856, 1003, 2380, 32856, 2491, 9759, 9759,
	29712, 1285, 1202, 1202, -1000, -1000, 32856, -1000, -1000, -1000,
	1285, 32856, 1285, 1285, 2491, 1285, -1000, -1000, -1000, 1202,
	1202, -1000, -1000, -1000, -1000, 1285, 1285, -1000, -1000, 2491,
	32856, -47, 2491, 2491, -62, -1000, -1000, -1000, 32856, 32856,
	483, 32856, -1000, 32856, 32856, -1000, -1000, 32856, 33958, 32856,
	29188, 2388, -1000, 26036, 32856, 23940, -1000, -1000, 392, 536,
	15556, 342, 26036, 5032, -1000, -1000, 1183, 1183, 1183, 1183,
	5032, 5032, 1025, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	997, -1000, 141, 2346, -1000, -1000, -1000, -1000, -1000, 32856,
	32856, 26036, 1417, 32856, 32856, 32856, 32856, -1000, 2059, -1000,
	2357, 32856, 931, -1000, -1000, 12933, 1136, 931, -1000, 1325,
	-1000, 8187, 10294, -281, 8187, 10294, 10294, 8187, 10294, -1000,
	8187, 70, -1000, -1000, -1000, -1000, 1581, -1000, 1580, -1000,
	-1000, -1000, 1764, 1764, -1000, 1574, -1000, -1000, -1000, -1000,
	1571, -1000, -1000, 1569, -1000, -1000, 1879, 771, -1000, 1761,
	2221, -263, -1000, 14507, 32856, 32856, -1000, -1000, -263, -1000,
	13982, 32856, 2346, -1000, 2346, 32856, -1000, 2415, -1000, 281,
	204, -1000, -1000, -1000, -1000, -1000, -1000, 1135, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 993, -1000, 32856,
	-1000, -1000, 318, 26036, 27084, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 170, -1000, -1000, 158, -1000, 524, 42, 1245,
	-1000, -1000, 93, 153, 619, 1611, -1000, 1347, 1347, 1355,
	-1000, 485, -1000, -1000, -1000, -1000, 2057, -1000, -1000, -1000,
	1629, 1385, -1000, 1290, 1290, 1062, 1062, 1062, 1062, 1062,
	1422, 1422, -1000, -1000, -1000, 5557, 2054, 9759, 9759, 9759,
	9759, 466, 466, 3889, 3864, -1000, 8187, 1300, -1000, 8187,
	1589, 1153, 1112, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1878, 1877, 1727, 2506, 1874, 8187, -1000,
	-1000, 1244, 1243, 1242, -1000, 1731, 7663, -1000, -1000, -1000,
	1873, 1102, 1869, -1000, -1000, -1000, 1868, 1240, 844, 1864,
	2253, 1863, 967, 8187, 8187, 1209, 1205, 8187, 8187, 8187,
	8187, 1857, 8187, 8187, 8187, 8187, 8187, 8187, 8187, 8187,
	-18, -1000, -1000, 1199, -1000, 1611, -1000, 1756, -1000, 1004,
	966, -1000, 1598, -1000, -1000, -1000, -1000, 742, 688, 686,
	32856, 821, 11885, 32856, 1981, 2352, 62, -1000, 1022, -1000,
	42, -129, 778, 2207, 2503, 32856, 32856, 32856, 2378, 28664,
	-1000, 2036, 1172, -1000, -1000, 8187, -1000, -1000, 2206, 32856,
	32856, 2491, 2491, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	32856, 2491, 2491, 1202, 1285, -1000, -1000, 1285, -1000, -1000,
	1285, -1000, 1081, -1000, 32856, -1000, -1000, -1000, 1981, 965,
	-1000, 12409, 779, 527, -1000, 1193, 1193, 798, 1193, 1193,
	1193, 1193, 375, 367, 1193, 1193, 1193, 1193, 1193, 1193,
	1193, 1193, 1193, 1193, 1193, 1193, 1193, 1193, 2035, -1000,
	61, 2386, 185, 161, 1022, 193, 2549, 871, -1000, -1000,
	-1000, -1000, 19224, 19224, 15032, 19224, -1000, 1251, -1000, -1000,
	511, -1000, -1000, 778, -1000, -1000, -1000, 2032, 1230, -1000,
	-1000, 10826, -1000, 5032, 5032, 5032, 5032, -1000, -1000, 19748,
	32856, -1000, -122, -1000, -107, -1000, 939, -1000, -1000, 954,
	778, 2218, 939, 939, -1000, 11885, 32856, -1000, 2491, 7129,
	-1000, 23940, -1000, -1000, 28132, -1000, 27608, 2491, 1276, -1000,
	10294, 1502, 137, -1000, 160, -315, 131, 1437, 130, 1611,
	-1000, -1000, 1855, 1845, 1167, -1000, 1165, 1844, 1152, 1147,
	-1000, -64, -1000, 2326, 780, -1000, 2026, -1000, 1100, 2296,
	-1000, 914, -1000, 1227, 1085, -1000, 780, 1075, 2284, 914,
	-1000, -1000, 1070, 18, -1000, -1000, 32856, 1760, 1071, 27084,
	831, -1000, 507, 1061, 1059, -1000, 26036, 120, 26036, -1000,
	26036, -1000, -1000, 300, -1000, 32856, 2345, -1000, -1000, -1000,
	1700, -333, -1000, -1000, -1000, -1000, -1000, 1068, -1000, 466,
	466, 3889, 3525, -1000, 9759, -1000, 9759, 2438, 1256, -1000,
	8187, 1471, 320, 663, 18700, 32856, -1000, -1000, 8187, 8187,
	-1000, 2431, -1000, -1000, -1000, -1000, 8187, 8187, 1683, -1000,
	32856, -1000, -1000, -1000, -1000, 18700, -1000, 9759, -1000, 8187,
	912, 2389, -18, -18, 2362, 2334, 2269, 1055, -18, 2265,
	2234, 2229, 2225, 2220, 2185, 2080, 2023, -1000, 2025, 6605,
	-1000, -64, 8187, 8187, 8187, 2308, -1000, -1000, -1000, -1000,
	-1000, 687, 95, 1843, 909, -1000, -1000, 32856, -1000, -1000,
	-1000, 1842, 891, -1000, -1000, -1000, 3692, 1979, 1979, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2022, -1000,
	-1000, 1976, 1976, 1976, 1913, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1999, 1999, 2015, 1999, -1000, 2365,
	-1000, -17, 1193, 400, 26036, 391, -1000, 32856, 2217, 301,
	2312, 32856, 1996, 1995, 1987, 244, 3692, 32856, 929, -1000,
	1058, 33913, -1000, 32856, 1611, -1000, 1417, -1000, 1202, -1000,
	-1000, 2491, 904, -1000, -1000, 2491, 1202, 1202, 1285, 32856,
	-1000, 2364, 33958, -1000, -1000, -1000, -1000, 3692, 645, -1000,
	677, 483, 32856, 1380, 677, 1378, 1984, -1000, -1000, -1000,
	32856, 32856, 32856, 1376, 1369, -1000, 32856, 1567, -1000, 1566,
	1193, 1193, 1564, 1754, 1753, 1742, 1193, 1193, 1563, 1736,
	26560, 1545, 1542, 1540, 1549, 1734, 590, 1546, 1534, 1527,
	32856, 1982, 1668, -17, 1193, 147, 32856, 1225, 400, 1600,
	16080, 32856, 23940, 23940, 23940, 23940, -1000, 2250, 2247, -1000,
	2276, 2248, 2285, 32856, 23940, 1981, -1000, 26560, -1000, -1000,
	-1000, 2033, 1048, 2351, 653, 8187, 26036, 1728, 342, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32856, 32856,
	1839, -1000, 2495, -1000, 890, -1000, -1000, 1057, -1000, 2495,
	1305, -312, 10294, 1287, 1228, -1000, 8187, 10294, 8187, -282,
	150, -286, -1000, -1000, -1000, 1717, -1000, -1000, -1000, 1531,
	-1000, 1530, 0, 10, 1368, -263, 6605, 294, 32856, -263,
	32856, 6605, -1000, 32856, 293, -263, 32856, 1529, -1000, -1000,
	-1000, 2501, 26036, 1417, 1083, 25512, -1000, 111, -1000, 169,
	359, 1716, -1000, 538, 84, -1000, 1219, 1700, -1000, -1000,
	-1000, 9759, -1000, -1000, -1000, -1000, 1611, 8187, 1838, -1000,
	664, 664, 1835, -1000, 1979, 1979, -1000, 1913, 1976, 1913,
	664, 664, 1834, -1000, 1672, 2018, -1000, 1977, 1908, 8187,
	-1000, 1833, 3328, 918, -146, -18, -1000, -1000, -1000, -18,
	-18, -18, -18, -1000, -18, -18, -18, -18, -18, -18,
	-18, -18, 446, -1000, 0, 1611, 1611, -1000, -1000, 2305,
	-1000, 1715, 1711, 821, 3692, 599, 11885, 2314, 270, 1601,
	-1000, -1000, 24988, 349, -1000, -1000, -1000, 486, 230, 1522,
	343, -1000, 32856, 193, 32856, -1000, -1000, -1000, -1000, -1000,
	2312, -1000, 623, 234, 12409, 12409, 12409, 237, 1356, -1000,
	445, 868, 1052, 23940, 32856, -1000, 23416, 1832, -1000, 778,
	2491, -1000, 32856, -1000, 2491, 2491, 1202, -1000, 270, -1000,
	2596, -1000, 32856, -1000, 32856, -1000, 32856, 32856, 483, 8187,
	-1000, -1000, -1000, 32856, -1000, 239, -1000, -1000, 18700, 18700,
	-1000, -1000, -1000, -1000, 1709, 1708, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 384, 32856,
	1043, -1000, 1218, 1601, 24988, 1217, 1183, 1706, 349, -1000,
	1705, -1000, 797, 32856, 32856, -1000, 895, -1000, 1215, 2201,
	2216, 2201, -1000, -1000, -1000, -1000, 2246, -1000, 2231, -1000,
	-1000, 895, -1000, -1000, -1000, -1000, -1000, 653, -1000, 2408,
	677, 677, 677, 1830, 831, 1818, -1000, -1000, -1000, -1000,
	-1000, 2490, 2483, 24464, 2490, -1000, -312, 1237, -1000, 1336,
	129, 1371, 32856, -1000, -1000, -1000, 1814, 1804, -268, 11,
	2477, 2476, 2523, -1000, 1796, 804, -263, -1000, -1000, 780,
	-1000, -1000, -1000, -263, -1000, 780, -1000, -1000, 1417, -1000,
	149, -1000, -1000, -1000, -1000, -1000, -1000, 30, -1000, 32856,
	-1000, 1700, 1697, 83, -1000, 1611, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8187, -1000, -1000, -1000, 1904, -1000, -1000, 8187, 1790,
	1696, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2439, -1000, 2474, -268, -1000, -1000,
	-1000, -1000, -1000, -1000, 3692, -1000, 1271, -1000, -1000, 1694,
	41, -1000, -1000, -1000, 1689, 1686, 1519, -1000, -1000, 1462,
	781, 52, -1000, -1000, -1000, -1000, -1000, -1000, 1600, 1956,
	-1000, 1193, 1193, 1193, 32856, 1788, 801, -1000, 1786, 1782,
	460, 1344, 1330, -1000, 1511, 19224, 23940, 23416, 884, -1000,
	1046, -1000, -1000, -1000, 2491, -1000, -1000, 2491, -1000, -1000,
	2596, -1000, -1000, 1388, 9759, -1000, -1000, 1671, 18176, 539,
	595, 1955, -1000, 324, 2522, -1000, 1365, 1364, -1000, 32856,
	-1000, 1944, -1000, 1941, 2194, 285, 1936, 1927, 32856, 1898,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 381,
	1038, -1000, 1668, 1665, -1000, 41, 1664, 5032, -1000, -1000,
	-1000, 32856, 797, 797, 2439, 32856, 6605, -1000, -1000, 8187,
	1921, -1000, 8187, -1000, -1000, -1000, -1000, -1000, 1918, 2290,
	-1000, -1000, -1000, -1000, -1000, -1000, 8187, 8187, -1000, -1000,
	481, 10294, -292, 145, -1000, -1000, -1000, -271, 1663, -1000,
	-1000, 2472, 1636, 1614, 32856, -1000, 780, 780, 778, -1000,
	-1000, -62, -1000, -1000, -1000, 1871, -1000, 1768, -18, -1000,
	127, 8187, -271, -206, -1000, -1000, -1000, -1000, 279, -1000,
	-1000, 192, -1000, -1000, 1461, 385, -1000, -1000, 22368, 18700,
	18176, 1635, -1000, 3578, 12409, 125, 3578, 758, 1269, -1000,
	1509, -1000, 1505, -1000, 2491, 884, 1046, -1000, -1000, 1060,
	-1000, -1000, -1000, -1000, 3889, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1504, 1917,
	-126, -1000, -1000, 1915, 22368, 22368, 247, 247, 22368, 22368,
	1914, 534, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2426, -1000, -1000, 1611, 32856, 1611, 22892, -1000, 2467,
	2466, 1611, 771, -1000, -312, 32856, 32856, -273, 1500, -1000,
	1634, 5, -1000, -1000, 776, -275, -5, -6, -1000, -1000,
	-1000, 1781, -1000, 3244, -1000, -1000, -1000, 771, -273, 32856,
	358, 1627, -1000, -1000, 144, -1000, -1000, 1026, -1000, 1913,
	8187, -1000, -1000, -1000, 435, 34018, -1000, -1000, -1000, -62,
	435, 402, 211, -1000, 1494, -1000, -1000, 2439, -1000, 1677,
	8187, 1912, -178, 22368, 1012, 1007, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1005, 1001, 22368, -1000, -1000, -1000, 306,
	-1000, 995, 992, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1903, -1000, -1000, 2464, -1000, 1626, 499, -2, -6, -1000,
	2459, -3, 2456, 2453, -1000, -1000, 4508, -264, -25, 296,
	-1000, 2363, -1000, -1000, 29, -1000, -1000, -1000, 22368, 2333,
	1719, 277, 2452, 3578, -1000, -1000, 277, -1000, 240, -1000,
	1226, -1000, 1493, -1000, 2426, -1000, 1712, -1000, 2211, -1000,
	106, 991, -1000, -1000, -1000, -1000, 990, -1000, -1000, -1000,
	21844, 32856, 1614, -1000, 1900, 1477, 11, -1, 2450, -1000,
	1614, 2449, 1614, 1614, 1348, -1000, -1000, -1000, -1000, -1000,
	1621, -1000, 220, -1000, -1000, 2333, -1000, 2446, 338, -1000,
	-1000, -1000, -1000, 1453, -1000, -1000, 534, -1000, 2083, 1980,
	2500, -1000, -1000, -1000, -1000, 220, 220, 220, 220, 89,
	-1000, -1000, 976, -1000, -1000, 2366, 17652, -13, -1000, -1000,
	-1000, 1620, -1000, 1614, -1000, -1000, 4508, -1000, -1000, 1193,
	1508, 225, -1000, -1000, -1000, 21320, 314, 303, 276, -1000,
	439, -1000, -1000, -1000, -1000, 2521, -1000, 2519, 703, 703,
	-1000, -1000, 32856, -1000, 32856, -1000, 971, -1000, -1000, -1000,
	1034, -1000, -1000, -1000, -1000, -1000, 1446, -1000, 32856, -1000,
	32856, 297, 1445, 9759, 1894, 9759, 1892, 322, 1854, -1000,
	-1000, -1000, 1486, 331, -1000, -1000, 767, -1000, 1178, -1000,
	20796, 32856, -1000, -1000, 970, 1774, 2444, -1000, 3233, 32856,
	3040, 32856, 1766, 1106, 9759, -1000, -1000, -1000, 32856, 6081,
	-1000, 1019, -1000, -1000, 434, 298, -1000, 963, -1000, 962,
	20272, 1420, 2425, -1000, -1000, 1611, 32856, 952, -1000, 32856,
	288, -1000, -1000, -1000, 898, -1000, -1000, -1000, -1000, 434,
	2241, -1000, 1415, -1000, -1000, 2880, 557, -1000, -1000, 2880,
	291, -1000, 429, 1718, -1000, -1000, 877, -1000, 32856, 613,
	8187, -1000, 291, 3578, -1000, 8187, 859, -1000, 3578, 850,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 142, 2539, 209, 140, 3077, 66, 214, 217, 205,
	212, 3076, 3075, 2292, 2291, 3073, 3072, 3071, 3058, 3056,
	3048, 3047, 3042, 3034, 3033, 3032, 3031, 3030, 3029, 3027,
	3026, 3025, 3024, 3023, 3022, 3021, 3020, 3018, 3017, 207,
	3016, 3014, 3012, 3011, 3010, 3009, 3008, 3007, 3006, 3005,
	3004, 3003, 3002, 3000, 2999, 2998, 2997, 2996, 2995, 2994,
	2992, 2991, 2990, 2989, 2988, 2987, 2986, 2985, 2984, 2983,
	203, 2969, 2290, 2965, 2964, 2963, 2962, 2960, 2958, 2954,
	211, 2953, 2952, 2951, 2949, 2945, 2944, 2940, 2939, 2936,
	2934, 2933, 2932, 2931, 2930, 2928, 2926, 2925, 181, 2924,
	138, 182, 2921, 2918, 2916, 2915, 2911, 197, 187, 47,
	2909, 38, 2908, 183, 2906, 112, 2905, 114, 2904, 2902,
	2901, 2899, 2896, 2894, 2889, 2887, 2885, 2881, 2879, 2878,
	73, 2877, 97, 119, 162, 215, 2004, 218, 210, 153,
	136, 72, 2874, 2335, 2867, 124, 191, 130, 24, 2865,
	148, 2863, 117, 32, 26, 206, 103, 41, 131, 89,
	2859, 179, 84, 82, 2858, 2857, 202, 156, 2855, 94,
	2851, 2850, 2849, 2848, 161, 157, 2847, 2845, 100, 2844,
	2843, 101, 2842, 46, 2840, 134, 2838, 225, 91, 93,
	2837, 2836, 2835, 78, 2833, 2832, 2830, 2828, 144, 2827,
	2824, 110, 71, 2822, 2820, 2818, 45, 2817, 54, 2816,
	59, 2814, 2813, 2812, 2809, 49, 2808, 2807, 11, 20,
	22, 2805, 19, 2804, 135, 2803, 2802, 2800, 3, 2798,
	184, 96, 79, 120, 2797, 369, 2796, 2793, 2792, 125,
	2789, 356, 2786, 2785, 2784, 2783, 2782, 23, 2781, 180,
	40, 2779, 76, 102, 99, 154, 166, 2778, 2777, 2776,
	213, 69, 62, 0, 2775, 122, 2774, 2773, 2772, 223,
	2768, 194, 160, 193, 188, 216, 158, 2767, 2765, 65,
	2761, 132, 74, 106, 8, 2758, 224, 2755, 470, 146,
	2750, 164, 2748, 172, 10, 113, 2747, 2746, 35, 222,
	2745, 2744, 2743, 104, 2742, 2740, 92, 108, 2739, 2738,
	2737, 34, 2734, 30, 28, 2733, 80, 2730, 230, 2727,
	145, 123, 149, 143, 121, 189, 192, 55, 52, 2726,
	1221, 115, 75, 21, 2725, 190, 2723, 126, 90, 2722,
	60, 2721, 198, 311, 169, 2720, 151, 12, 36, 29,
	2719, 4, 2717, 200, 167, 2716, 2715, 18, 2713, 17,
	2712, 2709, 2706, 2703, 7, 2702, 2701, 2700, 1, 5,
	2698, 2, 186, 2697, 2696, 2695, 2694, 37, 129, 2693,
	116, 147, 2692, 2688, 70, 2687, 2684, 2683, 748, 2682,
	2681, 2679, 2676, 2675, 2674, 2672, 2671, 2669, 2666, 77,
	44, 2665, 2664, 2662, 2661, 64, 111, 2658, 2655, 2654,
	2653, 31, 152, 2651, 16, 2650, 27, 25, 33, 2648,
	95, 2647, 14, 155, 2646, 2645, 15, 2641, 2640, 9,
	13, 2639, 2638, 87, 2637, 68, 43, 133, 83, 2634,
	67, 170, 105, 2632, 2630, 204, 201, 168, 2628, 109,
	199, 219, 2627, 171, 2626, 2623, 2620, 2619, 2618, 2616,
	880, 2615, 2607, 208, 42, 53, 86, 2599, 2597, 2596,
	63, 128, 88, 85, 159, 2592, 163, 2591, 2588, 81,
	2585, 2584, 2577, 2575, 2574, 174, 2571, 2568, 2558, 2541,
	196, 137, 2537,
}

//line mysql_sql.y:9402
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 484, 488, 488, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 105, 482, 482, 482, 483, 483, 102, 122,
	121, 124, 124, 123, 123, 120, 120, 116, 119, 119,
	118, 118, 117, 112, 114, 114, 113, 115, 115, 103,
	91, 104, 432, 432, 431, 431, 430, 430, 385, 385,
	429, 429, 429, 428, 428, 428, 427, 427, 426, 426,
	425, 425, 423, 423, 424, 422, 421, 421, 421, 419,
	419, 419, 415, 415, 417, 416, 416, 418, 410, 410,
	413, 413, 411, 411, 411, 411, 414, 409, 409, 409,
	408, 408, 90, 90, 90, 332, 332, 89, 89, 346,
	346, 346, 346, 346, 344, 344, 344, 344, 344, 344,
	343, 343, 342, 342, 347, 347, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 81, 81, 81, 81,
	84, 84, 84, 85, 341, 341, 341, 82, 83, 83,
	331, 331, 336, 336, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 340, 340, 340,
	338, 338, 337, 337, 339, 339, 75, 75, 75, 78,
	77, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	76, 76, 76, 76, 76, 76, 71, 71, 71, 71,
	71, 70, 70, 72, 72, 328, 328, 327, 86, 86,
	87, 486, 486, 485, 487, 487, 487, 487, 88, 94,
	94, 94, 94, 94, 94, 94, 93, 93, 96, 96,
	95, 97, 80, 80, 80, 80, 80, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 456, 456, 456, 458,
	458, 267, 268, 489, 270, 266, 266, 266, 452, 452,
	453, 454, 455, 455, 455, 92, 11, 11, 11, 11,
	11, 11, 69, 74, 223, 223, 224, 224, 224, 224,
	225, 225, 225, 225, 225, 226, 227, 227, 67, 73,
	73, 73, 469, 469, 68, 476, 476, 388, 388, 281,
	281, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 392, 393, 277,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 46, 45,
	45, 45, 317, 317, 44, 490, 490, 256, 256, 56,
	55, 48, 57, 58, 59, 60, 61, 62, 43, 54,
	54, 54, 54, 54, 54, 54, 54, 65, 65, 404,
	404, 492, 492, 492, 63, 64, 387, 387, 387, 53,
	52, 51, 50, 49, 49, 42, 42, 41, 41, 47,
	128, 129, 274, 274, 274, 276, 276, 272, 491, 491,
	359, 359, 275, 275, 40, 40, 40, 40, 66, 273,
	273, 255, 271, 271, 271, 12, 12, 10, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	23, 24, 26, 325, 325, 322, 25, 18, 17, 20,
	16, 19, 21, 22, 22, 9, 9, 9, 9, 13,
	13, 14, 140, 140, 188, 188, 464, 464, 460, 460,
	461, 461, 461, 462, 462, 463, 463, 98, 398, 398,
	398, 398, 398, 398, 8, 162, 162, 397, 397, 397,
	397, 397, 397, 329, 329, 441, 441, 441, 442, 161,
	161, 156, 156, 399, 399, 295, 443, 443, 407, 407,
	406, 406, 405, 405, 159, 159, 160, 160, 143, 143,
	108, 108, 412, 412, 412, 412, 420, 420, 384, 384,
	215, 215, 250, 250, 251, 251, 133, 133, 134, 134,
	134, 134, 134, 134, 449, 449, 451, 451, 450, 158,
	158, 154, 154, 155, 155, 155, 153, 153, 152, 151,
	151, 150, 148, 148, 148, 149, 149, 149, 136, 136,
	136, 135, 135, 135, 135, 135, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 137, 137,
	457, 457, 457, 389, 389, 389, 395, 395, 232, 232,
	233, 233, 231, 231, 138, 138, 139, 139, 139, 139,
	230, 230, 229, 141, 141, 147, 146, 146, 142, 142,
	142, 142, 240, 240, 239, 239, 239, 239, 101, 106,
	106, 107, 165, 165, 238, 237, 237, 237, 164, 164,
	163, 163, 157, 157, 145, 145, 145, 145, 236, 144,
	234, 481, 481, 480, 480, 479, 477, 477, 477, 478,
	478, 478, 478, 434, 434, 434, 434, 434, 261, 261,
	261, 265, 265, 264, 264, 264, 264, 264, 269, 7,
	7, 7, 7, 7, 30, 30, 30, 30, 30, 30,
	30, 30, 36, 173, 174, 37, 175, 175, 176, 176,
	177, 177, 178, 179, 180, 180, 180, 180, 35, 166,
	166, 167, 167, 168, 168, 169, 170, 170, 170, 172,
	171, 34, 27, 465, 468, 466, 466, 470, 470, 470,
	471, 471, 471, 472, 472, 28, 125, 130, 130, 127,
	132, 132, 132, 132, 132, 126, 467, 473, 473, 473,
	326, 326, 323, 324, 324, 321, 320, 320, 320, 475,
	475, 474, 474, 474, 262, 262, 29, 316, 316, 318,
	319, 319, 319, 310, 310, 310, 310, 33, 314, 314,
	315, 315, 315, 315, 315, 311, 311, 313, 313, 309,
	309, 309, 309, 309, 32, 131, 131, 308, 308, 306,
	306, 304, 304, 305, 305, 303, 303, 303, 307, 307,
	31, 31, 31, 110, 109, 109, 109, 253, 253, 252,
	252, 111, 38, 200, 200, 373, 373, 373, 373, 373,
	391, 391, 391, 374, 374, 374, 375, 375, 375, 376,
	376, 376, 376, 376, 390, 390, 348, 348, 349, 349,
	349, 352, 352, 365, 365, 366, 366, 364, 364, 371,
	371, 370, 370, 369, 369, 368, 368, 367, 367, 367,
	367, 362, 362, 361, 361, 350, 350, 350, 350, 350,
	351, 351, 351, 360, 360, 363, 363, 206, 206, 207,
	207, 207, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 439, 439, 440, 209, 209, 209, 213, 213, 213,
	213, 213, 213, 208, 208, 210, 210, 189, 189, 187,
	187, 181, 181, 182, 182, 183, 183, 183, 186, 186,
	184, 184, 185, 185, 185, 185, 334, 334, 437, 437,
	438, 438, 433, 433, 433, 436, 436, 436, 436, 436,
	435, 435, 190, 248, 248, 248, 263, 263, 263, 263,
	247, 247, 247, 205, 205, 204, 204, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 333, 333, 278, 278, 279, 279, 222, 221,
	221, 221, 221, 221, 219, 220, 218, 218, 218, 218,
	218, 217, 217, 216, 216, 216, 312, 312, 214, 214,
	212, 212, 212, 211, 211, 211, 372, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 246, 287, 287, 292, 292, 448, 448, 447, 191,
	191, 191, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 201, 201, 201, 357, 357, 357, 357, 357, 358,
	358, 358, 355, 355, 356, 356, 296, 297, 297, 396,
	396, 353, 353, 354, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 403, 403, 403, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	459, 459, 459, 444, 444, 444, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 244, 244, 244, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 298, 298, 299, 299, 400, 400, 400,
	400, 400, 400, 401, 401, 402, 402, 402, 402, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 285, 241,
	241, 241, 300, 293, 293, 294, 294, 288, 288, 288,
	288, 288, 288, 288, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 289, 289, 291, 291,
	302, 302, 302, 301, 301, 301, 301, 301, 301, 301,
	203, 203, 203, 203, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 193, 193, 193, 193, 197,
	197, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 198, 198, 198, 198, 196,
	196, 196, 196, 196, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	99, 100, 100, 195, 249, 249, 377, 377, 380, 380,
	378, 378, 379, 381, 381, 381, 382, 382, 382, 383,
	383, 383, 386, 386, 254, 254, 254, 260, 260, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 1, 3, 2, 2, 2, 1,
	2, 2, 2, 3, 2, 3, 1, 1, 7, 7,
	8, 8, 0, 4, 7, 0, 3, 0, 2, 0,
	1, 1, 1, 1, 4, 2, 2, 3, 3, 4,
	5, 3, 4, 4, 2, 2, 2, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	5, 3, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 6, 3, 5, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 5, 1, 3, 2, 1, 5,
	4, 4, 2, 0, 5, 0, 1, 3, 3, 1,
	3, 1, 3, 1, 3, 4, 0, 1, 0, 1,
	1, 3, 1, 1, 0, 4, 1, 3, 2, 1,
	0, 8, 0, 4, 7, 4, 0, 2, 0, 2,
	0, 2, 0, 4, 1, 3, 1, 1, 4, 3,
	4, 5, 4, 5, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 3, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 4, 1,
	3, 4, 0, 2, 1, 1, 2, 2, 0, 1,
	2, 4, 1, 3, 1, 3, 2, 3, 1, 4,
	3, 0, 1, 1, 2, 5, 2, 2, 2, 0,
	2, 3, 3, 0, 1, 3, 1, 3, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 1, 7, 1, 3, 0, 1,
	1, 3, 1, 3, 0, 1, 1, 1, 12, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 4, 1,
	1, 7, 7, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 0, 2, 7, 8, 0, 2, 6,
	0, 2, 2, 3, 3, 4, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	11, 9, 11, 2, 2, 4, 5, 1, 3, 0,
	3, 5, 10, 0, 2, 0, 3, 2, 4, 3,
	0, 2, 1, 0, 2, 3, 0, 2, 3, 0,
	3, 2, 4, 3, 0, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 7, 7,
	2, 1, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	1, 4, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 1, 6, 8, 6, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 4, 4, 3, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 2, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	2, 3, 5, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -484, -488, -2, -5, 552, -1, -4, -100, -75,
	-7, -102, -103, -8, -98, -9, -10, -12, -79, -93,
	-95, -97, -96, -39, -11, -92, -70, -71, -81, -86,
	-89, -90, -91, -104, -99, -101, -133, -105, 545, -76,
	-77, -78, -30, -29, -28, -27, -125, 551, 408, 12,
	457, -13, -14, -449, -15, 237, -266, -267, -268, -270,
	-489, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -128, -129, -66, -68,
	-67, -73, -69, -74, -127, 212, -72, 61, -82, -83,
	-84, -85, -87, -88, 339, 345, 398, 544, 46, -134,
	-136, 555, 140, 141, 143, 144, -31, -32, -33, -34,
	-35, -36, -38, -37, 208, 14, 490, -16, -19, -17,
	-20, -18, -25, -26, -24, -21, -23, -126, -22, 232,
	231, 37, 295, 296, 297, 343, 230, 209, 13, 30,
	41, 321, -135, 67, 210, -137, 10, 557, -6, -3,
	-2, -112, -116, -120, -123, -124, -121, -122, -4, -100,
	98, 222, 546, -263, 335, 547, 549, 548, 70, 78,
	-257, -259, 339, 345, 544, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 460, 531, 532, 533, 534, 319, 320, 487, 249,
	273, 369, 276, 283, 140, 159, 153, 181, 173, 148,
	253, 288, 254, 77, 143, 443, 88, 420, 395, 146,
	268, 270, 272, 275, 255, 169, 164, 267, 251, 162,
	256, 39, 257, 186, 258, 259, 492, 416, 318, 422,
	280, 393, 163, 417, 271, 419, 188, 192, 434, 435,
	157, 158, 424, 437, 185, 229, 42, 489, 241, 438,
	190, 184, 180, 446, 284, 282, 183, 156, 179, 252,
	50, 194, 193, 195, 389, 390, 391, 392, 260, 261,
	333, 433, 176, 165, 323, 149, 22, 441, 236, 421,
	346, 262, 277, 285, 189, 191, 243, 248, 491, 397,
	247, 281, 439, 161, 240, 269, 235, 442, 150, 348,
	263, 144, 274, 436, 445, 49, 361, 155, 147, 226,
	141, 245, 250, 11, 264, 265, 266, 287, 286, 278,
	177, 242, 182, 167, 154, 178, 142, 244, 444, 362,
	542, 321, 378, 175, 172, 246, 219, 440, 423, 145,
	382, 363, 170, 289, 538, 539, 540, 334, 317, 290,
	291, 168, 233, 414, 415, 292, 294, 388, 310, 364,
	396, 370, 365, 201, 298, 426, 428, 187, 541, 299,
	300, 301, 418, 302, 303, 304, 305, -339, -337, -263,
	544, 345, 339, 321, -175, -263, 556, -143, 38, -187,
	-263, -143, -72, -14, -13, -135, -136, -187, 216, -271,
	23, 393, -80, 394, 212, 67, -263, -9, -8, -98,
	-70, -133, -269, -263, 295, 295, -269, 216, -263, 247,
	377, -388, 222, -343, -316, 248, -342, -318, -345, -319,
	31, 208, 210, 209, 244, 14, 343, 218, 12, 10,
	344, 230, 24, 25, 27, 13, 345, 347, 28, 348,
	351, 352, 353, 41, 356, 357, 237, 70, 78, 73,
	255, -174, -263, -294, -288, 95, 238, -290, -283, -284,
	-286, -429, -423, -282, 67, 122, 123, 130, 96, -285,
	-372, 35, 98, 497, 458, -242, -243, -244, -245, -246,
	-263, -424, -422, 73, 79, 82, 85, 86, 84, 83,
	166, 81, 74, 134, 135, -136, 70, -444, 505, -258,
	526, 531, 532, 533, 534, 525, 46, -394, -402, 215,
	-400, 133, 171, 233, 167, 12, 128, 388, 168, 502,
	522, 460, 506, 529, 499, 500, 494, 495, 496, 498,
	507, 509, 521, -403, 517, 527, 528, 515, 530, 72,
	71, 520, 519, 508, 503, 504, 510, 493, 501, 511,
	512, 518, 523, 524, 327, 88, 328, 329, 450, 322,
	330, 222, 393, 55, 331, 332, 333, 334, 335, 457,
	336, 56, 337, 326, 237, 378, 338, 170, 187, 462,
	461, 463, 454, 451, 449, 452, 453, 455, 456, 513,
	514, 516, -106, -107, 536, -152, -153, -235, 19, 6,
	7, 8, 9, -482, 395, 491, 145, 142, -330, 145,
	94, 150, 149, -330, 298, 243, 340, 219, 319, 378,
	302, 247, -310, -308, -390, 292, 288, 217, 227, 226,
	89, 450, 215, 354, -460, -461, 205, 206, 207, -451,
	483, -450, -263, 329, 26, 216, 340, 243, 428, 426,
	427, 429, 430, 431, 432, -54, -404, -387, 423, 422,
	-275, 415, 421, 413, 425, 416, 320, 304, 303, 208,
	553, 484, -254, 364, 396, 447, 448, 341, 397, 434,
	436, 417, 88, 174, 171, 219, 216, 319, 450, 378,
	302, -460, 247, 377, 40, -336, 388, -335, -337, 434,
	435, 436, 446, 71, 72, 433, -254, 88, 414, 414,
	-153, -235, -152, -134, -136, -101, -449, 217, 319, 378,
	247, 218, 216, 219, 450, 295, 340, 243, 302, -389,
	-457, 31, -395, 202, 203, 204, 32, 33, -1, 102,
	557, -288, -288, -6, 558, -6, -288, -263, -263, 137,
	-193, -197, -194, -196, -195, -199, -198, 171, 172, 133,
	175, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 30, 187, 233, 167, 168, 169, 170, 188, 153,
	173, 488, 196, 154, 197, 155, 198, 156, 199, 157,
	158, 200, 159, 162, 163, 164, 161, 136, 67, 136,
	73, -159, 239, -187, 136, -159, -153, -152, -153, -187,
	-247, -263, 395, 105, -80, -80, 394, -452, -453, -454,
	-456, 212, 394, 393, 136, 15, -269, -269, 65, -187,
	-318, 247, -343, -316, 35, 64, 137, 220, 137, 64,
	67, 341, 319, 378, 342, 450, 216, 354, 219, 247,
	355, 319, 378, 216, 219, 450, 247, 319, 216, 219,
	378, 247, 355, 413, 414, 219, 26, 346, 349, 350,
	414, -408, 446, 137, 94, 91, 92, 93, -288, 112,
	-301, 105, 106, 107, 108, 109, 110, 111, 119, 118,
	129, 122, 123, 124, 125, 126, 127, 128, 120, 121,
	115, 95, 113, 117, 114, 97, -136, -288, -294, 46,
	-286, -286, -286, -286, -372, -292, -288, 67, 67, 136,
	73, -288, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, -401, 67, 67, -298, -299, 67,
	67, -282, -247, 67, 73, 73, 67, 67, 67, 73,
	-299, -299, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	-153, 137, 67, -108, 38, -155, 21, -137, -136, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 79, 439,
	490, 148, 149, 150, -173, -263, -175, -166, -263, -306,
	222, -306, -306, -306, -306, 218, -306, 216, 216, 216,
	-306, -462, 152, 137, -451, -158, 67, -274, 113, 117,
	23, 245, 245, 245, -274, 282, -490, -491, 15, 115,
	-272, -491, -272, -272, -274, -492, 218, 424, 42, 246,
	245, -154, -155, -154, 418, 414, -359, 419, 420, -276,
	-491, -275, -274, -274, -275, -274, -274, -274, 216, 219,
	450, 302, 554, -490, -490, 30, 30, -388, -187, -388,
	484, -255, -263, -388, -388, -463, 221, -318, 247, 247,
	137, 105, 23, -338, 105, 116, -337, -337, -337, -337,
	-338, -338, -208, 40, -262, 133, -263, 73, -208, 40,
	-486, -485, -187, -154, -137, -136, 68, 68, 68, -388,
	-388, -388, -388, -388, -388, -388, -388, -269, -166, -175,
	222, -388, -138, -139, 124, -288, -263, -138, -3, -114,
	-113, 99, 100, 102, 547, 335, 546, 550, 544, -337,
	40, -383, 362, 361, -377, -379, 67, -378, 67, -378,
	-378, -378, 67, 67, -380, 67, -380, -380, -377, -381,
	67, -381, -382, 67, -381, -263, -293, -294, -263, 38,
	-397, 46, -133, 67, 30, 67, -263, -398, 46, -133,
	67, 30, -154, -108, -155, 136, 79, 73, -80, 68,
	137, -455, 85, 86, -458, 185, 177, -263, -94, 73,
	-7, -8, -9, -10, -39, -70, -133, -425, -423, 67,
	31, 387, 64, 15, -344, 216, 450, 340, 243, 219,
	319, -342, -325, -322, -320, -262, -318, -321, -320, -347,
	-247, 414, -109, 399, 294, -288, -288, -288, -288, -288,
	84, 95, 317, 85, 86, -283, -302, 31, 290, 291,
	-284, -284, -284, -284, -284, -284, -284, -284, -284, -284,
	-284, -284, -291, -300, -372, 67, 115, 113, 117, 114,
	97, -286, -286, -284, -284, 68, 137, -448, -447, 99,
	-288, -288, -263, -445, -446, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 331, 326, 332, 330,
	322, 338, 333, 334, 170, 481, 482, 475, 476, 477,
	478, 479, 480, -293, -293, -288, -445, -293, -241, 32,
	31, -294, -294, -294, 68, -288, -459, 315, 314, 316,
	-156, -263, -293, 68, 68, 68, 79, -294, -294, -293,
	-284, -293, -446, -241, -241, -294, -294, -241, -241, -241,
	-241, 124, -241, -241, -241, -241, -241, -241, -241, -241,
	68, -154, -107, -406, -405, -288, 40, 537, -108, -288,
	-151, -150, -288, -483, 73, 440, 441, 146, 149, 148,
	34, 67, 67, 136, -187, 95, -465, -263, -326, -323,
	-320, -263, -316, -263, -263, -306, -306, -306, -187, -463,
	-450, 34, -157, -263, -231, 16, -286, -286, -320, 247,
	-490, -274, -274, -256, -255, -276, -271, -276, -276, -231,
	-491, -274, -274, -276, -272, -231, -263, 414, -231, -231,
	-359, -273, -263, -273, -306, -255, -256, -256, -187, -223,
	-224, 213, 210, 209, -228, 359, 249, -307, 253, 77,
	254, 395, 255, 218, 257, 258, 259, 229, 260, 261,
	262, 388, 263, 264, 265, 266, 342, 6, 305, 40,
	-465, -465, 30, 30, -326, -263, -146, -141, -145, -142,
	-147, -234, -236, -144, 67, -187, -136, -263, 31, 387,
	-341, 387, 31, -316, -335, -331, 73, 388, -321, -340,
	64, 133, -405, -338, -338, -338, -338, -340, -340, 132,
	137, -487, 439, 440, 205, -108, -189, -187, -465, -325,
	-316, -263, -189, -189, -263, 67, 35, -263, -230, 137,
	-229, 15, -264, -263, 34, 73, 136, -230, -115, -113,
	101, -288, -6, 546, -288, -6, -6, -288, -6, -288,
	-386, 363, 79, 79, -249, 73, -249, 79, 79, 79,
	68, 73, -329, 64, -399, -295, -443, 536, -161, 68,
	-156, -441, -442, -156, -160, -263, -399, -161, 68, -441,
	-108, -108, -263, 23, -80, -453, 136, 137, -157, -344,
	-324, -321, -346, 124, -263, -332, 137, 490, 559, 71,
	220, -475, -474, 379, 68, 137, -409, 221, 457, 73,
	560, 201, 84, 317, 85, 86, -372, -294, -291, -286,
	-286, -284, -284, -289, 234, -289, 94, -288, -287, -447,
	101, -288, 34, 137, 65, 136, 68, 68, 15, 15,
	68, -288, 68, 68, 68, 68, 15, 15, -288, 68,
	136, 68, 68, 68, 68, 65, 68, 137, 68, 137,
	-294, -288, 68, 68, -288, -288, -288, -294, 68, -288,
	-288, -288, -288, -288, -288, -288, -288, -354, 409, 137,
	68, 73, 137, 22, 137, -148, 36, 37, 147, 150,
	150, 149, -174, -176, -177, -178, -179, -180, 115, 138,
	139, -167, -168, -169, -170, -193, -247, 172, 175, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	233, 167, 168, 169, 170, 188, 153, 173, 154, 155,
	156, 157, 158, 159, 162, 163, 164, 161, -263, -158,
	35, -468, 366, -476, 137, 40, -474, 450, -309, 65,
	-131, 15, -187, -187, -187, -200, 34, 15, -140, -188,
	-263, 67, 68, 137, -288, -317, 65, -263, -256, -231,
	-231, -187, -263, -231, -231, -274, -276, -276, -272, 136,
	-255, -158, 137, -183, -190, -184, -186, -247, -279, -185,
	227, -438, 225, 223, 89, 228, 279, 90, 218, -225,
	218, 90, 224, 228, 223, -226, 218, -260, 105, -260,
	-254, 132, -260, -260, -260, -260, 256, 256, -260, -260,
	-260, -260, -260, -260, -260, -260, -260, -260, -260, -260,
	-260, -260, 67, -469, 366, 30, 325, 325, -476, -132,
	319, 30, -237, -238, -239, -240, 53, 57, 59, 54,
	55, 56, 60, 30, 137, -261, -265, 34, -263, 73,
	-261, -136, -141, -146, -261, 67, 220, 67, 105, -340,
	-340, -340, -340, 40, -262, -485, 446, 440, 137, 64,
	-167, -175, -231, -139, -141, -263, 73, -263, 124, -231,
	102, -6, 100, -119, -118, -117, 103, 544, 550, 102,
	102, 102, 68, 68, 68, 137, 68, 68, 68, 137,
	68, 137, -412, 419, 39, 137, 67, 68, 137, 46,
	137, 105, 68, 137, 68, 46, 136, 395, -263, -423,
	68, -346, 137, 220, 136, 136, -322, 345, -262, -324,
	20, 490, -247, 38, -253, -252, 73, 560, 68, -289,
	-289, 94, -286, -283, 68, 102, -288, 100, -191, -193,
	361, 362, -192, -198, 133, 171, 233, 170, 169, 167,
	361, 362, -208, -263, -288, -288, 68, -288, -288, 15,
	-263, -208, -284, -288, -153, 68, -353, -354, -353, 68,
	68, 68, 68, -353, 68, 68, 68, 68, 68, 68,
	68, 68, 67, -405, -412, -288, -288, -150, -149, 43,
	150, 353, 68, 137, -247, 68, 137, -193, 34, -471,
	421, 368, -260, -281, -280, 321, 41, -392, 388, 374,
	375, -323, 247, -263, 64, 309, 310, 311, 312, -304,
	-305, -303, -307, -465, 67, 67, 67, -373, 299, -193,
	-187, -140, -263, 15, 137, -464, 136, -1, -263, -316,
	-274, -231, -491, -231, -274, -274, -276, -263, 34, -224,
	-193, -185, -437, -438, -306, -263, 90, -437, 90, 67,
	-263, -263, -263, 90, 90, -263, 79, 79, -260, -260,
	79, 73, 73, 73, -260, -260, 79, 73, -265, 79,
	79, 79, 79, 40, 73, -213, 40, 267, 271, 268,
	269, 270, 79, 40, 79, 40, 79, 40, -263, 67,
	-439, -440, 73, -471, -260, 325, -337, 105, -281, -130,
	77, 31, -162, 213, 210, -465, -328, -327, -247, -145,
	-145, -145, -145, 53, 53, 53, 58, 53, 58, 53,
	-239, -328, -147, -158, -265, 68, -481, -480, -479, -477,
	61, 221, 62, -293, -324, -277, 73, -331, -187, -187,
	68, -233, 17, 136, -233, 98, -6, -115, -117, -288,
	-6, -288, 546, 335, 547, 73, 79, 79, -420, 405,
	400, 402, 90, -295, -407, -406, 46, -133, -156, -399,
	-442, -405, -263, 46, -133, -399, -263, 79, 15, -321,
	-316, 124, 124, -263, 346, -332, 73, 367, 73, 216,
	561, 137, 105, -253, -283, -288, 68, -201, 158, 157,
	-201, 68, -378, -378, -377, -380, -377, -201, -201, 68,
	68, 23, 68, 68, 68, -288, 68, 68, 137, -396,
	459, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -297, -296, 239, -420, 44, 45,
	73, 73, -178, -193, 214, -169, 40, -133, -472, 77,
	-466, 73, -263, -473, 77, 369, 135, 323, 40, 370,
	371, 385, 318, 79, 79, 376, -467, -263, -132, -187,
	-303, -254, 132, 258, 302, -181, -182, -183, -181, -181,
	-374, 301, 20, 79, 123, -159, 65, 136, -141, -188,
	-263, 124, 68, -231, -263, -231, -231, -274, -133, -205,
	-204, -202, 84, 95, 40, 359, -203, 77, 132, 272,
	250, 273, -222, -278, 64, 365, 223, 89, 90, 347,
	-279, -435, -263, -433, -435, -263, -433, -433, -306, -288,
	-263, -227, 307, 308, -208, -208, 73, 73, -209, 250,
	-189, 68, 137, 105, -472, -466, 105, -338, 73, -473,
	73, 137, -162, -162, -231, 137, 105, -164, -163, 64,
	65, -165, 64, -163, 53, 53, -231, -479, -478, 23,
	-438, -438, -438, 68, 68, -232, 18, 20, 124, -232,
	102, 100, 102, 102, -263, 68, 68, -384, 538, -416,
	-418, 400, 20, 20, 13, 68, -399, -399, -316, -332,
	388, -187, -252, 73, 561, -288, 68, -288, 68, 73,
	-153, 20, -384, -171, -193, -282, 73, -470, 379, 73,
	73, 79, 40, 79, 135, 372, -393, -130, 67, -260,
	-260, -260, -263, 68, 137, 68, 68, -375, 238, 79,
	123, 79, 123, 79, -261, -141, -263, -231, -464, 136,
	-231, -231, -202, 84, -284, 73, -210, -262, 133, -211,
	40, 271, 267, -212, 40, 251, 252, -214, 67, 279,
	13, 90, 90, -187, 67, 67, 65, 289, 67, 67,
	-435, 68, 251, 252, 68, -440, 73, -470, 73, -340,
	-465, -153, -327, -405, -288, 67, -288, 67, 53, 19,
	17, -288, -294, 222, -6, 547, 335, -215, 539, 73,
	20, 73, -414, 73, -328, -111, -410, -359, 68, 68,
	-353, -356, -355, -358, 406, 281, 412, -294, -215, 489,
	20, 490, 322, 40, 79, 40, 373, -311, -313, -247,
	67, -208, -210, 73, -206, -207, -228, -183, -110, -109,
	-206, -376, 141, 79, 123, 79, 79, -231, -231, 79,
	67, -400, -312, 67, -311, -311, -436, 309, 310, 311,
	313, 312, -436, -311, -311, 67, -334, -333, 280, 95,
	-154, -157, -434, -263, 223, 20, 20, -263, -263, -250,
	540, 79, 73, 402, -385, 541, -419, 405, -413, -411,
	400, 401, 402, 403, 68, -357, 97, 372, 376, -288,
	-250, -172, -263, 73, 367, 73, 322, 68, 137, -377,
	-288, -348, 239, 137, -228, -111, -348, -391, 149, 300,
	490, 79, 123, 79, -153, 68, -288, -298, -217, -216,
	486, -311, 68, 68, 68, 68, -311, 280, 68, 68,
	137, 67, 20, 73, -421, 221, -417, -418, 404, -411,
	20, 402, 20, 20, -357, 536, 410, 411, 410, 411,
	34, 388, -314, -313, -148, 68, -349, 288, 20, -228,
	-349, 300, 79, 123, 79, -154, 68, -221, -219, -220,
	64, 417, 277, 278, 68, -314, -314, -314, -314, 68,
	-263, 223, -251, -263, -414, -428, 67, 79, -416, -415,
	-417, 20, -414, 20, -414, -414, 94, 73, -315, 229,
	77, 490, 307, 308, -148, 20, -350, 281, 282, -351,
	-363, 284, 79, -333, -220, 64, -219, 64, 14, 13,
	-222, 68, 137, -432, 30, 68, -427, -426, -248, -422,
	-263, 405, 406, 73, -414, -357, -260, 73, 306, -247,
	67, -361, 285, 67, -359, 67, -359, 90, 310, -218,
	274, 275, 30, 149, -218, -263, -431, -430, -429, 68,
	137, 136, 79, -263, -347, -352, 286, 79, -284, 67,
	-284, 67, -360, 283, 67, 84, 40, 276, 137, 105,
	-426, -263, 68, -365, 67, 20, 68, -347, 68, -347,
	67, 105, -284, -430, 40, -288, 136, -366, -364, 239,
	-351, 68, 68, 68, -347, 79, 68, -263, 68, 137,
	-263, -362, 287, 68, -364, -367, 46, 79, -371, -368,
	67, -228, 241, 115, -371, -228, -370, -369, 286, 242,
	67, 68, 137, -263, 238, 67, -294, -369, -368, -294,
	68, 68,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 246,
	247, 248, 749, 750, 751, 752, 753, 0, 0, 0,
	0, 525, 526, 0, 497, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 336,
	337, 338, 339, 340, 341, 0, 271, 267, 206, 207,
	208, 209, 278, 279, 367, 0, 0, 0, 0, 606,
	-2, 53, 260, 0, 251, 251, 754, 755, 756, 757,
	758, 759, 760, 761, -2, 538, 0, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 325,
	326, 327, 321, 322, 324, 323, -2, 0, 538, 0,
	0, 0, 626, 0, 0, 641, 663, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1046, 1047,
	1048, 1049, -2, 1514, 1492, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 0, 244, 242,
	1492, 1514, 1574, 1607, 0, 766, 0, 584, 0, 589,
	1009, 584, 272, 527, 528, 626, 626, 495, 0, 307,
	0, 1505, 311, 0, 0, 0, 492, 302, 303, 304,
	305, 306, 0, 748, 0, 0, 298, 0, 266, 1565,
	0, 0, 0, 0, 0, 0, 150, 837, 152, 839,
	156, 163, 0, 0, 168, 169, 172, 173, 174, 175,
	176, 0, 180, 0, 182, 185, 0, 187, 188, 0,
	191, 192, 193, 0, 203, 204, 205, 840, 841, 842,
	-2, 81, 764, 1430, 1325, 0, 1332, 1333, 1344, 1355,
	1119, 1120, 1121, 1122, 0, 0, 0, 0, 0, 1129,
	1130, 0, 1144, 1667, 0, 1136, 1137, 1138, 1139, 1140,
	90, 102, 103, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 0, 1298, 1106, 1046, 0, 1675, 0,
	1695, 1700, 1701, 1702, 1703, 1694, 0, 0, 1283, 0,
	1273, 0, 0, -2, -2, 0, 0, 1633, -2, 1672,
	1691, 1699, 1676, 1698, 1669, 1670, 1664, 1665, 1666, 1668,
	1677, 1679, 1690, 0, 1686, 1696, 1697, 0, 0, 104,
	105, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1289, -2, 1291, 1292, 1294, 1295,
	1296, 1297, -2, 1300, 1301, 1302, -2, -2, 1305, 1306,
	1307, 1308, 1309, 1310, 1313, -2, 1315, -2, -2, 1285,
	1286, 1287, 1288, 1277, 1278, 1279, 1280, 1281, 1282, -2,
	-2, -2, 626, 699, 0, -2, 0, 0, 0, 646,
	649, 652, 655, 0, 54, 55, 261, 262, 250, 252,
	0, 256, 0, 249, 0, 0, 0, 869, 869, 869,
	869, 869, 0, 869, 0, 0, 0, 869, 844, 845,
	846, 867, 868, 915, 543, 539, 540, 541, 542, 614,
	0, 616, 619, 472, 419, 0, 0, 0, 472, 0,
	433, 425, 0, 0, 0, 472, 0, 0, 621, 621,
	0, 475, 482, 472, 472, -2, 472, 472, 472, 0,
	0, 439, 440, 441, 425, 425, 444, 445, 446, 457,
	458, 483, 1454, 0, 0, 367, 0, 367, 0, 367,
	367, 545, 1565, 0, 0, 217, 1633, 222, 0, 1512,
	1513, 1579, 1528, 0, 0, 1546, 0, -2, 0, 288,
	621, 0, 627, 0, 626, 0, 0, 367, 367, 367,
	367, 367, 367, 367, 367, 0, 0, 0, 367, 0,
	0, 664, 665, 660, 661, 662, 666, 667, 5, 6,
	19, 0, 0, 0, 0, 0, 0, 60, 59, 0,
	1431, 1449, 1386, 1387, 1388, 1436, 1390, 1440, 1440, 1440,
	1440, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	0, 0, 1429, 1409, 1438, 1438, 1438, 1436, 1433, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1443, 1443, 1446, 1443, 0, 1323, 0,
	0, 0, 0, 588, 0, 0, 621, -2, 0, 496,
	308, 1050, 0, 0, 312, 313, 0, 0, 328, 0,
	331, 316, 317, 318, 0, 0, 300, 301, 0, 0,
	268, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 160, 157, 164, 167, 177, 184, 0, 196, 198,
	201, 158, 165, 170, 171, 178, 199, 159, 161, 162,
	166, 200, 202, 179, 183, 197, 181, 186, 189, 190,
	195, 0, 131, 0, 0, 0, 0, 0, 1331, 0,
	0, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1325, 0, 0,
	1125, 1126, 1127, 1128, 1131, 0, 1145, 0, 0, 0,
	1384, 0, 1323, 1323, 0, 1323, 1319, 0, 0, 0,
	0, 0, 0, 1323, 1259, 0, 0, 1261, 1274, 0,
	0, 1263, 1264, 0, 1267, 1268, 1323, 0, 1323, 1272,
	1255, 1256, 0, 1319, 1319, 0, 0, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 0,
	621, 0, 0, 609, 0, 590, 0, 643, 645, 0,
	647, 648, 650, 651, 653, 654, 656, 657, 56, 0,
	0, 254, 0, 259, 0, 763, 0, 0, 779, 0,
	0, 0, 0, 0, 0, 0, 0, 869, 869, 869,
	0, 545, 544, 0, 615, 0, 0, 672, 0, 0,
	0, 425, 472, 472, 431, 432, 427, 426, 478, 479,
	475, 0, 475, 475, 672, 0, 451, 452, 453, 472,
	472, 459, 622, 460, 461, 475, 0, 480, 481, 672,
	0, 0, 672, 672, 0, 469, 470, 471, 0, 0,
	869, 0, 488, 427, 427, 1455, 1456, 0, 878, 0,
	0, 0, 491, 0, 0, 0, 546, 210, 0, 0,
	0, 0, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 231, 234, 1003, 1004, 834, 835, 235, 236,
	280, 281, 0, 590, 642, 644, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 0, 523,
	0, 0, 680, 674, 676, 743, 90, 680, 8, 77,
	74, 0, 19, 0, 0, 19, 19, 0, 19, 245,
	0, 1452, 1450, 1451, 1389, 1437, 0, 1414, 0, 1415,
	1416, 1417, 0, 0, 1410, 0, 1411, 1412, 1413, 1405,
	0, 1406, 1407, 0, 1408, 243, 0, 1324, 767, 0,
	563, 576, 558, 0, 565, 0, 1010, 547, 576, 549,
	0, 565, 590, 612, 590, 0, 309, 0, 314, 0,
	0, 330, 332, 333, 334, 319, 320, 493, 296, 297,
	289, 290, 291, 292, 293, 294, 295, 299, 100, 0,
	269, 270, 0, 0, 0, 144, 145, 146, 147, 148,
	149, 151, 135, 513, 515, 826, 838, 0, 829, 0,
	154, 194, 127, 0, 0, 1326, 1327, 1328, 1329, 1330,
	1334, 0, 1336, 1338, 1340, 1342, 0, 1360, -2, -2,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1345, 1358, 1359, 0, 0, 0, 0, 0,
	0, 1356, 1356, 1351, 0, 1123, 0, 1142, 1146, 0,
	0, 0, 91, 1318, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 0, 0, 1325, 0, 0, 0, 1320,
	1321, 0, 0, 0, 1214, 0, 0, 1220, 1221, 1222,
	0, 571, 0, 1284, 1260, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 698, 700, 0, 580, 582, 583, 0, 610, 623,
	628, 629, 632, 52, 57, 263, 264, 0, 0, 258,
	0, -2, 781, 0, 619, 0, 0, 793, 365, 820,
	0, 0, 836, 859, 865, 0, 0, 0, 893, 0,
	617, 0, 0, 712, 418, 0, 473, 474, 422, 1565,
	427, 672, 672, 434, 428, 435, 477, 436, 437, 438,
	0, 672, 672, 472, 475, 462, 476, 475, 465, 466,
	0, 484, 489, 485, 0, 487, 442, 443, 619, 343,
	344, 0, 0, 0, 349, 1457, 1457, 0, 1457, 1457,
	1457, 1457, 0, 0, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 0, 879,
	362, 0, 0, 0, 365, 810, 685, 0, 686, 687,
	683, 714, 738, 738, 0, 738, 718, 1009, 211, 212,
	0, 214, 215, 216, 223, 218, 220, 0, 0, 224,
	237, 238, 239, 0, 0, 0, 0, 229, 230, 0,
	0, 283, 284, 286, 0, 608, 510, 1007, 511, 512,
	516, 0, 518, 519, 520, 781, 0, 815, 672, 0,
	681, 0, 677, 744, 0, 746, 0, 672, 0, 75,
	19, 0, 68, 65, 0, 0, 0, 0, 0, 1432,
	1385, 1453, 0, 0, 0, 1434, 0, 0, 0, 0,
	58, 592, 554, 0, 557, 573, 0, 577, 0, 0,
	569, 562, 566, 0, 0, 586, 548, 0, 0, 553,
	611, 613, 1051, 0, 315, 329, 0, 0, 0, 0,
	138, 823, 0, 139, 143, 133, 0, 0, 0, 828,
	0, 825, 830, 0, 153, 0, 0, 128, 129, 884,
	889, 0, 1335, 1337, 1339, 1341, 1343, 0, 1346, 1356,
	1356, 1352, 0, 1347, 0, 1349, 0, 1326, 0, 1147,
	0, 0, 0, 0, 0, 0, 1204, 1205, 0, 0,
	1209, 0, 1211, 1212, 1213, 1215, 0, 0, 0, 1219,
	0, 1258, 1276, 1262, 1265, 0, 1269, 0, 1271, 0,
	626, 0, 1181, 1181, 0, 0, 0, 0, 1181, 0,
	0, 0, 0, 0, 0, 0, 0, 1141, 0, 0,
	701, 592, 0, 0, 0, 635, 633, 634, 265, 253,
	255, 0, 0, 0, 769, 770, 772, 0, 775, 776,
	777, 0, 782, 783, 785, 786, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1497, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 780, 0,
	870, 800, 1457, 369, 0, 0, 822, 0, 0, 0,
	-2, 0, 0, 0, 0, 895, 0, 0, 0, 532,
	536, 23, 620, 0, 673, 420, 0, 421, 472, 429,
	430, 672, 1009, 454, 455, 672, 472, 472, 475, 0,
	486, 0, 878, 346, 1015, 1016, 1017, 0, 0, 1021,
	1028, 869, 1076, 0, 1028, 0, 0, 1030, 1031, 347,
	0, 0, 0, 0, 0, 348, 0, 0, 1458, 0,
	1457, 1457, 0, 0, 0, 0, 1457, 1457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 800, 1457, 0, 0, 0, 369, 807,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 704,
	0, 0, 0, 0, 0, 619, 739, 0, 741, 742,
	716, -2, 0, 685, 721, 1323, 0, 0, 0, 225,
	226, 227, 228, 232, 233, 282, 285, 287, 0, 0,
	0, 524, 670, 675, 682, 745, 747, 91, 678, 670,
	0, 78, 19, 77, 69, 70, 0, 19, 0, 0,
	0, 0, 1442, 1441, 1427, 0, 1428, 1439, 1444, 0,
	1447, 0, 596, 0, 0, 576, 578, 0, 0, 576,
	0, 0, 585, 0, 0, 576, 0, 0, 494, 101,
	335, 0, 0, 0, 0, 0, 514, 0, 827, 135,
	0, 0, 155, 0, 0, 887, 0, 889, 1322, 1348,
	1350, 0, 1357, 1353, 1124, 1132, 1143, 0, 0, 1149,
	1161, 1161, 0, 1152, 1440, 1440, 1155, 1436, 1438, 1436,
	1161, 1161, 0, 92, 0, 0, 1210, 0, 0, 0,
	572, 0, 0, 0, 1179, 1181, 1186, 1182, 1187, 1181,
	1181, 1181, 1181, 1192, 1181, 1181, 1181, 1181, 1181, 1181,
	1181, 1181, 1177, 581, 596, 624, 625, 630, 631, 0,
	257, 0, 0, 774, 0, 0, 0, 787, 0, 803,
	801, 802, 0, 817, 370, 371, 372, 373, 0, 0,
	0, 821, 0, 810, 0, 860, 861, 862, 863, 864,
	-2, 873, 0, 0, 1011, 1011, 1011, 903, 0, 894,
	584, 0, -2, 0, 0, 534, 0, 0, 713, 423,
	672, 447, 0, 463, 672, 672, 472, 490, 0, 345,
	-2, 1020, 1040, 1029, 1040, 1077, 1040, 1040, 869, 0,
	350, 351, 352, 0, 354, 0, 962, 963, 0, 0,
	966, 967, 968, 969, 0, 0, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 997, 998, 999, 1000,
	1001, 1002, 982, 983, 984, 985, 986, 987, 994, 0,
	0, 991, 0, 803, 0, 0, 0, 0, 817, 809,
	0, 811, 812, 0, 0, 555, 672, 275, 0, 708,
	702, 0, 691, 706, 707, 694, 0, 696, 0, 692,
	693, 672, 684, 715, 740, 717, 720, 722, 723, 729,
	0, 0, 0, 0, 213, 0, 389, 219, 1008, 517,
	522, 668, 0, 0, 668, 73, 76, 0, 71, 0,
	0, 0, 0, 63, 61, 1435, 0, 0, 598, 115,
	0, 0, 0, 574, 0, 579, 576, 561, 570, 560,
	567, 568, 587, 576, 552, 551, 1052, 310, 0, 824,
	135, 140, 141, 142, 136, 134, 831, 0, 833, 0,
	885, 889, 0, 0, 1354, 1148, 1133, 1150, 1162, 1163,
	1151, 1134, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1135,
	1206, 0, 1208, 1216, 1217, 0, 1266, 1270, 0, 0,
	0, 1185, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 626, 1178, 0, 598, 636, 637,
	762, 765, 771, 773, 0, 784, 0, 791, 792, 0,
	0, 795, 796, 805, 0, 0, 0, 375, 376, 0,
	0, 0, 388, 384, 385, 386, 366, 816, 807, 0,
	874, 1457, 1457, 1457, 0, 0, 1012, 1013, 0, 0,
	906, 0, 0, 897, 0, 738, 0, 0, 672, 533,
	536, 537, 618, 424, 672, 467, 464, 672, 342, 1042,
	-2, 1055, 1057, 0, 0, 1060, 1061, 0, 0, 0,
	0, 1098, 1067, 0, 0, 1071, 0, 1372, 1373, 0,
	1075, 0, 1041, 0, 1032, 1041, 0, 0, 1040, 0,
	353, 355, 356, 357, 964, 965, 970, 971, 988, 0,
	0, 990, 0, 0, 358, 0, 0, 0, 359, 364,
	808, 0, 813, 814, 626, 0, 0, 688, 709, 0,
	0, 689, 0, 690, 695, 697, 274, 724, 0, 0,
	726, 727, 728, 719, 221, 658, 0, 0, 679, 659,
	0, 19, 0, 0, 66, 1445, 1448, 600, 0, 597,
	116, 0, 0, 0, 0, 575, 559, 550, 137, 132,
	832, 118, 888, 890, 886, 0, 1218, 0, 1181, 1180,
	1174, 0, 600, 0, 790, 788, 804, 794, 0, 818,
	819, 0, 377, 378, 0, 381, 387, 806, 0, 0,
	0, 0, 866, -2, 0, 0, -2, 909, 0, 904,
	0, 896, 0, 899, 672, 672, -2, 530, 535, 0,
	448, 468, 1056, 1058, 1059, 1062, 1063, 1005, 1006, 1064,
	1103, 1104, 1105, 1065, 1100, 1101, 1102, 1066, 0, 0,
	0, 1370, 1371, 1096, 0, 0, 0, 0, 0, 0,
	0, 1026, 995, 996, 989, 992, 993, 363, 360, 361,
	556, 621, 276, 277, 710, 0, 703, 733, 730, 0,
	0, 669, 671, 67, 72, 0, 0, 602, 0, 599,
	0, 593, 595, 126, 564, 88, 109, 0, 1207, 1257,
	1184, 0, 1175, 0, 1169, 1170, 1171, 1176, 602, 0,
	0, 0, 374, 379, 0, 382, 383, 0, 855, 1436,
	0, 875, 876, 877, 916, -2, 959, 1014, 881, 118,
	916, 900, 0, 907, 0, 905, 898, 626, 531, 0,
	0, 1273, 1091, 0, 0, 0, 1033, 1035, 1036, 1037,
	1038, 1039, 1034, 0, 0, 0, 1025, 1027, 1072, 0,
	273, 0, 0, 734, 736, 731, 732, 62, 64, 79,
	0, 601, 117, 0, 80, 0, 106, 0, 119, 120,
	0, 0, 0, 0, 1183, 1172, 0, 0, 0, 0,
	591, 0, 789, 797, 0, 799, 380, 848, 0, 632,
	0, 918, 0, 878, 961, 883, 918, 892, 0, 902,
	0, 911, 0, 908, 621, 1099, 0, 1070, 1079, 1092,
	0, 0, 848, 848, 848, 848, 0, 1073, 711, 725,
	0, 0, 0, 89, 93, 0, 115, 112, 0, 121,
	0, 0, 0, 0, 0, 1164, 1165, 1167, 1166, 1168,
	0, 798, 847, 856, 857, 632, 880, 0, 955, 960,
	882, 901, 910, 0, 913, 529, 1068, 1078, 1080, 1081,
	0, 1093, 1094, 1095, 1097, 1018, 1019, 1022, 1023, 0,
	735, 737, 0, 604, 594, 82, 0, 0, 110, 111,
	113, 0, 122, 0, 124, 125, 0, 778, 849, 1457,
	0, 0, 853, 854, 858, 0, 943, 0, 0, 949,
	0, 956, 912, 1069, 1082, 0, 1083, 0, 0, 0,
	1024, 603, 0, 891, 0, 94, 0, 96, 98, 99,
	1043, 107, 108, 114, 123, 1173, 0, 851, 0, 919,
	0, 921, 0, 0, 0, 0, 0, 953, 0, 1084,
	1086, 1087, 0, 0, 1085, 605, 83, 84, 0, 95,
	0, 0, 850, 852, 0, 923, 0, 944, 0, 0,
	0, 0, 0, 0, 0, 1088, 1090, 1089, 0, 0,
	97, 1044, 920, 917, 0, 955, 945, 0, 947, 0,
	0, 0, 0, 85, 86, 87, 0, 0, 925, 0,
	941, 946, 948, 950, 0, 954, 952, 1045, 924, 0,
	937, 922, 0, 951, 926, -2, 0, 942, 927, -2,
	0, 935, 0, 0, 928, 936, 0, 931, 0, 0,
	0, 930, 0, -2, 938, 0, 0, 932, -2, 0,
	940, 939,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 127, 119, 3,
	67, 68, 124, 122, 137, 123, 136, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 558, 557,
	106, 105, 107, 3, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 560, 118, 561, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 104,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	120, 121, 126, 128, 131, 132, 133, 134, 135, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:710
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:717
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:723
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:737
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:741
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:756
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:760
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:766
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:834
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:840
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:847
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:855
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:861
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:870
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:880
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:888
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:896
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:922
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:962
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:968
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:972
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:997
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1001
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1020
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1060
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1071
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1077
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1081
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1094
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1102
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1106
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1141
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1147
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1156
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1167
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1171
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1177
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1181
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1187
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1197
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1221
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1240
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1244
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1248
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1257
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1272
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1279
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1284
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1291
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1300
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1324
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1328
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1334
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1340
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1358
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1375
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1398
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1406
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1411
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1415
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1421
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1462
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1485
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1517
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1546
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1561
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1565
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1587
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1591
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1649
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1653
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1805
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1858
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1862
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1889
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1895
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1899
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1931
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1939
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1947
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1970
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1993
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2038
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2042
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2046
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2056
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2062
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2066
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2072
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2076
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2087
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2098
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2102
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2106
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2110
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2114
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2118
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2122
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2126
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2130
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2136
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2140
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2148
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2153
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2158
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2164
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2201
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2208
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2230
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2234
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2256
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2260
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2266
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2312
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2334
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2358
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2378
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2386
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2437
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2441
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2447
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2458
		{
			yyVAL.str = "true"
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2459
		{
			yyVAL.str = "false"
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2460
		{
			yyVAL.str = yyDollar[1].str
		}
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2500
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2504
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2510
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2517
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2521
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2525
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2538
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2545
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2552
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2567
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2580
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2607
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2615
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2628
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2634
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2660
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2665
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2669
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2678
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2694
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2734
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2742
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2750
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2760
		{
			yyVAL.item = nil
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2765
		{
			yyVAL.item = nil
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2809
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2813
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2817
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2830
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2836
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2841
		{
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2845
		{
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2860
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2870
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2896
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2902
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2914
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2931
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2951
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2964
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2974
		{
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2976
		{
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2995
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3024
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3030
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3036
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3045
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3077
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3125
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3129
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3134
		{
			yyVAL.str = ""
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3138
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3144
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3172
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3176
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3186
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3192
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3196
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3202
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3208
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3212
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3216
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3226
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3276
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3280
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3332
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3347
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3354
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3365
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3370
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3377
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3406
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3417
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3421
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3427
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3432
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3439
		{
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3441
		{
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3444
		{
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3453
		{
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3457
		{
		}
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3462
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3471
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3478
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3484
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3492
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3506
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3526
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3536
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3540
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3546
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3553
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3559
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3567
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3574
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3581
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3600
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3604
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3613
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3617
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3623
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3632
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3636
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3642
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3646
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3652
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3656
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3662
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3667
		{
		}
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3678
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3682
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3689
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3698
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3704
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3708
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3714
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3718
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3727
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3747
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3754
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3772
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3791
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3808
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3821
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3825
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3830
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3834
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3841
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3846
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3863
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3867
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3871
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3875
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3879
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3885
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3892
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3901
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3905
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3911
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3923
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3932
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3938
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3942
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3946
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3955
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3961
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3967
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3971
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3977
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3982
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3986
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3990
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3995
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3999
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4003
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4009
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4013
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4017
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4031
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4035
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4045
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4055
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4065
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4077
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4085
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4093
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4110
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4126
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4150
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4158
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4166
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4176
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4201
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4205
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4209
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4218
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4222
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4235
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4244
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4253
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4259
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4263
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4269
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4273
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4278
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4282
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4287
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4295
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4309
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4327
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4351
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4360
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4370
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4374
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4384
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4388
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4392
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4396
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4402
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4412
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4416
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4422
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4432
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4438
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4444
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4448
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4452
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4462
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4468
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4472
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4478
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4482
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4488
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4492
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4502
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4515
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4521
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4527
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4551
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4558
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4562
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4568
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4578
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4582
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4586
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4591
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4595
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4599
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4603
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4612
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4616
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4620
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4624
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4629
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4633
		{
			yyVAL.str = yyDollar[1].str
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4637
		{
			yyVAL.str = yyDollar[2].str
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4643
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4649
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4653
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4657
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4665
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4671
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 762:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4714
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4720
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 765:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4726
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4736
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4741
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4747
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4754
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4758
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4764
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4770
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4775
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4779
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4783
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4787
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4806
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4811
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4817
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4824
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4828
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4834
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4840
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4854
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4860
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4866
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4889
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4895
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4905
		{
			yyVAL.str = yyDollar[1].str
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4909
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4915
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4928
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4936
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4942
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4949
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4957
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4963
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4972
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4984
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4995
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4999
		{
			yyVAL.str = yyDollar[2].str
		}
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5005
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5019
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5025
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5031
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5037
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5046
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5055
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5060
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5066
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5180
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5184
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5190
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5200
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5204
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5210
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5220
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5224
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5228
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5237
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5243
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5250
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5256
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5265
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5272
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5281
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5285
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5291
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5305
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5313
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5336
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5359
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5381
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5385
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5389
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5393
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5397
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5403
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5407
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5413
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5418
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5423
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5431
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5435
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5445
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5456
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5460
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5483
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5489
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5493
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5499
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5507
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5522
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5534
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5556
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5563
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5573
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5581
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5592
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5596
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5601
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5605
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5612
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5623
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5636
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5650
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5658
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5665
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5672
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5679
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5686
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5690
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5702
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5709
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5720
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5727
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5738
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5745
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5759
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5766
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5770
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5779
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5793
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5800
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5811
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5824
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5830
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5834
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5840
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5849
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5863
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5869
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5873
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5879
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5886
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5895
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5899
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5908
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5913
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5917
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5922
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5926
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5936
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5940
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5951
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5959
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5967
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5975
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5986
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5995
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6005
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6015
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6019
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6024
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6028
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6037
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6043
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6047
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6051
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6057
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6061
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6065
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6069
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6073
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6077
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6082
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6086
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6090
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6094
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6098
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6102
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6106
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6110
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6118
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6122
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6130
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6134
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6138
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6142
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6146
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6150
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6154
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6158
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6162
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6166
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6170
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6177
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6181
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6187
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6192
		{
			yyVAL.str = ""
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6196
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6200
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6206
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6210
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6218
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6226
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6240
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6244
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6253
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6258
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6264
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6271
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6275
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6281
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6285
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6289
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6295
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6304
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6329
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6343
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6349
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6358
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6367
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6377
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6385
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6391
		{
			yyVAL.str = ""
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6395
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6405
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6411
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6417
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6431
		{
			yyVAL.str = ""
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6435
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6441
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6447
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6451
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6455
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6461
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6465
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6469
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6473
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6479
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6483
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6487
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6496
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6502
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6506
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6512
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6516
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6520
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6524
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6528
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6532
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6545
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6549
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6553
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6557
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6561
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6565
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6578
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6584
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6593
		{
			yyVAL.str = ""
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6597
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6603
		{
			yyVAL.str = ""
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6607
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6613
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6625
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6632
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6639
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6646
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6653
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6662
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6668
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6674
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6678
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6682
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6686
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6690
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6695
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6702
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6706
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6710
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6719
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6724
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6728
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6744
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6762
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6798
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6804
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6808
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6812
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6820
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6824
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6832
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6840
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6844
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6848
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6853
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6866
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6870
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6879
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6883
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6887
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6891
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6895
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6901
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6910
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6914
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6923
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6929
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6933
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6939
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6948
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6960
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6977
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6994
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7007
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7032
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7061
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7076
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7093
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7108
		{
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7114
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7118
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7122
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7128
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7132
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7140
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7144
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7148
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7154
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7161
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7174
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7181
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7190
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7195
		{
			yyVAL.str = ","
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7199
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7211
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7232
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7242
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7260
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7270
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7290
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7310
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7320
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7330
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7340
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7350
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7360
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7370
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7380
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7405
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7413
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7429
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7447
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7456
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7464
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7472
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7480
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7488
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7521
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7532
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7554
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7590
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7602
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7614
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7625
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7633
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7647
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7659
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7667
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7677
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7687
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7695
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7706
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7715
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7724
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7732
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7742
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7750
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7764
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7774
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7793
		{
		}
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7795
		{
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7836
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7847
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7851
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7855
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7861
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7870
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7876
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7880
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7887
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7891
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7895
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7903
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7907
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7911
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7915
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7921
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7925
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7929
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7933
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7937
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7941
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7945
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7949
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7953
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7957
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7965
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7969
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7973
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7977
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7981
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7985
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7989
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7993
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7997
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8001
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8011
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8017
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8021
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8028
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8032
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8036
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8042
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8046
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8050
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8054
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8058
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8062
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8066
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8072
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8076
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8080
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8084
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8090
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8094
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8107
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8112
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8116
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8120
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8124
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8128
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8132
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8146
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8150
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8157
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8168
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8173
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8179
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8191
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8203
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8215
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8228
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8241
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8254
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8267
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8280
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8293
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8319
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8332
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8345
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8360
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8387
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8429
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8477
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8494
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8506
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8526
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8546
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8566
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8595
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8621
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8634
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8646
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8670
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8682
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8694
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8706
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8718
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8730
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8742
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8755
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8768
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8783
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8791
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8800
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8810
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8833
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8838
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8844
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8851
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8855
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8860
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8864
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8870
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8876
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8883
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8890
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8906
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8913
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8930
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8936
		{
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8948
		{
			yyVAL.str = ""
		}
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8952
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const IVFFLAT = 57660
const ZONEMAP = 57661
const LEADING = 57662
const BOTH = 57663
const TRAILING = 57664
const UNKNOWN = 57665
const EXPIRE = 57666
const ACCOUNT = 57667
const ACCOUNTS = 57668
const UNLOCK = 57669
const DAY = 57670
const NEVER = 57671
const PUMP = 57672
const MYSQL_COMPATIBILITY_MODE = 57673
const MODIFY = 57674
const CHANGE = 57675
const SECOND = 57676
const ASCII = 57677
const COALESCE = 57678
const COLLATION = 57679
const HOUR = 57680
const MICROSECOND = 57681
const MINUTE = 57682
const MONTH = 57683
const QUARTER = 57684
const REPEAT = 57685
const REVERSE = 57686
const ROW_COUNT = 57687
const WEEK = 57688
const REVOKE = 57689
const FUNCTION = 57690
const PRIVILEGES = 57691
const TABLESPACE = 57692
const EXECUTE = 57693
const SUPER = 57694
const GRANT = 57695
const OPTION = 57696
const REFERENCES = 57697
const REPLICATION = 57698
const SLAVE = 57699
const CLIENT = 57700
const USAGE = 57701
const RELOAD = 57702
const FILE = 57703
const TEMPORARY = 57704
const ROUTINE = 57705
const EVENT = 57706
const SHUTDOWN = 57707
const NULLX = 57708
const AUTO_INCREMENT = 57709
const APPROXNUM = 57710
const SIGNED = 57711
const UNSIGNED = 57712
const ZEROFILL = 57713
const ENGINES = 57714
const LOW_CARDINALITY = 57715
const AUTOEXTEND_SIZE = 57716
const ADMIN_NAME = 57717
const RANDOM = 57718
const SUSPEND = 57719
const ATTRIBUTE = 57720
const HISTORY = 57721
const REUSE = 57722
const CURRENT = 57723
const OPTIONAL = 57724
const FAILED_LOGIN_ATTEMPTS = 57725
const PASSWORD_LOCK_TIME = 57726
const UNBOUNDED = 57727
const SECONDARY = 57728
const RESTRICTED = 57729
const USER = 57730
const IDENTIFIED = 57731
const CIPHER = 57732
const ISSUER = 57733
const X509 = 57734
const SUBJECT = 57735
const SAN = 57736
const REQUIRE = 57737
const SSL = 57738
const NONE = 57739
const PASSWORD = 57740
const SHARED = 57741
const EXCLUSIVE = 57742
const MAX_QUERIES_PER_HOUR = 57743
const MAX_UPDATES_PER_HOUR = 57744
const MAX_CONNECTIONS_PER_HOUR = 57745
const MAX_USER_CONNECTIONS = 57746
const FORMAT = 57747
const VERBOSE = 57748
const CONNECTION = 57749
const TRIGGERS = 57750
const PROFILES = 57751
const LOAD = 57752
const INLINE = 57753
const INFILE = 57754
const TERMINATED = 57755
const OPTIONALLY = 57756
const ENCLOSED = 57757
const ESCAPED = 57758
const STARTING = 57759
const LINES = 57760
const ROWS = 57761
const IMPORT = 57762
const DISCARD = 57763
const MODUMP = 57764
const OVER = 57765
const PRECEDING = 57766
const FOLLOWING = 57767
const GROUPS = 57768
const DATABASES = 57769
const TABLES = 57770
const SEQUENCES = 57771
const EXTENDED = 57772
const FULL = 57773
const PROCESSLIST = 57774
const FIELDS = 57775
const COLUMNS = 57776
const OPEN = 57777
const ERRORS = 57778
const WARNINGS = 57779
const INDEXES = 57780
const SCHEMAS = 57781
const NODE = 57782
const LOCKS = 57783
const ROLES = 57784
const TABLE_NUMBER = 57785
const COLUMN_NUMBER = 57786
const TABLE_VALUES = 57787
const TABLE_SIZE = 57788
const NAMES = 57789
const GLOBAL = 57790
const PERSIST = 57791
const SESSION = 57792
const ISOLATION = 57793
const LEVEL = 57794
const READ = 57795
const WRITE = 57796
const ONLY = 57797
const REPEATABLE = 57798
const COMMITTED = 57799
const UNCOMMITTED = 57800
const SERIALIZABLE = 57801
const LOCAL = 57802
const EVENTS = 57803
const PLUGINS = 57804
const CURRENT_TIMESTAMP = 57805
const DATABASE = 57806
const CURRENT_TIME = 57807
const LOCALTIME = 57808
const LOCALTIMESTAMP = 57809
const UTC_DATE = 57810
const UTC_TIME = 57811
const UTC_TIMESTAMP = 57812
const REPLACE = 57813
const CONVERT = 57814
const SEPARATOR = 57815
const TIMESTAMPDIFF = 57816
const CURRENT_DATE = 57817
const CURRENT_USER = 57818
const CURRENT_ROLE = 57819
const SECOND_MICROSECOND = 57820
const MINUTE_MICROSECOND = 57821
const MINUTE_SECOND = 57822
const HOUR_MICROSECOND = 57823
const HOUR_SECOND = 57824
const HOUR_MINUTE = 57825
const DAY_MICROSECOND = 57826
const DAY_SECOND = 57827
const DAY_MINUTE = 57828
const DAY_HOUR = 57829
const YEAR_MONTH = 57830
const SQL_TSI_HOUR = 57831
const SQL_TSI_DAY = 57832
const SQL_TSI_WEEK = 57833
const SQL_TSI_MONTH = 57834
const SQL_TSI_QUARTER = 57835
const SQL_TSI_YEAR = 57836
const SQL_TSI_SECOND = 57837
const SQL_TSI_MINUTE = 57838
const RECURSIVE = 57839
const CONFIG = 57840
const DRAINER = 57841
const SOURCE = 57842
const STREAM = 57843
const HEADERS = 57844
const CONNECTOR = 57845
const CONNECTORS = 57846
const DAEMON = 57847
const PAUSE = 57848
const CANCEL = 57849
const TASK = 57850
const RESUME = 57851
const MATCH = 57852
const AGAINST = 57853
const BOOLEAN = 57854
const LANGUAGE = 57855
const WITH = 57856
const QUERY = 57857
const EXPANSION = 57858
const WITHOUT = 57859
const VALIDATION = 57860
const ADDDATE = 57861
const BIT_AND = 57862
const BIT_OR = 57863
const BIT_XOR = 57864
const CAST = 57865
const COUNT = 57866
const APPROX_COUNT = 57867
const APPROX_COUNT_DISTINCT = 57868
const APPROX_PERCENTILE = 57869
const CURDATE = 57870
const CURTIME = 57871
const DATE_ADD = 57872
const DATE_SUB = 57873
const EXTRACT = 57874
const GROUP_CONCAT = 57875
const MAX = 57876
const MID = 57877
const MIN = 57878
const NOW = 57879
const POSITION = 57880
const SESSION_USER = 57881
const STD = 57882
const STDDEV = 57883
const MEDIAN = 57884
const STDDEV_POP = 57885
const STDDEV_SAMP = 57886
const SUBDATE = 57887
const SUBSTR = 57888
const SUBSTRING = 57889
const SUM = 57890
const SYSDATE = 57891
const SYSTEM_USER = 57892
const TRANSLATE = 57893
const TRIM = 57894
const VARIANCE = 57895
const VAR_POP = 57896
const VAR_SAMP = 57897
const AVG = 57898
const RANK = 57899
const ROW_NUMBER = 57900
const DENSE_RANK = 57901
const BIT_CAST = 57902
const NEXTVAL = 57903
const SETVAL = 57904
const CURRVAL = 57905
const LASTVAL = 57906
const ARROW = 57907
const ROW = 57908
const OUTFILE = 57909
const HEADER = 57910
const MAX_FILE_SIZE = 57911
const FORCE_QUOTE = 57912
const PARALLEL = 57913
const UNUSED = 57914
const BINDINGS = 57915
const DO = 57916
const DECLARE = 57917
const LOOP = 57918
const WHILE = 57919
const LEAVE = 57920
const ITERATE = 57921
const UNTIL = 57922
const CALL = 57923
const SPBEGIN = 57924
const BACKEND = 57925
const SERVERS = 57926
const KILL = 57927
const BACKUP = 57928
const FILESYSTEM = 57929
const QUERY_RESULT = 57930

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10540

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	21, 702,
	-2, 683,
	-1, 137,
	235, 1049,
	237, 961,
	-2, 1007,
	-1, 161,
	42, 520,
	237, 520,
	264, 527,
	265, 527,
	455, 520,
	-2, 553,
	-1, 200,
	609, 1771,
	-2, 435,
	-1, 546,
	316, 133,
	428, 133,
	429, 133,
	-2, 1679,
	-1, 610,
	81, 1471,
	-2, 1826,
	-1, 611,
	81, 1489,
	-2, 1797,
	-1, 615,
	81, 1490,
	-2, 1825,
	-1, 641,
	81, 1401,
	-2, 1894,
	-1, 642,
	81, 1402,
	-2, 1893,
	-1, 643,
	81, 1403,
	-2, 1883,
	-1, 644,
	81, 1857,
	-2, 1878,
	-1, 645,
	81, 1858,
	-2, 1879,
	-1, 646,
	81, 1859,
	-2, 1885,
	-1, 647,
	81, 1860,
	-2, 1867,
	-1, 648,
	81, 1861,
	-2, 1876,
	-1, 649,
	81, 1862,
	-2, 1886,
	-1, 650,
	81, 1863,
	-2, 1887,
	-1, 651,
	81, 1864,
	-2, 1892,
	-1, 652,
	81, 1865,
	-2, 1897,
	-1, 653,
	81, 1866,
	-2, 1898,
	-1, 655,
	81, 1468,
	-2, 1665,
	-1, 659,
	81, 1473,
	-2, 1680,
	-1, 662,
	81, 1477,
	-2, 1698,
	-1, 666,
	81, 1481,
	-2, 1740,
	-1, 667,
	81, 1482,
	-2, 1821,
	-1, 675,
	81, 1492,
	-2, 1806,
	-1, 676,
	81, 1493,
	-2, 1850,
	-1, 677,
	81, 1494,
	-2, 1816,
	-1, 678,
	81, 1495,
	-2, 1840,
	-1, 689,
	81, 1379,
	-2, 1888,
	-1, 690,
	81, 1380,
	-2, 1889,
	-1, 691,
	81, 1381,
	-2, 1890,
	-1, 695,
	21, 703,
	-2, 666,
	-1, 775,
	450, 553,
	451, 553,
	-2, 521,
	-1, 821,
	122, 1665,
	133, 1665,
	153, 1665,
	-2, 1639,
	-1, 931,
	21, 703,
	-2, 666,
	-1, 1031,
	21, 702,
	-2, 1276,
	-1, 1411,
	81, 1539,
	-2, 1823,
	-1, 1412,
	81, 1540,
	-2, 1824,
	-1, 1551,
	82, 852,
	-2, 858,
	-1, 1940,
	82, 1625,
	154, 1625,
	-2, 1808,
	-1, 1941,
	82, 1625,
	154, 1625,
	-2, 1807,
	-1, 1942,
	82, 1601,
	154, 1601,
	-2, 1794,
	-1, 1943,
	82, 1602,
	154, 1602,
	-2, 1799,
	-1, 1944,
	82, 1603,
	154, 1603,
	-2, 1728,
	-1, 1945,
	82, 1604,
	154, 1604,
	-2, 1722,
	-1, 1946,
	82, 1605,
	154, 1605,
	-2, 1655,
	-1, 1947,
	82, 1606,
	154, 1606,
	-2, 1796,
	-1, 1948,
	82, 1607,
	154, 1607,
	-2, 1726,
	-1, 1949,
	82, 1608,
	154, 1608,
	-2, 1721,
	-1, 1950,
	82, 1609,
	154, 1609,
	-2, 1712,
	-1, 1951,
	82, 1625,
	154, 1625,
	-2, 1713,
	-1, 1952,
	82, 1625,
	154, 1625,
	-2, 1714,
	-1, 1954,
	82, 1614,
	154, 1614,
	-2, 1840,
	-1, 1955,
	82, 1592,
	154, 1592,
	-2, 1826,
	-1, 1956,
	82, 1623,
	154, 1623,
	-2, 1797,
	-1, 1957,
	82, 1623,
	154, 1623,
	-2, 1825,
	-1, 1958,
	82, 1623,
	154, 1623,
	-2, 1681,
	-1, 1959,
	82, 1621,
	154, 1621,
	-2, 1816,
	-1, 1960,
	82, 1618,
	154, 1618,
	-2, 1703,
	-1, 1961,
	81, 1573,
	82, 1573,
	154, 1573,
	386, 1573,
	387, 1573,
	388, 1573,
	-2, 1654,
	-1, 1962,
	81, 1574,
	82, 1574,
	154, 1574,
	386, 1574,
	387, 1574,
	388, 1574,
	-2, 1656,
	-1, 1963,
	81, 1577,
	82, 1577,
	154, 1577,
	386, 1577,
	387, 1577,
	388, 1577,
	-2, 1798,
	-1, 1964,
	81, 1579,
	82, 1579,
	154, 1579,
	386, 1579,
	387, 1579,
	388, 1579,
	-2, 1780,
	-1, 1965,
	81, 1581,
	82, 1581,
	154, 1581,
	386, 1581,
	387, 1581,
	388, 1581,
	-2, 1727,
	-1, 1966,
	81, 1583,
	82, 1583,
	154, 1583,
	386, 1583,
	387, 1583,
	388, 1583,
	-2, 1708,
	-1, 1967,
	81, 1584,
	82, 1584,
	154, 1584,
	386, 1584,
	387, 1584,
	388, 1584,
	-2, 1709,
	-1, 1968,
	81, 1586,
	82, 1586,
	154, 1586,
	386, 1586,
	387, 1586,
	388, 1586,
	-2, 1653,
	-1, 1969,
	82, 1628,
	154, 1628,
	386, 1628,
	387, 1628,
	388, 1628,
	-2, 1686,
	-1, 1970,
	82, 1628,
	154, 1628,
	386, 1628,
	387, 1628,
	388, 1628,
	-2, 1699,
	-1, 1971,
	82, 1631,
	154, 1631,
	386, 1631,
	387, 1631,
	388, 1631,
	-2, 1682,
	-1, 1972,
	82, 1631,
	154, 1631,
	386, 1631,
	387, 1631,
	388, 1631,
	-2, 1743,
	-1, 1973,
	82, 1628,
	154, 1628,
	386, 1628,
	387, 1628,
	388, 1628,
	-2, 1764,
	-1, 1991,
	105, 997,
	149, 997,
	188, 997,
	191, 997,
	277, 997,
	-2, 990,
	-1, 2130,
	21, 702,
	-2, 796,
	-1, 2333,
	105, 997,
	149, 997,
	188, 997,
	191, 997,
	277, 997,
	-2, 991,
	-1, 2346,
	79, 612,
	154, 612,
	-2, 1162,
	-1, 2687,
	191, 997,
	301, 1244,
	-2, 1216,
	-1, 2829,
	105, 997,
	149, 997,
	188, 997,
	191, 997,
	-2, 1105,
	-1, 2831,
	105, 997,
	149, 997,
	188, 997,
	191, 997,
	-2, 1105,
	-1, 2841,
	79, 612,
	154, 612,
	-2, 1163,
	-1, 2850,
	191, 997,
	301, 1244,
	-2, 1217,
	-1, 2980,
	105, 997,
	149, 997,
	188, 997,
	191, 997,
	-2, 1106,
	-1, 3353,
	82, 1067,
	154, 1067,
	-2, 997,
	-1, 3357,
	82, 1067,
	154, 1067,
	-2, 997,
	-1, 3371,
	82, 1071,
	154, 1071,
	-2, 997,
	-1, 3376,
	82, 1072,
	154, 1072,
	-2, 997,
}

const yyPrivate = 57344

const yyLast = 39251

var yyAct = [...]int{
	577, 1632, 3357, 3356, 3365, 3336, 191, 1391, 3228, 555,
	557, 3289, 579, 550, 3254, 3307, 3236, 2705, 3237, 2930,
	2925, 3146, 565, 1915, 3021, 3160, 2864, 3137, 1244, 2768,
	1184, 2968, 3164, 2965, 1064, 3057, 607, 696, 2967, 2769,
	459, 3095, 1329, 2928, 1319, 559, 2304, 3047, 820, 3147,
	469, 2800, 474, 474, 2367, 3149, 1585, 2816, 474, 490,
	499, 2979, 2986, 499, 2972, 2032, 1394, 2658, 2619, 2944,
	2920, 2464, 2349, 2851, 2982, 2465, 1721, 1718, 2647, 2702,
	2805, 2447, 2387, 176, 2832, 2463, 2684, 1686, 2766, 2457,
	1387, 2691, 1788, 2124, 1694, 1819, 2754, 2617, 2035, 2486,
	2737, 2460, 2323, 2628, 504, 2631, 2626, 2620, 2690, 2664,
	2334, 1736, 1928, 1136, 548, 925, 2001, 2108, 1936, 1919,
	510, 2523, 1315, 554, 1815, 1797, 1796, 1237, 1762, 1531,
	2172, 2506, 1938, 1789, 1714, 1918, 2125, 2561, 1689, 1814,
	751, 826, 2113, 2307, 2312, 2369, 473, 473, 2341, 2033,
	1614, 1624, 481, 1687, 187, 8, 6, 549, 186, 7,
	36, 2000, 1157, 1562, 1539, 459, 877, 1587, 2235, 556,
	2189, 1385, 1848, 1323, 1253, 2152, 1282, 2265, 2028, 1328,
	1816, 116, 35, 1934, 558, 1223, 2622, 468, 1308, 1982,
	2621, 191, 1441, 191, 1826, 868, 869, 1320, 1425, 566,
	1596, 1597, 862, 863, 1173, 824, 547, 867, 942, 1376,
	783, 2266, 26, 1289, 15, 1792, 1795, 486, 1103, 496,
	1159, 1192, 1752, 1384, 1222, 13, 1778, 813, 2132, 1561,
	693, 55, 1448, 750, 483, 513, 14, 1220, 1447, 32,
	23, 1390, 16, 177, 512, 549, 748, 1129, 1281, 10,
	1169, 1185, 173, 732, 167, 728, 498, 1065, 1823, 695,
	865, 3089, 1833, 2819, 2761, 770, 2291, 2224, 2291, 2291,
	2175, 495, 2178, 491, 864, 814, 866, 2176, 1544, 861,
	2173, 1292, 1296, 860, 493, 861, 175, 470, 1205, 1120,
	1193, 861, 1294, 2918, 2519, 494, 2517, 1767, 492, 3053,
	3048, 2921, 2062, 1000, 1001, 1002, 999, 2767, 1535, 1059,
	479, 1000, 1001, 1002, 999, 458, 3151, 1791, 2854, 502,
	694, 1468, 174, 51, 163, 138, 2070, 3106, 704, 2303,
	8, 2954, 859, 963, 7, 2210, 2305, 3219, 174, 51,
	163, 138, 174, 51, 163, 138, 2945, 174, 2218, 174,
	827, 829, 1820, 174, 174, 1993, 2866, 174, 1121, 174,
	2943, 174, 3183, 1468, 1263, 1343, 1262, 1336, 1261, 2857,
	833, 3107, 831, 832, 1557, 509, 1133, 508, 1986, 2852,
	2585, 1149, 2150, 997, 2874, 2875, 3078, 697, 2493, 2494,
	2853, 168, 2151, 2138, 2492, 1340, 2137, 1333, 1698, 2139,
	830, 2538, 2531, 2190, 3272, 115, 1731, 168, 792, 115,
	1831, 168, 1699, 1700, 1545, 1546, 1342, 1361, 1335, 1122,
	1181, 1377, 168, 168, 1381, 1610, 168, 2858, 168, 978,
	168, 684, 979, 683, 685, 686, 705, 687, 688, 1224,
	2309, 1226, 1393, 802, 1190, 1191, 3240, 3241, 1380, 971,
	2310, 1201, 973, 1188, 1202, 3270, 995, 1187, 1190, 1191,
	981, 823, 822, 990, 2939, 3154, 3214, 3153, 3213, 3152,
	3212, 3154, 3153, 474, 3152, 1906, 3258, 3259, 2770, 1464,
	974, 3139, 3139, 474, 935, 1461, 3055, 2524, 3142, 1463,
	1460, 1462, 1466, 1467, 3218, 3051, 2770, 1465, 2308, 1397,
	2205, 499, 499, 1835, 474, 3058, 3059, 3060, 3061, 2525,
	936, 2526, 2403, 3157, 2779, 1715, 945, 930, 932, 1705,
	2873, 1464, 2036, 1372, 2806, 1295, 1293, 1461, 1382, 1827,
	2813, 1463, 1460, 1462, 1466, 1467, 976, 2959, 934, 1465,
	1204, 2315, 2102, 1980, 2642, 1775, 2640, 2862, 739, 1302,
	1301, 1379, 2294, 2919, 2632, 825, 967, 137, 2215, 172,
	1709, 993, 994, 3084, 2551, 1003, 2068, 927, 2876, 2859,
	2863, 2861, 2860, 3216, 1032, 3221, 3222, 933, 2549, 161,
	945, 969, 1041, 992, 966, 798, 796, 2518, 797, 2451,
	871, 929, 2636, 972, 975, 3239, 3087, 2938, 954, 977,
	2105, 2637, 2638, 1033, 2940, 1048, 2104, 2868, 2869, 935,
	2956, 1396, 1395, 543, 2109, 1179, 545, 2639, 2888, 968,
	3265, 544, 931, 2656, 3070, 2703, 2704, 3071, 958, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1471, 1472, 1473, 1474, 1475, 1476, 1469, 1470, 496, 496,
	2876, 1214, 1729, 1730, 1068, 1135, 1134, 3274, 1832, 3111,
	2342, 2665, 2855, 1069, 1837, 1839, 1840, 1378, 2867, 988,
	989, 827, 829, 1119, 803, 980, 3103, 3175, 3170, 501,
	3073, 500, 1471, 1472, 1473, 1474, 1475, 1476, 1469, 1470,
	2881, 2456, 799, 1988, 3165, 970, 3350, 1203, 3366, 3298,
	495, 495, 491, 491, 2634, 938, 939, 947, 946, 3269,
	1821, 3072, 1821, 493, 493, 3088, 1127, 469, 1130, 3230,
	2782, 830, 2555, 2290, 494, 494, 3305, 492, 492, 1821,
	1100, 1035, 1036, 1037, 1038, 3226, 3227, 497, 3230, 1168,
	2891, 955, 827, 829, 3156, 1403, 1406, 1407, 3012, 940,
	751, 861, 2707, 497, 3330, 801, 1404, 951, 952, 861,
	2431, 741, 3105, 742, 861, 2079, 861, 1039, 861, 2078,
	861, 947, 946, 1190, 1191, 2931, 949, 3220, 2038, 2305,
	2321, 1233, 1834, 1822, 3310, 2154, 2174, 3007, 983, 1232,
	1189, 984, 830, 956, 1297, 1166, 2051, 2872, 52, 474,
	1186, 1216, 2031, 2053, 3079, 2099, 2100, 459, 459, 1183,
	1182, 694, 1165, 3001, 52, 3112, 459, 459, 1164, 986,
	1248, 1248, 3367, 474, 1190, 1191, 2327, 2328, 2329, 2330,
	2331, 800, 3104, 1180, 3361, 1138, 1139, 1140, 1141, 3337,
	1143, 139, 2955, 1716, 2314, 1148, 499, 1130, 469, 1250,
	2643, 1285, 1285, 169, 170, 1255, 171, 139, 2633, 2219,
	2052, 139, 191, 2871, 1284, 1284, 139, 825, 139, 3085,
	2552, 459, 139, 139, 1077, 1078, 139, 3096, 139, 926,
	139, 2602, 3275, 957, 2833, 3373, 2404, 1849, 2405, 2406,
	2031, 2916, 1137, 1212, 508, 982, 2960, 3136, 2635, 1221,
	2318, 2319, 1706, 1838, 1128, 2699, 1373, 2703, 2704, 2211,
	1246, 1246, 2048, 2142, 2037, 2317, 963, 1254, 2066, 2039,
	3311, 1303, 1327, 1824, 1330, 1142, 3066, 2503, 2504, 1338,
	3148, 2488, 2490, 987, 3022, 3023, 3024, 3026, 3027, 3025,
	2554, 2041, 2706, 1708, 1131, 1242, 1243, 1147, 1105, 1359,
	1107, 1146, 1145, 503, 2612, 2700, 1836, 3014, 985, 793,
	2401, 1344, 3360, 1248, 1154, 1248, 935, 2293, 1175, 1176,
	695, 1548, 1132, 2040, 1162, 745, 746, 747, 1922, 1167,
	2563, 2562, 1924, 1923, 1405, 1125, 1177, 3070, 1123, 1124,
	3071, 852, 857, 858, 1195, 1196, 1156, 1198, 1199, 1200,
	1549, 962, 1215, 2065, 1921, 3065, 2432, 2434, 2435, 2436,
	2433, 740, 1398, 1399, 1400, 1401, 1402, 3008, 3009, 707,
	1392, 1317, 1318, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1277, 1206, 1207, 1194, 1436,
	1437, 1197, 795, 3073, 1231, 794, 1446, 2422, 2423, 743,
	3308, 3309, 1170, 1174, 1174, 1174, 1443, 1444, 1445, 3003,
	1495, 3372, 1547, 3002, 1479, 2091, 708, 1306, 2987, 1309,
	1310, 2042, 1489, 1588, 3072, 3379, 1170, 1170, 1256, 711,
	1311, 1312, 1228, 1230, 1504, 479, 1334, 1984, 3378, 1389,
	1341, 1240, 1241, 1325, 1276, 1269, 2489, 1485, 1486, 1487,
	1286, 496, 1275, 1881, 793, 1287, 1880, 3313, 998, 1931,
	1501, 1368, 1588, 1502, 3369, 1322, 1533, 2047, 1326, 2734,
	1537, 2045, 3334, 1540, 1354, 1355, 1511, 1512, 2122, 1408,
	710, 1529, 1932, 1933, 713, 712, 963, 1559, 1370, 1248,
	1564, 1565, 1171, 1567, 1568, 474, 1298, 998, 2654, 474,
	1345, 3351, 1248, 495, 2701, 491, 751, 830, 1350, 1586,
	998, 830, 3346, 1367, 1248, 1364, 493, 2192, 698, 2421,
	1216, 2347, 3340, 695, 3339, 490, 1363, 494, 998, 1532,
	492, 854, 855, 856, 1346, 1494, 3370, 795, 2730, 2797,
	794, 1366, 3317, 1365, 1609, 1755, 3291, 1434, 1435, 1388,
	1362, 1983, 1615, 1615, 1386, 1216, 1383, 1216, 1216, 2670,
	2123, 474, 474, 804, 1559, 1559, 1358, 1613, 1248, 1683,
	1684, 1696, 1558, 1829, 1357, 1427, 2781, 1909, 2210, 1477,
	1478, 3248, 1481, 2709, 3347, 459, 3242, 1248, 2123, 1569,
	1496, 2299, 3193, 1573, 1829, 1554, 1829, 1555, 1556, 2734,
	3130, 1533, 2123, 1503, 2296, 1505, 1533, 1533, 1172, 1570,
	1571, 1572, 1566, 3129, 1829, 474, 1559, 1248, 3292, 1741,
	3125, 474, 474, 474, 1746, 1747, 2655, 2197, 3124, 928,
	1750, 1751, 2038, 2041, 2348, 1757, 2154, 1634, 1820, 3066,
	1480, 1697, 191, 3067, 1375, 191, 191, 698, 191, 1678,
	1679, 3123, 3122, 3249, 1765, 1621, 1622, 1768, 3092, 2348,
	1771, 998, 1506, 1773, 3092, 2026, 1914, 1617, 3091, 1885,
	1724, 1725, 3131, 1811, 1536, 1000, 1001, 1002, 999, 1727,
	1589, 1590, 1530, 1753, 1155, 2005, 1495, 1495, 1799, 2949,
	2895, 1439, 3092, 1495, 1495, 1602, 1234, 3293, 1806, 1913,
	3092, 1738, 2825, 1616, 1710, 2718, 1702, 2483, 1704, 1737,
	1608, 1717, 2272, 1611, 1612, 1737, 1737, 1737, 1722, 1723,
	1860, 2583, 1586, 3092, 3092, 1766, 1248, 1818, 1769, 1770,
	1563, 1772, 1743, 1744, 1745, 2264, 1594, 1595, 1740, 1583,
	3092, 1582, 2225, 1578, 1607, 1598, 2844, 1600, 1601, 1000,
	1001, 1002, 999, 1604, 1605, 1591, 1618, 1619, 1620, 1599,
	1606, 2950, 2154, 2042, 2208, 1593, 2201, 2199, 2037, 2031,
	2036, 2194, 2034, 2039, 2826, 2187, 2185, 2719, 1812, 2123,
	1374, 2183, 963, 1800, 998, 1000, 1001, 1002, 999, 2181,
	1101, 2004, 1846, 1847, 1910, 1859, 2671, 1682, 1891, 1685,
	960, 1890, 1701, 1852, 1703, 1170, 1856, 998, 1879, 1563,
	2508, 1794, 1711, 2812, 998, 2350, 2213, 2212, 1794, 1603,
	1870, 1842, 1869, 1868, 1732, 1828, 1351, 2040, 2204, 2021,
	1174, 1912, 1876, 1861, 1810, 3036, 2005, 3326, 2195, 2200,
	1739, 1760, 2675, 2195, 1553, 1347, 1867, 2188, 2186, 1045,
	948, 928, 1763, 2182, 1874, 2893, 961, 2134, 1386, 1761,
	1015, 2182, 496, 2005, 923, 2546, 1909, 827, 829, 1726,
	998, 1482, 1887, 998, 827, 829, 961, 1892, 1893, 1894,
	998, 921, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	709, 1780, 998, 2666, 998, 998, 3171, 1829, 1352, 1236,
	1886, 548, 1888, 935, 1974, 474, 474, 474, 1801, 1895,
	1803, 1809, 2988, 1804, 495, 1805, 491, 830, 1171, 1808,
	3314, 474, 474, 474, 830, 1484, 1483, 493, 2836, 928,
	2834, 1484, 1483, 2002, 1813, 1160, 1238, 2063, 494, 1161,
	3172, 492, 3090, 2009, 1216, 3062, 3005, 1239, 3004, 2818,
	1844, 1845, 2006, 2735, 2014, 2728, 2989, 1939, 1850, 1841,
	827, 829, 1018, 1019, 1020, 1021, 1022, 1015, 1216, 2667,
	2723, 2720, 2837, 2649, 2835, 2453, 580, 590, 1843, 1427,
	2325, 2292, 2058, 1854, 2223, 581, 2198, 589, 582, 586,
	585, 583, 584, 2144, 2242, 1764, 1151, 1150, 1235, 1975,
	1976, 1977, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1015,
	830, 2173, 937, 2668, 714, 1994, 1995, 1996, 2759, 1442,
	2232, 1978, 920, 916, 917, 918, 919, 2167, 2247, 2510,
	2246, 2245, 2243, 2064, 1172, 1517, 1000, 1001, 1002, 999,
	587, 1510, 2127, 2127, 1696, 2127, 1560, 2762, 2013, 3211,
	1014, 1013, 1023, 1024, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1015, 3017, 459, 459, 1433, 1533, 999, 1533, 1883,
	3016, 935, 588, 1000, 1001, 1002, 999, 1248, 474, 1002,
	999, 1430, 1432, 1429, 2177, 1431, 1533, 1533, 1905, 1907,
	1908, 2527, 1442, 474, 1855, 1290, 2244, 1764, 2393, 935,
	469, 2392, 2375, 2373, 1285, 2996, 1696, 1925, 1985, 2162,
	3355, 2164, 2011, 2012, 2957, 191, 1068, 1284, 1000, 1001,
	1002, 999, 2015, 2016, 1047, 1069, 3343, 2760, 2962, 2963,
	2140, 2131, 2141, 2324, 3299, 2025, 2129, 1046, 2133, 1000,
	1001, 1002, 999, 1499, 2010, 3294, 3232, 3329, 2234, 2810,
	2145, 2146, 3202, 1939, 2443, 2043, 2044, 1500, 2049, 2576,
	3173, 2206, 2030, 3115, 1818, 2441, 2029, 2148, 2020, 2022,
	2958, 1248, 1254, 1248, 3108, 1248, 3264, 2017, 3049, 2018,
	935, 2991, 2019, 1000, 1001, 1002, 999, 1737, 1000, 1001,
	1002, 999, 2169, 2161, 1916, 1917, 1872, 1291, 2168, 1000,
	1001, 1002, 999, 2439, 2156, 2811, 2990, 1290, 3328, 2428,
	2442, 1248, 2251, 1000, 1001, 1002, 999, 2838, 2575, 2233,
	2809, 2440, 2106, 2641, 2542, 827, 829, 2258, 2252, 2253,
	2248, 2249, 1248, 2135, 2220, 2522, 2255, 2256, 2521, 2250,
	2426, 2425, 2424, 2260, 1000, 1001, 1002, 999, 2416, 2261,
	2410, 2409, 2149, 2408, 1174, 2407, 1783, 3233, 1782, 2438,
	2259, 1781, 1871, 2216, 1777, 2427, 1000, 1001, 1002, 999,
	2159, 2926, 1776, 1533, 2262, 830, 2285, 2286, 1540, 2166,
	2160, 935, 2157, 1000, 1001, 1002, 999, 2158, 1000, 1001,
	1002, 999, 2069, 1735, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 1246, 1734, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2217, 2092, 2093, 2094, 2095, 2096,
	2222, 2097, 1246, 1733, 1348, 2230, 3163, 1118, 2817, 474,
	2203, 2458, 2627, 3260, 1248, 2297, 2283, 2322, 1228, 1230,
	2236, 2236, 2214, 1559, 2209, 3215, 2207, 3159, 2966, 3145,
	2346, 3134, 1000, 1001, 1002, 999, 2352, 1023, 1024, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1015, 2226, 2227, 2229,
	543, 3119, 2361, 545, 3114, 3113, 2241, 2239, 544, 935,
	3086, 3050, 2998, 2975, 2961, 2924, 2922, 2372, 2902, 2899,
	2897, 2448, 2808, 2807, 935, 935, 935, 1615, 2804, 3180,
	935, 2787, 2383, 2384, 2385, 935, 2729, 2389, 2390, 2725,
	2391, 2716, 1386, 2715, 2650, 2609, 2335, 2608, 2267, 2268,
	2607, 1920, 2300, 2306, 2273, 2556, 2553, 2520, 2336, 2287,
	1317, 1318, 2284, 2127, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1004, 2933, 2497, 2344, 2437, 2429, 2444, 2419, 2378,
	2379, 1634, 2417, 2413, 2382, 459, 2412, 2411, 1911, 2388,
	1559, 935, 1696, 1696, 1696, 1696, 640, 639, 1000, 1001,
	1002, 999, 1785, 935, 1696, 1779, 1543, 2127, 1542, 2353,
	1310, 2343, 1349, 2370, 1076, 1072, 2366, 2370, 2301, 2302,
	1311, 1312, 1071, 1248, 924, 706, 1325, 2320, 3176, 2371,
	3063, 2377, 2953, 2831, 2830, 474, 474, 2363, 8, 2829,
	2351, 2345, 7, 2796, 2932, 2466, 2786, 2774, 1322, 2765,
	191, 1326, 2362, 2764, 2753, 191, 2752, 2466, 2365, 2676,
	1858, 2355, 2368, 2581, 2374, 2357, 2574, 2514, 2566, 2516,
	1000, 1001, 1002, 999, 2479, 2885, 1495, 2381, 1495, 2565,
	2784, 2537, 2560, 2505, 2298, 2541, 2579, 1533, 2295, 2184,
	2180, 1248, 1533, 2179, 2548, 1896, 1889, 1884, 507, 2418,
	1882, 1000, 1001, 1002, 999, 1563, 1000, 1001, 1002, 999,
	1878, 2354, 1000, 1001, 1002, 999, 2257, 1877, 1875, 2358,
	2359, 174, 2360, 163, 138, 2449, 1866, 1863, 2559, 2500,
	2501, 2454, 1862, 2511, 1000, 1001, 1002, 999, 2515, 1784,
	1528, 1527, 2480, 2482, 2478, 2467, 2468, 2469, 2470, 1526,
	1532, 2580, 695, 1498, 1497, 2536, 1488, 174, 1260, 2498,
	2578, 1258, 2495, 2311, 3368, 3325, 3319, 2481, 3306, 2534,
	2569, 2577, 2571, 3303, 3301, 2540, 3201, 1066, 2509, 2512,
	935, 3280, 2513, 3132, 935, 2356, 1000, 1001, 1002, 999,
	168, 3121, 2630, 2550, 2491, 3192, 2281, 1000, 1001, 1002,
	999, 2533, 2645, 2530, 2535, 3116, 2528, 474, 1000, 1001,
	1002, 999, 2545, 1305, 3031, 2544, 3190, 2280, 2659, 935,
	935, 935, 1000, 1001, 1002, 999, 168, 3015, 1696, 2002,
	3011, 2674, 2558, 2910, 1939, 2532, 2908, 2678, 2883, 2882,
	2557, 2879, 2539, 1000, 1001, 1002, 999, 2399, 2400, 2570,
	2689, 2878, 2692, 2820, 2692, 2692, 2564, 2625, 2624, 935,
	2452, 2414, 2415, 1316, 2653, 1864, 2572, 2573, 2279, 1307,
	2696, 1158, 2445, 2711, 2376, 2744, 2278, 2340, 2339, 2338,
	1248, 1248, 2337, 2708, 1321, 2450, 2603, 1324, 2335, 2610,
	1313, 2606, 2710, 2282, 1000, 1001, 1002, 999, 2613, 2193,
	2143, 2651, 1000, 1001, 1002, 999, 830, 2098, 2712, 2713,
	2611, 2567, 2568, 830, 2003, 2672, 2661, 2662, 2663, 1428,
	2646, 2586, 2587, 168, 2652, 1748, 474, 2588, 2589, 2590,
	2591, 2630, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2669, 2688, 1559, 1559, 2697, 2673, 1552, 3354, 2277, 1551,
	1371, 1337, 2682, 1314, 3188, 3344, 2276, 1000, 1001, 1002,
	999, 1102, 2693, 2694, 2275, 1099, 2698, 592, 117, 2695,
	1246, 1246, 1857, 117, 1000, 1001, 1002, 999, 1098, 1097,
	2687, 1096, 1000, 1001, 1002, 999, 1095, 1094, 1093, 2251,
	1000, 1001, 1002, 999, 1092, 1091, 1090, 1089, 2763, 1088,
	3186, 2274, 2677, 1087, 1086, 2683, 2679, 2680, 1014, 1013,
	1023, 1024, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1015,
	1737, 1085, 1084, 480, 2880, 2271, 117, 1000, 1001, 1002,
	999, 1083, 1082, 1081, 2722, 474, 2721, 2717, 2727, 1080,
	2726, 1079, 1075, 2731, 2732, 2270, 1000, 1001, 1002, 999,
	2742, 1000, 1001, 1002, 999, 1074, 1073, 1070, 1063, 1062,
	2724, 2681, 1060, 1059, 1058, 2746, 1057, 2749, 2750, 2751,
	2783, 1000, 1001, 1002, 999, 1056, 830, 2785, 1055, 1054,
	2008, 2269, 1507, 1508, 1509, 1053, 2758, 1513, 1514, 1515,
	1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1052,
	1051, 1050, 1049, 1044, 2775, 2801, 935, 1000, 1001, 1002,
	999, 2776, 2733, 1043, 1042, 965, 922, 1990, 2788, 2263,
	953, 2778, 2738, 2739, 2743, 3278, 3238, 2745, 2254, 2780,
	2741, 2472, 2326, 2155, 1787, 2231, 828, 2824, 2471, 964,
	2793, 2202, 1438, 117, 2777, 1000, 1001, 1002, 999, 2196,
	2127, 1696, 2841, 1152, 1000, 1001, 1002, 999, 117, 471,
	117, 1000, 1001, 1002, 999, 1580, 1581, 935, 1000, 1001,
	1002, 999, 2790, 2475, 2473, 102, 2689, 2648, 2476, 2474,
	935, 54, 699, 700, 701, 702, 2477, 698, 2119, 2120,
	935, 1575, 1576, 1577, 53, 1248, 2604, 2605, 2115, 2118,
	2119, 2120, 2116, 2803, 2117, 2121, 2912, 2685, 2289, 2686,
	2067, 1559, 475, 2913, 2890, 935, 2815, 1670, 1533, 2614,
	1299, 2848, 2191, 2894, 2221, 2792, 1104, 2843, 1331, 1533,
	3155, 476, 2907, 2877, 2887, 2909, 1981, 477, 2840, 1916,
	1917, 191, 2870, 2839, 2388, 1749, 959, 2847, 2623, 2914,
	478, 2904, 2616, 2615, 935, 2364, 2794, 2795, 1259, 2024,
	2889, 1998, 2911, 1584, 2798, 2886, 2395, 2884, 1550, 2466,
	1484, 1483, 2892, 2396, 2397, 2398, 1116, 1117, 935, 2915,
	3251, 2896, 2900, 2898, 3118, 1246, 2901, 1114, 1115, 2714,
	2905, 2107, 2906, 1112, 1113, 2103, 2903, 1110, 1111, 1681,
	1209, 935, 1248, 1248, 1208, 991, 1106, 2659, 2466, 2748,
	2153, 2981, 2941, 2981, 1807, 1163, 1144, 3320, 3224, 3208,
	2842, 3206, 3166, 2947, 2917, 2927, 2845, 830, 830, 2846,
	2971, 3144, 3143, 3141, 3133, 830, 3044, 3043, 2923, 1248,
	2789, 2942, 2772, 2771, 2997, 2946, 2948, 2756, 2054, 1109,
	2755, 2507, 1588, 2977, 2978, 2969, 2543, 474, 1992, 935,
	935, 3282, 3281, 935, 935, 1865, 950, 1178, 3281, 3282,
	3013, 2773, 2499, 2985, 2976, 698, 849, 2984, 3034, 178,
	3, 62, 2110, 3033, 2, 1225, 3028, 2136, 1728, 1586,
	2994, 3041, 1246, 2973, 2843, 1252, 2877, 3019, 3020, 3045,
	3046, 3029, 3030, 2999, 2995, 2870, 699, 700, 701, 702,
	1, 698, 1541, 2969, 2969, 3038, 703, 2969, 2969, 2115,
	2118, 2119, 2120, 2116, 3076, 2117, 2121, 2484, 2485, 2973,
	2747, 2801, 2487, 1825, 2455, 2101, 2821, 2822, 2823, 3037,
	3069, 1979, 2827, 2828, 2934, 3039, 2644, 1153, 744, 1490,
	1356, 3018, 851, 944, 1353, 117, 117, 828, 943, 941,
	1440, 594, 3098, 1790, 3094, 2446, 2420, 3064, 3040, 3250,
	3074, 3288, 3200, 3068, 3253, 1369, 578, 3081, 3082, 3135,
	3083, 3054, 3080, 3204, 3056, 2929, 1830, 2992, 2993, 996,
	2529, 766, 631, 605, 3093, 1210, 1211, 1061, 1213, 3323,
	1217, 1218, 1219, 1339, 1332, 2584, 853, 3101, 3100, 604,
	3109, 3099, 935, 2814, 2316, 2502, 1248, 844, 839, 834,
	838, 842, 3102, 850, 767, 1774, 3052, 1300, 1031, 1304,
	3117, 2023, 3110, 1264, 1265, 1266, 1267, 1268, 3364, 1270,
	1271, 1272, 1273, 1274, 3127, 847, 3353, 1279, 1280, 837,
	3126, 3335, 1014, 1013, 1023, 1024, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1015, 3318, 3229, 2969, 1048, 3150, 3349,
	3268, 3304, 3140, 935, 2937, 3138, 2935, 2936, 3297, 3167,
	3225, 514, 1707, 457, 2951, 2952, 1013, 1023, 1024, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1015, 3162, 811, 3032,
	845, 1786, 935, 3158, 3161, 515, 1246, 848, 2007, 1248,
	3177, 3217, 3195, 3198, 3169, 3120, 725, 1989, 726, 719,
	3174, 2333, 2332, 1409, 1005, 835, 1426, 2969, 3185, 3187,
	3189, 3191, 3178, 2600, 3199, 2601, 1040, 3194, 553, 1853,
	3184, 2313, 3207, 2865, 3209, 3210, 3205, 3203, 846, 1248,
	2496, 61, 60, 59, 58, 1756, 2969, 199, 596, 198,
	3234, 2964, 3197, 3255, 576, 1108, 575, 3223, 574, 573,
	572, 2114, 2112, 2111, 1691, 754, 3035, 3231, 1690, 1754,
	2657, 2386, 3257, 2380, 2050, 2055, 1623, 3235, 836, 3181,
	3182, 3243, 3010, 3244, 3256, 3245, 2430, 3246, 1574, 1246,
	3247, 2046, 1640, 2402, 1637, 935, 1636, 2394, 3006, 3261,
	3000, 1667, 2799, 3262, 3150, 2980, 2849, 2850, 2856, 1997,
	876, 872, 874, 875, 873, 2240, 3271, 3273, 2027, 2618,
	3287, 3276, 1930, 1929, 3279, 3277, 1927, 1926, 1126, 1246,
	3075, 741, 3290, 742, 753, 2791, 3295, 1937, 935, 3283,
	3284, 3285, 3286, 1935, 793, 3296, 2740, 2736, 1798, 3266,
	3300, 1538, 3302, 2288, 843, 1692, 1688, 1991, 3077, 1579,
	718, 1987, 99, 3257, 3316, 152, 48, 89, 3312, 723,
	88, 98, 935, 150, 935, 3256, 47, 3315, 183, 3322,
	182, 3324, 736, 1257, 733, 185, 3327, 184, 480, 181,
	2170, 840, 1392, 841, 3290, 3331, 935, 2171, 3333, 3338,
	180, 1288, 179, 3342, 2983, 3345, 692, 38, 3348, 3128,
	37, 1000, 1001, 1002, 999, 33, 12, 11, 34, 117,
	21, 22, 20, 3352, 1360, 3359, 1392, 795, 1392, 3363,
	794, 3362, 19, 25, 31, 30, 110, 3371, 109, 29,
	108, 107, 106, 3359, 3376, 3375, 105, 104, 3363, 28,
	1392, 1014, 1013, 1023, 1024, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1015, 1668, 18, 42, 779, 41, 40, 9,
	3321, 97, 3168, 95, 755, 27, 96, 93, 94, 92,
	90, 3374, 73, 117, 72, 71, 3377, 117, 86, 85,
	1468, 3179, 84, 83, 82, 81, 79, 1670, 117, 80,
	765, 757, 70, 69, 68, 67, 66, 91, 117, 77,
	738, 87, 731, 2582, 78, 76, 75, 74, 65, 64,
	63, 735, 734, 1014, 1013, 1023, 1024, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1015, 136, 135, 134, 716, 133,
	132, 130, 724, 131, 129, 128, 127, 126, 1645, 125,
	124, 43, 44, 45, 46, 146, 145, 147, 1742, 149,
	151, 148, 153, 143, 778, 777, 1014, 1013, 1023, 1024,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1015, 141, 144,
	142, 740, 776, 140, 56, 100, 730, 17, 24, 4,
	729, 3263, 0, 752, 0, 0, 715, 0, 0, 0,
	722, 0, 0, 0, 756, 788, 0, 0, 0, 0,
	0, 3097, 0, 0, 0, 1661, 0, 0, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 2228, 0, 0, 0, 0, 1464, 0,
	0, 0, 0, 0, 1461, 739, 0, 0, 1463, 1460,
	1462, 1466, 1467, 0, 785, 789, 1465, 1014, 1013, 1023,
	1024, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1015, 0,
	0, 721, 0, 773, 0, 771, 775, 792, 0, 0,
	0, 772, 769, 768, 1649, 774, 759, 760, 758, 761,
	762, 763, 764, 0, 790, 1655, 791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 786, 787, 0,
	0, 0, 0, 0, 0, 1643, 1677, 0, 0, 1644,
	1646, 1648, 0, 1650, 1651, 1652, 1656, 1657, 1658, 1660,
	1663, 1664, 1665, 1026, 0, 1030, 0, 0, 0, 0,
	1653, 1662, 1654, 0, 782, 0, 0, 737, 0, 0,
	781, 1027, 1029, 1025, 0, 1028, 1014, 1013, 1023, 1024,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1015, 1695, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1471,
	1472, 1473, 1474, 1475, 1476, 1469, 1470, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 780,
	0, 1642, 0, 0, 0, 0, 0, 0, 1641, 117,
	0, 0, 117, 117, 0, 117, 1014, 1013, 1023, 1024,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1015, 0, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 612, 828, 0, 0, 0, 0, 0, 0,
	828, 348, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 567, 0, 0, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 603,
	0, 0, 379, 332, 0, 0, 0, 0, 663, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 593, 640, 639, 580, 590, 0, 0,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 655, 0, 1031, 0, 0, 0,
	0, 551, 564, 0, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 562,
	0, 0, 0, 0, 613, 0, 563, 0, 0, 608,
	587, 591, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 611, 615, 285, 677, 609, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 678, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 411, 0, 0,
	661, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 610, 0, 369, 350, 674, 552, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 1492, 1491, 1493, 423,
	298, 248, 249, 466, 659, 346, 0, 0, 0, 0,
	673, 654, 656, 657, 660, 664, 665, 666, 667, 668,
	670, 672, 676, 465, 0, 0, 0, 0, 0, 462,
	352, 2130, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 614, 0, 0, 336, 337, 338,
	339, 662, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 894, 0, 684,
	658, 683, 685, 686, 682, 687, 688, 669, 571, 0,
	618, 680, 679, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 647, 624, 625, 626, 569,
	627, 621, 622, 623, 648, 616, 644, 645, 595, 619,
	628, 643, 629, 646, 649, 650, 689, 690, 635, 691,
	632, 651, 642, 641, 630, 617, 652, 653, 602, 597,
	633, 634, 620, 636, 637, 638, 570, 598, 599, 600,
	601, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 0, 0, 0, 0, 0, 0, 880, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 902, 906, 908,
	910, 912, 913, 915, 0, 920, 916, 917, 918, 919,
	0, 897, 898, 899, 900, 878, 879, 903, 0, 881,
	0, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	893, 895, 891, 892, 901, 0, 0, 0, 0, 0,
	0, 0, 905, 907, 909, 911, 914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1695,
	1695, 1695, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2237, 2238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 117,
	902, 906, 908, 910, 912, 913, 915, 0, 920, 916,
	917, 918, 919, 0, 897, 898, 899, 900, 878, 879,
	903, 0, 881, 0, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 893, 895, 891, 892, 901, 0, 0,
	0, 0, 612, 0, 0, 905, 907, 909, 911, 914,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 0, 0, 291, 1534,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 896, 0, 452, 0, 453, 0, 0, 603,
	0, 0, 379, 332, 0, 0, 904, 0, 663, 671,
	0, 0, 0, 0, 0, 0, 0, 1719, 0, 0,
	560, 0, 0, 593, 640, 639, 580, 590, 0, 0,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 655, 0, 0, 0, 0, 0,
	0, 551, 564, 0, 568, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 561, 562,
	0, 0, 0, 0, 613, 0, 563, 0, 0, 1720,
	587, 591, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 611, 615, 285, 677, 609, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 678, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 411, 0, 0,
	661, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 610, 0, 369, 350, 674, 552, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 904,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 659, 346, 0, 0, 0, 0,
	673, 654, 656, 657, 660, 664, 665, 666, 667, 668,
	670, 672, 676, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 117, 380, 404, 416, 433, 436,
	0, 117, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 614, 0, 0, 336, 337, 338,
	339, 662, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 684,
	658, 683, 685, 686, 682, 687, 688, 669, 571, 0,
	618, 680, 679, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 117, 319,
	0, 360, 296, 0, 0, 647, 624, 625, 626, 569,
	627, 621, 622, 623, 648, 616, 644, 645, 595, 619,
	628, 643, 629, 646, 649, 650, 689, 690, 635, 691,
	632, 651, 642, 641, 630, 617, 652, 653, 602, 597,
	633, 634, 620, 636, 637, 638, 570, 598, 599, 600,
	601, 174, 612, 0, 419, 420, 421, 442, 405, 0,
	461, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 567, 0, 0, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 1034,
	0, 0, 379, 332, 0, 0, 0, 0, 663, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 593, 640, 639, 580, 590, 0, 0,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 655, 0, 0, 0, 0, 0,
	0, 551, 564, 0, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 562,
	0, 0, 0, 0, 613, 0, 563, 0, 0, 608,
	587, 591, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 611, 615, 285, 677, 609, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 678, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 411, 0, 0,
	661, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 610, 0, 369, 350, 674, 552, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 659, 346, 0, 0, 0, 0,
	673, 654, 656, 657, 660, 664, 665, 666, 667, 668,
	670, 672, 676, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 614, 0, 0, 336, 337, 338,
	339, 662, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 684,
	658, 683, 685, 686, 682, 687, 688, 669, 571, 0,
	618, 680, 679, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	139, 360, 296, 0, 0, 647, 624, 625, 626, 569,
	627, 621, 622, 623, 648, 616, 644, 645, 595, 619,
	628, 643, 629, 646, 649, 650, 689, 690, 635, 691,
	632, 651, 642, 641, 630, 617, 652, 653, 602, 597,
	633, 634, 620, 636, 637, 638, 570, 598, 599, 600,
	601, 0, 612, 0, 419, 420, 421, 442, 405, 0,
	461, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 567, 0, 0, 0, 291, 3332,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 603,
	0, 0, 379, 332, 0, 0, 0, 0, 663, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 593, 640, 639, 580, 590, 0, 0,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 655, 0, 0, 0, 0, 0,
	0, 551, 564, 0, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 562,
	0, 0, 0, 0, 613, 0, 563, 0, 0, 608,
	587, 591, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 611, 615, 285, 677, 609, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 678, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 411, 0, 0,
	661, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 610, 0, 369, 350, 674, 552, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 659, 346, 0, 0, 0, 0,
	673, 654, 656, 657, 660, 664, 665, 666, 667, 668,
	670, 672, 676, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 614, 0, 0, 336, 337, 338,
	339, 662, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 684,
	658, 683, 685, 686, 682, 687, 688, 669, 571, 0,
	618, 680, 679, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 647, 624, 625, 626, 569,
	627, 621, 622, 623, 648, 616, 644, 645, 595, 619,
	628, 643, 629, 646, 649, 650, 689, 690, 635, 691,
	632, 651, 642, 641, 630, 617, 652, 653, 602, 597,
	633, 634, 620, 636, 637, 638, 570, 598, 599, 600,
	601, 0, 612, 0, 419, 420, 421, 442, 405, 0,
	461, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 567, 0, 0, 0, 291, 1534,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 603,
	0, 0, 379, 332, 0, 0, 0, 0, 663, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 593, 640, 639, 580, 590, 0, 0,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 655, 0, 0, 0, 0, 0,
	0, 551, 564, 0, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 562,
	0, 0, 0, 0, 613, 0, 563, 0, 0, 608,
	587, 591, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 611, 615, 285, 677, 609, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 678, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 411, 0, 0,
	661, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 610, 0, 369, 350, 674, 552, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 659, 346, 0, 0, 0, 0,
	673, 654, 656, 657, 660, 664, 665, 666, 667, 668,
	670, 672, 676, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 614, 0, 0, 336, 337, 338,
	339, 662, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 684,
	658, 683, 685, 686, 682, 687, 688, 669, 571, 0,
	618, 680, 679, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 647, 624, 625, 626, 569,
	627, 621, 622, 623, 648, 616, 644, 645, 595, 619,
	628, 643, 629, 646, 649, 650, 689, 690, 635, 691,
	632, 651, 642, 641, 630, 617, 652, 653, 602, 597,
	633, 634, 620, 636, 637, 638, 570, 598, 599, 600,
	601, 0, 612, 0, 419, 420, 421, 442, 405, 0,
	461, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 567, 0, 0, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 603,
	0, 0, 379, 332, 0, 0, 0, 0, 663, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 593, 640, 639, 580, 590, 0, 0,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 655, 0, 0, 0, 0, 0,
	0, 551, 564, 0, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 562,
	1283, 0, 0, 0, 613, 0, 563, 0, 0, 608,
	587, 591, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 611, 615, 285, 677, 609, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 678, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 411, 0, 0,
	661, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 610, 0, 369, 350, 674, 552, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 659, 346, 0, 0, 0, 0,
	673, 654, 656, 657, 660, 664, 665, 666, 667, 668,
	670, 672, 676, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 614, 0, 0, 336, 337, 338,
	339, 662, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 684,
	658, 683, 685, 686, 682, 687, 688, 669, 571, 0,
	618, 680, 679, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 647, 624, 625, 626, 569,
	627, 621, 622, 623, 648, 616, 644, 645, 595, 619,
	628, 643, 629, 646, 649, 650, 689, 690, 635, 691,
	632, 651, 642, 641, 630, 617, 652, 653, 602, 597,
	633, 634, 620, 636, 637, 638, 570, 598, 599, 600,
	601, 0, 0, 0, 419, 420, 421, 442, 405, 612,
	461, 0, 1873, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 467, 456, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 603, 0, 0, 379,
	332, 0, 0, 0, 0, 663, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	593, 640, 639, 580, 590, 0, 0, 266, 197, 454,
	0, 455, 581, 0, 589, 582, 586, 585, 583, 584,
	0, 655, 0, 0, 0, 0, 0, 0, 551, 564,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 562, 0, 0, 0,
	0, 613, 0, 563, 0, 0, 608, 587, 591, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 588,
	611, 615, 285, 677, 609, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	678, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 411, 0, 0, 661, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 610, 0,
	369, 350, 674, 552, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 612,
	0, 419, 420, 421, 442, 405, 0, 461, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 567, 0, 0, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 603, 0, 0, 379,
	332, 0, 0, 0, 0, 663, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	593, 640, 639, 580, 590, 0, 0, 266, 197, 454,
	0, 455, 581, 0, 589, 582, 586, 585, 583, 584,
	0, 655, 0, 0, 0, 0, 0, 0, 551, 564,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 562, 0, 0, 0,
	0, 613, 0, 563, 0, 0, 608, 587, 591, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 588,
	611, 615, 285, 677, 609, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	678, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 411, 0, 0, 661, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 610, 0,
	369, 350, 674, 552, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 612,
	0, 419, 420, 421, 442, 405, 0, 461, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 0, 467,
	456, 567, 0, 0, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 603, 0, 0, 379,
	332, 0, 0, 0, 0, 663, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	593, 640, 639, 580, 590, 0, 0, 266, 197, 454,
	0, 455, 581, 0, 589, 582, 586, 585, 583, 584,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 562, 0, 0, 0,
	0, 613, 0, 563, 0, 0, 608, 587, 591, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 588,
	611, 615, 285, 677, 609, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	678, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 411, 0, 0, 661, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 610, 0,
	369, 350, 674, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 1411, 1412,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 612,
	0, 419, 420, 421, 442, 405, 0, 461, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 567, 0, 0, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 603, 0, 0, 379,
	332, 0, 0, 0, 0, 663, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 640, 639, 580, 590, 0, 0, 266, 197, 454,
	0, 455, 581, 0, 589, 582, 586, 585, 583, 584,
	0, 655, 0, 0, 0, 0, 0, 0, 551, 564,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 562, 0, 0, 0,
	0, 613, 0, 563, 0, 0, 608, 587, 591, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 588,
	611, 615, 285, 677, 609, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	678, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 411, 0, 0, 661, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 610, 0,
	369, 350, 674, 552, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 612,
	0, 419, 420, 421, 442, 405, 0, 461, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 567, 0, 0, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 603, 0, 0, 379,
	332, 0, 0, 0, 0, 663, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	593, 640, 639, 580, 590, 0, 0, 266, 197, 454,
	0, 455, 581, 0, 589, 582, 586, 585, 583, 584,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 562, 0, 0, 0,
	0, 613, 0, 563, 0, 0, 608, 587, 591, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 588,
	611, 615, 285, 677, 609, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	678, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 411, 0, 0, 661, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 610, 0,
	369, 350, 674, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 174, 51,
	163, 138, 0, 0, 0, 0, 0, 0, 348, 467,
	456, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 156, 0, 291, 0, 165, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 115, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 168, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 137, 162, 172, 0, 101, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 189, 0, 0,
	0, 383, 0, 0, 317, 161, 155, 154, 427, 0,
	369, 350, 57, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 157, 158, 159, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	406, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 192, 0, 0, 451,
	200, 0, 0, 0, 160, 0, 201, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 361,
	261, 394, 372, 0, 250, 0, 319, 139, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 348, 202, 39, 190,
	193, 195, 194, 0, 49, 5, 0, 0, 118, 203,
	456, 0, 0, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1067, 0, 0, 196, 0,
	0, 580, 590, 0, 0, 266, 197, 454, 0, 455,
	581, 0, 589, 582, 586, 585, 583, 584, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 587, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 588, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 0, 0, 0, 174,
	51, 163, 138, 0, 0, 0, 0, 467, 456, 348,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 485,
	487, 271, 434, 362, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 139, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	894, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	1961, 1963, 1964, 1965, 1966, 1967, 1968, 0, 1973, 1969,
	1970, 1971, 1972, 0, 1956, 1957, 1958, 1959, 878, 1940,
	1962, 0, 1941, 344, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1953, 1954, 1951, 1952, 1960, 356, 322,
	357, 307, 334, 333, 335, 905, 907, 909, 911, 914,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 1955, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 904,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 2038,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 411, 0, 0, 0, 2037, 0, 2036, 383, 2034,
	2039, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 2040, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 0,
	247, 242, 243, 244, 245, 348, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 0, 0, 1758, 0, 0,
	0, 0, 291, 0, 0, 318, 467, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1759, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 1000, 1001, 1002, 999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 810, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 817, 818, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 805, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 795, 409, 260, 794, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 808, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 809,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 812, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	819, 806, 815, 807, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 411, 0, 0,
	0, 2061, 2059, 0, 383, 0, 2060, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 0, 247, 242, 243, 244,
	245, 174, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 115,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 1802, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	139, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 0, 247, 242, 243, 244,
	245, 174, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 115,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 1793, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	139, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 0, 247, 242, 243, 244,
	245, 174, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 115,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1693, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	139, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 817, 818, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	795, 409, 260, 794, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 819, 1712, 815, 1713,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 2459, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 2462, 0, 0, 2461, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 1251, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1249, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 1245, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1249, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3252, 0, 196, 640,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1249, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1249, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2974, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 0, 247, 242, 243,
	244, 245, 348, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 0, 0, 2126, 0, 0, 0, 0, 291,
	0, 0, 318, 467, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 2128, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 2147, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1249, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3341, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 640, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3267, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 3196, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2970,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 2802, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 3042, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2660, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1693, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 2629, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1249, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 2128, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2163, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 0, 1999, 247, 242, 243, 244, 245, 348,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 318,
	467, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	1680, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1249, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 1592,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 1278, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 505, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 506, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 348, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 472, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 1229, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 1227, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 546, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 174, 51, 163, 138, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 174, 51, 163, 138,
	0, 164, 0, 0, 0, 0, 1668, 0, 156, 0,
	0, 1630, 165, 0, 164, 0, 0, 0, 0, 894,
	0, 156, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	1670, 1639, 0, 0, 115, 0, 103, 0, 0, 0,
	1671, 1672, 168, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 121,
	0, 122, 123, 0, 0, 0, 0, 0, 0, 880,
	0, 120, 121, 0, 122, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 902,
	906, 908, 910, 912, 913, 915, 0, 920, 916, 917,
	918, 919, 0, 897, 898, 899, 900, 878, 879, 903,
	0, 881, 0, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 893, 895, 891, 892, 901, 0, 137, 162,
	172, 0, 101, 0, 905, 907, 909, 911, 914, 0,
	0, 137, 162, 172, 0, 101, 0, 0, 0, 0,
	161, 155, 154, 0, 0, 0, 0, 57, 1629, 1631,
	1628, 0, 1625, 161, 155, 154, 0, 1649, 0, 0,
	57, 896, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 1677,
	1668, 0, 1644, 1646, 1648, 0, 1650, 1651, 1652, 1656,
	1657, 1658, 1660, 1663, 1664, 1665, 0, 0, 157, 158,
	159, 0, 0, 1653, 1662, 1654, 0, 0, 0, 0,
	0, 157, 158, 159, 1670, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 1669, 166, 0,
	0, 0, 0, 0, 0, 111, 0, 0, 0, 160,
	0, 112, 0, 0, 0, 3358, 0, 0, 111, 1626,
	1627, 0, 160, 0, 112, 1645, 1670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 525, 524, 531, 521, 0, 0, 1645, 0, 0,
	50, 113, 0, 528, 529, 1659, 530, 534, 0, 0,
	516, 0, 1661, 50, 1647, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 0, 0, 1674, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 524,
	531, 521, 0, 0, 0, 0, 0, 0, 0, 52,
	528, 529, 0, 530, 534, 0, 0, 516, 0, 0,
	0, 0, 52, 543, 1661, 0, 545, 539, 0, 0,
	0, 544, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 169, 170, 0, 171, 0, 0,
	0, 1649, 139, 0, 0, 0, 0, 169, 170, 0,
	171, 0, 1655, 0, 0, 139, 0, 0, 904, 0,
	543, 0, 0, 545, 0, 0, 0, 0, 544, 0,
	0, 1676, 1643, 1677, 1675, 0, 1644, 1646, 1648, 0,
	1650, 1651, 1652, 1656, 1657, 1658, 1660, 1663, 1664, 1665,
	0, 0, 0, 1649, 0, 0, 0, 1653, 1662, 1654,
	0, 0, 114, 39, 1655, 0, 0, 0, 0, 49,
	5, 0, 0, 118, 119, 114, 39, 0, 0, 0,
	0, 0, 49, 0, 1643, 1677, 118, 119, 1644, 1646,
	1648, 1669, 1650, 1651, 1652, 1656, 1657, 1658, 1660, 1663,
	1664, 1665, 0, 0, 0, 0, 0, 0, 0, 1653,
	1662, 1654, 0, 0, 0, 0, 517, 519, 518, 0,
	525, 524, 531, 521, 0, 0, 523, 0, 0, 0,
	0, 1666, 528, 529, 0, 530, 534, 0, 527, 516,
	0, 0, 0, 1669, 0, 542, 0, 0, 1642, 539,
	0, 0, 520, 0, 0, 1641, 511, 0, 0, 0,
	0, 0, 0, 517, 519, 518, 0, 0, 0, 0,
	0, 0, 0, 523, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 1666, 0, 527, 0, 0, 1647, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 0, 520,
	1642, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 526, 532,
	0, 533, 535, 0, 0, 536, 537, 538, 0, 0,
	540, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 526, 532, 0, 533, 535,
	0, 0, 536, 537, 538, 0, 0, 540, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 519, 518, 0, 0,
	0, 0, 0, 0, 0, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 526, 532, 0,
	533, 535, 0, 0, 536, 537, 538, 0, 0, 540,
	541,
}

var yyPact = [...]int{
	38231, -1000, -1000, -1000, -320, 10436, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35992,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35992,
	-318, 35439, 35439, -1000, -1000, 2229, -1000, 34885, 11587, 35992,
	364, 362, 35992, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 718, -1000, 34332, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 653, 38649, 37651, 8146, -263, -1000, 2920, -96, 2058,
	857, 907, 968, 968, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3206, 751, 33779,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3169, 350, 751, 13806, 17, 16, 2920, 345, -150,
	-149, -152, 2803, -1000, 960, 38244, 164, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8146, 8146,
	10436, -349, 10436, 8146, 35992, 35992, -1000, -1000, -1000, -1000,
	653, 38649, 8146, 2058, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -149, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -150, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -152, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4520, -1000, 1378,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2555, 1361,
	2057, 621, 35992, -1000, 1348, 621, -1000, -1000, -1000, 2920,
	2920, -1000, 35992, 35992, 86, 1540, -1000, 310, 326, 349,
	1347, -1000, -1000, -1000, -1000, -1000, -1000, 502, 2870, -1000,
	35992, 35992, 2561, 35992, -1000, 1936, 527, 38696, 2731, 1372,
	762, 2581, -1000, -1000, 2554, -1000, 218, 214, 194, 553,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 225, -1000, 2799,
	-1000, -1000, 212, -1000, -1000, 187, -1000, -1000, -1000, 11,
	-1000, -1000, -1000, -1000, -1000, -1000, -94, -1000, -1000, 954,
	1755, 8146, -1000, 1962, -1000, 3561, -1000, -1000, -1000, -1000,
	5289, 9856, 9856, 9856, 9856, -1000, -1000, 2362, 8146, 2553,
	2552, 2542, -1000, -1000, -1000, -1000, -1000, 1346, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1687, -1000, -1000,
	-1000, 9286, -1000, 2541, 2540, 2539, 2538, 2524, 2518, 2517,
	2514, 2505, 2503, 2502, 2501, 2498, 2497, 2216, 11004, 2496,
	2055, 2048, 2495, 2494, 2481, 2047, 2216, 2216, 2480, 2478,
	2472, 2471, 2470, 2461, 2460, 2443, 2442, 2438, 2436, 2435,
	2434, 2433, 2427, 2426, 2425, 2420, 2418, 2417, 2404, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1286, -1000, 2400, 2708, 2805, 2265, 2849, 2786,
	2782, 2776, 2765, 1881, -1000, -1000, 69, -1000, -112, -1000,
	-1000, 823, -1000, 818, -1000, 35992, 35992, 35992, 706, 138,
	651, 651, 651, 651, 651, 688, 651, 2813, 717, 716,
	712, 651, -1000, -107, -1000, -1000, -1000, -1000, -1000, -1000,
	1525, 1524, 2615, 795, -1000, -1000, -1000, -1000, 1180, 35992,
	-1000, 2310, 1455, 1455, 2812, 554, 548, 531, 1455, 435,
	-1000, 1552, 1552, 1552, 1552, 1455, 378, 545, 2805, 2805,
	8, 1552, -40, 1455, 1455, -40, 1455, 1455, 1455, 216,
	-313, -1000, -1000, -1000, -1000, 1552, 1552, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2794, 2790, 653, 653, 35992, 136,
	35992, 653, 653, 653, 659, -29, 37098, 36545, 1936, 523,
	515, 1192, 1526, -1000, 1464, 35992, 35992, 1464, 1464, 18281,
	17728, -1000, 35992, -1000, 2805, 2265, -1000, 2199, 2696, 2196,
	2265, -157, -159, -161, 653, 653, 653, 653, 653, 169,
	653, 653, 653, 653, 653, 35992, 35992, 33226, 653, 653,
	6999, 6999, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 10436, 1741, 1730, 162, -68, -315, 203, -1000, -1000,
	35992, 2700, 163, -1000, -1000, -1000, 2252, -1000, 2308, 2308,
	2308, 2308, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2308, 2308, 2329, 2392, -1000, -1000, 2302, 2302, 2302,
	2252, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2323, 2323, 2326, 2326,
	2323, 35992, 8146, 35992, 2710, 337, 2390, -1000, 35992, 335,
	2805, 2708, 2805, -1000, -1000, 1342, 1878, 2045, -1000, -1000,
	310, 1394, -1000, 1022, -1000, -1000, -1000, -1000, 35992, -94,
	330, -1000, -1000, 2031, 2389, -1000, 492, 1352, 1278, -1000,
	186, 38868, 28795, 1936, 28795, 35992, -1000, -1000, -1000, -1000,
	-1000, -1000, -3, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 183, -1000, 8146, 8146,
	8146, 8146, 8146, -1000, 644, 8716, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9856, 9856, 9856, 9856, 9856, 9856, 9856,
	9856, 9856, 9856, 9856, 9856, 2358, 1601, 9856, 9856, 9856,
	9856, 2696, 2580, 1187, 228, -1000, -1000, -1000, -1000, -1000,
	1553, 1755, 8146, 8146, 8146, 35992, -1000, -1000, 3233, 8146,
	8146, 134, 8146, 2759, 8146, 8146, 8146, 2194, 3809, 35992,
	8146, -1000, 2192, 2191, -1000, -1000, 1711, 8146, -1000, -1000,
	8146, -1000, -1000, 8146, 9856, 8146, -1000, -1000, -1000, 176,
	2759, 2759, 1550, 8146, 8146, 2759, 2759, 2759, 1544, 2759,
	2759, 2759, 2759, 2759, 2759, 2759, 2759, 2187, 2179, 2178,
	2805, -263, 6429, -1000, -276, 2708, 8146, -1000, -1000, 8146,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2041, 2039,
	-329, -57, 899, 805, 835, -1000, 2754, -1000, 2388, 2385,
	1341, 651, -1000, 651, 651, -144, 35992, 1584, 28795, 35992,
	35992, 1936, 35992, 35992, 35992, 651, 651, 651, 35992, -1000,
	2659, 28795, 2630, 659, -1000, 35992, 1180, 2749, 35992, 2855,
	9856, 9856, -1000, 32673, 1552, 1455, 1455, -1000, -1000, 35992,
	-1000, -1000, -1000, 1552, 35992, 1552, 1552, 2855, 1552, -1000,
	-1000, -1000, 1455, 1455, -1000, -1000, -1000, -1000, 1552, 1552,
	-1000, -1000, 2855, 35992, -20, 2855, 2855, -6, -1000, -1000,
	-1000, 35992, 35992, 651, 35992, -1000, 35992, 35992, -1000, -1000,
	35992, 35992, 38260, 35992, 32120, 2789, -1000, 28795, 35992, 35992,
	26583, -1000, 1137, -1000, -71, -1000, -59, -29, 1464, -29,
	1464, -1000, 488, 529, 16622, 428, 28795, 4719, -1000, -1000,
	1464, 1464, 4719, 4719, 1370, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1175, -1000, 182, 2708, -1000, -1000, -1000, -1000,
	-1000, 1877, 1856, 1847, 35992, 35992, 28795, 1936, 35992, 653,
	35992, 35992, 35992, 35992, 35992, -1000, 2364, -1000, 2730, 35992,
	35992, 1179, -1000, -1000, 13253, 1338, 1179, -1000, 1629, -1000,
	8146, 10436, -296, 8146, 10436, 10436, 8146, 10436, -1000, 8146,
	157, -1000, -1000, -1000, -1000, 1826, -1000, 1818, -1000, -1000,
	-1000, -1000, -1000, 2038, 2038, -1000, 1815, -1000, -1000, -1000,
	-1000, 1812, -1000, -1000, 1810, -1000, -1000, -1000, 2177, 954,
	-1000, 2035, 2576, -266, -1000, 15499, 35992, 35992, -1000, -1000,
	-266, -1000, 14929, 35992, 2708, -1000, 2708, 35992, -1000, 2811,
	-1000, 310, 285, -1000, -1000, -1000, -1000, -1000, -1000, 1331,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1169,
	-1000, 35992, -1000, -1000, 186, 28795, 29901, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 198, -1000, -1000, 173, -1000, 684,
	123, 1393, -1000, -1000, 170, 175, 81, 736, 1755, -1000,
	1619, 1619, 1606, -1000, 563, -1000, -1000, -1000, -1000, 2362,
	-1000, -1000, -1000, 1870, 2970, -1000, 1471, 1471, 1364, 1364,
	1364, 1364, 1364, 1513, 1513, -1000, -1000, -1000, 5289, 2358,
	9856, 9856, 9856, 9856, 634, 634, 3246, 3651, -1000, 8146,
	1626, -1000, 8146, 2458, 2146, 1291, 1330, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2170, 2165, 2369,
	2869, 2164, 8146, -1000, -1000, 1391, 1390, 1388, -1000, 1830,
	7576, -1000, -1000, -1000, 2156, 1329, 2155, -1000, -1000, -1000,
	2148, 1376, 1024, 2138, 1565, 2135, 1165, 8146, 8146, 8146,
	2134, 1369, 1366, 8146, 8146, 8146, 8146, 2133, 8146, 8146,
	8146, 8146, 8146, 8146, 8146, 8146, 35, 35, 35, -1000,
	-1000, 1362, -1000, 1755, -1000, 2021, -1000, 1327, 1162, -1000,
	1808, -1000, -1000, -1000, 1984, -1000, -1000, 840, 811, 816,
	35992, 977, 12140, 35992, 35992, 35992, 35992, 651, 151, -1000,
	2721, 1047, -1000, 123, -103, 377, 982, 2558, 2862, -176,
	35992, 35992, 35992, 2747, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 31567, -1000, 2353, 1359, -1000, -1000, 8146, -1000,
	-1000, 2521, 35992, 35992, 2855, 2855, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35992, 2855, 2855, 1455, 1552, -1000, -1000,
	1552, -1000, -1000, 1552, -1000, 1326, -1000, 35992, -1000, -1000,
	-1000, 2745, 2310, 1161, -1000, 1176, 647, 647, 878, 559,
	2848, 14359, -1000, 1465, 854, 679, 2688, 199, -1000, 1465,
	-209, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 494, 490,
	1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465,
	1465, 906, 1465, 1465, 1465, 1465, 1465, -1000, 1465, 2346,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 535, 150, 2785,
	258, 252, 1047, 2781, 272, 2872, 1098, -1000, -1000, -1000,
	-1000, 20500, 20500, 16069, 20500, -1000, 1426, -29, -77, -1000,
	-1000, 1137, 4719, 1137, 4719, -1000, -1000, 674, -1000, -1000,
	982, -1000, 35992, 35992, -1000, -1000, 2339, 1521, -1000, -1000,
	11004, -1000, 4719, 4719, -1000, -1000, 21053, 35992, -1000, -95,
	-1000, -79, 2807, -1000, -1000, -1000, 1132, -1000, -1000, 1134,
	982, 2575, 35992, 1132, 1132, 1132, -1000, -1000, 12140, 35992,
	-1000, -1000, 2855, 6999, -1000, 26583, -1000, -1000, 31007, -1000,
	30454, 2855, 1558, -1000, 10436, 1725, 160, -1000, 195, -327,
	158, 1615, 153, 1755, -1000, -1000, 2131, 2128, 1357, -1000,
	1349, 2127, 1344, 1343, -1000, -47, -1000, 2703, 1013, -1000,
	2338, -1000, 1339, 2609, -1000, 1123, -1000, 1514, 1335, -1000,
	1013, 1334, 2601, 1123, 2807, -1000, 1325, 76, -1000, -1000,
	35992, 2031, 1332, 29901, 1074, -1000, 670, 1314, 1313, -1000,
	28795, 188, 28795, -1000, 28795, -1000, -1000, 328, -1000, 35992,
	2706, -1000, -1000, -1000, 1984, 1512, -340, -1000, -1000, -1000,
	-1000, -1000, 1310, -1000, 634, 634, 3246, 3462, -1000, 9856,
	-1000, 9856, 2573, 1551, -1000, 8146, 1681, 4257, 4257, 1494,
	19387, 35992, -1000, -1000, 8146, 8146, -1000, 2566, -1000, -1000,
	-1000, -1000, 8146, 8146, 2220, -1000, 35992, -1000, -1000, -1000,
	-1000, 19387, -1000, 9856, -1000, 8146, 1157, 2557, 1303, 35,
	35, 35, 2519, 2483, 2463, 1280, 35, 2439, 2402, 2394,
	2386, 2314, 2306, 2255, 2234, -1000, 2332, -1000, -1000, 6429,
	-1000, -47, 8146, 8146, 8146, 2685, -1000, -1000, 115, -1000,
	1509, -1000, -1000, -1000, 800, 174, 2126, 1100, -1000, -1000,
	35992, -1000, -1000, -1000, 2122, 1087, -1000, -1000, -1000, 38249,
	2308, 2308, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2308, 2308, 2329, -1000, -1000, 2302, 2302, 2302, 2252,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2323,
	2323, 2326, 2326, 2323, -1000, 2310, 2310, 248, 35992, 46,
	1465, -1000, 500, 28795, 514, -1000, 35992, 1689, 1508, 2574,
	495, 2697, 35992, 2321, 2318, 2317, 2316, 339, 38249, 35992,
	1155, -1000, 1312, 38244, -1000, 35992, 1755, -1000, 1936, -1000,
	1455, -1000, -1000, 2855, 1126, -1000, -1000, 2855, 1455, 1455,
	1552, 35992, -1000, 339, 38249, 2741, 38260, -1000, 35992, -1000,
	-1000, -1000, 672, -1000, 834, 651, 35992, 1646, 834, 1645,
	2313, -1000, -1000, 35992, 35992, 35992, 35992, -1000, -1000, 35992,
	-1000, 35992, 35992, 35992, 35992, -1000, 35992, 35992, -1000, 35992,
	1644, 1641, 2746, -1000, 1465, 1465, 769, -1000, -1000, 472,
	-1000, 1809, 1807, 1805, 1804, 2020, 2019, 2016, 1465, 1465,
	1802, 2015, 29348, 2011, 1003, 1796, 1795, 1794, 1819, 2009,
	720, -1000, 2008, 1813, 1775, 1764, 35992, 2311, 1954, -1000,
	-1000, 46, 1465, 241, 35992, 1503, 500, 375, 1890, 17175,
	35992, 26583, 26583, 26583, 26583, -1000, 2591, 2584, -1000, 2627,
	2626, 2639, 35992, 26583, 2310, -1000, 29348, -1000, -1000, -1000,
	2696, 1275, 2651, 856, 8146, -1000, -1000, -76, -86, -1000,
	-1000, -1000, 28795, 2006, 428, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2878, 35992, 35992, 631, 2121, -1000, 2853,
	-1000, 1084, -1000, -1000, 1307, -1000, 2853, 1564, -321, 10436,
	1527, 1541, -1000, 8146, 10436, 8146, -297, 227, -300, -1000,
	-1000, -1000, 1990, -1000, -1000, -1000, 1792, -1000, 1789, 52,
	79, 1634, -266, 6429, 342, 35992, -266, 35992, 6429, -1000,
	35992, 341, -266, -1000, 35992, 1778, -1000, -1000, -1000, 2860,
	28795, 1936, 1374, 28242, -1000, 207, -1000, 181, 477, 1989,
	-1000, 705, 114, 1988, 1984, -1000, -1000, -1000, 9856, -1000,
	-1000, -1000, -1000, 1755, 8146, 2120, -1000, 806, 806, 2117,
	2106, -1000, 2308, 2308, -1000, 2252, 2302, 2252, 806, 806,
	2104, -1000, 1786, 2209, -1000, 2198, 2124, 8146, -1000, 2101,
	3361, 1217, -110, 35, 35, -1000, -1000, -1000, -1000, 35,
	35, 35, 35, -1000, 35, 35, 35, 35, 35, 35,
	35, 35, 623, -1000, 52, 1755, 1755, -1000, -1000, 2672,
	-1000, 1984, 1983, -1000, 1980, 1978, 977, 38249, 721, 12140,
	2699, 2739, 2738, 12693, 2734, 2297, 2296, 1891, -1000, -1000,
	-1000, 27689, 463, -1000, -1000, -1000, 552, 205, 1777, 448,
	-1000, 35992, 272, 2646, 1501, 1977, 35992, -1000, -1000, -1000,
	-1000, -1000, -1000, 2697, -1000, 999, 299, 25477, 12693, 12693,
	12693, 338, 1523, -1000, 621, 1130, 1293, 26583, 35992, -1000,
	26030, 2097, -1000, 982, 2855, -1000, 35992, -1000, 2855, 2855,
	1455, -1000, 338, -1000, 347, -1000, 2683, 38249, -1000, 35992,
	-1000, 35992, -1000, 35992, 35992, 651, 8146, 2683, 35992, 666,
	-1000, -1000, 925, 296, 640, 640, 1079, -1000, 2723, -1000,
	-1000, -1000, 35992, -1000, -1000, -1000, -1000, -1000, -1000, 19387,
	19387, 2779, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1976, 1974, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35992, 1273, -1000, 1499, 1891,
	27689, 1498, 1464, 1972, 463, 1689, 1483, -1000, 1969, -1000,
	1034, 35992, 35992, -1000, 1095, -1000, 1481, 2564, 2572, 2564,
	-1000, -1000, -1000, -1000, 2577, -1000, 2328, -1000, -1000, 1095,
	-1000, -1000, -1000, -1000, -1000, 856, -1000, 2806, 834, 834,
	834, 2094, -1000, -1000, -1000, 1074, 2092, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2851, 2847, 27136, 2851,
	-1000, -321, 1549, -1000, 1660, 145, 1578, 35992, -1000, -1000,
	-1000, 2091, 2087, -278, 66, 2843, 2842, 2877, -1000, 2085,
	1073, -266, -1000, -1000, 1013, -1000, -1000, -1000, -266, -1000,
	1013, -1000, -1000, 1936, -1000, 179, -1000, -1000, -1000, -1000,
	-1000, -1000, 99, -1000, 35992, -1000, 1072, 112, -1000, 1755,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8146, -1000, -1000, -1000,
	2118, -1000, -1000, 8146, 2084, 1964, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2884, -1000, 2840, -278, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 38249, -1000, 1539, 347, 347, 2081, 1035, -1000,
	-1000, -1000, -1000, 347, 24371, 12693, -1000, 1961, 118, -1000,
	-1000, -1000, 1956, 1955, 1774, -1000, -1000, 1759, 1311, 132,
	-1000, -1000, -1000, -1000, -1000, -1000, 1890, 1887, 1477, -344,
	-1000, 2292, -1000, 1465, 1465, 1465, 35992, 1270, -1000, 1465,
	1465, 2077, 2072, 2071, 627, 1484, 1482, -1000, 1771, 20500,
	26583, 26030, 1056, -1000, 1243, -1000, -1000, -1000, 2855, -1000,
	-1000, 2855, 627, -1000, -1000, -1000, 35992, 278, 2290, -1000,
	2280, 2465, 379, 2278, 2277, 35992, 2113, -1000, 2683, 35992,
	578, 2694, -1000, -1000, -1000, -1000, -1000, 438, -1000, 35992,
	-1000, -1000, 1356, -1000, 19387, -1000, -1000, 1258, -1000, 1954,
	1953, -1000, 118, 1952, 4719, -1000, -1000, 2646, 1951, -1000,
	35992, 1034, 1034, 2884, 35992, 6429, -1000, -1000, 8146, 2275,
	-1000, 8146, -1000, -1000, -1000, -1000, -1000, 2272, 2715, -1000,
	-1000, -1000, -1000, -1000, -1000, 8146, 8146, -1000, -1000, 650,
	10436, -301, 193, -1000, -1000, -1000, -285, 1949, -1000, -1000,
	2838, 1948, 1834, 35992, -1000, 1013, 1013, 982, -1000, -1000,
	-6, 501, -1000, 2082, -1000, 2010, 35, -1000, 161, 8146,
	-285, -170, -1000, -1000, -185, -185, -195, 12693, -1000, 1257,
	-1000, 1465, 1465, 2070, -1000, -1000, 311, -1000, -1000, 265,
	-1000, -1000, 1724, 497, -1000, -1000, -1000, 1947, 1676, 1911,
	23818, 19387, 19940, 1946, -1000, -1000, 25477, 1539, 1539, 38576,
	183, 38576, 910, 1466, -1000, 1760, -1000, 1735, -1000, 2855,
	1056, 1243, -1000, -1000, 1351, -1000, -1000, 910, -1000, -1000,
	278, -1000, -1000, 1654, 9856, -1000, -1000, 1945, 19940, 773,
	1476, 1474, 747, 2269, -1000, 447, 2876, -1000, -1000, -1000,
	766, 2266, -1000, 1613, 1605, -1000, 35992, -1000, 23818, 23818,
	603, 603, 23818, 23818, 2253, 640, -1000, -1000, 9856, -1000,
	-1000, -1000, -1000, 1465, 1336, -1000, -1000, -1000, -1000, -1000,
	-1000, 1887, -1000, -1000, 2805, -1000, -1000, 1755, 35992, 1755,
	24924, -1000, 2837, 2836, 1755, 954, -1000, -321, 35992, 35992,
	-287, 1732, -1000, 1944, 63, -1000, -1000, 965, -289, 51,
	75, 1473, -1000, -1000, -1000, 2068, -1000, 891, -1000, -1000,
	-1000, 954, -287, 35992, -1000, 327, -1000, -1000, -1000, -1000,
	24371, 1539, 1539, -195, 476, 1943, -1000, -1000, 251, -1000,
	-1000, -1000, -1000, -1000, 107, -1000, 1470, 1236, -1000, 2252,
	8146, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 619,
	3387, -1000, 854, -1000, -6, 619, 510, 231, -1000, 1728,
	-1000, -1000, 2884, -1000, 493, -1000, -1000, 3246, -1000, -1000,
	-1000, -1000, -1000, -1000, 1938, 1937, -1000, -1000, -1000, -1000,
	-1000, 1717, 2244, -49, 2774, 1934, -1000, -1000, 2230, 1220,
	1219, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1196,
	1188, 23818, -1000, -1000, 3246, 19387, 1465, -1000, -1000, 1181,
	1168, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2222, -1000,
	-1000, 2834, -1000, 1914, 657, 48, 75, -1000, 2833, 56,
	2832, 2831, 1912, -1000, -1000, 528, -267, 33, 31, 30,
	-1000, -1000, -1000, 8146, -1000, 2716, -1000, 443, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 98, -1000, -1000, -1000, 1911,
	1910, -1000, 23818, 2723, 1894, 384, 2822, 38576, -1000, 1465,
	-1000, 384, -1000, 356, -1000, 1450, -1000, 1714, -1000, 2805,
	-1000, 355, -1000, -1000, -1000, 2066, 8146, 2216, 1465, 1967,
	-165, 23818, 2441, 2395, 2257, 2236, 1160, -1000, 19387, -1000,
	-1000, 23265, 35992, 1834, -1000, 2215, 1706, 66, 47, 2821,
	-1000, 1834, 2819, 1834, 1834, -1000, 1588, -1000, 28, 26,
	24, -1000, -1000, -1000, -1000, 1908, 202, -1000, -1000, -1000,
	246, -1000, -1000, 2723, -1000, 2818, 432, -1000, 19387, -1000,
	-1000, -1000, 1700, -1000, -1000, -1000, -1000, 1825, -1000, 35992,
	-1000, 2568, -1000, 147, 1154, 246, 603, 246, 603, 246,
	603, 246, 603, 196, -1000, -1000, -1000, 1149, -1000, -1000,
	2770, 18834, 41, -1000, -1000, -1000, 1896, -1000, 1834, -1000,
	-1000, 528, -1000, -1000, -1000, -1000, -1000, -1000, 1465, 1739,
	292, -1000, -1000, -1000, 22712, 402, 374, 323, -1000, 550,
	-1000, -1000, -1000, 640, -1000, -1000, 2567, 2223, 2867, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35992,
	-1000, 35992, -1000, 1114, -1000, -1000, -1000, 1194, -1000, -1000,
	-1000, -1000, -1000, 1699, -1000, 35992, -1000, 35992, 391, 1688,
	9856, 2213, 9856, 2212, 421, 2207, -1000, -1000, 2875, -1000,
	2873, 754, 754, 246, 246, 246, 246, -1000, 953, -1000,
	1448, -1000, 22159, 35992, -1000, -1000, 1110, 2205, 2817, -1000,
	3318, 35992, 2937, 35992, 2204, 1365, 9856, -1000, -1000, -1000,
	1757, 456, -1000, 35992, 5859, -1000, 969, -1000, -1000, 581,
	413, -1000, 1092, -1000, 1090, 21606, 1680, 2393, -1000, -1000,
	-1000, -1000, -1000, 1755, 35992, 1080, -1000, 35992, 387, -1000,
	-1000, -1000, 1069, -1000, -1000, -1000, -1000, 581, 2407, -1000,
	1664, -1000, -1000, 38524, 702, -1000, -1000, 38524, 390, -1000,
	561, 2203, -1000, -1000, 1032, -1000, 35992, 804, 8146, -1000,
	390, 38576, -1000, 8146, 1006, -1000, 38576, 993, -1000, -1000,
}

var yyPgo = [...]int{
	0, 156, 2899, 243, 158, 3519, 83, 249, 225, 214,
	242, 3518, 3517, 3515, 2714, 2701, 3514, 3513, 3510, 3509,
	3508, 3493, 3492, 3491, 3490, 3489, 3487, 3486, 3485, 3484,
	3483, 3482, 3481, 3480, 3479, 3477, 3476, 3475, 3474, 3473,
	3471, 3470, 3469, 3467, 3466, 3465, 240, 3450, 3449, 3448,
	3447, 3446, 3445, 3444, 3441, 3439, 3437, 3436, 3435, 3434,
	3433, 3432, 3430, 3429, 3426, 3425, 3424, 3423, 3422, 3419,
	3418, 3415, 3414, 3412, 3410, 3409, 3408, 3407, 3406, 212,
	3405, 2695, 3403, 3401, 3399, 3398, 3397, 3395, 3394, 217,
	3379, 3377, 3376, 3372, 3371, 3370, 3369, 3368, 3366, 3365,
	3364, 239, 3363, 3362, 3354, 3352, 3351, 3350, 236, 3348,
	154, 182, 3347, 3346, 3345, 3340, 3337, 3336, 230, 218,
	66, 3334, 43, 3332, 213, 3331, 128, 3330, 130, 3327,
	3320, 3319, 3317, 3315, 3310, 3308, 3306, 3303, 3301, 3300,
	3297, 3296, 3295, 3292, 3291, 89, 3290, 253, 3289, 69,
	3288, 3287, 117, 160, 181, 254, 2487, 252, 248, 176,
	161, 87, 3286, 2679, 3285, 153, 228, 138, 23, 3283,
	164, 3281, 141, 37, 30, 251, 125, 56, 162, 115,
	3278, 215, 101, 100, 3277, 3276, 175, 247, 183, 3273,
	118, 3267, 3265, 3260, 3258, 206, 187, 3257, 3256, 112,
	3253, 3252, 97, 3249, 68, 190, 149, 186, 3248, 94,
	116, 111, 107, 168, 3245, 132, 3244, 3243, 3242, 3241,
	166, 3240, 3239, 137, 73, 3238, 3237, 3236, 61, 3235,
	46, 3232, 28, 3231, 64, 3230, 3228, 3227, 3226, 3224,
	3223, 3222, 3221, 3218, 3216, 3212, 70, 3210, 3209, 15,
	16, 18, 3207, 26, 3206, 151, 3205, 3204, 3203, 86,
	82, 3201, 79, 1, 51, 67, 3200, 3199, 222, 167,
	96, 131, 3198, 387, 3194, 3193, 3192, 142, 3191, 1521,
	3190, 3189, 3188, 3186, 3184, 54, 3183, 226, 47, 3182,
	119, 135, 3181, 33, 48, 201, 200, 3179, 3178, 3177,
	302, 178, 93, 90, 0, 3175, 136, 3174, 3173, 3172,
	256, 3171, 234, 204, 150, 220, 265, 221, 3170, 3163,
	65, 3161, 144, 45, 55, 123, 9, 22, 169, 3159,
	13, 172, 3158, 198, 3156, 179, 42, 133, 3155, 3153,
	34, 257, 3146, 3144, 3143, 110, 3142, 3141, 113, 74,
	3139, 3138, 3137, 3136, 38, 3135, 31, 25, 3131, 120,
	3128, 235, 3125, 241, 124, 171, 163, 139, 223, 229,
	75, 71, 3121, 1540, 134, 95, 17, 3119, 227, 3118,
	275, 127, 3103, 77, 3102, 244, 375, 209, 3101, 180,
	7, 41, 32, 3100, 8, 3098, 177, 211, 3097, 3096,
	21, 49, 3094, 19, 3091, 3090, 3089, 3085, 5, 3084,
	3071, 3066, 2, 4, 3058, 3, 199, 148, 109, 84,
	62, 3052, 3051, 44, 188, 3049, 122, 197, 173, 3047,
	88, 3046, 3045, 3044, 2218, 3043, 255, 3042, 3035, 3034,
	3033, 3029, 3026, 3025, 3024, 3023, 92, 36, 3017, 3013,
	3012, 3011, 76, 129, 3010, 3009, 3006, 3005, 35, 170,
	3004, 20, 3003, 29, 27, 39, 3001, 121, 2999, 12,
	184, 2996, 2995, 14, 2994, 2992, 10, 11, 2991, 2989,
	108, 2988, 91, 24, 145, 98, 2986, 2985, 81, 216,
	126, 2983, 2981, 238, 232, 192, 2980, 231, 233, 246,
	2979, 208, 2978, 2974, 2973, 2972, 2970, 2969, 1049, 2968,
	2967, 237, 72, 85, 103, 2966, 2961, 2955, 80, 143,
	106, 105, 57, 78, 2954, 102, 194, 2953, 189, 2952,
	2950, 99, 2948, 2947, 2936, 2932, 2930, 174, 2915, 2908,
	185, 224, 2907, 2905, 2904, 2901, 250, 290, 2887,
}

//line mysql_sql.y:10540
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 536, 544, 544, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 534, 534, 534, 535,
	535, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 479, 479, 478, 478, 477,
	477, 431, 431, 476, 476, 476, 475, 475, 475, 474,
	474, 473, 473, 472, 472, 470, 470, 471, 469, 468,
	468, 468, 466, 466, 466, 462, 462, 464, 463, 463,
	465, 457, 457, 460, 460, 458, 458, 458, 458, 461,
	456, 456, 456, 455, 455, 100, 100, 100, 375, 375,
	99, 99, 389, 389, 389, 389, 389, 387, 387, 387,
	387, 387, 387, 386, 386, 385, 385, 390, 390, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 90,
	90, 90, 90, 90, 95, 95, 95, 541, 541, 540,
	540, 542, 542, 542, 542, 543, 543, 93, 93, 93,
	94, 384, 384, 384, 91, 92, 92, 374, 374, 379,
	379, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 383, 383, 383, 381, 381, 380,
	380, 382, 382, 84, 84, 84, 87, 86, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 371, 371, 370, 96, 96, 97, 538, 538,
	537, 539, 539, 539, 539, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 504, 504, 504, 506, 506, 308,
	309, 545, 311, 307, 307, 307, 500, 500, 501, 502,
	503, 503, 503, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 254, 254, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 242,
	242, 242, 237, 237, 237, 237, 238, 238, 239, 239,
	240, 240, 240, 240, 241, 241, 301, 301, 259, 259,
	259, 261, 261, 260, 258, 256, 256, 256, 256, 256,
	256, 257, 257, 257, 262, 262, 76, 82, 82, 82,
	517, 517, 77, 528, 528, 434, 434, 322, 322, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 439, 440, 318, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 360, 360, 51, 546, 546, 296, 296,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 73,
	451, 451, 548, 548, 548, 71, 72, 433, 433, 433,
	61, 60, 59, 58, 57, 57, 49, 49, 48, 48,
	54, 139, 140, 315, 315, 315, 317, 317, 313, 547,
	547, 403, 403, 316, 316, 47, 47, 47, 47, 74,
	314, 314, 295, 312, 312, 312, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 25, 26, 28, 368, 368, 365, 27,
	19, 18, 18, 22, 21, 17, 17, 20, 23, 24,
	24, 9, 9, 9, 9, 14, 14, 15, 160, 160,
	210, 210, 512, 512, 508, 508, 509, 509, 509, 510,
	510, 511, 511, 108, 445, 445, 445, 445, 445, 445,
	8, 182, 182, 444, 444, 444, 444, 444, 444, 372,
	372, 489, 489, 489, 490, 181, 181, 176, 176, 446,
	446, 337, 491, 491, 454, 454, 453, 453, 452, 452,
	179, 179, 180, 180, 163, 163, 119, 119, 459, 459,
	459, 459, 467, 467, 430, 430, 246, 246, 288, 288,
	289, 289, 153, 153, 154, 154, 154, 154, 154, 154,
	497, 497, 499, 499, 498, 178, 178, 174, 174, 175,
	175, 175, 173, 173, 172, 171, 171, 170, 168, 168,
	168, 169, 169, 169, 186, 186, 156, 156, 156, 155,
	155, 155, 155, 155, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 157, 157, 505, 505,
	505, 435, 435, 435, 442, 442, 270, 270, 271, 271,
	269, 269, 158, 158, 159, 159, 159, 159, 268, 268,
	267, 161, 161, 167, 166, 166, 162, 162, 162, 162,
	278, 278, 277, 277, 277, 277, 111, 117, 117, 118,
	185, 185, 276, 275, 275, 275, 184, 184, 183, 183,
	177, 177, 165, 165, 165, 165, 274, 164, 272, 533,
	533, 532, 532, 531, 529, 529, 529, 530, 530, 530,
	530, 481, 481, 481, 481, 481, 302, 302, 302, 306,
	306, 305, 305, 305, 305, 305, 310, 7, 7, 7,
	7, 7, 7, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 38, 194, 195, 39,
	196, 196, 197, 197, 198, 198, 199, 200, 201, 201,
	201, 201, 37, 187, 187, 188, 188, 189, 189, 190,
	191, 191, 191, 193, 192, 36, 36, 29, 146, 146,
	147, 147, 147, 149, 149, 243, 243, 243, 148, 148,
	150, 150, 150, 513, 516, 514, 514, 518, 518, 518,
	519, 519, 519, 519, 520, 520, 30, 136, 141, 523,
	523, 523, 522, 522, 524, 524, 525, 525, 292, 292,
	293, 293, 144, 145, 145, 143, 138, 152, 152, 152,
	152, 152, 137, 142, 515, 521, 521, 521, 369, 369,
	366, 367, 367, 364, 363, 363, 363, 527, 527, 526,
	526, 526, 303, 303, 31, 359, 359, 361, 362, 362,
	362, 353, 353, 353, 353, 35, 357, 357, 358, 358,
	358, 358, 358, 354, 354, 356, 356, 352, 352, 352,
	352, 352, 352, 34, 151, 151, 351, 351, 348, 348,
	346, 346, 347, 347, 345, 345, 345, 349, 349, 42,
	75, 43, 44, 45, 41, 41, 41, 350, 350, 33,
	33, 33, 121, 120, 120, 120, 120, 291, 291, 290,
	290, 122, 40, 222, 222, 422, 422, 417, 417, 417,
	417, 417, 437, 437, 437, 418, 418, 418, 419, 419,
	419, 421, 421, 421, 420, 420, 420, 420, 420, 436,
	436, 438, 438, 438, 391, 391, 392, 392, 392, 395,
	395, 409, 409, 410, 410, 408, 408, 415, 415, 414,
	414, 413, 413, 412, 412, 411, 411, 411, 411, 406,
	406, 405, 405, 393, 393, 393, 393, 393, 394, 394,
	394, 404, 404, 407, 407, 266, 266, 265, 265, 230,
	230, 231, 231, 264, 264, 228, 228, 229, 229, 229,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 487, 487, 488, 233, 233,
	244, 244, 244, 244, 244, 244, 232, 232, 234, 234,
	211, 211, 209, 209, 202, 202, 203, 203, 204, 204,
	204, 208, 208, 207, 207, 207, 207, 205, 205, 206,
	206, 206, 206, 206, 206, 377, 377, 484, 484, 485,
	485, 480, 480, 480, 483, 483, 483, 483, 483, 483,
	486, 486, 486, 482, 482, 212, 286, 286, 286, 304,
	304, 304, 304, 285, 285, 285, 227, 227, 226, 226,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 376, 376, 319, 319, 320, 320, 253, 252,
	252, 252, 252, 252, 250, 251, 249, 249, 249, 249,
	249, 248, 248, 247, 247, 247, 355, 355, 245, 245,
	236, 236, 236, 235, 235, 235, 416, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 284, 284, 284, 329, 329, 334, 334, 496,
	496, 495, 213, 213, 213, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 223, 223, 223, 400, 400, 400,
	400, 401, 401, 401, 401, 402, 402, 402, 398, 398,
	399, 399, 338, 339, 339, 443, 443, 396, 396, 397,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 450,
	450, 450, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 507, 507,
	507, 492, 492, 492, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 282, 282, 282, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 340, 340, 341, 341, 447, 447, 447, 447, 447,
	447, 448, 448, 449, 449, 449, 449, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 327, 279, 279, 279,
	342, 335, 335, 336, 336, 330, 330, 330, 330, 330,
	330, 330, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 331, 331, 333, 333, 344, 344,
	344, 343, 343, 343, 343, 343, 343, 343, 225, 225,
	225, 225, 324, 324, 324, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 215, 215, 215,
	215, 219, 219, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 220, 220, 220,
	220, 220, 218, 218, 218, 218, 218, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 109, 110, 110, 217, 287,
	287, 423, 423, 426, 426, 424, 424, 425, 427, 427,
	427, 428, 428, 428, 429, 429, 429, 432, 432, 294,
	294, 294, 300, 300, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 5, 3, 4, 6, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 0, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 7,
	1, 3, 0, 1, 1, 3, 1, 3, 0, 1,
	1, 1, 12, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 9, 9, 7, 1, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 2, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 2, 6, 0, 4, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 8,
	2, 4, 4, 4, 9, 10, 8, 0, 2, 11,
	9, 11, 2, 2, 8, 4, 5, 1, 3, 0,
	3, 5, 10, 0, 2, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 2, 1, 0, 3, 2, 4, 3, 0,
	1, 0, 1, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 1, 3, 3, 3, 0,
	4, 1, 3, 3, 3, 0, 1, 1, 3, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 5, 4, 1, 3, 3, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	1, 1, 1, 7, 9, 7, 9, 2, 1, 7,
	9, 7, 9, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 3, 3,
	2, 2, 1, 5, 6, 4, 1, 1, 1, 5,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 6, 1, 1, 1,
	1, 1, 4, 4, 4, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 1, 6,
	8, 6, 6, 5, 5, 5, 6, 6, 6, 6,
	5, 6, 6, 6, 6, 6, 6, 6, 6, 1,
	1, 1, 4, 4, 6, 8, 6, 4, 5, 4,
	4, 4, 3, 4, 6, 6, 7, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 8, 4, 2, 3, 2,
	4, 2, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -536, -544, -2, -5, 599, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 592,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 598,
	439, 13, 488, -14, -15, -497, -16, 256, -307, -308,
	-309, -311, -545, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 231, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 364, 370, 427, 591, 60, -154, -156, 602, 603,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 227, 15, 531,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 251, 250, 37, 317, 318, 319,
	368, 249, 228, 14, 30, 41, 344, -155, 81, 523,
	524, 526, 229, -157, 12, 606, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 241,
	593, -304, 360, 594, 596, 595, 84, 92, -297, -299,
	364, 370, 591, 603, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 491, 578, 579, 580, 581, 519, 577, 342, 343,
	528, 268, 292, 395, 298, 305, 157, 176, 170, 198,
	190, 524, 165, 272, 310, 273, 91, 160, 474, 105,
	451, 424, 163, 287, 289, 291, 520, 521, 294, 293,
	295, 297, 522, 274, 345, 186, 181, 286, 270, 179,
	275, 39, 276, 203, 277, 278, 533, 447, 341, 453,
	302, 422, 180, 448, 290, 450, 207, 211, 465, 466,
	174, 175, 455, 468, 202, 205, 206, 248, 42, 530,
	260, 469, 209, 201, 197, 477, 306, 304, 200, 173,
	196, 271, 64, 213, 212, 214, 418, 419, 420, 421,
	279, 280, 358, 464, 193, 182, 346, 166, 22, 472,
	255, 452, 371, 281, 299, 307, 208, 210, 262, 267,
	532, 523, 426, 266, 303, 470, 178, 259, 288, 254,
	473, 167, 526, 373, 282, 161, 296, 467, 476, 63,
	386, 172, 164, 245, 158, 264, 269, 283, 284, 285,
	517, 309, 308, 300, 525, 194, 261, 199, 184, 171,
	195, 159, 263, 475, 387, 589, 344, 405, 192, 189,
	265, 238, 471, 454, 162, 409, 388, 187, 311, 585,
	586, 587, 359, 340, 312, 313, 185, 252, 445, 446,
	316, 415, 332, 389, 425, 396, 390, 220, 320, 457,
	459, 204, 588, 321, 322, 323, 449, 324, 325, 326,
	327, 363, 55, 57, 93, 95, 604, -382, -380, -304,
	524, 591, 370, 523, 526, 364, 344, 603, -196, -304,
	605, -163, 38, -209, -304, -163, -81, -15, -14, -155,
	-156, -209, 235, -312, 23, 422, -89, 423, 231, 81,
	-304, -9, -101, -8, -108, -79, -153, 427, -310, -304,
	317, 317, -310, 235, -304, 266, 403, -434, 241, -386,
	-359, 267, -385, -361, -388, -362, 31, 227, 229, 228,
	263, 15, 368, 237, 13, 12, 369, 249, 24, 25,
	27, 14, 370, 372, 28, 373, 376, 377, 378, 41,
	381, 382, 256, 84, 92, 87, 274, -195, -304, -336,
	-330, 112, 257, -332, -325, -326, -328, -476, -470, -323,
	81, 139, 140, 147, 113, -327, -416, 35, 115, 540,
	577, 489, -280, -281, -282, -283, -284, -304, -471, -469,
	87, 96, 99, 102, 103, 101, 100, 151, 183, 98,
	88, 152, -156, 84, -492, 549, -298, 570, 578, 579,
	580, 581, 569, 60, -441, -449, 234, -447, 150, 188,
	252, 184, 13, 145, 415, 185, 546, 566, 491, 550,
	573, 542, 543, 544, 537, 538, 539, 541, 551, 553,
	565, -450, 561, 571, 572, 559, 574, 575, 576, 86,
	85, 564, 563, 552, 547, 548, 554, 536, 545, 555,
	556, 562, 567, 568, 352, 105, 353, 354, 481, 345,
	355, 241, 422, 69, 356, 357, 358, 359, 360, 488,
	361, 70, 362, 351, 256, 405, 363, 187, 204, 493,
	492, 494, 485, 482, 480, 483, 484, 486, 487, 557,
	558, 560, -117, -118, 583, -172, -173, -273, 11, 6,
	7, 8, 9, -534, 424, 532, 87, 162, 159, -373,
	162, 111, 167, 166, -373, 320, 262, 365, -146, -350,
	342, 405, 324, 93, 266, -353, -351, 520, -436, 314,
	310, 236, -147, 108, 246, 245, 106, 481, 234, 379,
	305, 55, 57, -508, -509, 224, 225, 226, -499, 514,
	-498, -304, 354, 95, 26, 235, 365, 262, 459, 457,
	458, 460, 461, 462, 463, -62, -451, -433, 454, 453,
	-316, 446, 452, 444, 456, 447, 343, 326, 325, 227,
	600, 521, 515, -294, 389, 425, 478, 479, 366, 426,
	465, 467, 448, 105, 191, 188, 236, 238, 235, 342,
	481, 405, 93, 324, -508, 159, 465, 467, 266, 403,
	40, -379, 415, -378, -380, 466, 477, 85, 86, 464,
	-294, 105, 445, 445, -173, -273, -172, -154, -156, -111,
	-497, 522, 522, 522, 236, 342, 405, 266, 237, 235,
	518, 520, 238, 481, 234, 317, 365, 262, 324, 93,
	-435, -505, 31, -442, 221, 222, 223, 32, 33, -1,
	119, 606, -330, -330, -6, 609, -6, -330, -304, -304,
	154, -215, -219, -216, -218, -217, -221, -220, 188, 189,
	150, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 205, 206, 203, 30, 204, 252, 184, 185, 186,
	187, 207, 170, 190, 529, 215, 171, 216, 172, 217,
	173, 218, 174, 175, 219, 176, 179, 180, 181, 182,
	178, 153, 81, 153, 87, -179, 258, -209, 153, -179,
	-173, -172, -173, -209, -285, -304, 424, 122, -89, -89,
	423, -500, -501, -502, -504, 231, 423, 422, 153, 274,
	16, -310, -310, 79, -209, -361, 266, -386, -359, 35,
	78, 154, 239, 154, 78, 81, 366, 342, 405, 367,
	481, 235, 379, 238, 266, 380, 342, 405, 235, 238,
	481, 266, 342, 235, 238, 405, 266, 380, 444, 445,
	238, 26, 371, 374, 375, 445, -455, 477, 154, 111,
	108, 109, 110, -330, 129, -343, 122, 123, 124, 125,
	126, 127, 128, 136, 135, 146, 139, 140, 141, 142,
	143, 144, 145, 137, 138, 132, 112, 130, 134, 131,
	114, -156, -330, -336, 60, -328, -328, -328, -328, -416,
	-334, -330, 81, 81, 81, 153, 100, 87, -330, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -448, 81, 81, -340, -341, 81, 81, -323, -285,
	81, 87, 87, 81, 81, 81, 87, -341, -341, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-173, 154, 81, -119, 38, -175, 21, -157, -156, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 96, 604,
	220, 470, 531, 165, 166, 167, -194, -304, -196, -187,
	-304, 238, -147, 238, 518, 517, -348, 241, -348, -348,
	-348, -348, 237, -348, 23, 235, 235, 235, -348, 488,
	122, 122, 58, -510, 169, 154, -499, -178, 81, -315,
	130, 134, -315, 23, 264, 264, 264, -315, 304, -546,
	-547, 16, 132, -313, -547, -313, -313, -315, -548, 237,
	455, 42, 265, 264, -174, -175, -174, 449, 445, -403,
	450, 451, -317, -547, -316, -315, -315, -316, -315, -315,
	-315, 235, 238, 481, 324, 601, -546, -546, 30, 30,
	-434, -434, -209, -434, 515, -295, -304, -434, -434, -434,
	-511, 240, -541, -540, 468, -543, 470, 159, -380, 159,
	-380, -361, 266, 266, 154, 122, 23, -381, 122, 133,
	-380, -380, -381, -381, -232, 40, -303, 150, -304, 87,
	-232, 40, -538, -537, -209, -174, -157, -156, 82, 82,
	82, 525, 525, 525, -434, -434, -434, -434, -434, -436,
	-434, -434, -434, -434, -434, -310, -187, -196, 241, -434,
	-434, -158, -159, 141, -330, -304, -158, -3, -125, -124,
	116, 117, 119, 594, 360, 593, 597, 591, -380, 40,
	-429, 387, 386, -423, -425, 81, -424, 81, -424, -424,
	-424, -424, -424, 81, 81, -426, 81, -426, -426, -423,
	-427, 81, -427, -428, 81, -428, -427, -304, -335, -336,
	-304, 38, -444, 60, -153, 81, 30, 81, -304, -445,
	60, -153, 81, 30, -174, -119, -175, 153, 96, 87,
	-89, 82, 154, -503, 102, 103, -506, 202, 194, -304,
	-104, 87, -7, -8, -9, -10, -46, -79, -153, -472,
	-470, 81, 31, 414, 78, 16, -387, 235, 481, 365,
	262, 238, 342, -385, -368, -365, -363, -303, -361, -364,
	-363, -390, -285, 445, -120, 429, 428, 316, -330, -330,
	-330, -330, -330, 101, 112, 340, 102, 103, -325, -344,
	31, 312, 313, -326, -326, -326, -326, -326, -326, -326,
	-326, -326, -326, -326, -326, -333, -342, -416, 81, 132,
	130, 134, 131, 114, -328, -328, -326, -326, 82, 154,
	-496, -495, 116, -330, -330, -330, -304, -493, -494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	356, 351, 357, 355, 345, 363, 358, 359, 187, 512,
	513, 506, 507, 508, 509, 510, 511, -335, -335, -330,
	-493, -335, -279, 32, 31, -336, -336, -336, 82, -330,
	-507, 338, 337, 339, -176, -304, -335, 82, 82, 82,
	96, -336, -336, -335, -326, -335, -494, -279, -279, -279,
	141, -336, -336, -279, -279, -279, -279, 141, -279, -279,
	-279, -279, -279, -279, -279, -279, 82, 82, 82, -174,
	-118, -453, -452, -330, 40, 584, -119, -330, -171, -170,
	-330, -535, 87, 87, 607, 471, 472, 163, 166, 165,
	34, 81, 81, 153, -348, -348, -348, 518, -513, -304,
	112, -369, -366, -363, -304, -304, -359, -304, -304, -209,
	-348, -348, -348, -209, -243, 52, 53, 54, -363, -148,
	55, 56, -511, -498, 34, -177, -304, -269, 17, -328,
	-328, -363, 266, -546, -315, -315, -296, -295, -317, -312,
	-317, -317, -269, -547, -315, -315, -317, -313, -269, -304,
	445, -269, -269, -403, -314, -304, -314, -348, -295, -296,
	-296, -209, -209, -254, -255, 232, 349, 350, 230, 228,
	11, 229, -263, 305, -349, 489, -238, -239, 76, 41,
	-241, 391, 384, 268, 272, 91, 273, 424, 274, 237,
	276, 277, 278, 293, 295, 248, 279, 280, 281, 415,
	282, 158, 294, 283, 284, 285, 367, -233, 6, 327,
	40, 50, 51, 438, 437, 534, 531, 269, -513, -513,
	30, 30, -369, -304, -304, -166, -161, -165, -162, -167,
	-272, -274, -164, 81, -209, -156, -304, 154, 469, 471,
	472, -541, -381, -541, -381, 31, 414, -384, 414, 31,
	-359, -378, 465, 467, -374, 87, 415, -364, -383, 78,
	150, -452, -381, -381, -383, -383, 149, 154, -539, 470,
	471, 224, -119, 96, 96, 96, -211, -209, -513, -368,
	-359, -304, -434, -211, -211, -211, -304, -304, 81, 35,
	-304, -304, -268, 154, -267, 16, -305, -304, 34, 87,
	153, -268, -126, -124, 118, -330, -6, 593, -330, -6,
	-6, -330, -6, -330, -432, 388, 96, 96, -287, 87,
	-287, 96, 96, 96, 82, 87, -372, 78, -446, -337,
	-491, 583, -181, 82, -176, -489, -490, -176, -180, -304,
	-446, -181, 82, -489, -119, -119, -304, 23, -89, -501,
	153, 154, -177, -387, -367, -364, -389, 141, -304, -375,
	154, 531, 610, 85, 239, -527, -526, 406, 82, 154,
	-456, 240, 488, 87, 607, 422, 220, 101, 340, 102,
	103, -416, -336, -333, -328, -328, -326, -326, -331, 253,
	-331, 111, -330, -329, -495, 118, -330, 34, 34, 154,
	79, 153, 82, 82, 16, 16, 82, -330, 82, 82,
	82, 82, 16, 16, -330, 82, 153, 82, 82, 82,
	82, 79, 82, 154, 82, 154, -336, -330, -336, 82,
	82, 82, -330, -330, -330, -336, 82, -330, -330, -330,
	-330, -330, -330, -330, -330, -397, 440, -397, -397, 154,
	82, 87, 154, 22, 154, -168, 36, 37, -291, -290,
	87, 164, 167, 167, 166, -195, -197, -198, -199, -200,
	-201, 132, 155, 156, -188, -189, -190, -191, -215, -285,
	189, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 205, 206, 203, 204, 252, 184, 185, 186, 187,
	207, 170, 190, 171, 172, 173, 174, 175, 176, 179,
	180, 181, 182, 178, -304, -209, -209, -209, -348, -516,
	392, 35, -528, 154, 40, -526, 481, -144, 316, -352,
	79, -151, 16, 531, -209, -209, -209, -222, 34, 16,
	-160, -210, -304, 81, 82, 154, -330, -360, 79, -304,
	-296, -269, -269, -209, -304, -269, -269, -315, -317, -317,
	-313, 153, -295, -422, 34, -178, 154, -208, -301, -205,
	-207, 243, -320, -206, 246, -485, 244, 242, 106, 247,
	301, 107, 237, -301, -301, 243, -242, 239, 34, -301,
	-257, 237, 301, 244, 20, -256, 237, 107, -304, 243,
	247, 242, -300, 122, -294, 149, 239, 42, 367, -300,
	535, -300, -300, -300, -300, -300, -300, -300, 275, 275,
	-300, -300, -300, -300, -300, -300, -300, -300, -300, -300,
	-300, 159, -300, -300, -300, -300, -300, -300, 81, 270,
	271, -517, 392, 30, 348, 348, -528, 30, -152, 342,
	30, -275, -276, -277, -278, 67, 71, 73, 68, 69,
	70, 74, 30, 154, -302, -306, 34, -304, 87, -302,
	-156, -161, -166, -302, 81, -540, -542, 473, 470, 476,
	-383, -383, 239, 81, 122, -383, -383, 40, -303, -537,
	477, 471, -186, 23, 154, 78, -211, -188, -196, -269,
	-159, -161, -304, 87, -304, 141, -269, 119, -6, 117,
	-130, -129, -128, 120, 591, 597, 119, 119, 119, 82,
	82, 82, 154, 82, 82, 82, 154, 82, 154, -459,
	450, 39, 154, 81, 82, 154, 60, 154, 122, 82,
	154, 82, 60, -186, 153, 424, -304, -470, 82, -389,
	154, 239, 153, 153, -365, 370, -303, -367, 20, 531,
	-285, 38, -291, 122, 607, 82, -331, -331, 111, -328,
	-325, 82, 119, -330, 117, -213, -215, 386, 387, -213,
	-214, -220, 150, 188, 252, 187, 186, 184, 386, 387,
	-232, -304, -330, -330, 82, -330, -330, 16, -304, -232,
	-326, -330, -173, 82, 82, -396, -397, -396, -396, 82,
	82, 82, 82, -396, 82, 82, 82, 82, 82, 82,
	82, 82, 81, -452, -459, -330, -330, -170, -169, 43,
	608, 154, 122, 167, 378, 82, 154, -285, 82, 154,
	-215, -178, -178, 81, -230, 531, -209, -519, 452, 394,
	404, -300, -322, -321, 344, 41, -439, 415, 400, 401,
	-366, 266, -304, -525, 94, 122, 78, 331, 332, 333,
	334, 335, -346, -347, -345, -349, -513, 81, 81, 81,
	81, -417, 321, -215, -209, -160, -304, 16, 154, -512,
	153, -1, -304, -359, -315, -269, -547, -269, -315, -315,
	-317, -304, -417, -215, 34, -255, -212, -285, -206, -484,
	-485, -348, -304, 107, -484, 107, 81, -212, -285, -285,
	-258, -314, -285, -304, -304, -304, -261, -260, -285, -304,
	-304, -304, 107, 107, -237, 40, 47, 48, 49, -300,
	-300, 191, -240, 40, 414, 416, 417, 96, 96, 96,
	96, 87, 87, 87, -300, -300, 96, 87, -306, 87,
	-486, 166, 44, 45, 96, 96, 96, 96, 40, 87,
	-244, 40, 286, 290, 287, 288, 289, 87, 96, 40,
	96, 40, 96, 40, -304, 81, -487, -488, 87, -519,
	-300, 348, -380, 122, -322, -524, 316, -145, 91, 31,
	-182, 232, 229, -513, -371, -370, -285, -165, -165, -165,
	-165, 67, 67, 67, 72, 67, 72, 67, -277, -371,
	-167, -178, -306, 82, -533, -532, -531, -529, 75, 240,
	76, -335, 470, 474, 475, -367, -318, 87, -374, 14,
	-209, -209, -438, 296, 297, 82, -271, 18, 153, -271,
	115, -6, -126, -128, -330, -6, -330, 593, 360, 594,
	87, 96, 96, -467, 435, 430, 432, 107, -337, -454,
	-453, 60, -153, -176, -446, -490, -452, -304, 60, -153,
	-446, -304, 96, 16, -364, -359, 141, 141, -304, 371,
	-375, 87, 393, 87, 235, 608, 87, -291, -325, -330,
	82, -223, 175, 174, -223, 82, 82, -424, -424, -423,
	-426, -423, -223, -223, 82, 82, 23, 82, 82, 82,
	-330, 82, 82, 154, -443, 490, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, -396, -396,
	-339, -338, 258, -467, 44, 45, -290, 87, 87, 87,
	-199, -215, 233, -190, 40, 34, 34, -202, -203, -204,
	-212, -205, -207, 34, 81, 81, -520, 91, -514, 87,
	-304, -521, 91, 395, 152, 346, 40, 396, 397, 412,
	341, 96, 96, 402, -515, -304, -152, -523, 51, 122,
	87, -209, -345, -294, 149, 277, 324, -266, -265, -304,
	87, -202, -202, -202, -418, 323, 20, 96, 140, -179,
	79, 153, -161, -210, -304, 141, 82, -269, -304, -269,
	-269, -315, -418, -153, -259, 44, 46, -215, -482, -304,
	-480, -482, -304, -480, -480, -348, -330, -259, -212, 239,
	30, 229, -262, 329, 330, -376, 302, 112, -376, 154,
	-168, -304, -232, -232, 30, 87, 87, -211, 82, 154,
	122, -520, -514, 122, -381, 87, -521, -525, 122, 87,
	154, -182, -182, -269, 154, 122, -184, -183, 78, 79,
	-185, 78, -183, 67, 67, -269, -531, -530, 23, -485,
	-485, -485, 82, 82, -270, 19, 20, 141, -270, 119,
	117, 119, 119, -304, 82, 82, -430, 585, -463, -465,
	430, 20, 20, 14, 82, -446, -446, -359, -375, 415,
	-209, 154, 608, -330, 82, -330, 82, 87, -173, 20,
	-430, -192, -215, -323, -153, -153, 82, 154, -153, -231,
	-264, -304, 87, -202, 87, -518, 406, 87, 87, 96,
	40, 96, 152, 398, -440, -145, -522, 91, 122, 607,
	81, -300, -300, -300, -304, 82, 154, -300, -300, 82,
	82, 82, -419, 257, 96, 140, 96, 140, 96, -302,
	-161, -304, -269, -512, 153, -269, -269, -419, -285, -227,
	-226, -224, 101, 112, 40, 384, -225, 91, 149, 291,
	294, 293, 269, 292, -253, -319, 78, 390, 329, 330,
	-349, 585, 519, 242, 106, 107, 372, -320, 81, 81,
	79, 311, 81, 81, -482, 82, -259, -285, 40, -262,
	40, 302, -260, 149, -232, 82, -488, 87, -518, 87,
	-383, -523, 87, -513, -173, -370, -452, -330, 81, -330,
	81, 67, 11, 18, -330, -336, 241, -6, 594, 360,
	-246, 586, 87, 20, 87, -461, 87, -371, -122, -457,
	-403, 274, 82, 82, -396, -399, -398, -402, 436, 303,
	443, -336, -246, 530, -149, 531, -149, -230, -204, 82,
	154, -300, -300, 82, 20, 531, 345, 40, 96, 40,
	399, 87, 102, 103, -292, -293, 87, -354, -356, -285,
	81, -232, -234, -303, 150, 87, -265, -323, -323, -228,
	-229, -263, -349, -121, -120, -228, -420, 158, 96, 140,
	96, 96, -269, -269, -420, -224, 101, -326, 87, -234,
	-235, 40, 290, 286, 122, 122, -236, 40, 270, 271,
	-245, 81, 301, 14, 191, 81, 107, 107, -209, -354,
	-354, -483, 331, 332, 333, 336, 334, 335, -483, -354,
	-354, 81, -377, -376, -326, -300, 149, -522, -174, -177,
	-481, -304, 242, 20, 20, -304, -304, -288, 587, 96,
	87, 432, -431, 588, -466, 435, -460, -458, 430, 431,
	432, 433, 122, 82, -401, 114, 398, 402, -324, -327,
	96, 99, 183, 152, -288, -193, -304, -150, 59, 477,
	-264, -323, -323, -230, 87, 393, 87, 345, 608, 154,
	122, 82, 154, -423, -330, -391, 258, 154, -263, -294,
	-122, -391, -437, 166, 322, 531, 96, 140, 96, -173,
	-421, 166, 322, 87, 87, 96, 81, -447, 30, 87,
	-355, 81, 82, 82, 82, 82, -354, -232, -300, 82,
	82, 154, 81, 20, 87, -468, 240, -464, -465, 434,
	-458, 20, 432, 20, 20, 87, -400, -401, 402, -324,
	-327, 583, 441, 441, 441, 34, 301, 415, -293, 87,
	-357, -356, -168, 82, -392, 310, 20, -263, -300, -392,
	322, 96, 140, 96, -174, 322, 82, -330, -340, -300,
	82, -248, -247, 527, -354, -357, 79, -357, 79, -357,
	79, -357, 79, 82, -232, -304, 242, -289, -304, -461,
	-475, 81, 96, -463, -462, -464, 20, -461, 20, -461,
	-461, 111, 442, 442, 442, 87, 371, -358, 248, 91,
	531, 329, 330, -168, 20, -393, 303, 304, -394, -407,
	306, -232, 96, 82, -304, -252, -250, -251, 78, 448,
	299, 300, 82, -483, -483, -483, -483, -253, 82, 154,
	-479, 30, 82, -474, -473, -286, -469, -304, 435, 436,
	87, -461, -400, -300, 87, 328, -285, 81, -405, 307,
	81, -403, 81, -403, 107, 332, -376, -251, 78, -250,
	78, 15, 14, -357, -357, -357, -357, -304, -478, -477,
	-476, 82, 154, 153, 96, -304, -390, -395, 308, 96,
	-326, 81, -326, 81, -404, 305, 81, -249, 296, 297,
	30, 166, -249, 154, 122, -473, -304, 82, -409, 81,
	20, 82, -390, 82, -390, 81, 122, -326, 101, 40,
	298, -477, 40, -330, 153, -410, -408, 258, -394, 82,
	82, 82, -390, 96, 82, -304, 82, 154, -304, -406,
	309, 82, -408, -411, 60, 96, -415, -412, 81, -263,
	260, 132, -415, -263, -414, -413, 308, 261, 81, 82,
	154, -304, 257, 81, -336, -413, -412, -336, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 827, 828, 829, 830, 831, 832, 0,
	0, 0, 0, 601, 602, 0, 568, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, -2, 614, 0,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 614, 0, 0, 0, 702, 0, 0,
	0, 0, 0, 719, 741, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1209, 1210, 1211, 1212,
	-2, 1707, 1685, 1855, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1856, 0, 261, 259,
	1657, 1685, 1707, 1759, 1770, 1771, 1805, 1855, 0, 850,
	0, 660, 0, 665, 1162, 660, 289, 603, 604, 702,
	702, 566, 0, 325, 0, 1698, 329, 0, 0, 0,
	563, 319, 320, 321, 322, 323, 324, 0, 0, 826,
	0, 0, 315, 0, 283, 1761, 0, 0, 0, 0,
	0, 0, 153, 955, 155, 957, 159, 166, 0, 0,
	171, 172, 175, 176, 177, 178, 179, 0, 183, 0,
	185, 188, 0, 190, 191, 0, 194, 195, 196, 0,
	206, 207, 208, 958, 959, 960, -2, 84, 848, 1615,
	1503, 0, 1510, 1511, 1522, 1533, 1289, 1290, 1291, 1292,
	0, 0, 0, 0, 0, 1299, 1300, 0, 1317, 1871,
	1910, 0, 1307, 1308, 1309, 1310, 1311, 93, 105, 106,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 0, 1563, 1564,
	1565, 1476, 1276, 1209, 0, 1880, 0, 1900, 1905, 1906,
	1907, 1908, 1899, 0, 0, 1461, 0, 1451, 0, 0,
	-2, -2, 0, 0, 1830, -2, 1877, 1896, 1904, 1881,
	1903, 1873, 1874, 1875, 1868, 1869, 1870, 1872, 1882, 1884,
	1895, 0, 1891, 1901, 1902, 0, 0, 0, 0, 107,
	108, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1467, -2, 1469, 1470, 1472, -2,
	1474, 1475, -2, 1478, 1479, 1480, -2, -2, 1483, 1484,
	1485, 1486, 1487, 1488, 1491, -2, -2, -2, -2, 1463,
	1464, 1465, 1466, 1455, 1456, 1457, 1458, 1459, 1460, -2,
	-2, -2, 702, 777, 0, -2, 0, 0, 0, 724,
	727, 730, 733, 0, 57, 58, 0, 278, 279, 267,
	269, 0, 273, 0, 266, 0, 0, 0, 0, 0,
	988, 988, 988, 988, 988, 0, 988, 0, 0, 0,
	0, 988, 878, 0, 962, 963, 964, 986, 987, 1050,
	0, 0, 0, 619, 615, 616, 617, 618, 690, 0,
	692, 695, 543, 543, 490, 0, 0, 0, 543, 0,
	504, 496, 0, 0, 0, 543, 0, 0, 697, 697,
	0, 546, 553, 543, 543, -2, 543, 543, 543, 0,
	0, 1000, 510, 511, 512, 496, 496, 515, 516, 517,
	528, 529, 554, 1639, 0, 0, 435, 435, 0, 435,
	0, 435, 435, 435, 621, 1800, 1705, 1776, 1761, 0,
	0, 234, 1830, 239, 0, 1706, 1723, 0, 0, 1741,
	0, -2, 0, 305, 697, 0, 703, 0, 702, 0,
	0, 0, 0, 0, 435, 435, 435, 435, 435, 1049,
	435, 435, 435, 435, 435, 0, 0, 0, 435, 435,
	0, 0, 742, 743, 738, 739, 740, 744, 745, 5,
	6, 19, 0, 0, 0, 0, 0, 0, 63, 62,
	0, 1616, 1634, 1568, 1569, 1570, 1621, 1572, 1625, 1625,
	1625, 1625, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1625, 1625, 0, 0, 1614, 1592, 1623, 1623, 1623,
	1621, 1618, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1628, 1628, 1631, 1631,
	1628, 0, 1501, 0, 0, 0, 0, 664, 0, 0,
	697, -2, 0, 567, 326, 1213, 0, 0, 330, 331,
	0, 0, 346, 0, 349, 334, 335, 336, 0, 133,
	0, 317, 318, 0, 0, 285, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 163, 160, 167, 170,
	180, 187, 0, 199, 201, 204, 161, 168, 173, 174,
	181, 202, 162, 164, 165, 169, 203, 205, 182, 186,
	200, 184, 189, 192, 193, 198, 0, 134, 0, 0,
	0, 0, 0, 1509, 0, 0, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1503, 0, 0, 1295, 1296, 1297, 1298, 1301,
	0, 1318, 0, 0, 0, 0, 1562, 1566, 0, 1501,
	1501, 0, 1501, 1497, 0, 0, 0, 0, 0, 0,
	1501, 1437, 0, 0, 1439, 1452, 0, 0, 1441, 1442,
	0, 1445, 1446, 1501, 0, 1501, 1450, 1433, 1434, 0,
	1497, 1497, 1497, 0, 0, 1497, 1497, 1497, 1497, 1497,
	1497, 1497, 1497, 1497, 1497, 1497, 1497, 0, 0, 0,
	697, 0, 0, 685, 0, 666, 0, 721, 723, 0,
	725, 726, 728, 729, 731, 732, 734, 735, 59, 0,
	0, 0, 0, 271, 0, 276, 0, 847, 0, 0,
	863, 988, 879, 988, 988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 988, 988, 988, 0, 1008,
	0, 0, 0, 621, 620, 0, 691, 0, 0, 750,
	0, 0, 489, 0, 496, 543, 543, 502, 503, 498,
	497, 549, 550, 546, 0, 546, 546, 750, 0, 522,
	523, 524, 543, 543, 530, 698, 531, 532, 546, 0,
	551, 552, 750, 0, 0, 750, 750, 0, 540, 541,
	542, 0, 0, 988, 0, 559, 498, 498, 1640, 1641,
	0, 0, 997, 0, 0, 0, 562, 0, 0, 0,
	0, 622, 214, 217, 0, 220, 0, 1800, 0, 1800,
	0, 227, 0, 0, 0, 0, 0, 0, 257, 258,
	0, 0, 0, 0, 248, 251, 1156, 1157, 952, 953,
	252, 253, 297, 298, 0, 666, 720, 722, 716, 717,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 0, 0, 0, 0, 597, 0, 599, 0, 0,
	0, 758, 752, 754, 821, 93, 758, 8, 80, 77,
	0, 19, 0, 0, 19, 19, 0, 19, 262, 0,
	1637, 1635, 1636, 1571, 1622, 0, 1597, 0, 1598, 1599,
	1600, 1610, 1611, 0, 0, 1593, 0, 1594, 1595, 1596,
	1587, 0, 1588, 1589, 0, 1590, 1591, 260, 0, 1502,
	851, 0, 639, 652, 634, 0, 641, 0, 1163, 623,
	652, 625, 0, 641, 666, 688, 666, 0, 327, 0,
	332, 0, 0, 348, 350, 351, 352, 337, 338, 564,
	313, 314, 306, 307, 308, 309, 310, 311, 312, 316,
	103, 0, 286, 287, 0, 0, 0, 147, 148, 149,
	150, 151, 152, 154, 138, 586, 588, 944, 956, 0,
	947, 0, 157, 197, 130, 0, 0, 0, 1504, 1505,
	1506, 1507, 1508, 1512, 0, 1514, 1516, 1518, 1520, 0,
	1538, -2, -2, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1523, 1536, 1537, 0, 0,
	0, 0, 0, 0, 1534, 1534, 1529, 0, 1293, 0,
	1315, 1319, 0, 0, 0, 0, 94, 1496, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 0, 0, 1503,
	0, 0, 0, 1498, 1499, 0, 0, 0, 1392, 0,
	0, 1398, 1399, 1400, 0, 647, 0, 1462, 1438, 1453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 776,
	778, 0, 656, 658, 659, 0, 686, 699, 704, 705,
	708, 55, 60, 53, 1019, 280, 281, 0, 0, 275,
	0, -2, 865, 0, 0, 0, 0, 988, 0, 893,
	0, 433, 938, 0, 0, 0, 954, 977, 984, 0,
	0, 0, 0, 1023, 880, 885, 886, 887, 881, 882,
	888, 889, 0, 693, 0, 0, 790, 488, 0, 544,
	545, 493, 1761, 498, 750, 750, 505, 499, 506, 548,
	507, 508, 509, 0, 750, 750, 543, 546, 533, 547,
	546, 536, 537, 0, 555, 560, 556, 0, 558, 513,
	514, 1025, 695, 364, 365, 406, 406, 406, 389, 406,
	0, 0, 377, 1642, 0, 0, 0, 0, 386, 1642,
	0, 1642, 1642, 1642, 1642, 1642, 1642, 1642, 0, 0,
	1642, 1642, 1642, 1642, 1642, 1642, 1642, 1642, 1642, 1642,
	1642, 0, 1642, 1642, 1642, 1642, 1642, 1142, 1642, 0,
	998, 396, 397, 398, 399, 404, 405, 0, 430, 0,
	0, 0, 433, 0, 927, 763, 0, 764, 765, 761,
	792, 816, 816, 0, 816, 796, 1162, 0, 0, 225,
	226, 215, 0, 216, 0, 228, 229, 0, 231, 232,
	233, 240, 1705, 1776, 235, 237, 0, 0, 241, 254,
	255, 256, 0, 0, 246, 247, 0, 0, 300, 301,
	303, 0, 714, 1001, 1002, 1003, 583, 1160, 584, 585,
	589, 0, 0, 592, 593, 594, 595, 596, 865, 0,
	932, 933, 750, 0, 759, 0, 755, 822, 0, 824,
	0, 750, 0, 78, 19, 0, 71, 68, 0, 0,
	0, 0, 0, 1617, 1567, 1638, 0, 0, 0, 1619,
	0, 0, 0, 0, 61, 668, 630, 0, 633, 649,
	0, 653, 0, 0, 645, 638, 642, 0, 0, 662,
	624, 0, 0, 629, 714, 689, 1214, 0, 333, 347,
	0, 0, 0, 0, 141, 941, 0, 142, 146, 136,
	0, 0, 0, 946, 0, 943, 948, 0, 156, 0,
	0, 131, 132, 1013, 1019, 0, 0, 1513, 1515, 1517,
	1519, 1521, 0, 1524, 1534, 1534, 1530, 0, 1525, 0,
	1527, 0, 1504, 0, 1320, 0, 0, 0, 0, 0,
	0, 0, 1382, 1383, 0, 0, 1387, 0, 1389, 1390,
	1391, 1393, 0, 0, 0, 1397, 0, 1436, 1454, 1440,
	1443, 0, 1447, 0, 1449, 0, 702, 0, 0, 1357,
	1357, 1357, 0, 0, 0, 0, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 1313, 1314, 0,
	779, 668, 0, 0, 0, 711, 709, 710, 0, 1017,
	0, 282, 270, 272, 0, 0, 0, 853, 854, 856,
	0, 859, 860, 861, 0, 866, 867, 869, 870, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1690, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 864, 695, 695, 1099, 0, 900,
	1642, 989, 437, 0, 0, 940, 0, 916, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 1027, 0, 0,
	0, 608, 612, 23, 696, 0, 751, 491, 0, 492,
	543, 500, 501, 750, 1162, 525, 526, 750, 543, 543,
	546, 0, 557, 1027, 0, 0, 997, 367, 0, 1171,
	1172, 407, 0, 1178, 1187, 988, 1246, 0, 1187, 0,
	0, 1189, 1190, 0, 0, 0, 0, 390, 391, 0,
	376, 0, 0, 0, 0, 375, 0, 0, 417, 0,
	0, 0, 0, 1643, 1642, 1642, 0, 384, 385, 0,
	388, 0, 0, 0, 0, 0, 0, 0, 1642, 1642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1133, 0, 0, 0, 0, 0, 0, 0, 1148,
	1149, 900, 1642, 0, 0, 0, 437, 914, 923, 0,
	0, 0, 0, 0, 0, 783, 0, 0, 782, 0,
	0, 0, 0, 0, 695, 817, 0, 819, 820, 794,
	-2, 0, 763, 799, 1501, 218, 219, 0, 0, 224,
	242, 244, 0, 0, 0, 243, 245, 249, 250, 299,
	302, 304, 684, 0, 0, 0, 1051, 0, 600, 748,
	753, 760, 823, 825, 94, 756, 748, 0, 81, 19,
	80, 72, 73, 0, 19, 0, 0, 0, 0, 1627,
	1626, 1612, 0, 1613, 1624, 1629, 0, 1632, 0, 672,
	0, 0, 652, 654, 0, 0, 652, 0, 0, 661,
	0, 0, 652, 687, 0, 0, 565, 104, 353, 0,
	0, 0, 0, 0, 587, 0, 945, 138, 0, 0,
	158, 0, 0, 0, 1019, 1500, 1526, 1528, 0, 1535,
	1531, 1294, 1302, 1316, 0, 0, 1322, 1334, 1334, 0,
	0, 1325, 1625, 1625, 1328, 1621, 1623, 1621, 1334, 1334,
	0, 95, 0, 0, 1388, 0, 0, 0, 648, 0,
	0, 0, 1355, 1357, 1357, 1363, 1358, 1364, 1365, 1357,
	1357, 1357, 1357, 1370, 1357, 1357, 1357, 1357, 1357, 1357,
	1357, 1357, 1353, 657, 672, 700, 701, 706, 707, 0,
	54, 1019, 0, 274, 0, 0, 858, 0, 0, 0,
	871, 0, 0, 1164, 0, 0, 0, 904, 901, 902,
	903, 0, 935, 438, 439, 440, 441, 0, 0, 0,
	939, 0, 927, 909, 0, 0, 0, 978, 979, 980,
	981, 982, 983, -2, 992, 0, 0, 0, 1164, 1164,
	1164, 1035, 0, 1024, 660, 0, -2, 0, 0, 610,
	0, 0, 791, 494, 750, 518, 0, 534, 750, 750,
	543, 561, 1035, 1026, 0, 366, 408, 0, 1177, 1203,
	1188, 1203, 1247, 1203, 1203, 988, 0, 408, 0, 0,
	378, 414, 0, 0, 0, 0, 374, 411, 708, 415,
	416, 418, 0, 420, 380, 392, 393, 394, 395, 0,
	0, 0, 387, 400, 401, 402, 403, 1110, 1111, 1112,
	1115, 1116, 1117, 1118, 0, 0, 1121, 1122, 1123, 1124,
	1125, 1200, 1201, 1202, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1150, 1151, 1152, 1153, 1154, 1155, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 0, 0, 1145, 0, 904,
	0, 0, 0, 0, 935, 916, 0, 926, 0, 928,
	929, 0, 0, 631, 750, 292, 0, 786, 780, 0,
	769, 784, 785, 772, 0, 774, 0, 770, 771, 750,
	762, 793, 818, 795, 798, 800, 801, 807, 0, 0,
	0, 0, 221, 222, 223, 230, 0, 457, 236, 715,
	1161, 590, 591, 1052, 1053, 598, 746, 0, 0, 746,
	76, 79, 0, 74, 0, 0, 0, 0, 66, 64,
	1620, 0, 0, 674, 118, 0, 0, 0, 650, 0,
	655, 652, 637, 646, 636, 643, 644, 663, 652, 628,
	627, 1215, 328, 0, 942, 138, 143, 144, 145, 139,
	137, 949, 0, 951, 0, 1015, 0, 0, 1532, 1321,
	1303, 1323, 1335, 1336, 1324, 1304, 1305, 1326, 1327, 1329,
	1330, 1331, 1332, 1333, 1306, 1384, 0, 1386, 1394, 1395,
	0, 1444, 1448, 0, 0, 0, 1361, 1362, 1366, 1367,
	1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	702, 1354, 0, 674, 712, 713, 1018, 1020, 846, 849,
	855, 857, 0, 868, 0, 0, 0, 0, 1165, 1166,
	1168, 1169, 1170, 0, 0, 1164, 877, 0, 0, 895,
	896, 906, 0, 0, 0, 443, 444, 0, 0, 0,
	456, 452, 453, 454, 434, 934, 923, 912, 0, 0,
	922, 0, 993, 1642, 1642, 1642, 0, 0, 1095, 1642,
	1642, 0, 0, 0, 1038, 0, 0, 1029, 0, 816,
	0, 0, 750, 609, 612, 613, 694, 495, 750, 538,
	535, 750, 1038, 363, 379, 409, 0, -2, 0, 1204,
	0, 1191, 1204, 0, 0, 1203, 0, 368, 408, 0,
	0, 0, 421, 424, 425, 422, 1242, 0, 423, 0,
	413, 419, 1113, 1114, 0, 1119, 1120, 0, 1144, 0,
	0, 426, 0, 0, 0, 427, 432, 909, 0, 924,
	0, 930, 931, 702, 0, 0, 766, 787, 0, 0,
	767, 0, 768, 773, 775, 291, 802, 0, 0, 804,
	805, 806, 797, 238, 736, 0, 0, 757, 737, 0,
	19, 0, 0, 69, 1630, 1633, 676, 0, 673, 119,
	0, 0, 0, 0, 651, 635, 626, 140, 135, 950,
	121, 0, 1016, 0, 1396, 0, 1357, 1356, 1350, 0,
	676, 0, 874, 872, 883, 883, 1099, 0, 1006, 0,
	1101, 1642, 1642, 0, 905, 894, 0, 936, 937, 0,
	445, 446, 0, 449, 455, 907, 908, 0, 0, 920,
	0, 0, 0, 0, 985, 999, 0, 0, 0, -2,
	0, -2, 1044, 0, 1036, 0, 1028, 0, 1031, 750,
	750, -2, 606, 611, 0, 519, 539, 1044, 410, 1205,
	-2, 1218, 1220, 0, 998, 1223, 1224, 0, 0, 0,
	0, 0, 0, 1268, 1232, 0, 0, 1236, 1237, 1238,
	0, 0, 1241, 0, 1550, 1551, 0, 1245, 0, 0,
	0, 0, 0, 0, 0, 1185, 369, 370, 0, 372,
	373, 1243, 412, 1642, 382, 1143, 1146, 1147, 431, 428,
	429, 912, 915, 632, 697, 293, 294, 788, 0, 781,
	811, 808, 0, 0, 747, 749, 70, 75, 0, 0,
	678, 0, 675, 0, 669, 671, 129, 640, 91, 112,
	0, 0, 1385, 1435, 1360, 0, 1351, 0, 1345, 1346,
	1347, 1352, 678, 0, 875, 890, 876, 1004, 1167, 1100,
	0, 0, 0, 1099, 0, 0, 442, 447, 0, 450,
	451, 913, 910, 911, 0, 918, 0, 0, 973, 1621,
	0, 994, 995, 1158, 1159, 996, 1096, 1097, 1098, 1054,
	-2, 1107, 0, 1010, 121, 1054, 1032, 0, 1039, 0,
	1037, 1030, 702, 607, 1041, 1219, 1221, 1222, 1225, 1226,
	1227, 1273, 1274, 1275, 0, 0, 1230, 1270, 1271, 1272,
	1231, 0, 0, 0, 0, 0, 1548, 1549, 1266, 0,
	0, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1193, 0,
	0, 0, 1184, 1186, 371, 0, 1642, 925, 290, 0,
	0, 812, 814, 809, 810, 65, 67, 82, 0, 677,
	120, 0, 83, 0, 109, 0, 122, 123, 0, 0,
	0, 0, 0, 1359, 1348, 0, 0, 0, 0, 0,
	1552, 1553, 1554, 0, 667, 0, 873, 0, 891, 892,
	1102, 1103, 1104, 1005, 897, 0, 899, 448, 917, 920,
	0, 966, 0, 708, 0, 1056, 0, 997, 1109, 1642,
	1012, 1056, 1022, 0, 1034, 0, 1046, 0, 1040, 697,
	362, 0, 1043, 1228, 1229, 0, 0, 1451, 1642, 0,
	1261, 0, 966, 966, 966, 966, 0, 381, 0, 789,
	803, 0, 0, 0, 92, 96, 0, 118, 115, 0,
	124, 0, 0, 0, 0, 1014, 0, 1337, 0, 0,
	0, 1341, 1342, 1343, 1344, 0, 0, 898, 919, 921,
	965, 974, 975, 708, 1009, 0, 1093, 1108, 0, 1011,
	1033, 1045, 0, 1048, 605, 1042, 1269, 0, 1235, 0,
	1240, 1249, 1262, 0, 0, 1173, 0, 1175, 0, 1179,
	0, 1181, 0, 0, 383, 813, 815, 0, 680, 670,
	85, 0, 0, 113, 114, 116, 0, 125, 0, 127,
	128, 0, 1338, 1339, 1340, 862, 884, 967, 1642, 0,
	0, 971, 972, 976, 0, 1081, 0, 0, 1087, 0,
	1094, 1113, 1047, 1233, 1239, 1248, 1250, 1251, 0, 1263,
	1264, 1265, 1267, 966, 966, 966, 966, 1183, 679, 0,
	1021, 0, 97, 0, 99, 101, 102, 1206, 110, 111,
	117, 126, 1349, 0, 969, 0, 1057, 0, 1059, 0,
	0, 0, 0, 0, 1091, 0, 1234, 1252, 0, 1253,
	0, 0, 0, 1174, 1176, 1180, 1182, 681, 86, 87,
	0, 98, 0, 0, 968, 970, 0, 1061, 0, 1082,
	0, 0, 0, 0, 0, 0, 0, 1254, 1256, 1257,
	0, 0, 1255, 0, 0, 100, 1207, 1058, 1055, 0,
	1093, 1083, 0, 1085, 0, 0, 0, 0, 1258, 1260,
	1259, 88, 89, 90, 0, 0, 1063, 0, 1079, 1084,
	1086, 1088, 0, 1092, 1090, 1208, 1062, 0, 1075, 1060,
	0, 1089, 1064, -2, 0, 1080, 1065, -2, 0, 1073,
	0, 0, 1066, 1074, 0, 1069, 0, 0, 0, 1068,
	0, -2, 1076, 0, 0, 1070, -2, 0, 1078, 1077,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 609, 606,
	123, 122, 124, 3, 610, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 607, 135, 608, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:759
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:766
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:772
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:786
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:790
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:805
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:820
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:824
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:872
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:882
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:902
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:908
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:923
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:929
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:972
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1016
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1030
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1036
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1040
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1055
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1065
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1069
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1075
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1088
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1094
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1128
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1139
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1145
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1149
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1170
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1174
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1209
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1215
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1224
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1235
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1239
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1245
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1249
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1255
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1259
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1265
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1289
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1308
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1312
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1316
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1325
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1340
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1347
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1352
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1359
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1368
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1392
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1396
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1408
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1426
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1443
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1479
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1483
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1489
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1502
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1572
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1593
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1629
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1633
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1646
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1655
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1659
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1898
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1902
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1931
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1935
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1941
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1945
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2008
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2012
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2028
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2035
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2041
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2045
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2093
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2184
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2188
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2192
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2198
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2202
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2208
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2212
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2218
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2222
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2239
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2244
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2252
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2376
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2380
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2386
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2402
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2406
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2412
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2426
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2430
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2584
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2588
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2594
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2600
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2605
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2606
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2607
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2612
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2656
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2665
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2669
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2675
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2691
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2701
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2710
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2720
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2739
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2751
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2755
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2759
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2763
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2778
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2782
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2786
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2790
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2794
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2798
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2802
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2806
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2811
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2842
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2846
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2863
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2872
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2876
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2882
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2904
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2963
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2967
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2994
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3002
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3015
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3021
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3065
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3081
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3101
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3147
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3152
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3215
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3228
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3239
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3243
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3268
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3321
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3341
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3362
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3372
		{
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3374
		{
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3402
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3428
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3434
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3475
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3507
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3523
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3527
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3532
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3536
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3542
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3555
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3559
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3570
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3574
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3578
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3584
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3590
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3594
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3600
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3606
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3610
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3614
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3620
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3624
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3649
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3658
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3676
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3680
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3695
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3714
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3718
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3736
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3761
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3768
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3779
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3784
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3791
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3807
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3820
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3831
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3835
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3841
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3846
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3853
		{
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3855
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3858
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3867
		{
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3871
		{
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3876
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3885
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3892
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3898
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3906
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3913
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3920
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3940
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3950
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3954
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3960
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3967
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3973
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3981
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3988
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3995
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4014
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4018
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4027
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4031
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4037
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4046
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4050
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4056
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4060
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4066
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4070
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4076
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4081
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4092
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4096
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4108
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4112
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4118
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4122
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4128
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4154
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4168
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4186
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4205
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4211
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4222
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4235
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4239
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4244
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4248
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4255
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4260
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4267
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4277
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4285
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4299
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4315
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4319
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4337
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4346
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4352
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4356
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4360
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4369
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4375
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4381
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4385
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4391
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4396
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4400
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4426
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4434
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4442
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4456
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4460
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4518
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4527
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4535
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4543
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4559
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4591
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4612
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4626
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4630
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4634
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4660
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4665
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4669
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4684
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4688
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4694
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4698
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4703
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4707
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4712
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4720
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4726
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4734
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4742
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4752
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4767
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4776
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4785
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4795
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4799
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4809
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4813
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4817
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4821
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4827
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4837
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4841
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4847
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4863
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4869
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4873
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4877
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4887
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4893
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4907
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4913
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4927
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4940
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4952
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4965
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4983
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4987
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4993
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5003
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5007
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5020
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5024
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5037
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5041
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5045
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5049
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5054
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5058
		{
			yyVAL.str = yyDollar[1].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5062
		{
			yyVAL.str = yyDollar[2].str
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5068
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5078
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5082
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5086
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5090
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5096
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 846:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5135
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5145
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5151
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 849:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5157
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5167
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5172
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5189
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5210
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5214
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5225
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5237
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5242
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5255
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5259
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5265
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5275
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5279
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5285
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5297
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5306
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5318
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5330
		{
			yyVAL.str = yyDollar[1].str
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5334
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5340
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5344
		{
			yyVAL.str = "DEFINER = "
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5348
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5353
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5357
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5371
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5379
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5395
		{
			yyVAL.str = yyDollar[1].str
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5399
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5432
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5446
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5454
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5460
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5481
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5493
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5511
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5518
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5532
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5546
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5554
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5569
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5573
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5578
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5582
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5589
		{
			yyVAL.str = yyDollar[3].str
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5594
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5598
		{
			yyVAL.str = yyDollar[2].str
		}
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5604
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5618
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5632
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5638
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5644
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5650
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5659
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5668
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5677
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5696
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5802
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5806
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5822
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5826
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5832
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5842
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5846
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5850
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5859
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5865
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5872
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5878
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5887
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5894
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5903
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5907
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5913
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5927
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5931
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5935
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5940
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5948
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5958
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5983
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6005
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6009
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6017
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6021
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6027
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6031
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6037
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6042
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6047
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6051
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6055
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6059
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6063
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6067
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6073
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6088
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6098
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6102
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6111
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6117
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6121
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6127
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6131
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6135
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6150
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6165
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6183
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6201
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6219
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6230
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6241
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6252
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6256
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6262
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6274
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6283
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6296
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6303
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6313
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6323
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6331
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6342
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6346
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6351
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6355
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6362
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6373
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6386
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6400
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6408
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6418
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6425
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6432
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6439
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6446
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6450
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6462
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6469
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6480
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6487
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6498
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6504
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6510
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6514
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6521
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6528
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6535
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6542
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6546
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6551
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6555
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6559
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6568
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6582
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6589
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6600
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6613
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6619
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6623
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6629
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6638
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6652
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6658
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6662
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6668
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6675
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6684
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6688
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6697
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6702
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6706
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6711
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6715
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6725
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6729
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6740
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6748
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6756
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6764
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6775
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6784
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6794
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6804
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6808
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6813
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6817
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6823
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6827
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6833
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6837
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6846
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6852
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6856
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6862
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6866
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6871
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6881
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6885
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6889
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6911
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6919
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6924
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6928
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6932
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6936
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6940
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6944
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6948
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6952
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6956
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6960
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6964
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6968
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6972
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6976
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6980
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6984
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6988
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6992
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6996
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7000
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7004
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7008
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7012
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7016
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7020
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7024
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7028
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7032
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7038
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7042
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7048
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7054
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7058
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7064
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7068
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7072
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7076
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7080
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7084
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7098
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7102
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7111
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7116
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7129
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7133
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7143
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7147
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7153
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7157
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7163
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7172
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7181
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7212
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7245
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7259
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7265
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7274
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7283
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7292
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7301
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7311
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7319
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7325
		{
			yyVAL.str = ""
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7329
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7339
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7345
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7351
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7371
		{
			yyVAL.str = ""
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7375
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7381
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7387
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7391
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7395
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7401
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7405
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7409
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7413
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7419
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7423
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7427
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7436
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7442
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7446
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7452
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7456
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7460
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7464
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7468
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7472
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7477
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7481
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7493
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7497
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7501
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7505
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7509
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7513
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7526
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7530
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7552
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7556
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7561
		{
			yyVAL.str = ""
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7565
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7571
		{
			yyVAL.str = ""
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7575
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1248:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7581
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7593
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7600
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7607
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7614
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7621
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7630
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7636
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7642
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7663
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7670
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7674
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7678
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7687
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7692
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7696
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7712
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7718
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7722
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7726
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7730
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7734
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7738
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7742
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7746
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7750
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7754
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7758
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7762
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7766
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7772
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7776
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7780
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7784
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7788
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7792
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7796
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7800
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7804
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7808
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7812
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7816
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7821
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7829
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7833
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7837
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7841
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7850
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7854
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7858
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7862
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7866
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7872
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7880
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7888
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7901
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7910
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7916
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7920
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7926
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7935
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7947
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7964
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7994
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8007
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8019
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8048
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8063
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8080
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8095
		{
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8102
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8106
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8110
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8116
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8120
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8124
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8128
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8134
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8138
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8142
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8148
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8156
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8170
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8177
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8186
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8191
		{
			yyVAL.str = ","
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8195
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8207
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8233
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8244
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8254
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8264
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8274
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8283
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8292
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8302
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8312
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8322
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8332
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8342
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8352
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8362
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8372
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8382
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8392
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8402
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8412
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8447
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8455
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8463
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8481
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8490
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8498
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8506
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8514
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8522
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8533
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8543
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8555
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8566
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8588
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8624
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8636
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8659
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8667
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8681
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8693
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8701
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8711
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8721
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8729
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8740
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8749
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8758
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8766
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8776
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8784
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8798
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8808
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8827
		{
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8829
		{
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8870
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8881
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8885
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8889
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8904
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8910
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8914
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8921
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8925
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8929
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8937
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8941
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8945
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8949
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8955
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8959
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8963
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8967
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8971
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8975
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8979
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8983
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8987
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8991
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8999
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9003
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9007
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9011
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9015
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9019
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9023
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9027
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9031
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9035
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9045
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9051
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9055
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9062
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9066
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9070
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9076
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9080
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9084
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9088
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9092
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9096
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9100
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9106
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9110
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9114
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9118
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9124
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9137
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9142
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9148
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9152
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9165
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9170
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9174
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9178
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9182
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9186
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9193
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9197
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9211
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9215
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9222
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9233
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9238
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9244
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9280
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9293
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9319
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9332
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9345
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9358
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9371
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9384
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9397
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9410
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9425
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9452
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9494
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9530
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9566
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9583
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9595
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9615
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9635
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9684
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9697
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9710
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9735
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9747
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9759
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9771
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9783
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9795
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9807
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9831
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9844
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9857
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9870
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9883
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9898
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9906
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9915
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9925
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9948
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9953
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9959
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9966
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9970
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9975
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9979
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9985
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9991
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9998
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10005
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10014
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10021
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10028
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10041
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10045
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10051
		{
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10053
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10063
		{
			yyVAL.str = ""
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10067
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

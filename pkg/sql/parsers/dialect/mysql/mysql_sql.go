// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const OUT = 57462
const INOUT = 57463
const BEGIN = 57464
const START = 57465
const TRANSACTION = 57466
const COMMIT = 57467
const ROLLBACK = 57468
const WORK = 57469
const CONSISTENT = 57470
const SNAPSHOT = 57471
const CHAIN = 57472
const NO = 57473
const RELEASE = 57474
const PRIORITY = 57475
const QUICK = 57476
const BIT = 57477
const TINYINT = 57478
const SMALLINT = 57479
const MEDIUMINT = 57480
const INT = 57481
const INTEGER = 57482
const BIGINT = 57483
const INTNUM = 57484
const REAL = 57485
const DOUBLE = 57486
const FLOAT_TYPE = 57487
const DECIMAL = 57488
const NUMERIC = 57489
const DECIMAL_VALUE = 57490
const TIME = 57491
const TIMESTAMP = 57492
const DATETIME = 57493
const YEAR = 57494
const CHAR = 57495
const VARCHAR = 57496
const BOOL = 57497
const CHARACTER = 57498
const VARBINARY = 57499
const NCHAR = 57500
const TEXT = 57501
const TINYTEXT = 57502
const MEDIUMTEXT = 57503
const LONGTEXT = 57504
const BLOB = 57505
const TINYBLOB = 57506
const MEDIUMBLOB = 57507
const LONGBLOB = 57508
const JSON = 57509
const ENUM = 57510
const UUID = 57511
const GEOMETRY = 57512
const POINT = 57513
const LINESTRING = 57514
const POLYGON = 57515
const GEOMETRYCOLLECTION = 57516
const MULTIPOINT = 57517
const MULTILINESTRING = 57518
const MULTIPOLYGON = 57519
const INT1 = 57520
const INT2 = 57521
const INT3 = 57522
const INT4 = 57523
const INT8 = 57524
const S3OPTION = 57525
const SQL_SMALL_RESULT = 57526
const SQL_BIG_RESULT = 57527
const SQL_BUFFER_RESULT = 57528
const LOW_PRIORITY = 57529
const HIGH_PRIORITY = 57530
const DELAYED = 57531
const CREATE = 57532
const ALTER = 57533
const DROP = 57534
const RENAME = 57535
const ANALYZE = 57536
const ADD = 57537
const RETURNS = 57538
const SCHEMA = 57539
const TABLE = 57540
const SEQUENCE = 57541
const INDEX = 57542
const VIEW = 57543
const TO = 57544
const IGNORE = 57545
const IF = 57546
const PRIMARY = 57547
const COLUMN = 57548
const CONSTRAINT = 57549
const SPATIAL = 57550
const FULLTEXT = 57551
const FOREIGN = 57552
const KEY_BLOCK_SIZE = 57553
const SHOW = 57554
const DESCRIBE = 57555
const EXPLAIN = 57556
const DATE = 57557
const ESCAPE = 57558
const REPAIR = 57559
const OPTIMIZE = 57560
const TRUNCATE = 57561
const MAXVALUE = 57562
const PARTITION = 57563
const REORGANIZE = 57564
const LESS = 57565
const THAN = 57566
const PROCEDURE = 57567
const TRIGGER = 57568
const STATUS = 57569
const VARIABLES = 57570
const ROLE = 57571
const PROXY = 57572
const AVG_ROW_LENGTH = 57573
const STORAGE = 57574
const DISK = 57575
const MEMORY = 57576
const CHECKSUM = 57577
const COMPRESSION = 57578
const DATA = 57579
const DIRECTORY = 57580
const DELAY_KEY_WRITE = 57581
const ENCRYPTION = 57582
const ENGINE = 57583
const MAX_ROWS = 57584
const MIN_ROWS = 57585
const PACK_KEYS = 57586
const ROW_FORMAT = 57587
const STATS_AUTO_RECALC = 57588
const STATS_PERSISTENT = 57589
const STATS_SAMPLE_PAGES = 57590
const DYNAMIC = 57591
const COMPRESSED = 57592
const REDUNDANT = 57593
const COMPACT = 57594
const FIXED = 57595
const COLUMN_FORMAT = 57596
const AUTO_RANDOM = 57597
const RESTRICT = 57598
const CASCADE = 57599
const ACTION = 57600
const PARTIAL = 57601
const SIMPLE = 57602
const CHECK = 57603
const ENFORCED = 57604
const RANGE = 57605
const LIST = 57606
const ALGORITHM = 57607
const LINEAR = 57608
const PARTITIONS = 57609
const SUBPARTITION = 57610
const SUBPARTITIONS = 57611
const CLUSTER = 57612
const TYPE = 57613
const ANY = 57614
const SOME = 57615
const EXTERNAL = 57616
const LOCALFILE = 57617
const URL = 57618
const PREPARE = 57619
const DEALLOCATE = 57620
const RESET = 57621
const EXTENSION = 57622
const INCREMENT = 57623
const CYCLE = 57624
const MINVALUE = 57625
const PUBLICATION = 57626
const SUBSCRIPTIONS = 57627
const PUBLICATIONS = 57628
const PROPERTIES = 57629
const PARSER = 57630
const VISIBLE = 57631
const INVISIBLE = 57632
const BTREE = 57633
const HASH = 57634
const RTREE = 57635
const BSI = 57636
const ZONEMAP = 57637
const LEADING = 57638
const BOTH = 57639
const TRAILING = 57640
const UNKNOWN = 57641
const EXPIRE = 57642
const ACCOUNT = 57643
const ACCOUNTS = 57644
const UNLOCK = 57645
const DAY = 57646
const NEVER = 57647
const PUMP = 57648
const MYSQL_COMPATBILITY_MODE = 57649
const SECOND = 57650
const ASCII = 57651
const COALESCE = 57652
const COLLATION = 57653
const HOUR = 57654
const MICROSECOND = 57655
const MINUTE = 57656
const MONTH = 57657
const QUARTER = 57658
const REPEAT = 57659
const REVERSE = 57660
const ROW_COUNT = 57661
const WEEK = 57662
const REVOKE = 57663
const FUNCTION = 57664
const PRIVILEGES = 57665
const TABLESPACE = 57666
const EXECUTE = 57667
const SUPER = 57668
const GRANT = 57669
const OPTION = 57670
const REFERENCES = 57671
const REPLICATION = 57672
const SLAVE = 57673
const CLIENT = 57674
const USAGE = 57675
const RELOAD = 57676
const FILE = 57677
const TEMPORARY = 57678
const ROUTINE = 57679
const EVENT = 57680
const SHUTDOWN = 57681
const NULLX = 57682
const AUTO_INCREMENT = 57683
const APPROXNUM = 57684
const SIGNED = 57685
const UNSIGNED = 57686
const ZEROFILL = 57687
const ENGINES = 57688
const LOW_CARDINALITY = 57689
const ADMIN_NAME = 57690
const RANDOM = 57691
const SUSPEND = 57692
const ATTRIBUTE = 57693
const HISTORY = 57694
const REUSE = 57695
const CURRENT = 57696
const OPTIONAL = 57697
const FAILED_LOGIN_ATTEMPTS = 57698
const PASSWORD_LOCK_TIME = 57699
const UNBOUNDED = 57700
const SECONDARY = 57701
const USER = 57702
const IDENTIFIED = 57703
const CIPHER = 57704
const ISSUER = 57705
const X509 = 57706
const SUBJECT = 57707
const SAN = 57708
const REQUIRE = 57709
const SSL = 57710
const NONE = 57711
const PASSWORD = 57712
const MAX_QUERIES_PER_HOUR = 57713
const MAX_UPDATES_PER_HOUR = 57714
const MAX_CONNECTIONS_PER_HOUR = 57715
const MAX_USER_CONNECTIONS = 57716
const FORMAT = 57717
const VERBOSE = 57718
const CONNECTION = 57719
const TRIGGERS = 57720
const PROFILES = 57721
const LOAD = 57722
const INFILE = 57723
const TERMINATED = 57724
const OPTIONALLY = 57725
const ENCLOSED = 57726
const ESCAPED = 57727
const STARTING = 57728
const LINES = 57729
const ROWS = 57730
const IMPORT = 57731
const MODUMP = 57732
const OVER = 57733
const PRECEDING = 57734
const FOLLOWING = 57735
const GROUPS = 57736
const DATABASES = 57737
const TABLES = 57738
const SEQUENCES = 57739
const EXTENDED = 57740
const FULL = 57741
const PROCESSLIST = 57742
const FIELDS = 57743
const COLUMNS = 57744
const OPEN = 57745
const ERRORS = 57746
const WARNINGS = 57747
const INDEXES = 57748
const SCHEMAS = 57749
const NODE = 57750
const LOCKS = 57751
const TABLE_NUMBER = 57752
const COLUMN_NUMBER = 57753
const TABLE_VALUES = 57754
const TABLE_SIZE = 57755
const NAMES = 57756
const GLOBAL = 57757
const SESSION = 57758
const ISOLATION = 57759
const LEVEL = 57760
const READ = 57761
const WRITE = 57762
const ONLY = 57763
const REPEATABLE = 57764
const COMMITTED = 57765
const UNCOMMITTED = 57766
const SERIALIZABLE = 57767
const LOCAL = 57768
const EVENTS = 57769
const PLUGINS = 57770
const CURRENT_TIMESTAMP = 57771
const DATABASE = 57772
const CURRENT_TIME = 57773
const LOCALTIME = 57774
const LOCALTIMESTAMP = 57775
const UTC_DATE = 57776
const UTC_TIME = 57777
const UTC_TIMESTAMP = 57778
const REPLACE = 57779
const CONVERT = 57780
const SEPARATOR = 57781
const TIMESTAMPDIFF = 57782
const CURRENT_DATE = 57783
const CURRENT_USER = 57784
const CURRENT_ROLE = 57785
const SECOND_MICROSECOND = 57786
const MINUTE_MICROSECOND = 57787
const MINUTE_SECOND = 57788
const HOUR_MICROSECOND = 57789
const HOUR_SECOND = 57790
const HOUR_MINUTE = 57791
const DAY_MICROSECOND = 57792
const DAY_SECOND = 57793
const DAY_MINUTE = 57794
const DAY_HOUR = 57795
const YEAR_MONTH = 57796
const SQL_TSI_HOUR = 57797
const SQL_TSI_DAY = 57798
const SQL_TSI_WEEK = 57799
const SQL_TSI_MONTH = 57800
const SQL_TSI_QUARTER = 57801
const SQL_TSI_YEAR = 57802
const SQL_TSI_SECOND = 57803
const SQL_TSI_MINUTE = 57804
const RECURSIVE = 57805
const CONFIG = 57806
const DRAINER = 57807
const MATCH = 57808
const AGAINST = 57809
const BOOLEAN = 57810
const LANGUAGE = 57811
const WITH = 57812
const QUERY = 57813
const EXPANSION = 57814
const ADDDATE = 57815
const BIT_AND = 57816
const BIT_OR = 57817
const BIT_XOR = 57818
const CAST = 57819
const COUNT = 57820
const APPROX_COUNT_DISTINCT = 57821
const APPROX_PERCENTILE = 57822
const CURDATE = 57823
const CURTIME = 57824
const DATE_ADD = 57825
const DATE_SUB = 57826
const EXTRACT = 57827
const GROUP_CONCAT = 57828
const MAX = 57829
const MID = 57830
const MIN = 57831
const NOW = 57832
const POSITION = 57833
const SESSION_USER = 57834
const STD = 57835
const STDDEV = 57836
const MEDIAN = 57837
const STDDEV_POP = 57838
const STDDEV_SAMP = 57839
const SUBDATE = 57840
const SUBSTR = 57841
const SUBSTRING = 57842
const SUM = 57843
const SYSDATE = 57844
const SYSTEM_USER = 57845
const TRANSLATE = 57846
const TRIM = 57847
const VARIANCE = 57848
const VAR_POP = 57849
const VAR_SAMP = 57850
const AVG = 57851
const RANK = 57852
const NEXTVAL = 57853
const SETVAL = 57854
const CURRVAL = 57855
const LASTVAL = 57856
const ARROW = 57857
const ROW = 57858
const OUTFILE = 57859
const HEADER = 57860
const MAX_FILE_SIZE = 57861
const FORCE_QUOTE = 57862
const PARALLEL = 57863
const UNUSED = 57864
const BINDINGS = 57865
const DO = 57866
const DECLARE = 57867
const CALL = 57868
const KILL = 57869
const QUERY_RESULT = 57870

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"CALL",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9070

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 103,
	21, 580,
	-2, 561,
	-1, 113,
	217, 797,
	-2, 868,
	-1, 135,
	42, 402,
	217, 402,
	244, 409,
	245, 409,
	423, 402,
	-2, 435,
	-1, 463,
	293, 93,
	398, 93,
	-2, 1438,
	-1, 526,
	67, 1244,
	-2, 1578,
	-1, 527,
	67, 1262,
	-2, 1549,
	-1, 531,
	67, 1263,
	-2, 1577,
	-1, 554,
	67, 1176,
	-2, 1637,
	-1, 555,
	67, 1177,
	-2, 1636,
	-1, 556,
	67, 1178,
	-2, 1626,
	-1, 557,
	67, 1601,
	-2, 1621,
	-1, 558,
	67, 1602,
	-2, 1622,
	-1, 559,
	67, 1603,
	-2, 1628,
	-1, 560,
	67, 1604,
	-2, 1611,
	-1, 561,
	67, 1605,
	-2, 1619,
	-1, 562,
	67, 1606,
	-2, 1629,
	-1, 563,
	67, 1607,
	-2, 1630,
	-1, 564,
	67, 1608,
	-2, 1635,
	-1, 565,
	67, 1609,
	-2, 1640,
	-1, 566,
	67, 1610,
	-2, 1641,
	-1, 568,
	67, 1241,
	-2, 1430,
	-1, 575,
	67, 1250,
	-2, 1456,
	-1, 579,
	67, 1254,
	-2, 1495,
	-1, 580,
	67, 1255,
	-2, 1573,
	-1, 588,
	67, 1265,
	-2, 1558,
	-1, 590,
	67, 1267,
	-2, 1568,
	-1, 591,
	67, 1268,
	-2, 1592,
	-1, 602,
	67, 1154,
	-2, 1631,
	-1, 603,
	67, 1155,
	-2, 1632,
	-1, 604,
	67, 1156,
	-2, 1633,
	-1, 611,
	21, 581,
	-2, 544,
	-1, 671,
	418, 435,
	419, 435,
	-2, 403,
	-1, 720,
	104, 1430,
	115, 1430,
	135, 1430,
	-2, 1405,
	-1, 761,
	21, 581,
	-2, 544,
	-1, 860,
	21, 580,
	-2, 1059,
	-1, 1208,
	67, 1312,
	-2, 1575,
	-1, 1209,
	67, 1313,
	-2, 1576,
	-1, 1363,
	68, 722,
	-2, 728,
	-1, 1675,
	68, 1391,
	136, 1391,
	-2, 1560,
	-1, 1676,
	68, 1391,
	136, 1391,
	-2, 1559,
	-1, 1677,
	68, 1369,
	136, 1369,
	-2, 1546,
	-1, 1678,
	68, 1370,
	136, 1370,
	-2, 1551,
	-1, 1679,
	68, 1371,
	136, 1371,
	-2, 1483,
	-1, 1680,
	68, 1372,
	136, 1372,
	-2, 1477,
	-1, 1681,
	68, 1373,
	136, 1373,
	-2, 1421,
	-1, 1682,
	68, 1374,
	136, 1374,
	-2, 1548,
	-1, 1683,
	68, 1375,
	136, 1375,
	-2, 1481,
	-1, 1684,
	68, 1376,
	136, 1376,
	-2, 1476,
	-1, 1685,
	68, 1377,
	136, 1377,
	-2, 1469,
	-1, 1687,
	68, 1380,
	136, 1380,
	-2, 1592,
	-1, 1688,
	68, 1360,
	136, 1360,
	-2, 1578,
	-1, 1689,
	68, 1389,
	136, 1389,
	-2, 1549,
	-1, 1690,
	68, 1389,
	136, 1389,
	-2, 1577,
	-1, 1691,
	68, 1389,
	136, 1389,
	-2, 1439,
	-1, 1692,
	68, 1387,
	136, 1387,
	-2, 1568,
	-1, 1693,
	68, 1384,
	136, 1384,
	-2, 1461,
	-1, 1694,
	67, 1342,
	68, 1342,
	136, 1342,
	360, 1342,
	361, 1342,
	362, 1342,
	-2, 1420,
	-1, 1695,
	67, 1343,
	68, 1343,
	136, 1343,
	360, 1343,
	361, 1343,
	362, 1343,
	-2, 1422,
	-1, 1696,
	67, 1346,
	68, 1346,
	136, 1346,
	360, 1346,
	361, 1346,
	362, 1346,
	-2, 1550,
	-1, 1697,
	67, 1348,
	68, 1348,
	136, 1348,
	360, 1348,
	361, 1348,
	362, 1348,
	-2, 1533,
	-1, 1698,
	67, 1350,
	68, 1350,
	136, 1350,
	360, 1350,
	361, 1350,
	362, 1350,
	-2, 1482,
	-1, 1699,
	67, 1352,
	68, 1352,
	136, 1352,
	360, 1352,
	361, 1352,
	362, 1352,
	-2, 1465,
	-1, 1700,
	67, 1353,
	68, 1353,
	136, 1353,
	360, 1353,
	361, 1353,
	362, 1353,
	-2, 1466,
	-1, 1701,
	67, 1355,
	68, 1355,
	136, 1355,
	360, 1355,
	361, 1355,
	362, 1355,
	-2, 1419,
	-1, 1702,
	68, 1394,
	136, 1394,
	360, 1394,
	361, 1394,
	362, 1394,
	-2, 1444,
	-1, 1703,
	68, 1394,
	136, 1394,
	360, 1394,
	361, 1394,
	362, 1394,
	-2, 1457,
	-1, 1704,
	68, 1397,
	136, 1397,
	360, 1397,
	361, 1397,
	362, 1397,
	-2, 1440,
	-1, 1705,
	68, 1394,
	136, 1394,
	360, 1394,
	361, 1394,
	362, 1394,
	-2, 1518,
	-1, 1718,
	1, 825,
	68, 825,
	546, 825,
	-2, 832,
	-1, 1824,
	21, 580,
	-2, 672,
	-1, 1993,
	1, 826,
	68, 826,
	546, 826,
	-2, 832,
	-1, 2005,
	65, 488,
	136, 488,
	-2, 963,
	-1, 2023,
	278, 1027,
	-2, 1006,
	-1, 2273,
	278, 1027,
	-2, 1007,
	-1, 2398,
	88, 832,
	131, 832,
	170, 832,
	173, 832,
	-2, 911,
	-1, 2401,
	88, 832,
	131, 832,
	170, 832,
	173, 832,
	-2, 911,
	-1, 2411,
	65, 488,
	136, 488,
	-2, 964,
	-1, 2505,
	88, 832,
	131, 832,
	170, 832,
	173, 832,
	-2, 912,
	-1, 2793,
	68, 883,
	136, 883,
	-2, 832,
	-1, 2797,
	68, 883,
	136, 883,
	-2, 832,
	-1, 2811,
	68, 887,
	136, 887,
	-2, 832,
	-1, 2816,
	68, 888,
	136, 888,
	-2, 832,
}

const yyPrivate = 57344

const yyLast = 32733

var yyAct = [...]int{
	493, 2797, 1127, 1424, 2776, 2796, 2805, 472, 1189, 2687,
	474, 2735, 495, 2705, 2727, 2472, 2563, 2477, 2285, 2646,
	1657, 2647, 2614, 1035, 2537, 2351, 2630, 2634, 2498, 2557,
	612, 2352, 891, 2497, 2579, 152, 2499, 2475, 2547, 1340,
	1384, 2525, 393, 393, 2008, 523, 1185, 1386, 393, 409,
	416, 2504, 2250, 416, 1192, 1090, 2467, 2087, 2421, 1486,
	2073, 2088, 2086, 2381, 2295, 1754, 2274, 1456, 2083, 476,
	2080, 1818, 1889, 2349, 1525, 1556, 427, 1673, 2344, 1759,
	2109, 2327, 2225, 2222, 1499, 2220, 2294, 421, 719, 755,
	1727, 2248, 1671, 1663, 1331, 1888, 471, 995, 1013, 465,
	1427, 607, 466, 2166, 2127, 1994, 1552, 1533, 1350, 414,
	32, 1479, 1551, 1930, 1534, 1526, 650, 725, 1459, 1819,
	1972, 2027, 1011, 2123, 1976, 1856, 1755, 1807, 1421, 1043,
	3, 1126, 729, 45, 413, 20, 410, 9, 1336, 411,
	7, 1726, 1358, 607, 929, 1371, 728, 31, 1188, 412,
	8, 1183, 1584, 1669, 1044, 1121, 1553, 1457, 464, 475,
	1099, 1711, 1024, 151, 1394, 1645, 1238, 1483, 1395, 1931,
	1563, 1222, 1174, 1532, 405, 772, 723, 473, 1529, 1511,
	1341, 45, 102, 483, 974, 1182, 711, 1412, 1082, 1826,
	1020, 402, 1771, 1370, 649, 609, 1243, 1069, 429, 1244,
	17, 10, 5, 1036, 1120, 145, 712, 148, 415, 993,
	666, 430, 1570, 647, 1891, 2160, 2160, 150, 1560, 389,
	2553, 611, 2548, 2468, 677, 2350, 1354, 2623, 892, 1528,
	886, 610, 149, 2589, 149, 149, 149, 620, 41, 137,
	114, 149, 792, 41, 137, 114, 149, 1876, 1557, 2489,
	2490, 398, 1141, 149, 1134, 41, 137, 114, 149, 149,
	32, 419, 1071, 2598, 1884, 149, 2189, 425, 1138, 1568,
	1131, 101, 692, 1842, 1175, 691, 2590, 1179, 1715, 826,
	2678, 751, 2142, 45, 1843, 20, 1497, 9, 1974, 1140,
	7, 1133, 146, 146, 2135, 101, 426, 31, 146, 1159,
	8, 1178, 597, 146, 596, 598, 599, 606, 600, 601,
	146, 1467, 1468, 1072, 2723, 146, 146, 1857, 1032, 1041,
	1042, 944, 146, 807, 2650, 2651, 808, 687, 1039, 726,
	2721, 621, 1038, 1041, 1042, 1408, 829, 830, 831, 828,
	819, 1973, 1191, 824, 722, 721, 1052, 2624, 2625, 1053,
	1639, 2709, 2710, 2353, 810, 2555, 2128, 2616, 696, 2558,
	2559, 2560, 2561, 2129, 2616, 2130, 2485, 2619, 1264, 2551,
	2353, 1871, 766, 2629, 1194, 693, 2362, 1180, 1480, 613,
	2382, 1564, 1472, 1170, 2389, 1798, 2571, 2155, 1710, 2234,
	2236, 1642, 393, 1325, 1324, 1964, 2495, 2226, 1177, 822,
	823, 2292, 393, 765, 795, 2153, 821, 1881, 2077, 1800,
	2574, 2492, 2241, 775, 1200, 1203, 1204, 1803, 416, 416,
	944, 393, 2230, 932, 2716, 1201, 805, 2247, 2725, 760,
	762, 2677, 1055, 113, 695, 147, 775, 2254, 2001, 764,
	2639, 2231, 2232, 952, 956, 958, 960, 962, 963, 965,
	418, 969, 966, 967, 968, 135, 2233, 947, 948, 949,
	950, 930, 931, 953, 2649, 933, 417, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 945, 951, 1193,
	862, 2586, 2441, 2635, 759, 806, 955, 957, 959, 961,
	964, 2484, 2790, 1030, 2806, 1979, 2744, 2486, 2720, 2685,
	2686, 787, 2689, 1569, 694, 2751, 1176, 2539, 1019, 2680,
	2681, 2689, 2605, 2434, 1278, 2755, 2228, 761, 1495, 1496,
	1260, 1781, 932, 946, 1257, 724, 922, 1064, 1259, 1256,
	1258, 1262, 1263, 1780, 817, 818, 1261, 2425, 2309, 45,
	45, 1985, 952, 956, 958, 960, 962, 963, 965, 1078,
	969, 966, 967, 968, 1077, 809, 947, 948, 949, 950,
	930, 931, 953, 785, 933, 1057, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 945, 951, 1054, 2429,
	1018, 768, 769, 1034, 1033, 955, 957, 959, 961, 964,
	1017, 726, 2777, 1558, 777, 776, 1476, 2580, 1558, 1558,
	424, 1573, 1575, 1576, 2526, 2527, 2528, 2530, 2529, 1988,
	1989, 1990, 1991, 2807, 467, 2447, 2448, 777, 776, 2801,
	1760, 1763, 946, 991, 152, 994, 780, 781, 2366, 2159,
	2813, 756, 2587, 2730, 784, 460, 770, 2205, 462, 971,
	2403, 2588, 1585, 461, 2111, 2113, 1202, 2726, 996, 650,
	425, 1904, 1905, 2613, 2626, 2627, 864, 865, 866, 867,
	726, 1070, 1877, 792, 1767, 1041, 1042, 800, 868, 1833,
	802, 1267, 1268, 1269, 1270, 1271, 1272, 1265, 1266, 2572,
	2156, 1041, 1042, 923, 1040, 42, 2237, 1571, 2227, 1037,
	2679, 2538, 1481, 393, 1559, 1066, 610, 42, 803, 1031,
	2058, 1561, 1001, 2158, 2229, 1763, 1005, 1004, 1003, 115,
	420, 115, 115, 115, 607, 607, 607, 2491, 115, 1094,
	1094, 786, 393, 115, 997, 998, 999, 1000, 2496, 1002,
	115, 1885, 2216, 1006, 1572, 115, 115, 1473, 1171, 416,
	994, 152, 115, 1124, 1124, 2800, 791, 1101, 1764, 2168,
	2167, 2731, 1008, 1757, 1128, 688, 2115, 1758, 1761, 1136,
	1028, 902, 903, 2427, 688, 1092, 1092, 2426, 1046, 1047,
	796, 1049, 1050, 1051, 1978, 1096, 954, 1830, 724, 1157,
	644, 645, 646, 1075, 1142, 1832, 1831, 992, 702, 2430,
	2431, 1766, 1094, 798, 1094, 765, 1770, 1768, 2245, 812,
	2812, 1769, 813, 2112, 1470, 801, 804, 1775, 1471, 1762,
	1152, 1153, 1021, 1025, 1025, 1025, 976, 1073, 1074, 1829,
	1469, 978, 1026, 1027, 698, 700, 699, 1982, 1983, 797,
	815, 1190, 1764, 1574, 1021, 2512, 1021, 690, 701, 642,
	689, 1981, 704, 703, 1616, 611, 690, 1615, 1464, 689,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1010, 1065, 1816, 1132, 1233, 1234, 2819, 1139,
	1056, 1666, 1058, 2818, 1242, 954, 2728, 2729, 2756, 1045,
	827, 2324, 1048, 1655, 1281, 1282, 1283, 1291, 2809, 1166,
	392, 392, 2791, 2259, 1667, 1668, 400, 1297, 1298, 799,
	1187, 1156, 811, 45, 1117, 1088, 1089, 1300, 2786, 1155,
	1305, 1306, 45, 2320, 1165, 827, 1162, 792, 1076, 1161,
	1085, 1086, 1087, 607, 2246, 2006, 2059, 2061, 2062, 2063,
	2060, 1205, 1102, 1859, 2399, 398, 827, 2780, 816, 1651,
	1184, 827, 1168, 1387, 2779, 1148, 1143, 1115, 1125, 1116,
	2760, 1475, 829, 830, 831, 828, 2810, 1876, 1595, 1387,
	1566, 814, 1817, 2737, 2007, 1713, 1144, 705, 1326, 2699,
	1817, 1347, 2657, 744, 749, 750, 2787, 697, 611, 2652,
	1164, 1163, 1160, 2607, 829, 830, 831, 828, 614, 1181,
	2606, 829, 830, 831, 828, 1348, 393, 1654, 1369, 1094,
	1373, 1290, 1375, 1376, 1186, 1566, 2603, 393, 1273, 1274,
	650, 1277, 1566, 1385, 1172, 1969, 2602, 1094, 1566, 1292,
	1022, 1066, 2601, 1966, 1864, 1329, 409, 1332, 1333, 1594,
	1299, 2738, 1301, 1351, 1231, 1232, 2187, 2700, 1224, 2600,
	2576, 1844, 1557, 2575, 1749, 1407, 2007, 2576, 2449, 1656,
	2311, 2608, 1514, 1413, 1413, 2106, 1066, 1066, 1731, 1066,
	1368, 1712, 393, 1817, 1369, 1369, 1411, 1620, 1094, 1454,
	1466, 1955, 1548, 1173, 2576, 1276, 1400, 1374, 2388, 2324,
	607, 1953, 1094, 832, 2576, 1951, 790, 1338, 1339, 1493,
	2576, 1406, 861, 1009, 1409, 1410, 1949, 614, 1936, 1892,
	870, 1377, 1378, 1379, 1302, 827, 1236, 2576, 393, 1369,
	1094, 2576, 1504, 393, 393, 1507, 1844, 1393, 2312, 1023,
	1510, 1874, 875, 1817, 1516, 1079, 1450, 1451, 1868, 1321,
	789, 1866, 1402, 1403, 1291, 1291, 1536, 2774, 1861, 1956,
	758, 1291, 1291, 746, 747, 748, 1543, 1372, 1343, 1954,
	1346, 1730, 1415, 1950, 1396, 1477, 1398, 1399, 1652, 1624,
	2739, 1355, 1623, 1614, 1950, 1390, 827, 827, 1349, 1404,
	1385, 1501, 1021, 1512, 1094, 1555, 1605, 1604, 1603, 1565,
	2414, 1149, 2260, 1828, 1401, 2125, 2009, 1503, 1482, 1731,
	1879, 1878, 1388, 1389, 792, 1025, 1862, 1505, 1506, 1867,
	1870, 844, 790, 1405, 1382, 1381, 1862, 1746, 1392, 1611,
	1549, 1596, 1547, 1537, 972, 1519, 1372, 1397, 2255, 1731,
	1365, 1417, 1145, 1418, 1416, 2640, 1651, 827, 1578, 2264,
	827, 827, 970, 873, 778, 758, 753, 1582, 1583, 2769,
	757, 1414, 2513, 1492, 827, 827, 827, 1566, 1531, 1150,
	763, 758, 1280, 1279, 2150, 1531, 1490, 1491, 1184, 1455,
	1083, 1453, 1022, 2757, 2406, 1772, 1478, 2404, 2641, 783,
	2325, 1084, 2316, 2313, 1487, 1488, 1489, 2256, 1081, 1014,
	2161, 2078, 45, 1015, 1865, 2514, 1498, 1835, 767, 1899,
	1239, 1239, 1061, 1591, 1063, 1502, 1067, 1068, 847, 848,
	849, 850, 851, 844, 1367, 1520, 1621, 2407, 831, 828,
	2405, 2674, 828, 1628, 2437, 1540, 726, 2436, 1908, 1538,
	2257, 2131, 2037, 726, 1545, 2036, 1546, 1541, 2031, 1542,
	2026, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1295,
	2754, 2418, 1119, 2795, 1311, 1550, 969, 966, 967, 968,
	1296, 2783, 1913, 2745, 1912, 1911, 1909, 1123, 1123, 1080,
	2740, 1023, 2690, 465, 2493, 765, 1706, 842, 852, 853,
	845, 846, 847, 848, 849, 850, 851, 844, 393, 393,
	393, 2665, 1728, 2386, 2753, 1586, 829, 830, 831, 828,
	1577, 1923, 1735, 1066, 2642, 1901, 1230, 2069, 1579, 1658,
	1659, 1674, 1739, 2494, 1590, 1580, 1581, 2591, 726, 2067,
	1224, 1227, 1229, 1226, 2644, 1228, 1066, 2549, 1910, 1599,
	1303, 1304, 2387, 765, 1307, 1308, 1309, 1310, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 2068, 829, 830, 831,
	828, 1737, 1195, 1196, 1197, 1198, 1199, 2519, 2066, 2065,
	1740, 1741, 2055, 2516, 829, 830, 831, 828, 460, 1753,
	2515, 462, 1821, 1821, 1466, 1821, 461, 829, 830, 831,
	828, 2408, 496, 505, 2385, 1750, 2235, 1607, 497, 2208,
	504, 498, 502, 501, 499, 500, 1240, 1241, 2064, 1707,
	1638, 2054, 1275, 1094, 393, 829, 830, 831, 828, 2207,
	1285, 1647, 2146, 1742, 2053, 2052, 2051, 2180, 2048, 765,
	152, 2042, 2039, 1124, 2038, 1466, 1774, 1650, 1851, 1649,
	1853, 1660, 845, 846, 847, 848, 849, 850, 851, 844,
	1606, 1825, 506, 1648, 1823, 1743, 1827, 1644, 1744, 1840,
	1643, 1062, 1748, 1714, 1146, 1674, 1914, 1915, 1872, 989,
	2081, 1555, 2179, 829, 830, 831, 828, 1736, 1094, 1848,
	1094, 2715, 1094, 2221, 503, 2473, 1025, 765, 1855, 2711,
	1100, 2675, 2611, 2573, 1745, 829, 830, 831, 828, 2550,
	2503, 2471, 1850, 2469, 1747, 2633, 2453, 2451, 1352, 2074,
	2593, 2420, 1356, 2384, 2383, 1359, 1094, 1917, 2380, 2371,
	2365, 1593, 1890, 1886, 508, 103, 1882, 2319, 829, 830,
	831, 828, 1924, 2317, 2307, 1801, 2306, 1094, 2213, 1773,
	2212, 1776, 1777, 1778, 1779, 2206, 1926, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 2562, 1092, 2157, 2808, 2118, 726, 2056, 2049, 2045,
	399, 1916, 1928, 103, 1841, 1836, 1837, 1838, 829, 830,
	831, 828, 1846, 1092, 2044, 2043, 765, 1653, 1849, 553,
	552, 1903, 1925, 1847, 1883, 835, 836, 837, 838, 839,
	840, 841, 833, 1646, 1897, 843, 842, 852, 853, 845,
	846, 847, 848, 849, 850, 851, 844, 1352, 2479, 1522,
	1361, 1147, 1967, 1352, 1352, 2478, 1184, 1875, 1873, 1880,
	2768, 1957, 901, 1094, 897, 896, 1986, 874, 754, 2401,
	1369, 829, 830, 831, 828, 2400, 2005, 2398, 829, 830,
	831, 828, 2011, 1893, 1894, 2446, 2375, 2374, 1932, 1907,
	2370, 149, 2357, 1937, 137, 114, 2343, 2020, 2342, 2368,
	2265, 727, 1970, 2185, 2178, 103, 2170, 2025, 829, 830,
	831, 828, 2165, 1896, 2122, 1968, 1965, 2033, 2034, 2035,
	1952, 1333, 829, 830, 831, 828, 1948, 1947, 1629, 1958,
	1619, 1617, 1996, 1613, 1612, 1821, 2014, 1610, 1601, 2183,
	2016, 829, 830, 831, 828, 2070, 1598, 1597, 146, 1961,
	2182, 1521, 2002, 1320, 1369, 765, 1466, 1466, 1466, 1466,
	1294, 2012, 829, 830, 831, 828, 1293, 765, 1466, 1995,
	1284, 1821, 1106, 829, 830, 831, 828, 1104, 149, 1338,
	1339, 2023, 2762, 2752, 1094, 2013, 2749, 2747, 2028, 32,
	2028, 2089, 2017, 2018, 1366, 393, 393, 2664, 2609, 893,
	1328, 1588, 2535, 2089, 1592, 1380, 2523, 2029, 1984, 2520,
	2010, 1372, 45, 1291, 20, 1291, 9, 2004, 2141, 7,
	2461, 2145, 2181, 2459, 2102, 2019, 31, 1094, 2022, 8,
	2152, 2024, 2030, 1945, 1343, 146, 1346, 2334, 1944, 2444,
	2443, 2442, 2439, 1602, 2015, 829, 830, 831, 828, 2433,
	2393, 1609, 1337, 1975, 2050, 1330, 829, 830, 831, 828,
	1419, 829, 830, 831, 828, 1012, 2071, 2032, 2075, 1622,
	1351, 1999, 1625, 1626, 1627, 2140, 2079, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1998, 2103, 1640, 2138, 1997,
	2105, 2104, 611, 2101, 2144, 1342, 2116, 2119, 1345, 1334,
	1946, 2173, 1860, 2175, 2149, 894, 1500, 1834, 1796, 2154,
	2114, 1500, 1500, 2090, 2091, 2092, 2093, 2040, 2041, 2134,
	765, 2136, 2139, 2046, 2047, 2132, 2224, 2137, 2143, 2126,
	1729, 1225, 146, 2148, 1508, 1364, 2239, 2162, 393, 1363,
	1335, 2076, 2163, 1169, 1135, 973, 2440, 1943, 765, 765,
	765, 921, 1732, 2171, 2172, 920, 1674, 1466, 1728, 2169,
	2263, 103, 103, 727, 919, 918, 2267, 917, 2176, 2177,
	829, 830, 831, 828, 916, 915, 914, 2296, 2298, 913,
	2296, 2296, 912, 911, 1753, 1753, 1753, 2303, 910, 909,
	908, 1094, 1094, 2190, 1942, 2215, 907, 2191, 2192, 2193,
	2194, 2174, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2214, 2266, 2217, 2209, 906, 2268, 2269, 829, 830, 831,
	828, 905, 393, 904, 2261, 900, 899, 2224, 898, 895,
	890, 2219, 860, 889, 2244, 1369, 1369, 1092, 1092, 2293,
	2251, 2252, 2297, 2258, 1995, 887, 2304, 2305, 2262, 2243,
	886, 885, 1352, 1352, 1352, 852, 853, 845, 846, 847,
	848, 849, 850, 851, 844, 884, 2299, 2300, 2270, 883,
	882, 881, 880, 879, 878, 877, 1917, 1123, 876, 2301,
	872, 2271, 871, 794, 752, 2323, 843, 842, 852, 853,
	845, 846, 847, 848, 849, 850, 851, 844, 2328, 2329,
	2335, 1734, 1717, 2321, 2322, 1618, 2310, 1941, 782, 393,
	2315, 2314, 2318, 1809, 1812, 1813, 1814, 1810, 2695, 1811,
	1815, 1940, 2693, 2648, 2332, 1939, 735, 730, 734, 736,
	829, 830, 831, 828, 2331, 1987, 1845, 1524, 793, 2336,
	2333, 2339, 2340, 2341, 829, 830, 831, 828, 829, 830,
	831, 828, 2095, 740, 2098, 2348, 1900, 733, 2094, 2099,
	2358, 2096, 2794, 1938, 1918, 1919, 2097, 2359, 979, 1869,
	1935, 1863, 1921, 1922, 2360, 2361, 1720, 1721, 1722, 2100,
	85, 1813, 1814, 2364, 2372, 1927, 829, 830, 831, 828,
	2277, 1963, 1369, 829, 830, 831, 828, 1449, 2397, 1934,
	1738, 2464, 44, 2463, 390, 738, 2218, 2210, 2211, 1821,
	1466, 2411, 741, 1322, 2287, 1858, 1352, 43, 1887, 1959,
	1960, 1359, 829, 830, 831, 828, 395, 2280, 975, 731,
	1933, 1129, 1094, 2376, 2275, 2419, 1708, 2462, 2379, 2290,
	2291, 1658, 1659, 393, 2378, 2276, 1509, 394, 396, 788,
	739, 2628, 2298, 829, 830, 831, 828, 2021, 2413, 2412,
	2392, 2391, 1971, 397, 1724, 2415, 1383, 1362, 2416, 2702,
	1929, 1369, 1280, 1279, 1799, 765, 1452, 2410, 2422, 1103,
	2409, 2281, 987, 988, 399, 985, 986, 1060, 732, 2293,
	2417, 1059, 1100, 829, 830, 831, 828, 983, 984, 2466,
	977, 981, 982, 820, 2455, 2338, 1544, 765, 1016, 2763,
	103, 2089, 2683, 2671, 103, 1920, 2445, 2669, 638, 615,
	616, 617, 618, 2450, 2636, 103, 2487, 2621, 2620, 2452,
	2618, 2610, 614, 2454, 103, 2457, 2456, 1898, 829, 830,
	831, 828, 1235, 2089, 765, 1094, 1094, 2546, 2545, 2470,
	765, 2373, 2506, 2355, 2354, 2506, 2346, 980, 737, 614,
	829, 830, 831, 828, 2474, 829, 830, 831, 828, 2345,
	2124, 1387, 2289, 2147, 1756, 2697, 2696, 1029, 1719, 1600,
	779, 1105, 2696, 2488, 2697, 2435, 1753, 2394, 2395, 2396,
	765, 1092, 2422, 765, 765, 765, 2356, 52, 1494, 2283,
	2501, 1098, 2507, 2510, 2502, 2509, 2413, 2517, 2518, 1,
	1385, 1360, 2543, 619, 2107, 2108, 2337, 2110, 1562, 1797,
	1709, 2282, 2284, 2524, 2238, 1352, 2532, 2533, 2534, 2540,
	1352, 2521, 1007, 2531, 2480, 643, 1286, 1154, 1804, 743,
	2570, 774, 1151, 640, 773, 635, 771, 625, 1237, 510,
	2541, 1527, 2072, 2542, 637, 636, 2701, 2734, 2663, 2582,
	2704, 1809, 1812, 1813, 1814, 1810, 2164, 1811, 1815, 1167,
	494, 623, 2612, 2554, 765, 629, 2667, 2568, 615, 616,
	617, 618, 2556, 2476, 1567, 825, 765, 2133, 2184, 2577,
	662, 614, 546, 521, 888, 2584, 2292, 2583, 2592, 1137,
	1130, 2188, 745, 520, 2595, 2390, 1980, 2599, 2278, 2585,
	632, 742, 663, 1641, 2288, 2552, 634, 1323, 1344, 2604,
	633, 1327, 2511, 2402, 2003, 2253, 622, 765, 2000, 2804,
	628, 2622, 2793, 2775, 2761, 2637, 2617, 2615, 2688, 2789,
	2719, 2750, 2483, 2481, 2482, 2743, 2684, 626, 2632, 431,
	1474, 605, 709, 2536, 1523, 2631, 432, 1733, 2676, 2658,
	2661, 2522, 2638, 630, 1716, 631, 2643, 1993, 624, 1992,
	1206, 834, 1223, 2203, 2204, 869, 2662, 2653, 2654, 2655,
	2656, 470, 641, 1589, 2670, 482, 2672, 2673, 2668, 1977,
	2666, 2286, 2117, 51, 50, 49, 48, 2302, 1515, 156,
	512, 155, 2660, 2706, 2682, 492, 627, 491, 490, 489,
	488, 1808, 1806, 1805, 1461, 2708, 1460, 2694, 2692, 2691,
	1513, 1765, 1420, 2645, 1465, 2596, 2698, 2707, 2597, 2432,
	2057, 2428, 2424, 2308, 765, 2505, 2272, 2712, 2273, 2279,
	1723, 2713, 928, 2120, 2121, 924, 926, 927, 925, 1906,
	1902, 2733, 1751, 2722, 2724, 1752, 2249, 1665, 1664, 1662,
	1661, 990, 2732, 2736, 2569, 2377, 1672, 2741, 1670, 765,
	2717, 2330, 2326, 2240, 1535, 1357, 639, 2742, 1962, 2746,
	1462, 2748, 1458, 1802, 1718, 77, 76, 83, 727, 2708,
	2759, 126, 39, 2508, 608, 727, 33, 28, 765, 6,
	765, 2707, 2758, 4, 103, 1190, 2765, 944, 2767, 30,
	2770, 29, 15, 16, 14, 1158, 13, 2736, 2771, 765,
	19, 27, 26, 2778, 25, 2785, 95, 2782, 2788, 94,
	24, 93, 92, 91, 1190, 90, 1190, 652, 23, 12,
	89, 88, 2792, 87, 22, 2367, 82, 2799, 80, 21,
	81, 2803, 2369, 2802, 78, 1190, 79, 2811, 63, 62,
	61, 2814, 74, 2816, 73, 2799, 2817, 2815, 72, 71,
	2803, 149, 70, 41, 137, 114, 69, 68, 661, 60,
	860, 59, 58, 57, 56, 75, 2242, 67, 66, 65,
	64, 142, 55, 54, 53, 111, 112, 110, 130, 688,
	109, 108, 143, 107, 106, 105, 35, 101, 36, 932,
	37, 38, 122, 121, 123, 125, 127, 124, 119, 117,
	2714, 120, 86, 118, 116, 46, 11, 18, 146, 952,
	956, 958, 960, 962, 963, 965, 2, 969, 966, 967,
	968, 0, 0, 947, 948, 949, 950, 930, 931, 953,
	0, 933, 0, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 945, 951, 0, 0, 0, 0, 0,
	1500, 0, 955, 957, 959, 961, 964, 0, 0, 0,
	0, 690, 0, 0, 689, 0, 0, 0, 0, 0,
	1352, 2784, 0, 2458, 0, 0, 2460, 0, 0, 0,
	138, 139, 0, 140, 141, 0, 855, 0, 859, 946,
	2465, 0, 0, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 0, 856, 858, 854, 653, 857, 843, 842,
	852, 853, 845, 846, 847, 848, 849, 850, 851, 844,
	843, 842, 852, 853, 845, 846, 847, 848, 849, 850,
	851, 844, 2766, 680, 1895, 0, 0, 2363, 0, 829,
	830, 831, 828, 0, 0, 0, 0, 0, 113, 136,
	147, 0, 84, 0, 0, 0, 0, 843, 842, 852,
	853, 845, 846, 847, 848, 849, 850, 851, 844, 0,
	135, 129, 128, 0, 0, 0, 0, 47, 0, 0,
	0, 843, 842, 852, 853, 845, 846, 847, 848, 849,
	850, 851, 844, 674, 673, 1447, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 0, 0, 0, 1264, 0, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 2567, 1449,
	654, 683, 0, 0, 0, 131, 132, 133, 0, 2764,
	0, 0, 0, 0, 0, 2578, 0, 0, 0, 1465,
	0, 0, 0, 0, 678, 0, 0, 0, 0, 0,
	0, 144, 1264, 0, 0, 2594, 1429, 0, 0, 0,
	0, 2438, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 134, 0, 97, 679, 684, 843, 842,
	852, 853, 845, 846, 847, 848, 849, 850, 851, 844,
	2186, 0, 0, 669, 0, 667, 671, 687, 0, 2567,
	0, 668, 665, 664, 0, 670, 655, 656, 657, 658,
	659, 660, 0, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 682, 0, 98, 0,
	0, 0, 954, 0, 0, 0, 0, 0, 40, 843,
	842, 852, 853, 845, 846, 847, 848, 849, 850, 851,
	844, 0, 0, 0, 0, 0, 0, 0, 0, 1260,
	0, 0, 676, 1257, 0, 0, 0, 1259, 1256, 1258,
	1262, 1263, 0, 0, 0, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 1423, 0,
	0, 1422, 0, 0, 0, 0, 1433, 0, 0, 0,
	0, 0, 0, 0, 1260, 0, 0, 1437, 1257, 2567,
	0, 0, 1259, 1256, 1258, 1262, 1263, 0, 115, 0,
	1261, 0, 0, 0, 0, 0, 0, 1426, 0, 0,
	0, 1428, 1430, 1432, 1587, 1434, 1435, 1436, 1438, 1439,
	1440, 1442, 1443, 1444, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 843, 842, 852,
	853, 845, 846, 847, 848, 849, 850, 851, 844, 0,
	0, 0, 99, 100, 34, 104, 0, 0, 0, 0,
	0, 0, 0, 1448, 0, 0, 0, 0, 0, 0,
	0, 0, 2773, 0, 0, 0, 0, 0, 0, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1267, 1268, 1269, 1270, 1271, 1272, 1265, 1266, 0, 0,
	1446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1465, 1465, 1465, 1465, 0, 0, 0, 1425, 0, 0,
	0, 0, 1465, 0, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1267, 1268, 1269, 1270, 1271,
	1272, 1265, 1266, 0, 0, 0, 1441, 0, 0, 0,
	0, 0, 0, 1431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 519, 0, 0, 319, 273, 0, 0,
	0, 0, 576, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 103, 509, 553, 552,
	496, 505, 0, 0, 215, 154, 497, 0, 504, 498,
	502, 501, 499, 500, 0, 568, 0, 0, 0, 0,
	0, 0, 468, 481, 2564, 485, 0, 0, 0, 0,
	0, 1465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 478, 479,
	0, 0, 0, 0, 529, 0, 480, 0, 0, 524,
	506, 507, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 503, 527, 531, 227, 590, 525, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 591, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 350, 0, 0, 574, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 526,
	0, 309, 291, 587, 469, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 572, 287,
	0, 0, 586, 567, 569, 570, 573, 577, 578, 579,
	580, 581, 583, 585, 589, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1465, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 2565, 0,
	0, 0, 2566, 0, 588, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 530, 277, 278, 279, 280, 575,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 597, 571, 596, 598, 599, 595, 600,
	601, 582, 487, 0, 534, 593, 592, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 560, 539, 540,
	541, 486, 542, 537, 538, 561, 532, 557, 558, 511,
	535, 543, 556, 544, 559, 562, 563, 602, 603, 550,
	604, 547, 564, 555, 554, 545, 533, 565, 566, 518,
	513, 548, 549, 536, 551, 514, 515, 516, 517, 327,
	528, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 519, 0, 0, 319, 273, 0,
	0, 0, 0, 576, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 509, 553,
	552, 496, 505, 0, 0, 215, 154, 497, 0, 504,
	498, 502, 501, 499, 500, 0, 568, 0, 0, 0,
	0, 0, 0, 468, 481, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	479, 0, 0, 0, 0, 529, 0, 480, 0, 0,
	524, 506, 507, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 503, 527, 531, 227, 590, 525, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 591, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 0, 0, 0, 350, 0, 0, 574,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	526, 0, 309, 291, 587, 469, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 1288, 1287, 1289, 362, 241, 198, 199, 345, 572,
	287, 0, 0, 586, 567, 569, 570, 573, 577, 578,
	579, 580, 581, 583, 585, 589, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 530, 277, 278, 279, 280,
	575, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 597, 571, 596, 598, 599, 595,
	600, 601, 582, 487, 0, 534, 593, 592, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 560, 539,
	540, 541, 486, 542, 537, 538, 561, 532, 557, 558,
	511, 535, 543, 556, 544, 559, 562, 563, 602, 603,
	550, 604, 547, 564, 555, 554, 545, 533, 565, 566,
	518, 513, 548, 549, 536, 551, 514, 515, 516, 517,
	327, 528, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 519, 0, 0, 319, 273,
	0, 0, 0, 0, 576, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 509,
	553, 552, 496, 505, 0, 0, 215, 154, 497, 0,
	504, 498, 502, 501, 499, 500, 0, 568, 0, 0,
	0, 0, 0, 0, 468, 481, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 479, 0, 0, 0, 0, 529, 0, 480, 0,
	0, 524, 506, 507, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 503, 527, 531, 227, 590, 525,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 591, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 0, 350, 0, 0,
	574, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 526, 0, 309, 291, 587, 469, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	572, 287, 0, 0, 586, 567, 569, 570, 573, 577,
	578, 579, 580, 581, 583, 585, 589, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	2565, 0, 0, 0, 2566, 0, 588, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 530, 277, 278, 279,
	280, 575, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 597, 571, 596, 598, 599,
	595, 600, 601, 582, 487, 0, 534, 593, 592, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 560,
	539, 540, 541, 486, 542, 537, 538, 561, 532, 557,
	558, 511, 535, 543, 556, 544, 559, 562, 563, 602,
	603, 550, 604, 547, 564, 555, 554, 545, 533, 565,
	566, 518, 513, 548, 549, 536, 551, 514, 515, 516,
	517, 327, 528, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 234,
	1353, 0, 259, 0, 0, 0, 519, 0, 0, 319,
	273, 0, 0, 0, 0, 576, 584, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 477, 0, 0,
	509, 553, 552, 496, 505, 0, 0, 215, 154, 497,
	0, 504, 498, 502, 501, 499, 500, 0, 568, 0,
	0, 0, 0, 0, 0, 468, 481, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 479, 0, 0, 0, 0, 529, 0, 480,
	0, 0, 1485, 506, 507, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 503, 527, 531, 227, 590,
	525, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 591, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 350, 0,
	0, 574, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 526, 0, 309, 291, 587, 469, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 572, 287, 0, 0, 586, 567, 569, 570, 573,
	577, 578, 579, 580, 581, 583, 585, 589, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 530, 277, 278,
	279, 280, 575, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 597, 571, 596, 598,
	599, 595, 600, 601, 582, 487, 0, 534, 593, 592,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	560, 539, 540, 541, 486, 542, 537, 538, 561, 532,
	557, 558, 511, 535, 543, 556, 544, 559, 562, 563,
	602, 603, 550, 604, 547, 564, 555, 554, 545, 533,
	565, 566, 518, 513, 548, 549, 536, 551, 514, 515,
	516, 517, 149, 327, 528, 358, 359, 360, 381, 344,
	0, 231, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 863, 0,
	0, 319, 273, 0, 0, 0, 0, 576, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 509, 553, 552, 496, 505, 0, 0, 215,
	154, 497, 0, 504, 498, 502, 501, 499, 500, 0,
	568, 0, 0, 0, 0, 0, 0, 468, 481, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 479, 0, 0, 0, 0, 529,
	0, 480, 0, 0, 524, 506, 507, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 503, 527, 531,
	227, 590, 525, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 591, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 0, 0, 0,
	350, 0, 0, 574, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 526, 0, 309, 291, 587, 469,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 572, 287, 0, 0, 586, 567, 569,
	570, 573, 577, 578, 579, 580, 581, 583, 585, 589,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 530,
	277, 278, 279, 280, 575, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 597, 571,
	596, 598, 599, 595, 600, 601, 582, 487, 0, 534,
	593, 592, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 115,
	301, 239, 560, 539, 540, 541, 486, 542, 537, 538,
	561, 532, 557, 558, 511, 535, 543, 556, 544, 559,
	562, 563, 602, 603, 550, 604, 547, 564, 555, 554,
	545, 533, 565, 566, 518, 513, 548, 549, 536, 551,
	514, 515, 516, 517, 327, 528, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 234, 2772, 0, 259, 0, 0, 0, 519,
	0, 0, 319, 273, 0, 0, 0, 0, 576, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 509, 553, 552, 496, 505, 0, 0,
	215, 154, 497, 0, 504, 498, 502, 501, 499, 500,
	0, 568, 0, 0, 0, 0, 0, 0, 468, 481,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 479, 0, 0, 0, 0,
	529, 0, 480, 0, 0, 524, 506, 507, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 503, 527,
	531, 227, 590, 525, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 591,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	0, 350, 0, 0, 574, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 526, 0, 309, 291, 587,
	469, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 572, 287, 0, 0, 586, 567,
	569, 570, 573, 577, 578, 579, 580, 581, 583, 585,
	589, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	530, 277, 278, 279, 280, 575, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 597,
	571, 596, 598, 599, 595, 600, 601, 582, 487, 0,
	534, 593, 592, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 560, 539, 540, 541, 486, 542, 537,
	538, 561, 532, 557, 558, 511, 535, 543, 556, 544,
	559, 562, 563, 602, 603, 550, 604, 547, 564, 555,
	554, 545, 533, 565, 566, 518, 513, 548, 549, 536,
	551, 514, 515, 516, 517, 327, 528, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 234, 1353, 0, 259, 0, 0, 0,
	519, 0, 0, 319, 273, 0, 0, 0, 0, 576,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 509, 553, 552, 496, 505, 0,
	0, 215, 154, 497, 0, 504, 498, 502, 501, 499,
	500, 0, 568, 0, 0, 0, 0, 0, 0, 468,
	481, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 479, 0, 0, 0,
	0, 529, 0, 480, 0, 0, 524, 506, 507, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 503,
	527, 531, 227, 590, 525, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	591, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 350, 0, 0, 574, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 526, 0, 309, 291,
	587, 469, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 572, 287, 0, 0, 586,
	567, 569, 570, 573, 577, 578, 579, 580, 581, 583,
	585, 589, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 530, 277, 278, 279, 280, 575, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	597, 571, 596, 598, 599, 595, 600, 601, 582, 487,
	0, 534, 593, 592, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 560, 539, 540, 541, 486, 542,
	537, 538, 561, 532, 557, 558, 511, 535, 543, 556,
	544, 559, 562, 563, 602, 603, 550, 604, 547, 564,
	555, 554, 545, 533, 565, 566, 518, 513, 548, 549,
	536, 551, 514, 515, 516, 517, 327, 528, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 519, 0, 0, 319, 273, 0, 0, 0, 0,
	576, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 509, 553, 552, 496, 505,
	0, 0, 215, 154, 497, 0, 504, 498, 502, 501,
	499, 500, 0, 568, 0, 0, 0, 0, 0, 0,
	468, 481, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 479, 1122, 0,
	0, 0, 529, 0, 480, 0, 0, 524, 506, 507,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	503, 527, 531, 227, 590, 525, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 591, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	0, 0, 0, 350, 0, 0, 574, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 526, 0, 309,
	291, 587, 469, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 572, 287, 0, 0,
	586, 567, 569, 570, 573, 577, 578, 579, 580, 581,
	583, 585, 589, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 530, 277, 278, 279, 280, 575, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 597, 571, 596, 598, 599, 595, 600, 601, 582,
	487, 0, 534, 593, 592, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 560, 539, 540, 541, 486,
	542, 537, 538, 561, 532, 557, 558, 511, 535, 543,
	556, 544, 559, 562, 563, 602, 603, 550, 604, 547,
	564, 555, 554, 545, 533, 565, 566, 518, 513, 548,
	549, 536, 551, 514, 515, 516, 517, 0, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 327, 528, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 519, 0, 0, 319, 273, 0, 0, 0,
	0, 576, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 509, 553, 552, 496,
	505, 0, 0, 215, 154, 497, 0, 504, 498, 502,
	501, 499, 500, 0, 568, 0, 0, 0, 0, 0,
	0, 468, 481, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 479, 0,
	0, 0, 0, 529, 0, 480, 0, 0, 524, 506,
	507, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 503, 527, 531, 227, 590, 525, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 591, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 0, 0, 350, 0, 0, 574, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 526, 0,
	309, 291, 587, 469, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 572, 287, 0,
	0, 586, 567, 569, 570, 573, 577, 578, 579, 580,
	581, 583, 585, 589, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 530, 277, 278, 279, 280, 575, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 597, 571, 596, 598, 599, 595, 600, 601,
	582, 487, 0, 534, 593, 592, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 560, 539, 540, 541,
	486, 542, 537, 538, 561, 532, 557, 558, 511, 535,
	543, 556, 544, 559, 562, 563, 602, 603, 550, 604,
	547, 564, 555, 554, 545, 533, 565, 566, 518, 513,
	548, 549, 536, 551, 514, 515, 516, 517, 327, 528,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 519, 0, 0, 319, 273, 0, 0,
	0, 0, 576, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 509, 553, 552,
	496, 505, 0, 0, 215, 154, 497, 0, 504, 498,
	502, 501, 499, 500, 0, 568, 0, 0, 0, 0,
	0, 0, 468, 481, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 479,
	0, 0, 0, 0, 529, 0, 480, 0, 0, 524,
	506, 507, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 503, 527, 531, 227, 590, 525, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 591, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 350, 0, 0, 574, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 526,
	0, 309, 291, 587, 469, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 572, 287,
	0, 0, 586, 567, 569, 570, 573, 577, 578, 579,
	580, 581, 583, 585, 589, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 530, 277, 278, 279, 280, 575,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 597, 571, 596, 598, 599, 595, 600,
	601, 582, 487, 0, 534, 593, 592, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 560, 539, 540,
	541, 486, 542, 537, 538, 561, 532, 557, 558, 511,
	535, 543, 556, 544, 559, 562, 563, 602, 603, 550,
	604, 547, 564, 555, 554, 545, 533, 565, 566, 518,
	513, 548, 549, 536, 551, 514, 515, 516, 517, 327,
	528, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	0, 0, 0, 484, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 519, 0, 0, 319, 273, 0,
	0, 0, 0, 576, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 509, 553,
	552, 496, 505, 0, 0, 215, 154, 497, 0, 504,
	498, 502, 501, 499, 500, 0, 568, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	479, 0, 0, 0, 0, 529, 0, 480, 0, 0,
	524, 506, 507, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 503, 527, 531, 227, 590, 525, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 591, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 0, 0, 0, 350, 0, 0, 574,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	526, 0, 309, 291, 587, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 1208, 1209, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 572,
	287, 0, 0, 586, 567, 569, 570, 573, 577, 578,
	579, 580, 581, 583, 585, 589, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 530, 277, 278, 279, 280,
	575, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 597, 571, 596, 598, 599, 595,
	600, 601, 582, 487, 0, 534, 593, 592, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 560, 539,
	540, 541, 486, 542, 537, 538, 561, 532, 557, 558,
	511, 535, 543, 556, 544, 559, 562, 563, 602, 603,
	550, 604, 547, 564, 555, 554, 545, 533, 565, 566,
	518, 513, 548, 549, 536, 551, 514, 515, 516, 517,
	327, 528, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 519, 0, 0, 319, 273,
	0, 0, 0, 0, 576, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	553, 552, 496, 505, 0, 0, 215, 154, 497, 0,
	504, 498, 502, 501, 499, 500, 0, 568, 0, 0,
	0, 0, 0, 0, 468, 481, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 479, 0, 0, 0, 0, 529, 0, 480, 0,
	0, 524, 506, 507, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 503, 527, 531, 227, 590, 525,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 591, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 0, 350, 0, 0,
	574, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 526, 0, 309, 291, 587, 469, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	572, 287, 0, 0, 586, 567, 569, 570, 573, 577,
	578, 579, 580, 581, 583, 585, 589, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 530, 277, 278, 279,
	280, 575, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 597, 571, 596, 598, 599,
	595, 600, 601, 582, 487, 0, 534, 593, 592, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 560,
	539, 540, 541, 486, 542, 537, 538, 561, 532, 557,
	558, 511, 535, 543, 556, 544, 559, 562, 563, 602,
	603, 550, 604, 547, 564, 555, 554, 545, 533, 565,
	566, 518, 513, 548, 549, 536, 551, 514, 515, 516,
	517, 327, 528, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 519, 0, 0, 319,
	273, 0, 0, 0, 0, 576, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	509, 553, 552, 496, 505, 0, 0, 215, 154, 497,
	0, 504, 498, 502, 501, 499, 500, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 479, 0, 0, 0, 0, 529, 0, 480,
	0, 0, 524, 506, 507, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 503, 527, 531, 227, 590,
	525, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 591, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 350, 0,
	0, 574, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 526, 0, 309, 291, 587, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 572, 287, 0, 0, 586, 567, 569, 570, 573,
	577, 578, 579, 580, 581, 583, 585, 589, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 530, 277, 278,
	279, 280, 575, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 597, 571, 596, 598,
	599, 595, 600, 601, 582, 487, 0, 534, 593, 592,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	560, 539, 540, 541, 486, 542, 537, 538, 561, 532,
	557, 558, 511, 535, 543, 556, 544, 559, 562, 563,
	602, 603, 550, 604, 547, 564, 555, 554, 545, 533,
	565, 566, 518, 513, 548, 549, 536, 551, 514, 515,
	516, 517, 0, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 149, 327, 41, 137, 114, 0, 0, 0,
	0, 0, 0, 0, 289, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 404, 406, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 115,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 932, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 1694, 1696, 1697, 1698, 1699,
	1700, 1701, 0, 1705, 1702, 1703, 1704, 286, 0, 1689,
	1690, 1691, 1692, 930, 1675, 1695, 0, 1676, 285, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1693, 297, 263, 298, 250, 275, 274, 276, 955, 957,
	959, 961, 964, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 1688, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 954, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 1760, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 350, 0, 0, 0, 1757, 0, 1756, 323,
	1758, 1761, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 1762, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 1518, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 829, 830, 831, 828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 708, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 716, 717, 0,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 690, 348, 210, 689,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 706, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 707, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 710, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 718, 713, 714,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 149, 327,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 101, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 1539, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 115, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	149, 327, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 101, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 1530, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 115, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 149, 327, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 101, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1463,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 115,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 716, 717, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 690, 348, 210, 689, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 718, 713, 714, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 2085, 0, 0, 2084, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 1097, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 1095, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 1091, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 1095,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2703, 0, 153, 553, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 1095, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2423, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 1095, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 1822, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 1839, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 1095, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2781, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 553, 0, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2718, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 2659, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2500, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 2544,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1463, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 2223, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 1095, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 1822, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	1852, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 0,
	0, 0, 358, 359, 360, 381, 344, 327, 231, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	1095, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 1391, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 1118,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 422, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 423, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 463, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	1447, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 1449, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 2798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1429, 0, 0, 1447, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 1449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1429, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 1447, 194, 195, 196, 197, 0, 0, 0, 358,
	359, 360, 381, 344, 2581, 231, 0, 0, 0, 0,
	0, 1433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1437, 0, 0, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 1428, 1430, 1432, 0,
	1434, 1435, 1436, 1438, 1439, 1440, 1442, 1443, 1444, 1445,
	0, 0, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 0, 441, 448, 438, 0,
	0, 0, 0, 0, 0, 1433, 0, 0, 445, 446,
	0, 447, 451, 0, 0, 433, 1437, 0, 1448, 0,
	0, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	1428, 1430, 1432, 0, 1434, 1435, 1436, 1438, 1439, 1440,
	1442, 1443, 1444, 1445, 460, 1446, 0, 462, 0, 0,
	0, 0, 461, 442, 0, 441, 448, 438, 0, 0,
	0, 0, 1425, 0, 0, 0, 0, 445, 446, 0,
	447, 451, 0, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 1448, 0, 456, 0, 442, 0, 441, 448,
	438, 1441, 0, 0, 0, 0, 0, 0, 1431, 0,
	445, 446, 0, 447, 451, 0, 0, 433, 0, 0,
	0, 0, 1433, 460, 0, 0, 462, 456, 0, 1446,
	0, 461, 0, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1425, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 1428, 1430, 1432,
	0, 1434, 1435, 1436, 1438, 1439, 1440, 1442, 1443, 1444,
	1445, 0, 0, 0, 0, 1441, 0, 0, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 436, 435, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 436, 435, 1425, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 459,
	0, 0, 1441, 434, 436, 435, 437, 0, 0, 1431,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 459, 0, 0, 0, 439, 443, 449, 437,
	450, 452, 0, 0, 453, 454, 455, 0, 0, 457,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 439, 443, 449, 0, 450,
	452, 0, 0, 453, 454, 455, 0, 0, 457, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 439, 443,
	449, 0, 450, 452, 0, 0, 453, 454, 455, 0,
	0, 457, 458,
}

var yyPact = [...]int{
	2811, -1000, -329, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31153, -1000, -1000, -1000, -1000, -1000,
	-326, 30632, 30632, -1000, -1000, 1731, -1000, 30111, 10302, 31153,
	172, 156, 31153, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 495, -1000, 29590, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 429, 32274, 31674, 8207,
	31153, -302, -1000, 2522, -157, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2279, 576, 29069, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2761, 57, 576, 680, 685,
	694, 694, 12386, -68, -69, 2522, 249, 1961, -1000, 942,
	2811, 2067, 1101, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1645,
	393, 31153, -1000, 1100, 393, -1000, -1000, -1000, 2522, 2522,
	-1000, 31153, 31153, -22, 1184, -1000, 231, 243, 225, 1099,
	-1000, -1000, -1000, -1000, -1000, 2415, -1000, 31153, 31153, 2093,
	31153, -1000, 1388, 317, 32343, 2264, 1066, 527, 2124, -1000,
	-1000, 2066, -1000, 64, 452, 108, 584, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 122, -1000, 2327, -1000, -1000, 61,
	-1000, -1000, 51, -1000, -1000, -1000, -70, -1000, -1000, -1000,
	-1000, -1000, -1000, -164, -1000, -1000, 744, 1700, 8207, -1000,
	1571, -1000, 2861, -1000, -1000, -1000, -1000, 5592, 9770, 9770,
	9770, 9770, -1000, -1000, 1915, 8207, 2065, 2063, -1000, -1000,
	-1000, -1000, -1000, 1098, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1644, 9249, -1000, 2061,
	2058, 2057, 2056, 2055, 2054, 2053, 2052, 2048, 2034, 2033,
	2028, 2016, 2013, 1782, 1888, 2012, 1642, 1641, 2011, 2009,
	2008, 1639, 1782, 1782, 2006, 2004, 1997, 1979, 1973, 1972,
	1971, 1966, 1965, 1962, 1959, 1958, 1957, 1950, 1948, 1947,
	1938, 1934, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 390, -1000, 1097, 1078, -1000,
	1928, 2240, 2329, 1818, 2387, 2320, 2316, 2304, 2301, 1470,
	-1000, -1000, 31153, 31153, 31153, 427, 427, 427, 427, 427,
	485, 427, 493, 492, 491, 427, -1000, -1000, -1000, -1000,
	-1000, -1000, 601, -1000, -1000, -1000, -1000, 957, 31153, -1000,
	1848, 1167, 2335, 346, 336, 227, -1000, 1247, 1247, 1247,
	1247, 1167, 276, 339, 2329, 2329, -85, 1247, -89, 1167,
	1167, -89, 1167, 1167, 1167, 131, -1000, -1000, -1000, 1247,
	321, 1247, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2311,
	2307, 429, 31153, 46, 31153, 429, 429, 441, -1000, -174,
	-1000, -1000, 670, -1000, 634, -1000, 1388, 308, 303, 989,
	1255, -1000, 1156, 31153, 31153, 31153, 1156, 1156, 16036, 15515,
	-1000, 31153, -1000, 2329, 1818, -1000, 1759, 2363, 1754, 1818,
	429, 429, 429, 429, 429, 429, 429, 429, 31153, 31153,
	28548, 429, 7155, 7155, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8207, 31153, 2243, 224, 1927, -1000, 31153, 222,
	2329, 2240, 2329, -1000, -1000, 1087, 1465, 1628, -1000, -1000,
	231, 1113, -1000, 725, -1000, -1000, -1000, -1000, 31153, 226,
	-1000, -1000, 1598, 1926, -1000, 352, 950, 1058, -1000, 59,
	32376, 24893, 1388, 24893, 31153, -1000, -1000, -1000, -1000, -1000,
	-1000, -71, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 81, -1000, 8207, 8207, 8207,
	8207, 8207, -1000, 330, 8728, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9770, 9770, 9770, 9770, 9770, 9770, 9770, 9770,
	9770, 9770, 9770, 9770, 1914, 1299, 9770, 9770, 9770, 9770,
	2363, 2324, 970, 163, -1000, -1000, -1000, -1000, -1000, 1191,
	1700, 8207, 8207, 31153, -1000, 2918, 8207, 8207, 2963, 8207,
	2291, 8207, 8207, 8207, 1752, 4028, 31153, 8207, -1000, 1748,
	1742, -1000, -1000, 1271, 8207, 8207, -1000, -1000, 8207, 9770,
	8207, -1000, -1000, -1000, 199, 2291, 2291, 8207, 8207, 2291,
	2291, 2291, 1221, 2291, 2291, 2291, 2291, 2291, 2291, 2291,
	2291, 1735, 31153, 2223, 33, -1000, -1000, -1000, 1783, -1000,
	1838, 1838, 1838, 1838, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1882, 1923, -1000, -1000, 1835, 1835, 1835,
	1783, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1878, 1878, 1881, 1878,
	31153, 2329, -302, 6634, -1000, -308, 2240, 8207, -1000, -1000,
	8207, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1627,
	2283, -1000, 1922, 1918, 1085, 31153, 1209, 31153, 24893, 31153,
	1388, 31153, 31153, 427, 427, 427, 31153, 441, -1000, 31153,
	957, 2282, 31153, 2405, 9770, 9770, 28027, 1247, 1167, -1000,
	31153, -1000, -1000, -1000, 1247, 31153, 1247, 1247, 2405, 1247,
	-1000, -1000, -1000, 1167, 1167, -1000, -1000, -1000, -1000, 1247,
	1247, -1000, -1000, 2405, 31153, -78, 2405, 2405, -99, -1000,
	-1000, -1000, 31153, 31153, 427, 31153, 31153, -1000, 31153, -1000,
	-1000, 31153, 3059, 31153, 31153, 2296, -1000, 24893, 31153, 22809,
	-1000, -126, 675, 656, 661, -1000, -1000, 351, 565, 14473,
	305, 24893, 5070, -1000, -1000, 1156, 1156, 1156, 5070, 5070,
	1112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 953, -1000,
	82, 2240, -1000, -1000, -1000, -1000, -1000, 31153, 31153, 24893,
	1388, 31153, 31153, 31153, 31153, -1000, 1917, -1000, 2261, 31153,
	1037, -1000, -1000, 11865, 1080, 1037, 1733, 744, -1000, 1626,
	2123, -304, -1000, 13430, 31153, 31153, -1000, -1000, -304, -1000,
	12908, 31153, 2240, -1000, 2240, 31153, -1000, 2333, -1000, 231,
	202, -1000, -1000, -1000, -1000, -1000, -1000, 1077, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 936, -1000, 31153,
	-1000, -1000, 59, 24893, 25935, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 112, -1000, -1000, 147, -1000, 482, 3, 1111,
	-1000, -1000, 49, 139, 534, 1700, -1000, 1215, 1215, 1218,
	-1000, 517, -1000, -1000, -1000, -1000, 1915, -1000, -1000, -1000,
	1986, 1249, -1000, 1175, 1175, 1073, 1073, 1073, 1073, 1073,
	1401, 1401, -1000, -1000, -1000, 5592, 1914, 9770, 9770, 9770,
	9770, 409, 409, 1568, 3220, -1000, 8207, 1192, -1000, 8207,
	1567, 893, 1076, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1729, 1728, 1404, 2414, 1720, 8207, -1000,
	-1000, 1110, 1109, 1108, -1000, 1462, 7686, -1000, -1000, -1000,
	1719, 1074, 1716, -1000, -1000, -1000, 1715, 1095, 779, 1713,
	2019, 1712, 931, 8207, 8207, 1094, 1091, 8207, 8207, 8207,
	8207, 1710, 8207, 8207, 8207, 8207, 8207, 8207, 8207, 8207,
	-58, -1000, 8207, 29, -1000, -1000, -1000, -1000, 1461, -1000,
	1458, -1000, -1000, -1000, 1610, 1610, -1000, 1454, -1000, -1000,
	-1000, -1000, 1440, -1000, -1000, 1438, -1000, -1000, -1000, -1000,
	1090, -1000, 1700, -1000, 1594, -1000, 861, 913, -1000, 1363,
	-1000, -1000, 31153, 757, 10823, 31153, 1848, 2251, 23, -1000,
	925, -1000, 3, -169, 781, 2087, 2413, 31153, 31153, 31153,
	2280, 27506, -1000, 1913, 1083, -1000, -1000, 8207, -1000, -1000,
	2086, 31153, 31153, 2405, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 31153, 2405, 2405, 1167, 1247, -1000, -1000, 1247, -1000,
	-1000, 1247, -1000, 1072, -1000, 31153, -1000, -1000, -1000, 1848,
	908, -1000, 11344, 574, -1000, 1161, 1161, 676, 1161, 1161,
	1161, 1161, 278, 266, 1161, 1161, 1161, 1161, 1161, 1161,
	1161, 1161, 1161, 1161, 1161, 1161, 1161, 1161, 1891, -1000,
	20, 2294, 85, 925, 99, 2458, 834, -1000, -1000, -1000,
	-1000, 18120, 18120, 13952, 18120, -1000, 1116, -1000, -1000, 673,
	628, 637, -1000, -1000, 450, -1000, -1000, 781, -1000, -1000,
	-1000, 1890, 1183, -1000, -1000, 1888, -1000, 5070, 5070, 5070,
	-1000, -1000, 18641, 31153, -1000, -170, -1000, -153, -1000, 905,
	-1000, -1000, 906, 781, 2122, 905, 905, -1000, 10823, 31153,
	-1000, 2405, 7155, -1000, 22809, -1000, -1000, 26977, -1000, 26456,
	2405, -1000, -101, -1000, 2226, 797, -1000, 1885, -1000, 1070,
	2175, -1000, 888, -1000, 1180, 1063, -1000, 797, 1060, 2173,
	888, -1000, -1000, 1065, -23, -1000, -1000, 31153, 1598, 1053,
	25935, 821, -1000, 443, 1056, 1055, -1000, 24893, 63, 24893,
	-1000, 24893, -1000, -1000, 244, -1000, 31153, 2230, -1000, -1000,
	-1000, 1529, -334, -1000, -1000, -1000, -1000, -1000, 1031, -1000,
	409, 409, 1568, 2910, -1000, 9770, -1000, 9770, 2319, 1187,
	-1000, 8207, 1295, 291, 1186, 17599, 31153, -1000, -1000, 8207,
	8207, -1000, 2297, -1000, -1000, -1000, -1000, 8207, 8207, 1376,
	-1000, 31153, -1000, -1000, -1000, -1000, 17599, -1000, 9770, -1000,
	8207, 969, 2252, -58, -58, 2212, 2181, 2152, 1030, -58,
	2145, 2107, 2103, 2089, 1976, 1929, 1820, 1815, -1000, 1883,
	1700, -1000, -1000, 1709, 1708, 1028, -1000, 1017, 1702, 1013,
	1003, 6634, -1000, -101, 8207, 8207, 8207, 2198, -1000, -1000,
	43, 1698, 887, -1000, -1000, 31153, -1000, -1000, -1000, 1697,
	879, -1000, -1000, -1000, 2727, 1838, 1838, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1882, -1000, -1000, 1835,
	1835, 1835, 1783, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1878, 1878, 1881, 1878, -1000, 2278, -1000, -79,
	1161, 454, 24893, 295, -1000, 31153, 2121, 301, 2207, 31153,
	1872, 1868, 1854, 140, 2727, 31153, 910, -1000, 1051, 2811,
	-1000, 31153, 1700, -1000, 1388, -1000, 1167, -1000, 2405, 1005,
	-1000, -1000, 2405, 1167, 1167, 1247, 31153, -1000, 2273, 3059,
	-1000, -1000, -1000, 2727, 531, -1000, 31153, 1240, 615, 427,
	615, 1238, 1850, -1000, -1000, -1000, 31153, 31153, 31153, 1235,
	1232, 1435, -1000, 1433, 1161, 1161, 1432, 1592, 1591, 1576,
	1161, 1161, 1429, 1575, 25414, 1427, 1426, 1425, 1412, 1574,
	660, 1409, 1369, 1357, 31153, 1849, 1516, -79, 1161, 84,
	1177, 454, 1473, 14994, 31153, 22809, 22809, 22809, 22809, -1000,
	2155, 2149, -1000, 2158, 2151, 2176, 31153, 22809, 1848, -1000,
	25414, -1000, -1000, -1000, 2363, 987, 2110, 583, 8207, -1000,
	-1000, -1000, 607, 24893, 1572, 305, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31153, 31153, 1696, -1000, 2403, -1000,
	826, -1000, -1000, 1050, -1000, 2403, -48, -36, 1231, -304,
	6634, 248, 31153, -304, 31153, 6634, -1000, 31153, 236, -304,
	31153, 1423, -1000, -1000, -1000, 2408, 24893, 1388, 1131, 24372,
	-1000, 60, -1000, 111, 314, 1570, -1000, 488, 80, -1000,
	1176, 1529, -1000, -1000, -1000, 9770, -1000, -1000, -1000, -1000,
	1700, 8207, 1694, -1000, 593, 593, 1688, -1000, 1838, 1838,
	-1000, 1783, 1835, 1783, 593, 593, 1686, -1000, 1484, 1804,
	-1000, 1732, 1721, 8207, -1000, 1685, 3102, 900, -190, -58,
	-1000, -1000, -1000, -58, -58, -58, -58, -1000, -58, -58,
	-58, -58, -58, -58, -58, -58, 399, -1000, -1000, -1000,
	1552, -1000, -1000, -1000, 1420, -1000, 1400, -1000, -48, 1700,
	1700, -1000, -1000, 2213, 1547, 1545, 757, 2727, 519, 10823,
	2216, 255, 1486, -1000, -1000, 23851, 320, -1000, -1000, -1000,
	382, 72, 1397, 311, -1000, 31153, 94, 31153, -1000, -1000,
	-1000, -1000, -1000, 2207, -1000, 667, 126, 11344, 11344, 11344,
	137, 1198, -1000, 393, 828, 1047, 22809, 31153, -1000, 22288,
	1682, -1000, 781, 2405, -1000, 31153, -1000, 2405, 2405, 1167,
	-1000, 255, -1000, 2200, -1000, -1000, 31153, 31153, -1000, 31153,
	31153, 427, 8207, -1000, -1000, -1000, 31153, -1000, -1000, -1000,
	17599, 17599, -1000, -1000, -1000, -1000, 1543, 1541, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	289, 31153, 982, -1000, 1169, 1486, 23851, 1168, 1540, 320,
	-1000, 1534, -1000, 777, 31153, 31153, -1000, 943, -1000, 1166,
	2084, 2120, 2084, -1000, -1000, -1000, -1000, 2137, -1000, 1834,
	-1000, -1000, 943, -1000, -1000, -1000, -1000, -1000, 583, -1000,
	2332, 615, 615, 615, 1680, -1000, 821, 1678, -1000, -1000,
	-1000, -1000, -1000, 2401, 2386, 23330, 2401, -310, -29, 2384,
	2383, 2433, -1000, 1674, 803, -304, -1000, -1000, 797, -1000,
	-1000, -1000, -304, -1000, 797, -1000, -1000, 1388, -1000, 106,
	-1000, -1000, -1000, -1000, -1000, -1000, -11, -1000, 31153, -1000,
	1529, 1527, 79, -1000, 1700, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8207, -1000, -1000, -1000, 1681, -1000, -1000, 8207, 1672, 1526,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2390, -1000, 2381, -1000, 1669, 1668, -310,
	-1000, -1000, -1000, -1000, -1000, -1000, 2727, -1000, 1399, -1000,
	-1000, 1525, 2, -1000, -1000, -1000, 1521, 1520, 1395, -1000,
	-1000, 1343, 944, 13, -1000, -1000, -1000, -1000, -1000, -1000,
	1473, 31153, 1833, -1000, 1161, 1161, 1161, 31153, 1659, 798,
	-1000, 1657, 1651, 403, 1188, 1185, -1000, 1392, 18120, 22809,
	22288, 927, -1000, 1045, -1000, -1000, -1000, 2405, -1000, -1000,
	2405, -1000, -1000, 2200, -1000, -1000, 1257, 9770, -1000, -1000,
	1518, 17078, 497, 539, 1832, -1000, 235, 2422, -1000, 1227,
	1224, -1000, 31153, -1000, 1825, 1931, 194, 1824, -1000, 1823,
	1822, 31153, 1667, -1000, -1000, -1000, -1000, -1000, -1000, 365,
	980, -1000, 1516, 1514, -1000, 2, 1513, -1000, -1000, -1000,
	31153, 777, 777, 2390, 31153, 6634, -1000, -1000, 8207, 1806,
	-1000, 8207, -1000, -1000, -1000, -1000, -1000, 1803, 2234, -1000,
	-1000, -1000, -1000, -1000, -1000, 8207, 8207, -1000, -1000, -313,
	1510, -1000, -1000, 2379, 1508, 1492, 31153, -1000, 797, 797,
	781, -1000, -1000, -99, -1000, -1000, -1000, 1637, -1000, 1630,
	-58, -1000, 86, 8207, -1000, -1000, -313, -237, -1000, -1000,
	-1000, -1000, 230, -1000, -1000, 90, -1000, -1000, 1324, 356,
	-1000, -1000, 777, 21246, 17599, 17078, 1507, -1000, 32195, 11344,
	81, 32195, 695, 1163, -1000, 1381, -1000, 1374, -1000, 2405,
	927, 1045, -1000, -1000, 1106, -1000, -1000, -1000, -1000, 1568,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1368, 1792, -144, -1000, -1000, 1789, 21246,
	296, 296, 21246, 21246, 21246, 1785, 412, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2329, -1000, -1000, 1700, 31153,
	1700, 21767, -1000, 2378, 2377, 1700, 744, -315, 1338, -1000,
	1506, -32, -1000, -1000, 745, -318, -49, -40, -1000, -1000,
	-1000, 1573, -1000, 3507, -1000, -1000, -1000, 744, -315, 31153,
	313, 1500, -1000, -1000, 89, -1000, -1000, 975, -1000, 1783,
	8207, -1000, -1000, -1000, 359, 32078, -1000, -1000, -1000, -99,
	359, 333, 154, -1000, 1328, -1000, -1000, 2390, -1000, 1522,
	8207, 1782, -220, 21246, 971, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 954, 948, 938, 21246, -1000, -1000, -1000, 233,
	-1000, 922, 915, -1000, -1000, -1000, -1000, -1000, 1781, -1000,
	-1000, 2361, -1000, 1499, 433, -46, -40, -1000, 2360, -34,
	2358, 2357, -1000, -1000, 4549, -306, -62, 245, -1000, 2267,
	-1000, -1000, -14, -1000, -1000, -1000, 21246, 2255, 1517, 196,
	2354, 32195, -1000, -1000, 196, -1000, 141, -1000, 1146, -1000,
	1315, -1000, 2329, -1000, 1346, -1000, 2109, -1000, 48, 911,
	-1000, -1000, -1000, -1000, 904, -1000, -1000, -1000, 20725, 31153,
	1492, -1000, 1780, 1302, -29, -39, 2347, -1000, 1492, 2343,
	1492, 1492, 1217, -1000, -1000, -1000, -1000, -1000, 1498, -1000,
	203, -1000, -1000, 2255, -1000, 2342, 219, -1000, -1000, -1000,
	-1000, 1283, -1000, -1000, 412, -1000, 2108, 2104, 2412, -1000,
	-1000, -1000, -1000, 203, 203, 203, 203, 55, -1000, -1000,
	901, -1000, -1000, 2289, 16557, -53, -1000, -1000, -1000, 1496,
	-1000, 1492, -1000, -1000, 4549, -1000, -1000, 1161, 1488, 119,
	-1000, -1000, -1000, 20204, 214, 263, 247, -1000, 338, -1000,
	-1000, -1000, -1000, 2421, -1000, 2418, 603, 603, -1000, -1000,
	31153, -1000, 31153, -1000, 895, -1000, -1000, -1000, 1025, -1000,
	-1000, -1000, -1000, -1000, 1281, -1000, 31153, -1000, 31153, 211,
	1274, 9770, 1770, 9770, 1769, 223, 1766, -1000, -1000, -1000,
	1300, 240, -1000, -1000, 742, -1000, 1159, -1000, 19683, 31153,
	-1000, -1000, 882, 1765, 2339, -1000, 3041, 31153, 2934, 31153,
	1643, 1135, 9770, -1000, -1000, -1000, 31153, 6113, -1000, 1002,
	-1000, -1000, 354, 228, -1000, 876, -1000, 869, 19162, 1272,
	2873, -1000, -1000, 1700, 31153, 840, -1000, 31153, 206, -1000,
	-1000, -1000, 824, -1000, -1000, -1000, -1000, 354, 2166, -1000,
	1264, -1000, -1000, 32004, 505, -1000, -1000, 32004, 209, -1000,
	372, 1577, -1000, -1000, 820, -1000, 31153, 563, 8207, -1000,
	209, 32195, -1000, 8207, 805, -1000, 32195, 800, -1000, -1000,
}

var yyPgo = [...]int{
	0, 130, 2886, 202, 139, 136, 201, 2877, 2876, 2267,
	2252, 2875, 2874, 2873, 2871, 2869, 2868, 2867, 2866, 2865,
	2864, 2863, 2862, 2861, 2860, 2858, 2856, 2855, 2854, 2853,
	2851, 2850, 2847, 2846, 2845, 200, 2844, 2843, 2842, 2840,
	2839, 2838, 2837, 2835, 2834, 2833, 2832, 2831, 2829, 2828,
	2827, 2826, 2822, 2819, 2818, 2814, 2812, 2810, 2809, 2808,
	2806, 2804, 2800, 134, 2799, 2230, 2798, 2796, 2794, 2793,
	2791, 2790, 2789, 174, 2788, 2785, 2783, 2782, 2781, 2780,
	2779, 2776, 2774, 2772, 2771, 2770, 2766, 2765, 2764, 2763,
	2762, 149, 2761, 2759, 146, 2753, 2749, 2747, 2746, 2744,
	195, 184, 54, 2743, 37, 2742, 2741, 2737, 2736, 2735,
	70, 2734, 2733, 109, 182, 205, 1604, 207, 204, 155,
	141, 67, 2732, 2254, 2730, 157, 189, 118, 20, 2728,
	142, 2725, 117, 30, 23, 203, 114, 40, 122, 89,
	2724, 178, 68, 2723, 81, 2722, 2721, 209, 153, 2718,
	92, 2716, 2715, 2714, 2711, 158, 163, 2710, 2709, 93,
	2708, 2707, 91, 2706, 52, 2705, 126, 848, 90, 84,
	2702, 2700, 2699, 77, 2698, 2697, 2696, 2695, 144, 2692,
	2690, 103, 66, 2689, 2688, 2686, 51, 2685, 55, 2683,
	58, 2682, 2681, 2680, 2679, 56, 2678, 2675, 14, 19,
	21, 2673, 18, 2672, 128, 2671, 3, 2670, 179, 47,
	78, 123, 2666, 379, 2664, 2663, 2662, 127, 2661, 514,
	2660, 2659, 2658, 2657, 2655, 36, 2653, 165, 38, 2652,
	72, 95, 88, 168, 164, 2651, 2650, 2649, 192, 71,
	46, 0, 2648, 119, 2646, 2645, 2644, 208, 2643, 191,
	162, 187, 98, 210, 129, 2642, 2641, 65, 2639, 124,
	69, 96, 7, 2635, 177, 2633, 614, 152, 2631, 171,
	2625, 131, 2, 115, 2624, 2623, 32, 228, 2622, 2621,
	2620, 105, 2619, 2617, 97, 100, 2615, 2614, 2613, 33,
	2611, 28, 26, 2608, 76, 2607, 211, 2606, 148, 106,
	151, 145, 112, 185, 193, 61, 57, 2604, 825, 111,
	75, 24, 2603, 186, 2602, 206, 188, 2601, 167, 2600,
	198, 296, 172, 2599, 156, 8, 34, 27, 2596, 9,
	2595, 113, 169, 2594, 2593, 16, 2592, 17, 2591, 2590,
	2589, 2588, 4, 2584, 2583, 2582, 1, 6, 2579, 5,
	183, 2578, 2575, 2573, 2572, 39, 94, 2571, 138, 180,
	2568, 2567, 73, 2565, 2563, 2562, 600, 2561, 2560, 2559,
	2556, 2555, 2553, 2552, 2551, 2550, 2549, 74, 45, 2544,
	2543, 2542, 2540, 59, 108, 2537, 2535, 2534, 2533, 29,
	125, 2532, 15, 2526, 25, 22, 31, 2523, 104, 2522,
	12, 159, 2520, 2519, 13, 2510, 2508, 10, 11, 2507,
	2506, 86, 2503, 64, 41, 121, 79, 2502, 60, 173,
	107, 2501, 2499, 196, 199, 166, 2498, 132, 194, 213,
	2496, 175, 2494, 2492, 2491, 2489, 2487, 2486, 839, 2485,
	2482, 197, 44, 62, 83, 2474, 2470, 2469, 63, 120,
	85, 82, 170, 2468, 161, 2467, 2466, 80, 2465, 2464,
	2463, 2461, 2459, 160, 2451, 2448, 2447, 190, 154, 2427,
}

//line mysql_sql.y:9070
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 462, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 98, 460, 460, 460, 461,
	461, 95, 96, 84, 97, 410, 410, 409, 409, 408,
	408, 363, 363, 407, 407, 407, 406, 406, 406, 405,
	405, 404, 404, 403, 403, 401, 401, 402, 400, 399,
	399, 399, 397, 397, 397, 393, 393, 395, 394, 394,
	396, 388, 388, 391, 391, 389, 389, 389, 389, 392,
	387, 387, 387, 386, 386, 83, 83, 83, 310, 310,
	82, 82, 324, 324, 324, 324, 324, 322, 322, 322,
	322, 322, 322, 321, 321, 320, 320, 325, 325, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 74,
	74, 74, 74, 77, 77, 77, 78, 319, 319, 319,
	75, 76, 76, 309, 309, 314, 314, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 318,
	318, 318, 316, 316, 315, 315, 317, 317, 68, 68,
	68, 71, 70, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 69, 69, 69, 69, 69, 69, 64, 64,
	64, 64, 64, 63, 63, 65, 65, 306, 306, 305,
	79, 79, 80, 464, 464, 463, 465, 465, 465, 465,
	81, 87, 87, 87, 87, 87, 87, 87, 86, 86,
	89, 89, 88, 90, 73, 73, 73, 73, 73, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 434, 434,
	434, 436, 436, 245, 246, 466, 248, 244, 244, 244,
	430, 430, 431, 432, 433, 433, 433, 85, 7, 7,
	7, 7, 7, 7, 62, 67, 203, 203, 204, 204,
	204, 205, 205, 205, 205, 205, 60, 66, 66, 447,
	447, 61, 454, 454, 366, 366, 259, 259, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 370, 371, 255, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 42, 41, 41, 41, 295, 295, 40, 467,
	467, 234, 234, 50, 51, 52, 53, 54, 55, 56,
	39, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	59, 59, 382, 382, 469, 469, 469, 57, 58, 365,
	365, 365, 48, 47, 46, 45, 44, 44, 38, 38,
	37, 37, 43, 108, 109, 252, 252, 252, 254, 254,
	250, 468, 468, 337, 337, 253, 253, 36, 36, 36,
	36, 251, 251, 233, 249, 249, 249, 8, 8, 6,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 19, 20, 22, 303, 303, 300, 21, 14,
	13, 16, 12, 15, 17, 18, 18, 5, 5, 5,
	5, 9, 9, 10, 120, 120, 168, 168, 442, 442,
	438, 438, 439, 439, 439, 440, 440, 441, 441, 91,
	376, 376, 376, 376, 376, 376, 4, 143, 143, 142,
	142, 375, 375, 375, 375, 375, 375, 307, 307, 419,
	419, 419, 420, 141, 141, 136, 136, 377, 377, 273,
	421, 421, 385, 385, 384, 384, 383, 383, 139, 139,
	140, 140, 123, 123, 101, 101, 390, 390, 390, 390,
	398, 398, 362, 362, 195, 195, 228, 228, 229, 229,
	113, 113, 114, 114, 114, 114, 114, 114, 427, 427,
	429, 429, 428, 138, 138, 134, 134, 135, 135, 135,
	133, 133, 132, 131, 131, 130, 128, 128, 128, 129,
	129, 129, 116, 116, 116, 115, 115, 115, 115, 115,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 117, 117, 435, 435, 435, 367, 367, 367,
	373, 373, 210, 210, 211, 211, 209, 209, 118, 118,
	119, 119, 119, 119, 208, 208, 207, 121, 121, 127,
	126, 126, 122, 122, 122, 122, 218, 218, 217, 217,
	217, 217, 94, 99, 99, 100, 146, 146, 216, 215,
	215, 215, 145, 145, 144, 144, 137, 137, 125, 125,
	125, 125, 214, 124, 212, 459, 459, 458, 458, 457,
	455, 455, 455, 456, 456, 456, 456, 412, 412, 412,
	412, 412, 239, 239, 239, 243, 243, 242, 242, 242,
	242, 242, 247, 3, 3, 3, 3, 3, 26, 26,
	26, 26, 26, 26, 26, 26, 32, 154, 155, 33,
	156, 156, 157, 157, 158, 158, 159, 160, 161, 161,
	161, 161, 31, 147, 147, 148, 148, 149, 149, 150,
	151, 151, 151, 153, 152, 30, 23, 443, 446, 444,
	444, 448, 448, 448, 449, 449, 449, 450, 450, 24,
	105, 110, 110, 107, 112, 112, 112, 112, 112, 106,
	445, 451, 451, 451, 304, 304, 301, 302, 302, 299,
	298, 298, 298, 453, 453, 452, 452, 452, 240, 240,
	25, 294, 294, 296, 297, 297, 297, 288, 288, 288,
	288, 29, 292, 292, 293, 293, 293, 293, 293, 289,
	289, 291, 291, 287, 287, 287, 287, 287, 28, 111,
	111, 286, 286, 284, 284, 282, 282, 283, 283, 281,
	281, 281, 285, 285, 27, 27, 27, 103, 102, 102,
	102, 231, 231, 230, 230, 104, 34, 180, 180, 351,
	351, 351, 351, 351, 369, 369, 369, 352, 352, 352,
	353, 353, 353, 354, 354, 354, 354, 354, 368, 368,
	326, 326, 327, 327, 327, 330, 330, 343, 343, 344,
	344, 342, 342, 349, 349, 348, 348, 347, 347, 346,
	346, 345, 345, 345, 345, 340, 340, 339, 339, 328,
	328, 328, 328, 328, 329, 329, 329, 338, 338, 341,
	341, 186, 186, 187, 187, 187, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 417, 417, 418, 189, 189,
	189, 193, 193, 193, 193, 193, 193, 188, 188, 190,
	190, 169, 169, 167, 167, 162, 162, 163, 163, 164,
	164, 165, 165, 166, 166, 166, 166, 166, 166, 312,
	312, 415, 415, 416, 416, 411, 411, 411, 414, 414,
	414, 414, 414, 413, 413, 170, 226, 226, 226, 241,
	241, 241, 241, 225, 225, 225, 185, 185, 184, 184,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 311, 311, 256, 256, 257,
	257, 202, 201, 201, 201, 201, 201, 199, 200, 198,
	198, 198, 198, 198, 197, 197, 196, 196, 196, 290,
	290, 194, 194, 192, 192, 192, 191, 191, 191, 350,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 224, 265, 265, 270, 270, 426,
	426, 425, 171, 171, 171, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 181, 181, 181, 335, 335, 335,
	335, 335, 336, 336, 336, 333, 333, 334, 334, 274,
	275, 275, 374, 374, 331, 331, 332, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 381, 381, 381, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 437, 437, 437, 422, 422, 422, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 222, 222,
	222, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 276, 276, 277, 277, 378, 378,
	378, 378, 378, 378, 379, 379, 380, 380, 380, 380,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 263,
	219, 219, 219, 278, 271, 271, 272, 272, 266, 266,
	266, 266, 266, 266, 266, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 267, 267, 269,
	269, 280, 280, 280, 279, 279, 279, 279, 279, 279,
	279, 183, 183, 183, 183, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 173, 173, 173, 173,
	177, 177, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 178, 178, 178, 178,
	176, 176, 176, 176, 176, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 92, 93, 93, 175, 227, 227, 355, 355, 358,
	358, 356, 356, 357, 359, 359, 359, 360, 360, 360,
	361, 361, 361, 364, 364, 232, 232, 232, 238, 238,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 4, 0, 1, 1, 0,
	1, 5, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 7, 4, 1, 3, 2, 2,
	1, 2, 2, 2, 3, 2, 7, 7, 8, 0,
	4, 7, 0, 3, 0, 2, 0, 1, 1, 1,
	1, 4, 2, 2, 3, 3, 4, 5, 3, 4,
	4, 2, 2, 2, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 5, 0, 2, 7, 0,
	1, 0, 1, 5, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 2, 3, 1, 1, 1,
	6, 8, 0, 1, 1, 1, 1, 5, 5, 0,
	1, 1, 3, 3, 3, 4, 6, 7, 4, 4,
	7, 8, 3, 3, 3, 0, 2, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	4, 1, 3, 1, 1, 3, 5, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	4, 4, 4, 3, 6, 3, 5, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 5, 0, 2, 1,
	3, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 7,
	1, 3, 0, 1, 1, 3, 1, 3, 0, 1,
	1, 1, 12, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 7, 7, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 0, 2, 7,
	8, 0, 2, 6, 0, 2, 2, 3, 3, 4,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 6, 0,
	4, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 11, 9, 11, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 3, 2, 4, 3, 0, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 5, 6, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 1,
	1, 1, 1, 1, 4, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 1, 6, 8, 6, 5,
	5, 6, 6, 6, 6, 5, 6, 6, 6, 6,
	6, 6, 6, 6, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 4, 4, 4, 3, 4, 6,
	6, 7, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	8, 4, 2, 3, 2, 4, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -462, -2, -1, -95, -3, -96, -4, -91, -5,
	-6, -8, -72, -86, -88, -90, -89, -35, -7, -85,
	-63, -64, -68, -74, -79, -82, -83, -84, -97, -92,
	-93, -94, -113, -98, 543, -26, -25, -24, -23, -105,
	407, 12, 454, -9, -10, -427, -11, 236, -244, -245,
	-246, -248, -466, -36, -37, -38, -44, -45, -46, -47,
	-48, -57, -58, -59, -39, -40, -41, -42, -50, -51,
	-52, -53, -54, -55, -56, -43, -108, -109, -61, -60,
	-66, -62, -67, -107, 211, -65, 61, -69, -70, -71,
	-75, -76, -77, -78, -80, -81, 338, 344, 397, 541,
	542, 46, -114, -116, 544, -27, -28, -29, -30, -31,
	-32, -34, -33, 207, 14, 487, -12, -15, -13, -16,
	-14, -21, -22, -20, -17, -19, -106, -18, 231, 230,
	37, 294, 295, 296, 342, 229, 208, 13, 139, 140,
	142, 143, 30, 41, 320, -115, 67, 209, -117, 10,
	546, -156, -241, 70, 78, -235, -237, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 457, 528, 529, 530, 531, 318, 319,
	484, 248, 272, 368, 275, 282, 139, 158, 152, 180,
	172, 147, 252, 287, 253, 77, 142, 440, 88, 419,
	394, 145, 267, 269, 271, 274, 254, 168, 163, 266,
	250, 541, 161, 255, 39, 256, 185, 257, 258, 489,
	415, 317, 421, 279, 392, 162, 416, 270, 418, 187,
	191, 432, 344, 156, 157, 423, 434, 184, 228, 42,
	486, 240, 435, 189, 183, 179, 443, 283, 281, 182,
	155, 178, 251, 50, 193, 192, 194, 388, 389, 390,
	391, 259, 260, 332, 431, 175, 164, 322, 148, 22,
	438, 235, 420, 345, 261, 276, 284, 188, 190, 242,
	247, 488, 396, 246, 280, 436, 160, 239, 268, 234,
	439, 149, 338, 347, 262, 143, 273, 433, 442, 49,
	360, 154, 146, 225, 140, 244, 249, 11, 263, 264,
	265, 286, 285, 277, 176, 241, 181, 166, 153, 177,
	141, 243, 441, 361, 539, 320, 377, 174, 171, 245,
	218, 437, 422, 144, 381, 362, 169, 288, 535, 536,
	537, 333, 316, 289, 290, 167, 232, 413, 414, 291,
	293, 387, 309, 363, 395, 369, 364, 200, 297, 425,
	186, 538, 298, 299, 300, 417, 301, 302, 303, 545,
	-123, 38, -167, -241, -123, -65, -10, -9, -115, -116,
	-167, 215, -249, 23, 392, -73, 393, 211, 67, -241,
	-5, -4, -91, -63, -113, -247, -241, 294, 294, -247,
	215, -241, 246, 376, -366, 221, -321, -294, 247, -320,
	-296, -323, -297, 31, 207, 209, 208, 243, 14, 342,
	217, 12, 10, 343, 229, 24, 25, 27, 13, 344,
	346, 28, 347, 350, 351, 352, 41, 355, 356, 236,
	70, 78, 73, 254, -155, -241, -272, -266, 95, 237,
	-268, -261, -262, -264, -407, -401, -260, 67, 121, 122,
	129, 96, -263, -350, 35, 98, 494, 455, -220, -221,
	-222, -223, -224, -241, -402, -400, 73, 79, 82, 85,
	86, 84, 83, 165, 81, 74, 133, 134, -116, 70,
	-422, 502, -236, 523, 528, 529, 530, 531, 522, 46,
	-372, -380, 214, -378, 132, 170, 232, 166, 12, 127,
	387, 167, 499, 519, 457, 503, 526, 496, 497, 491,
	492, 493, 495, 504, 506, 518, -381, 514, 524, 525,
	512, 527, 72, 71, 517, 516, 505, 500, 501, 507,
	490, 498, 508, 509, 515, 520, 521, 326, 88, 327,
	328, 447, 321, 329, 221, 392, 55, 330, 331, 332,
	333, 334, 454, 335, 56, 336, 325, 236, 377, 337,
	169, 186, 459, 458, 460, 451, 448, 446, 449, 450,
	452, 453, 510, 511, 513, -317, -315, -241, -99, -100,
	533, -132, -133, -213, 19, 6, 7, 8, 9, -460,
	394, 488, 297, 242, 339, 218, 318, 377, 301, 246,
	-288, -286, -368, 291, 287, 216, 226, 225, 89, 447,
	214, 353, -438, -439, 204, 205, 206, -429, 480, -428,
	-241, 328, 26, 215, 339, 425, 426, 427, 428, 429,
	430, -49, -382, -365, 422, 421, -253, 414, 420, 412,
	424, 415, 319, 303, 302, 207, 481, -232, 363, 395,
	242, 444, 445, 340, 396, 432, 433, 416, 88, 173,
	170, 218, 215, 318, 447, 377, 301, -438, 144, 141,
	-308, 144, 94, 149, 148, -308, 246, 376, 40, -314,
	387, -313, -315, 432, 433, 443, 71, 72, 431, -232,
	88, 413, 413, -133, -213, -132, -114, -116, -94, -427,
	216, 318, 377, 246, 217, 215, 218, 447, 294, 339,
	242, 301, -367, -435, 31, -373, 201, 202, 203, 32,
	33, -1, 67, 135, 73, -139, 238, -167, 135, -139,
	-133, -132, -133, -167, -225, -241, 394, 104, -73, -73,
	393, -430, -431, -432, -434, 211, 393, 392, 135, 15,
	-247, -247, 65, -167, -296, 246, -321, -294, 35, 64,
	136, 219, 136, 64, 67, 340, 318, 377, 341, 447,
	215, 353, 218, 246, 354, 318, 377, 215, 218, 447,
	246, 318, 215, 218, 377, 246, 354, 412, 413, 218,
	26, 345, 348, 349, 413, -386, 443, 136, 94, 91,
	92, 93, -266, 111, -279, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-116, -266, -272, 46, -264, -264, -264, -264, -350, -270,
	-266, 67, 67, 135, 73, -266, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -379, 67,
	67, -276, -277, 67, 67, 67, 73, 73, 67, 67,
	67, 73, -277, -277, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 136, -173, -177, -174, -176, -175, -179, -178,
	170, 171, 132, 174, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 30, 186, 232, 166, 167, 168,
	169, 187, 152, 172, 485, 195, 153, 196, 154, 197,
	155, 198, 156, 157, 199, 158, 161, 162, 163, 160,
	135, -133, 136, 67, -101, 38, -135, 21, -117, -116,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 79,
	-154, -241, -156, -147, -241, -284, 221, -284, -284, -284,
	-284, 217, -284, 215, 215, 215, -284, -440, 151, 136,
	-429, -138, 67, -252, 112, 116, 23, 244, 244, 281,
	-467, -468, 15, 114, -250, -468, -250, -250, -252, -469,
	217, 423, 42, 245, 244, -134, -135, -134, 417, 413,
	-337, 418, 419, -254, -468, -253, -252, -252, -253, -252,
	-252, -252, 215, 218, 447, 301, -467, 244, -467, 30,
	30, -366, -167, -366, 481, -233, -241, -366, -366, -441,
	220, 436, 487, 147, 148, 149, -296, 246, 246, 136,
	104, 23, -316, 104, 115, -315, -315, -315, -316, -316,
	-188, 40, -240, 132, -241, 73, -188, 40, -464, -463,
	-167, -134, -117, -116, 68, 68, 68, -366, -366, -366,
	-366, -366, -366, -366, -366, -247, -147, -156, 221, -366,
	-118, -119, 123, -266, -241, -118, -271, -272, -241, 38,
	-375, 46, -113, 67, 30, 67, -241, -376, 46, -113,
	67, 30, -134, -101, -135, 135, 79, 73, -73, 68,
	136, -433, 85, 86, -436, 184, 176, -241, -87, 73,
	-3, -4, -5, -6, -35, -63, -113, -403, -401, 67,
	31, 386, 64, 15, -322, 215, 447, 339, 242, 218,
	318, -320, -303, -300, -298, -240, -296, -299, -298, -325,
	-225, 413, -102, 398, 293, -266, -266, -266, -266, -266,
	84, 95, 316, 85, 86, -261, -280, 31, 289, 290,
	-262, -262, -262, -262, -262, -262, -262, -262, -262, -262,
	-262, -262, -269, -278, -350, 67, 114, 112, 116, 113,
	97, -264, -264, -262, -262, 68, 136, -426, -425, 99,
	-266, -266, -241, -423, -424, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 330, 325, 331, 329,
	321, 337, 332, 333, 169, 478, 479, 472, 473, 474,
	475, 476, 477, -271, -271, -266, -423, -271, -219, 32,
	31, -272, -272, -272, 68, -266, -437, 314, 313, 315,
	-136, -241, -271, 68, 68, 68, 79, -272, -272, -271,
	-262, -271, -424, -219, -219, -272, -272, -219, -219, -219,
	-219, 123, -219, -219, -219, -219, -219, -219, -219, -219,
	68, -315, 40, -361, 361, 360, -355, -357, 67, -356,
	67, -356, -356, -356, 67, 67, -358, 67, -358, -358,
	-355, -359, 67, -359, -360, 67, -359, -241, -134, -100,
	-384, -383, -266, 40, 534, -101, -266, -131, -130, -266,
	-461, 73, 34, 67, 67, 135, -167, 95, -443, -241,
	-304, -301, -298, -241, -294, -241, -241, -284, -284, -284,
	-167, -441, -428, 34, -137, -241, -209, 16, -264, -264,
	-298, 246, -467, -252, -234, -233, -254, -249, -254, -254,
	-209, -468, -252, -252, -254, -250, -209, -241, 413, -209,
	-209, -337, -251, -241, -251, -284, -233, -234, -234, -167,
	-203, -204, 212, 209, -206, 358, 248, -285, 252, 77,
	253, 394, 254, 217, 256, 257, 258, 228, 259, 260,
	261, 387, 262, 263, 264, 265, 341, 6, 304, 40,
	-443, -443, 30, -304, -241, -126, -121, -125, -122, -127,
	-212, -214, -124, 67, -167, -116, -241, 437, 438, 145,
	148, 147, 31, 386, -319, 386, 31, -294, -313, -309,
	73, 387, -299, -318, 64, 132, -383, -316, -316, -316,
	-318, -318, 131, 136, -465, 436, 437, 204, -101, -169,
	-167, -443, -303, -294, -241, -169, -169, -241, 67, 35,
	-241, -208, 136, -207, 15, -242, -241, 34, 73, 135,
	-208, 68, 73, -307, 64, -377, -273, -421, 533, -141,
	68, -136, -419, -420, -136, -140, -241, -377, -141, 68,
	-419, -101, -101, -241, 23, -73, -431, 135, 136, -137,
	-322, -302, -299, -324, 123, -241, -310, 136, 487, 547,
	71, 219, -453, -452, 378, 68, 136, -387, 220, 454,
	73, 548, 200, 84, 316, 85, 86, -350, -272, -269,
	-264, -264, -262, -262, -267, 233, -267, 94, -266, -265,
	-425, 101, -266, 34, 136, 65, 135, 68, 68, 15,
	15, 68, -266, 68, 68, 68, 68, 15, 15, -266,
	68, 135, 68, 68, 68, 68, 65, 68, 136, 68,
	136, -272, -266, 68, 68, -266, -266, -266, -272, 68,
	-266, -266, -266, -266, -266, -266, -266, -266, -332, 408,
	-266, -364, 362, 79, 79, -227, 73, -227, 79, 79,
	79, 136, 68, 73, 136, 22, 136, -128, 36, 37,
	-155, -157, -158, -159, -160, -161, 114, 137, 138, -148,
	-149, -150, -151, -173, -225, 171, 174, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 232, 166,
	167, 168, 169, 187, 152, 172, 153, 154, 155, 156,
	157, 158, 161, 162, 163, 160, -241, -138, 35, -446,
	365, -454, 136, 40, -452, 447, -287, 65, -111, 15,
	-167, -167, -167, -180, 34, 15, -120, -168, -241, 67,
	68, 136, -266, -295, 65, -241, -234, -209, -167, -241,
	-209, -209, -252, -254, -254, -250, 135, -233, -138, 136,
	-164, -170, -165, -225, -257, -166, 224, 222, 226, -416,
	89, 227, 278, 90, 217, -205, 217, 90, 223, 227,
	222, -238, 104, -238, -232, 131, -238, -238, -238, -238,
	255, 255, -238, -238, -238, -238, -238, -238, -238, -238,
	-238, -238, -238, -238, -238, -238, 67, -447, 365, 30,
	324, -454, -112, 318, 30, -215, -216, -217, -218, 53,
	57, 59, 54, 55, 56, 60, 30, 136, -239, -243,
	34, -241, 73, -239, -116, -121, -126, -239, 67, 146,
	149, 149, 148, 219, 67, 104, -318, -318, -318, 40,
	-240, -463, 443, 437, 136, 64, -148, -156, -209, -119,
	-121, -241, 73, -241, 123, -209, -390, 418, 39, 136,
	67, 68, 136, 46, 136, 104, 68, 136, 68, 46,
	135, 394, -241, -401, 68, -324, 136, 219, 135, 135,
	-300, 344, -240, -302, 20, 487, -225, 38, -231, -230,
	73, 548, 68, -267, -267, 94, -264, -261, 68, 102,
	-266, 100, -171, -173, 360, 361, -172, -178, 132, 170,
	232, 169, 168, 166, 360, 361, -188, -241, -266, -266,
	68, -266, -266, 15, -241, -188, -262, -266, -133, 68,
	-331, -332, -331, 68, 68, 68, 68, -331, 68, 68,
	68, 68, 68, 68, 68, 68, 67, 68, 68, 68,
	136, 68, 68, 68, 136, 68, 136, -383, -390, -266,
	-266, -130, -129, 43, 352, 68, 136, -225, 68, 136,
	-173, 34, -449, 420, 367, -238, -259, -258, 320, 41,
	-370, 387, 373, 374, -301, 246, -241, 64, 308, 309,
	310, 311, -282, -283, -281, -285, -443, 67, 67, 67,
	-351, 298, -173, -167, -120, -241, 15, 136, -442, 135,
	-1, -241, -294, -252, -209, -468, -209, -252, -252, -254,
	-241, 34, -204, -173, -166, -241, 90, -415, -416, -284,
	-415, 90, 67, -241, -241, -241, 90, 90, 79, 79,
	-238, -238, 79, 73, 73, 73, -238, -238, 79, 73,
	-243, 79, 79, 79, 79, 40, 73, -193, 40, 266,
	270, 267, 268, 269, 79, 40, 79, 40, 79, 40,
	-241, 67, -417, -418, 73, -449, -238, 324, 104, -259,
	-110, 77, 31, -142, 212, 209, -443, -306, -305, -225,
	-125, -125, -125, -125, 53, 53, 53, 58, 53, 58,
	53, -217, -306, -127, -138, -243, 68, -459, -458, -457,
	-455, 61, 220, 62, -271, 149, -302, -255, 73, -309,
	-167, -167, 68, -211, 17, 135, -211, -398, 404, 399,
	401, 90, -273, -385, -384, 46, -113, -136, -377, -420,
	-383, -241, 46, -113, -377, -241, 79, 15, -299, -294,
	123, 123, -241, 345, -310, 73, 366, 73, 215, 549,
	136, 104, -231, -261, -266, 68, -181, 157, 156, -181,
	68, -356, -356, -355, -358, -355, -181, -181, 68, 68,
	23, 68, 68, 68, -266, 68, 68, 136, -374, 456,
	-331, -331, -331, -331, -331, -331, -331, -331, -331, -331,
	-331, -331, -331, -275, -274, 238, 73, 79, 79, -398,
	44, 45, 73, 73, -159, -173, 213, -150, 40, -113,
	-450, 77, -444, 73, -241, -451, 77, 368, 134, 322,
	40, 369, 370, 384, 317, 79, 79, 375, -445, -241,
	-143, 318, -167, -281, -232, 131, 257, 301, -162, -163,
	-164, -162, -162, -352, 300, 20, 79, 122, -139, 65,
	135, -121, -168, -241, 123, 68, -209, -241, -209, -209,
	-252, -113, -185, -184, -182, 84, 95, 40, 358, -183,
	77, 131, 271, 249, 272, -202, -256, 64, 364, 222,
	89, 90, 346, -257, -411, -413, -241, -413, -241, -411,
	-411, -284, -266, -241, -188, -188, 73, 73, -189, 249,
	-169, 68, 136, 104, -450, -444, 104, 73, -451, 73,
	136, -142, -142, -209, 136, 104, -145, -144, 64, 65,
	-146, 64, -144, 53, 53, -209, -457, -456, 23, -416,
	-416, -416, 68, 68, -210, 18, 20, 123, -210, -362,
	535, -394, -396, 399, 20, 20, 13, 68, -377, -377,
	-294, -310, 387, -167, -230, 73, 549, -266, 68, -266,
	68, 73, -133, 20, 68, 68, -362, -152, -173, -260,
	73, -448, 378, 73, 73, 79, 40, 79, 134, 371,
	-371, -110, -142, 67, -238, -238, -238, -241, 68, 136,
	68, 68, -353, 237, 79, 122, 79, 122, 79, -239,
	-121, -241, -209, -442, 135, -209, -209, -182, 84, -262,
	73, -190, -240, 132, -191, 40, 270, 266, -192, 40,
	250, 251, -194, 67, 278, 13, 90, 90, -167, 67,
	65, 288, 67, 67, 67, -413, 68, 250, 251, 68,
	-418, 73, -448, 73, -443, -133, -305, -383, -266, 67,
	-266, 67, 53, 19, 17, -266, -272, -195, 536, 73,
	20, 73, -392, 73, -306, -104, -388, -337, 68, 68,
	-331, -334, -333, -336, 405, 280, 411, -272, -195, 486,
	20, 487, 321, 40, 79, 40, 372, -289, -291, -225,
	67, -188, -190, 73, -186, -187, -206, -164, -103, -102,
	-186, -354, 140, 79, 122, 79, 79, -209, -209, 79,
	67, -378, -290, 67, -289, -414, 308, 309, 310, 312,
	311, -414, -289, -289, -289, 67, -312, -311, 279, 95,
	-134, -137, -412, -241, 222, 20, 20, -228, 537, 79,
	73, 401, -363, 538, -397, 404, -391, -389, 399, 400,
	401, 402, 68, -335, 97, 371, 375, -266, -228, -153,
	-241, 73, 366, 73, 321, 68, 136, -355, -266, -326,
	238, 136, -206, -104, -326, -369, 148, 299, 487, 79,
	122, 79, -133, 68, -266, -276, -197, -196, 483, -289,
	68, 68, 68, 68, -289, 279, 68, 68, 136, 67,
	20, 73, -399, 220, -395, -396, 403, -389, 20, 401,
	20, 20, -335, 533, 409, 410, 409, 410, 34, 387,
	-292, -291, -128, 68, -327, 287, 20, -206, -327, 299,
	79, 122, 79, -134, 68, -201, -199, -200, 64, 416,
	276, 277, 68, -292, -292, -292, -292, 68, -241, 222,
	-229, -241, -392, -406, 67, 79, -394, -393, -395, 20,
	-392, 20, -392, -392, 94, 73, -293, 228, 77, 487,
	306, 307, -128, 20, -328, 280, 281, -329, -341, 283,
	79, -311, -200, 64, -199, 64, 14, 13, -202, 68,
	136, -410, 30, 68, -405, -404, -226, -400, -241, 404,
	405, 73, -392, -335, -238, 73, 305, -225, 67, -339,
	284, 67, -337, 67, -337, 90, 309, -198, 273, 274,
	30, 148, -198, -241, -409, -408, -407, 68, 136, 135,
	79, -241, -325, -330, 285, 79, -262, 67, -262, 67,
	-338, 282, 67, 84, 40, 275, 136, 104, -404, -241,
	68, -343, 67, 20, 68, -325, 68, -325, 67, 104,
	-262, -408, 40, -266, 135, -344, -342, 238, -329, 68,
	68, 68, -325, 79, 68, -241, 68, 136, -241, -340,
	286, 68, -342, -345, 46, 79, -349, -346, 67, -206,
	240, 114, -349, -206, -348, -347, 285, 241, 67, 68,
	136, -241, 237, 67, -272, -347, -346, -272, 68, 68,
}

var yyDef = [...]int{
	34, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 0, 703, 704, 705, 706, 707,
	0, 0, 0, 477, 478, 0, 449, 0, 0, 0,
	0, 0, 0, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 298, 299,
	300, 301, 302, 303, 0, 233, 229, 208, 209, 210,
	169, 170, 171, 172, 240, 241, 324, 0, 0, 0,
	0, 0, 560, -2, 36, 708, 709, 710, 711, 712,
	713, 714, 715, -2, 490, 0, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 461, 287, 288,
	289, 283, 284, 286, 285, -2, 0, 490, 222, 0,
	213, 213, 0, 0, 0, 580, 0, 0, 595, 617,
	34, 0, 720, 999, 1000, 1001, 1002, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 0,
	538, 0, 543, 963, 538, 234, 479, 480, 580, 580,
	447, 0, 269, 0, 1456, 273, 0, 0, 0, 444,
	264, 265, 266, 267, 268, 0, 702, 0, 0, 260,
	0, 228, 1515, 0, 0, 0, 0, 0, 0, 113,
	791, 115, 793, 119, 126, 0, 0, 131, 132, 135,
	136, 137, 138, 139, 0, 143, 0, 145, 148, 0,
	150, 151, 0, 154, 155, 156, 0, 166, 167, 168,
	794, 795, 796, -2, 44, 718, 1381, 1276, 0, 1283,
	1284, 1295, 1306, 1072, 1073, 1074, 1075, 0, 0, 0,
	0, 0, 1082, 1083, 0, 1097, 1615, 0, 1089, 1090,
	1091, 1092, 1093, 53, 65, 66, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 0, 1249, 1059, 999,
	0, 1623, 0, 1643, 1648, 1649, 1650, 1651, 1642, 0,
	0, 1234, 0, 1224, 0, 0, -2, -2, 0, 0,
	1583, -2, 1620, 1639, 1647, 1624, 1646, 1617, 1618, 1612,
	1613, 1614, 1616, 1625, 1627, 1638, 0, 1634, 1644, 1645,
	0, 0, 67, 68, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1240, -2, 1242,
	1243, 1245, 1246, 1247, 1248, -2, 1251, 1252, 1253, -2,
	-2, 1256, 1257, 1258, 1259, 1260, 1261, 1264, -2, 1266,
	-2, -2, 1236, 1237, 1238, 1239, 1228, 1229, 1230, 1231,
	1232, 1233, -2, -2, -2, 0, 206, 204, 580, 653,
	0, -2, 0, 0, 0, 600, 603, 606, 609, 0,
	37, 38, 0, 0, 0, 823, 823, 823, 823, 823,
	0, 823, 0, 0, 0, 823, 798, 799, 800, 821,
	822, 869, 495, 491, 492, 493, 494, 568, 0, 570,
	573, 425, 373, 0, 0, 0, 385, 379, 0, 0,
	0, 425, 0, 0, 575, 575, 0, 428, 435, 425,
	425, -2, 425, 425, 425, 0, 391, 392, 393, 379,
	0, 379, 397, 398, 399, 410, 411, 436, 1405, 0,
	0, 324, 0, 324, 0, 324, 324, 497, 223, 224,
	212, 214, 0, 218, 0, 211, 1515, 0, 0, 180,
	1583, 185, 0, 1463, 1529, 1478, 0, 0, 1496, 0,
	-2, 0, 250, 575, 0, 581, 0, 580, 0, 0,
	324, 324, 324, 324, 324, 324, 324, 324, 0, 0,
	0, 324, 0, 0, 618, 619, 614, 615, 616, 620,
	621, 3, 1274, 0, 0, 0, 0, 542, 0, 0,
	575, -2, 0, 448, 270, 1003, 0, 0, 274, 275,
	0, 0, 290, 0, 293, 278, 279, 280, 0, 0,
	262, 263, 0, 0, 230, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 123, 120, 127, 130, 140,
	147, 0, 159, 161, 164, 121, 128, 133, 134, 141,
	162, 122, 124, 125, 129, 163, 165, 142, 146, 160,
	144, 149, 152, 153, 158, 0, 94, 0, 0, 0,
	0, 0, 1282, 0, 0, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1276, 0, 0, 1078, 1079, 1080, 1081, 1084, 0,
	1098, 0, 0, 0, 1335, 0, 1274, 1274, 0, 1274,
	1270, 0, 0, 0, 0, 0, 0, 1274, 1212, 0,
	0, 1214, 1225, 0, 0, 0, 1218, 1219, 1274, 0,
	1274, 1223, 1208, 1209, 0, 1270, 1270, 0, 0, 1270,
	1270, 1270, 1270, 1270, 1270, 1270, 1270, 1270, 1270, 1270,
	1270, 0, 0, 1382, 1400, 1337, 1338, 1339, 1387, 1341,
	1391, 1391, 1391, 1391, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 0, 0, 1380, 1360, 1389, 1389, 1389,
	1387, 1384, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1394, 1394, 1397, 1394,
	0, 575, 0, 0, 563, 0, 544, 0, 597, 599,
	0, 601, 602, 604, 605, 607, 608, 610, 611, 39,
	0, 717, 0, 0, 733, 0, 0, 0, 0, 0,
	0, 0, 0, 823, 823, 823, 0, 497, 496, 0,
	569, 0, 0, 626, 0, 0, 0, 379, 425, 384,
	381, 380, 431, 432, 428, 0, 428, 428, 626, 0,
	404, 405, 406, 425, 425, 412, 576, 413, 414, 428,
	0, 433, 434, 626, 0, 0, 626, 626, 0, 422,
	423, 424, 0, 0, 823, 0, 381, 395, 381, 1406,
	1407, 0, 832, 0, 0, 0, 443, 0, 0, 0,
	498, 0, 0, 216, 0, 221, 173, 0, 0, 0,
	0, 0, 0, 202, 203, 0, 0, 0, 0, 0,
	193, 196, 957, 958, 788, 789, 197, 198, 242, 243,
	0, 544, 596, 598, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 0, 475, 0, 0,
	634, 628, 630, 697, 53, 634, 0, 1275, 721, 0,
	517, 530, 512, 0, 519, 0, 964, 499, 530, 501,
	0, 519, 544, 566, 544, 0, 271, 0, 276, 0,
	0, 292, 294, 295, 296, 281, 282, 445, 258, 259,
	251, 252, 253, 254, 255, 256, 257, 261, 63, 0,
	231, 232, 0, 0, 0, 107, 108, 109, 110, 111,
	112, 114, 98, 465, 467, 780, 792, 0, 783, 0,
	117, 157, 90, 0, 0, 1277, 1278, 1279, 1280, 1281,
	1285, 0, 1287, 1289, 1291, 1293, 0, 1311, -2, -2,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1296, 1309, 1310, 0, 0, 0, 0, 0,
	0, 1307, 1307, 1302, 0, 1076, 0, 1095, 1099, 0,
	0, 0, 54, 1269, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 0, 0, 1276, 0, 0, 0, 1271,
	1272, 0, 0, 0, 1167, 0, 0, 1173, 1174, 1175,
	0, 525, 0, 1235, 1213, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 1403, 1401, 1402, 1340, 1388, 0, 1365,
	0, 1366, 1367, 1368, 0, 0, 1361, 0, 1362, 1363,
	1364, 1356, 0, 1357, 1358, 0, 1359, 205, 652, 654,
	0, 534, 536, 537, 0, 564, 577, 582, 583, 586,
	35, 40, 0, -2, 735, 0, 573, 0, 0, 747,
	322, 774, 0, 0, 790, 813, 819, 0, 0, 0,
	847, 0, 571, 0, 0, 666, 372, 0, 426, 427,
	376, 1515, 381, 626, 386, 382, 387, 430, 388, 389,
	390, 0, 626, 626, 425, 428, 415, 429, 428, 418,
	419, 0, 437, 441, 438, 0, 440, 394, 396, 573,
	305, 306, 0, 0, 310, 1408, 1408, 0, 1408, 1408,
	1408, 1408, 0, 0, 1408, 1408, 1408, 1408, 1408, 1408,
	1408, 1408, 1408, 1408, 1408, 1408, 1408, 1408, 0, 833,
	319, 0, 0, 322, 764, 639, 0, 640, 641, 637,
	668, 692, 692, 0, 692, 672, 963, 225, 226, 0,
	0, 220, 174, 175, 0, 177, 178, 179, 186, 181,
	183, 0, 0, 187, 199, 200, 201, 0, 0, 0,
	191, 192, 0, 0, 245, 246, 248, 0, 562, 462,
	961, 463, 464, 468, 0, 470, 471, 472, 735, 0,
	769, 626, 0, 635, 0, 631, 698, 0, 700, 0,
	626, 41, 546, 506, 0, 511, 527, 0, 531, 0,
	0, 523, 516, 520, 0, 0, 540, 500, 0, 0,
	505, 565, 567, 1004, 0, 277, 291, 0, 0, 0,
	0, 101, 777, 0, 102, 106, 96, 0, 0, 0,
	782, 0, 779, 784, 0, 116, 0, 0, 91, 92,
	838, 843, 0, 1286, 1288, 1290, 1292, 1294, 0, 1297,
	1307, 1307, 1303, 0, 1298, 0, 1300, 0, 1277, 0,
	1100, 0, 0, 0, 0, 0, 0, 1157, 1158, 0,
	0, 1162, 0, 1164, 1165, 1166, 1168, 0, 0, 0,
	1172, 0, 1211, 1227, 1215, 1216, 0, 1220, 0, 1222,
	0, 580, 0, 1134, 1134, 0, 0, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 0,
	1383, 1336, 1404, 0, 0, 0, 1385, 0, 0, 0,
	0, 0, 655, 546, 0, 0, 0, 589, 587, 588,
	0, 0, 723, 724, 726, 0, 729, 730, 731, 0,
	736, 737, 739, 740, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1448, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 734, 0, 824, 754,
	1408, 326, 0, 0, 776, 0, 0, 0, -2, 0,
	0, 0, 0, 849, 0, 0, 0, 484, 488, 34,
	574, 0, 627, 374, 0, 375, 425, 383, 626, 963,
	407, 408, 626, 425, 425, 428, 0, 439, 0, 832,
	308, 969, 970, 0, 0, 972, 1029, 0, 981, 823,
	981, 0, 0, 983, 984, 309, 0, 0, 0, 0,
	0, 0, 1409, 0, 1408, 1408, 0, 0, 0, 0,
	1408, 1408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 1408, 0,
	0, 326, 761, 0, 0, 0, 0, 0, 0, 659,
	0, 0, 658, 0, 0, 0, 0, 0, 573, 693,
	0, 695, 696, 670, -2, 0, 639, 675, 1274, 227,
	215, 217, 0, 0, 0, 0, 188, 189, 190, 194,
	195, 244, 247, 249, 0, 0, 0, 476, 624, 629,
	636, 699, 701, 54, 632, 624, 550, 0, 0, 530,
	532, 0, 0, 530, 0, 0, 539, 0, 0, 530,
	0, 0, 446, 64, 297, 0, 0, 0, 0, 0,
	466, 0, 781, 98, 0, 0, 118, 0, 0, 841,
	0, 843, 1273, 1299, 1301, 0, 1308, 1304, 1077, 1085,
	1096, 0, 0, 1102, 1114, 1114, 0, 1105, 1391, 1391,
	1108, 1387, 1389, 1387, 1114, 1114, 0, 55, 0, 0,
	1163, 0, 0, 0, 526, 0, 0, 0, 1132, 1134,
	1139, 1135, 1140, 1134, 1134, 1134, 1134, 1145, 1134, 1134,
	1134, 1134, 1134, 1134, 1134, 1134, 1130, 1393, 1392, 1378,
	0, 1379, 1390, 1395, 0, 1398, 0, 535, 550, 578,
	579, 584, 585, 0, 0, 0, 728, 0, 0, 0,
	741, 0, 757, 755, 756, 0, 771, 327, 328, 329,
	330, 0, 0, 0, 775, 0, 507, 0, 814, 815,
	816, 817, 818, -2, 827, 0, 0, 965, 965, 965,
	857, 0, 848, 538, 0, -2, 0, 0, 486, 0,
	0, 667, 377, 626, 400, 0, 416, 626, 626, 425,
	442, 0, 307, -2, 971, 1030, 993, 993, 982, 993,
	993, 823, 0, 311, 312, 313, 0, 315, 916, 917,
	0, 0, 920, 921, 922, 923, 0, 0, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 951, 952,
	953, 954, 955, 956, 936, 937, 938, 939, 940, 941,
	948, 0, 0, 945, 0, 757, 0, 0, 0, 771,
	763, 0, 765, 766, 0, 0, 509, 626, 237, 0,
	662, 656, 0, 645, 660, 661, 648, 0, 650, 0,
	646, 647, 626, 638, 669, 694, 671, 674, 676, 677,
	683, 0, 0, 0, 0, 219, 176, 0, 346, 182,
	962, 469, 474, 622, 0, 0, 622, 552, 78, 0,
	0, 0, 528, 0, 533, 530, 515, 524, 514, 521,
	522, 541, 530, 504, 503, 1005, 272, 0, 778, 98,
	103, 104, 105, 99, 97, 785, 0, 787, 0, 839,
	843, 0, 0, 1305, 1101, 1086, 1103, 1115, 1116, 1104,
	1087, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1088, 1159,
	0, 1161, 1169, 1170, 0, 1217, 1221, 0, 0, 0,
	1138, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 580, 1131, 0, 1386, 0, 0, 552,
	590, 591, 716, 719, 725, 727, 0, 738, 0, 745,
	746, 0, 0, 749, 750, 759, 0, 0, 0, 332,
	333, 0, 0, 0, 345, 341, 342, 343, 323, 770,
	761, 0, 0, 828, 1408, 1408, 1408, 0, 0, 966,
	967, 0, 0, 860, 0, 0, 851, 0, 692, 0,
	0, 626, 485, 488, 489, 572, 378, 626, 420, 417,
	626, 304, 995, -2, 1008, 1010, 0, 0, 1013, 1014,
	0, 0, 0, 0, 1051, 1020, 0, 0, 1024, 0,
	1323, 1324, 0, 1028, 0, 985, 994, 0, 994, 0,
	0, 993, 0, 314, 918, 919, 924, 925, 942, 0,
	0, 944, 0, 0, 316, 0, 0, 317, 321, 762,
	0, 767, 768, 580, 0, 0, 642, 663, 0, 0,
	643, 0, 644, 649, 651, 236, 678, 0, 0, 680,
	681, 682, 673, 184, 612, 0, 0, 633, 613, 554,
	0, 551, 79, 0, 0, 0, 0, 529, 513, 502,
	100, 95, 786, 81, 842, 844, 840, 0, 1171, 0,
	1134, 1133, 1127, 0, 1396, 1399, 554, 0, 744, 742,
	758, 748, 0, 772, 773, 0, 334, 335, 0, 338,
	344, 760, 508, 0, 0, 0, 0, 820, -2, 0,
	0, -2, 863, 0, 858, 0, 850, 0, 853, 626,
	626, -2, 482, 487, 0, 401, 421, 1009, 1011, 1012,
	1015, 1016, 959, 960, 1017, 1056, 1057, 1058, 1018, 1053,
	1054, 1055, 1019, 0, 0, 0, 1321, 1322, 1049, 0,
	0, 0, 0, 0, 0, 0, 979, 949, 950, 943,
	946, 947, 320, 318, 510, 575, 238, 239, 664, 0,
	657, 687, 684, 0, 0, 623, 625, 556, 0, 553,
	0, 547, 549, 89, 518, 51, 72, 0, 1160, 1210,
	1137, 0, 1128, 0, 1122, 1123, 1124, 1129, 556, 0,
	0, 0, 331, 336, 0, 339, 340, 0, 809, 1387,
	0, 829, 830, 831, 870, -2, 913, 968, 835, 81,
	870, 854, 0, 861, 0, 859, 852, 580, 483, 0,
	0, 1224, 1044, 0, 0, 986, 988, 989, 990, 991,
	992, 987, 0, 0, 0, 0, 978, 980, 1025, 0,
	235, 0, 0, 688, 690, 685, 686, 42, 0, 555,
	80, 0, 43, 0, 69, 0, 82, 83, 0, 0,
	0, 0, 1136, 1125, 0, 0, 0, 0, 545, 0,
	743, 751, 0, 753, 337, 802, 0, 586, 0, 872,
	0, 832, 915, 837, 872, 846, 0, 856, 0, 865,
	0, 862, 575, 1052, 0, 1023, 1032, 1045, 0, 0,
	802, 802, 802, 802, 0, 1026, 665, 679, 0, 0,
	0, 52, 56, 0, 78, 75, 0, 84, 0, 0,
	0, 0, 0, 1117, 1118, 1120, 1119, 1121, 0, 752,
	801, 810, 811, 586, 834, 0, 909, 914, 836, 855,
	864, 0, 867, 481, 1021, 1031, 1033, 1034, 0, 1046,
	1047, 1048, 1050, 973, 974, 975, 976, 0, 689, 691,
	0, 558, 548, 45, 0, 0, 73, 74, 76, 0,
	85, 0, 87, 88, 0, 732, 803, 1408, 0, 0,
	807, 808, 812, 0, 897, 0, 0, 903, 0, 910,
	866, 1022, 1035, 0, 1036, 0, 0, 0, 977, 557,
	0, 845, 0, 57, 0, 59, 61, 62, 996, 70,
	71, 77, 86, 1126, 0, 805, 0, 873, 0, 875,
	0, 0, 0, 0, 0, 907, 0, 1037, 1039, 1040,
	0, 0, 1038, 559, 46, 47, 0, 58, 0, 0,
	804, 806, 0, 877, 0, 898, 0, 0, 0, 0,
	0, 0, 0, 1041, 1043, 1042, 0, 0, 60, 997,
	874, 871, 0, 909, 899, 0, 901, 0, 0, 0,
	0, 48, 49, 50, 0, 0, 879, 0, 895, 900,
	902, 904, 0, 908, 906, 998, 878, 0, 891, 876,
	0, 905, 880, -2, 0, 896, 881, -2, 0, 889,
	0, 0, 882, 890, 0, 885, 0, 0, 0, 884,
	0, -2, 892, 0, 0, 886, -2, 0, 894, 893,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 546,
	105, 104, 106, 3, 547, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 548, 117, 549, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:678
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:684
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:720
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:725
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:751
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:757
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:764
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:772
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:778
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:787
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:817
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:830
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:847
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:851
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:857
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:872
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:876
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:890
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:894
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:898
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:911
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:917
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:926
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:937
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:941
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:947
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:951
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:957
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:961
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:967
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:991
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1010
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1014
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1018
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1027
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1034
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1042
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1049
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1054
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1061
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1070
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1094
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1098
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1104
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1110
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1128
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1145
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1168
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1172
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1181
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1191
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1204
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1215
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1255
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1274
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1280
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1287
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1304
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1308
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1312
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1316
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1320
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1324
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1331
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1335
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1341
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1357
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1361
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1391
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1403
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1407
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1411
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1415
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1419
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1423
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1427
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1431
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1451
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1455
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1459
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1463
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1467
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1471
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1475
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1479
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1483
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1487
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1491
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1495
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1499
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1503
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1507
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1511
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1515
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1519
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1523
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1527
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1531
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1535
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1539
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1543
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1547
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1551
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1555
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1559
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1563
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1575
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1598
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1632
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1636
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1642
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1652
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1659
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1669
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1683
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1692
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1700
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1708
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1731
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1754
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1761
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1768
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1776
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1783
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1807
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1813
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1817
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1823
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1827
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1833
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1837
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1848
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1859
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1863
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1867
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1871
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1879
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1883
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1901
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1909
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1962
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1980
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1991
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1995
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2017
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2021
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2027
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2033
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2037
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2041
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2045
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2069
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2079
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2083
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2111
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2115
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2119
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2123
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2139
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2147
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2157
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2202
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2214
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2219
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2220
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2221
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2261
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2265
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2271
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2278
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2282
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2353
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2359
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2390
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2403
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2423
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2431
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2439
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2451
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2455
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2459
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2463
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2471
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2475
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2485
		{
			yyVAL.item = nil
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2490
		{
			yyVAL.item = nil
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2552
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2563
		{
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2567
		{
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2572
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2581
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2626
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2634
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2642
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2646
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2650
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2664
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2671
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2681
		{
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2683
		{
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2692
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2719
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2731
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2737
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2774
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2778
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2823
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2832
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2836
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2841
		{
			yyVAL.str = ""
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2845
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2851
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2893
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2897
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2903
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2909
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2913
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2917
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2923
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2977
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2981
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3015
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3027
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3033
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3039
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3048
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3066
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3071
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3078
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3094
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3107
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3118
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3122
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3128
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3133
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3140
		{
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3142
		{
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3145
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3154
		{
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3158
		{
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3172
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3185
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3193
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3207
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3227
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3240
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3246
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3250
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3256
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3269
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3277
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3291
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3310
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3314
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3323
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3327
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3342
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3346
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3352
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3356
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3362
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3366
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3372
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3377
		{
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3388
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3392
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3408
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3414
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3418
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3424
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3428
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3464
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3482
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3507
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3518
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3531
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3535
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3540
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3544
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3551
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3556
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3569
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3573
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3589
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3602
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3611
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3615
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3633
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3642
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3648
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3652
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3665
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3671
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3677
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3681
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3692
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3696
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3700
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3705
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3709
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3713
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3723
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3727
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3741
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3755
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3775
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3787
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3803
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3812
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3820
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3828
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3836
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3844
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3852
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3860
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3868
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3876
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3886
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3897
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3911
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3915
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3919
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3924
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3928
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3945
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3954
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3963
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3969
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3973
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3979
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3983
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3988
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3992
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3997
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4005
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4011
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4019
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4027
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4037
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4043
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4052
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4061
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4070
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4080
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4084
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4094
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4098
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4102
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4106
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4112
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4122
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4126
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4148
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4154
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4158
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4162
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4172
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4182
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4188
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4192
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4198
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4202
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4212
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4225
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4268
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4272
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4278
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4288
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4292
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4296
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4301
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4305
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4309
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4313
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4322
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4326
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4330
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4334
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4339
		{
			yyVAL.str = ""
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4343
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4347
		{
			yyVAL.str = yyDollar[2].str
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4353
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4359
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4363
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4367
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4375
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4381
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4424
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4430
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4436
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4446
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4451
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4457
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4464
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4468
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4474
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4480
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4485
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4489
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4493
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4497
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4516
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4521
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4527
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4534
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4538
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4544
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4550
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4554
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4558
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4564
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4570
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4576
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4599
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4605
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4615
		{
			yyVAL.str = yyDollar[1].str
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4619
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4625
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4632
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4638
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4646
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4652
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4659
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4667
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4673
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4705
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4709
		{
			yyVAL.str = yyDollar[2].str
		}
	case 763:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4729
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4735
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4741
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4756
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4765
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4770
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4776
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4784
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4890
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4894
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4900
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4910
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4914
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4920
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4930
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4934
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4947
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4953
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4960
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4975
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4982
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4991
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4995
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5001
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5046
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5069
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5091
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5095
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5103
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5107
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5113
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5117
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5123
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5128
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5145
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5149
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5155
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5170
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5180
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5193
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5199
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5203
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5209
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5213
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5217
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5232
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5244
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5253
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5266
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5273
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5283
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5291
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5302
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5306
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5311
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5315
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5322
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5333
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5346
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5360
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5368
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5375
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5382
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5389
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5400
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5412
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5419
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5430
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5437
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5448
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5455
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5462
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5480
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5489
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5510
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5517
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5521
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5534
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5540
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5544
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5550
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5559
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5573
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5579
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5583
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5589
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5596
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5605
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5609
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5618
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5623
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5627
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5632
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5636
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5646
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5650
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5661
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5669
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5677
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5685
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5696
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5705
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5715
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5725
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5729
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5738
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5747
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5753
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5757
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5761
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5767
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5771
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5775
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5779
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5787
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5792
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5796
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5800
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5804
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5808
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5812
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5816
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5820
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5824
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5828
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5832
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5836
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5840
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5848
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5856
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5860
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5864
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5868
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5872
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5876
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5880
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5887
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5891
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5897
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5902
		{
			yyVAL.str = ""
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5906
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5910
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5932
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5936
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5950
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5954
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5963
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5968
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5974
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5985
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5991
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5995
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6001
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6013
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6019
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6037
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6060
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6069
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6079
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6093
		{
			yyVAL.str = ""
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6097
		{
			yyVAL.str = yyDollar[1].str
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6107
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6113
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6119
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6133
		{
			yyVAL.str = ""
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6137
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6143
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6149
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6153
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6157
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6163
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6167
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6171
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6175
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6181
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6185
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6189
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6198
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6204
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6208
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6218
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6226
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6230
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6234
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6239
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6243
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6247
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6255
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6259
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6263
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6267
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6286
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6295
		{
			yyVAL.str = ""
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6305
		{
			yyVAL.str = ""
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6309
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6315
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6327
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6341
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6348
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6355
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6364
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6370
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6380
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6384
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6388
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6392
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6397
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6408
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6421
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6426
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6430
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6446
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6452
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6456
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6460
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6464
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6468
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6472
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6476
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6480
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6484
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6488
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6492
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6496
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6500
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6506
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6510
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6514
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6518
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6522
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6526
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6530
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6534
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6538
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6542
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6546
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6550
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6555
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6563
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6568
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6572
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6581
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6585
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6589
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6593
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6597
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6603
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6616
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6625
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6631
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6635
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6641
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6651
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6668
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6711
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6752
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6767
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6784
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6799
		{
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6805
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6809
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6813
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6819
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6823
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6831
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6835
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6845
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6852
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6865
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6872
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6881
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6886
		{
			yyVAL.str = ","
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6890
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6902
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6912
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6923
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6933
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6942
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6951
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6961
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6981
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6991
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7001
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7011
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7021
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7031
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7041
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7051
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7061
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7071
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7088
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7096
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7104
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7112
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7120
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7130
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7147
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7155
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7163
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7171
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7179
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7190
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7200
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7212
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7223
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7245
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7281
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7305
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7316
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7324
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7350
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7358
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7366
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7377
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7386
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7395
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7403
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7413
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7421
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7435
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7445
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7464
		{
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7466
		{
		}
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7507
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7518
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7522
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7526
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7532
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7541
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7551
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7558
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7562
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7566
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7586
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7636
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7648
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7652
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7682
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7688
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7699
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7703
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7707
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7713
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7717
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7721
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7725
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7729
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7733
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7737
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7743
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7747
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7751
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7755
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7761
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7765
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7778
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7783
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7787
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7791
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7795
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7799
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7803
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7817
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7821
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7828
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7839
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7844
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7850
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7862
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7886
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7899
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7912
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7925
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7938
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7951
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7964
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7977
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7990
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8003
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8016
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8031
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8058
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8100
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8148
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8177
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8197
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8217
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8237
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8253
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8266
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8279
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8292
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8305
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8317
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8329
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8341
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8353
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8365
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8377
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8389
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8401
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8413
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8426
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8439
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8454
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8462
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8471
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8481
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8504
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8509
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8515
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8522
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8526
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8531
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8535
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8541
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8547
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8554
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8561
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8570
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8577
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8584
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8593
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8597
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8601
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8607
		{
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8609
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8619
		{
			yyVAL.str = ""
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8623
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

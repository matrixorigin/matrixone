// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INFILE = 57750
const TERMINATED = 57751
const OPTIONALLY = 57752
const ENCLOSED = 57753
const ESCAPED = 57754
const STARTING = 57755
const LINES = 57756
const ROWS = 57757
const IMPORT = 57758
const DISCARD = 57759
const MODUMP = 57760
const OVER = 57761
const PRECEDING = 57762
const FOLLOWING = 57763
const GROUPS = 57764
const DATABASES = 57765
const TABLES = 57766
const SEQUENCES = 57767
const EXTENDED = 57768
const FULL = 57769
const PROCESSLIST = 57770
const FIELDS = 57771
const COLUMNS = 57772
const OPEN = 57773
const ERRORS = 57774
const WARNINGS = 57775
const INDEXES = 57776
const SCHEMAS = 57777
const NODE = 57778
const LOCKS = 57779
const ROLES = 57780
const TABLE_NUMBER = 57781
const COLUMN_NUMBER = 57782
const TABLE_VALUES = 57783
const TABLE_SIZE = 57784
const NAMES = 57785
const GLOBAL = 57786
const PERSIST = 57787
const SESSION = 57788
const ISOLATION = 57789
const LEVEL = 57790
const READ = 57791
const WRITE = 57792
const ONLY = 57793
const REPEATABLE = 57794
const COMMITTED = 57795
const UNCOMMITTED = 57796
const SERIALIZABLE = 57797
const LOCAL = 57798
const EVENTS = 57799
const PLUGINS = 57800
const CURRENT_TIMESTAMP = 57801
const DATABASE = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const REPLACE = 57809
const CONVERT = 57810
const SEPARATOR = 57811
const TIMESTAMPDIFF = 57812
const CURRENT_DATE = 57813
const CURRENT_USER = 57814
const CURRENT_ROLE = 57815
const SECOND_MICROSECOND = 57816
const MINUTE_MICROSECOND = 57817
const MINUTE_SECOND = 57818
const HOUR_MICROSECOND = 57819
const HOUR_SECOND = 57820
const HOUR_MINUTE = 57821
const DAY_MICROSECOND = 57822
const DAY_SECOND = 57823
const DAY_MINUTE = 57824
const DAY_HOUR = 57825
const YEAR_MONTH = 57826
const SQL_TSI_HOUR = 57827
const SQL_TSI_DAY = 57828
const SQL_TSI_WEEK = 57829
const SQL_TSI_MONTH = 57830
const SQL_TSI_QUARTER = 57831
const SQL_TSI_YEAR = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MINUTE = 57834
const RECURSIVE = 57835
const CONFIG = 57836
const DRAINER = 57837
const SOURCE = 57838
const STREAM = 57839
const HEADERS = 57840
const MATCH = 57841
const AGAINST = 57842
const BOOLEAN = 57843
const LANGUAGE = 57844
const WITH = 57845
const QUERY = 57846
const EXPANSION = 57847
const WITHOUT = 57848
const VALIDATION = 57849
const ADDDATE = 57850
const BIT_AND = 57851
const BIT_OR = 57852
const BIT_XOR = 57853
const CAST = 57854
const COUNT = 57855
const APPROX_COUNT = 57856
const APPROX_COUNT_DISTINCT = 57857
const APPROX_PERCENTILE = 57858
const CURDATE = 57859
const CURTIME = 57860
const DATE_ADD = 57861
const DATE_SUB = 57862
const EXTRACT = 57863
const GROUP_CONCAT = 57864
const MAX = 57865
const MID = 57866
const MIN = 57867
const NOW = 57868
const POSITION = 57869
const SESSION_USER = 57870
const STD = 57871
const STDDEV = 57872
const MEDIAN = 57873
const STDDEV_POP = 57874
const STDDEV_SAMP = 57875
const SUBDATE = 57876
const SUBSTR = 57877
const SUBSTRING = 57878
const SUM = 57879
const SYSDATE = 57880
const SYSTEM_USER = 57881
const TRANSLATE = 57882
const TRIM = 57883
const VARIANCE = 57884
const VAR_POP = 57885
const VAR_SAMP = 57886
const AVG = 57887
const RANK = 57888
const ROW_NUMBER = 57889
const DENSE_RANK = 57890
const NEXTVAL = 57891
const SETVAL = 57892
const CURRVAL = 57893
const LASTVAL = 57894
const ARROW = 57895
const ROW = 57896
const OUTFILE = 57897
const HEADER = 57898
const MAX_FILE_SIZE = 57899
const FORCE_QUOTE = 57900
const PARALLEL = 57901
const UNUSED = 57902
const BINDINGS = 57903
const DO = 57904
const DECLARE = 57905
const LOOP = 57906
const WHILE = 57907
const LEAVE = 57908
const ITERATE = 57909
const UNTIL = 57910
const CALL = 57911
const SPBEGIN = 57912
const BACKEND = 57913
const SERVERS = 57914
const KILL = 57915
const BACKUP = 57916
const FILESYSTEM = 57917
const QUERY_RESULT = 57918

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10310

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 696,
	-2, 677,
	-1, 131,
	233, 1028,
	235, 952,
	-2, 992,
	-1, 154,
	42, 517,
	235, 517,
	262, 524,
	263, 524,
	451, 517,
	-2, 550,
	-1, 190,
	597, 1733,
	-2, 433,
	-1, 523,
	314, 133,
	425, 133,
	-2, 1645,
	-1, 586,
	81, 1443,
	-2, 1787,
	-1, 587,
	81, 1461,
	-2, 1758,
	-1, 591,
	81, 1462,
	-2, 1786,
	-1, 617,
	81, 1373,
	-2, 1855,
	-1, 618,
	81, 1374,
	-2, 1854,
	-1, 619,
	81, 1375,
	-2, 1844,
	-1, 620,
	81, 1818,
	-2, 1839,
	-1, 621,
	81, 1819,
	-2, 1840,
	-1, 622,
	81, 1820,
	-2, 1846,
	-1, 623,
	81, 1821,
	-2, 1828,
	-1, 624,
	81, 1822,
	-2, 1837,
	-1, 625,
	81, 1823,
	-2, 1847,
	-1, 626,
	81, 1824,
	-2, 1848,
	-1, 627,
	81, 1825,
	-2, 1853,
	-1, 628,
	81, 1826,
	-2, 1858,
	-1, 629,
	81, 1827,
	-2, 1859,
	-1, 631,
	81, 1440,
	-2, 1634,
	-1, 635,
	81, 1445,
	-2, 1646,
	-1, 638,
	81, 1449,
	-2, 1664,
	-1, 642,
	81, 1453,
	-2, 1704,
	-1, 643,
	81, 1454,
	-2, 1782,
	-1, 651,
	81, 1464,
	-2, 1767,
	-1, 652,
	81, 1465,
	-2, 1811,
	-1, 653,
	81, 1466,
	-2, 1777,
	-1, 654,
	81, 1467,
	-2, 1801,
	-1, 665,
	81, 1351,
	-2, 1849,
	-1, 666,
	81, 1352,
	-2, 1850,
	-1, 667,
	81, 1353,
	-2, 1851,
	-1, 671,
	21, 697,
	-2, 660,
	-1, 751,
	446, 550,
	447, 550,
	-2, 518,
	-1, 795,
	122, 1634,
	133, 1634,
	153, 1634,
	-2, 1609,
	-1, 898,
	21, 697,
	-2, 660,
	-1, 998,
	21, 696,
	-2, 1249,
	-1, 1115,
	513, 993,
	514, 993,
	-2, 870,
	-1, 1368,
	81, 1511,
	-2, 1784,
	-1, 1369,
	81, 1512,
	-2, 1785,
	-1, 1507,
	82, 842,
	-2, 848,
	-1, 1888,
	82, 1595,
	154, 1595,
	-2, 1769,
	-1, 1889,
	82, 1595,
	154, 1595,
	-2, 1768,
	-1, 1890,
	82, 1573,
	154, 1573,
	-2, 1755,
	-1, 1891,
	82, 1574,
	154, 1574,
	-2, 1760,
	-1, 1892,
	82, 1575,
	154, 1575,
	-2, 1692,
	-1, 1893,
	82, 1576,
	154, 1576,
	-2, 1686,
	-1, 1894,
	82, 1577,
	154, 1577,
	-2, 1625,
	-1, 1895,
	82, 1578,
	154, 1578,
	-2, 1757,
	-1, 1896,
	82, 1579,
	154, 1579,
	-2, 1690,
	-1, 1897,
	82, 1580,
	154, 1580,
	-2, 1685,
	-1, 1898,
	82, 1581,
	154, 1581,
	-2, 1678,
	-1, 1900,
	82, 1584,
	154, 1584,
	-2, 1801,
	-1, 1901,
	82, 1564,
	154, 1564,
	-2, 1787,
	-1, 1902,
	82, 1593,
	154, 1593,
	-2, 1758,
	-1, 1903,
	82, 1593,
	154, 1593,
	-2, 1786,
	-1, 1904,
	82, 1593,
	154, 1593,
	-2, 1647,
	-1, 1905,
	82, 1591,
	154, 1591,
	-2, 1777,
	-1, 1906,
	82, 1588,
	154, 1588,
	-2, 1669,
	-1, 1907,
	81, 1545,
	82, 1545,
	154, 1545,
	383, 1545,
	384, 1545,
	385, 1545,
	-2, 1624,
	-1, 1908,
	81, 1546,
	82, 1546,
	154, 1546,
	383, 1546,
	384, 1546,
	385, 1546,
	-2, 1626,
	-1, 1909,
	81, 1549,
	82, 1549,
	154, 1549,
	383, 1549,
	384, 1549,
	385, 1549,
	-2, 1759,
	-1, 1910,
	81, 1551,
	82, 1551,
	154, 1551,
	383, 1551,
	384, 1551,
	385, 1551,
	-2, 1742,
	-1, 1911,
	81, 1553,
	82, 1553,
	154, 1553,
	383, 1553,
	384, 1553,
	385, 1553,
	-2, 1691,
	-1, 1912,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1674,
	-1, 1913,
	81, 1556,
	82, 1556,
	154, 1556,
	383, 1556,
	384, 1556,
	385, 1556,
	-2, 1675,
	-1, 1914,
	81, 1558,
	82, 1558,
	154, 1558,
	383, 1558,
	384, 1558,
	385, 1558,
	-2, 1623,
	-1, 1915,
	82, 1598,
	154, 1598,
	383, 1598,
	384, 1598,
	385, 1598,
	-2, 1652,
	-1, 1916,
	82, 1598,
	154, 1598,
	383, 1598,
	384, 1598,
	385, 1598,
	-2, 1665,
	-1, 1917,
	82, 1601,
	154, 1601,
	383, 1601,
	384, 1601,
	385, 1601,
	-2, 1648,
	-1, 1918,
	82, 1601,
	154, 1601,
	383, 1601,
	384, 1601,
	385, 1601,
	-2, 1707,
	-1, 1919,
	82, 1598,
	154, 1598,
	383, 1598,
	384, 1598,
	385, 1598,
	-2, 1727,
	-1, 1935,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	275, 987,
	-2, 980,
	-1, 2073,
	21, 696,
	-2, 790,
	-1, 2269,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	275, 987,
	-2, 981,
	-1, 2285,
	79, 606,
	154, 606,
	-2, 1136,
	-1, 2617,
	191, 987,
	299, 1217,
	-2, 1189,
	-1, 2754,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	-2, 1079,
	-1, 2756,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	-2, 1079,
	-1, 2766,
	79, 606,
	154, 606,
	-2, 1137,
	-1, 2774,
	191, 987,
	299, 1217,
	-2, 1190,
	-1, 2900,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	-2, 1080,
	-1, 3261,
	82, 1046,
	154, 1046,
	-2, 987,
	-1, 3265,
	82, 1046,
	154, 1046,
	-2, 987,
	-1, 3279,
	82, 1050,
	154, 1050,
	-2, 987,
	-1, 3284,
	82, 1051,
	154, 1051,
	-2, 987,
}

const yyPrivate = 57344

const yyLast = 37092

var yyAct = [...]int{
	553, 3265, 1587, 3264, 3273, 3244, 181, 1287, 1349, 3136,
	532, 534, 555, 3197, 527, 3162, 3215, 3144, 2635, 3145,
	542, 2849, 3056, 1209, 2940, 3070, 2788, 1863, 1345, 2698,
	2854, 3048, 3074, 1150, 2884, 1030, 2882, 2885, 2975, 583,
	439, 2699, 3009, 536, 2274, 672, 794, 2852, 2751, 1277,
	446, 2965, 451, 451, 3057, 3059, 1541, 2738, 451, 467,
	476, 1975, 2889, 476, 2775, 2288, 1352, 2899, 2585, 2724,
	2844, 2401, 2902, 2402, 2573, 1676, 2727, 2384, 2614, 2632,
	2621, 2324, 1641, 2394, 2067, 166, 2696, 2400, 1738, 487,
	1769, 2684, 2423, 1886, 1978, 2667, 2397, 2260, 2554, 2557,
	2552, 2586, 481, 2620, 1946, 1673, 2583, 2270, 1884, 1876,
	892, 1202, 525, 2051, 2460, 1867, 1688, 1866, 531, 1268,
	526, 1765, 1746, 2304, 2497, 1487, 1747, 2115, 1669, 1712,
	1739, 2056, 1764, 800, 727, 2443, 2068, 1644, 2005, 1976,
	2249, 2244, 1570, 1123, 1642, 2306, 6, 1273, 1945, 1579,
	1517, 177, 8, 176, 7, 1495, 1281, 1278, 439, 2132,
	1797, 1343, 1649, 533, 535, 846, 1766, 2095, 445, 1242,
	1882, 114, 1286, 1218, 1926, 1776, 2207, 524, 1188, 1398,
	35, 181, 1382, 181, 1334, 837, 838, 1971, 543, 909,
	2206, 1728, 1249, 831, 832, 2588, 2587, 1742, 836, 1702,
	526, 758, 26, 1745, 1553, 55, 798, 787, 15, 1139,
	1342, 13, 2075, 14, 450, 450, 32, 1552, 460, 1516,
	458, 669, 1187, 1125, 726, 463, 1158, 1135, 1185, 788,
	36, 1403, 1404, 490, 489, 23, 16, 10, 1069, 1151,
	1100, 167, 1241, 704, 475, 1095, 163, 160, 1773, 671,
	708, 834, 2741, 2691, 746, 3000, 2232, 1783, 2232, 2232,
	724, 472, 2166, 2121, 2118, 1500, 833, 468, 835, 438,
	470, 1256, 471, 830, 1031, 469, 164, 51, 156, 132,
	830, 830, 165, 1086, 2119, 447, 1171, 2842, 2116, 473,
	1254, 1252, 829, 2456, 157, 2454, 1717, 967, 968, 969,
	966, 149, 2971, 456, 2966, 158, 2845, 479, 2697, 1491,
	1025, 3061, 828, 1741, 670, 2013, 164, 8, 1348, 7,
	164, 930, 164, 730, 113, 967, 968, 969, 966, 164,
	51, 156, 132, 801, 1301, 680, 2871, 164, 1294, 101,
	164, 3127, 803, 2275, 2153, 161, 2273, 1770, 2725, 164,
	3020, 164, 2161, 1087, 2866, 3092, 1525, 164, 51, 156,
	132, 1110, 1109, 485, 1298, 2520, 1511, 804, 1291, 1781,
	113, 486, 1115, 1930, 2869, 164, 51, 156, 132, 2093,
	660, 964, 659, 661, 662, 1300, 663, 664, 2475, 1293,
	2081, 161, 729, 2080, 3021, 2094, 2082, 2468, 161, 113,
	2430, 2431, 768, 2429, 1319, 1686, 161, 1088, 1653, 161,
	1167, 1335, 673, 1168, 1339, 1654, 1655, 1543, 161, 767,
	161, 118, 119, 2133, 120, 121, 161, 938, 1501, 1502,
	940, 945, 1566, 1147, 946, 681, 1154, 1189, 1338, 1191,
	1153, 1156, 1157, 2246, 161, 3180, 1156, 1157, 3178, 1351,
	451, 3148, 3149, 2247, 962, 797, 2862, 957, 941, 796,
	451, 902, 948, 3064, 3123, 3063, 3122, 3062, 3121, 3064,
	3063, 3062, 1854, 3166, 3167, 2973, 2700, 2461, 476, 476,
	3050, 451, 2462, 3050, 2463, 770, 3053, 2969, 769, 131,
	155, 162, 2700, 99, 2148, 1354, 3126, 903, 1159, 1170,
	2245, 2340, 897, 899, 2976, 2977, 2978, 2979, 1670, 3067,
	2709, 154, 148, 147, 1255, 1253, 912, 1340, 57, 1660,
	1330, 2728, 755, 1777, 2568, 2876, 2045, 2735, 1925, 715,
	731, 840, 1725, 934, 1262, 1261, 2235, 943, 2558, 912,
	1337, 2158, 131, 970, 162, 1000, 1438, 2566, 1664, 2800,
	2995, 2011, 999, 960, 961, 2488, 3066, 733, 936, 2486,
	1008, 2843, 933, 896, 154, 959, 3182, 2455, 2388, 2048,
	939, 942, 2047, 799, 925, 2998, 2873, 3129, 3130, 150,
	151, 152, 1014, 2987, 901, 902, 2988, 2861, 2052, 3173,
	2252, 898, 2582, 2596, 2863, 3080, 935, 2281, 3147, 478,
	944, 520, 2563, 2564, 522, 159, 1353, 2633, 2634, 521,
	3017, 477, 894, 2393, 1932, 1782, 2805, 3075, 2565, 2562,
	754, 753, 900, 2812, 2987, 109, 1145, 2988, 1034, 153,
	3258, 110, 3274, 3206, 3177, 1179, 3213, 752, 801, 2990,
	3138, 2815, 2982, 921, 1786, 1788, 1789, 803, 728, 1684,
	1685, 1134, 2994, 2637, 1169, 1336, 2931, 1085, 3238, 732,
	763, 955, 956, 776, 2258, 2022, 2021, 472, 472, 916,
	2989, 937, 804, 468, 468, 947, 470, 470, 471, 471,
	2990, 469, 469, 759, 1198, 2097, 1197, 1771, 111, 2926,
	905, 906, 1093, 446, 1096, 473, 473, 2999, 2711, 50,
	2492, 2231, 1002, 1003, 1004, 1005, 914, 913, 1035, 801,
	1771, 2989, 923, 1771, 1066, 1132, 922, 1131, 803, 760,
	764, 3275, 918, 919, 3134, 3135, 727, 3138, 830, 914,
	913, 2560, 950, 1006, 1130, 951, 3245, 749, 830, 747,
	751, 767, 3010, 804, 3269, 748, 745, 744, 52, 750,
	735, 736, 734, 737, 738, 739, 740, 3218, 765, 830,
	766, 1772, 830, 953, 3018, 1784, 830, 830, 2117, 474,
	3128, 761, 762, 451, 3019, 1181, 893, 1155, 3281, 1152,
	2758, 439, 439, 907, 133, 2275, 2537, 474, 2870, 3183,
	439, 439, 2042, 2043, 1213, 1213, 1257, 451, 1994, 1798,
	670, 1149, 1148, 772, 1974, 1996, 771, 1974, 757, 3047,
	1156, 1157, 484, 1156, 1157, 476, 1096, 446, 1215, 2840,
	1245, 1245, 1211, 1211, 133, 2440, 2441, 2569, 133, 52,
	133, 181, 1220, 1671, 1244, 1244, 2872, 133, 949, 2559,
	439, 2636, 1146, 112, 39, 133, 1101, 52, 133, 2920,
	49, 5, 2162, 2996, 116, 117, 924, 133, 2489, 133,
	485, 1094, 1995, 1991, 1186, 133, 2629, 1043, 1044, 799,
	3268, 930, 2341, 2154, 2342, 2343, 954, 1360, 1363, 1364,
	1787, 2877, 2983, 133, 1981, 756, 3058, 2085, 1361, 1285,
	2251, 1288, 777, 3219, 2009, 1263, 1296, 2425, 2427, 1661,
	1331, 952, 1774, 1207, 1208, 2264, 2265, 2266, 2267, 773,
	2633, 2634, 1071, 717, 1107, 718, 1317, 2927, 2928, 2491,
	1073, 1984, 2561, 2983, 1113, 1112, 1111, 2984, 1663, 480,
	1213, 1302, 1213, 902, 1785, 1177, 671, 1102, 1103, 1104,
	1105, 1106, 2547, 1108, 2933, 1098, 2255, 2256, 1114, 1141,
	1142, 2338, 3280, 1128, 929, 721, 722, 723, 1133, 1219,
	2368, 2254, 2499, 2498, 1120, 1143, 1099, 1266, 2630, 1269,
	1270, 2234, 775, 1161, 1162, 1870, 1164, 1165, 1166, 1180,
	1355, 1356, 1357, 1358, 1359, 1237, 1122, 1091, 1172, 1173,
	1504, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1160, 1872, 1871, 1163, 1393, 1394, 1505,
	1193, 1195, 1402, 1275, 1276, 1869, 1196, 1503, 1980, 1205,
	1206, 3216, 3217, 1982, 1400, 1401, 1451, 683, 1441, 1442,
	1443, 1435, 2941, 2942, 2943, 2945, 2944, 1089, 1090, 1445,
	2034, 1457, 1280, 1283, 1458, 1284, 1221, 774, 768, 1985,
	684, 1460, 456, 1347, 1231, 2907, 1350, 1467, 1468, 1235,
	2426, 1236, 719, 1246, 1928, 1879, 1990, 2601, 1829, 1258,
	1988, 1828, 1247, 3287, 1544, 1312, 1313, 1983, 2286, 2359,
	2360, 674, 3221, 1489, 965, 1328, 1332, 1493, 1880, 1881,
	1496, 1365, 2580, 2922, 1097, 687, 927, 2921, 804, 2664,
	1485, 451, 804, 1515, 1213, 1519, 1520, 930, 1522, 1523,
	472, 2135, 768, 1362, 1544, 451, 468, 2660, 1213, 470,
	1325, 471, 727, 1292, 469, 1542, 1322, 1299, 2748, 1321,
	1213, 770, 671, 1308, 769, 1857, 1181, 1303, 473, 1304,
	2153, 467, 2287, 965, 1488, 965, 686, 2639, 1326, 3286,
	689, 688, 1450, 1324, 1323, 1320, 2008, 2066, 1391, 1392,
	1565, 716, 928, 1341, 1346, 2631, 674, 1316, 1571, 1571,
	2240, 1181, 928, 1181, 1181, 1315, 2065, 451, 1927, 1515,
	1515, 1384, 2237, 1213, 1638, 1639, 1651, 2140, 1433, 1434,
	1514, 1437, 3277, 1861, 1569, 770, 1521, 3259, 769, 1452,
	439, 2358, 1213, 3254, 2369, 2371, 2372, 2373, 2370, 2097,
	1137, 2066, 1459, 1770, 1461, 3248, 2287, 1489, 2581, 778,
	3247, 965, 1489, 1489, 965, 3225, 3199, 451, 1515, 1213,
	1652, 1693, 3156, 451, 1696, 1697, 1136, 1140, 1140, 1140,
	1700, 1701, 821, 826, 827, 1707, 1969, 1862, 1344, 1436,
	1589, 2664, 181, 1833, 1808, 181, 181, 1761, 181, 1136,
	1136, 3150, 1682, 1512, 3278, 1715, 1633, 1634, 1718, 1779,
	3102, 1721, 3041, 3040, 1723, 3255, 1121, 1529, 1462, 967,
	968, 969, 966, 967, 968, 969, 966, 1779, 1665, 1486,
	1545, 1546, 1779, 1396, 1451, 1451, 1749, 1779, 3200, 3036,
	2066, 1451, 1451, 1199, 3157, 1657, 1756, 1659, 3035, 1067,
	1492, 1572, 3034, 1679, 1680, 1690, 3033, 1677, 1678, 1692,
	3002, 3242, 2895, 1672, 2819, 1860, 1138, 2648, 1705, 1807,
	1542, 2420, 2213, 3003, 1213, 1768, 2205, 1716, 1510, 1577,
	1719, 1720, 3003, 1722, 3042, 1950, 1539, 895, 1538, 1695,
	1524, 2167, 1526, 1527, 1528, 1550, 1551, 2151, 1549, 1555,
	967, 968, 969, 966, 1333, 1563, 1554, 3201, 1556, 1557,
	2144, 3003, 1560, 1561, 2769, 1574, 2602, 2142, 2137, 2130,
	3003, 1562, 2128, 2126, 3003, 2124, 1762, 1750, 3003, 1689,
	1575, 1576, 3003, 1791, 2896, 1689, 2097, 1949, 1640, 2649,
	1795, 1796, 1637, 2066, 965, 1858, 2518, 1666, 965, 2445,
	1573, 1801, 2289, 2156, 1805, 1656, 1839, 1658, 2155, 2147,
	1744, 1966, 1518, 965, 1824, 1838, 1809, 1744, 2734, 1950,
	823, 824, 825, 1760, 1710, 1509, 1534, 1305, 1011, 1691,
	915, 1713, 2138, 1827, 1818, 895, 1711, 1817, 1547, 2143,
	2138, 2131, 1816, 1815, 2129, 2125, 2954, 2125, 1778, 1687,
	1309, 1822, 2077, 890, 1730, 801, 1703, 888, 2817, 1950,
	1681, 1834, 801, 1836, 803, 982, 3081, 1857, 2606, 1835,
	1843, 803, 1440, 1439, 1840, 1841, 1842, 2908, 965, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 965, 1751, 804,
	1759, 1518, 930, 2116, 2761, 1753, 804, 525, 2483, 902,
	1920, 451, 472, 1440, 1439, 965, 965, 1763, 468, 965,
	3082, 470, 1203, 471, 965, 451, 469, 451, 451, 451,
	1779, 2909, 1310, 1204, 895, 1758, 3234, 2759, 3222, 1947,
	473, 1754, 1126, 1755, 2006, 1201, 1127, 1344, 2762, 1954,
	1181, 1793, 1794, 1799, 3001, 1790, 2924, 801, 2597, 1951,
	1959, 1558, 2923, 1137, 2740, 2665, 803, 2658, 2653, 1792,
	2650, 2575, 2390, 2689, 1181, 1384, 1564, 1803, 2262, 1567,
	1568, 2760, 2233, 2141, 1176, 2087, 1178, 2001, 1182, 1183,
	1184, 804, 1473, 1463, 1464, 1465, 1117, 1116, 1469, 1470,
	1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	983, 984, 985, 986, 987, 988, 989, 982, 1226, 1227,
	1228, 1229, 1230, 1466, 1232, 1233, 1234, 904, 2174, 1136,
	1239, 1240, 1887, 685, 2598, 1390, 2007, 985, 986, 987,
	988, 989, 982, 1559, 1200, 2110, 1714, 2070, 2070, 1651,
	2070, 1387, 1389, 1386, 1140, 1388, 1922, 1399, 2447, 1853,
	1855, 1856, 969, 966, 967, 968, 969, 966, 439, 439,
	1513, 3120, 1489, 1921, 1489, 2692, 902, 966, 2599, 1138,
	2936, 2935, 1213, 451, 1873, 2464, 1399, 1937, 1804, 1939,
	1940, 1941, 1489, 1489, 1929, 451, 1250, 2330, 1714, 902,
	446, 2329, 2312, 2310, 1245, 2915, 1651, 2879, 2880, 2105,
	2091, 2107, 3263, 3237, 3251, 181, 3207, 3202, 1244, 1034,
	3140, 1968, 1958, 973, 974, 975, 976, 977, 978, 979,
	971, 2074, 2072, 2012, 2076, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2874, 3111, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 690, 2035, 2036, 2037, 2038,
	2039, 2149, 2040, 2083, 1768, 2084, 1938, 1955, 1013, 1986,
	1987, 1213, 1992, 1213, 3236, 1213, 1973, 1972, 1967, 1965,
	902, 1012, 2261, 2088, 2089, 3083, 1962, 3026, 2104, 1455,
	1963, 3022, 2967, 1964, 967, 968, 969, 966, 2875, 1035,
	2111, 2159, 2911, 1456, 2732, 2120, 2910, 2763, 2731, 1213,
	2192, 2099, 2049, 2567, 1981, 1984, 2479, 2459, 2380, 2175,
	801, 2458, 1887, 2363, 2362, 2199, 2739, 2193, 2194, 803,
	1213, 2078, 2191, 2361, 2353, 2196, 2197, 1211, 967, 968,
	969, 966, 2201, 2378, 2347, 1219, 2346, 2690, 2202, 2376,
	556, 566, 2345, 2200, 804, 2344, 2092, 1689, 1211, 557,
	2733, 565, 558, 562, 561, 559, 560, 2365, 2101, 2100,
	1733, 1732, 1489, 2103, 2379, 2226, 2227, 1496, 1731, 902,
	2203, 1727, 981, 980, 990, 991, 983, 984, 985, 986,
	987, 988, 989, 982, 1726, 1306, 2395, 1193, 1195, 2377,
	2178, 1831, 2165, 2163, 1084, 2375, 2553, 2160, 967, 968,
	969, 966, 520, 3172, 563, 522, 2850, 2176, 3168, 2172,
	521, 3124, 2146, 2364, 3069, 2883, 2150, 3045, 1213, 3030,
	2152, 2259, 2157, 2224, 3025, 3101, 3024, 1515, 2997, 451,
	2968, 2917, 2892, 1985, 2878, 2285, 564, 2848, 1980, 1974,
	1979, 2291, 1977, 1982, 2168, 2169, 967, 968, 969, 966,
	2846, 2826, 2171, 2823, 2821, 2112, 2385, 2300, 1956, 1957,
	2730, 2729, 902, 2182, 967, 968, 969, 966, 1960, 1961,
	2309, 2241, 2726, 1251, 2716, 1806, 2659, 902, 902, 902,
	1571, 3089, 2655, 902, 2646, 2320, 2321, 2322, 902, 2645,
	2326, 2327, 2238, 2328, 2576, 3141, 2544, 1983, 2271, 1270,
	1864, 1865, 967, 968, 969, 966, 2543, 2542, 2228, 2225,
	1250, 1868, 2490, 2457, 2272, 2434, 2070, 2374, 2366, 2208,
	2209, 967, 968, 969, 966, 2214, 2356, 2282, 2511, 2354,
	2381, 2350, 1589, 2292, 1694, 2349, 2348, 1859, 439, 616,
	615, 1275, 1276, 1515, 902, 1651, 1651, 1651, 1651, 967,
	968, 969, 966, 1735, 2248, 2242, 902, 1651, 1140, 1729,
	2070, 1499, 2307, 2303, 1280, 1283, 2307, 1284, 2257, 1498,
	1307, 1042, 967, 968, 969, 966, 1213, 1038, 2314, 1344,
	1037, 891, 682, 2284, 3085, 2290, 2980, 2510, 451, 451,
	8, 2276, 7, 967, 968, 969, 966, 2283, 2898, 2756,
	3252, 2315, 2316, 181, 2755, 2305, 2319, 2754, 181, 2302,
	2102, 2325, 2747, 967, 968, 969, 966, 2311, 2715, 2109,
	2704, 2451, 2318, 2453, 2695, 2694, 2683, 2416, 2682, 1451,
	164, 1451, 156, 132, 2474, 2607, 2336, 2337, 2478, 2516,
	2509, 1489, 2501, 2496, 1213, 2442, 1489, 2485, 2239, 2236,
	2351, 2352, 2355, 981, 980, 990, 991, 983, 984, 985,
	986, 987, 988, 989, 982, 2198, 2127, 2403, 2123, 2293,
	675, 676, 677, 678, 2387, 674, 2386, 2297, 2298, 2403,
	2391, 2495, 2299, 2122, 1844, 2183, 2415, 1837, 2448, 2404,
	2405, 2406, 2407, 2452, 2417, 1820, 2419, 671, 1832, 161,
	3276, 2418, 1488, 2515, 1830, 1826, 2435, 2473, 2432, 2308,
	1825, 1823, 1814, 887, 883, 884, 885, 886, 2471, 2188,
	1811, 2187, 2186, 2184, 2477, 1810, 2504, 1734, 2506, 1484,
	1483, 902, 2450, 2449, 2482, 2446, 1518, 1482, 1454, 2556,
	2428, 2487, 1453, 1444, 164, 1225, 1224, 1223, 3233, 2571,
	2437, 2438, 2467, 2472, 451, 2470, 2465, 967, 968, 969,
	966, 1819, 3227, 3214, 902, 2481, 3211, 2389, 902, 902,
	902, 3209, 3110, 1032, 2493, 3043, 3032, 1651, 1947, 2494,
	2605, 3027, 3188, 3073, 1265, 2185, 2609, 967, 968, 969,
	966, 2949, 2934, 2502, 2503, 2500, 2930, 2619, 2834, 2622,
	2832, 2622, 2622, 2807, 2507, 2508, 902, 2806, 2579, 967,
	968, 969, 966, 161, 2803, 2802, 1812, 2742, 2626, 2856,
	2641, 2591, 2546, 2590, 1274, 2505, 1267, 1213, 1213, 1124,
	2538, 2638, 2271, 804, 2382, 2313, 2279, 2545, 2541, 2548,
	804, 2278, 2277, 2640, 1279, 967, 968, 969, 966, 1282,
	2642, 2643, 1271, 2223, 1887, 1211, 1211, 2136, 2469, 2603,
	2086, 2041, 1948, 2572, 1385, 2476, 2294, 2578, 3231, 161,
	2296, 1698, 1508, 451, 2592, 2593, 2594, 2618, 2556, 1507,
	1329, 3099, 2604, 2627, 2600, 2521, 2522, 1295, 2617, 1515,
	1515, 2523, 2524, 2525, 2526, 3097, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2623, 2624, 1272, 2628, 967, 968,
	969, 966, 1068, 3186, 2855, 1065, 2577, 1064, 2189, 2190,
	1063, 981, 980, 990, 991, 983, 984, 985, 986, 987,
	988, 989, 982, 1062, 1061, 1060, 2192, 1059, 1058, 804,
	967, 968, 969, 966, 2809, 2693, 1057, 1056, 2295, 981,
	980, 990, 991, 983, 984, 985, 986, 987, 988, 989,
	982, 1055, 568, 115, 2551, 1054, 3095, 2713, 115, 1053,
	967, 968, 969, 966, 2514, 1052, 2652, 2651, 1051, 1050,
	2657, 2656, 451, 1049, 1048, 2661, 2662, 1047, 1046, 2647,
	1045, 2654, 2672, 967, 968, 969, 966, 804, 2513, 1041,
	967, 968, 969, 966, 2512, 2676, 1040, 1039, 1036, 1029,
	2679, 2680, 2681, 2612, 1028, 1026, 2712, 1025, 457, 1024,
	1023, 115, 2613, 2714, 967, 968, 969, 966, 2688, 2222,
	967, 968, 969, 966, 1022, 1689, 1021, 1118, 2221, 1020,
	3146, 3229, 1019, 2625, 1018, 1017, 1016, 2705, 2220, 1015,
	1010, 1009, 932, 889, 2706, 967, 968, 969, 966, 2219,
	2707, 2668, 2669, 2708, 967, 968, 969, 966, 2804, 1953,
	1934, 2717, 920, 2746, 967, 968, 969, 966, 2671, 2263,
	2674, 2752, 902, 2722, 2218, 967, 968, 969, 966, 2098,
	1737, 2070, 1651, 2766, 981, 980, 990, 991, 983, 984,
	985, 986, 987, 988, 989, 982, 931, 902, 2673, 2412,
	967, 968, 969, 966, 2413, 2719, 2619, 2410, 2409, 2408,
	902, 2217, 2411, 3262, 802, 2145, 2836, 100, 115, 2139,
	902, 2721, 448, 2837, 2414, 1213, 2062, 2063, 2216, 1536,
	1537, 2574, 54, 115, 2710, 115, 2737, 967, 968, 969,
	966, 1515, 1531, 1532, 1533, 902, 2539, 2540, 2818, 1489,
	2230, 2768, 53, 1211, 967, 968, 969, 966, 2010, 2801,
	1489, 2814, 1625, 2831, 2765, 2764, 2833, 2615, 2549, 2616,
	2794, 181, 2835, 453, 2839, 452, 2215, 1259, 2753, 2164,
	2838, 2134, 1864, 1865, 902, 2332, 2808, 2810, 454, 2828,
	2813, 2608, 2333, 2334, 2335, 2610, 2611, 1070, 2743, 2744,
	2745, 2816, 967, 968, 969, 966, 2864, 2820, 455, 2822,
	1289, 1923, 2825, 1699, 926, 3065, 2589, 818, 2829, 2550,
	2772, 2830, 2212, 902, 1213, 1213, 2301, 2243, 2827, 902,
	1943, 2211, 1540, 2811, 1506, 3159, 804, 2901, 2210, 2901,
	2824, 1440, 1439, 2325, 1082, 1083, 3029, 2888, 967, 968,
	969, 966, 1211, 2890, 2644, 2851, 2841, 967, 968, 969,
	966, 2723, 2050, 1213, 967, 968, 969, 966, 2403, 2916,
	2865, 2046, 2893, 2867, 2678, 804, 2517, 1080, 1081, 1078,
	1079, 451, 1636, 902, 902, 1076, 1077, 902, 902, 1175,
	1174, 2890, 958, 2096, 1757, 1129, 1072, 2894, 3228, 2663,
	2749, 3132, 2904, 2952, 2905, 3117, 3115, 2403, 2951, 3076,
	2946, 3055, 2768, 1542, 2675, 2959, 2801, 2938, 2939, 2914,
	3054, 2947, 2948, 2963, 2964, 2918, 2204, 2794, 3052, 981,
	980, 990, 991, 983, 984, 985, 986, 987, 988, 989,
	982, 3044, 2956, 2962, 2961, 2847, 2886, 2993, 2718, 2702,
	2701, 2686, 967, 968, 969, 966, 813, 810, 805, 809,
	811, 2986, 1997, 2955, 2195, 1075, 2685, 2444, 1544, 2957,
	2480, 2897, 2173, 3190, 3189, 3189, 1395, 2752, 1936, 1813,
	917, 3190, 3005, 3012, 816, 2932, 2857, 2703, 808, 2436,
	967, 968, 969, 966, 674, 2981, 2985, 2991, 967, 968,
	969, 966, 967, 968, 969, 966, 2886, 2886, 168, 3,
	2886, 2886, 1144, 62, 2, 1190, 3004, 115, 115, 802,
	2079, 3007, 1683, 3008, 1217, 3006, 1, 1497, 3015, 3013,
	902, 679, 3014, 2421, 1213, 2422, 2953, 2677, 3023, 814,
	2424, 1775, 2392, 2937, 2044, 1924, 817, 993, 2570, 997,
	1119, 720, 3028, 675, 676, 677, 678, 3038, 674, 2053,
	1446, 1314, 1211, 806, 3037, 994, 996, 992, 820, 995,
	981, 980, 990, 991, 983, 984, 985, 986, 987, 988,
	989, 982, 911, 3060, 902, 1014, 815, 1311, 910, 908,
	998, 1397, 570, 3051, 3077, 3049, 2058, 2061, 2062, 2063,
	2059, 2767, 2060, 2064, 1740, 2383, 2357, 2770, 2958, 3158,
	2771, 3196, 3072, 902, 3109, 3161, 1327, 3068, 554, 3046,
	1213, 3071, 3086, 3104, 3107, 2972, 807, 3113, 3079, 2058,
	2061, 2062, 2063, 2059, 2974, 2060, 2064, 3084, 2853, 3094,
	3096, 3098, 3100, 3103, 3087, 1780, 3108, 3093, 1211, 963,
	2466, 742, 607, 2886, 3116, 581, 3118, 3119, 3112, 1213,
	1027, 3114, 1297, 1290, 2519, 822, 580, 2736, 2253, 3142,
	2439, 3016, 819, 3039, 743, 1724, 2970, 1260, 1264, 2906,
	2757, 3131, 3139, 2595, 2280, 3272, 3261, 1211, 3243, 3226,
	3137, 3165, 3257, 3176, 3212, 2860, 2858, 2859, 3205, 3133,
	3151, 812, 3152, 3164, 3153, 491, 3154, 2886, 1662, 3155,
	437, 785, 2950, 902, 1736, 492, 1952, 3125, 3031, 3169,
	1424, 3060, 701, 3170, 1933, 702, 1074, 703, 2269, 2268,
	1366, 972, 3078, 1383, 2535, 2536, 2886, 1007, 3195, 530,
	3184, 1802, 2250, 3187, 3185, 3179, 3181, 2789, 3088, 2433,
	61, 3198, 60, 59, 3203, 58, 902, 3191, 3192, 3193,
	3194, 1706, 2912, 2913, 3204, 189, 572, 188, 2881, 3208,
	3106, 3210, 3163, 552, 551, 550, 549, 164, 51, 156,
	132, 3165, 3224, 548, 2057, 2055, 2054, 3220, 1646, 1645,
	902, 1704, 902, 3164, 2323, 157, 3223, 2317, 3230, 2778,
	3232, 1993, 149, 1998, 1578, 3235, 158, 3143, 3090, 3091,
	2929, 2367, 1530, 3198, 902, 3239, 1989, 3241, 3246, 1595,
	2339, 1592, 3250, 3253, 1591, 113, 3256, 2331, 2925, 2919,
	1622, 967, 968, 969, 966, 2750, 3174, 2790, 2900, 2773,
	101, 3260, 2774, 2780, 3267, 3171, 161, 1942, 3271, 3270,
	2781, 845, 1222, 841, 843, 3279, 844, 457, 842, 2181,
	2776, 3284, 3267, 3283, 3282, 2798, 2799, 3271, 2177, 3285,
	1970, 2777, 2584, 1878, 1877, 1420, 1875, 1874, 1092, 1350,
	2992, 1417, 2720, 115, 1885, 1419, 1416, 1418, 1422, 1423,
	1883, 2670, 2666, 1421, 1623, 1748, 1494, 2229, 1647, 1585,
	1643, 1935, 2868, 1535, 694, 1931, 98, 146, 2782, 48,
	1424, 89, 88, 1350, 97, 1350, 144, 47, 173, 172,
	175, 174, 118, 119, 171, 120, 121, 2113, 1625, 1594,
	2114, 170, 1248, 169, 2903, 668, 38, 1350, 1626, 1627,
	37, 33, 12, 11, 34, 115, 21, 22, 20, 115,
	990, 991, 983, 984, 985, 986, 987, 988, 989, 982,
	115, 1318, 19, 25, 1593, 31, 30, 108, 107, 29,
	115, 106, 105, 104, 103, 102, 28, 18, 42, 1600,
	41, 40, 9, 96, 94, 27, 95, 92, 93, 90,
	131, 155, 162, 73, 99, 72, 71, 86, 85, 2797,
	84, 1979, 83, 82, 81, 79, 80, 741, 70, 69,
	68, 67, 154, 148, 147, 66, 91, 77, 87, 57,
	78, 76, 75, 74, 65, 64, 2786, 63, 2170, 130,
	128, 129, 127, 126, 125, 1427, 1428, 1429, 1430, 1431,
	1432, 1425, 1426, 124, 123, 122, 1616, 43, 2783, 2787,
	2785, 2784, 981, 980, 990, 991, 983, 984, 985, 986,
	987, 988, 989, 982, 1800, 1420, 44, 45, 46, 140,
	139, 1417, 141, 143, 145, 1419, 1416, 1418, 1422, 1423,
	150, 151, 152, 1421, 142, 137, 2792, 2793, 981, 980,
	990, 991, 983, 984, 985, 986, 987, 988, 989, 982,
	135, 138, 136, 134, 56, 17, 159, 24, 4, 0,
	0, 0, 0, 0, 1584, 1586, 1583, 0, 1580, 0,
	0, 0, 0, 1604, 0, 0, 109, 0, 2800, 0,
	153, 0, 110, 0, 1610, 0, 0, 0, 0, 0,
	2779, 0, 0, 0, 0, 0, 2791, 0, 0, 0,
	0, 0, 0, 0, 1598, 1632, 0, 0, 1599, 1601,
	1603, 0, 1605, 1606, 1607, 1611, 1612, 1613, 1615, 1618,
	1619, 1620, 0, 0, 0, 0, 0, 0, 0, 1608,
	1617, 1609, 0, 0, 0, 0, 0, 0, 0, 111,
	0, 1588, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 980, 990, 991, 983, 984, 985, 986, 987, 988,
	989, 982, 0, 1624, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431,
	1432, 1425, 1426, 0, 1581, 1582, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 2796, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 115, 0, 0, 115, 115, 1602,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2795, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 112, 39, 802, 0, 0, 0,
	331, 49, 0, 802, 0, 116, 117, 0, 0, 0,
	0, 0, 115, 544, 0, 0, 0, 276, 0, 0,
	301, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 0, 433, 0, 0, 579, 0,
	0, 360, 315, 0, 0, 0, 0, 639, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 537,
	0, 1630, 569, 616, 615, 556, 566, 0, 0, 254,
	187, 434, 0, 435, 557, 0, 565, 558, 562, 561,
	559, 560, 0, 631, 0, 0, 0, 0, 998, 0,
	528, 541, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 538, 539, 0,
	0, 0, 0, 589, 0, 540, 0, 0, 584, 563,
	567, 0, 0, 0, 0, 245, 365, 381, 255, 356,
	394, 260, 363, 250, 330, 353, 0, 0, 247, 379,
	362, 312, 295, 296, 246, 0, 348, 274, 287, 271,
	328, 564, 587, 591, 270, 653, 585, 389, 249, 0,
	388, 327, 375, 380, 313, 307, 248, 377, 311, 306,
	299, 278, 654, 291, 339, 305, 340, 292, 317, 316,
	318, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 391, 0, 0, 637, 0, 0,
	0, 364, 0, 0, 300, 0, 0, 0, 586, 0,
	351, 333, 650, 529, 0, 349, 303, 376, 341, 382,
	366, 390, 345, 342, 240, 367, 273, 314, 251, 253,
	268, 275, 277, 279, 280, 323, 324, 336, 355, 368,
	369, 370, 272, 261, 350, 262, 289, 263, 241, 265,
	264, 266, 357, 267, 243, 337, 374, 0, 285, 346,
	310, 244, 309, 338, 373, 372, 252, 398, 404, 405,
	0, 0, 410, 0, 0, 0, 418, 423, 424, 425,
	427, 428, 429, 430, 0, 0, 0, 0, 412, 0,
	0, 0, 1448, 1447, 1449, 403, 283, 237, 238, 443,
	635, 329, 0, 0, 0, 0, 649, 630, 632, 633,
	636, 640, 641, 642, 643, 644, 646, 648, 652, 442,
	0, 0, 0, 0, 0, 441, 335, 0, 354, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 384, 396, 413, 416, 0, 0, 0, 0,
	242, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	590, 0, 0, 319, 320, 321, 322, 638, 0, 259,
	414, 344, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 408,
	409, 282, 288, 426, 290, 258, 334, 284, 393, 297,
	0, 419, 0, 420, 0, 0, 861, 0, 326, 293,
	294, 358, 298, 304, 347, 392, 332, 352, 256, 383,
	359, 308, 0, 0, 660, 634, 659, 661, 662, 658,
	663, 664, 645, 547, 0, 594, 656, 655, 657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 1424, 236, 0, 239, 0, 302, 0, 343,
	281, 0, 0, 623, 600, 601, 602, 546, 603, 597,
	598, 599, 624, 592, 620, 621, 571, 595, 604, 619,
	605, 622, 625, 626, 665, 666, 611, 667, 608, 627,
	618, 617, 606, 593, 628, 629, 578, 573, 609, 610,
	596, 612, 613, 614, 574, 575, 576, 577, 0, 0,
	0, 399, 400, 401, 422, 385, 849, 440, 0, 861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 444,
	436, 0, 0, 0, 0, 0, 869, 873, 875, 877,
	879, 880, 882, 0, 887, 883, 884, 885, 886, 0,
	864, 865, 866, 867, 847, 848, 870, 0, 850, 0,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	862, 868, 0, 0, 0, 0, 0, 0, 0, 872,
	874, 876, 878, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	0, 115, 0, 1417, 0, 0, 863, 1419, 1416, 1418,
	1422, 1423, 0, 0, 0, 1421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 869,
	873, 875, 877, 879, 880, 882, 0, 887, 883, 884,
	885, 886, 0, 864, 865, 866, 867, 847, 848, 870,
	0, 850, 0, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 862, 868, 0, 0, 0, 0, 0,
	0, 0, 872, 874, 876, 878, 881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 1650, 1650,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2179,
	2180, 0, 0, 0, 0, 0, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429,
	1430, 1431, 1432, 1425, 1426, 115, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 0, 0, 0, 276, 1490,
	0, 301, 0, 0, 871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 432, 0, 433, 0, 0, 579,
	0, 0, 360, 315, 0, 0, 115, 0, 639, 647,
	0, 0, 0, 0, 0, 0, 0, 1674, 0, 0,
	537, 0, 0, 569, 616, 615, 556, 566, 0, 0,
	254, 187, 434, 0, 435, 557, 0, 565, 558, 562,
	561, 559, 560, 0, 631, 0, 0, 0, 0, 1650,
	0, 528, 541, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 539,
	0, 0, 0, 0, 589, 0, 540, 0, 0, 1675,
	563, 567, 0, 0, 0, 0, 245, 365, 381, 255,
	356, 394, 260, 363, 250, 330, 353, 871, 0, 247,
	379, 362, 312, 295, 296, 246, 0, 348, 274, 287,
	271, 328, 564, 587, 591, 270, 653, 585, 389, 249,
	0, 388, 327, 375, 380, 313, 307, 248, 377, 311,
	306, 299, 278, 654, 291, 339, 305, 340, 292, 317,
	316, 318, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 391, 0, 0, 637, 0,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 586,
	0, 351, 333, 650, 529, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 240, 367, 273, 314, 251,
	253, 268, 275, 277, 279, 280, 323, 324, 336, 355,
	368, 369, 370, 272, 261, 350, 262, 289, 263, 241,
	265, 264, 266, 357, 267, 243, 337, 374, 0, 285,
	346, 310, 244, 309, 338, 373, 372, 252, 398, 404,
	405, 0, 0, 410, 0, 0, 0, 418, 423, 424,
	425, 427, 428, 429, 430, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 403, 283, 237, 238,
	443, 635, 329, 0, 0, 0, 0, 649, 630, 632,
	633, 636, 640, 641, 642, 643, 644, 646, 648, 652,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 384, 396, 413, 416, 0, 0, 0,
	0, 242, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 590, 115, 0, 319, 320, 321, 322, 638, 0,
	259, 414, 344, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 282, 288, 426, 290, 258, 334, 284, 393,
	297, 0, 419, 0, 420, 0, 0, 0, 0, 326,
	293, 294, 358, 298, 304, 347, 392, 332, 352, 256,
	383, 359, 308, 0, 0, 660, 634, 659, 661, 662,
	658, 663, 664, 645, 547, 0, 594, 656, 655, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 115, 236, 0, 239, 0, 302, 0,
	343, 281, 0, 0, 623, 600, 601, 602, 546, 603,
	597, 598, 599, 624, 592, 620, 621, 571, 595, 604,
	619, 605, 622, 625, 626, 665, 666, 611, 667, 608,
	627, 618, 617, 606, 593, 628, 629, 578, 573, 609,
	610, 596, 612, 613, 614, 574, 575, 576, 577, 164,
	588, 0, 399, 400, 401, 422, 385, 0, 440, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 436, 544, 0, 0, 0, 276, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 0, 433, 0, 0, 1001, 0, 0,
	360, 315, 0, 0, 0, 0, 639, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 0,
	0, 569, 616, 615, 556, 566, 0, 0, 254, 187,
	434, 0, 435, 557, 0, 565, 558, 562, 561, 559,
	560, 0, 631, 0, 0, 0, 0, 0, 0, 528,
	541, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 589, 0, 540, 0, 0, 584, 563, 567,
	0, 0, 0, 0, 245, 365, 381, 255, 356, 394,
	260, 363, 250, 330, 353, 0, 0, 247, 379, 362,
	312, 295, 296, 246, 0, 348, 274, 287, 271, 328,
	564, 587, 591, 270, 653, 585, 389, 249, 0, 388,
	327, 375, 380, 313, 307, 248, 377, 311, 306, 299,
	278, 654, 291, 339, 305, 340, 292, 317, 316, 318,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 391, 0, 0, 637, 0, 0, 0,
	364, 0, 0, 300, 0, 0, 0, 586, 0, 351,
	333, 650, 529, 0, 349, 303, 376, 341, 382, 366,
	390, 345, 342, 240, 367, 273, 314, 251, 253, 268,
	275, 277, 279, 280, 323, 324, 336, 355, 368, 369,
	370, 272, 261, 350, 262, 289, 263, 241, 265, 264,
	266, 357, 267, 243, 337, 374, 0, 285, 346, 310,
	244, 309, 338, 373, 372, 252, 398, 404, 405, 0,
	0, 410, 0, 0, 0, 418, 423, 424, 425, 427,
	428, 429, 430, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 403, 283, 237, 238, 443, 635,
	329, 0, 0, 0, 0, 649, 630, 632, 633, 636,
	640, 641, 642, 643, 644, 646, 648, 652, 442, 0,
	0, 0, 0, 0, 441, 335, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 384, 396, 413, 416, 0, 0, 0, 0, 242,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 590,
	0, 0, 319, 320, 321, 322, 638, 0, 259, 414,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 409,
	282, 288, 426, 290, 258, 334, 284, 393, 297, 0,
	419, 0, 420, 0, 0, 0, 0, 326, 293, 294,
	358, 298, 304, 347, 392, 332, 352, 256, 383, 359,
	308, 0, 0, 660, 634, 659, 661, 662, 658, 663,
	664, 645, 547, 0, 594, 656, 655, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 236, 0, 239, 0, 302, 133, 343, 281,
	0, 0, 623, 600, 601, 602, 546, 603, 597, 598,
	599, 624, 592, 620, 621, 571, 595, 604, 619, 605,
	622, 625, 626, 665, 666, 611, 667, 608, 627, 618,
	617, 606, 593, 628, 629, 578, 573, 609, 610, 596,
	612, 613, 614, 574, 575, 576, 577, 0, 588, 0,
	399, 400, 401, 422, 385, 0, 440, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 444, 436,
	544, 0, 0, 0, 276, 3240, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	432, 0, 433, 0, 0, 579, 0, 0, 360, 315,
	0, 0, 0, 0, 639, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 0, 0, 569,
	616, 615, 556, 566, 0, 0, 254, 187, 434, 0,
	435, 557, 0, 565, 558, 562, 561, 559, 560, 0,
	631, 0, 0, 0, 0, 0, 0, 528, 541, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 538, 539, 0, 0, 0, 0,
	589, 0, 540, 0, 0, 584, 563, 567, 0, 0,
	0, 0, 245, 365, 381, 255, 356, 394, 260, 363,
	250, 330, 353, 0, 0, 247, 379, 362, 312, 295,
	296, 246, 0, 348, 274, 287, 271, 328, 564, 587,
	591, 270, 653, 585, 389, 249, 0, 388, 327, 375,
	380, 313, 307, 248, 377, 311, 306, 299, 278, 654,
	291, 339, 305, 340, 292, 317, 316, 318, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 391, 0, 0, 637, 0, 0, 0, 364, 0,
	0, 300, 0, 0, 0, 586, 0, 351, 333, 650,
	529, 0, 349, 303, 376, 341, 382, 366, 390, 345,
	342, 240, 367, 273, 314, 251, 253, 268, 275, 277,
	279, 280, 323, 324, 336, 355, 368, 369, 370, 272,
	261, 350, 262, 289, 263, 241, 265, 264, 266, 357,
	267, 243, 337, 374, 0, 285, 346, 310, 244, 309,
	338, 373, 372, 252, 398, 404, 405, 0, 0, 410,
	0, 0, 0, 418, 423, 424, 425, 427, 428, 429,
	430, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 403, 283, 237, 238, 443, 635, 329, 0,
	0, 0, 0, 649, 630, 632, 633, 636, 640, 641,
	642, 643, 644, 646, 648, 652, 442, 0, 0, 0,
	0, 0, 441, 335, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 384,
	396, 413, 416, 0, 0, 0, 0, 242, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 590, 0, 0,
	319, 320, 321, 322, 638, 0, 259, 414, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 409, 282, 288,
	426, 290, 258, 334, 284, 393, 297, 0, 419, 0,
	420, 0, 0, 0, 0, 326, 293, 294, 358, 298,
	304, 347, 392, 332, 352, 256, 383, 359, 308, 0,
	0, 660, 634, 659, 661, 662, 658, 663, 664, 645,
	547, 0, 594, 656, 655, 657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	236, 0, 239, 0, 302, 0, 343, 281, 0, 0,
	623, 600, 601, 602, 546, 603, 597, 598, 599, 624,
	592, 620, 621, 571, 595, 604, 619, 605, 622, 625,
	626, 665, 666, 611, 667, 608, 627, 618, 617, 606,
	593, 628, 629, 578, 573, 609, 610, 596, 612, 613,
	614, 574, 575, 576, 577, 0, 588, 0, 399, 400,
	401, 422, 385, 0, 440, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 444, 436, 544, 0,
	0, 0, 276, 1490, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 0,
	433, 0, 0, 579, 0, 0, 360, 315, 0, 0,
	0, 0, 639, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 0, 0, 569, 616, 615,
	556, 566, 0, 0, 254, 187, 434, 0, 435, 557,
	0, 565, 558, 562, 561, 559, 560, 0, 631, 0,
	0, 0, 0, 0, 0, 528, 541, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 538, 539, 0, 0, 0, 0, 589, 0,
	540, 0, 0, 584, 563, 567, 0, 0, 0, 0,
	245, 365, 381, 255, 356, 394, 260, 363, 250, 330,
	353, 0, 0, 247, 379, 362, 312, 295, 296, 246,
	0, 348, 274, 287, 271, 328, 564, 587, 591, 270,
	653, 585, 389, 249, 0, 388, 327, 375, 380, 313,
	307, 248, 377, 311, 306, 299, 278, 654, 291, 339,
	305, 340, 292, 317, 316, 318, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 391,
	0, 0, 637, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 586, 0, 351, 333, 650, 529, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 240,
	367, 273, 314, 251, 253, 268, 275, 277, 279, 280,
	323, 324, 336, 355, 368, 369, 370, 272, 261, 350,
	262, 289, 263, 241, 265, 264, 266, 357, 267, 243,
	337, 374, 0, 285, 346, 310, 244, 309, 338, 373,
	372, 252, 398, 404, 405, 0, 0, 410, 0, 0,
	0, 418, 423, 424, 425, 427, 428, 429, 430, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	403, 283, 237, 238, 443, 635, 329, 0, 0, 0,
	0, 649, 630, 632, 633, 636, 640, 641, 642, 643,
	644, 646, 648, 652, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 413,
	416, 0, 0, 0, 0, 242, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 590, 0, 0, 319, 320,
	321, 322, 638, 0, 259, 414, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 282, 288, 426, 290,
	258, 334, 284, 393, 297, 0, 419, 0, 420, 0,
	0, 0, 0, 326, 293, 294, 358, 298, 304, 347,
	392, 332, 352, 256, 383, 359, 308, 0, 0, 660,
	634, 659, 661, 662, 658, 663, 664, 645, 547, 0,
	594, 656, 655, 657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 236, 0,
	239, 0, 302, 0, 343, 281, 0, 0, 623, 600,
	601, 602, 546, 603, 597, 598, 599, 624, 592, 620,
	621, 571, 595, 604, 619, 605, 622, 625, 626, 665,
	666, 611, 667, 608, 627, 618, 617, 606, 593, 628,
	629, 578, 573, 609, 610, 596, 612, 613, 614, 574,
	575, 576, 577, 0, 588, 0, 399, 400, 401, 422,
	385, 0, 440, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 444, 436, 544, 0, 0, 0,
	276, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 0, 433, 0,
	0, 579, 0, 0, 360, 315, 0, 0, 0, 0,
	639, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 0, 0, 569, 616, 615, 556, 566,
	0, 0, 254, 187, 434, 0, 435, 557, 0, 565,
	558, 562, 561, 559, 560, 0, 631, 0, 0, 0,
	0, 0, 0, 528, 541, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	538, 539, 1243, 0, 0, 0, 589, 0, 540, 0,
	0, 584, 563, 567, 0, 0, 0, 0, 245, 365,
	381, 255, 356, 394, 260, 363, 250, 330, 353, 0,
	0, 247, 379, 362, 312, 295, 296, 246, 0, 348,
	274, 287, 271, 328, 564, 587, 591, 270, 653, 585,
	389, 249, 0, 388, 327, 375, 380, 313, 307, 248,
	377, 311, 306, 299, 278, 654, 291, 339, 305, 340,
	292, 317, 316, 318, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 391, 0, 0,
	637, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 586, 0, 351, 333, 650, 529, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 240, 367, 273,
	314, 251, 253, 268, 275, 277, 279, 280, 323, 324,
	336, 355, 368, 369, 370, 272, 261, 350, 262, 289,
	263, 241, 265, 264, 266, 357, 267, 243, 337, 374,
	0, 285, 346, 310, 244, 309, 338, 373, 372, 252,
	398, 404, 405, 0, 0, 410, 0, 0, 0, 418,
	423, 424, 425, 427, 428, 429, 430, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 403, 283,
	237, 238, 443, 635, 329, 0, 0, 0, 0, 649,
	630, 632, 633, 636, 640, 641, 642, 643, 644, 646,
	648, 652, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 413, 416, 0,
	0, 0, 0, 242, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 590, 0, 0, 319, 320, 321, 322,
	638, 0, 259, 414, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 282, 288, 426, 290, 258, 334,
	284, 393, 297, 0, 419, 0, 420, 0, 0, 0,
	0, 326, 293, 294, 358, 298, 304, 347, 392, 332,
	352, 256, 383, 359, 308, 0, 0, 660, 634, 659,
	661, 662, 658, 663, 664, 645, 547, 0, 594, 656,
	655, 657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 236, 0, 239, 0,
	302, 0, 343, 281, 0, 0, 623, 600, 601, 602,
	546, 603, 597, 598, 599, 624, 592, 620, 621, 571,
	595, 604, 619, 605, 622, 625, 626, 665, 666, 611,
	667, 608, 627, 618, 617, 606, 593, 628, 629, 578,
	573, 609, 610, 596, 612, 613, 614, 574, 575, 576,
	577, 0, 0, 0, 399, 400, 401, 422, 385, 588,
	440, 0, 1821, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 444, 436, 0, 0, 0, 0, 0, 0,
	0, 544, 0, 0, 0, 276, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 432, 0, 433, 0, 0, 579, 0, 0, 360,
	315, 0, 0, 0, 0, 639, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 537, 0, 0,
	569, 616, 615, 556, 566, 0, 0, 254, 187, 434,
	0, 435, 557, 0, 565, 558, 562, 561, 559, 560,
	0, 631, 0, 0, 0, 0, 0, 0, 528, 541,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 538, 539, 0, 0, 0,
	0, 589, 0, 540, 0, 0, 584, 563, 567, 0,
	0, 0, 0, 245, 365, 381, 255, 356, 394, 260,
	363, 250, 330, 353, 0, 0, 247, 379, 362, 312,
	295, 296, 246, 0, 348, 274, 287, 271, 328, 564,
	587, 591, 270, 653, 585, 389, 249, 0, 388, 327,
	375, 380, 313, 307, 248, 377, 311, 306, 299, 278,
	654, 291, 339, 305, 340, 292, 317, 316, 318, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 391, 0, 0, 637, 0, 0, 0, 364,
	0, 0, 300, 0, 0, 0, 586, 0, 351, 333,
	650, 529, 0, 349, 303, 376, 341, 382, 366, 390,
	345, 342, 240, 367, 273, 314, 251, 253, 268, 275,
	277, 279, 280, 323, 324, 336, 355, 368, 369, 370,
	272, 261, 350, 262, 289, 263, 241, 265, 264, 266,
	357, 267, 243, 337, 374, 0, 285, 346, 310, 244,
	309, 338, 373, 372, 252, 398, 404, 405, 0, 0,
	410, 0, 0, 0, 418, 423, 424, 425, 427, 428,
	429, 430, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 403, 283, 237, 238, 443, 635, 329,
	0, 0, 0, 0, 649, 630, 632, 633, 636, 640,
	641, 642, 643, 644, 646, 648, 652, 442, 0, 0,
	0, 0, 0, 441, 335, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	384, 396, 413, 416, 0, 0, 0, 0, 242, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 590, 0,
	0, 319, 320, 321, 322, 638, 0, 259, 414, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 409, 282,
	288, 426, 290, 258, 334, 284, 393, 297, 0, 419,
	0, 420, 0, 0, 0, 0, 326, 293, 294, 358,
	298, 304, 347, 392, 332, 352, 256, 383, 359, 308,
	0, 0, 660, 634, 659, 661, 662, 658, 663, 664,
	645, 547, 0, 594, 656, 655, 657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 236, 0, 239, 0, 302, 0, 343, 281, 0,
	0, 623, 600, 601, 602, 546, 603, 597, 598, 599,
	624, 592, 620, 621, 571, 595, 604, 619, 605, 622,
	625, 626, 665, 666, 611, 667, 608, 627, 618, 617,
	606, 593, 628, 629, 578, 573, 609, 610, 596, 612,
	613, 614, 574, 575, 576, 577, 0, 588, 0, 399,
	400, 401, 422, 385, 0, 440, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 444, 436, 544,
	0, 0, 0, 276, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 432,
	0, 433, 0, 0, 579, 0, 0, 360, 315, 0,
	0, 0, 0, 639, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 0, 0, 569, 616,
	615, 556, 566, 0, 0, 254, 187, 434, 0, 435,
	557, 0, 565, 558, 562, 561, 559, 560, 0, 631,
	0, 0, 0, 0, 0, 0, 528, 541, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 539, 0, 0, 0, 0, 589,
	0, 540, 0, 0, 584, 563, 567, 0, 0, 0,
	0, 245, 365, 381, 255, 356, 394, 260, 363, 250,
	330, 353, 0, 0, 247, 379, 362, 312, 295, 296,
	246, 0, 348, 274, 287, 271, 328, 564, 587, 591,
	270, 653, 585, 389, 249, 0, 388, 327, 375, 380,
	313, 307, 248, 377, 311, 306, 299, 278, 654, 291,
	339, 305, 340, 292, 317, 316, 318, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	391, 0, 0, 637, 0, 0, 0, 364, 0, 0,
	300, 0, 0, 0, 586, 0, 351, 333, 650, 529,
	0, 349, 303, 376, 341, 382, 366, 390, 345, 342,
	240, 367, 273, 314, 251, 253, 268, 275, 277, 279,
	280, 323, 324, 336, 355, 368, 369, 370, 272, 261,
	350, 262, 289, 263, 241, 265, 264, 266, 357, 267,
	243, 337, 374, 0, 285, 346, 310, 244, 309, 338,
	373, 372, 252, 398, 404, 405, 0, 0, 410, 0,
	0, 0, 418, 423, 424, 425, 427, 428, 429, 430,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 403, 283, 237, 238, 443, 635, 329, 0, 0,
	0, 0, 649, 630, 632, 633, 636, 640, 641, 642,
	643, 644, 646, 648, 652, 442, 0, 0, 0, 0,
	0, 441, 335, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 384, 396,
	413, 416, 0, 0, 0, 0, 242, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 590, 0, 0, 319,
	320, 321, 322, 638, 0, 259, 414, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 282, 288, 426,
	290, 258, 334, 284, 393, 297, 0, 419, 0, 420,
	0, 0, 0, 0, 326, 293, 294, 358, 298, 304,
	347, 392, 332, 352, 256, 383, 359, 308, 0, 0,
	660, 634, 659, 661, 662, 658, 663, 664, 645, 547,
	0, 594, 656, 655, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 236,
	0, 239, 0, 302, 0, 343, 281, 0, 0, 623,
	600, 601, 602, 546, 603, 597, 598, 599, 624, 592,
	620, 621, 571, 595, 604, 619, 605, 622, 625, 626,
	665, 666, 611, 667, 608, 627, 618, 617, 606, 593,
	628, 629, 578, 573, 609, 610, 596, 612, 613, 614,
	574, 575, 576, 577, 0, 588, 0, 399, 400, 401,
	422, 385, 0, 440, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 1367, 0, 444, 436, 544, 0, 0,
	0, 276, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 432, 0, 433,
	0, 0, 579, 0, 0, 360, 315, 0, 0, 0,
	0, 639, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 0, 0, 569, 616, 615, 556,
	566, 0, 0, 254, 187, 434, 0, 435, 557, 0,
	565, 558, 562, 561, 559, 560, 0, 631, 0, 0,
	0, 0, 0, 0, 0, 541, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 538, 539, 0, 0, 0, 0, 589, 0, 540,
	0, 0, 584, 563, 567, 0, 0, 0, 0, 245,
	365, 381, 255, 356, 394, 260, 363, 250, 330, 353,
	0, 0, 247, 379, 362, 312, 295, 296, 246, 0,
	348, 274, 287, 271, 328, 564, 587, 591, 270, 653,
	585, 389, 249, 0, 388, 327, 375, 380, 313, 307,
	248, 377, 311, 306, 299, 278, 654, 291, 339, 305,
	340, 292, 317, 316, 318, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 391, 0,
	0, 637, 0, 0, 0, 364, 0, 0, 300, 0,
	0, 0, 586, 0, 351, 333, 650, 0, 0, 349,
	303, 376, 341, 382, 366, 390, 345, 342, 240, 367,
	273, 314, 251, 253, 268, 275, 277, 279, 280, 323,
	324, 336, 355, 368, 369, 370, 272, 261, 350, 262,
	289, 263, 241, 265, 264, 266, 357, 267, 243, 337,
	374, 0, 285, 346, 310, 244, 309, 338, 373, 372,
	252, 398, 1368, 1369, 0, 0, 410, 0, 0, 0,
	418, 423, 424, 425, 427, 428, 429, 430, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 403,
	283, 237, 238, 443, 635, 329, 0, 0, 0, 0,
	649, 630, 632, 633, 636, 640, 641, 642, 643, 644,
	646, 648, 652, 442, 0, 0, 0, 0, 0, 441,
	335, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 384, 396, 413, 416,
	0, 0, 0, 0, 242, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 590, 0, 0, 319, 320, 321,
	322, 638, 0, 259, 414, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 409, 282, 288, 426, 290, 258,
	334, 284, 393, 297, 0, 419, 0, 420, 0, 0,
	0, 0, 326, 293, 294, 358, 298, 304, 347, 392,
	332, 352, 256, 383, 359, 308, 0, 0, 660, 634,
	659, 661, 662, 658, 663, 664, 645, 547, 0, 594,
	656, 655, 657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 236, 0, 239,
	0, 302, 0, 343, 281, 0, 0, 623, 600, 601,
	602, 546, 603, 597, 598, 599, 624, 592, 620, 621,
	571, 595, 604, 619, 605, 622, 625, 626, 665, 666,
	611, 667, 608, 627, 618, 617, 606, 593, 628, 629,
	578, 573, 609, 610, 596, 612, 613, 614, 574, 575,
	576, 577, 0, 588, 0, 399, 400, 401, 422, 385,
	0, 440, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 444, 436, 544, 0, 0, 0, 276,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 0, 433, 0, 0,
	579, 0, 0, 360, 315, 0, 0, 0, 0, 639,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 569, 616, 615, 556, 566, 0,
	0, 254, 187, 434, 0, 435, 557, 0, 565, 558,
	562, 561, 559, 560, 0, 631, 0, 0, 0, 0,
	0, 0, 528, 541, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 538,
	539, 0, 0, 0, 0, 589, 0, 540, 0, 0,
	584, 563, 567, 0, 0, 0, 0, 245, 365, 381,
	255, 356, 394, 260, 363, 250, 330, 353, 0, 0,
	247, 379, 362, 312, 295, 296, 246, 0, 348, 274,
	287, 271, 328, 564, 587, 591, 270, 653, 585, 389,
	249, 0, 388, 327, 375, 380, 313, 307, 248, 377,
	311, 306, 299, 278, 654, 291, 339, 305, 340, 292,
	317, 316, 318, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 391, 0, 0, 637,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	586, 0, 351, 333, 650, 529, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 240, 367, 273, 314,
	251, 253, 268, 275, 277, 279, 280, 323, 324, 336,
	355, 368, 369, 370, 272, 261, 350, 262, 289, 263,
	241, 265, 264, 266, 357, 267, 243, 337, 374, 0,
	285, 346, 310, 244, 309, 338, 373, 372, 252, 398,
	404, 405, 0, 0, 410, 0, 0, 0, 418, 423,
	424, 425, 427, 428, 429, 430, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 403, 283, 237,
	238, 443, 635, 329, 0, 0, 0, 0, 649, 630,
	632, 633, 636, 640, 641, 642, 643, 644, 646, 648,
	652, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 413, 416, 0, 0,
	0, 0, 242, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 590, 0, 0, 319, 320, 321, 322, 638,
	0, 259, 414, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 282, 288, 426, 290, 258, 334, 284,
	393, 297, 0, 419, 0, 420, 0, 0, 0, 0,
	326, 293, 294, 358, 298, 304, 347, 392, 332, 352,
	256, 383, 359, 308, 0, 0, 660, 634, 659, 661,
	662, 658, 663, 664, 645, 547, 0, 594, 656, 655,
	657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 236, 0, 239, 0, 302,
	0, 343, 281, 0, 0, 623, 600, 601, 602, 546,
	603, 597, 598, 599, 624, 592, 620, 621, 571, 595,
	604, 619, 605, 622, 625, 626, 665, 666, 611, 667,
	608, 627, 618, 617, 606, 593, 628, 629, 578, 573,
	609, 610, 596, 612, 613, 614, 574, 575, 576, 577,
	0, 588, 0, 399, 400, 401, 422, 385, 0, 440,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 444, 436, 544, 0, 0, 0, 276, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 0, 433, 0, 0, 579, 0,
	0, 360, 315, 0, 0, 0, 0, 639, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	0, 0, 569, 616, 615, 556, 566, 0, 0, 254,
	187, 434, 0, 435, 557, 0, 565, 558, 562, 561,
	559, 560, 0, 631, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 538, 539, 0,
	0, 0, 0, 589, 0, 540, 0, 0, 584, 563,
	567, 0, 0, 0, 0, 245, 365, 381, 255, 356,
	394, 260, 363, 250, 330, 353, 0, 0, 247, 379,
	362, 312, 295, 296, 246, 0, 348, 274, 287, 271,
	328, 564, 587, 591, 270, 653, 585, 389, 249, 0,
	388, 327, 375, 380, 313, 307, 248, 377, 311, 306,
	299, 278, 654, 291, 339, 305, 340, 292, 317, 316,
	318, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 391, 0, 0, 637, 0, 0,
	0, 364, 0, 0, 300, 0, 0, 0, 586, 0,
	351, 333, 650, 0, 0, 349, 303, 376, 341, 382,
	366, 390, 345, 342, 240, 367, 273, 314, 251, 253,
	268, 275, 277, 279, 280, 323, 324, 336, 355, 368,
	369, 370, 272, 261, 350, 262, 289, 263, 241, 265,
	264, 266, 357, 267, 243, 337, 374, 0, 285, 346,
	310, 244, 309, 338, 373, 372, 252, 398, 404, 405,
	0, 0, 410, 0, 0, 0, 418, 423, 424, 425,
	427, 428, 429, 430, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 403, 283, 237, 238, 443,
	635, 329, 0, 0, 0, 0, 649, 630, 632, 633,
	636, 640, 641, 642, 643, 644, 646, 648, 652, 442,
	0, 0, 0, 0, 0, 441, 335, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 384, 396, 413, 416, 0, 0, 0, 0,
	242, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	590, 0, 0, 319, 320, 321, 322, 638, 0, 259,
	414, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 282, 288, 426, 290, 258, 334, 284, 393, 297,
	0, 419, 0, 420, 0, 0, 0, 0, 326, 293,
	294, 358, 298, 304, 347, 392, 332, 352, 256, 383,
	359, 308, 0, 0, 660, 634, 659, 661, 662, 658,
	663, 664, 645, 547, 0, 594, 656, 655, 657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 236, 0, 239, 0, 302, 0, 343,
	281, 0, 0, 623, 600, 601, 602, 546, 603, 597,
	598, 599, 624, 592, 620, 621, 571, 595, 604, 619,
	605, 622, 625, 626, 665, 666, 611, 667, 608, 627,
	618, 617, 606, 593, 628, 629, 578, 573, 609, 610,
	596, 612, 613, 614, 574, 575, 576, 577, 0, 0,
	0, 399, 400, 401, 422, 385, 0, 440, 164, 51,
	156, 132, 0, 0, 0, 0, 0, 0, 331, 444,
	436, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 149, 0, 276, 0, 158, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 432, 0, 433, 0, 0, 113, 0, 0, 360,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 0, 0, 0, 0, 0, 161, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 254, 187, 434,
	0, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 365, 381, 255, 356, 394, 260,
	363, 250, 330, 353, 0, 0, 247, 379, 362, 312,
	295, 296, 246, 0, 348, 274, 287, 271, 328, 0,
	378, 406, 270, 397, 0, 389, 249, 0, 388, 327,
	375, 380, 313, 307, 248, 377, 311, 306, 299, 278,
	421, 291, 339, 305, 340, 292, 317, 316, 318, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 131, 155, 162, 0, 99, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 179, 0, 0, 0, 364,
	0, 0, 300, 154, 148, 147, 407, 0, 351, 333,
	57, 0, 0, 349, 303, 376, 341, 382, 366, 390,
	345, 342, 240, 367, 273, 314, 251, 253, 268, 275,
	277, 279, 280, 323, 324, 336, 355, 368, 369, 370,
	272, 261, 350, 262, 289, 263, 241, 265, 264, 266,
	357, 267, 243, 337, 374, 0, 285, 346, 310, 244,
	309, 338, 373, 372, 252, 398, 404, 405, 0, 0,
	410, 150, 151, 152, 418, 423, 424, 425, 427, 428,
	429, 430, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 403, 283, 237, 238, 386, 269, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 402, 182, 0, 0, 431, 190, 0, 0,
	0, 153, 0, 191, 335, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	384, 396, 413, 416, 0, 0, 0, 0, 242, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 411, 0,
	0, 319, 320, 321, 322, 286, 0, 259, 414, 344,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 0, 0, 0, 408, 409, 282,
	288, 426, 290, 258, 334, 284, 393, 297, 0, 419,
	0, 420, 0, 0, 0, 0, 326, 293, 294, 358,
	298, 304, 347, 392, 332, 352, 256, 383, 359, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 236, 0, 239, 0, 302, 133, 343, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	0, 0, 232, 233, 234, 235, 0, 0, 0, 399,
	400, 401, 422, 385, 331, 192, 39, 180, 183, 185,
	184, 0, 49, 5, 0, 0, 116, 193, 436, 0,
	0, 276, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 432, 0, 433,
	0, 0, 0, 0, 0, 360, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1033, 0, 0, 186, 0, 0, 556,
	566, 0, 0, 254, 187, 434, 0, 435, 557, 0,
	565, 558, 562, 561, 559, 560, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 245,
	365, 381, 255, 356, 394, 260, 363, 250, 330, 353,
	0, 0, 247, 379, 362, 312, 295, 296, 246, 0,
	348, 274, 287, 271, 328, 564, 378, 406, 270, 397,
	0, 389, 249, 0, 388, 327, 375, 380, 313, 307,
	248, 377, 311, 306, 299, 278, 421, 291, 339, 305,
	340, 292, 317, 316, 318, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 364, 0, 0, 300, 0,
	0, 0, 407, 0, 351, 333, 0, 0, 0, 349,
	303, 376, 341, 382, 366, 390, 345, 342, 240, 367,
	273, 314, 251, 253, 268, 275, 277, 279, 280, 323,
	324, 336, 355, 368, 369, 370, 272, 261, 350, 262,
	289, 263, 241, 265, 264, 266, 357, 267, 243, 337,
	374, 0, 285, 346, 310, 244, 309, 338, 373, 372,
	252, 398, 404, 405, 0, 0, 410, 0, 0, 0,
	418, 423, 424, 425, 427, 428, 429, 430, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 403,
	283, 237, 238, 443, 269, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 402, 0,
	0, 0, 431, 442, 0, 0, 0, 0, 0, 441,
	335, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 384, 396, 413, 416,
	0, 0, 0, 0, 242, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 411, 0, 0, 319, 320, 321,
	322, 286, 0, 259, 414, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 409, 282, 288, 426, 290, 258,
	334, 284, 393, 297, 0, 419, 0, 420, 0, 0,
	0, 0, 326, 293, 294, 358, 298, 304, 347, 392,
	332, 352, 256, 383, 359, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 236, 0, 239,
	0, 302, 0, 343, 281, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 0, 0, 0, 232, 233,
	234, 235, 0, 0, 0, 399, 400, 401, 422, 385,
	0, 440, 0, 0, 0, 164, 51, 156, 132, 0,
	0, 0, 0, 444, 436, 331, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 0,
	433, 0, 0, 0, 0, 0, 360, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 254, 187, 434, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 365, 381, 255, 356, 394, 260, 363, 250, 330,
	353, 0, 0, 247, 379, 362, 312, 295, 296, 246,
	0, 348, 274, 287, 271, 328, 0, 378, 406, 270,
	397, 0, 389, 249, 0, 388, 327, 375, 380, 313,
	307, 248, 377, 311, 306, 299, 278, 421, 291, 339,
	305, 340, 292, 317, 316, 318, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 240,
	367, 273, 314, 251, 253, 268, 275, 277, 279, 280,
	323, 324, 336, 355, 368, 369, 370, 272, 261, 350,
	262, 289, 263, 241, 265, 264, 266, 357, 267, 243,
	337, 374, 0, 285, 346, 310, 244, 309, 338, 373,
	372, 252, 398, 404, 405, 0, 0, 410, 0, 0,
	0, 418, 423, 424, 425, 427, 428, 429, 430, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	403, 283, 237, 238, 443, 269, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 431, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 413,
	416, 0, 0, 0, 0, 242, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 411, 0, 0, 319, 320,
	321, 322, 462, 464, 259, 414, 344, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 282, 288, 426, 290,
	258, 334, 284, 393, 297, 0, 419, 0, 420, 0,
	0, 0, 0, 326, 293, 294, 358, 298, 304, 347,
	392, 332, 352, 256, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 236, 0,
	239, 0, 302, 133, 343, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 331, 0, 0, 232,
	233, 234, 235, 0, 861, 0, 399, 400, 401, 422,
	385, 0, 440, 276, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 444, 436, 0, 0, 0, 432,
	0, 433, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 254, 187, 434, 0, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 849, 0, 0, 0, 0, 0,
	0, 245, 365, 381, 255, 356, 394, 260, 363, 250,
	330, 353, 0, 0, 1907, 1909, 1910, 1911, 1912, 1913,
	1914, 0, 1919, 1915, 1916, 1917, 1918, 0, 1902, 1903,
	1904, 1905, 847, 1888, 1908, 0, 1889, 327, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906,
	339, 305, 340, 292, 317, 316, 318, 872, 874, 876,
	878, 881, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	300, 0, 0, 0, 1901, 0, 351, 333, 0, 0,
	0, 349, 303, 376, 341, 382, 366, 390, 345, 342,
	240, 367, 273, 314, 251, 253, 268, 275, 277, 279,
	280, 323, 324, 336, 355, 368, 369, 370, 272, 261,
	350, 262, 289, 263, 241, 265, 264, 266, 357, 267,
	243, 337, 374, 0, 285, 346, 310, 244, 309, 338,
	373, 372, 252, 398, 404, 405, 0, 0, 410, 0,
	0, 0, 418, 423, 424, 425, 427, 428, 429, 430,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 403, 283, 237, 238, 443, 269, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	402, 0, 0, 0, 431, 442, 0, 0, 0, 0,
	0, 441, 335, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 384, 396,
	413, 416, 0, 0, 0, 0, 242, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 411, 0, 0, 319,
	320, 321, 322, 286, 0, 259, 414, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 282, 288, 426,
	290, 258, 334, 284, 393, 297, 0, 419, 0, 420,
	0, 0, 0, 0, 326, 293, 294, 358, 298, 304,
	347, 392, 332, 352, 256, 383, 359, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 0, 0, 371, 0, 236,
	0, 239, 871, 302, 0, 343, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 331, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 399, 400, 401,
	422, 385, 0, 440, 276, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 444, 436, 0, 0, 0,
	432, 0, 433, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 849, 0, 0, 254, 187, 434, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 1981, 1984, 869, 873, 875, 877, 879, 880, 882,
	0, 887, 883, 884, 885, 886, 0, 864, 865, 866,
	867, 847, 848, 870, 0, 850, 0, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 862, 868, 0,
	0, 0, 0, 0, 0, 0, 872, 874, 876, 878,
	881, 0, 245, 365, 381, 255, 356, 394, 260, 363,
	250, 330, 353, 0, 0, 247, 379, 362, 312, 295,
	296, 246, 0, 348, 274, 287, 271, 328, 0, 378,
	406, 270, 397, 863, 389, 249, 0, 388, 327, 375,
	380, 313, 307, 248, 377, 311, 306, 299, 278, 421,
	291, 339, 305, 340, 292, 317, 316, 318, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 391, 0, 0, 0, 1980, 0, 1979, 364, 1977,
	1982, 300, 0, 0, 0, 407, 0, 351, 333, 0,
	0, 0, 349, 303, 376, 341, 382, 366, 390, 345,
	342, 240, 367, 273, 314, 251, 253, 268, 275, 277,
	279, 280, 323, 324, 336, 355, 368, 369, 370, 272,
	261, 350, 262, 289, 263, 241, 265, 264, 266, 357,
	267, 243, 337, 374, 1983, 285, 346, 310, 244, 309,
	338, 373, 372, 252, 398, 404, 405, 0, 0, 410,
	0, 0, 0, 418, 423, 424, 425, 427, 428, 429,
	430, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 403, 283, 237, 238, 443, 269, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 402, 0, 0, 0, 431, 442, 0, 0, 0,
	0, 0, 441, 335, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 384,
	396, 413, 416, 0, 0, 0, 0, 242, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 411, 0, 0,
	319, 320, 321, 322, 286, 0, 259, 414, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 409, 282, 288,
	426, 290, 258, 334, 284, 393, 297, 0, 419, 0,
	420, 871, 0, 0, 0, 326, 293, 294, 358, 298,
	304, 347, 392, 332, 352, 256, 383, 359, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	236, 0, 239, 0, 302, 0, 343, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 0,
	0, 232, 233, 234, 235, 331, 0, 0, 399, 400,
	401, 422, 385, 0, 440, 0, 0, 1708, 0, 0,
	0, 0, 276, 0, 0, 301, 444, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 0,
	433, 0, 0, 0, 0, 0, 360, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	1709, 0, 0, 0, 254, 187, 434, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 967, 968, 969, 966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 365, 381, 255, 356, 394, 260, 363, 250, 330,
	353, 0, 0, 247, 379, 362, 312, 295, 296, 246,
	0, 348, 274, 287, 271, 328, 0, 378, 406, 270,
	397, 0, 389, 249, 0, 388, 327, 375, 380, 313,
	307, 248, 377, 311, 306, 299, 278, 421, 291, 339,
	305, 340, 292, 317, 316, 318, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 240,
	367, 273, 314, 251, 253, 268, 275, 277, 279, 280,
	323, 324, 336, 355, 368, 369, 370, 272, 261, 350,
	262, 289, 263, 241, 265, 264, 266, 357, 267, 243,
	337, 374, 0, 285, 346, 310, 244, 309, 338, 373,
	372, 252, 398, 404, 405, 0, 0, 410, 0, 0,
	0, 418, 423, 424, 425, 427, 428, 429, 430, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	403, 283, 237, 238, 443, 269, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 431, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 413,
	416, 0, 0, 0, 0, 242, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 411, 0, 0, 319, 320,
	321, 322, 286, 0, 259, 414, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 282, 288, 426, 290,
	258, 334, 284, 393, 297, 0, 419, 0, 420, 0,
	0, 0, 0, 326, 293, 294, 358, 298, 304, 347,
	392, 332, 352, 256, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 236, 0,
	239, 0, 302, 0, 343, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 331, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 399, 400, 401, 422,
	385, 0, 440, 276, 784, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 444, 436, 0, 0, 0, 432,
	0, 433, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 791,
	792, 0, 0, 0, 0, 254, 187, 434, 0, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 365, 779, 255, 356, 394, 260, 363, 250,
	330, 353, 0, 0, 247, 379, 362, 312, 295, 296,
	246, 0, 348, 274, 287, 271, 328, 0, 378, 406,
	270, 397, 770, 389, 249, 769, 388, 327, 375, 380,
	313, 307, 248, 377, 311, 306, 299, 278, 421, 291,
	339, 305, 340, 292, 317, 316, 318, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	300, 0, 0, 0, 407, 0, 351, 333, 0, 0,
	0, 349, 303, 376, 341, 382, 366, 390, 782, 342,
	240, 367, 273, 314, 251, 253, 268, 275, 277, 279,
	280, 323, 324, 336, 355, 368, 369, 370, 272, 261,
	350, 262, 289, 263, 241, 265, 264, 266, 357, 267,
	243, 337, 374, 0, 285, 346, 310, 244, 309, 338,
	373, 372, 252, 398, 404, 405, 0, 0, 410, 0,
	0, 0, 418, 423, 424, 425, 427, 428, 429, 430,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 403, 283, 237, 238, 443, 269, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	402, 0, 0, 0, 431, 442, 0, 0, 0, 0,
	0, 441, 335, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 384, 396,
	413, 416, 0, 0, 0, 0, 242, 415, 0, 0,
	0, 0, 0, 0, 783, 0, 387, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 786, 0, 0, 319,
	320, 321, 322, 286, 0, 259, 414, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 282, 288, 426,
	290, 258, 334, 284, 393, 297, 0, 419, 0, 420,
	0, 0, 0, 0, 793, 780, 789, 781, 298, 304,
	347, 392, 332, 352, 256, 383, 359, 790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 236,
	0, 239, 0, 302, 0, 343, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 331, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 399, 400, 401,
	422, 385, 0, 440, 276, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 444, 436, 0, 0, 0,
	432, 0, 433, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 254, 187, 434, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 365, 381, 255, 356, 394, 260, 363,
	250, 330, 353, 0, 0, 247, 379, 362, 312, 295,
	296, 246, 0, 348, 274, 287, 271, 328, 0, 378,
	406, 270, 397, 0, 389, 249, 0, 388, 327, 375,
	380, 313, 307, 248, 377, 311, 306, 299, 278, 421,
	291, 339, 305, 340, 292, 317, 316, 318, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 391, 0, 0, 0, 2004, 2002, 0, 364, 0,
	2003, 300, 0, 0, 0, 407, 0, 351, 333, 0,
	0, 0, 349, 303, 376, 341, 382, 366, 390, 345,
	342, 240, 367, 273, 314, 251, 253, 268, 275, 277,
	279, 280, 323, 324, 336, 355, 368, 369, 370, 272,
	261, 350, 262, 289, 263, 241, 265, 264, 266, 357,
	267, 243, 337, 374, 0, 285, 346, 310, 244, 309,
	338, 373, 372, 252, 398, 404, 405, 0, 0, 410,
	0, 0, 0, 418, 423, 424, 425, 427, 428, 429,
	430, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 403, 283, 237, 238, 443, 269, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 402, 0, 0, 0, 431, 442, 0, 0, 0,
	0, 0, 441, 335, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 384,
	396, 413, 416, 0, 0, 0, 0, 242, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 411, 0, 0,
	319, 320, 321, 322, 286, 0, 259, 414, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 409, 282, 288,
	426, 290, 258, 334, 284, 393, 297, 0, 419, 0,
	420, 0, 0, 0, 0, 326, 293, 294, 358, 298,
	304, 347, 392, 332, 352, 256, 383, 359, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	236, 0, 239, 0, 302, 0, 343, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 0,
	0, 232, 233, 234, 235, 164, 0, 0, 399, 400,
	401, 422, 385, 0, 440, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 444, 436, 0, 0,
	0, 0, 276, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 0,
	433, 0, 0, 113, 0, 0, 360, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 1752, 0, 186, 0, 0,
	0, 0, 0, 0, 254, 187, 434, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 365, 381, 255, 356, 394, 260, 363, 250, 330,
	353, 0, 0, 247, 379, 362, 312, 295, 296, 246,
	0, 348, 274, 287, 271, 328, 0, 378, 406, 270,
	397, 0, 389, 249, 0, 388, 327, 375, 380, 313,
	307, 248, 377, 311, 306, 299, 278, 421, 291, 339,
	305, 340, 292, 317, 316, 318, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 240,
	367, 273, 314, 251, 253, 268, 275, 277, 279, 280,
	323, 324, 336, 355, 368, 369, 370, 272, 261, 350,
	262, 289, 263, 241, 265, 264, 266, 357, 267, 243,
	337, 374, 0, 285, 346, 310, 244, 309, 338, 373,
	372, 252, 398, 404, 405, 0, 0, 410, 0, 0,
	0, 418, 423, 424, 425, 427, 428, 429, 430, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	403, 283, 237, 238, 443, 269, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 431, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 413,
	416, 0, 0, 0, 0, 242, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 411, 0, 0, 319, 320,
	321, 322, 286, 0, 259, 414, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 282, 288, 426, 290,
	258, 334, 284, 393, 297, 0, 419, 0, 420, 0,
	0, 0, 0, 326, 293, 294, 358, 298, 304, 347,
	392, 332, 352, 256, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 236, 0,
	239, 0, 302, 133, 343, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 0, 0, 0, 232,
	233, 234, 235, 164, 0, 0, 399, 400, 401, 422,
	385, 0, 440, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 444, 436, 0, 0, 0, 0,
	276, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 0, 433, 0,
	0, 113, 0, 0, 360, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 1743, 0, 186, 0, 0, 0, 0,
	0, 0, 254, 187, 434, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 365,
	381, 255, 356, 394, 260, 363, 250, 330, 353, 0,
	0, 247, 379, 362, 312, 295, 296, 246, 0, 348,
	274, 287, 271, 328, 0, 378, 406, 270, 397, 0,
	389, 249, 0, 388, 327, 375, 380, 313, 307, 248,
	377, 311, 306, 299, 278, 421, 291, 339, 305, 340,
	292, 317, 316, 318, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 240, 367, 273,
	314, 251, 253, 268, 275, 277, 279, 280, 323, 324,
	336, 355, 368, 369, 370, 272, 261, 350, 262, 289,
	263, 241, 265, 264, 266, 357, 267, 243, 337, 374,
	0, 285, 346, 310, 244, 309, 338, 373, 372, 252,
	398, 404, 405, 0, 0, 410, 0, 0, 0, 418,
	423, 424, 425, 427, 428, 429, 430, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 403, 283,
	237, 238, 443, 269, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 431, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 413, 416, 0,
	0, 0, 0, 242, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 411, 0, 0, 319, 320, 321, 322,
	286, 0, 259, 414, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 282, 288, 426, 290, 258, 334,
	284, 393, 297, 0, 419, 0, 420, 0, 0, 0,
	0, 326, 293, 294, 358, 298, 304, 347, 392, 332,
	352, 256, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 236, 0, 239, 0,
	302, 133, 343, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 0, 0, 232, 233, 234,
	235, 164, 0, 0, 399, 400, 401, 422, 385, 0,
	440, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 436, 0, 0, 0, 0, 276, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 432, 0, 433, 0, 0, 113,
	0, 0, 360, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	254, 187, 434, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 365, 381, 255,
	356, 394, 260, 363, 250, 330, 353, 0, 0, 247,
	379, 362, 312, 295, 296, 246, 0, 348, 274, 287,
	271, 328, 0, 378, 406, 270, 397, 0, 389, 249,
	0, 388, 327, 375, 380, 313, 307, 248, 377, 311,
	306, 299, 278, 421, 291, 339, 305, 340, 292, 317,
	316, 318, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 0,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 407,
	0, 351, 333, 0, 0, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 240, 367, 273, 314, 251,
	253, 268, 275, 277, 279, 280, 323, 324, 336, 355,
	368, 369, 370, 272, 261, 350, 262, 289, 263, 241,
	265, 264, 266, 357, 267, 243, 337, 374, 0, 285,
	346, 310, 244, 309, 338, 373, 372, 252, 398, 404,
	405, 0, 0, 410, 0, 0, 0, 418, 423, 424,
	425, 427, 428, 429, 430, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 403, 283, 237, 238,
	443, 269, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 402, 0, 0, 0, 431,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 384, 396, 413, 416, 0, 0, 0,
	0, 242, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 411, 0, 0, 319, 320, 321, 322, 286, 0,
	259, 414, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 282, 288, 426, 290, 258, 334, 284, 393,
	297, 0, 419, 0, 420, 0, 0, 0, 0, 326,
	293, 294, 358, 298, 304, 347, 392, 332, 352, 256,
	383, 359, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 236, 0, 239, 0, 302, 133,
	343, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 331, 0, 0, 232, 233, 234, 235, 0,
	0, 0, 399, 400, 401, 422, 385, 0, 440, 276,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	444, 436, 0, 0, 0, 432, 0, 433, 0, 0,
	0, 0, 0, 360, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 791, 792, 0, 0, 0,
	0, 254, 187, 434, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 365, 381,
	255, 356, 394, 260, 363, 250, 330, 353, 0, 0,
	247, 379, 362, 312, 295, 296, 246, 0, 348, 274,
	287, 271, 328, 0, 378, 406, 270, 397, 770, 389,
	249, 769, 388, 327, 375, 380, 313, 307, 248, 377,
	311, 306, 299, 278, 421, 291, 339, 305, 340, 292,
	317, 316, 318, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 240, 367, 273, 314,
	251, 253, 268, 275, 277, 279, 280, 323, 324, 336,
	355, 368, 369, 370, 272, 261, 350, 262, 289, 263,
	241, 265, 264, 266, 357, 267, 243, 337, 374, 0,
	285, 346, 310, 244, 309, 338, 373, 372, 252, 398,
	404, 405, 0, 0, 410, 0, 0, 0, 418, 423,
	424, 425, 427, 428, 429, 430, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 403, 283, 237,
	238, 443, 269, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	431, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 413, 416, 0, 0,
	0, 0, 242, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 411, 0, 0, 319, 320, 321, 322, 286,
	0, 259, 414, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 282, 288, 426, 290, 258, 334, 284,
	393, 297, 0, 419, 0, 420, 0, 0, 0, 0,
	793, 1667, 789, 1668, 298, 304, 347, 392, 332, 352,
	256, 383, 359, 790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 236, 0, 239, 0, 302,
	0, 343, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 331, 0, 0, 232, 233, 234, 235,
	0, 0, 2396, 399, 400, 401, 422, 385, 0, 440,
	276, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 444, 436, 0, 0, 0, 432, 0, 433, 0,
	0, 0, 0, 0, 360, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 254, 187, 434, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 365,
	381, 255, 356, 394, 260, 363, 250, 330, 353, 0,
	0, 247, 379, 362, 312, 295, 296, 246, 0, 348,
	274, 287, 271, 328, 0, 378, 406, 270, 397, 0,
	389, 249, 0, 388, 327, 375, 380, 313, 307, 248,
	377, 311, 306, 299, 278, 421, 291, 339, 305, 340,
	292, 317, 316, 318, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 2399, 0,
	0, 2398, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 240, 367, 273,
	314, 251, 253, 268, 275, 277, 279, 280, 323, 324,
	336, 355, 368, 369, 370, 272, 261, 350, 262, 289,
	263, 241, 265, 264, 266, 357, 267, 243, 337, 374,
	0, 285, 346, 310, 244, 309, 338, 373, 372, 252,
	398, 404, 405, 0, 0, 410, 0, 0, 0, 418,
	423, 424, 425, 427, 428, 429, 430, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 403, 283,
	237, 238, 443, 269, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 431, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 413, 416, 0,
	0, 0, 0, 242, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 411, 0, 0, 319, 320, 321, 322,
	286, 0, 259, 414, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 282, 288, 426, 290, 258, 334,
	284, 393, 297, 0, 419, 0, 420, 0, 0, 0,
	0, 326, 293, 294, 358, 298, 304, 347, 392, 332,
	352, 256, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 236, 0, 239, 0,
	302, 0, 343, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 331, 0, 0, 232, 233, 234,
	235, 0, 0, 0, 399, 400, 401, 422, 385, 0,
	440, 276, 1216, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 444, 436, 0, 0, 0, 432, 0, 433,
	0, 0, 0, 0, 0, 360, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 1214,
	0, 0, 0, 254, 187, 434, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1212, 0, 0, 0, 0, 0, 0, 245,
	365, 381, 255, 356, 394, 260, 363, 250, 330, 353,
	0, 0, 247, 379, 362, 312, 295, 296, 246, 0,
	348, 274, 287, 271, 328, 0, 378, 406, 270, 397,
	0, 389, 249, 0, 388, 327, 375, 380, 313, 307,
	248, 377, 311, 306, 299, 278, 421, 291, 339, 305,
	340, 292, 317, 316, 318, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 364, 0, 0, 300, 0,
	0, 0, 407, 0, 351, 333, 0, 0, 0, 349,
	303, 376, 341, 382, 366, 390, 345, 342, 240, 367,
	273, 314, 251, 253, 268, 275, 277, 279, 280, 323,
	324, 336, 355, 368, 369, 370, 272, 261, 350, 262,
	289, 263, 241, 265, 264, 266, 357, 267, 243, 337,
	374, 0, 285, 346, 310, 244, 309, 338, 373, 372,
	252, 398, 404, 405, 0, 0, 410, 0, 0, 0,
	418, 423, 424, 425, 427, 428, 429, 430, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 403,
	283, 237, 238, 443, 269, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 402, 0,
	0, 0, 431, 442, 0, 0, 0, 0, 0, 441,
	335, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 384, 396, 413, 416,
	0, 0, 0, 0, 242, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 411, 0, 0, 319, 320, 321,
	322, 286, 0, 259, 414, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 409, 282, 288, 426, 290, 258,
	334, 284, 393, 297, 0, 419, 0, 420, 0, 0,
	0, 0, 326, 293, 294, 358, 298, 304, 347, 392,
	332, 352, 256, 383, 359, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 236, 0, 239,
	0, 302, 0, 343, 281, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 331, 0, 0, 232, 233,
	234, 235, 0, 0, 0, 399, 400, 401, 422, 385,
	0, 440, 276, 1210, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 444, 436, 0, 0, 0, 432, 0,
	433, 0, 0, 0, 0, 0, 360, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	1214, 0, 0, 0, 254, 187, 434, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1212, 0, 0, 0, 0, 0, 0,
	245, 365, 381, 255, 356, 394, 260, 363, 250, 330,
	353, 0, 0, 247, 379, 362, 312, 295, 296, 246,
	0, 348, 274, 287, 271, 328, 0, 378, 406, 270,
	397, 0, 389, 249, 0, 388, 327, 375, 380, 313,
	307, 248, 377, 311, 306, 299, 278, 421, 291, 339,
	305, 340, 292, 317, 316, 318, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 240,
	367, 273, 314, 251, 253, 268, 275, 277, 279, 280,
	323, 324, 336, 355, 368, 369, 370, 272, 261, 350,
	262, 289, 263, 241, 265, 264, 266, 357, 267, 243,
	337, 374, 0, 285, 346, 310, 244, 309, 338, 373,
	372, 252, 398, 404, 405, 0, 0, 410, 0, 0,
	0, 418, 423, 424, 425, 427, 428, 429, 430, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	403, 283, 237, 238, 443, 269, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 431, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 413,
	416, 0, 0, 0, 0, 242, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 411, 0, 0, 319, 320,
	321, 322, 286, 0, 259, 414, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 282, 288, 426, 290,
	258, 334, 284, 393, 297, 0, 419, 0, 420, 0,
	0, 0, 0, 326, 293, 294, 358, 298, 304, 347,
	392, 332, 352, 256, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 236, 0,
	239, 0, 302, 0, 343, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 331, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 399, 400, 401, 422,
	385, 0, 440, 276, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 444, 436, 0, 0, 0, 432,
	0, 433, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3160, 0, 186, 616,
	0, 0, 0, 0, 0, 254, 187, 434, 0, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 365, 381, 255, 356, 394, 260, 363, 250,
	330, 353, 0, 0, 247, 379, 362, 312, 295, 296,
	246, 0, 348, 274, 287, 271, 328, 0, 378, 406,
	270, 397, 0, 389, 249, 0, 388, 327, 375, 380,
	313, 307, 248, 377, 311, 306, 299, 278, 421, 291,
	339, 305, 340, 292, 317, 316, 318, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	300, 0, 0, 0, 407, 0, 351, 333, 0, 0,
	0, 349, 303, 376, 341, 382, 366, 390, 345, 342,
	240, 367, 273, 314, 251, 253, 268, 275, 277, 279,
	280, 323, 324, 336, 355, 368, 369, 370, 272, 261,
	350, 262, 289, 263, 241, 265, 264, 266, 357, 267,
	243, 337, 374, 0, 285, 346, 310, 244, 309, 338,
	373, 372, 252, 398, 404, 405, 0, 0, 410, 0,
	0, 0, 418, 423, 424, 425, 427, 428, 429, 430,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 403, 283, 237, 238, 443, 269, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	402, 0, 0, 0, 431, 442, 0, 0, 0, 0,
	0, 441, 335, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 384, 396,
	413, 416, 0, 0, 0, 0, 242, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 411, 0, 0, 319,
	320, 321, 322, 286, 0, 259, 414, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 282, 288, 426,
	290, 258, 334, 284, 393, 297, 0, 419, 0, 420,
	0, 0, 0, 0, 326, 293, 294, 358, 298, 304,
	347, 392, 332, 352, 256, 383, 359, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 236,
	0, 239, 0, 302, 0, 343, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 331, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 399, 400, 401,
	422, 385, 0, 440, 276, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 444, 436, 0, 0, 0,
	432, 0, 433, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 1214, 0, 0, 0, 254, 187, 434, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1212, 0, 0, 0, 0,
	0, 0, 245, 365, 381, 255, 356, 394, 260, 363,
	250, 330, 353, 0, 0, 247, 379, 362, 312, 295,
	296, 246, 0, 348, 274, 287, 271, 328, 0, 378,
	406, 270, 397, 0, 389, 249, 0, 388, 327, 375,
	380, 313, 307, 248, 377, 311, 306, 299, 278, 421,
	291, 339, 305, 340, 292, 317, 316, 318, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 0, 0, 0, 364, 0,
	0, 300, 0, 0, 0, 407, 0, 351, 333, 0,
	0, 0, 349, 303, 376, 341, 382, 366, 390, 345,
	342, 240, 367, 273, 314, 251, 253, 268, 275, 277,
	279, 280, 323, 324, 336, 355, 368, 369, 370, 272,
	261, 350, 262, 289, 263, 241, 265, 264, 266, 357,
	267, 243, 337, 374, 0, 285, 346, 310, 244, 309,
	338, 373, 372, 252, 398, 404, 405, 0, 0, 410,
	0, 0, 0, 418, 423, 424, 425, 427, 428, 429,
	430, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 403, 283, 237, 238, 443, 269, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 402, 0, 0, 0, 431, 442, 0, 0, 0,
	0, 0, 441, 335, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 384,
	396, 413, 416, 0, 0, 0, 0, 242, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 411, 0, 0,
	319, 320, 321, 322, 286, 0, 259, 414, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 409, 282, 288,
	426, 290, 258, 334, 284, 393, 297, 0, 419, 0,
	420, 0, 0, 0, 0, 326, 293, 294, 358, 298,
	304, 347, 392, 332, 352, 256, 383, 359, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	236, 0, 239, 0, 302, 0, 343, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 331, 0,
	0, 232, 233, 234, 235, 0, 0, 0, 399, 400,
	401, 422, 385, 0, 440, 276, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 444, 436, 0, 0,
	0, 432, 0, 433, 0, 0, 0, 0, 0, 360,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 1214, 0, 0, 0, 254, 187, 434,
	0, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2891, 0, 0, 0,
	0, 0, 0, 245, 365, 381, 255, 356, 394, 260,
	363, 250, 330, 353, 0, 0, 247, 379, 362, 312,
	295, 296, 246, 0, 348, 274, 287, 271, 328, 0,
	378, 406, 270, 397, 0, 389, 249, 0, 388, 327,
	375, 380, 313, 307, 248, 377, 311, 306, 299, 278,
	421, 291, 339, 305, 340, 292, 317, 316, 318, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 364,
	0, 0, 300, 0, 0, 0, 407, 0, 351, 333,
	0, 0, 0, 349, 303, 376, 341, 382, 366, 390,
	345, 342, 240, 367, 273, 314, 251, 253, 268, 275,
	277, 279, 280, 323, 324, 336, 355, 368, 369, 370,
	272, 261, 350, 262, 289, 263, 241, 265, 264, 266,
	357, 267, 243, 337, 374, 0, 285, 346, 310, 244,
	309, 338, 373, 372, 252, 398, 404, 405, 0, 0,
	410, 0, 0, 0, 418, 423, 424, 425, 427, 428,
	429, 430, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 403, 283, 237, 238, 443, 269, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 402, 0, 0, 0, 431, 442, 0, 0,
	0, 0, 0, 441, 335, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	384, 396, 413, 416, 0, 0, 0, 0, 242, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 411, 0,
	0, 319, 320, 321, 322, 286, 0, 259, 414, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 409, 282,
	288, 426, 290, 258, 334, 284, 393, 297, 0, 419,
	0, 420, 0, 0, 0, 0, 326, 293, 294, 358,
	298, 304, 347, 392, 332, 352, 256, 383, 359, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 236, 0, 239, 0, 302, 0, 343, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	0, 0, 232, 233, 234, 235, 331, 0, 0, 399,
	400, 401, 422, 385, 0, 440, 0, 0, 2069, 0,
	0, 0, 0, 276, 0, 0, 301, 444, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 432,
	0, 433, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 2071, 0, 0, 0, 254, 187, 434, 0, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 365, 381, 255, 356, 394, 260, 363, 250,
	330, 353, 0, 0, 247, 379, 362, 312, 295, 296,
	246, 0, 348, 274, 287, 271, 328, 0, 378, 406,
	270, 397, 0, 389, 249, 0, 388, 327, 375, 380,
	313, 307, 248, 377, 311, 306, 299, 278, 421, 291,
	339, 305, 340, 292, 317, 316, 318, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	300, 0, 0, 0, 407, 0, 351, 333, 0, 0,
	0, 349, 303, 376, 341, 382, 366, 390, 345, 342,
	240, 367, 273, 314, 251, 253, 268, 275, 277, 279,
	280, 323, 324, 336, 355, 368, 369, 370, 272, 261,
	350, 262, 289, 263, 241, 265, 264, 266, 357, 267,
	243, 337, 374, 0, 285, 346, 310, 244, 309, 338,
	373, 372, 252, 398, 404, 405, 0, 0, 410, 0,
	0, 0, 418, 423, 424, 425, 427, 428, 429, 430,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 403, 283, 237, 238, 443, 269, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	402, 0, 0, 0, 431, 442, 0, 0, 0, 0,
	0, 441, 335, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 384, 396,
	413, 416, 0, 0, 0, 0, 242, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 411, 0, 0, 319,
	320, 321, 322, 286, 0, 259, 414, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 282, 288, 426,
	290, 258, 334, 284, 393, 297, 0, 419, 0, 420,
	0, 0, 0, 0, 326, 293, 294, 358, 298, 304,
	347, 392, 332, 352, 256, 383, 359, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 236,
	0, 239, 0, 302, 0, 343, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 331, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 399, 400, 401,
	422, 385, 0, 440, 276, 2090, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 444, 436, 0, 0, 0,
	432, 0, 433, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 1214, 0, 0, 0, 254, 187, 434, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 365, 381, 255, 356, 394, 260, 363,
	250, 330, 353, 0, 0, 247, 379, 362, 312, 295,
	296, 246, 0, 348, 274, 287, 271, 328, 0, 378,
	406, 270, 397, 0, 389, 249, 0, 388, 327, 375,
	380, 313, 307, 248, 377, 311, 306, 299, 278, 421,
	291, 339, 305, 340, 292, 317, 316, 318, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 0, 0, 0, 364, 0,
	0, 300, 0, 0, 0, 407, 0, 351, 333, 0,
	0, 0, 349, 303, 376, 341, 382, 366, 390, 345,
	342, 240, 367, 273, 314, 251, 253, 268, 275, 277,
	279, 280, 323, 324, 336, 355, 368, 369, 370, 272,
	261, 350, 262, 289, 263, 241, 265, 264, 266, 357,
	267, 243, 337, 374, 0, 285, 346, 310, 244, 309,
	338, 373, 372, 252, 398, 404, 405, 0, 0, 410,
	0, 0, 0, 418, 423, 424, 425, 427, 428, 429,
	430, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 403, 283, 237, 238, 443, 269, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 402, 0, 0, 0, 431, 442, 0, 0, 0,
	0, 0, 441, 335, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 384,
	396, 413, 416, 0, 0, 0, 0, 242, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 411, 0, 0,
	319, 320, 321, 322, 286, 0, 259, 414, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 409, 282, 288,
	426, 290, 258, 334, 284, 393, 297, 0, 419, 0,
	420, 0, 0, 0, 0, 326, 293, 294, 358, 298,
	304, 347, 392, 332, 352, 256, 383, 359, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	236, 0, 239, 0, 302, 0, 343, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 331, 0,
	0, 232, 233, 234, 235, 0, 0, 0, 399, 400,
	401, 422, 385, 0, 440, 276, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 444, 436, 0, 0,
	0, 432, 0, 433, 0, 0, 0, 0, 0, 360,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3249, 0,
	186, 0, 0, 0, 0, 0, 0, 254, 187, 434,
	0, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 365, 381, 255, 356, 394, 260,
	363, 250, 330, 353, 0, 0, 247, 379, 362, 312,
	295, 296, 246, 0, 348, 274, 287, 271, 328, 0,
	378, 406, 270, 397, 0, 389, 249, 0, 388, 327,
	375, 380, 313, 307, 248, 377, 311, 306, 299, 278,
	421, 291, 339, 305, 340, 292, 317, 316, 318, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 364,
	0, 0, 300, 0, 0, 0, 407, 0, 351, 333,
	0, 0, 0, 349, 303, 376, 341, 382, 366, 390,
	345, 342, 240, 367, 273, 314, 251, 253, 268, 275,
	277, 279, 280, 323, 324, 336, 355, 368, 369, 370,
	272, 261, 350, 262, 289, 263, 241, 265, 264, 266,
	357, 267, 243, 337, 374, 0, 285, 346, 310, 244,
	309, 338, 373, 372, 252, 398, 404, 405, 0, 0,
	410, 0, 0, 0, 418, 423, 424, 425, 427, 428,
	429, 430, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 403, 283, 237, 238, 443, 269, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 402, 0, 0, 0, 431, 442, 0, 0,
	0, 0, 0, 441, 335, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	384, 396, 413, 416, 0, 0, 0, 0, 242, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 411, 0,
	0, 319, 320, 321, 322, 286, 0, 259, 414, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 409, 282,
	288, 426, 290, 258, 334, 284, 393, 297, 0, 419,
	0, 420, 0, 0, 0, 0, 326, 293, 294, 358,
	298, 304, 347, 392, 332, 352, 256, 383, 359, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 236, 0, 239, 0, 302, 0, 343, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 331,
	0, 0, 232, 233, 234, 235, 0, 0, 0, 399,
	400, 401, 422, 385, 0, 440, 276, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 444, 436, 0,
	0, 0, 432, 0, 433, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 616, 0, 0, 0, 0, 0, 254, 187,
	434, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 365, 381, 255, 356, 394,
	260, 363, 250, 330, 353, 0, 0, 247, 379, 362,
	312, 295, 296, 246, 0, 348, 274, 287, 271, 328,
	0, 378, 406, 270, 397, 0, 389, 249, 0, 388,
	327, 375, 380, 313, 307, 248, 377, 311, 306, 299,
	278, 421, 291, 339, 305, 340, 292, 317, 316, 318,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	364, 0, 0, 300, 0, 0, 0, 407, 0, 351,
	333, 0, 0, 0, 349, 303, 376, 341, 382, 366,
	390, 345, 342, 240, 367, 273, 314, 251, 253, 268,
	275, 277, 279, 280, 323, 324, 336, 355, 368, 369,
	370, 272, 261, 350, 262, 289, 263, 241, 265, 264,
	266, 357, 267, 243, 337, 374, 0, 285, 346, 310,
	244, 309, 338, 373, 372, 252, 398, 404, 405, 0,
	0, 410, 0, 0, 0, 418, 423, 424, 425, 427,
	428, 429, 430, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 403, 283, 237, 238, 443, 269,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 402, 0, 0, 0, 431, 442, 0,
	0, 0, 0, 0, 441, 335, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 384, 396, 413, 416, 0, 0, 0, 0, 242,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 411,
	0, 0, 319, 320, 321, 322, 286, 0, 259, 414,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 409,
	282, 288, 426, 290, 258, 334, 284, 393, 297, 0,
	419, 0, 420, 0, 0, 0, 0, 326, 293, 294,
	358, 298, 304, 347, 392, 332, 352, 256, 383, 359,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 236, 0, 239, 0, 302, 0, 343, 281,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	331, 0, 0, 232, 233, 234, 235, 0, 0, 0,
	399, 400, 401, 422, 385, 0, 440, 276, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 444, 436,
	0, 0, 0, 432, 0, 433, 0, 0, 0, 0,
	0, 360, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3175,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 254,
	187, 434, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 365, 381, 255, 356,
	394, 260, 363, 250, 330, 353, 0, 0, 247, 379,
	362, 312, 295, 296, 246, 0, 348, 274, 287, 271,
	328, 0, 378, 406, 270, 397, 0, 389, 249, 0,
	388, 327, 375, 380, 313, 307, 248, 377, 311, 306,
	299, 278, 421, 291, 339, 305, 340, 292, 317, 316,
	318, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 0, 0, 0, 0, 0,
	0, 364, 0, 0, 300, 0, 0, 0, 407, 0,
	351, 333, 0, 0, 0, 349, 303, 376, 341, 382,
	366, 390, 345, 342, 240, 367, 273, 314, 251, 253,
	268, 275, 277, 279, 280, 323, 324, 336, 355, 368,
	369, 370, 272, 261, 350, 262, 289, 263, 241, 265,
	264, 266, 357, 267, 243, 337, 374, 0, 285, 346,
	310, 244, 309, 338, 373, 372, 252, 398, 404, 405,
	0, 0, 410, 0, 0, 0, 418, 423, 424, 425,
	427, 428, 429, 430, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 403, 283, 237, 238, 443,
	269, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 402, 0, 0, 0, 431, 442,
	0, 0, 0, 0, 0, 441, 335, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 384, 396, 413, 416, 0, 0, 0, 0,
	242, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	411, 0, 0, 319, 320, 321, 322, 286, 0, 259,
	414, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 282, 288, 426, 290, 258, 334, 284, 393, 297,
	0, 419, 0, 420, 0, 0, 0, 0, 326, 293,
	294, 358, 298, 304, 347, 392, 332, 352, 256, 383,
	359, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 236, 0, 239, 0, 302, 0, 343,
	281, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 331, 0, 0, 232, 233, 234, 235, 0, 0,
	0, 399, 400, 401, 422, 385, 0, 440, 276, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 444,
	436, 0, 0, 0, 432, 0, 433, 0, 0, 0,
	0, 0, 360, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	254, 187, 434, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 365, 381, 255,
	356, 394, 260, 363, 250, 330, 353, 0, 0, 247,
	379, 362, 312, 295, 296, 246, 0, 348, 274, 287,
	271, 328, 0, 378, 406, 270, 397, 0, 389, 249,
	0, 388, 327, 375, 380, 313, 307, 248, 377, 311,
	306, 299, 278, 421, 291, 339, 305, 340, 292, 317,
	316, 318, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 3105,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 407,
	0, 351, 333, 0, 0, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 240, 367, 273, 314, 251,
	253, 268, 275, 277, 279, 280, 323, 324, 336, 355,
	368, 369, 370, 272, 261, 350, 262, 289, 263, 241,
	265, 264, 266, 357, 267, 243, 337, 374, 0, 285,
	346, 310, 244, 309, 338, 373, 372, 252, 398, 404,
	405, 0, 0, 410, 0, 0, 0, 418, 423, 424,
	425, 427, 428, 429, 430, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 403, 283, 237, 238,
	443, 269, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 402, 0, 0, 0, 431,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 384, 396, 413, 416, 0, 0, 0,
	0, 242, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 411, 0, 0, 319, 320, 321, 322, 286, 0,
	259, 414, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 282, 288, 426, 290, 258, 334, 284, 393,
	297, 0, 419, 0, 420, 0, 0, 0, 0, 326,
	293, 294, 358, 298, 304, 347, 392, 332, 352, 256,
	383, 359, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 236, 0, 239, 0, 302, 0,
	343, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 331, 0, 0, 232, 233, 234, 235, 0,
	0, 0, 399, 400, 401, 422, 385, 0, 440, 276,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	444, 436, 0, 0, 0, 432, 0, 433, 0, 0,
	0, 0, 0, 360, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2887, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 254, 187, 434, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 365, 381,
	255, 356, 394, 260, 363, 250, 330, 353, 0, 0,
	247, 379, 362, 312, 295, 296, 246, 0, 348, 274,
	287, 271, 328, 0, 378, 406, 270, 397, 0, 389,
	249, 0, 388, 327, 375, 380, 313, 307, 248, 377,
	311, 306, 299, 278, 421, 291, 339, 305, 340, 292,
	317, 316, 318, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 240, 367, 273, 314,
	251, 253, 268, 275, 277, 279, 280, 323, 324, 336,
	355, 368, 369, 370, 272, 261, 350, 262, 289, 263,
	241, 265, 264, 266, 357, 267, 243, 337, 374, 0,
	285, 346, 310, 244, 309, 338, 373, 372, 252, 398,
	404, 405, 0, 0, 410, 0, 0, 0, 418, 423,
	424, 425, 427, 428, 429, 430, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 403, 283, 237,
	238, 443, 269, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	431, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 413, 416, 0, 0,
	0, 0, 242, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 411, 0, 0, 319, 320, 321, 322, 286,
	0, 259, 414, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 282, 288, 426, 290, 258, 334, 284,
	393, 297, 0, 419, 0, 420, 0, 0, 0, 0,
	326, 293, 294, 358, 298, 304, 347, 392, 332, 352,
	256, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 236, 0, 239, 0, 302,
	0, 343, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 331, 0, 0, 232, 233, 234, 235,
	0, 0, 0, 399, 400, 401, 422, 385, 0, 440,
	276, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 444, 436, 0, 0, 0, 432, 0, 433, 0,
	0, 0, 0, 0, 360, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 254, 187, 434, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 365,
	381, 255, 356, 394, 260, 363, 250, 330, 353, 0,
	0, 247, 379, 362, 312, 295, 296, 246, 0, 348,
	274, 287, 271, 328, 0, 378, 406, 270, 397, 0,
	389, 249, 0, 388, 327, 375, 380, 313, 307, 248,
	377, 311, 306, 299, 278, 421, 291, 339, 305, 340,
	292, 317, 316, 318, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 2960, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 240, 367, 273,
	314, 251, 253, 268, 275, 277, 279, 280, 323, 324,
	336, 355, 368, 369, 370, 272, 261, 350, 262, 289,
	263, 241, 265, 264, 266, 357, 267, 243, 337, 374,
	0, 285, 346, 310, 244, 309, 338, 373, 372, 252,
	398, 404, 405, 0, 0, 410, 0, 0, 0, 418,
	423, 424, 425, 427, 428, 429, 430, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 403, 283,
	237, 238, 443, 269, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 431, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 413, 416, 0,
	0, 0, 0, 242, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 411, 0, 0, 319, 320, 321, 322,
	286, 0, 259, 414, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 282, 288, 426, 290, 258, 334,
	284, 393, 297, 0, 419, 0, 420, 0, 0, 0,
	0, 326, 293, 294, 358, 298, 304, 347, 392, 332,
	352, 256, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 236, 0, 239, 0,
	302, 0, 343, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 331, 0, 0, 232, 233, 234,
	235, 0, 0, 0, 399, 400, 401, 422, 385, 0,
	440, 276, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 444, 436, 0, 0, 0, 432, 0, 433,
	0, 0, 0, 0, 0, 360, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 254, 187, 434, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	365, 381, 255, 356, 394, 260, 363, 250, 330, 353,
	0, 0, 247, 379, 362, 312, 295, 296, 246, 0,
	348, 274, 287, 271, 328, 0, 378, 406, 270, 397,
	0, 389, 249, 0, 388, 327, 375, 380, 313, 307,
	248, 377, 311, 306, 299, 278, 421, 291, 339, 305,
	340, 292, 317, 316, 318, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 364, 0, 0, 300, 0,
	0, 0, 407, 0, 351, 333, 0, 0, 0, 349,
	303, 376, 341, 382, 366, 390, 345, 342, 240, 367,
	273, 314, 251, 253, 268, 275, 277, 279, 280, 323,
	324, 336, 355, 368, 369, 370, 272, 261, 350, 262,
	289, 263, 241, 265, 264, 266, 357, 267, 243, 337,
	374, 0, 285, 346, 310, 244, 309, 338, 373, 372,
	252, 398, 404, 405, 0, 0, 410, 0, 0, 0,
	418, 423, 424, 425, 427, 428, 429, 430, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 403,
	283, 237, 238, 443, 269, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 402, 0,
	0, 0, 431, 442, 0, 0, 0, 0, 0, 441,
	335, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 384, 396, 413, 416,
	0, 0, 0, 0, 242, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 411, 0, 0, 319, 320, 321,
	322, 286, 0, 259, 414, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 409, 282, 288, 426, 290, 258,
	334, 284, 393, 297, 0, 419, 0, 420, 0, 0,
	0, 0, 326, 293, 294, 358, 298, 304, 347, 392,
	332, 352, 256, 383, 359, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 236, 0, 239,
	0, 302, 0, 343, 281, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 331, 0, 0, 232, 233,
	234, 235, 0, 0, 0, 399, 400, 401, 422, 385,
	0, 440, 276, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 444, 436, 0, 0, 0, 432, 0,
	433, 0, 0, 0, 0, 0, 360, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 254, 187, 434, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 365, 381, 255, 356, 394, 260, 363, 250, 330,
	353, 0, 0, 247, 379, 362, 312, 295, 296, 246,
	0, 348, 274, 287, 271, 328, 0, 378, 406, 270,
	397, 0, 389, 249, 0, 388, 327, 375, 380, 313,
	307, 248, 377, 311, 306, 299, 278, 421, 291, 339,
	305, 340, 292, 317, 316, 318, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 240,
	367, 273, 314, 251, 253, 268, 275, 277, 279, 280,
	323, 324, 336, 355, 368, 369, 370, 272, 261, 350,
	262, 289, 263, 241, 265, 264, 266, 357, 267, 243,
	337, 374, 0, 285, 346, 310, 244, 309, 338, 373,
	372, 252, 398, 404, 405, 0, 0, 410, 0, 0,
	0, 418, 423, 424, 425, 427, 428, 429, 430, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	403, 283, 237, 238, 443, 269, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 431, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 413,
	416, 0, 0, 0, 0, 242, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 411, 0, 0, 319, 320,
	321, 322, 286, 0, 259, 414, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 282, 288, 426, 290,
	258, 334, 284, 393, 297, 0, 419, 0, 420, 0,
	0, 0, 0, 326, 293, 294, 358, 298, 304, 347,
	392, 332, 352, 256, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 236, 0,
	239, 0, 302, 0, 343, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 331, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 399, 400, 401, 422,
	385, 0, 440, 276, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 444, 436, 0, 0, 0, 432,
	0, 433, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 254, 187, 434, 0, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 365, 381, 255, 356, 394, 260, 363, 250,
	330, 353, 0, 0, 247, 379, 362, 312, 295, 296,
	246, 0, 348, 274, 287, 271, 328, 0, 378, 406,
	270, 397, 0, 389, 249, 0, 388, 327, 375, 380,
	313, 307, 248, 377, 311, 306, 299, 278, 421, 291,
	339, 305, 340, 292, 317, 316, 318, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	300, 0, 0, 0, 407, 0, 351, 333, 0, 0,
	0, 349, 303, 376, 341, 382, 366, 390, 345, 342,
	240, 367, 273, 314, 251, 253, 268, 275, 277, 279,
	280, 323, 324, 336, 355, 368, 369, 370, 272, 261,
	350, 262, 289, 263, 241, 265, 264, 266, 357, 267,
	243, 337, 374, 0, 285, 346, 310, 244, 309, 338,
	373, 372, 252, 398, 404, 405, 0, 0, 410, 0,
	0, 0, 418, 423, 424, 425, 427, 428, 429, 430,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 403, 283, 237, 238, 443, 269, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	402, 0, 0, 0, 431, 442, 0, 0, 0, 0,
	0, 441, 335, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 384, 396,
	413, 416, 0, 0, 0, 0, 242, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 411, 0, 0, 319,
	320, 321, 322, 286, 0, 259, 414, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 282, 288, 426,
	290, 258, 334, 284, 393, 297, 0, 419, 0, 420,
	0, 0, 0, 0, 326, 293, 294, 358, 298, 304,
	347, 392, 332, 352, 256, 383, 359, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 236,
	0, 239, 0, 302, 0, 343, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 331, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 399, 400, 401,
	422, 385, 0, 440, 276, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 444, 436, 0, 0, 0,
	432, 0, 433, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 2555, 0, 0, 0, 254, 187, 434, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 365, 381, 255, 356, 394, 260, 363,
	250, 330, 353, 0, 0, 247, 379, 362, 312, 295,
	296, 246, 0, 348, 274, 287, 271, 328, 0, 378,
	406, 270, 397, 0, 389, 249, 0, 388, 327, 375,
	380, 313, 307, 248, 377, 311, 306, 299, 278, 421,
	291, 339, 305, 340, 292, 317, 316, 318, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 0, 0, 0, 364, 0,
	0, 300, 0, 0, 0, 407, 0, 351, 333, 0,
	0, 0, 349, 303, 376, 341, 382, 366, 390, 345,
	342, 240, 367, 273, 314, 251, 253, 268, 275, 277,
	279, 280, 323, 324, 336, 355, 368, 369, 370, 272,
	261, 350, 262, 289, 263, 241, 265, 264, 266, 357,
	267, 243, 337, 374, 0, 285, 346, 310, 244, 309,
	338, 373, 372, 252, 398, 404, 405, 0, 0, 410,
	0, 0, 0, 418, 423, 424, 425, 427, 428, 429,
	430, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 403, 283, 237, 238, 443, 269, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 402, 0, 0, 0, 431, 442, 0, 0, 0,
	0, 0, 441, 335, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 384,
	396, 413, 416, 0, 0, 0, 0, 242, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 411, 0, 0,
	319, 320, 321, 322, 286, 0, 259, 414, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 409, 282, 288,
	426, 290, 258, 334, 284, 393, 297, 0, 419, 0,
	420, 0, 0, 0, 0, 326, 293, 294, 358, 298,
	304, 347, 392, 332, 352, 256, 383, 359, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	236, 0, 239, 0, 302, 0, 343, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 331, 0,
	0, 232, 233, 234, 235, 0, 0, 0, 399, 400,
	401, 422, 385, 0, 440, 276, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 444, 436, 0, 0,
	0, 432, 0, 433, 0, 0, 0, 0, 0, 360,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 254, 187, 434,
	0, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 365, 381, 255, 356, 394, 260,
	363, 250, 330, 353, 0, 0, 247, 379, 362, 312,
	295, 296, 246, 0, 348, 274, 287, 271, 328, 0,
	378, 406, 270, 397, 0, 389, 249, 0, 388, 327,
	375, 380, 313, 307, 248, 377, 311, 306, 299, 278,
	421, 291, 339, 305, 340, 292, 317, 316, 318, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 364,
	0, 0, 300, 0, 0, 0, 407, 0, 351, 333,
	0, 0, 0, 349, 303, 376, 341, 382, 366, 390,
	345, 342, 240, 367, 273, 314, 251, 253, 268, 275,
	277, 279, 280, 323, 324, 336, 355, 368, 369, 370,
	272, 261, 350, 262, 289, 263, 241, 265, 264, 266,
	357, 267, 243, 337, 374, 0, 285, 346, 310, 244,
	309, 338, 373, 372, 252, 398, 404, 405, 0, 0,
	410, 0, 0, 0, 418, 423, 424, 425, 427, 428,
	429, 430, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 403, 283, 237, 238, 443, 269, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 402, 0, 0, 0, 431, 442, 0, 0,
	0, 0, 0, 441, 335, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	384, 396, 413, 416, 0, 0, 0, 0, 242, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 411, 0,
	0, 319, 320, 321, 322, 286, 0, 259, 414, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 409, 282,
	288, 426, 290, 258, 334, 284, 393, 297, 0, 419,
	0, 420, 0, 0, 0, 0, 326, 293, 294, 358,
	298, 304, 347, 392, 332, 352, 256, 383, 359, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 236, 0, 239, 0, 302, 0, 343, 281, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 331,
	0, 0, 232, 233, 234, 235, 0, 0, 0, 399,
	400, 401, 422, 385, 0, 440, 276, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 444, 436, 0,
	0, 0, 432, 0, 433, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 1214, 0, 0, 0, 254, 187,
	434, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 365, 381, 255, 356, 394,
	260, 363, 250, 330, 353, 0, 0, 247, 379, 362,
	312, 295, 296, 246, 0, 348, 274, 287, 271, 328,
	0, 378, 406, 270, 397, 0, 389, 249, 0, 388,
	327, 375, 380, 313, 307, 248, 377, 311, 306, 299,
	278, 421, 291, 339, 305, 340, 292, 317, 316, 318,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	364, 0, 0, 300, 0, 0, 0, 407, 0, 351,
	333, 0, 0, 0, 349, 303, 376, 341, 382, 366,
	390, 345, 342, 240, 367, 273, 314, 251, 253, 268,
	275, 277, 279, 280, 323, 324, 336, 355, 368, 369,
	370, 272, 261, 350, 262, 289, 263, 241, 265, 264,
	266, 357, 267, 243, 337, 374, 0, 285, 346, 310,
	244, 309, 338, 373, 372, 252, 398, 404, 405, 0,
	0, 410, 0, 0, 0, 418, 423, 424, 425, 427,
	428, 429, 430, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 403, 283, 237, 238, 443, 269,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 402, 0, 0, 0, 431, 442, 0,
	0, 0, 0, 0, 441, 335, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 384, 396, 413, 416, 0, 0, 0, 0, 242,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 411,
	0, 0, 319, 320, 321, 322, 286, 0, 259, 414,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 409,
	282, 288, 426, 290, 258, 334, 284, 393, 297, 0,
	419, 0, 420, 0, 0, 0, 0, 326, 293, 294,
	358, 298, 304, 347, 392, 332, 352, 256, 383, 359,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 236, 0, 239, 0, 302, 0, 343, 281,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	331, 0, 0, 232, 233, 234, 235, 0, 0, 0,
	399, 400, 401, 422, 385, 0, 440, 276, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 444, 436,
	0, 0, 0, 432, 0, 433, 0, 0, 0, 0,
	0, 360, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 2071, 0, 0, 0, 254,
	187, 434, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 365, 381, 255, 356,
	394, 260, 363, 250, 330, 353, 0, 0, 247, 379,
	362, 312, 295, 296, 246, 0, 348, 274, 287, 271,
	328, 0, 378, 406, 270, 397, 0, 389, 249, 0,
	388, 327, 375, 380, 313, 307, 248, 377, 311, 306,
	299, 278, 421, 291, 339, 305, 340, 292, 317, 316,
	318, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 0, 0, 0, 0, 0,
	0, 364, 0, 0, 300, 0, 0, 0, 407, 0,
	351, 333, 0, 0, 0, 349, 303, 376, 341, 382,
	366, 390, 345, 342, 240, 367, 273, 314, 251, 253,
	268, 275, 277, 279, 280, 323, 324, 336, 355, 368,
	369, 370, 272, 261, 350, 262, 289, 263, 241, 265,
	264, 266, 357, 267, 243, 337, 374, 0, 285, 346,
	310, 244, 309, 338, 373, 372, 252, 398, 404, 405,
	0, 0, 410, 0, 0, 0, 418, 423, 424, 425,
	427, 428, 429, 430, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 403, 283, 237, 238, 443,
	269, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 402, 0, 0, 0, 431, 442,
	0, 0, 0, 0, 0, 441, 335, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 384, 396, 413, 416, 0, 0, 0, 0,
	242, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	411, 0, 0, 319, 320, 321, 322, 286, 0, 259,
	414, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 282, 288, 426, 290, 258, 334, 284, 393, 297,
	0, 419, 0, 420, 0, 0, 0, 0, 326, 293,
	294, 358, 298, 304, 347, 392, 332, 352, 256, 383,
	359, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 236, 0, 239, 0, 302, 0, 343,
	281, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 331, 0, 0, 232, 233, 234, 235, 0, 0,
	0, 399, 400, 401, 422, 385, 0, 440, 276, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 444,
	436, 0, 0, 0, 432, 0, 433, 0, 0, 0,
	0, 0, 360, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	254, 187, 434, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 365, 381, 255,
	356, 394, 260, 363, 250, 330, 353, 0, 0, 247,
	379, 362, 312, 295, 296, 246, 0, 348, 274, 287,
	271, 328, 0, 378, 406, 270, 397, 0, 389, 249,
	0, 388, 327, 375, 380, 313, 307, 248, 377, 311,
	306, 299, 278, 421, 291, 339, 305, 340, 292, 317,
	316, 318, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 0,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 407,
	0, 351, 333, 0, 0, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 240, 367, 273, 314, 251,
	253, 268, 275, 277, 279, 280, 323, 324, 336, 355,
	368, 369, 370, 272, 261, 350, 262, 289, 263, 241,
	265, 264, 266, 357, 267, 243, 337, 374, 0, 285,
	346, 310, 244, 309, 338, 373, 372, 252, 398, 404,
	405, 0, 0, 410, 0, 0, 0, 418, 423, 424,
	425, 427, 428, 429, 430, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 403, 283, 237, 238,
	443, 269, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 402, 0, 0, 0, 431,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 384, 396, 413, 416, 0, 0, 0,
	0, 242, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 411, 0, 0, 319, 320, 321, 322, 286, 0,
	259, 414, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 282, 288, 426, 290, 258, 334, 284, 393,
	297, 0, 419, 0, 420, 0, 0, 0, 0, 326,
	293, 294, 358, 298, 304, 347, 392, 332, 352, 256,
	383, 359, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 236, 0, 239, 0, 302, 0,
	343, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 331, 0, 0, 232, 233, 234, 235, 0,
	0, 0, 399, 400, 401, 422, 385, 0, 440, 276,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	444, 436, 0, 0, 0, 432, 0, 433, 0, 0,
	0, 0, 0, 360, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 254, 187, 434, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 365, 381,
	255, 356, 394, 260, 363, 250, 330, 353, 0, 0,
	247, 379, 362, 312, 295, 296, 246, 0, 348, 274,
	287, 271, 328, 0, 378, 406, 270, 397, 0, 389,
	249, 0, 388, 327, 375, 380, 313, 307, 248, 377,
	311, 306, 299, 278, 421, 291, 339, 305, 340, 292,
	317, 316, 318, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 240, 367, 273, 314,
	251, 253, 268, 275, 277, 279, 280, 323, 324, 336,
	355, 368, 369, 370, 272, 261, 350, 262, 289, 263,
	241, 265, 264, 266, 357, 267, 243, 337, 374, 0,
	285, 346, 310, 244, 309, 338, 373, 372, 252, 398,
	404, 405, 0, 0, 410, 0, 0, 0, 418, 423,
	424, 425, 427, 428, 429, 430, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 403, 283, 237,
	238, 443, 269, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	431, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 413, 416, 0, 0,
	0, 0, 242, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 411, 0, 0, 319, 320, 321, 322, 286,
	0, 259, 414, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 282, 288, 426, 290, 258, 334, 284,
	393, 297, 0, 419, 0, 420, 0, 0, 0, 0,
	326, 293, 294, 358, 298, 304, 347, 392, 332, 352,
	256, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 236, 0, 239, 0, 302,
	0, 343, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 331, 0, 0, 232, 233, 234, 235,
	0, 0, 0, 399, 400, 401, 422, 385, 0, 440,
	276, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 444, 436, 0, 0, 0, 432, 0, 433, 0,
	0, 0, 0, 0, 360, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 2106, 0,
	0, 0, 254, 187, 434, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 365,
	381, 255, 356, 394, 260, 363, 250, 330, 353, 0,
	0, 247, 379, 362, 312, 295, 296, 246, 0, 348,
	274, 287, 271, 328, 0, 378, 406, 270, 397, 0,
	389, 249, 0, 388, 327, 375, 380, 313, 307, 248,
	377, 311, 306, 299, 278, 421, 291, 339, 305, 340,
	292, 317, 316, 318, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 240, 367, 273,
	314, 251, 253, 268, 275, 277, 279, 280, 323, 324,
	336, 355, 368, 369, 370, 272, 261, 350, 262, 289,
	263, 241, 265, 264, 266, 357, 267, 243, 337, 374,
	0, 285, 346, 310, 244, 309, 338, 373, 372, 252,
	398, 404, 405, 0, 0, 410, 0, 0, 0, 418,
	423, 424, 425, 427, 428, 429, 430, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 403, 283,
	237, 238, 443, 269, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 431, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 413, 416, 0,
	0, 0, 0, 242, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 411, 0, 0, 319, 320, 321, 322,
	286, 0, 259, 414, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 282, 288, 426, 290, 258, 334,
	284, 393, 297, 0, 419, 0, 420, 0, 0, 0,
	0, 326, 293, 294, 358, 298, 304, 347, 392, 332,
	352, 256, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 236, 0, 239, 0,
	302, 0, 343, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 1944, 0, 232, 233, 234,
	235, 331, 0, 0, 399, 400, 401, 422, 385, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 301, 444, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 432, 0, 433, 0, 0, 0,
	0, 0, 360, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	254, 187, 434, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 365, 381, 255,
	356, 394, 260, 363, 250, 330, 353, 0, 0, 247,
	379, 362, 312, 295, 296, 246, 0, 348, 274, 287,
	271, 328, 0, 378, 406, 270, 397, 0, 389, 249,
	0, 388, 327, 375, 380, 313, 307, 248, 377, 311,
	306, 299, 278, 421, 291, 339, 305, 340, 292, 317,
	316, 318, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 0,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 407,
	0, 351, 333, 0, 0, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 240, 367, 273, 314, 251,
	253, 268, 275, 277, 279, 280, 323, 324, 336, 355,
	368, 369, 370, 272, 261, 350, 262, 289, 263, 241,
	265, 264, 266, 357, 267, 243, 337, 374, 0, 285,
	346, 310, 244, 309, 338, 373, 372, 252, 398, 404,
	405, 0, 0, 410, 0, 0, 0, 418, 423, 424,
	425, 427, 428, 429, 430, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 403, 283, 237, 238,
	443, 269, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 402, 0, 0, 0, 431,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 384, 396, 413, 416, 0, 0, 0,
	0, 242, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 411, 0, 0, 319, 320, 321, 322, 286, 0,
	259, 414, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 282, 288, 426, 290, 258, 334, 284, 393,
	297, 0, 419, 0, 420, 0, 0, 0, 0, 326,
	293, 294, 358, 298, 304, 347, 392, 332, 352, 256,
	383, 359, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 236, 0, 239, 0, 302, 0,
	343, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 331, 0, 0, 232, 233, 234, 235, 0,
	1635, 0, 399, 400, 401, 422, 385, 0, 440, 276,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	444, 436, 0, 0, 0, 432, 0, 433, 0, 0,
	0, 0, 0, 360, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 254, 187, 434, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 365, 381,
	255, 356, 394, 260, 363, 250, 330, 353, 0, 0,
	247, 379, 362, 312, 295, 296, 246, 0, 348, 274,
	287, 271, 328, 0, 378, 406, 270, 397, 0, 389,
	249, 0, 388, 327, 375, 380, 313, 307, 248, 377,
	311, 306, 299, 278, 421, 291, 339, 305, 340, 292,
	317, 316, 318, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 240, 367, 273, 314,
	251, 253, 268, 275, 277, 279, 280, 323, 324, 336,
	355, 368, 369, 370, 272, 261, 350, 262, 289, 263,
	241, 265, 264, 266, 357, 267, 243, 337, 374, 0,
	285, 346, 310, 244, 309, 338, 373, 372, 252, 398,
	404, 405, 0, 0, 410, 0, 0, 0, 418, 423,
	424, 425, 427, 428, 429, 430, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 403, 283, 237,
	238, 443, 269, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	431, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 413, 416, 0, 0,
	0, 0, 242, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 411, 0, 0, 319, 320, 321, 322, 286,
	0, 259, 414, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 282, 288, 426, 290, 258, 334, 284,
	393, 297, 0, 419, 0, 420, 0, 0, 0, 0,
	326, 293, 294, 358, 298, 304, 347, 392, 332, 352,
	256, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 236, 0, 239, 0, 302,
	0, 343, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 331, 0, 0, 232, 233, 234, 235,
	0, 0, 0, 399, 400, 401, 422, 385, 0, 440,
	276, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 444, 436, 0, 0, 0, 432, 0, 433, 0,
	0, 0, 0, 0, 360, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 1214, 0,
	0, 0, 254, 187, 434, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 365,
	381, 255, 356, 394, 260, 363, 250, 330, 353, 0,
	0, 247, 379, 362, 312, 295, 296, 246, 0, 348,
	274, 287, 271, 328, 0, 378, 406, 270, 397, 0,
	389, 249, 0, 388, 327, 375, 380, 313, 307, 248,
	377, 311, 306, 299, 278, 421, 291, 339, 305, 340,
	292, 317, 316, 318, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 1548, 342, 240, 367, 273,
	314, 251, 253, 268, 275, 277, 279, 280, 323, 324,
	336, 355, 368, 369, 370, 272, 261, 350, 262, 289,
	263, 241, 265, 264, 266, 357, 267, 243, 337, 374,
	0, 285, 346, 310, 244, 309, 338, 373, 372, 252,
	398, 404, 405, 0, 0, 410, 0, 0, 0, 418,
	423, 424, 425, 427, 428, 429, 430, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 403, 283,
	237, 238, 443, 269, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 431, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 413, 416, 0,
	0, 0, 0, 242, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 411, 0, 0, 319, 320, 321, 322,
	286, 0, 259, 414, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 282, 288, 426, 290, 258, 334,
	284, 393, 297, 0, 419, 0, 420, 0, 0, 0,
	0, 326, 293, 294, 358, 298, 304, 347, 392, 332,
	352, 256, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 236, 0, 239, 0,
	302, 0, 343, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 331, 0, 0, 232, 233, 234,
	235, 0, 0, 0, 399, 400, 401, 422, 385, 0,
	440, 276, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 444, 436, 0, 0, 0, 432, 0, 433,
	0, 0, 0, 0, 0, 360, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 254, 187, 434, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	365, 381, 255, 356, 394, 260, 363, 250, 330, 353,
	0, 0, 247, 379, 362, 312, 295, 296, 246, 0,
	348, 274, 287, 271, 328, 0, 378, 406, 270, 397,
	0, 389, 249, 0, 388, 327, 375, 380, 313, 307,
	248, 377, 311, 306, 299, 278, 421, 291, 339, 305,
	340, 292, 317, 316, 318, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	0, 1238, 0, 0, 0, 364, 0, 0, 300, 0,
	0, 0, 407, 0, 351, 333, 0, 0, 0, 349,
	303, 376, 341, 382, 366, 390, 345, 342, 240, 367,
	273, 314, 251, 253, 268, 275, 277, 279, 280, 323,
	324, 336, 355, 368, 369, 370, 272, 261, 350, 262,
	289, 263, 241, 265, 264, 266, 357, 267, 243, 337,
	374, 0, 285, 346, 310, 244, 309, 338, 373, 372,
	252, 398, 404, 405, 0, 0, 410, 0, 0, 0,
	418, 423, 424, 425, 427, 428, 429, 430, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 403,
	283, 237, 238, 443, 269, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 402, 0,
	0, 0, 431, 442, 0, 0, 0, 0, 0, 441,
	335, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 384, 396, 413, 416,
	0, 0, 0, 0, 242, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 411, 0, 0, 319, 320, 321,
	322, 286, 0, 259, 414, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 409, 282, 288, 426, 290, 258,
	334, 284, 393, 297, 0, 419, 0, 420, 0, 0,
	0, 0, 326, 293, 294, 358, 298, 304, 347, 392,
	332, 352, 256, 383, 359, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 236, 0, 239,
	0, 302, 0, 343, 281, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 331, 0, 0, 232, 233,
	234, 235, 0, 0, 0, 399, 400, 401, 422, 385,
	0, 440, 276, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 444, 436, 0, 0, 0, 432, 0,
	433, 0, 0, 0, 0, 0, 360, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 254, 187, 434, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 365, 381, 255, 356, 394, 260, 363, 250, 330,
	353, 0, 0, 247, 379, 362, 312, 295, 296, 246,
	0, 348, 274, 287, 271, 328, 0, 378, 406, 270,
	397, 0, 389, 249, 0, 388, 327, 375, 380, 313,
	307, 248, 377, 311, 306, 299, 278, 421, 291, 339,
	305, 340, 292, 317, 316, 318, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 300,
	0, 0, 0, 407, 0, 351, 333, 0, 0, 0,
	349, 303, 376, 341, 382, 366, 390, 345, 342, 240,
	367, 273, 314, 251, 253, 268, 275, 277, 279, 280,
	323, 324, 336, 355, 368, 369, 370, 272, 261, 350,
	262, 289, 263, 241, 265, 264, 266, 357, 267, 243,
	337, 374, 0, 285, 346, 310, 244, 309, 338, 373,
	372, 252, 398, 404, 405, 0, 0, 410, 0, 0,
	0, 418, 423, 424, 425, 427, 428, 429, 430, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	403, 283, 237, 238, 443, 269, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 402,
	0, 0, 0, 431, 442, 0, 0, 0, 0, 0,
	441, 335, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 384, 396, 413,
	416, 0, 0, 0, 0, 242, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 411, 0, 0, 319, 320,
	321, 322, 286, 0, 259, 414, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 409, 282, 288, 426, 290,
	258, 334, 284, 393, 297, 0, 419, 0, 420, 0,
	0, 0, 0, 326, 293, 294, 358, 298, 304, 347,
	392, 332, 352, 256, 383, 359, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 371, 0, 236, 0,
	239, 0, 302, 0, 343, 281, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 331, 0, 0, 232,
	233, 234, 235, 0, 0, 0, 399, 400, 401, 422,
	385, 0, 440, 276, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 444, 436, 0, 0, 0, 432,
	0, 433, 0, 0, 0, 0, 0, 360, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 254, 187, 434, 0, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 365, 381, 255, 356, 394, 260, 363, 250,
	330, 353, 0, 0, 247, 379, 362, 312, 295, 296,
	246, 0, 348, 274, 287, 271, 328, 0, 378, 406,
	270, 397, 0, 389, 249, 0, 388, 327, 375, 380,
	313, 307, 248, 377, 311, 306, 299, 278, 421, 291,
	339, 305, 340, 292, 317, 316, 318, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	300, 0, 0, 0, 407, 0, 351, 333, 0, 0,
	0, 349, 303, 376, 341, 382, 366, 390, 482, 342,
	240, 367, 273, 314, 251, 253, 268, 275, 277, 279,
	280, 323, 324, 336, 355, 368, 369, 370, 272, 261,
	350, 262, 289, 263, 241, 265, 264, 266, 357, 267,
	243, 337, 374, 0, 285, 346, 310, 244, 309, 338,
	373, 372, 252, 398, 404, 405, 0, 0, 410, 0,
	0, 0, 418, 423, 424, 425, 427, 428, 429, 430,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 403, 283, 237, 238, 443, 269, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	402, 0, 0, 0, 431, 442, 0, 0, 0, 0,
	0, 441, 335, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 384, 396,
	413, 416, 0, 0, 0, 0, 242, 415, 0, 0,
	0, 0, 0, 0, 483, 0, 387, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 411, 0, 0, 319,
	320, 321, 322, 286, 0, 259, 414, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 282, 288, 426,
	290, 258, 334, 284, 393, 297, 0, 419, 0, 420,
	0, 0, 0, 0, 326, 293, 294, 358, 298, 304,
	347, 392, 332, 352, 256, 383, 359, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 236,
	0, 239, 0, 302, 0, 343, 281, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 331, 0, 0,
	232, 233, 234, 235, 0, 0, 0, 399, 400, 401,
	422, 385, 0, 440, 276, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 444, 436, 0, 0, 0,
	432, 0, 433, 0, 0, 0, 0, 0, 360, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 254, 187, 434, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 365, 381, 255, 356, 394, 260, 363,
	250, 330, 353, 0, 0, 247, 379, 362, 312, 295,
	296, 246, 0, 348, 274, 287, 271, 328, 0, 378,
	406, 270, 397, 0, 389, 249, 0, 388, 327, 375,
	380, 313, 307, 248, 377, 311, 306, 299, 278, 421,
	291, 339, 305, 340, 292, 317, 316, 318, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 0,
	0, 391, 0, 0, 0, 0, 0, 0, 364, 0,
	0, 300, 0, 0, 0, 407, 0, 351, 333, 0,
	0, 0, 349, 303, 376, 341, 382, 366, 390, 345,
	342, 240, 367, 273, 314, 251, 253, 268, 275, 277,
	279, 280, 323, 324, 336, 355, 368, 369, 370, 272,
	261, 350, 262, 289, 263, 241, 265, 264, 266, 357,
	267, 243, 337, 374, 0, 285, 346, 310, 244, 309,
	338, 373, 372, 252, 398, 404, 405, 0, 0, 410,
	0, 0, 0, 418, 423, 424, 425, 427, 428, 429,
	430, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 403, 283, 237, 238, 443, 269, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 402, 0, 0, 0, 431, 442, 0, 0, 0,
	0, 0, 441, 335, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 384,
	396, 413, 416, 0, 0, 0, 0, 242, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 411, 0, 0,
	319, 320, 321, 322, 286, 0, 259, 414, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 409, 282, 288,
	426, 290, 258, 334, 284, 393, 297, 0, 419, 0,
	420, 0, 0, 0, 0, 326, 293, 294, 358, 298,
	304, 347, 392, 332, 352, 256, 383, 359, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	236, 0, 239, 0, 302, 0, 343, 281, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 331,
	0, 232, 233, 234, 235, 0, 0, 0, 399, 400,
	401, 422, 385, 0, 440, 449, 276, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 444, 436, 0, 0,
	0, 0, 432, 0, 433, 0, 0, 0, 0, 0,
	360, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 254, 187,
	434, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 365, 381, 255, 356, 394,
	260, 363, 250, 330, 353, 0, 0, 247, 379, 362,
	312, 295, 296, 246, 0, 348, 274, 287, 271, 328,
	0, 378, 406, 270, 397, 0, 389, 249, 0, 388,
	327, 375, 380, 313, 307, 248, 377, 311, 306, 299,
	278, 421, 291, 339, 305, 340, 292, 317, 316, 318,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	364, 0, 0, 300, 0, 0, 0, 407, 0, 351,
	333, 0, 0, 0, 349, 303, 376, 341, 382, 366,
	390, 345, 342, 240, 367, 273, 314, 251, 253, 268,
	275, 277, 279, 280, 323, 324, 336, 355, 368, 369,
	370, 272, 261, 350, 262, 289, 263, 241, 265, 264,
	266, 357, 267, 243, 337, 374, 0, 285, 346, 310,
	244, 309, 338, 373, 372, 252, 398, 404, 405, 0,
	0, 410, 0, 0, 0, 418, 423, 424, 425, 427,
	428, 429, 430, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 403, 283, 237, 238, 443, 269,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 402, 0, 0, 0, 431, 442, 0,
	0, 0, 0, 0, 441, 335, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 384, 396, 413, 416, 0, 0, 0, 0, 242,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 411,
	0, 0, 319, 320, 321, 322, 286, 0, 259, 414,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 409,
	282, 288, 426, 290, 258, 334, 284, 393, 297, 0,
	419, 0, 420, 0, 0, 0, 0, 326, 293, 294,
	358, 298, 304, 347, 392, 332, 352, 256, 383, 359,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 236, 0, 239, 0, 302, 0, 343, 281,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	331, 0, 0, 232, 233, 234, 235, 0, 0, 0,
	399, 400, 401, 422, 385, 0, 440, 276, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 444, 436,
	0, 0, 0, 432, 0, 433, 0, 0, 0, 0,
	0, 360, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 254,
	187, 434, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 365, 381, 255, 356,
	394, 260, 363, 250, 330, 353, 0, 0, 247, 379,
	362, 312, 295, 296, 246, 0, 348, 274, 287, 271,
	328, 0, 378, 406, 270, 397, 0, 389, 249, 0,
	388, 327, 375, 380, 313, 307, 248, 377, 311, 306,
	299, 278, 421, 291, 339, 305, 340, 292, 317, 316,
	318, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 0, 0, 0, 0, 0,
	0, 364, 0, 0, 300, 0, 0, 0, 407, 0,
	351, 333, 0, 0, 0, 349, 303, 376, 341, 382,
	366, 390, 345, 342, 240, 367, 273, 314, 251, 253,
	268, 275, 277, 279, 280, 323, 324, 336, 355, 368,
	369, 370, 272, 261, 350, 262, 289, 263, 241, 265,
	264, 266, 357, 267, 243, 337, 374, 0, 285, 346,
	310, 244, 309, 338, 373, 372, 252, 398, 404, 405,
	0, 0, 410, 0, 0, 0, 418, 423, 424, 425,
	427, 428, 429, 430, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 403, 283, 237, 238, 443,
	269, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 402, 0, 0, 0, 431, 442,
	0, 0, 0, 0, 0, 441, 335, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 384, 396, 413, 416, 0, 0, 0, 0,
	242, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	411, 0, 0, 319, 320, 321, 322, 286, 0, 259,
	414, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 282, 288, 426, 290, 258, 334, 284, 393, 297,
	0, 419, 0, 420, 0, 0, 0, 0, 326, 293,
	294, 358, 298, 304, 347, 392, 332, 352, 256, 383,
	359, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 236, 0, 239, 0, 302, 0, 343,
	281, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 331, 0, 0, 232, 233, 234, 235, 0, 0,
	0, 399, 400, 401, 422, 385, 0, 440, 276, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 444,
	436, 0, 0, 0, 432, 0, 433, 0, 0, 0,
	0, 0, 360, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	254, 187, 434, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 365, 1194, 255,
	356, 394, 260, 363, 250, 330, 353, 0, 0, 247,
	379, 362, 312, 295, 296, 246, 0, 348, 274, 287,
	271, 328, 0, 378, 406, 270, 397, 0, 389, 249,
	0, 388, 327, 375, 380, 313, 307, 248, 377, 311,
	306, 299, 278, 421, 291, 339, 305, 340, 292, 317,
	316, 318, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 0,
	0, 0, 364, 0, 0, 300, 0, 0, 0, 407,
	0, 351, 333, 0, 0, 0, 349, 303, 376, 341,
	382, 366, 390, 345, 342, 240, 367, 273, 314, 251,
	253, 268, 275, 277, 279, 280, 323, 324, 336, 355,
	368, 369, 370, 272, 261, 350, 262, 289, 263, 241,
	265, 264, 266, 357, 267, 243, 337, 374, 0, 285,
	346, 310, 244, 309, 338, 373, 372, 252, 398, 404,
	405, 0, 0, 410, 0, 0, 0, 418, 423, 424,
	425, 427, 428, 429, 430, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 403, 283, 237, 238,
	443, 269, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 402, 0, 0, 0, 431,
	442, 0, 0, 0, 0, 0, 441, 335, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 384, 396, 413, 416, 0, 0, 0,
	0, 242, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 411, 0, 0, 319, 320, 321, 322, 286, 0,
	259, 414, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 409, 282, 288, 426, 290, 258, 334, 284, 393,
	297, 0, 419, 0, 420, 0, 0, 0, 0, 326,
	293, 294, 358, 298, 304, 347, 392, 332, 352, 256,
	383, 359, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 236, 0, 239, 0, 302, 0,
	343, 281, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 331, 0, 0, 232, 233, 234, 235, 0,
	0, 0, 399, 400, 401, 422, 385, 0, 440, 276,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	444, 436, 0, 0, 0, 432, 0, 433, 0, 0,
	0, 0, 0, 360, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 254, 187, 434, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 365, 1192,
	255, 356, 394, 260, 363, 250, 330, 353, 0, 0,
	247, 379, 362, 312, 295, 296, 246, 0, 348, 274,
	287, 271, 328, 0, 378, 406, 270, 397, 0, 389,
	249, 0, 388, 327, 375, 380, 313, 307, 248, 377,
	311, 306, 299, 278, 421, 291, 339, 305, 340, 292,
	317, 316, 318, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 364, 0, 0, 300, 0, 0, 0,
	407, 0, 351, 333, 0, 0, 0, 349, 303, 376,
	341, 382, 366, 390, 345, 342, 240, 367, 273, 314,
	251, 253, 268, 275, 277, 279, 280, 323, 324, 336,
	355, 368, 369, 370, 272, 261, 350, 262, 289, 263,
	241, 265, 264, 266, 357, 267, 243, 337, 374, 0,
	285, 346, 310, 244, 309, 338, 373, 372, 252, 398,
	404, 405, 0, 0, 410, 0, 0, 0, 418, 423,
	424, 425, 427, 428, 429, 430, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 403, 283, 237,
	238, 443, 269, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 402, 0, 0, 0,
	431, 442, 0, 0, 0, 0, 0, 441, 335, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 384, 396, 413, 416, 0, 0,
	0, 0, 242, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 411, 0, 0, 319, 320, 321, 322, 286,
	0, 259, 414, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 409, 282, 288, 426, 290, 258, 334, 284,
	393, 297, 0, 419, 0, 420, 0, 0, 0, 0,
	326, 293, 294, 358, 298, 304, 347, 392, 332, 352,
	256, 383, 359, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 236, 0, 239, 0, 302,
	0, 343, 281, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 331, 0, 0, 232, 233, 234, 235,
	0, 0, 0, 399, 400, 401, 422, 385, 0, 440,
	276, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 444, 436, 0, 0, 0, 432, 0, 433, 0,
	0, 0, 0, 0, 360, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 254, 187, 434, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 365,
	381, 255, 356, 394, 260, 363, 250, 330, 353, 0,
	0, 247, 379, 362, 312, 295, 296, 246, 0, 348,
	274, 287, 271, 328, 0, 378, 406, 270, 397, 0,
	389, 249, 0, 388, 327, 375, 380, 313, 307, 248,
	377, 311, 306, 299, 278, 421, 291, 339, 305, 340,
	292, 317, 316, 318, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 300, 0, 0,
	0, 407, 0, 351, 333, 0, 0, 0, 349, 303,
	376, 341, 382, 366, 390, 345, 342, 240, 367, 273,
	314, 251, 253, 523, 275, 277, 279, 280, 323, 324,
	336, 355, 368, 369, 370, 272, 261, 350, 262, 289,
	263, 241, 265, 264, 266, 357, 267, 243, 337, 374,
	0, 285, 346, 310, 244, 309, 338, 373, 372, 252,
	398, 404, 405, 0, 0, 410, 0, 0, 0, 418,
	423, 424, 425, 427, 428, 429, 430, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 403, 283,
	237, 238, 443, 269, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 402, 0, 0,
	0, 431, 442, 0, 0, 0, 0, 0, 441, 335,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 384, 396, 413, 416, 0,
	0, 0, 0, 242, 415, 0, 0, 0, 0, 0,
	0, 0, 717, 387, 718, 0, 0, 395, 0, 0,
	0, 0, 0, 411, 0, 0, 319, 320, 321, 322,
	286, 0, 259, 414, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	699, 0, 408, 409, 282, 288, 426, 290, 258, 334,
	284, 393, 297, 711, 419, 714, 420, 0, 0, 0,
	0, 326, 293, 294, 358, 298, 304, 347, 392, 332,
	352, 256, 383, 359, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 236, 0, 239, 0,
	302, 0, 343, 281, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 0, 1623, 232, 233, 234,
	235, 0, 0, 0, 399, 400, 401, 422, 385, 713,
	440, 707, 0, 695, 0, 0, 0, 0, 0, 0,
	710, 709, 444, 436, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 1623, 0, 0, 692, 0, 0,
	0, 700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1625, 0,
	0, 3266, 1623, 0, 0, 0, 0, 0, 0, 0,
	716, 1600, 0, 0, 0, 706, 0, 0, 0, 705,
	0, 0, 0, 0, 0, 691, 0, 0, 0, 698,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 0, 1600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 693,
	0, 0, 0, 0, 0, 0, 0, 0, 1616, 0,
	0, 0, 0, 715, 0, 0, 0, 1600, 0, 502,
	501, 508, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 505, 506, 0, 507, 511, 0, 0, 493, 697,
	0, 0, 3011, 0, 0, 0, 1616, 0, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 501, 508, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 505, 506, 0, 507,
	511, 0, 0, 493, 1616, 1604, 0, 0, 0, 0,
	0, 520, 0, 516, 522, 0, 1610, 0, 0, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 1598, 1632, 0, 0,
	1599, 1601, 1603, 1604, 1605, 1606, 1607, 1611, 1612, 1613,
	1615, 1618, 1619, 1620, 1610, 0, 520, 0, 0, 522,
	0, 1608, 1617, 1609, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 1632, 0, 0, 1599, 1601,
	1603, 1604, 1605, 1606, 1607, 1611, 1612, 1613, 1615, 1618,
	1619, 1620, 1610, 0, 0, 1624, 0, 0, 0, 1608,
	1617, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1598, 1632, 0, 0, 1599, 1601, 1603, 0,
	1605, 1606, 1607, 1611, 1612, 1613, 1615, 1618, 1619, 1620,
	0, 0, 0, 1624, 1621, 0, 0, 1608, 1617, 1609,
	0, 0, 0, 0, 502, 501, 508, 498, 0, 0,
	0, 1597, 494, 496, 495, 0, 505, 506, 1596, 507,
	511, 0, 500, 493, 0, 0, 0, 0, 0, 0,
	0, 1624, 1621, 516, 504, 0, 0, 0, 0, 0,
	0, 519, 1614, 0, 0, 0, 0, 0, 497, 1597,
	0, 1602, 488, 0, 0, 0, 1596, 494, 496, 495,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	1614, 0, 0, 0, 0, 0, 519, 1597, 0, 1602,
	0, 0, 0, 497, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 503, 509, 0, 510, 512, 0, 0,
	513, 514, 515, 0, 0, 517, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 503, 509,
	0, 510, 512, 0, 0, 513, 514, 515, 0, 0,
	517, 518, 0, 0, 0, 0, 0, 494, 496, 495,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	0, 0, 0, 0, 0, 0, 519, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 503, 509,
	0, 510, 512, 0, 0, 513, 514, 515, 0, 0,
	517, 518,
}

var yyPact = [...]int{
	264, -1000, -1000, -1000, -312, 10246, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34168,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34168,
	-308, 33627, 33627, -1000, -1000, 2128, -1000, 33085, 11373, 34168,
	296, 284, 34168, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 696,
	-1000, 32544, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 621,
	36507, 35791, 8004, -257, -1000, 2967, -86, 2005, 865, 891,
	984, 984, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 36137, 733, 32003, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 297, 570, 733, 13544, 18, 14,
	2967, 339, 2644, -1000, 1211, 3185, 173, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8004, 8004,
	10246, -346, 10246, 8004, 34168, 34168, -1000, -1000, -1000, -1000,
	621, 36507, 8004, 2005, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4299, -1000, 1314,
	-1000, -1000, -1000, -1000, -1000, 2482, 1310, 2004, 520, 34168,
	-1000, 1292, 520, -1000, -1000, -1000, 2967, 2967, -1000, 34168,
	34168, 76, 1505, -1000, 345, 363, 310, 1287, -1000, -1000,
	-1000, -1000, -1000, -1000, 397, 2884, -1000, 34168, 34168, 2503,
	34168, -1000, 1828, 448, 36552, 2699, 1018, 717, 2538, -1000,
	-1000, 2481, -1000, 199, 194, 198, 499, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 221, -1000, 2786, -1000, -1000, 197,
	-1000, -1000, 182, -1000, -1000, -1000, 13, -1000, -1000, -1000,
	-1000, -1000, -1000, -92, -1000, -1000, 930, 1995, 8004, -1000,
	1601, -1000, 2855, -1000, -1000, -1000, -1000, 5207, 9678, 9678,
	9678, 9678, -1000, -1000, 2298, 8004, 2480, 2479, -1000, -1000,
	-1000, -1000, -1000, 1285, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1681, -1000, -1000, -1000, 9120, -1000, 2478,
	2475, 2474, 2473, 2471, 2468, 2465, 2463, 2449, 2448, 2446,
	2444, 2443, 2438, 2202, 10802, 2437, 2003, 2000, 2436, 2435,
	2428, 1994, 2202, 2202, 2419, 2417, 2416, 2413, 2412, 2408,
	2407, 2404, 2398, 2394, 2390, 2376, 2375, 2367, 2366, 2364,
	2363, 2362, 2349, 2346, 2344, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1155, -1000,
	2341, 2679, 2795, 2242, 2865, 2774, 2768, 2766, 2733, 1808,
	-1000, -1000, 65, -1000, -113, -1000, -1000, 872, -1000, 820,
	-1000, 34168, 34168, 34168, 858, 607, 607, 607, 607, 607,
	607, 679, 607, -152, 693, 692, 691, 607, -1000, -1000,
	-1000, -1000, -1000, -1000, -112, -1000, 1475, 1474, 2489, 795,
	-1000, -1000, -1000, -1000, 1122, 34168, -1000, 2258, 1412, 1412,
	2792, 472, 455, 453, 1412, 349, -1000, 1547, 1547, 1547,
	1547, 1412, 391, 539, 2795, 2795, -5, 1547, -25, 1412,
	1412, -25, 1412, 1412, 1412, 177, -303, -1000, -1000, -1000,
	1547, 1547, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2780,
	2779, 621, 34168, 124, 34168, 621, 621, 621, 626, -27,
	35250, 34709, 1828, 422, 420, 1149, 1522, -1000, 1400, 34168,
	34168, 1400, 1400, 17923, 17382, -1000, 34168, -1000, 2795, 2242,
	-1000, 2175, 2174, 2173, 2242, 621, 621, 621, 621, 621,
	153, 621, 621, 621, 34168, 34168, 31462, 621, 621, 6881,
	6881, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10246, 1904, 1866, 172, -67, -314, 217, -1000, -1000, 34168,
	2657, 151, -1000, -1000, -1000, 2213, -1000, 2255, 2255, 2255,
	2255, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2281, 2335, -1000, -1000, 2253, 2253, 2253, 2213, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2273, 2273, 2278, 2278, 2273, 34168, 8004,
	34168, 2692, 308, 2316, -1000, 34168, 304, 2795, 2679, 2795,
	-1000, -1000, 1284, 1799, 1993, -1000, -1000, 345, 1378, -1000,
	973, -1000, -1000, -1000, -1000, 34168, -92, 317, -1000, -1000,
	1964, 2309, -1000, 489, 1008, 1348, -1000, 178, 36712, 27127,
	1828, 27127, 34168, -1000, -1000, -1000, -1000, -1000, -1000, 8,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 181, -1000, 8004, 8004, 8004, 8004, 8004,
	-1000, 776, 8562, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9678, 9678, 9678, 9678, 9678, 9678, 9678, 9678, 9678, 9678,
	9678, 9678, 2293, 1521, 9678, 9678, 9678, 9678, 2174, 2814,
	1139, 229, -1000, -1000, -1000, -1000, -1000, 1541, 1995, 8004,
	8004, 34168, -1000, -1000, 3143, 8004, 8004, 4075, 8004, 2730,
	8004, 8004, 8004, 2171, 3748, 34168, 8004, -1000, 2170, 2166,
	-1000, -1000, 1707, 8004, -1000, -1000, 8004, -1000, -1000, 8004,
	9678, 8004, -1000, -1000, -1000, 2953, 2730, 2730, 1482, 8004,
	8004, 2730, 2730, 2730, 1451, 2730, 2730, 2730, 2730, 2730,
	2730, 2730, 2730, 2165, 2158, 2157, 2795, -257, 6323, -1000,
	-263, 2679, 8004, -1000, -1000, 8004, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1992, 1984, -330, -39, 854, 824,
	844, -1000, 2720, -1000, 2308, 2301, 1282, 607, -1000, -118,
	34168, 1558, 34168, 27127, 34168, 34168, 1828, 34168, 34168, 607,
	-158, 607, 607, 607, 34168, -1000, 2610, 27127, 2594, 626,
	-1000, 34168, 1122, 2718, 34168, 2871, 9678, 9678, -1000, 30921,
	1547, 1412, 1412, -1000, -1000, 34168, -1000, -1000, -1000, 1547,
	34168, 1547, 1547, 2871, 1547, -1000, -1000, -1000, 1412, 1412,
	-1000, -1000, -1000, -1000, 1547, 1547, -1000, -1000, 2871, 34168,
	-9, 2871, 2871, 0, -1000, -1000, -1000, 34168, 34168, 607,
	34168, -1000, 34168, 34168, -1000, -1000, 34168, 3308, 34168, 30380,
	2772, -1000, 27127, 34168, 34168, 24963, -1000, 1076, -1000, -57,
	-1000, -52, -27, 1400, -27, 1400, -1000, 488, 517, 16300,
	421, 27127, 4649, -1000, -1000, 1400, 1400, 4649, 4649, 1321,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1108, -1000, 183,
	2679, -1000, -1000, -1000, -1000, -1000, 34168, 34168, 27127, 1828,
	34168, 621, 34168, 34168, 34168, -1000, 2300, -1000, 2698, 34168,
	34168, 1312, -1000, -1000, 13003, 1281, 1312, -1000, 1580, -1000,
	8004, 10246, -285, 8004, 10246, 10246, 8004, 10246, -1000, 8004,
	147, -1000, -1000, -1000, -1000, 1798, -1000, 1785, -1000, -1000,
	-1000, 1982, 1982, -1000, 1782, -1000, -1000, -1000, -1000, 1775,
	-1000, -1000, 1774, -1000, -1000, -1000, 2155, 930, -1000, 1976,
	2522, -258, -1000, 15201, 34168, 34168, -1000, -1000, -258, -1000,
	14643, 34168, 2679, -1000, 2679, 34168, -1000, 2791, -1000, 345,
	287, -1000, -1000, -1000, -1000, -1000, -1000, 1280, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1103, -1000, 34168,
	-1000, -1000, 178, 27127, 28209, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 193, -1000, -1000, 163, -1000, 665, 120, 1376,
	-1000, -1000, 131, 170, 716, 1995, -1000, 1552, 1552, 1566,
	-1000, 543, -1000, -1000, -1000, -1000, 2298, -1000, -1000, -1000,
	3233, 3485, -1000, 1496, 1496, 1329, 1329, 1329, 1329, 1329,
	1471, 1471, -1000, -1000, -1000, 5207, 2293, 9678, 9678, 9678,
	9678, 548, 548, 2324, 3373, -1000, 8004, 1570, -1000, 8004,
	1951, 1175, 1273, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2153, 2148, 2310, 2883, 2140, 8004, -1000,
	-1000, 1370, 1365, 1362, -1000, 2189, 7446, -1000, -1000, -1000,
	2139, 1271, 2138, -1000, -1000, -1000, 2133, 1361, 989, 2132,
	1747, 2126, 1099, 8004, 8004, 8004, 2115, 1343, 1334, 8004,
	8004, 8004, 8004, 2112, 8004, 8004, 8004, 8004, 8004, 8004,
	8004, 8004, 36, 36, 36, -1000, -1000, 1323, -1000, 1995,
	-1000, 1960, -1000, 1171, 1093, -1000, 1974, -1000, -1000, -1000,
	1934, -1000, -1000, 851, 808, 838, 34168, 933, 11914, 34168,
	34168, -1000, 2258, 2696, 139, -1000, 1024, -1000, 120, -104,
	300, 953, 2501, 2882, 34168, 607, 34168, 34168, 34168, 2716,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29839, -1000,
	2291, 1315, -1000, -1000, 8004, -1000, -1000, 2500, 34168, 34168,
	2871, 2871, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34168,
	2871, 2871, 1412, 1547, -1000, -1000, 1547, -1000, -1000, 1547,
	-1000, 1268, -1000, 34168, -1000, -1000, -1000, 2258, 1092, -1000,
	1708, 566, 566, 829, 563, 2862, 14085, -1000, 1422, 1007,
	657, 2636, 187, -1000, 1422, -209, 1422, 1422, 1422, 1422,
	1422, 1422, 1422, 393, 392, 1422, 1422, 1422, 1422, 1422,
	1422, 1422, 1422, 1422, 1422, 1422, 881, 1422, 1422, 1422,
	1422, 1422, -1000, 1422, 2290, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 524, 137, 2761, 227, 224, 1024, 2752, 249,
	2949, 1146, -1000, -1000, -1000, -1000, 20094, 20094, 15759, 20094,
	-1000, 1381, -27, -76, -1000, -1000, 1076, 4649, 1076, 4649,
	-1000, -1000, 650, -1000, -1000, 953, -1000, 34168, 34168, -1000,
	-1000, 2289, 1463, -1000, -1000, 10802, -1000, 4649, 4649, -1000,
	-1000, 20635, 34168, -1000, -94, -1000, -72, 2790, 1055, -1000,
	-1000, 1059, 953, 2521, 34168, 1055, -1000, -1000, 11914, 34168,
	-1000, -1000, 2871, 6881, -1000, 24963, -1000, -1000, 29291, -1000,
	28750, 2871, 1526, -1000, 10246, 1848, 168, -1000, 189, -321,
	165, 1686, 144, 1995, -1000, -1000, 2111, 2096, 1303, -1000,
	1301, 2094, 1300, 1297, -1000, -23, -1000, 2662, 957, -1000,
	2286, -1000, 1296, 2579, -1000, 1033, -1000, 1461, 1295, -1000,
	957, 1288, 2575, 1033, 2790, -1000, 1266, 73, -1000, -1000,
	34168, 1964, 1275, 28209, 986, -1000, 636, 1265, 1260, -1000,
	27127, 174, 27127, -1000, 27127, -1000, -1000, 332, -1000, 34168,
	2661, -1000, -1000, -1000, 1934, -333, -1000, -1000, -1000, -1000,
	-1000, 1269, -1000, 548, 548, 2324, 3337, -1000, 9678, -1000,
	9678, 2810, 1509, -1000, 8004, 1800, 4176, 2045, 19005, 34168,
	-1000, -1000, 8004, 8004, -1000, 2802, -1000, -1000, -1000, -1000,
	8004, 8004, 2159, -1000, 34168, -1000, -1000, -1000, -1000, 19005,
	-1000, 9678, -1000, 8004, 1070, 2764, 1254, 36, 36, 36,
	2676, 2669, 2660, 1250, 36, 2614, 2566, 2549, 2512, 2487,
	2476, 2466, 2457, -1000, 2282, -1000, -1000, 6323, -1000, -23,
	8004, 8004, 8004, 2627, -1000, -1000, 105, -1000, 1460, -1000,
	-1000, -1000, 804, 161, 2077, 1028, -1000, -1000, 34168, -1000,
	-1000, -1000, 2076, 1016, -1000, -1000, -1000, 12393, 2255, 2255,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2281,
	-1000, -1000, 2253, 2253, 2253, 2213, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2273, 2273, 2278, 2278, 2273,
	-1000, 2258, 2713, -1000, 52, 1422, 549, 27127, 400, -1000,
	34168, 1688, 1456, 2511, 576, 2642, 34168, 265, 34168, 2271,
	2270, 2265, 278, 12393, 34168, 1062, -1000, 1259, 3185, -1000,
	34168, 1995, -1000, 1828, -1000, 1412, -1000, -1000, 2871, 1194,
	-1000, -1000, 2871, 1412, 1412, 1547, 34168, -1000, 2712, 3308,
	-1000, 34168, -1000, -1000, -1000, 778, -1000, 814, 607, 34168,
	1596, 814, 1595, 2264, -1000, -1000, 34168, 34168, 34168, 34168,
	-1000, -1000, 34168, -1000, 34168, 34168, 34168, 34168, -1000, 34168,
	34168, -1000, 34168, 1594, 1590, 2665, -1000, 1422, 1422, 760,
	-1000, -1000, 461, -1000, 1759, 1756, 1750, 1748, 1959, 1958,
	1954, 1422, 1422, 1738, 1952, 27668, 1949, 1035, 1737, 1728,
	1727, 1827, 1941, 920, -1000, 1940, 1809, 1803, 1778, 34168,
	2263, 1879, -1000, -1000, 52, 1422, 223, 34168, 1450, 549,
	299, 1805, 16841, 34168, 24963, 24963, 24963, 24963, -1000, 2562,
	2561, -1000, 2560, 2552, 2577, 34168, 24963, 2258, -1000, 27668,
	-1000, -1000, -1000, 2174, 1249, 2982, 822, 8004, -1000, -1000,
	-63, -70, -1000, -1000, -1000, 27127, 1938, 421, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2895, 34168, 34168, 531,
	2073, -1000, 2869, -1000, 1003, -1000, -1000, 1256, -1000, 2869,
	1543, -313, 10246, 1528, 1383, -1000, 8004, 10246, 8004, -286,
	210, -289, -1000, -1000, -1000, 1936, -1000, -1000, -1000, 1725,
	-1000, 1721, 46, 56, 1578, -258, 6323, 337, 34168, -258,
	34168, 6323, -1000, 34168, 328, -258, -1000, 34168, 1720, -1000,
	-1000, -1000, 2874, 27127, 1828, 1367, 26586, -1000, 191, -1000,
	190, 468, 1935, -1000, 686, 104, 1934, -1000, -1000, -1000,
	9678, -1000, -1000, -1000, -1000, 1995, 8004, 2071, -1000, 788,
	788, 2070, -1000, 2255, 2255, -1000, 2213, 2253, 2213, 788,
	788, 2068, -1000, 2015, 2432, -1000, 2426, 2402, 8004, -1000,
	2067, 2714, 1252, -121, 36, 36, -1000, -1000, -1000, -1000,
	36, 36, 36, 36, -1000, 36, 36, 36, 36, 36,
	36, 36, 36, 530, -1000, 46, 1995, 1995, -1000, -1000,
	2622, -1000, 1934, 1930, -1000, 1929, 1919, 933, 12393, 711,
	11914, 2648, 2705, 325, 1815, -1000, -1000, -1000, 26045, 447,
	-1000, -1000, -1000, 579, 209, 1717, 428, -1000, 34168, 249,
	2600, 1449, 1917, 34168, -1000, -1000, -1000, -1000, -1000, 2642,
	-1000, 943, 270, 12455, 2702, 2252, 2250, 12455, 12455, 12455,
	272, 1538, -1000, 520, 988, 1223, 24963, 34168, -1000, 24422,
	2063, -1000, 953, 2871, -1000, 34168, -1000, 2871, 2871, 1412,
	-1000, 325, -1000, 2643, 12393, -1000, 34168, -1000, 34168, -1000,
	34168, 34168, 607, 8004, 2643, 34168, 629, -1000, -1000, 938,
	280, 541, 541, 993, -1000, 2666, -1000, -1000, -1000, 34168,
	-1000, -1000, -1000, -1000, -1000, -1000, 19005, 19005, 2744, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1912, 1907, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34168, 1245, -1000, 1448, 1815, 26045, 1446, 1400,
	1905, 447, 1688, 1445, -1000, 1899, -1000, 963, 34168, 34168,
	-1000, 1097, -1000, 1443, 2493, 2510, 2493, -1000, -1000, -1000,
	-1000, 2551, -1000, 2523, -1000, -1000, 1097, -1000, -1000, -1000,
	-1000, -1000, 822, -1000, 2771, 814, 814, 814, 2056, -1000,
	-1000, -1000, 986, 2054, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2867, 2851, 25504, 2867, -1000, -313, 1454,
	-1000, 1730, 134, 1556, 34168, -1000, -1000, -1000, 2053, 2052,
	-265, 66, 2850, 2849, 2893, -1000, 2048, 981, -258, -1000,
	-1000, 957, -1000, -1000, -1000, -258, -1000, 957, -1000, -1000,
	1828, -1000, 167, -1000, -1000, -1000, -1000, -1000, -1000, 98,
	-1000, 34168, -1000, 102, -1000, 1995, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8004, -1000, -1000, -1000, 2395, -1000, -1000, 8004, 2046,
	1897, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2903, -1000, 2848, -265, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12393, -1000, 1763,
	325, -172, -1000, 1895, 118, -1000, -1000, -1000, 1884, 1883,
	1712, -1000, -1000, 1764, 1276, 132, -1000, -1000, -1000, -1000,
	-1000, -1000, 1805, 1735, 1442, -343, -1000, 2246, -1000, 1422,
	1422, 1422, 34168, 2040, 974, -1000, -1000, -1000, -1000, 325,
	34168, 12455, 2035, 2032, 2027, 525, 1441, 1408, -1000, 1711,
	20094, 24963, 24422, 1057, -1000, 1221, -1000, -1000, -1000, 2871,
	-1000, -1000, 2871, -1000, -1000, -1000, 34168, 3179, 2244, -1000,
	2243, 2499, 307, 2236, 2232, 34168, 2372, -1000, 2643, 34168,
	583, 2641, -1000, -1000, -1000, -1000, -1000, 341, -1000, 34168,
	-1000, -1000, 1319, -1000, 19005, -1000, -1000, 1242, -1000, 1879,
	1877, -1000, 118, 1876, 4649, -1000, -1000, 2600, 1874, -1000,
	34168, 963, 963, 2903, 34168, 6323, -1000, -1000, 8004, 2229,
	-1000, 8004, -1000, -1000, -1000, -1000, -1000, 2227, 2625, -1000,
	-1000, -1000, -1000, -1000, -1000, 8004, 8004, -1000, -1000, 580,
	10246, -295, 204, -1000, -1000, -1000, -268, 1873, -1000, -1000,
	2845, 1860, 1829, 34168, -1000, 957, 957, 953, -1000, -1000,
	0, -1000, 2342, -1000, 2247, 36, -1000, 155, 8004, -268,
	-165, -1000, -1000, -172, -1000, 315, -1000, -1000, 316, -1000,
	-1000, 234, -1000, -1000, 1702, 485, -1000, -1000, -1000, 1857,
	1605, 1838, 23340, 19005, 19546, 1855, -1000, -177, 12455, -1000,
	1240, -1000, 1422, 2026, 36426, 181, 36426, 897, 1391, -1000,
	1710, -1000, 1706, -1000, 2871, 1057, 1221, -1000, -1000, 1337,
	-1000, -1000, -1000, -1000, 3179, -1000, -1000, 1604, 9678, -1000,
	-1000, 1854, 19546, 809, 1440, 1434, 649, 2225, -1000, 357,
	2891, -1000, -1000, -1000, 753, 2221, -1000, 1574, 1573, -1000,
	34168, -1000, 23340, 23340, 703, 703, 23340, 23340, 2220, 541,
	-1000, -1000, 9678, -1000, -1000, -1000, -1000, 1422, 1307, -1000,
	-1000, -1000, -1000, -1000, -1000, 1735, -1000, -1000, 2795, -1000,
	-1000, 1995, 34168, 1995, 23881, -1000, 2844, 2843, 1995, 930,
	-1000, -313, 34168, 34168, -271, 1696, -1000, 1853, 59, -1000,
	-1000, 945, -274, 44, 78, -1000, -1000, -1000, 2014, -1000,
	528, -1000, -1000, -1000, 930, -271, 34168, -1000, 353, -1000,
	-1000, 463, 1851, -1000, -1000, 233, -1000, -1000, -1000, -1000,
	-1000, 101, -1000, 1432, 1238, -1000, 2213, 8004, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34168, 1763, -177, 486,
	36388, -1000, 1007, -1000, 0, 486, 444, 254, -1000, 1695,
	-1000, -1000, 2903, -1000, -1000, -1000, 2324, -1000, -1000, -1000,
	-1000, -1000, -1000, 1849, 1847, -1000, -1000, -1000, -1000, -1000,
	1691, 2210, -96, 2736, 1842, -1000, -1000, 2205, 1234, 1230,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1226, 1217, 23340,
	-1000, -1000, 2324, 19005, 1422, -1000, -1000, 1191, 1190, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2204, -1000, -1000, 2841,
	-1000, 1840, 571, 50, 78, -1000, 2828, 58, 2820, 2811,
	-1000, -1000, 487, -260, 34, 33, 32, -1000, -1000, -1000,
	8004, -1000, 2701, -1000, 188, -1000, 97, -1000, -1000, -1000,
	1838, 1837, -1000, 23340, 2666, 2211, -1000, -1000, -1000, 309,
	2809, 36426, -1000, 1422, -1000, 309, -1000, 275, -1000, 1380,
	-1000, 1689, -1000, 2795, -1000, -1000, 2012, 8004, 2202, 1422,
	1909, -161, 23340, 2397, 2326, 2312, 1856, 1188, -1000, 19005,
	-1000, -1000, 22799, 34168, 1829, -1000, 2201, 1647, 66, 53,
	2806, -1000, 1829, 2805, 1829, 1829, 1560, -1000, 30, 28,
	26, -1000, -1000, -1000, -1000, 1834, -1000, -1000, -1000, -1000,
	250, -1000, -1000, 2666, -1000, 2801, 423, -1000, 19005, -1000,
	-1000, -1000, 1624, -1000, -1000, -1000, 1923, -1000, 34168, -1000,
	2472, -1000, 154, 1179, 250, 703, 250, 703, 250, 703,
	250, 703, 180, -1000, -1000, -1000, 1150, -1000, -1000, 2725,
	18464, 42, -1000, -1000, -1000, 1831, -1000, 1829, -1000, -1000,
	487, -1000, -1000, -1000, -1000, -1000, 1422, 1826, 263, -1000,
	-1000, -1000, 22258, 329, 367, 364, -1000, 459, -1000, -1000,
	-1000, 541, -1000, -1000, 2345, 2214, 2879, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34168, -1000, 34168,
	-1000, 1144, -1000, -1000, -1000, 1214, -1000, -1000, -1000, -1000,
	-1000, 1621, -1000, 34168, -1000, 34168, 327, 1620, 9678, 2200,
	9678, 2195, 333, 2192, -1000, -1000, 2887, -1000, 2880, 727,
	727, 250, 250, 250, 250, -1000, 928, -1000, 1416, -1000,
	21717, 34168, -1000, -1000, 1143, 2191, 2798, -1000, 2469, 34168,
	2296, 34168, 2177, 1414, 9678, -1000, -1000, -1000, 1673, 362,
	-1000, 34168, 5765, -1000, 1168, -1000, -1000, 480, 336, -1000,
	1138, -1000, 1133, 21176, 1618, 2028, -1000, -1000, -1000, -1000,
	-1000, 1995, 34168, 1121, -1000, 34168, 323, -1000, -1000, -1000,
	1115, -1000, -1000, -1000, -1000, 480, 2573, -1000, 1616, -1000,
	-1000, 36350, 612, -1000, -1000, 36350, 326, -1000, 462, 2129,
	-1000, -1000, 1110, -1000, 34168, 697, 8004, -1000, 326, 36426,
	-1000, 8004, 1067, -1000, 36426, 991, -1000, -1000,
}

var yyPgo = [...]int{
	0, 146, 2928, 241, 153, 3528, 85, 237, 211, 208,
	236, 3527, 3525, 2672, 2652, 3524, 3523, 3522, 3521, 3520,
	3505, 3504, 3494, 3493, 3492, 3490, 3489, 3488, 3487, 3486,
	3467, 3465, 3464, 3463, 3454, 3453, 3452, 3451, 3450, 3449,
	235, 3447, 3445, 3444, 3443, 3442, 3441, 3440, 3438, 3437,
	3436, 3435, 3431, 3430, 3429, 3428, 3427, 3426, 3425, 3424,
	3423, 3422, 3420, 3418, 3417, 3416, 3415, 3413, 3409, 3408,
	3407, 3406, 202, 3405, 2637, 3404, 3403, 3402, 3401, 3400,
	3398, 3397, 225, 3396, 3395, 3394, 3393, 3392, 3391, 3389,
	3388, 3387, 3386, 3385, 216, 3383, 3382, 3381, 3368, 3367,
	3366, 213, 3364, 151, 180, 3363, 3362, 3361, 3360, 3356,
	3355, 221, 238, 66, 3354, 47, 3353, 192, 3352, 129,
	3351, 127, 3350, 3347, 3344, 3341, 3340, 3339, 3338, 3337,
	3336, 3334, 3332, 3331, 3329, 3327, 3326, 3325, 83, 3324,
	250, 3323, 69, 3322, 3321, 113, 230, 171, 247, 2472,
	246, 242, 169, 148, 82, 3320, 2642, 3318, 144, 212,
	137, 27, 3317, 155, 3316, 133, 45, 33, 239, 126,
	56, 143, 110, 3315, 197, 96, 95, 3312, 3311, 167,
	245, 170, 3310, 108, 3304, 3302, 3300, 3298, 177, 168,
	3297, 3296, 109, 3294, 3293, 106, 3292, 68, 196, 139,
	195, 3290, 162, 104, 116, 101, 3288, 3279, 93, 3278,
	3276, 3274, 3273, 165, 3271, 3267, 124, 64, 3263, 3262,
	3259, 67, 3258, 44, 3255, 23, 3250, 62, 3249, 3248,
	3247, 3244, 3241, 3240, 3239, 3236, 3232, 3231, 3230, 70,
	3229, 3228, 16, 17, 19, 3227, 26, 3224, 149, 3223,
	3221, 3217, 78, 81, 3214, 79, 2, 48, 3211, 199,
	417, 91, 135, 3209, 412, 3208, 3206, 3205, 131, 3204,
	546, 3203, 3196, 3195, 3194, 3193, 123, 3192, 191, 51,
	3190, 115, 117, 3188, 36, 46, 204, 217, 3187, 3186,
	3185, 138, 187, 84, 28, 0, 3181, 136, 3175, 3173,
	3172, 244, 3170, 218, 209, 142, 223, 254, 226, 3169,
	3167, 61, 3162, 140, 43, 55, 118, 10, 20, 163,
	3161, 14, 160, 3159, 182, 3157, 172, 7, 130, 3155,
	3154, 35, 274, 3153, 3151, 3150, 107, 3149, 3148, 240,
	72, 3147, 3145, 3144, 3142, 34, 3138, 37, 25, 3137,
	89, 3136, 233, 3135, 318, 121, 161, 150, 132, 210,
	219, 73, 71, 3134, 1633, 128, 90, 18, 3132, 207,
	3131, 229, 111, 3130, 105, 3128, 234, 371, 184, 3125,
	166, 8, 42, 32, 3119, 9, 3118, 190, 176, 3117,
	3116, 22, 54, 3115, 30, 3114, 3113, 3112, 3110, 5,
	3109, 3108, 3106, 1, 4, 3105, 3, 188, 3104, 3103,
	3100, 3099, 49, 119, 3098, 147, 157, 156, 3097, 86,
	3096, 3095, 3094, 812, 3092, 243, 3091, 3090, 3088, 3087,
	3086, 3085, 3084, 3083, 3082, 88, 39, 3080, 3075, 3072,
	3071, 75, 125, 3070, 3069, 3065, 3058, 38, 159, 3054,
	21, 3047, 29, 31, 41, 3045, 114, 3039, 12, 164,
	3038, 3036, 15, 3035, 3034, 11, 13, 3031, 3029, 103,
	3028, 80, 24, 145, 94, 3026, 3025, 77, 203, 122,
	3024, 3012, 231, 232, 179, 3011, 205, 224, 260, 3009,
	189, 3008, 3007, 3002, 2988, 2981, 2980, 1062, 2971, 2970,
	228, 65, 87, 98, 2968, 2965, 2964, 76, 141, 100,
	99, 57, 74, 2962, 97, 175, 2961, 174, 2960, 2957,
	92, 2955, 2953, 2951, 2947, 2946, 173, 2944, 2942, 178,
	222, 2940, 2935, 2934, 2933, 227, 498, 2932,
}

//line mysql_sql.y:10310
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 525, 533, 533, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 109, 109, 108, 523, 523, 523, 524,
	524, 105, 126, 125, 128, 128, 127, 127, 124, 124,
	120, 123, 123, 122, 122, 121, 116, 118, 118, 117,
	119, 119, 106, 94, 107, 468, 468, 467, 467, 466,
	466, 420, 420, 465, 465, 465, 464, 464, 464, 463,
	463, 462, 462, 461, 461, 459, 459, 460, 458, 457,
	457, 457, 455, 455, 455, 451, 451, 453, 452, 452,
	454, 446, 446, 449, 449, 447, 447, 447, 447, 450,
	445, 445, 445, 444, 444, 93, 93, 93, 366, 366,
	92, 92, 380, 380, 380, 380, 380, 378, 378, 378,
	378, 378, 378, 377, 377, 376, 376, 381, 381, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 83,
	83, 83, 83, 83, 88, 88, 88, 530, 530, 529,
	529, 531, 531, 531, 531, 532, 532, 86, 86, 86,
	87, 375, 375, 375, 84, 85, 85, 365, 365, 370,
	370, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 374, 374, 374, 372, 372, 371,
	371, 373, 373, 77, 77, 77, 80, 79, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 78, 78, 78,
	78, 78, 78, 73, 73, 73, 73, 73, 72, 72,
	74, 74, 362, 362, 361, 89, 89, 90, 527, 527,
	526, 528, 528, 528, 528, 91, 97, 97, 97, 97,
	97, 97, 97, 96, 96, 99, 99, 98, 100, 82,
	82, 82, 82, 82, 82, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 493, 493, 493, 495, 495, 299,
	300, 534, 302, 298, 298, 298, 489, 489, 490, 491,
	492, 492, 492, 95, 11, 11, 11, 11, 11, 11,
	11, 71, 76, 247, 247, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 235, 235, 235,
	230, 230, 230, 230, 231, 231, 232, 232, 233, 233,
	233, 233, 234, 234, 292, 292, 252, 252, 252, 254,
	254, 253, 251, 249, 249, 249, 249, 249, 249, 250,
	250, 250, 255, 255, 69, 75, 75, 75, 506, 506,
	70, 517, 517, 423, 423, 313, 313, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 428, 429, 309, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 47, 50, 46, 46, 46,
	351, 351, 45, 535, 535, 287, 287, 58, 57, 49,
	59, 60, 61, 62, 63, 64, 44, 56, 56, 56,
	56, 56, 56, 56, 56, 67, 67, 440, 440, 537,
	537, 537, 65, 66, 422, 422, 422, 55, 54, 53,
	52, 51, 51, 43, 43, 42, 42, 48, 132, 133,
	306, 306, 306, 308, 308, 304, 536, 536, 394, 394,
	307, 307, 41, 41, 41, 41, 68, 305, 305, 286,
	303, 303, 303, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 23,
	24, 26, 359, 359, 356, 25, 18, 17, 20, 16,
	16, 19, 21, 22, 22, 9, 9, 9, 9, 13,
	13, 14, 153, 153, 203, 203, 501, 501, 497, 497,
	498, 498, 498, 499, 499, 500, 500, 101, 434, 434,
	434, 434, 434, 434, 8, 175, 175, 433, 433, 433,
	433, 433, 433, 363, 363, 478, 478, 478, 479, 174,
	174, 169, 169, 435, 435, 328, 480, 480, 443, 443,
	442, 442, 441, 441, 172, 172, 173, 173, 156, 156,
	112, 112, 448, 448, 448, 448, 456, 456, 419, 419,
	239, 239, 279, 279, 280, 280, 146, 146, 147, 147,
	147, 147, 147, 147, 486, 486, 488, 488, 487, 171,
	171, 167, 167, 168, 168, 168, 166, 166, 165, 164,
	164, 163, 161, 161, 161, 162, 162, 162, 179, 179,
	149, 149, 149, 148, 148, 148, 148, 148, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	150, 150, 494, 494, 494, 424, 424, 424, 431, 431,
	261, 261, 262, 262, 260, 260, 151, 151, 152, 152,
	152, 152, 259, 259, 258, 154, 154, 160, 159, 159,
	155, 155, 155, 155, 269, 269, 268, 268, 268, 268,
	104, 110, 110, 111, 178, 178, 267, 266, 266, 266,
	177, 177, 176, 176, 170, 170, 158, 158, 158, 158,
	265, 157, 263, 522, 522, 521, 521, 520, 518, 518,
	518, 519, 519, 519, 519, 470, 470, 470, 470, 470,
	293, 293, 293, 297, 297, 296, 296, 296, 296, 296,
	301, 7, 7, 7, 7, 7, 7, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 36, 187, 188, 37,
	189, 189, 190, 190, 191, 191, 192, 193, 194, 194,
	194, 194, 35, 180, 180, 181, 181, 182, 182, 183,
	184, 184, 184, 186, 185, 34, 34, 27, 139, 139,
	140, 140, 140, 140, 142, 142, 236, 236, 236, 141,
	141, 143, 143, 143, 502, 505, 503, 503, 507, 507,
	507, 508, 508, 508, 508, 509, 509, 28, 129, 134,
	512, 512, 512, 511, 511, 513, 513, 514, 514, 283,
	283, 284, 284, 137, 138, 138, 136, 131, 145, 145,
	145, 145, 145, 130, 135, 504, 510, 510, 510, 360,
	360, 357, 358, 358, 355, 354, 354, 354, 516, 516,
	515, 515, 515, 294, 294, 29, 350, 350, 352, 353,
	353, 353, 344, 344, 344, 344, 33, 348, 348, 349,
	349, 349, 349, 349, 345, 345, 347, 347, 343, 343,
	343, 343, 343, 32, 144, 144, 342, 342, 339, 339,
	337, 337, 338, 338, 336, 336, 336, 340, 340, 39,
	39, 39, 341, 341, 31, 31, 31, 114, 113, 113,
	113, 282, 282, 281, 281, 115, 38, 215, 215, 408,
	408, 408, 408, 408, 426, 426, 426, 409, 409, 409,
	410, 410, 410, 411, 411, 411, 411, 411, 425, 425,
	427, 427, 427, 382, 382, 383, 383, 383, 386, 386,
	400, 400, 401, 401, 399, 399, 406, 406, 405, 405,
	404, 404, 403, 403, 402, 402, 402, 402, 397, 397,
	396, 396, 384, 384, 384, 384, 384, 385, 385, 385,
	395, 395, 398, 398, 223, 223, 224, 224, 257, 221,
	221, 222, 222, 222, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 476,
	476, 477, 226, 226, 237, 237, 237, 237, 237, 237,
	225, 225, 227, 227, 204, 204, 202, 202, 195, 195,
	196, 196, 197, 197, 197, 201, 201, 200, 200, 200,
	200, 198, 198, 199, 199, 199, 199, 199, 199, 368,
	368, 473, 473, 474, 474, 469, 469, 469, 472, 472,
	472, 472, 472, 475, 475, 475, 471, 471, 205, 277,
	277, 277, 295, 295, 295, 295, 276, 276, 276, 220,
	220, 219, 219, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 367, 367, 310, 310, 311,
	311, 246, 245, 245, 245, 245, 245, 243, 244, 242,
	242, 242, 242, 242, 241, 241, 240, 240, 240, 346,
	346, 238, 238, 229, 229, 229, 228, 228, 228, 407,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 275, 275, 275, 320, 320, 325,
	325, 485, 485, 484, 206, 206, 206, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 216, 216, 216, 391,
	391, 391, 391, 392, 392, 392, 392, 393, 393, 393,
	389, 389, 390, 390, 329, 330, 330, 432, 432, 387,
	387, 388, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 439, 439, 439, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	496, 496, 496, 481, 481, 481, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 273, 273, 273, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 331, 331, 332, 332, 436, 436, 436,
	436, 436, 436, 437, 437, 438, 438, 438, 438, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 318, 270,
	270, 270, 333, 326, 326, 327, 327, 321, 321, 321,
	321, 321, 321, 321, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 322, 322, 324, 324,
	335, 335, 335, 334, 334, 334, 334, 334, 334, 334,
	218, 218, 218, 218, 315, 315, 315, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 208,
	208, 208, 208, 212, 212, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 213,
	213, 213, 213, 213, 211, 211, 211, 211, 211, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 102, 103, 103, 210, 278,
	278, 412, 412, 415, 415, 413, 413, 414, 416, 416,
	416, 417, 417, 417, 418, 418, 418, 421, 421, 285,
	285, 285, 291, 291, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 4, 5, 5, 6,
	5, 5, 3, 2, 2, 1, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 2, 1,
	3, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 6, 4, 4,
	4, 3, 6, 3, 5, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 5, 1, 3, 2, 1, 5,
	4, 4, 2, 0, 5, 0, 1, 3, 3, 1,
	3, 1, 3, 1, 3, 4, 0, 1, 0, 1,
	1, 3, 1, 1, 0, 4, 1, 3, 2, 1,
	0, 8, 0, 4, 7, 4, 0, 2, 0, 2,
	0, 2, 0, 4, 1, 3, 1, 1, 5, 3,
	4, 6, 4, 5, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 0, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 7,
	1, 3, 0, 1, 1, 3, 1, 3, 0, 1,
	1, 1, 12, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 9, 8, 7, 1, 2,
	2, 3, 3, 3, 0, 4, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 1, 0, 2, 7, 8, 8,
	0, 3, 3, 0, 2, 0, 3, 0, 5, 1,
	3, 0, 3, 3, 0, 2, 9, 6, 0, 2,
	2, 3, 3, 4, 4, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 6, 0, 4, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 9,
	10, 8, 0, 2, 11, 9, 11, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 4, 1, 3, 3, 0,
	1, 1, 3, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 1,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 1, 1, 1, 7, 9, 7,
	9, 2, 1, 7, 9, 7, 9, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 3, 3, 2, 2, 1, 5, 6, 4, 1,
	1, 1, 5, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 1,
	1, 1, 1, 1, 4, 4, 4, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 2, 0,
	1, 6, 8, 6, 6, 5, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 4, 4, 3, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 2, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -525, -533, -2, -5, 587, -1, -4, -103, -77,
	-7, -105, -106, -8, -101, -9, -10, -12, -81, -96,
	-98, -100, -99, -40, -11, -95, -72, -73, -83, -89,
	-92, -93, -94, -107, -102, -104, -146, -108, -109, 580,
	-78, -79, -80, -30, -29, -28, -27, -129, -134, 586,
	435, 13, 484, -13, -14, -486, -15, 254, -298, -299,
	-300, -302, -534, -41, -42, -43, -51, -52, -53, -54,
	-55, -65, -66, -67, -44, -45, -46, -49, -47, -58,
	-57, -59, -60, -61, -62, -63, -64, -48, -132, -133,
	-68, -50, -70, -69, -75, -71, -76, -131, -136, 229,
	-74, 75, -84, -85, -86, -87, -88, -90, -91, 361,
	367, 424, 579, 60, -147, -149, 590, 591, 157, 158,
	160, 161, -31, -32, -33, -34, -35, -36, -38, -37,
	-39, 225, 15, 520, -16, -19, -17, -20, -18, -25,
	-26, -24, -21, -23, -130, -22, -135, 249, 248, 37,
	315, 316, 317, 365, 247, 226, 14, 30, 41, 341,
	-148, 81, 227, -150, 12, 594, -6, -3, -2, -116,
	-120, -124, -127, -128, -125, -126, -4, -103, 115, 239,
	581, -295, 357, 582, 584, 583, 84, 92, -288, -290,
	361, 367, 579, 591, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 487, 566, 567, 568, 569, 515, 339, 340, 517,
	266, 290, 392, 296, 303, 157, 176, 170, 198, 190,
	165, 270, 308, 271, 91, 160, 470, 105, 447, 421,
	163, 285, 287, 289, 292, 291, 293, 295, 272, 342,
	186, 181, 284, 268, 179, 273, 39, 274, 203, 275,
	276, 522, 443, 338, 449, 300, 419, 180, 444, 288,
	446, 205, 209, 461, 462, 174, 175, 451, 464, 202,
	246, 42, 519, 258, 465, 207, 201, 197, 473, 304,
	302, 200, 173, 196, 269, 64, 211, 210, 212, 415,
	416, 417, 418, 277, 278, 355, 460, 193, 182, 343,
	166, 22, 468, 253, 448, 368, 279, 297, 305, 206,
	208, 260, 265, 521, 423, 264, 301, 466, 178, 257,
	286, 252, 469, 167, 370, 280, 161, 294, 463, 472,
	63, 383, 172, 164, 243, 158, 262, 267, 281, 282,
	283, 513, 307, 306, 298, 194, 259, 199, 184, 171,
	195, 159, 261, 471, 384, 577, 341, 402, 192, 189,
	263, 236, 467, 450, 162, 406, 385, 187, 309, 573,
	574, 575, 356, 337, 310, 311, 185, 250, 441, 442,
	314, 412, 330, 386, 422, 393, 387, 218, 318, 453,
	455, 204, 576, 319, 320, 321, 445, 322, 323, 324,
	325, 360, 55, 57, 93, 95, 592, -373, -371, -295,
	579, 367, 361, 341, 591, -189, -295, 593, -156, 38,
	-202, -295, -156, -74, -14, -13, -148, -149, -202, 233,
	-303, 23, 419, -82, 420, 229, 81, -295, -9, -94,
	-8, -101, -72, -146, 424, -301, -295, 315, 315, -301,
	233, -295, 264, 400, -423, 239, -377, -350, 265, -376,
	-352, -379, -353, 31, 225, 227, 226, 261, 15, 365,
	235, 13, 12, 366, 247, 24, 25, 27, 14, 367,
	369, 28, 370, 373, 374, 375, 41, 378, 379, 254,
	84, 92, 87, 272, -188, -295, -327, -321, 112, 255,
	-323, -316, -317, -319, -465, -459, -314, 81, 139, 140,
	147, 113, -318, -407, 35, 115, 529, 485, -271, -272,
	-273, -274, -275, -295, -460, -458, 87, 96, 99, 102,
	103, 101, 100, 151, 183, 98, 88, 152, -149, 84,
	-481, 538, -289, 559, 566, 567, 568, 569, 558, 60,
	-430, -438, 232, -436, 150, 188, 250, 184, 13, 145,
	412, 185, 535, 555, 487, 539, 562, 531, 532, 533,
	526, 527, 528, 530, 540, 542, 554, -439, 550, 560,
	561, 548, 563, 564, 565, 86, 85, 553, 552, 541,
	536, 537, 543, 525, 534, 544, 545, 551, 556, 557,
	349, 105, 350, 351, 477, 342, 352, 239, 419, 69,
	353, 354, 355, 356, 357, 484, 358, 70, 359, 348,
	254, 402, 360, 187, 204, 489, 488, 490, 481, 478,
	476, 479, 480, 482, 483, 546, 547, 549, -110, -111,
	571, -165, -166, -264, 11, 6, 7, 8, 9, -523,
	421, 521, 87, 162, 159, -364, 162, 111, 167, 166,
	-364, 318, 260, 362, -139, 236, 339, 402, 322, 93,
	264, -344, -342, -341, -425, 312, 308, 234, -140, 244,
	243, 106, 477, 232, 108, 376, 303, 55, 57, -497,
	-498, 222, 223, 224, -488, 510, -487, -295, 351, 95,
	26, 233, 362, 260, 455, 453, 454, 456, 457, 458,
	459, -56, -440, -422, 450, 449, -307, 442, 448, 440,
	452, 443, 340, 324, 323, 225, 588, 511, -285, 386,
	422, 474, 475, 363, 423, 461, 463, 444, 105, 191,
	188, 236, 233, 339, 477, 402, 93, 322, -497, 159,
	461, 463, 264, 400, 40, -370, 412, -369, -371, 462,
	473, 85, 86, 460, -285, 105, 441, 441, -166, -264,
	-165, -147, -149, -104, -486, 234, 339, 402, 264, 235,
	233, 236, 477, 232, 315, 362, 260, 322, 93, -424,
	-494, 31, -431, 219, 220, 221, 32, 33, -1, 119,
	594, -321, -321, -6, 597, -6, -321, -295, -295, 154,
	-208, -212, -209, -211, -210, -214, -213, 188, 189, 150,
	192, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 30, 204, 250, 184, 185, 186, 187, 205, 170,
	190, 518, 213, 171, 214, 172, 215, 173, 216, 174,
	175, 217, 176, 179, 180, 181, 182, 178, 153, 81,
	153, 87, -172, 256, -202, 153, -172, -166, -165, -166,
	-202, -276, -295, 421, 122, -82, -82, 420, -489, -490,
	-491, -493, 229, 420, 419, 153, 272, 16, -301, -301,
	79, -202, -352, 264, -377, -350, 35, 78, 154, 237,
	154, 78, 81, 363, 339, 402, 364, 477, 233, 376,
	236, 264, 377, 339, 402, 233, 236, 477, 264, 339,
	233, 236, 402, 264, 377, 440, 441, 236, 26, 368,
	371, 372, 441, -444, 473, 154, 111, 108, 109, 110,
	-321, 129, -334, 122, 123, 124, 125, 126, 127, 128,
	136, 135, 146, 139, 140, 141, 142, 143, 144, 145,
	137, 138, 132, 112, 130, 134, 131, 114, -149, -321,
	-327, 60, -319, -319, -319, -319, -407, -325, -321, 81,
	81, 153, 100, 87, -321, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, -437, 81, 81,
	-331, -332, 81, 81, -314, -276, 81, 87, 87, 81,
	81, 81, 87, -332, -332, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, -166, 154, 81, -112,
	38, -168, 21, -150, -149, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 96, 592, 218, 466, 520, 165,
	166, 167, -187, -295, -189, -180, -295, 236, -140, 108,
	-339, 239, -339, -339, -339, -339, -339, 235, -339, 514,
	513, 233, 233, 233, -339, 484, 122, 122, 58, -499,
	169, 154, -488, -171, 81, -306, 130, 134, -306, 23,
	262, 262, 262, -306, 302, -535, -536, 16, 132, -304,
	-536, -304, -304, -306, -537, 235, 451, 42, 263, 262,
	-167, -168, -167, 445, 441, -394, 446, 447, -308, -536,
	-307, -306, -306, -307, -306, -306, -306, 233, 236, 477,
	322, 589, -535, -535, 30, 30, -423, -202, -423, 511,
	-286, -295, -423, -423, -423, -500, 238, -530, -529, 464,
	-532, 466, 159, -371, 159, -371, -352, 264, 264, 154,
	122, 23, -372, 122, 133, -371, -371, -372, -372, -225,
	40, -294, 150, -295, 87, -225, 40, -527, -526, -202,
	-167, -150, -149, 82, 82, 82, -423, -423, -423, -423,
	-423, -425, -423, -423, -423, -301, -180, -189, 239, -423,
	-423, -151, -152, 141, -321, -295, -151, -3, -118, -117,
	116, 117, 119, 582, 357, 581, 585, 579, -371, 40,
	-418, 384, 383, -412, -414, 81, -413, 81, -413, -413,
	-413, 81, 81, -415, 81, -415, -415, -412, -416, 81,
	-416, -417, 81, -417, -416, -295, -326, -327, -295, 38,
	-433, 60, -146, 81, 30, 81, -295, -434, 60, -146,
	81, 30, -167, -112, -168, 153, 96, 87, -82, 82,
	154, -492, 102, 103, -495, 202, 194, -295, -97, 87,
	-7, -8, -9, -10, -40, -72, -146, -461, -459, 81,
	31, 411, 78, 16, -378, 233, 477, 362, 260, 236,
	339, -376, -359, -356, -354, -294, -352, -355, -354, -381,
	-276, 441, -113, 425, 314, -321, -321, -321, -321, -321,
	101, 112, 337, 102, 103, -316, -335, 31, 310, 311,
	-317, -317, -317, -317, -317, -317, -317, -317, -317, -317,
	-317, -317, -324, -333, -407, 81, 132, 130, 134, 131,
	114, -319, -319, -317, -317, 82, 154, -485, -484, 116,
	-321, -321, -295, -482, -483, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 353, 348, 354, 352,
	342, 360, 355, 356, 187, 508, 509, 502, 503, 504,
	505, 506, 507, -326, -326, -321, -482, -326, -270, 32,
	31, -327, -327, -327, 82, -321, -496, 335, 334, 336,
	-169, -295, -326, 82, 82, 82, 96, -327, -327, -326,
	-317, -326, -483, -270, -270, -270, 141, -327, -327, -270,
	-270, -270, -270, 141, -270, -270, -270, -270, -270, -270,
	-270, -270, 82, 82, 82, -167, -111, -442, -441, -321,
	40, 572, -112, -321, -164, -163, -321, -524, 87, 87,
	595, 467, 468, 163, 166, 165, 34, 81, 81, 153,
	-339, 484, -202, 112, -502, -295, -360, -357, -354, -295,
	-295, -350, -295, -295, -339, 514, -339, -339, -339, -202,
	-236, 52, 53, 54, -354, -141, 55, 56, -500, -487,
	34, -170, -295, -260, 17, -319, -319, -354, 264, -535,
	-306, -306, -287, -286, -308, -303, -308, -308, -260, -536,
	-306, -306, -308, -304, -260, -295, 441, -260, -260, -394,
	-305, -295, -305, -339, -286, -287, -287, -202, -247, -248,
	230, 346, 347, 228, 226, 11, 227, -256, 303, -340,
	485, -231, -232, 76, 41, -234, 388, 381, 266, 270,
	91, 271, 421, 272, 235, 274, 275, 276, 291, 293,
	246, 277, 278, 279, 412, 280, 158, 292, 281, 282,
	283, 364, -226, 6, 325, 40, 50, 51, 434, 433,
	523, 520, 267, -502, -502, 30, 30, -360, -295, -295,
	-159, -154, -158, -155, -160, -263, -265, -157, 81, -202,
	-149, -295, 154, 465, 467, 468, -530, -372, -530, -372,
	31, 411, -375, 411, 31, -350, -369, 461, 463, -365,
	87, 412, -355, -374, 78, 150, -441, -372, -372, -374,
	-374, 149, 154, -528, 466, 467, 222, -112, -204, -202,
	-502, -359, -350, -295, -423, -204, -295, -295, 81, 35,
	-295, -295, -259, 154, -258, 16, -296, -295, 34, 87,
	153, -259, -119, -117, 118, -321, -6, 581, -321, -6,
	-6, -321, -6, -321, -421, 385, 96, 96, -278, 87,
	-278, 96, 96, 96, 82, 87, -363, 78, -435, -328,
	-480, 571, -174, 82, -169, -478, -479, -169, -173, -295,
	-435, -174, 82, -478, -112, -112, -295, 23, -82, -490,
	153, 154, -170, -378, -358, -355, -380, 141, -295, -366,
	154, 520, 598, 85, 237, -516, -515, 403, 82, 154,
	-445, 238, 484, 87, 595, 218, 101, 337, 102, 103,
	-407, -327, -324, -319, -319, -317, -317, -322, 251, -322,
	111, -321, -320, -484, 118, -321, 34, 154, 79, 153,
	82, 82, 16, 16, 82, -321, 82, 82, 82, 82,
	16, 16, -321, 82, 153, 82, 82, 82, 82, 79,
	82, 154, 82, 154, -327, -321, -327, 82, 82, 82,
	-321, -321, -321, -327, 82, -321, -321, -321, -321, -321,
	-321, -321, -321, -388, 436, -388, -388, 154, 82, 87,
	154, 22, 154, -161, 36, 37, -282, -281, 87, 164,
	167, 167, 166, -188, -190, -191, -192, -193, -194, 132,
	155, 156, -181, -182, -183, -184, -208, -276, 189, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 250, 184, 185, 186, 187, 205, 170, 190, 171,
	172, 173, 174, 175, 176, 179, 180, 181, 182, 178,
	-295, -202, -171, 35, -505, 389, -517, 154, 40, -515,
	477, -137, 314, -343, 79, -144, 16, -202, -339, -202,
	-202, -202, -215, 34, 16, -153, -203, -295, 81, 82,
	154, -321, -351, 79, -295, -287, -260, -260, -202, -295,
	-260, -260, -306, -308, -308, -304, 153, -286, -171, 154,
	-201, -292, -198, -200, 241, -311, -199, 244, -474, 242,
	240, 106, 245, 299, 107, 235, -292, -292, 241, -235,
	237, 34, -292, -250, 235, 299, 242, 20, -249, 235,
	107, -295, 241, 245, 240, -291, 122, -285, 149, 237,
	42, 364, -291, 524, -291, -291, -291, -291, -291, -291,
	-291, 273, 273, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, 159, -291, -291, -291, -291, -291,
	-291, 81, 268, 269, -506, 389, 30, 345, 345, -517,
	30, -145, 339, 30, -266, -267, -268, -269, 67, 71,
	73, 68, 69, 70, 74, 30, 154, -293, -297, 34,
	-295, 87, -293, -149, -154, -159, -293, 81, -529, -531,
	469, 466, 472, -374, -374, 237, 81, 122, -374, -374,
	40, -294, -526, 473, 467, -179, 23, 154, 78, -204,
	-181, -189, -260, -152, -154, -295, 87, -295, 141, -260,
	119, -6, 117, -123, -122, -121, 120, 579, 585, 119,
	119, 119, 82, 82, 82, 154, 82, 82, 82, 154,
	82, 154, -448, 446, 39, 154, 81, 82, 154, 60,
	154, 122, 82, 154, 82, 60, -179, 153, 421, -295,
	-459, 82, -380, 154, 237, 153, 153, -356, 367, -294,
	-358, 20, 520, -276, 38, -282, 595, 82, -322, -322,
	111, -319, -316, 82, 119, -321, 117, -206, -208, 383,
	384, -207, -213, 150, 188, 250, 187, 186, 184, 383,
	384, -225, -295, -321, -321, 82, -321, -321, 16, -295,
	-225, -317, -321, -166, 82, 82, -387, -388, -387, -387,
	82, 82, 82, 82, -387, 82, 82, 82, 82, 82,
	82, 82, 82, 81, -441, -448, -321, -321, -163, -162,
	43, 596, 154, 122, 167, 375, 82, 154, -276, 82,
	154, -208, -171, 34, -508, 448, 391, 401, -291, -313,
	-312, 341, 41, -428, 412, 397, 398, -357, 264, -295,
	-514, 94, 122, 78, 329, 330, 331, 332, -337, -338,
	-336, -340, -502, 81, -223, 520, -202, 81, 81, 81,
	-408, 319, -208, -202, -153, -295, 16, 154, -501, 153,
	-1, -295, -350, -306, -260, -536, -260, -306, -306, -308,
	-295, 34, -248, -205, -276, -199, -473, -474, -339, -295,
	107, -473, 107, 81, -205, -276, -276, -251, -305, -276,
	-295, -295, -295, -254, -253, -276, -295, -295, -295, 107,
	107, -230, 40, 47, 48, 49, -291, -291, 191, -233,
	40, 411, 413, 414, 96, 96, 96, 96, 87, 87,
	87, -291, -291, 96, 87, -297, 87, -475, 166, 44,
	45, 96, 96, 96, 96, 40, 87, -237, 40, 284,
	288, 285, 286, 287, 87, 96, 40, 96, 40, 96,
	40, -295, 81, -476, -477, 87, -508, -291, 345, -371,
	122, -313, -513, 314, -138, 91, 31, -175, 230, 227,
	-502, -362, -361, -276, -158, -158, -158, -158, 67, 67,
	67, 72, 67, 72, 67, -268, -362, -160, -171, -297,
	82, -522, -521, -520, -518, 75, 238, 76, -326, 466,
	470, 471, -358, -309, 87, -365, 14, -202, -202, -427,
	294, 295, 82, -262, 18, 153, -262, 115, -6, -119,
	-121, -321, -6, -321, 581, 357, 582, 87, 96, 96,
	-456, 431, 426, 428, 107, -328, -443, -442, 60, -146,
	-169, -435, -479, -441, -295, 60, -146, -435, -295, 96,
	16, -355, -350, 141, 141, -295, 368, -366, 87, 390,
	87, 233, 596, -282, -316, -321, 82, -216, 175, 174,
	-216, 82, -413, -413, -412, -415, -412, -216, -216, 82,
	82, 23, 82, 82, 82, -321, 82, 82, 154, -432,
	486, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -330, -329, 256, -456, 44,
	45, -281, 87, 87, 87, -192, -208, 231, -183, 40,
	34, -146, -509, 91, -503, 87, -295, -510, 91, 392,
	152, 343, 40, 393, 394, 409, 338, 96, 96, 399,
	-504, -295, -145, -512, 51, 122, 87, -202, -336, -285,
	149, 275, 322, -195, -196, -197, -205, -198, -200, 34,
	81, 81, -195, -195, -195, -409, 321, 20, 96, 140,
	-172, 79, 153, -154, -203, -295, 141, 82, -260, -295,
	-260, -260, -306, -146, -252, 44, 46, -208, -471, -295,
	-469, -471, -295, -469, -469, -339, -321, -252, -205, 237,
	30, 227, -255, 327, 328, -367, 300, 112, -367, 154,
	-161, -295, -225, -225, 30, 87, 87, -204, 82, 154,
	122, -509, -503, 122, -372, 87, -510, -514, 122, 87,
	154, -175, -175, -260, 154, 122, -177, -176, 78, 79,
	-178, 78, -176, 67, 67, -260, -520, -519, 23, -474,
	-474, -474, 82, 82, -261, 19, 20, 141, -261, 119,
	117, 119, 119, -295, 82, 82, -419, 573, -452, -454,
	426, 20, 20, 14, 82, -435, -435, -350, -366, 412,
	-202, 596, -321, 82, -321, 82, 87, -166, 20, -419,
	-185, -208, -314, -146, -142, 520, 87, -507, 403, 87,
	87, 96, 40, 96, 152, 395, -429, -138, -511, 91,
	122, 595, 81, -291, -291, -291, -295, 82, 154, -146,
	-224, -257, -295, -195, 82, 82, 82, -410, 255, 96,
	140, 96, 140, 96, -293, -154, -295, -260, -501, 153,
	-260, -260, -276, -220, -219, -217, 101, 112, 40, 381,
	-218, 91, 149, 289, 292, 291, 267, 290, -246, -310,
	78, 387, 327, 328, -340, 573, 515, 240, 106, 107,
	369, -311, 81, 81, 79, 309, 81, 81, -471, 82,
	-252, -276, 40, -255, 40, 300, -253, 149, -225, 82,
	-477, 87, -507, 87, -374, -512, 87, -502, -166, -361,
	-441, -321, 81, -321, 81, 67, 11, 18, -321, -327,
	239, -6, 582, 357, -239, 574, 87, 20, 87, -450,
	87, -362, -115, -446, -394, 82, 82, -387, -390, -389,
	-393, 432, 301, 439, -327, -239, 519, -142, -143, 59,
	473, 20, 520, 342, 40, 96, 40, 396, 87, 102,
	103, -283, -284, 87, -345, -347, -276, 81, -225, -227,
	-294, 150, 87, -223, -197, 82, 154, -291, 82, -221,
	-222, -256, -340, -114, -113, -221, -411, 158, 96, 140,
	96, 96, -260, -260, -217, 101, -317, 87, -227, -228,
	40, 288, 284, 122, 122, -229, 40, 268, 269, -238,
	81, 299, 14, 191, 81, 107, 107, -202, -345, -345,
	-472, 329, 330, 331, 333, 332, -472, -345, -345, 81,
	-368, -367, -317, -291, 149, -511, -167, -170, -470, -295,
	240, 20, 20, -295, -295, -279, 575, 96, 87, 428,
	-420, 576, -455, 431, -449, -447, 426, 427, 428, 429,
	82, -392, 114, 395, 399, -315, -318, 96, 99, 183,
	152, -279, -186, -295, 299, 87, 390, 87, 342, 596,
	154, 122, 82, 154, -412, -321, -257, -314, -223, -382,
	256, 154, -256, -285, -115, -382, -426, 166, 320, 520,
	96, 140, 96, -166, 87, 87, 96, 81, -436, 30,
	87, -346, 81, 82, 82, 82, 82, -345, -225, -291,
	82, 82, 154, 81, 20, 87, -457, 238, -453, -454,
	430, -447, 20, 428, 20, 20, -391, -392, 399, -315,
	-318, 571, 437, 437, 437, 34, 368, 412, -284, 87,
	-348, -347, -161, 82, -383, 308, 20, -256, -291, -383,
	320, 96, 140, 96, -167, 82, -321, -331, -291, 82,
	-241, -240, 516, -345, -348, 79, -348, 79, -348, 79,
	-348, 79, 82, -225, -295, 240, -280, -295, -450, -464,
	81, 96, -452, -451, -453, 20, -450, 20, -450, -450,
	111, 438, 438, 438, 87, -349, 246, 91, 520, 327,
	328, -161, 20, -384, 301, 302, -385, -398, 304, -225,
	96, 82, -295, -245, -243, -244, 78, 444, 297, 298,
	82, -472, -472, -472, -472, -246, 82, 154, -468, 30,
	82, -463, -462, -277, -458, -295, 431, 432, 87, -450,
	-391, -291, 87, 326, -276, 81, -396, 305, 81, -394,
	81, -394, 107, 330, -367, -244, 78, -243, 78, 15,
	14, -348, -348, -348, -348, -295, -467, -466, -465, 82,
	154, 153, 96, -295, -381, -386, 306, 96, -317, 81,
	-317, 81, -395, 303, 81, -242, 294, 295, 30, 166,
	-242, 154, 122, -462, -295, 82, -400, 81, 20, 82,
	-381, 82, -381, 81, 122, -317, 101, 40, 296, -466,
	40, -321, 153, -401, -399, 256, -385, 82, 82, 82,
	-381, 96, 82, -295, 82, 154, -295, -397, 307, 82,
	-399, -402, 60, 96, -406, -403, 81, -256, 258, 132,
	-406, -256, -405, -404, 306, 259, 81, 82, 154, -295,
	255, 81, -327, -404, -403, -327, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 821, 822, 823, 824, 825, 826, 0,
	0, 0, 0, 595, 596, 0, 565, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 433,
	0, 0, 0, 0, 676, -2, 56, 0, 277, 0,
	268, 268, 827, 828, 829, 830, 831, 832, 833, 834,
	835, -2, 608, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 343, 344, 345,
	339, 340, 342, 341, -2, 0, 608, 0, 0, 0,
	696, 0, 0, 713, 735, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1182, 1183, 1184, 1185,
	-2, 1673, 1651, 1816, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1817, 0, 261, 259,
	1651, 1673, 1733, 1766, 1816, 0, 840, 0, 654, 0,
	659, 1136, 654, 289, 597, 598, 696, 696, 563, 0,
	325, 0, 1664, 329, 0, 0, 0, 560, 319, 320,
	321, 322, 323, 324, 0, 0, 820, 0, 0, 315,
	0, 283, 1724, 0, 0, 0, 0, 0, 0, 153,
	946, 155, 948, 159, 166, 0, 0, 171, 172, 175,
	176, 177, 178, 179, 0, 183, 0, 185, 188, 0,
	190, 191, 0, 194, 195, 196, 0, 206, 207, 208,
	949, 950, 951, -2, 84, 838, 1585, 1475, 0, 1482,
	1483, 1494, 1505, 1262, 1263, 1264, 1265, 0, 0, 0,
	0, 0, 1272, 1273, 0, 1289, 1832, 0, 1279, 1280,
	1281, 1282, 1283, 93, 105, 106, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 0, 1535, 1536, 1537, 1448, 1249, 1182,
	0, 1841, 0, 1861, 1866, 1867, 1868, 1869, 1860, 0,
	0, 1433, 0, 1423, 0, 0, -2, -2, 0, 0,
	1791, -2, 1838, 1857, 1865, 1842, 1864, 1834, 1835, 1836,
	1829, 1830, 1831, 1833, 1843, 1845, 1856, 0, 1852, 1862,
	1863, 0, 0, 0, 0, 107, 108, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1439, -2, 1441, 1442, 1444, -2, 1446, 1447, -2, 1450,
	1451, 1452, -2, -2, 1455, 1456, 1457, 1458, 1459, 1460,
	1463, -2, -2, -2, -2, 1435, 1436, 1437, 1438, 1427,
	1428, 1429, 1430, 1431, 1432, -2, -2, -2, 696, 771,
	0, -2, 0, 0, 0, 718, 721, 724, 727, 0,
	57, 58, 0, 278, 279, 267, 269, 0, 273, 0,
	266, 0, 0, 0, 0, 978, 978, 978, 978, 978,
	978, 0, 978, 0, 0, 0, 0, 978, 868, 953,
	954, 955, 976, 977, 0, 1029, 0, 0, 0, 613,
	609, 610, 611, 612, 684, 0, 686, 689, 540, 540,
	487, 0, 0, 0, 540, 0, 501, 493, 0, 0,
	0, 540, 0, 0, 691, 691, 0, 543, 550, 540,
	540, -2, 540, 540, 540, 0, 0, 507, 508, 509,
	493, 493, 512, 513, 514, 525, 526, 551, 1609, 0,
	0, 433, 0, 433, 0, 433, 433, 433, 615, 1761,
	1671, 1738, 1724, 0, 0, 234, 1791, 239, 0, 1672,
	1687, 0, 0, 1705, 0, -2, 0, 305, 691, 0,
	697, 0, 696, 0, 0, 433, 433, 433, 433, 433,
	1028, 433, 433, 433, 0, 0, 0, 433, 433, 0,
	0, 736, 737, 732, 733, 734, 738, 739, 5, 6,
	19, 0, 0, 0, 0, 0, 0, 63, 62, 0,
	1586, 1604, 1540, 1541, 1542, 1591, 1544, 1595, 1595, 1595,
	1595, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	0, 0, 1584, 1564, 1593, 1593, 1593, 1591, 1588, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1598, 1598, 1601, 1601, 1598, 0, 1473,
	0, 0, 0, 0, 658, 0, 0, 691, -2, 0,
	564, 326, 1186, 0, 0, 330, 331, 0, 0, 346,
	0, 349, 334, 335, 336, 0, 133, 0, 317, 318,
	0, 0, 285, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 163, 160, 167, 170, 180, 187, 0,
	199, 201, 204, 161, 168, 173, 174, 181, 202, 162,
	164, 165, 169, 203, 205, 182, 186, 200, 184, 189,
	192, 193, 198, 0, 134, 0, 0, 0, 0, 0,
	1481, 0, 0, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1475,
	0, 0, 1268, 1269, 1270, 1271, 1274, 0, 1290, 0,
	0, 0, 1534, 1538, 0, 1473, 1473, 0, 1473, 1469,
	0, 0, 0, 0, 0, 0, 1473, 1409, 0, 0,
	1411, 1424, 0, 0, 1413, 1414, 0, 1417, 1418, 1473,
	0, 1473, 1422, 1405, 1406, 0, 1469, 1469, 1469, 0,
	0, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
	1469, 1469, 1469, 0, 0, 0, 691, 0, 0, 679,
	0, 660, 0, 715, 717, 0, 719, 720, 722, 723,
	725, 726, 728, 729, 59, 0, 0, 0, 0, 271,
	0, 276, 0, 837, 0, 0, 853, 978, 869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 978,
	0, 978, 978, 978, 0, -2, 0, 0, 0, 615,
	614, 0, 685, 0, 0, 744, 0, 0, 486, 0,
	493, 540, 540, 499, 500, 495, 494, 546, 547, 543,
	0, 543, 543, 744, 0, 519, 520, 521, 540, 540,
	527, 692, 528, 529, 543, 0, 548, 549, 744, 0,
	0, 744, 744, 0, 537, 538, 539, 0, 0, 978,
	0, 556, 495, 495, 1610, 1611, 0, 987, 0, 0,
	0, 559, 0, 0, 0, 0, 616, 214, 217, 0,
	220, 0, 1761, 0, 1761, 0, 227, 0, 0, 0,
	0, 0, 0, 257, 258, 0, 0, 0, 0, 248,
	251, 1130, 1131, 943, 944, 252, 253, 297, 298, 0,
	660, 714, 716, 710, 711, 712, 0, 0, 0, 0,
	0, 433, 0, 0, 0, 591, 0, 593, 0, 0,
	0, 752, 746, 748, 815, 93, 752, 8, 80, 77,
	0, 19, 0, 0, 19, 19, 0, 19, 262, 0,
	1607, 1605, 1606, 1543, 1592, 0, 1569, 0, 1570, 1571,
	1572, 0, 0, 1565, 0, 1566, 1567, 1568, 1559, 0,
	1560, 1561, 0, 1562, 1563, 260, 0, 1474, 841, 0,
	633, 646, 628, 0, 635, 0, 1137, 617, 646, 619,
	0, 635, 660, 682, 660, 0, 327, 0, 332, 0,
	0, 348, 350, 351, 352, 337, 338, 561, 313, 314,
	306, 307, 308, 309, 310, 311, 312, 316, 103, 0,
	286, 287, 0, 0, 0, 147, 148, 149, 150, 151,
	152, 154, 138, 582, 584, 935, 947, 0, 938, 0,
	157, 197, 130, 0, 0, 1476, 1477, 1478, 1479, 1480,
	1484, 0, 1486, 1488, 1490, 1492, 0, 1510, -2, -2,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1495, 1508, 1509, 0, 0, 0, 0, 0,
	0, 1506, 1506, 1501, 0, 1266, 0, 1287, 1291, 0,
	0, 0, 94, 1468, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 0, 0, 1475, 0, 0, 0, 1470,
	1471, 0, 0, 0, 1364, 0, 0, 1370, 1371, 1372,
	0, 641, 0, 1434, 1410, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 770, 772, 0, 650, 652,
	653, 0, 680, 693, 698, 699, 702, 55, 60, 53,
	1003, 280, 281, 0, 0, 275, 0, -2, 855, 0,
	0, 870, 689, 0, 0, 884, 431, 929, 0, 0,
	0, 945, 968, 974, 0, 978, 0, 0, 0, 1007,
	871, 876, 877, 878, 872, 873, 879, 880, 0, 687,
	0, 0, 784, 485, 0, 541, 542, 490, 1724, 495,
	744, 744, 502, 496, 503, 545, 504, 505, 506, 0,
	744, 744, 540, 543, 530, 544, 543, 533, 534, 0,
	552, 557, 553, 0, 555, 510, 511, 689, 362, 363,
	404, 404, 404, 387, 404, 0, 0, 375, 1612, 0,
	0, 0, 0, 384, 1612, 0, 1612, 1612, 1612, 1612,
	1612, 1612, 1612, 0, 0, 1612, 1612, 1612, 1612, 1612,
	1612, 1612, 1612, 1612, 1612, 1612, 0, 1612, 1612, 1612,
	1612, 1612, 1116, 1612, 0, 988, 394, 395, 396, 397,
	402, 403, 0, 428, 0, 0, 0, 431, 0, 918,
	757, 0, 758, 759, 755, 786, 810, 810, 0, 810,
	790, 1136, 0, 0, 225, 226, 215, 0, 216, 0,
	228, 229, 0, 231, 232, 233, 240, 1671, 1738, 235,
	237, 0, 0, 241, 254, 255, 256, 0, 0, 246,
	247, 0, 0, 300, 301, 303, 0, 708, 579, 1134,
	580, 581, 585, 0, 0, 588, 589, 590, 855, 0,
	923, 924, 744, 0, 753, 0, 749, 816, 0, 818,
	0, 744, 0, 78, 19, 0, 71, 68, 0, 0,
	0, 0, 0, 1587, 1539, 1608, 0, 0, 0, 1589,
	0, 0, 0, 0, 61, 662, 624, 0, 627, 643,
	0, 647, 0, 0, 639, 632, 636, 0, 0, 656,
	618, 0, 0, 623, 708, 683, 1187, 0, 333, 347,
	0, 0, 0, 0, 141, 932, 0, 142, 146, 136,
	0, 0, 0, 937, 0, 934, 939, 0, 156, 0,
	0, 131, 132, 998, 1003, 0, 1485, 1487, 1489, 1491,
	1493, 0, 1496, 1506, 1506, 1502, 0, 1497, 0, 1499,
	0, 1476, 0, 1292, 0, 0, 0, 0, 0, 0,
	1354, 1355, 0, 0, 1359, 0, 1361, 1362, 1363, 1365,
	0, 0, 0, 1369, 0, 1408, 1426, 1412, 1415, 0,
	1419, 0, 1421, 0, 696, 0, 0, 1329, 1329, 1329,
	0, 0, 0, 0, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 0, 1285, 1286, 0, 773, 662,
	0, 0, 0, 705, 703, 704, 0, 1001, 0, 282,
	270, 272, 0, 0, 0, 843, 844, 846, 0, 849,
	850, 851, 0, 856, 857, 859, 860, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1656,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	854, 689, 0, 979, 891, 1612, 435, 0, 0, 931,
	0, 907, 0, 0, 0, -2, 0, 1074, 0, 0,
	0, 0, 1009, 0, 0, 0, 602, 606, 23, 690,
	0, 745, 488, 0, 489, 540, 497, 498, 744, 1136,
	522, 523, 744, 540, 540, 543, 0, 554, 0, 987,
	365, 0, 1145, 1146, 405, 0, 1152, 1161, 978, 1219,
	0, 1161, 0, 0, 1163, 1164, 0, 0, 0, 0,
	388, 389, 0, 374, 0, 0, 0, 0, 373, 0,
	0, 415, 0, 0, 0, 0, 1613, 1612, 1612, 0,
	382, 383, 0, 386, 0, 0, 0, 0, 0, 0,
	0, 1612, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 0, 0, 0,
	0, 0, 1122, 1123, 891, 1612, 0, 0, 0, 435,
	905, 914, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 776, 0, 0, 0, 0, 0, 689, 811, 0,
	813, 814, 788, -2, 0, 757, 793, 1473, 218, 219,
	0, 0, 224, 242, 244, 0, 0, 0, 243, 245,
	249, 250, 299, 302, 304, 678, 0, 0, 0, 1030,
	0, 594, 742, 747, 754, 817, 819, 94, 750, 742,
	0, 81, 19, 80, 72, 73, 0, 19, 0, 0,
	0, 0, 1597, 1596, 1582, 0, 1583, 1594, 1599, 0,
	1602, 0, 666, 0, 0, 646, 648, 0, 0, 646,
	0, 0, 655, 0, 0, 646, 681, 0, 0, 562,
	104, 353, 0, 0, 0, 0, 0, 583, 0, 936,
	138, 0, 0, 158, 0, 0, 1003, 1472, 1498, 1500,
	0, 1507, 1503, 1267, 1275, 1288, 0, 0, 1294, 1306,
	1306, 0, 1297, 1595, 1595, 1300, 1591, 1593, 1591, 1306,
	1306, 0, 95, 0, 0, 1360, 0, 0, 0, 642,
	0, 0, 0, 1327, 1329, 1329, 1335, 1330, 1336, 1337,
	1329, 1329, 1329, 1329, 1342, 1329, 1329, 1329, 1329, 1329,
	1329, 1329, 1329, 1325, 651, 666, 694, 695, 700, 701,
	0, 54, 1003, 0, 274, 0, 0, 848, 0, 0,
	0, 861, 0, 0, 895, 892, 893, 894, 0, 926,
	436, 437, 438, 439, 0, 0, 0, 930, 0, 918,
	900, 0, 0, 0, 969, 970, 971, 972, 973, -2,
	982, 0, 0, 1138, 0, 0, 0, 1138, 1138, 1138,
	1017, 0, 1008, 654, 0, -2, 0, 0, 604, 0,
	0, 785, 491, 744, 515, 0, 531, 744, 744, 540,
	558, 0, 364, 406, 0, 1151, 1176, 1162, 1176, 1220,
	1176, 1176, 978, 0, 406, 0, 0, 376, 412, 0,
	0, 0, 0, 372, 409, 702, 413, 414, 416, 0,
	418, 378, 390, 391, 392, 393, 0, 0, 0, 385,
	398, 399, 400, 401, 1084, 1085, 1086, 1089, 1090, 1091,
	1092, 0, 0, 1095, 1096, 1097, 1098, 1099, 1173, 1174,
	1175, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1124, 1125,
	1126, 1127, 1128, 1129, 1108, 1109, 1110, 1111, 1112, 1113,
	1114, 1115, 0, 0, 1119, 0, 895, 0, 0, 0,
	0, 926, 907, 0, 917, 0, 919, 920, 0, 0,
	625, 744, 292, 0, 780, 774, 0, 763, 778, 779,
	766, 0, 768, 0, 764, 765, 744, 756, 787, 812,
	789, 792, 794, 795, 801, 0, 0, 0, 0, 221,
	222, 223, 230, 0, 455, 236, 709, 1135, 586, 587,
	1031, 1032, 592, 740, 0, 0, 740, 76, 79, 0,
	74, 0, 0, 0, 0, 66, 64, 1590, 0, 0,
	668, 118, 0, 0, 0, 644, 0, 649, 646, 631,
	640, 630, 637, 638, 657, 646, 622, 621, 1188, 328,
	0, 933, 138, 143, 144, 145, 139, 137, 940, 0,
	942, 0, 999, 0, 1504, 1293, 1276, 1295, 1307, 1308,
	1296, 1277, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1278,
	1356, 0, 1358, 1366, 1367, 0, 1416, 1420, 0, 0,
	0, 1333, 1334, 1338, 1339, 1340, 1341, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 696, 1326, 0, 668, 706,
	707, 1002, 1004, 836, 839, 845, 847, 0, 858, 0,
	0, 874, 867, 0, 0, 886, 887, 897, 0, 0,
	0, 441, 442, 0, 0, 0, 454, 450, 451, 452,
	432, 925, 914, 903, 0, 0, 913, 0, 983, 1612,
	1612, 1612, 0, 0, 1139, 1140, 1142, 1143, 1144, 0,
	0, 1138, 0, 0, 0, 1020, 0, 0, 1011, 0,
	810, 0, 0, 744, 603, 606, 607, 688, 492, 744,
	535, 532, 744, 361, 377, 407, 0, -2, 0, 1177,
	0, 1165, 1177, 0, 0, 1176, 0, 366, 406, 0,
	0, 0, 419, 422, 423, 420, 1215, 0, 421, 0,
	411, 417, 1087, 1088, 0, 1093, 1094, 0, 1118, 0,
	0, 424, 0, 0, 0, 425, 430, 900, 0, 915,
	0, 921, 922, 696, 0, 0, 760, 781, 0, 0,
	761, 0, 762, 767, 769, 291, 796, 0, 0, 798,
	799, 800, 791, 238, 730, 0, 0, 751, 731, 0,
	19, 0, 0, 69, 1600, 1603, 670, 0, 667, 119,
	0, 0, 0, 0, 645, 629, 620, 140, 135, 941,
	121, 1000, 0, 1368, 0, 1329, 1328, 1322, 0, 670,
	0, 864, 862, 874, 866, 881, 896, 885, 0, 927,
	928, 0, 443, 444, 0, 447, 453, 898, 899, 0,
	0, 911, 0, 0, 0, 0, 975, 1074, 0, 991,
	0, 1076, 1612, 0, -2, 0, -2, 1023, 0, 1018,
	0, 1010, 0, 1013, 744, 744, -2, 600, 605, 0,
	516, 536, 408, 1178, -2, 1191, 1193, 0, 988, 1196,
	1197, 0, 0, 0, 0, 0, 0, 1241, 1205, 0,
	0, 1209, 1210, 1211, 0, 0, 1214, 0, 1522, 1523,
	0, 1218, 0, 0, 0, 0, 0, 0, 0, 1159,
	367, 368, 0, 370, 371, 1216, 410, 1612, 380, 1117,
	1120, 1121, 429, 426, 427, 903, 906, 626, 691, 293,
	294, 782, 0, 775, 805, 802, 0, 0, 741, 743,
	70, 75, 0, 0, 672, 0, 669, 0, 663, 665,
	129, 634, 91, 112, 0, 1357, 1407, 1332, 0, 1323,
	0, 1317, 1318, 1319, 1324, 672, 0, 865, 0, 882,
	883, 0, 0, 440, 445, 0, 448, 449, 904, 901,
	902, 0, 909, 0, 0, 964, 1591, 0, 984, 985,
	1132, 1133, 986, 989, 1141, 1075, 0, 0, 1074, 1033,
	-2, 1081, 0, 995, 121, 1033, 1014, 0, 1021, 0,
	1019, 1012, 696, 601, 1192, 1194, 1195, 1198, 1199, 1200,
	1246, 1247, 1248, 0, 0, 1203, 1243, 1244, 1245, 1204,
	0, 0, 0, 0, 0, 1520, 1521, 1239, 0, 0,
	1166, 1168, 1169, 1170, 1171, 1172, 1167, 0, 0, 0,
	1158, 1160, 369, 0, 1612, 916, 290, 0, 0, 806,
	808, 803, 804, 65, 67, 82, 0, 671, 120, 0,
	83, 0, 109, 0, 122, 123, 0, 0, 0, 0,
	1331, 1320, 0, 0, 0, 0, 0, 1524, 1525, 1526,
	0, 661, 0, 863, 0, 888, 0, 890, 446, 908,
	911, 0, 957, 0, 702, 0, 1077, 1078, 990, 1035,
	0, 987, 1083, 1612, 997, 1035, 1006, 0, 1016, 0,
	1025, 0, 1022, 691, 1201, 1202, 0, 0, 1423, 1612,
	0, 1234, 0, 957, 957, 957, 957, 0, 379, 0,
	783, 797, 0, 0, 0, 92, 96, 0, 118, 115,
	0, 124, 0, 0, 0, 0, 0, 1309, 0, 0,
	0, 1313, 1314, 1315, 1316, 0, 875, 889, 910, 912,
	956, 965, 966, 702, 994, 0, 1072, 1082, 0, 996,
	1015, 1024, 0, 1027, 599, 1242, 0, 1208, 0, 1213,
	1222, 1235, 0, 0, 1147, 0, 1149, 0, 1153, 0,
	1155, 0, 0, 381, 807, 809, 0, 674, 664, 85,
	0, 0, 113, 114, 116, 0, 125, 0, 127, 128,
	0, 1310, 1311, 1312, 852, 958, 1612, 0, 0, 962,
	963, 967, 0, 1060, 0, 0, 1066, 0, 1073, 1087,
	1026, 1206, 1212, 1221, 1223, 1224, 0, 1236, 1237, 1238,
	1240, 957, 957, 957, 957, 1157, 673, 0, 1005, 0,
	97, 0, 99, 101, 102, 1179, 110, 111, 117, 126,
	1321, 0, 960, 0, 1036, 0, 1038, 0, 0, 0,
	0, 0, 1070, 0, 1207, 1225, 0, 1226, 0, 0,
	0, 1148, 1150, 1154, 1156, 675, 86, 87, 0, 98,
	0, 0, 959, 961, 0, 1040, 0, 1061, 0, 0,
	0, 0, 0, 0, 0, 1227, 1229, 1230, 0, 0,
	1228, 0, 0, 100, 1180, 1037, 1034, 0, 1072, 1062,
	0, 1064, 0, 0, 0, 0, 1231, 1233, 1232, 88,
	89, 90, 0, 0, 1042, 0, 1058, 1063, 1065, 1067,
	0, 1071, 1069, 1181, 1041, 0, 1054, 1039, 0, 1068,
	1043, -2, 0, 1059, 1044, -2, 0, 1052, 0, 0,
	1045, 1053, 0, 1048, 0, 0, 0, 1047, 0, -2,
	1055, 0, 0, 1049, -2, 0, 1057, 1056,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 597, 594,
	123, 122, 124, 3, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 595, 135, 596, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:750
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:757
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:763
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:800
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:806
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:811
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:847
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:863
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:873
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:899
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:906
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:914
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:920
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:973
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1027
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1031
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1037
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1056
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1060
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1106
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1130
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1140
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1153
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1165
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1179
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1183
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1200
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1206
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1215
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1226
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1230
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1236
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1240
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1256
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1280
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1299
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1303
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1307
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1316
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1323
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1331
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1338
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1343
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1350
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1359
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1383
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1387
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1393
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1399
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1417
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1434
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1457
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1480
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1493
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1517
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1521
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1593
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1620
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1624
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1637
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1646
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1650
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1889
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1893
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1914
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1932
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1936
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1949
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2026
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2032
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2036
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2130
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2175
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2179
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2183
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2199
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2203
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2209
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2213
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2235
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2239
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2367
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2371
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2387
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2393
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2397
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2403
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2409
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2413
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2417
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2575
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2579
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2585
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2591
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2596
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2639
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2643
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2649
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2656
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2665
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2675
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2684
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2694
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2713
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2756
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2785
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2816
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2820
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2825
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2831
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2846
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2850
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2863
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2937
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2941
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2989
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2995
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3039
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3121
		{
			yyVAL.item = nil
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3126
		{
			yyVAL.item = nil
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3172
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3184
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3188
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3201
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3212
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3216
		{
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3221
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3261
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3345
		{
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3347
		{
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3375
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3379
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3401
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3438
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3442
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3448
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3474
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3496
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3505
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3509
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3515
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3563
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3567
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3573
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3579
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3583
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3593
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3597
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3639
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3648
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3652
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3658
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3692
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3708
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3714
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3723
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3753
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3769
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3782
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3793
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3797
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3803
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3808
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3815
		{
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3817
		{
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3820
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3829
		{
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3833
		{
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3838
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3847
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3854
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3860
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3868
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3875
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3882
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3902
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3912
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3916
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3922
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3935
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3943
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3950
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3957
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3976
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3980
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3989
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3993
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3999
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4008
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4012
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4018
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4022
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4028
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4032
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4038
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4043
		{
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4054
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4058
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4065
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4074
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4080
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4084
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4090
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4094
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4116
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4123
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4130
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4148
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4167
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4173
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4184
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4197
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4201
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4206
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4210
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4217
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4222
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4229
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4235
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4239
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4243
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4251
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4255
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4268
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4277
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4281
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4299
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4308
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4314
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4318
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4331
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4337
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4343
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4347
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4353
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4358
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4362
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4366
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4375
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4379
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4388
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4396
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4404
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4418
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4422
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4432
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4442
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4452
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4472
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4489
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4497
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4505
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4513
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4521
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4537
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4545
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4553
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4588
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4592
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4596
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4601
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4605
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4609
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4622
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4627
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4646
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4650
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4656
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4660
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4665
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4669
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4674
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4682
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4688
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4696
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4714
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4720
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4729
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4738
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4757
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4761
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4771
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4775
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4779
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4783
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4789
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4799
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4803
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4809
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4819
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4825
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4831
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4835
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4839
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4849
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4855
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4859
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4865
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4869
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4875
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4879
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4889
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4902
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4908
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4914
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4927
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4945
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4949
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4955
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4965
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4969
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4973
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4982
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4986
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4999
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5003
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5007
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5011
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5016
		{
			yyVAL.str = ""
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5020
		{
			yyVAL.str = yyDollar[1].str
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5024
		{
			yyVAL.str = yyDollar[2].str
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5030
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5040
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5044
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5048
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5052
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5058
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5093
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5103
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5109
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5115
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5125
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5130
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5136
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5147
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5153
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5159
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5164
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5168
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5183
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5195
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5200
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5213
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5217
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5229
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5243
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5255
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5264
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5275
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5287
		{
			yyVAL.str = yyDollar[1].str
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5291
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5297
		{
			yyVAL.str = "OR REPLACE"
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5301
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5305
		{
			yyVAL.str = "DEFINER = "
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5309
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5314
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5318
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5332
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5340
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5346
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5356
		{
			yyVAL.str = yyDollar[1].str
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5360
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5373
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5407
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5421
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5430
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5442
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5466
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5472
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5479
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5487
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5493
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5501
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5507
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5515
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5521
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5530
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5534
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5539
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5543
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5550
		{
			yyVAL.str = yyDollar[3].str
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5555
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5559
		{
			yyVAL.str = yyDollar[2].str
		}
	case 916:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5565
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5579
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5593
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5599
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5605
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5611
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5620
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5629
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5638
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5643
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5649
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5657
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5763
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5767
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5773
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5783
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5787
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5793
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5803
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5811
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5820
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5826
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5833
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5839
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5848
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5855
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5864
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5868
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5874
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5888
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5896
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5901
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5905
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5909
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5913
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5919
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5942
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5964
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5968
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5972
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5986
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5990
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5996
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6001
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6006
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6010
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6014
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6043
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6053
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6057
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6066
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6072
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6076
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6082
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6086
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6090
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6099
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6105
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6116
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  *yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6127
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  *yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6138
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6142
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6160
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6182
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6189
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6199
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6207
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6218
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6222
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6227
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6231
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6238
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6249
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6262
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6276
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6284
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6298
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6305
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6316
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6320
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6328
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6335
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6346
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6353
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6364
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6371
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6378
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6385
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6405
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6409
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6418
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6432
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6439
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6450
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6463
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6469
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6473
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6479
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6488
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6498
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6502
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6508
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6512
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6518
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6525
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6534
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6538
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6547
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6552
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6556
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6561
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6565
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6575
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6579
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6590
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6598
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6606
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6614
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6625
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6634
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6644
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6654
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6658
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6676
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6682
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6686
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6692
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6701
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6707
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6711
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6715
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6721
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6725
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6729
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6733
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6737
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6741
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6745
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6762
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6798
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6802
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6822
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6826
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6830
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6834
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6838
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6842
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6846
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6850
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6854
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6858
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6864
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6868
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6880
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6884
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6890
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6894
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6902
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6906
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6910
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6924
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6928
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6937
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6942
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6948
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6955
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6959
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6969
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6973
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6979
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6983
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6989
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6998
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7007
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7030
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7055
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7069
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7075
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7084
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7093
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7102
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7111
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7121
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7135
		{
			yyVAL.str = ""
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7139
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7149
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7155
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7161
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7180
		{
			yyVAL.str = ""
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7184
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7190
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7196
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7204
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7210
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7214
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7218
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7222
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7228
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7232
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7236
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7245
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7251
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7255
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7269
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7277
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7281
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7286
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7290
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7302
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7306
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7310
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7322
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7335
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7351
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7355
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7365
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7370
		{
			yyVAL.str = ""
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7374
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7380
		{
			yyVAL.str = ""
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7384
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7390
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7402
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7409
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7416
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7423
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7430
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7439
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7445
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7455
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7459
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7463
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7467
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7472
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7479
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7483
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7487
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7496
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7501
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7505
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7521
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7527
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7531
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7535
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7539
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7543
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7551
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7555
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7563
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7567
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7571
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7575
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7581
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7585
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7589
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7593
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7597
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7601
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7605
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7609
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7613
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7621
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7625
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7643
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7647
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7678
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7686
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7694
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7707
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7716
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7722
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7726
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7732
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7741
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7753
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7770
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7787
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7800
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7813
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7825
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7839
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7854
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7869
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7886
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7901
		{
		}
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7908
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7912
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7916
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7922
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7926
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7930
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7934
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7940
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7944
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7948
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7954
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7962
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7976
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7983
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7992
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7997
		{
			yyVAL.str = ","
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8001
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8013
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8039
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8050
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8060
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8070
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8080
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8098
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8108
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8118
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8148
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8158
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8168
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8178
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8188
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8198
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8208
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8218
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8245
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8253
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8261
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8269
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8279
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8287
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8296
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8304
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8312
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8320
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8339
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8349
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8372
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8394
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8430
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8442
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8454
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8480
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8487
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8499
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8507
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8517
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8527
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8535
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8546
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8555
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8564
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8572
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8582
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8590
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8604
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8614
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8633
		{
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8635
		{
		}
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8676
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8687
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8691
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8695
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8701
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8710
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8716
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8720
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8727
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8731
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8735
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8743
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8747
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8751
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8755
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8761
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8765
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8769
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8773
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8777
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8781
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8785
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8789
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8793
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8797
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8805
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8821
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8825
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8829
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8833
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8837
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8841
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8851
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8857
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8861
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8868
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8872
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8876
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8882
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8886
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8890
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8894
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8898
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8902
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8906
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8912
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8916
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8920
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8924
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8930
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8943
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8948
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8954
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8958
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8971
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8976
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8980
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8984
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8988
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8992
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8999
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9003
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9017
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9021
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9028
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9039
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9044
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9050
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9062
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9074
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9099
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9112
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9125
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9138
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9151
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9177
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9190
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9203
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9231
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9258
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9300
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9336
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9372
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9389
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9401
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9421
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9441
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9461
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9477
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9490
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9516
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9529
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9541
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9553
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9637
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9663
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9678
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9686
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9695
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9705
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9728
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9733
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9739
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9746
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9750
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9755
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9759
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9765
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9771
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9778
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9785
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9794
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9801
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9808
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9825
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9831
		{
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9833
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9843
		{
			yyVAL.str = ""
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9847
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

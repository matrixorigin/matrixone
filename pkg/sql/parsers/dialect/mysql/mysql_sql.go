// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const ELSEIF = 57442
const LOWER_THAN_EQ = 57443
const LE = 57444
const GE = 57445
const NE = 57446
const NULL_SAFE_EQUAL = 57447
const IS = 57448
const LIKE = 57449
const REGEXP = 57450
const IN = 57451
const ASSIGNMENT = 57452
const ILIKE = 57453
const SHIFT_LEFT = 57454
const SHIFT_RIGHT = 57455
const DIV = 57456
const MOD = 57457
const UNARY = 57458
const COLLATE = 57459
const BINARY = 57460
const UNDERSCORE_BINARY = 57461
const INTERVAL = 57462
const OUT = 57463
const INOUT = 57464
const BEGIN = 57465
const START = 57466
const TRANSACTION = 57467
const COMMIT = 57468
const ROLLBACK = 57469
const WORK = 57470
const CONSISTENT = 57471
const SNAPSHOT = 57472
const CHAIN = 57473
const NO = 57474
const RELEASE = 57475
const PRIORITY = 57476
const QUICK = 57477
const BIT = 57478
const TINYINT = 57479
const SMALLINT = 57480
const MEDIUMINT = 57481
const INT = 57482
const INTEGER = 57483
const BIGINT = 57484
const INTNUM = 57485
const REAL = 57486
const DOUBLE = 57487
const FLOAT_TYPE = 57488
const DECIMAL = 57489
const NUMERIC = 57490
const DECIMAL_VALUE = 57491
const TIME = 57492
const TIMESTAMP = 57493
const DATETIME = 57494
const YEAR = 57495
const CHAR = 57496
const VARCHAR = 57497
const BOOL = 57498
const CHARACTER = 57499
const VARBINARY = 57500
const NCHAR = 57501
const TEXT = 57502
const TINYTEXT = 57503
const MEDIUMTEXT = 57504
const LONGTEXT = 57505
const BLOB = 57506
const TINYBLOB = 57507
const MEDIUMBLOB = 57508
const LONGBLOB = 57509
const JSON = 57510
const ENUM = 57511
const UUID = 57512
const GEOMETRY = 57513
const POINT = 57514
const LINESTRING = 57515
const POLYGON = 57516
const GEOMETRYCOLLECTION = 57517
const MULTIPOINT = 57518
const MULTILINESTRING = 57519
const MULTIPOLYGON = 57520
const INT1 = 57521
const INT2 = 57522
const INT3 = 57523
const INT4 = 57524
const INT8 = 57525
const S3OPTION = 57526
const SQL_SMALL_RESULT = 57527
const SQL_BIG_RESULT = 57528
const SQL_BUFFER_RESULT = 57529
const LOW_PRIORITY = 57530
const HIGH_PRIORITY = 57531
const DELAYED = 57532
const CREATE = 57533
const ALTER = 57534
const DROP = 57535
const RENAME = 57536
const ANALYZE = 57537
const ADD = 57538
const RETURNS = 57539
const SCHEMA = 57540
const TABLE = 57541
const SEQUENCE = 57542
const INDEX = 57543
const VIEW = 57544
const TO = 57545
const IGNORE = 57546
const IF = 57547
const PRIMARY = 57548
const COLUMN = 57549
const CONSTRAINT = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const FOREIGN = 57553
const KEY_BLOCK_SIZE = 57554
const SHOW = 57555
const DESCRIBE = 57556
const EXPLAIN = 57557
const DATE = 57558
const ESCAPE = 57559
const REPAIR = 57560
const OPTIMIZE = 57561
const TRUNCATE = 57562
const MAXVALUE = 57563
const PARTITION = 57564
const REORGANIZE = 57565
const LESS = 57566
const THAN = 57567
const PROCEDURE = 57568
const TRIGGER = 57569
const STATUS = 57570
const VARIABLES = 57571
const ROLE = 57572
const PROXY = 57573
const AVG_ROW_LENGTH = 57574
const STORAGE = 57575
const DISK = 57576
const MEMORY = 57577
const CHECKSUM = 57578
const COMPRESSION = 57579
const DATA = 57580
const DIRECTORY = 57581
const DELAY_KEY_WRITE = 57582
const ENCRYPTION = 57583
const ENGINE = 57584
const MAX_ROWS = 57585
const MIN_ROWS = 57586
const PACK_KEYS = 57587
const ROW_FORMAT = 57588
const STATS_AUTO_RECALC = 57589
const STATS_PERSISTENT = 57590
const STATS_SAMPLE_PAGES = 57591
const DYNAMIC = 57592
const COMPRESSED = 57593
const REDUNDANT = 57594
const COMPACT = 57595
const FIXED = 57596
const COLUMN_FORMAT = 57597
const AUTO_RANDOM = 57598
const RESTRICT = 57599
const CASCADE = 57600
const ACTION = 57601
const PARTIAL = 57602
const SIMPLE = 57603
const CHECK = 57604
const ENFORCED = 57605
const RANGE = 57606
const LIST = 57607
const ALGORITHM = 57608
const LINEAR = 57609
const PARTITIONS = 57610
const SUBPARTITION = 57611
const SUBPARTITIONS = 57612
const CLUSTER = 57613
const TYPE = 57614
const ANY = 57615
const SOME = 57616
const EXTERNAL = 57617
const LOCALFILE = 57618
const URL = 57619
const PREPARE = 57620
const DEALLOCATE = 57621
const RESET = 57622
const EXTENSION = 57623
const INCREMENT = 57624
const CYCLE = 57625
const MINVALUE = 57626
const PUBLICATION = 57627
const SUBSCRIPTIONS = 57628
const PUBLICATIONS = 57629
const PROPERTIES = 57630
const PARSER = 57631
const VISIBLE = 57632
const INVISIBLE = 57633
const BTREE = 57634
const HASH = 57635
const RTREE = 57636
const BSI = 57637
const ZONEMAP = 57638
const LEADING = 57639
const BOTH = 57640
const TRAILING = 57641
const UNKNOWN = 57642
const EXPIRE = 57643
const ACCOUNT = 57644
const ACCOUNTS = 57645
const UNLOCK = 57646
const DAY = 57647
const NEVER = 57648
const PUMP = 57649
const MYSQL_COMPATBILITY_MODE = 57650
const SECOND = 57651
const ASCII = 57652
const COALESCE = 57653
const COLLATION = 57654
const HOUR = 57655
const MICROSECOND = 57656
const MINUTE = 57657
const MONTH = 57658
const QUARTER = 57659
const REPEAT = 57660
const REVERSE = 57661
const ROW_COUNT = 57662
const WEEK = 57663
const REVOKE = 57664
const FUNCTION = 57665
const PRIVILEGES = 57666
const TABLESPACE = 57667
const EXECUTE = 57668
const SUPER = 57669
const GRANT = 57670
const OPTION = 57671
const REFERENCES = 57672
const REPLICATION = 57673
const SLAVE = 57674
const CLIENT = 57675
const USAGE = 57676
const RELOAD = 57677
const FILE = 57678
const TEMPORARY = 57679
const ROUTINE = 57680
const EVENT = 57681
const SHUTDOWN = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const ENGINES = 57689
const LOW_CARDINALITY = 57690
const ADMIN_NAME = 57691
const RANDOM = 57692
const SUSPEND = 57693
const ATTRIBUTE = 57694
const HISTORY = 57695
const REUSE = 57696
const CURRENT = 57697
const OPTIONAL = 57698
const FAILED_LOGIN_ATTEMPTS = 57699
const PASSWORD_LOCK_TIME = 57700
const UNBOUNDED = 57701
const SECONDARY = 57702
const USER = 57703
const IDENTIFIED = 57704
const CIPHER = 57705
const ISSUER = 57706
const X509 = 57707
const SUBJECT = 57708
const SAN = 57709
const REQUIRE = 57710
const SSL = 57711
const NONE = 57712
const PASSWORD = 57713
const MAX_QUERIES_PER_HOUR = 57714
const MAX_UPDATES_PER_HOUR = 57715
const MAX_CONNECTIONS_PER_HOUR = 57716
const MAX_USER_CONNECTIONS = 57717
const FORMAT = 57718
const VERBOSE = 57719
const CONNECTION = 57720
const TRIGGERS = 57721
const PROFILES = 57722
const LOAD = 57723
const INFILE = 57724
const TERMINATED = 57725
const OPTIONALLY = 57726
const ENCLOSED = 57727
const ESCAPED = 57728
const STARTING = 57729
const LINES = 57730
const ROWS = 57731
const IMPORT = 57732
const MODUMP = 57733
const OVER = 57734
const PRECEDING = 57735
const FOLLOWING = 57736
const GROUPS = 57737
const DATABASES = 57738
const TABLES = 57739
const SEQUENCES = 57740
const EXTENDED = 57741
const FULL = 57742
const PROCESSLIST = 57743
const FIELDS = 57744
const COLUMNS = 57745
const OPEN = 57746
const ERRORS = 57747
const WARNINGS = 57748
const INDEXES = 57749
const SCHEMAS = 57750
const NODE = 57751
const LOCKS = 57752
const ROLES = 57753
const TABLE_NUMBER = 57754
const COLUMN_NUMBER = 57755
const TABLE_VALUES = 57756
const TABLE_SIZE = 57757
const NAMES = 57758
const GLOBAL = 57759
const SESSION = 57760
const ISOLATION = 57761
const LEVEL = 57762
const READ = 57763
const WRITE = 57764
const ONLY = 57765
const REPEATABLE = 57766
const COMMITTED = 57767
const UNCOMMITTED = 57768
const SERIALIZABLE = 57769
const LOCAL = 57770
const EVENTS = 57771
const PLUGINS = 57772
const CURRENT_TIMESTAMP = 57773
const DATABASE = 57774
const CURRENT_TIME = 57775
const LOCALTIME = 57776
const LOCALTIMESTAMP = 57777
const UTC_DATE = 57778
const UTC_TIME = 57779
const UTC_TIMESTAMP = 57780
const REPLACE = 57781
const CONVERT = 57782
const SEPARATOR = 57783
const TIMESTAMPDIFF = 57784
const CURRENT_DATE = 57785
const CURRENT_USER = 57786
const CURRENT_ROLE = 57787
const SECOND_MICROSECOND = 57788
const MINUTE_MICROSECOND = 57789
const MINUTE_SECOND = 57790
const HOUR_MICROSECOND = 57791
const HOUR_SECOND = 57792
const HOUR_MINUTE = 57793
const DAY_MICROSECOND = 57794
const DAY_SECOND = 57795
const DAY_MINUTE = 57796
const DAY_HOUR = 57797
const YEAR_MONTH = 57798
const SQL_TSI_HOUR = 57799
const SQL_TSI_DAY = 57800
const SQL_TSI_WEEK = 57801
const SQL_TSI_MONTH = 57802
const SQL_TSI_QUARTER = 57803
const SQL_TSI_YEAR = 57804
const SQL_TSI_SECOND = 57805
const SQL_TSI_MINUTE = 57806
const RECURSIVE = 57807
const CONFIG = 57808
const DRAINER = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const ADDDATE = 57817
const BIT_AND = 57818
const BIT_OR = 57819
const BIT_XOR = 57820
const CAST = 57821
const COUNT = 57822
const APPROX_COUNT_DISTINCT = 57823
const APPROX_PERCENTILE = 57824
const CURDATE = 57825
const CURTIME = 57826
const DATE_ADD = 57827
const DATE_SUB = 57828
const EXTRACT = 57829
const GROUP_CONCAT = 57830
const MAX = 57831
const MID = 57832
const MIN = 57833
const NOW = 57834
const POSITION = 57835
const SESSION_USER = 57836
const STD = 57837
const STDDEV = 57838
const MEDIAN = 57839
const STDDEV_POP = 57840
const STDDEV_SAMP = 57841
const SUBDATE = 57842
const SUBSTR = 57843
const SUBSTRING = 57844
const SUM = 57845
const SYSDATE = 57846
const SYSTEM_USER = 57847
const TRANSLATE = 57848
const TRIM = 57849
const VARIANCE = 57850
const VAR_POP = 57851
const VAR_SAMP = 57852
const AVG = 57853
const RANK = 57854
const NEXTVAL = 57855
const SETVAL = 57856
const CURRVAL = 57857
const LASTVAL = 57858
const ARROW = 57859
const ROW = 57860
const OUTFILE = 57861
const HEADER = 57862
const MAX_FILE_SIZE = 57863
const FORCE_QUOTE = 57864
const PARALLEL = 57865
const UNUSED = 57866
const BINDINGS = 57867
const DO = 57868
const DECLARE = 57869
const LOOP = 57870
const WHILE = 57871
const LEAVE = 57872
const ITERATE = 57873
const UNTIL = 57874
const CALL = 57875
const SPBEGIN = 57876
const KILL = 57877
const QUERY_RESULT = 57878

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9365

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 108,
	21, 623,
	-2, 604,
	-1, 122,
	218, 840,
	-2, 911,
	-1, 144,
	42, 445,
	218, 445,
	245, 452,
	246, 452,
	424, 445,
	-2, 478,
	-1, 180,
	555, 1570,
	-2, 365,
	-1, 497,
	294, 130,
	399, 130,
	-2, 1484,
	-1, 560,
	67, 1290,
	-2, 1624,
	-1, 561,
	67, 1308,
	-2, 1595,
	-1, 565,
	67, 1309,
	-2, 1623,
	-1, 588,
	67, 1220,
	-2, 1685,
	-1, 589,
	67, 1221,
	-2, 1684,
	-1, 590,
	67, 1222,
	-2, 1674,
	-1, 591,
	67, 1649,
	-2, 1669,
	-1, 592,
	67, 1650,
	-2, 1670,
	-1, 593,
	67, 1651,
	-2, 1676,
	-1, 594,
	67, 1652,
	-2, 1659,
	-1, 595,
	67, 1653,
	-2, 1667,
	-1, 596,
	67, 1654,
	-2, 1677,
	-1, 597,
	67, 1655,
	-2, 1678,
	-1, 598,
	67, 1656,
	-2, 1683,
	-1, 599,
	67, 1657,
	-2, 1688,
	-1, 600,
	67, 1658,
	-2, 1689,
	-1, 602,
	67, 1287,
	-2, 1476,
	-1, 609,
	67, 1296,
	-2, 1502,
	-1, 613,
	67, 1300,
	-2, 1541,
	-1, 614,
	67, 1301,
	-2, 1619,
	-1, 622,
	67, 1311,
	-2, 1604,
	-1, 624,
	67, 1313,
	-2, 1614,
	-1, 625,
	67, 1314,
	-2, 1639,
	-1, 636,
	67, 1198,
	-2, 1679,
	-1, 637,
	67, 1199,
	-2, 1680,
	-1, 638,
	67, 1200,
	-2, 1681,
	-1, 642,
	21, 624,
	-2, 587,
	-1, 711,
	419, 478,
	420, 478,
	-2, 446,
	-1, 752,
	105, 1476,
	116, 1476,
	136, 1476,
	-2, 1451,
	-1, 852,
	21, 624,
	-2, 587,
	-1, 951,
	21, 623,
	-2, 1103,
	-1, 1291,
	67, 1358,
	-2, 1621,
	-1, 1292,
	67, 1359,
	-2, 1622,
	-1, 1424,
	68, 765,
	-2, 771,
	-1, 1747,
	68, 1437,
	137, 1437,
	-2, 1606,
	-1, 1748,
	68, 1437,
	137, 1437,
	-2, 1605,
	-1, 1749,
	68, 1415,
	137, 1415,
	-2, 1592,
	-1, 1750,
	68, 1416,
	137, 1416,
	-2, 1597,
	-1, 1751,
	68, 1417,
	137, 1417,
	-2, 1529,
	-1, 1752,
	68, 1418,
	137, 1418,
	-2, 1523,
	-1, 1753,
	68, 1419,
	137, 1419,
	-2, 1467,
	-1, 1754,
	68, 1420,
	137, 1420,
	-2, 1594,
	-1, 1755,
	68, 1421,
	137, 1421,
	-2, 1527,
	-1, 1756,
	68, 1422,
	137, 1422,
	-2, 1522,
	-1, 1757,
	68, 1423,
	137, 1423,
	-2, 1515,
	-1, 1759,
	68, 1426,
	137, 1426,
	-2, 1639,
	-1, 1760,
	68, 1406,
	137, 1406,
	-2, 1624,
	-1, 1761,
	68, 1435,
	137, 1435,
	-2, 1595,
	-1, 1762,
	68, 1435,
	137, 1435,
	-2, 1623,
	-1, 1763,
	68, 1435,
	137, 1435,
	-2, 1485,
	-1, 1764,
	68, 1433,
	137, 1433,
	-2, 1614,
	-1, 1765,
	68, 1430,
	137, 1430,
	-2, 1507,
	-1, 1766,
	67, 1388,
	68, 1388,
	137, 1388,
	361, 1388,
	362, 1388,
	363, 1388,
	-2, 1466,
	-1, 1767,
	67, 1389,
	68, 1389,
	137, 1389,
	361, 1389,
	362, 1389,
	363, 1389,
	-2, 1468,
	-1, 1768,
	67, 1392,
	68, 1392,
	137, 1392,
	361, 1392,
	362, 1392,
	363, 1392,
	-2, 1596,
	-1, 1769,
	67, 1394,
	68, 1394,
	137, 1394,
	361, 1394,
	362, 1394,
	363, 1394,
	-2, 1579,
	-1, 1770,
	67, 1396,
	68, 1396,
	137, 1396,
	361, 1396,
	362, 1396,
	363, 1396,
	-2, 1528,
	-1, 1771,
	67, 1398,
	68, 1398,
	137, 1398,
	361, 1398,
	362, 1398,
	363, 1398,
	-2, 1511,
	-1, 1772,
	67, 1399,
	68, 1399,
	137, 1399,
	361, 1399,
	362, 1399,
	363, 1399,
	-2, 1512,
	-1, 1773,
	67, 1401,
	68, 1401,
	137, 1401,
	361, 1401,
	362, 1401,
	363, 1401,
	-2, 1465,
	-1, 1774,
	68, 1440,
	137, 1440,
	361, 1440,
	362, 1440,
	363, 1440,
	-2, 1490,
	-1, 1775,
	68, 1440,
	137, 1440,
	361, 1440,
	362, 1440,
	363, 1440,
	-2, 1503,
	-1, 1776,
	68, 1443,
	137, 1443,
	361, 1443,
	362, 1443,
	363, 1443,
	-2, 1486,
	-1, 1777,
	68, 1440,
	137, 1440,
	361, 1440,
	362, 1440,
	363, 1440,
	-2, 1564,
	-1, 1790,
	88, 875,
	132, 875,
	171, 875,
	174, 875,
	258, 875,
	-2, 868,
	-1, 1899,
	21, 623,
	-2, 715,
	-1, 2077,
	88, 875,
	132, 875,
	171, 875,
	174, 875,
	258, 875,
	-2, 869,
	-1, 2089,
	65, 531,
	137, 531,
	-2, 1006,
	-1, 2107,
	279, 1071,
	-2, 1050,
	-1, 2367,
	279, 1071,
	-2, 1051,
	-1, 2500,
	88, 875,
	132, 875,
	171, 875,
	174, 875,
	-2, 954,
	-1, 2503,
	88, 875,
	132, 875,
	171, 875,
	174, 875,
	-2, 954,
	-1, 2513,
	65, 531,
	137, 531,
	-2, 1007,
	-1, 2611,
	88, 875,
	132, 875,
	171, 875,
	174, 875,
	-2, 955,
	-1, 2901,
	68, 926,
	137, 926,
	-2, 875,
	-1, 2905,
	68, 926,
	137, 926,
	-2, 875,
	-1, 2919,
	68, 930,
	137, 930,
	-2, 875,
	-1, 2924,
	68, 931,
	137, 931,
	-2, 875,
}

const yyPrivate = 57344

const yyLast = 34319

var yyAct = [...]int{
	527, 1210, 1486, 2904, 2905, 2605, 171, 2913, 506, 2884,
	1272, 508, 2795, 2843, 2835, 2813, 2578, 529, 2583, 2379,
	2671, 2754, 2643, 2755, 1725, 2722, 2742, 2455, 2738, 2604,
	2665, 643, 2456, 2603, 982, 2687, 2655, 2581, 1201, 416,
	1445, 2632, 1447, 557, 2092, 2610, 2344, 1085, 422, 1275,
	427, 427, 2573, 1135, 2172, 2523, 427, 443, 450, 1543,
	2158, 450, 156, 2173, 2483, 2168, 2391, 2368, 2165, 2171,
	1827, 1268, 510, 2453, 1635, 1982, 1604, 1745, 2441, 461,
	1830, 2194, 2342, 1893, 2424, 2390, 1518, 2319, 1743, 2316,
	1799, 1044, 2314, 1846, 2078, 846, 455, 1556, 1735, 2224,
	2263, 1197, 1192, 1631, 505, 499, 1613, 500, 1612, 1489,
	1981, 1406, 1932, 2207, 1605, 1578, 757, 1062, 1536, 1209,
	1882, 1894, 1630, 751, 1519, 689, 1060, 2060, 1521, 2056,
	1482, 2109, 1828, 1798, 167, 8, 166, 7, 1432, 801,
	6, 1414, 1663, 1266, 1271, 1949, 1632, 509, 416, 1166,
	1144, 421, 1783, 2024, 1741, 107, 498, 1456, 35, 1321,
	1074, 1305, 1093, 1455, 1257, 863, 1611, 26, 1608, 1202,
	1642, 171, 15, 171, 14, 792, 793, 53, 1173, 1594,
	439, 1568, 755, 507, 500, 1265, 1018, 1127, 1901, 1431,
	1540, 517, 743, 1473, 1070, 436, 13, 1094, 640, 1327,
	688, 1326, 464, 1119, 23, 1165, 157, 463, 16, 10,
	1086, 2023, 686, 449, 1042, 150, 706, 1649, 2257, 2257,
	983, 1984, 744, 153, 447, 642, 1639, 2448, 1938, 444,
	1936, 446, 1935, 788, 1933, 790, 1180, 785, 1176, 789,
	784, 785, 785, 155, 423, 2571, 1178, 2220, 920, 921,
	922, 919, 2218, 445, 920, 921, 922, 919, 1526, 1583,
	2661, 415, 2656, 2574, 2454, 1410, 977, 2731, 717, 432,
	1607, 641, 651, 2697, 453, 2596, 154, 154, 49, 146,
	123, 1977, 883, 1347, 154, 154, 49, 146, 123, 154,
	8, 154, 7, 49, 146, 123, 783, 1969, 154, 154,
	154, 154, 1636, 1034, 2595, 1224, 2706, 758, 426, 426,
	760, 2786, 459, 106, 434, 460, 2286, 2698, 1647, 1217,
	631, 1221, 630, 632, 633, 2239, 634, 635, 891, 761,
	1787, 893, 1913, 151, 151, 1214, 2232, 106, 917, 1242,
	1914, 151, 1223, 36, 1554, 2058, 151, 1950, 151, 644,
	1361, 1418, 1419, 727, 1035, 151, 1216, 151, 151, 894,
	1469, 1082, 1102, 2831, 1274, 1103, 2829, 652, 910, 1258,
	1089, 915, 1262, 754, 1088, 1091, 1092, 898, 816, 753,
	899, 1091, 1092, 920, 921, 922, 919, 2457, 2732, 2733,
	1718, 2724, 732, 2817, 2818, 731, 1261, 2663, 2057, 2225,
	448, 2666, 2667, 2668, 2669, 2226, 2724, 2227, 901, 2758,
	2759, 2727, 2659, 2457, 1964, 857, 2737, 1277, 2466, 2484,
	1643, 2491, 866, 1537, 2330, 1529, 427, 1253, 2601, 1873,
	1782, 887, 2320, 2679, 2252, 1343, 427, 856, 1591, 1340,
	1186, 1185, 855, 1342, 1339, 1341, 1345, 1346, 1105, 2591,
	2386, 1344, 450, 450, 889, 427, 1179, 1177, 2048, 913,
	914, 2250, 912, 2785, 851, 853, 892, 895, 886, 1974,
	2572, 2833, 1263, 2162, 122, 2219, 152, 1875, 736, 866,
	896, 804, 2399, 2400, 2682, 794, 2598, 2063, 2335, 1878,
	888, 2824, 795, 1260, 2341, 733, 144, 2348, 2747, 2328,
	756, 824, 828, 830, 832, 834, 835, 837, 2085, 841,
	838, 839, 840, 953, 452, 819, 820, 821, 822, 802,
	803, 825, 1276, 805, 850, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 817, 823, 1080, 878, 897,
	451, 2788, 2789, 2544, 827, 829, 831, 833, 836, 2757,
	852, 2325, 2326, 1648, 735, 2324, 1283, 1286, 1287, 856,
	2743, 890, 908, 909, 987, 2898, 2327, 1284, 2914, 767,
	762, 766, 768, 1114, 2590, 2694, 1069, 1552, 1553, 2852,
	2592, 818, 1652, 1654, 1655, 2828, 2797, 1350, 1351, 1352,
	1353, 1354, 1355, 1348, 1349, 1104, 772, 2859, 758, 2536,
	765, 760, 1259, 868, 867, 1533, 1833, 2645, 447, 447,
	900, 2713, 2863, 444, 444, 446, 446, 2406, 1856, 1855,
	761, 859, 860, 2069, 2527, 734, 2633, 2634, 2635, 2637,
	2636, 986, 2793, 2794, 1637, 2797, 2531, 445, 445, 2470,
	2256, 2549, 2550, 2915, 494, 1123, 1122, 496, 770, 1637,
	2322, 2143, 495, 876, 1637, 773, 1084, 1083, 1107, 875,
	868, 867, 1040, 422, 1043, 871, 872, 758, 861, 1067,
	760, 1015, 763, 2072, 2073, 2074, 2075, 1066, 2909, 785,
	785, 2921, 785, 2696, 848, 785, 2885, 2838, 689, 761,
	785, 2834, 785, 771, 854, 2688, 955, 956, 957, 958,
	1934, 1650, 2734, 2735, 847, 903, 1181, 2302, 904, 2505,
	959, 1638, 1664, 874, 2569, 1091, 1092, 1045, 1091, 1092,
	2721, 2331, 459, 2787, 2321, 1090, 2695, 2680, 2253, 1120,
	50, 764, 1845, 427, 641, 1116, 906, 50, 1538, 1970,
	1832, 2196, 2198, 1081, 2597, 1834, 416, 416, 416, 1904,
	1978, 1139, 1139, 1087, 427, 124, 124, 1046, 1047, 1048,
	1049, 2602, 1051, 124, 124, 1640, 1055, 2062, 124, 1050,
	124, 450, 1043, 422, 877, 1169, 1169, 124, 124, 124,
	124, 1530, 756, 1254, 448, 448, 171, 995, 996, 1285,
	1836, 883, 2644, 501, 2255, 416, 1835, 1054, 1053, 1052,
	2310, 1840, 769, 1146, 2908, 1141, 2839, 454, 902, 683,
	684, 685, 1068, 1651, 1041, 1653, 2265, 2264, 1057, 1078,
	2066, 2067, 1137, 1137, 776, 781, 782, 1096, 1097, 728,
	1099, 1100, 1101, 657, 2065, 826, 1731, 1730, 2323, 1187,
	2047, 1729, 1038, 1208, 907, 1211, 1421, 2532, 2533, 1422,
	1219, 2529, 2920, 1728, 1020, 2528, 1036, 1037, 681, 1420,
	1076, 1077, 653, 654, 1235, 1236, 2618, 905, 1022, 2927,
	1240, 2926, 1448, 2339, 882, 2864, 642, 1448, 2144, 2146,
	2147, 2148, 2145, 1139, 656, 1139, 856, 1738, 659, 658,
	645, 1273, 1115, 918, 1072, 1071, 1075, 1075, 1075, 1225,
	1059, 2197, 645, 2917, 2899, 1190, 1255, 1193, 1194, 1785,
	1739, 1740, 730, 2894, 1106, 729, 1108, 1071, 1837, 1071,
	2888, 2421, 1199, 1200, 1162, 1095, 2417, 728, 1098, 1839,
	1891, 2836, 2837, 883, 1843, 1841, 1133, 1134, 918, 1842,
	918, 1121, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1695, 1952, 1239, 1694, 1316, 1317,
	2090, 1532, 786, 787, 1238, 1325, 2887, 791, 1130, 1131,
	1132, 1850, 2918, 1645, 1364, 1365, 1366, 432, 1374, 881,
	1147, 1170, 2895, 2501, 1160, 2868, 1161, 1380, 1270, 1645,
	1381, 1112, 1171, 1892, 1073, 778, 779, 780, 2421, 2340,
	2845, 1383, 1388, 1389, 2807, 737, 1784, 1719, 918, 1204,
	730, 1207, 1145, 729, 2765, 849, 2760, 1182, 1969, 1892,
	1016, 1251, 2715, 2714, 761, 2711, 918, 1267, 761, 447,
	1288, 2710, 2709, 2708, 444, 1645, 446, 1892, 1248, 1226,
	2053, 2683, 1231, 1245, 2050, 427, 1957, 1430, 1139, 1434,
	1571, 1436, 1437, 2551, 1645, 2408, 427, 2191, 445, 689,
	1915, 2353, 1446, 1404, 1227, 2029, 1139, 1244, 642, 2846,
	1636, 1116, 1985, 2808, 1967, 1247, 443, 1407, 1723, 1246,
	1243, 1821, 2091, 2684, 1373, 2684, 1269, 1356, 1357, 1264,
	1360, 2716, 1803, 1961, 2684, 1468, 1724, 1959, 1375, 1954,
	2684, 2684, 2684, 1474, 1474, 1947, 1116, 1116, 1945, 1116,
	2684, 1382, 427, 1384, 1430, 1430, 1429, 1472, 1139, 1516,
	1528, 1461, 1915, 1699, 2409, 416, 1892, 1139, 1627, 1435,
	1943, 1314, 1315, 2091, 918, 1941, 1467, 1307, 1550, 1470,
	1471, 918, 1802, 1803, 1438, 1439, 1440, 920, 921, 922,
	919, 1720, 1703, 427, 1430, 1139, 1058, 1561, 427, 427,
	1564, 880, 1955, 1256, 1702, 1567, 1960, 1693, 1955, 1573,
	1319, 1359, 1569, 1124, 1948, 2882, 171, 1946, 2847, 171,
	171, 1684, 171, 1512, 1513, 1454, 920, 921, 922, 919,
	1215, 2516, 1433, 1722, 1222, 2354, 1476, 1385, 1683, 1942,
	1682, 1463, 1464, 1534, 1942, 448, 2209, 1411, 2093, 1644,
	1451, 1803, 1972, 1971, 1249, 1405, 1963, 1374, 1374, 1615,
	1719, 918, 1232, 1558, 1374, 1374, 1903, 1818, 1690, 1622,
	1539, 935, 2284, 918, 881, 1560, 918, 1457, 1582, 1459,
	1460, 1585, 1586, 1675, 1588, 2001, 1626, 1449, 1450, 2490,
	918, 1466, 1465, 1446, 1576, 1562, 1563, 1139, 1634, 1443,
	1442, 1453, 1433, 1477, 1071, 1426, 1549, 918, 2349, 918,
	1478, 1458, 1479, 841, 838, 839, 840, 1462, 1645, 2006,
	1228, 2005, 2004, 2002, 2748, 883, 964, 869, 1075, 849,
	2358, 1233, 844, 1628, 842, 849, 923, 1475, 1616, 1267,
	1363, 1362, 2619, 1427, 2508, 952, 2247, 1515, 1517, 1072,
	1657, 655, 1063, 961, 1441, 1674, 1064, 1535, 1544, 1545,
	1546, 1661, 1662, 1610, 1547, 1548, 1128, 2350, 2749, 2877,
	1610, 2865, 1847, 1555, 2506, 966, 1126, 1129, 2422, 2413,
	1559, 920, 921, 922, 919, 2003, 2620, 2410, 2509, 1386,
	1387, 1579, 1577, 1390, 1391, 1392, 1393, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 2258, 920, 921, 922, 919,
	1480, 2351, 758, 2163, 1933, 760, 1596, 2449, 2507, 758,
	1322, 1958, 760, 1906, 858, 2446, 1313, 1673, 1700, 1992,
	1927, 1619, 1617, 1394, 761, 1707, 1322, 1580, 1670, 1625,
	447, 761, 1310, 1312, 1309, 444, 1311, 446, 1174, 1073,
	1580, 1557, 1620, 1624, 1621, 2211, 1557, 1557, 1125, 1428,
	1629, 922, 919, 2782, 499, 660, 856, 1778, 919, 445,
	2539, 1746, 938, 939, 940, 941, 942, 935, 2538, 427,
	427, 427, 2228, 1800, 936, 937, 938, 939, 940, 941,
	942, 935, 2121, 1807, 1116, 2120, 2115, 2113, 1665, 920,
	921, 922, 919, 1811, 758, 2520, 2599, 760, 2903, 2488,
	1937, 1658, 1378, 2007, 2008, 2891, 2853, 1116, 2862, 494,
	1669, 1656, 496, 1379, 856, 2848, 761, 495, 2166, 1826,
	920, 921, 922, 919, 1659, 1660, 2798, 1809, 542, 108,
	2773, 1307, 2750, 2699, 108, 2600, 1812, 1813, 2489, 934,
	933, 943, 944, 936, 937, 938, 939, 940, 941, 942,
	935, 2657, 2861, 2625, 1896, 1896, 1528, 1896, 1697, 2622,
	1822, 934, 933, 943, 944, 936, 937, 938, 939, 940,
	941, 942, 935, 856, 2621, 2510, 2487, 2329, 987, 2154,
	1139, 427, 433, 2243, 1779, 108, 2223, 1717, 926, 927,
	928, 929, 930, 931, 932, 924, 856, 422, 1168, 1168,
	1169, 1746, 1528, 2222, 2138, 1922, 448, 1924, 2137, 2152,
	1732, 171, 1848, 1814, 1851, 1852, 1853, 1854, 2153, 2150,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1786, 2140, 2136, 1820, 1898, 2133,
	1902, 1919, 1900, 1849, 2127, 986, 2016, 1808, 2151, 2124,
	1926, 1911, 920, 921, 922, 919, 2123, 1965, 2149, 1815,
	1634, 2447, 1816, 1817, 1819, 1599, 1598, 1139, 1597, 1139,
	1593, 1139, 1592, 1928, 2139, 1229, 856, 2315, 1033, 2823,
	759, 1979, 2579, 2819, 108, 2783, 2719, 2681, 1921, 920,
	921, 922, 919, 920, 921, 922, 919, 1174, 1876, 108,
	1075, 108, 1994, 2658, 2701, 1139, 2010, 920, 921, 922,
	919, 758, 1672, 2609, 760, 2577, 1929, 2575, 2555, 2553,
	2159, 2017, 920, 921, 922, 919, 1139, 1792, 1793, 1794,
	2522, 1912, 2486, 761, 2916, 2485, 2019, 2482, 2475, 2469,
	1975, 1983, 1278, 1279, 1280, 1281, 1282, 1678, 1918, 1920,
	1917, 1810, 920, 921, 922, 919, 2416, 2414, 2009, 1686,
	2404, 1175, 2021, 2403, 2307, 1907, 1908, 1909, 856, 920,
	921, 922, 919, 2051, 2306, 2254, 1137, 2221, 2202, 2018,
	1996, 2141, 2277, 2134, 2130, 2129, 1323, 1324, 458, 2128,
	587, 586, 1358, 1976, 1721, 1601, 1595, 1137, 1417, 1230,
	1368, 1990, 1726, 1727, 994, 1966, 1968, 990, 989, 2040,
	1973, 1267, 1685, 965, 845, 1139, 154, 2670, 2070, 146,
	123, 2503, 1430, 920, 921, 922, 919, 2276, 2089, 2502,
	2500, 2474, 1986, 1987, 2095, 920, 921, 922, 919, 1145,
	2752, 1408, 2461, 2000, 2452, 1412, 2451, 2440, 1415, 2104,
	920, 921, 922, 919, 2054, 2439, 2359, 920, 921, 922,
	919, 2282, 2112, 920, 921, 922, 919, 2275, 2267, 2262,
	2117, 2118, 2119, 151, 154, 2206, 2122, 2052, 1989, 2049,
	1944, 1194, 1940, 2098, 1939, 1708, 1698, 2100, 1696, 1692,
	1896, 2080, 1691, 1689, 1199, 1200, 2044, 2041, 1680, 1677,
	2155, 1676, 1600, 1403, 2086, 1377, 2059, 1376, 1367, 1430,
	856, 1528, 1528, 1528, 1528, 2174, 2096, 1151, 1149, 2876,
	2870, 2860, 856, 1528, 2857, 2855, 1896, 2174, 2772, 2717,
	2079, 151, 984, 1189, 2107, 1139, 2641, 2629, 2626, 2563,
	2110, 2561, 2546, 2545, 2110, 2025, 427, 427, 2542, 2541,
	2030, 1408, 2111, 2068, 2535, 2495, 2097, 1408, 1408, 1433,
	171, 2088, 1198, 2101, 2102, 171, 8, 1191, 7, 108,
	108, 759, 2094, 2125, 2126, 1204, 2187, 1207, 1061, 2131,
	2132, 2156, 2106, 2116, 2083, 2082, 1374, 2081, 1374, 1203,
	2108, 2238, 1206, 1195, 2242, 2114, 2039, 2161, 1581, 1953,
	1139, 1584, 1905, 2249, 1587, 2741, 1871, 1589, 1801, 1308,
	2103, 2135, 943, 944, 936, 937, 938, 939, 940, 941,
	942, 935, 2212, 151, 1565, 1425, 1424, 2216, 920, 921,
	922, 919, 2160, 1252, 2164, 2175, 2176, 2177, 2178, 2099,
	951, 2186, 2585, 1407, 1218, 1196, 642, 2190, 2237, 1017,
	2189, 2188, 1014, 2199, 1013, 2203, 1012, 2200, 646, 647,
	648, 649, 1011, 2235, 1010, 920, 921, 922, 919, 2241,
	2210, 645, 1009, 2270, 2214, 2272, 2213, 1008, 1007, 1006,
	2246, 2251, 2584, 1005, 856, 1004, 2087, 1003, 1002, 1746,
	2318, 1001, 2234, 1000, 999, 2231, 2236, 2229, 998, 997,
	2333, 993, 427, 2245, 992, 920, 921, 922, 919, 991,
	988, 981, 856, 856, 856, 980, 978, 1826, 1826, 1826,
	1150, 1528, 1800, 2260, 2357, 2259, 977, 976, 975, 2266,
	2361, 974, 973, 972, 2268, 2269, 971, 2271, 2273, 2274,
	2389, 2548, 2392, 1667, 2392, 2392, 1671, 970, 969, 968,
	967, 2397, 963, 962, 885, 843, 1139, 1139, 2472, 2309,
	2425, 2426, 761, 2543, 920, 921, 922, 919, 1806, 761,
	2360, 2303, 2311, 1023, 2362, 2363, 1789, 873, 2803, 2308,
	2801, 920, 921, 922, 919, 1681, 2756, 427, 2428, 2071,
	1916, 1603, 2318, 1688, 884, 2345, 2346, 2431, 2183, 2430,
	1430, 1430, 2337, 2184, 2204, 2205, 2388, 2355, 2387, 2401,
	2402, 1701, 2356, 2352, 1704, 1705, 1706, 2079, 2280, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1137, 1137, 2393,
	2394, 2279, 2180, 2338, 2181, 94, 2179, 2395, 2902, 2182,
	2010, 920, 921, 922, 919, 2420, 2304, 2305, 2046, 2450,
	2185, 2364, 1888, 1889, 920, 921, 922, 919, 52, 424,
	2432, 51, 1962, 761, 2287, 2418, 2419, 1956, 2288, 2289,
	2290, 2291, 1804, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2412, 2415, 2411, 2407, 1148, 427, 530, 539, 429,
	433, 1511, 2429, 531, 2312, 538, 532, 536, 535, 533,
	534, 2278, 2566, 1183, 2565, 2433, 2038, 2436, 2437, 2438,
	428, 1951, 430, 761, 108, 431, 1980, 2037, 1019, 2445,
	1726, 1727, 1780, 1566, 920, 921, 922, 919, 2233, 920,
	921, 922, 919, 2036, 1212, 2240, 879, 2810, 2564, 2462,
	920, 921, 922, 919, 2736, 2105, 2463, 2055, 540, 1796,
	1444, 2465, 1423, 1874, 2464, 1514, 920, 921, 922, 919,
	2336, 1110, 2476, 2468, 1363, 1362, 1430, 1109, 1408, 1408,
	1408, 2035, 2499, 1031, 1032, 108, 2435, 2034, 911, 108,
	537, 1029, 1030, 1896, 1528, 2513, 1027, 1028, 2033, 1623,
	108, 1025, 1026, 1168, 920, 921, 922, 919, 2032, 108,
	920, 921, 922, 919, 1065, 1021, 1139, 2478, 2871, 2791,
	2521, 920, 921, 922, 919, 2481, 2031, 427, 2480, 2779,
	2777, 920, 921, 922, 919, 2744, 2389, 2729, 2514, 2313,
	2028, 2494, 2515, 2493, 2517, 2027, 2728, 2518, 2726, 920,
	921, 922, 919, 2718, 2652, 1557, 2651, 2576, 1430, 2477,
	2442, 2459, 856, 920, 921, 922, 919, 2174, 920, 921,
	922, 919, 2496, 2497, 2498, 2519, 2511, 2458, 2387, 2443,
	2512, 1024, 645, 2208, 1448, 2568, 2244, 2524, 171, 2365,
	2805, 2804, 2557, 1884, 1887, 1888, 1889, 1885, 2804, 1886,
	1890, 856, 2547, 1791, 1993, 1679, 2174, 870, 2805, 2537,
	2552, 2460, 2011, 2012, 158, 3, 1079, 2554, 60, 2593,
	2014, 2015, 2559, 2, 1551, 2558, 1143, 2556, 1, 1416,
	1111, 650, 1113, 2020, 1117, 1118, 856, 1139, 1139, 2192,
	2193, 2434, 856, 2612, 2195, 1641, 2612, 1826, 1872, 1781,
	2570, 2026, 2332, 1408, 2467, 2580, 2042, 2043, 1415, 1056,
	682, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1369,
	1237, 2594, 1164, 775, 920, 921, 922, 919, 646, 647,
	648, 649, 856, 856, 865, 1234, 856, 856, 2613, 2616,
	2607, 645, 2615, 2608, 2623, 2624, 864, 862, 2515, 2022,
	1320, 544, 1446, 1606, 2649, 2013, 2157, 2648, 1137, 2524,
	2809, 2842, 2653, 2654, 1991, 2630, 2631, 2771, 2812, 2639,
	2640, 2627, 920, 921, 922, 919, 2638, 1318, 920, 921,
	922, 919, 1250, 528, 2720, 2662, 2678, 920, 921, 922,
	919, 2775, 2647, 2664, 2582, 2646, 1646, 916, 2230, 702,
	920, 921, 922, 919, 2690, 580, 555, 979, 1527, 933,
	943, 944, 936, 937, 938, 939, 940, 941, 942, 935,
	856, 2676, 1220, 1213, 2285, 777, 554, 2492, 2064, 2693,
	671, 1879, 856, 774, 2685, 2540, 703, 2892, 1590, 2660,
	1184, 1205, 2692, 2691, 1188, 2700, 2617, 2504, 2347, 2084,
	2912, 2901, 2703, 2707, 1884, 1887, 1888, 1889, 1885, 2883,
	1886, 1890, 2869, 2796, 108, 2712, 2897, 108, 108, 2827,
	108, 2858, 2589, 2587, 2588, 856, 2586, 2851, 2792, 465,
	1531, 414, 2745, 2730, 741, 2725, 2723, 934, 933, 943,
	944, 936, 937, 938, 939, 940, 941, 942, 935, 2642,
	2740, 1602, 466, 1805, 2739, 759, 2784, 2766, 2769, 2746,
	2628, 669, 759, 1788, 670, 2077, 2076, 2215, 1289, 2217,
	1988, 108, 925, 1306, 2300, 2770, 2301, 2761, 2762, 2763,
	2764, 960, 504, 2778, 1668, 2780, 2781, 1408, 2751, 2776,
	2774, 516, 1408, 2061, 934, 933, 943, 944, 936, 937,
	938, 939, 940, 941, 942, 935, 2790, 2380, 2201, 59,
	58, 57, 56, 2816, 1572, 2799, 179, 2802, 2800, 546,
	178, 2768, 2814, 526, 525, 2806, 524, 523, 2261, 522,
	2815, 1883, 856, 1881, 1880, 1523, 2820, 2825, 1522, 1570,
	2398, 1844, 1838, 2821, 1481, 2753, 2704, 951, 2705, 2841,
	2281, 2534, 2830, 2832, 154, 2142, 49, 146, 123, 2530,
	2840, 2526, 2844, 2405, 2611, 2849, 2366, 856, 2367, 2373,
	1795, 800, 1273, 796, 147, 798, 799, 2850, 2854, 677,
	2856, 139, 2874, 797, 1999, 148, 1995, 2816, 2867, 1823,
	106, 1825, 1824, 2343, 1737, 1736, 856, 1734, 856, 1733,
	1039, 1273, 2866, 1273, 2815, 95, 2873, 2677, 2875, 2878,
	2479, 151, 1744, 1742, 2427, 2423, 2844, 856, 2879, 2822,
	2334, 1614, 1273, 2893, 2886, 1413, 2896, 2890, 2045, 1524,
	1520, 1877, 934, 933, 943, 944, 936, 937, 938, 939,
	940, 941, 942, 935, 2907, 2900, 1790, 86, 2911, 2910,
	2396, 85, 691, 92, 135, 2919, 46, 163, 2922, 162,
	165, 164, 2907, 2925, 2924, 161, 2923, 2911, 1930, 1931,
	160, 1172, 159, 2614, 639, 37, 2371, 33, 12, 11,
	34, 21, 22, 20, 110, 111, 1241, 112, 113, 19,
	25, 32, 154, 31, 49, 146, 123, 30, 101, 100,
	2381, 29, 99, 98, 97, 679, 96, 674, 28, 664,
	18, 41, 147, 2374, 728, 40, 676, 675, 39, 139,
	2369, 9, 91, 148, 89, 2384, 2385, 27, 106, 90,
	87, 2370, 88, 662, 71, 70, 69, 668, 83, 82,
	81, 80, 79, 95, 78, 77, 701, 68, 67, 151,
	66, 65, 122, 145, 152, 64, 93, 75, 84, 76,
	74, 73, 72, 63, 1899, 62, 61, 120, 2375, 121,
	119, 118, 117, 116, 144, 138, 137, 115, 673, 114,
	42, 55, 672, 43, 44, 45, 131, 130, 661, 132,
	134, 136, 667, 133, 128, 2872, 126, 730, 129, 127,
	729, 125, 54, 17, 24, 4, 0, 0, 0, 665,
	1527, 2471, 0, 0, 0, 0, 0, 0, 2473, 108,
	2283, 0, 110, 111, 0, 112, 113, 0, 0, 0,
	663, 0, 0, 0, 715, 0, 0, 0, 0, 140,
	141, 142, 692, 0, 680, 934, 933, 943, 944, 936,
	937, 938, 939, 940, 941, 942, 935, 0, 0, 2383,
	0, 1831, 0, 0, 0, 149, 0, 0, 666, 720,
	934, 933, 943, 944, 936, 937, 938, 939, 940, 941,
	942, 935, 0, 102, 0, 0, 2377, 143, 0, 103,
	122, 145, 152, 0, 93, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2376, 2378,
	0, 0, 144, 138, 137, 0, 0, 0, 0, 55,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 714,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 678,
	0, 0, 104, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 48, 0, 0, 690, 1408, 0, 0, 2560,
	0, 0, 2562, 0, 0, 0, 693, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 2567, 140, 141, 142,
	0, 0, 0, 2386, 0, 0, 946, 0, 950, 0,
	718, 0, 0, 0, 0, 2372, 0, 0, 0, 0,
	50, 2382, 0, 149, 947, 949, 945, 0, 948, 934,
	933, 943, 944, 936, 937, 938, 939, 940, 941, 942,
	935, 102, 719, 724, 0, 143, 0, 103, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 709,
	108, 707, 711, 727, 0, 0, 0, 708, 705, 704,
	0, 710, 695, 696, 694, 697, 698, 699, 700, 0,
	725, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 722, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 0, 105, 38, 0,
	48, 0, 0, 0, 47, 5, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 816, 1666, 0, 1527,
	1527, 1527, 1527, 2675, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 50, 0,
	2686, 934, 933, 943, 944, 936, 937, 938, 939, 940,
	941, 942, 935, 0, 0, 0, 0, 0, 0, 0,
	2702, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	0, 124, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 2675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 0, 0, 105, 38, 0, 0, 0,
	0, 0, 47, 0, 109, 0, 0, 0, 0, 824,
	828, 830, 832, 834, 835, 837, 0, 841, 838, 839,
	840, 0, 0, 819, 820, 821, 822, 802, 803, 825,
	0, 805, 0, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 817, 823, 0, 0, 0, 0, 0,
	0, 0, 827, 829, 831, 833, 836, 0, 0, 350,
	562, 0, 0, 0, 108, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 0, 0, 2675, 259, 0, 818,
	283, 0, 0, 0, 553, 0, 0, 342, 297, 1527,
	0, 0, 0, 610, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 511, 0, 0, 543, 587,
	586, 530, 539, 0, 0, 241, 177, 531, 0, 538,
	532, 536, 535, 533, 534, 0, 602, 0, 0, 0,
	0, 0, 0, 502, 515, 2672, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2881,
	512, 513, 0, 0, 0, 0, 563, 0, 514, 0,
	0, 558, 540, 541, 0, 0, 0, 0, 232, 347,
	363, 242, 338, 376, 247, 345, 237, 312, 335, 0,
	0, 234, 361, 344, 294, 277, 278, 233, 0, 330,
	257, 270, 254, 310, 537, 561, 565, 253, 624, 559,
	371, 236, 0, 370, 309, 357, 362, 295, 289, 235,
	359, 293, 288, 281, 261, 625, 274, 321, 287, 322,
	275, 299, 298, 300, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 0, 0, 0, 373, 0, 0,
	608, 0, 0, 0, 346, 0, 0, 282, 0, 0,
	0, 560, 0, 333, 315, 621, 503, 0, 331, 285,
	358, 323, 364, 348, 372, 327, 324, 227, 349, 256,
	296, 238, 240, 252, 258, 260, 262, 263, 305, 306,
	318, 337, 351, 352, 353, 255, 248, 332, 249, 272,
	250, 228, 339, 251, 230, 319, 356, 0, 268, 328,
	292, 231, 291, 320, 355, 354, 239, 380, 386, 387,
	392, 0, 393, 826, 0, 0, 401, 406, 407, 408,
	410, 411, 412, 413, 0, 0, 0, 0, 395, 0,
	0, 0, 1527, 0, 0, 385, 266, 224, 225, 420,
	606, 311, 0, 0, 620, 601, 603, 604, 607, 611,
	612, 613, 614, 615, 617, 619, 623, 419, 0, 0,
	0, 0, 0, 418, 317, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	366, 378, 396, 399, 0, 0, 0, 229, 398, 0,
	2673, 0, 0, 0, 2674, 0, 622, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 564, 301, 302, 303,
	304, 609, 0, 246, 397, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 0, 0, 0,
	0, 0, 390, 391, 265, 271, 409, 273, 245, 316,
	267, 375, 279, 0, 402, 0, 403, 0, 0, 0,
	0, 308, 276, 340, 280, 286, 329, 374, 314, 334,
	243, 365, 341, 290, 0, 0, 631, 605, 630, 632,
	633, 629, 634, 635, 616, 521, 0, 568, 627, 626,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 284, 0, 325, 264,
	594, 573, 574, 575, 520, 576, 571, 572, 595, 566,
	591, 592, 545, 569, 577, 590, 578, 593, 596, 597,
	636, 637, 584, 638, 581, 598, 589, 588, 579, 567,
	599, 600, 552, 547, 582, 583, 570, 585, 548, 549,
	550, 551, 350, 562, 0, 381, 382, 383, 405, 367,
	0, 417, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 0, 0, 0,
	259, 0, 0, 283, 0, 0, 0, 553, 0, 0,
	342, 297, 0, 0, 0, 0, 610, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 0,
	0, 543, 587, 586, 530, 539, 0, 0, 241, 177,
	531, 0, 538, 532, 536, 535, 533, 534, 0, 602,
	0, 0, 0, 0, 0, 0, 502, 515, 0, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 513, 0, 0, 0, 0, 563,
	0, 514, 0, 0, 558, 540, 541, 0, 0, 0,
	0, 232, 347, 363, 242, 338, 376, 247, 345, 237,
	312, 335, 0, 0, 234, 361, 344, 294, 277, 278,
	233, 0, 330, 257, 270, 254, 310, 537, 561, 565,
	253, 624, 559, 371, 236, 0, 370, 309, 357, 362,
	295, 289, 235, 359, 293, 288, 281, 261, 625, 274,
	321, 287, 322, 275, 299, 298, 300, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 0, 0, 0,
	373, 0, 0, 608, 0, 0, 0, 346, 0, 0,
	282, 0, 0, 0, 560, 0, 333, 315, 621, 503,
	0, 331, 285, 358, 323, 364, 348, 372, 327, 324,
	227, 349, 256, 296, 238, 240, 252, 258, 260, 262,
	263, 305, 306, 318, 337, 351, 352, 353, 255, 248,
	332, 249, 272, 250, 228, 339, 251, 230, 319, 356,
	0, 268, 328, 292, 231, 291, 320, 355, 354, 239,
	380, 386, 387, 392, 0, 393, 0, 0, 0, 401,
	406, 407, 408, 410, 411, 412, 413, 0, 0, 0,
	0, 395, 0, 0, 0, 1371, 1370, 1372, 385, 266,
	224, 225, 420, 606, 311, 0, 0, 620, 601, 603,
	604, 607, 611, 612, 613, 614, 615, 617, 619, 623,
	419, 0, 0, 0, 0, 0, 418, 317, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 366, 378, 396, 399, 0, 0, 0,
	229, 398, 0, 0, 0, 0, 0, 0, 0, 622,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 564,
	301, 302, 303, 304, 609, 0, 246, 397, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 265, 271, 409,
	273, 245, 316, 267, 375, 279, 0, 402, 0, 403,
	0, 0, 0, 0, 308, 276, 340, 280, 286, 329,
	374, 314, 334, 243, 365, 341, 290, 0, 0, 631,
	605, 630, 632, 633, 629, 634, 635, 616, 521, 0,
	568, 627, 626, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 284,
	0, 325, 264, 594, 573, 574, 575, 520, 576, 571,
	572, 595, 566, 591, 592, 545, 569, 577, 590, 578,
	593, 596, 597, 636, 637, 584, 638, 581, 598, 589,
	588, 579, 567, 599, 600, 552, 547, 582, 583, 570,
	585, 548, 549, 550, 551, 350, 562, 0, 381, 382,
	383, 405, 367, 0, 417, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 259, 0, 0, 283, 0, 0, 0,
	553, 0, 0, 342, 297, 0, 0, 0, 0, 610,
	618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 0, 0, 543, 587, 586, 530, 539, 0,
	0, 241, 177, 531, 0, 538, 532, 536, 535, 533,
	534, 0, 602, 0, 0, 0, 0, 0, 0, 502,
	515, 0, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 513, 0, 0,
	0, 0, 563, 0, 514, 0, 0, 558, 540, 541,
	0, 0, 0, 0, 232, 347, 363, 242, 338, 376,
	247, 345, 237, 312, 335, 0, 0, 234, 361, 344,
	294, 277, 278, 233, 0, 330, 257, 270, 254, 310,
	537, 561, 565, 253, 624, 559, 371, 236, 0, 370,
	309, 357, 362, 295, 289, 235, 359, 293, 288, 281,
	261, 625, 274, 321, 287, 322, 275, 299, 298, 300,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 373, 0, 0, 608, 0, 0, 0,
	346, 0, 0, 282, 0, 0, 0, 560, 0, 333,
	315, 621, 503, 0, 331, 285, 358, 323, 364, 348,
	372, 327, 324, 227, 349, 256, 296, 238, 240, 252,
	258, 260, 262, 263, 305, 306, 318, 337, 351, 352,
	353, 255, 248, 332, 249, 272, 250, 228, 339, 251,
	230, 319, 356, 0, 268, 328, 292, 231, 291, 320,
	355, 354, 239, 380, 386, 387, 392, 0, 393, 0,
	0, 0, 401, 406, 407, 408, 410, 411, 412, 413,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 385, 266, 224, 225, 420, 606, 311, 0, 0,
	620, 601, 603, 604, 607, 611, 612, 613, 614, 615,
	617, 619, 623, 419, 0, 0, 0, 0, 0, 418,
	317, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 366, 378, 396, 399,
	0, 0, 0, 229, 398, 0, 2673, 0, 0, 0,
	2674, 0, 622, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 564, 301, 302, 303, 304, 609, 0, 246,
	397, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	265, 271, 409, 273, 245, 316, 267, 375, 279, 0,
	402, 0, 403, 0, 0, 0, 0, 308, 276, 340,
	280, 286, 329, 374, 314, 334, 243, 365, 341, 290,
	0, 0, 631, 605, 630, 632, 633, 629, 634, 635,
	616, 521, 0, 568, 627, 626, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 284, 0, 325, 264, 594, 573, 574, 575,
	520, 576, 571, 572, 595, 566, 591, 592, 545, 569,
	577, 590, 578, 593, 596, 597, 636, 637, 584, 638,
	581, 598, 589, 588, 579, 567, 599, 600, 552, 547,
	582, 583, 570, 585, 548, 549, 550, 551, 350, 562,
	0, 381, 382, 383, 405, 367, 0, 417, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 518, 0, 0, 0, 259, 1409, 0, 283,
	0, 0, 0, 553, 0, 0, 342, 297, 0, 0,
	0, 0, 610, 618, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 511, 0, 0, 543, 587, 586,
	530, 539, 0, 0, 241, 177, 531, 0, 538, 532,
	536, 535, 533, 534, 0, 602, 0, 0, 0, 0,
	0, 0, 502, 515, 0, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 563, 0, 514, 0, 0,
	1542, 540, 541, 0, 0, 0, 0, 232, 347, 363,
	242, 338, 376, 247, 345, 237, 312, 335, 0, 0,
	234, 361, 344, 294, 277, 278, 233, 0, 330, 257,
	270, 254, 310, 537, 561, 565, 253, 624, 559, 371,
	236, 0, 370, 309, 357, 362, 295, 289, 235, 359,
	293, 288, 281, 261, 625, 274, 321, 287, 322, 275,
	299, 298, 300, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 0, 0, 0, 373, 0, 0, 608,
	0, 0, 0, 346, 0, 0, 282, 0, 0, 0,
	560, 0, 333, 315, 621, 503, 0, 331, 285, 358,
	323, 364, 348, 372, 327, 324, 227, 349, 256, 296,
	238, 240, 252, 258, 260, 262, 263, 305, 306, 318,
	337, 351, 352, 353, 255, 248, 332, 249, 272, 250,
	228, 339, 251, 230, 319, 356, 0, 268, 328, 292,
	231, 291, 320, 355, 354, 239, 380, 386, 387, 392,
	0, 393, 0, 0, 0, 401, 406, 407, 408, 410,
	411, 412, 413, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 385, 266, 224, 225, 420, 606,
	311, 0, 0, 620, 601, 603, 604, 607, 611, 612,
	613, 614, 615, 617, 619, 623, 419, 0, 0, 0,
	0, 0, 418, 317, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 366,
	378, 396, 399, 0, 0, 0, 229, 398, 0, 0,
	0, 0, 0, 0, 0, 622, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 564, 301, 302, 303, 304,
	609, 0, 246, 397, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 265, 271, 409, 273, 245, 316, 267,
	375, 279, 0, 402, 0, 403, 0, 0, 0, 0,
	308, 276, 340, 280, 286, 329, 374, 314, 334, 243,
	365, 341, 290, 0, 0, 631, 605, 630, 632, 633,
	629, 634, 635, 616, 521, 0, 568, 627, 626, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 284, 0, 325, 264, 594,
	573, 574, 575, 520, 576, 571, 572, 595, 566, 591,
	592, 545, 569, 577, 590, 578, 593, 596, 597, 636,
	637, 584, 638, 581, 598, 589, 588, 579, 567, 599,
	600, 552, 547, 582, 583, 570, 585, 548, 549, 550,
	551, 154, 350, 562, 381, 382, 383, 405, 367, 0,
	417, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 0, 0, 0,
	259, 0, 0, 283, 0, 0, 0, 954, 0, 0,
	342, 297, 0, 0, 0, 0, 610, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 0,
	0, 543, 587, 586, 530, 539, 0, 0, 241, 177,
	531, 0, 538, 532, 536, 535, 533, 534, 0, 602,
	0, 0, 0, 0, 0, 0, 502, 515, 0, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 513, 0, 0, 0, 0, 563,
	0, 514, 0, 0, 558, 540, 541, 0, 0, 0,
	0, 232, 347, 363, 242, 338, 376, 247, 345, 237,
	312, 335, 0, 0, 234, 361, 344, 294, 277, 278,
	233, 0, 330, 257, 270, 254, 310, 537, 561, 565,
	253, 624, 559, 371, 236, 0, 370, 309, 357, 362,
	295, 289, 235, 359, 293, 288, 281, 261, 625, 274,
	321, 287, 322, 275, 299, 298, 300, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 0, 0, 0,
	373, 0, 0, 608, 0, 0, 0, 346, 0, 0,
	282, 0, 0, 0, 560, 0, 333, 315, 621, 503,
	0, 331, 285, 358, 323, 364, 348, 372, 327, 324,
	227, 349, 256, 296, 238, 240, 252, 258, 260, 262,
	263, 305, 306, 318, 337, 351, 352, 353, 255, 248,
	332, 249, 272, 250, 228, 339, 251, 230, 319, 356,
	0, 268, 328, 292, 231, 291, 320, 355, 354, 239,
	380, 386, 387, 392, 0, 393, 0, 0, 0, 401,
	406, 407, 408, 410, 411, 412, 413, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 385, 266,
	224, 225, 420, 606, 311, 0, 0, 620, 601, 603,
	604, 607, 611, 612, 613, 614, 615, 617, 619, 623,
	419, 0, 0, 0, 0, 0, 418, 317, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 366, 378, 396, 399, 0, 0, 0,
	229, 398, 0, 0, 0, 0, 0, 0, 0, 622,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 564,
	301, 302, 303, 304, 609, 0, 246, 397, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 265, 271, 409,
	273, 245, 316, 267, 375, 279, 0, 402, 0, 403,
	0, 0, 0, 0, 308, 276, 340, 280, 286, 329,
	374, 314, 334, 243, 365, 341, 290, 0, 0, 631,
	605, 630, 632, 633, 629, 634, 635, 616, 521, 0,
	568, 627, 626, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 284,
	124, 325, 264, 594, 573, 574, 575, 520, 576, 571,
	572, 595, 566, 591, 592, 545, 569, 577, 590, 578,
	593, 596, 597, 636, 637, 584, 638, 581, 598, 589,
	588, 579, 567, 599, 600, 552, 547, 582, 583, 570,
	585, 548, 549, 550, 551, 350, 562, 0, 381, 382,
	383, 405, 367, 0, 417, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 259, 2880, 0, 283, 0, 0, 0,
	553, 0, 0, 342, 297, 0, 0, 0, 0, 610,
	618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 0, 0, 543, 587, 586, 530, 539, 0,
	0, 241, 177, 531, 0, 538, 532, 536, 535, 533,
	534, 0, 602, 0, 0, 0, 0, 0, 0, 502,
	515, 0, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 513, 0, 0,
	0, 0, 563, 0, 514, 0, 0, 558, 540, 541,
	0, 0, 0, 0, 232, 347, 363, 242, 338, 376,
	247, 345, 237, 312, 335, 0, 0, 234, 361, 344,
	294, 277, 278, 233, 0, 330, 257, 270, 254, 310,
	537, 561, 565, 253, 624, 559, 371, 236, 0, 370,
	309, 357, 362, 295, 289, 235, 359, 293, 288, 281,
	261, 625, 274, 321, 287, 322, 275, 299, 298, 300,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 373, 0, 0, 608, 0, 0, 0,
	346, 0, 0, 282, 0, 0, 0, 560, 0, 333,
	315, 621, 503, 0, 331, 285, 358, 323, 364, 348,
	372, 327, 324, 227, 349, 256, 296, 238, 240, 252,
	258, 260, 262, 263, 305, 306, 318, 337, 351, 352,
	353, 255, 248, 332, 249, 272, 250, 228, 339, 251,
	230, 319, 356, 0, 268, 328, 292, 231, 291, 320,
	355, 354, 239, 380, 386, 387, 392, 0, 393, 0,
	0, 0, 401, 406, 407, 408, 410, 411, 412, 413,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 385, 266, 224, 225, 420, 606, 311, 0, 0,
	620, 601, 603, 604, 607, 611, 612, 613, 614, 615,
	617, 619, 623, 419, 0, 0, 0, 0, 0, 418,
	317, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 366, 378, 396, 399,
	0, 0, 0, 229, 398, 0, 0, 0, 0, 0,
	0, 0, 622, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 564, 301, 302, 303, 304, 609, 0, 246,
	397, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	265, 271, 409, 273, 245, 316, 267, 375, 279, 0,
	402, 0, 403, 0, 0, 0, 0, 308, 276, 340,
	280, 286, 329, 374, 314, 334, 243, 365, 341, 290,
	0, 0, 631, 605, 630, 632, 633, 629, 634, 635,
	616, 521, 0, 568, 627, 626, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 284, 0, 325, 264, 594, 573, 574, 575,
	520, 576, 571, 572, 595, 566, 591, 592, 545, 569,
	577, 590, 578, 593, 596, 597, 636, 637, 584, 638,
	581, 598, 589, 588, 579, 567, 599, 600, 552, 547,
	582, 583, 570, 585, 548, 549, 550, 551, 350, 562,
	0, 381, 382, 383, 405, 367, 0, 417, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 518, 0, 0, 0, 259, 1409, 0, 283,
	0, 0, 0, 553, 0, 0, 342, 297, 0, 0,
	0, 0, 610, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 0, 0, 543, 587, 586,
	530, 539, 0, 0, 241, 177, 531, 0, 538, 532,
	536, 535, 533, 534, 0, 602, 0, 0, 0, 0,
	0, 0, 502, 515, 0, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 563, 0, 514, 0, 0,
	558, 540, 541, 0, 0, 0, 0, 232, 347, 363,
	242, 338, 376, 247, 345, 237, 312, 335, 0, 0,
	234, 361, 344, 294, 277, 278, 233, 0, 330, 257,
	270, 254, 310, 537, 561, 565, 253, 624, 559, 371,
	236, 0, 370, 309, 357, 362, 295, 289, 235, 359,
	293, 288, 281, 261, 625, 274, 321, 287, 322, 275,
	299, 298, 300, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 0, 0, 0, 373, 0, 0, 608,
	0, 0, 0, 346, 0, 0, 282, 0, 0, 0,
	560, 0, 333, 315, 621, 503, 0, 331, 285, 358,
	323, 364, 348, 372, 327, 324, 227, 349, 256, 296,
	238, 240, 252, 258, 260, 262, 263, 305, 306, 318,
	337, 351, 352, 353, 255, 248, 332, 249, 272, 250,
	228, 339, 251, 230, 319, 356, 0, 268, 328, 292,
	231, 291, 320, 355, 354, 239, 380, 386, 387, 392,
	0, 393, 0, 0, 0, 401, 406, 407, 408, 410,
	411, 412, 413, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 385, 266, 224, 225, 420, 606,
	311, 0, 0, 620, 601, 603, 604, 607, 611, 612,
	613, 614, 615, 617, 619, 623, 419, 0, 0, 0,
	0, 0, 418, 317, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 366,
	378, 396, 399, 0, 0, 0, 229, 398, 0, 0,
	0, 0, 0, 0, 0, 622, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 564, 301, 302, 303, 304,
	609, 0, 246, 397, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 265, 271, 409, 273, 245, 316, 267,
	375, 279, 0, 402, 0, 403, 0, 0, 0, 0,
	308, 276, 340, 280, 286, 329, 374, 314, 334, 243,
	365, 341, 290, 0, 0, 631, 605, 630, 632, 633,
	629, 634, 635, 616, 521, 0, 568, 627, 626, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 284, 0, 325, 264, 594,
	573, 574, 575, 520, 576, 571, 572, 595, 566, 591,
	592, 545, 569, 577, 590, 578, 593, 596, 597, 636,
	637, 584, 638, 581, 598, 589, 588, 579, 567, 599,
	600, 552, 547, 582, 583, 570, 585, 548, 549, 550,
	551, 350, 562, 0, 381, 382, 383, 405, 367, 0,
	417, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 259,
	0, 0, 283, 0, 0, 0, 553, 0, 0, 342,
	297, 0, 0, 0, 0, 610, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 0, 0,
	543, 587, 586, 530, 539, 0, 0, 241, 177, 531,
	0, 538, 532, 536, 535, 533, 534, 0, 602, 0,
	0, 0, 0, 0, 0, 502, 515, 0, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 513, 1167, 0, 0, 0, 563, 0,
	514, 0, 0, 558, 540, 541, 0, 0, 0, 0,
	232, 347, 363, 242, 338, 376, 247, 345, 237, 312,
	335, 0, 0, 234, 361, 344, 294, 277, 278, 233,
	0, 330, 257, 270, 254, 310, 537, 561, 565, 253,
	624, 559, 371, 236, 0, 370, 309, 357, 362, 295,
	289, 235, 359, 293, 288, 281, 261, 625, 274, 321,
	287, 322, 275, 299, 298, 300, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 373,
	0, 0, 608, 0, 0, 0, 346, 0, 0, 282,
	0, 0, 0, 560, 0, 333, 315, 621, 503, 0,
	331, 285, 358, 323, 364, 348, 372, 327, 324, 227,
	349, 256, 296, 238, 240, 252, 258, 260, 262, 263,
	305, 306, 318, 337, 351, 352, 353, 255, 248, 332,
	249, 272, 250, 228, 339, 251, 230, 319, 356, 0,
	268, 328, 292, 231, 291, 320, 355, 354, 239, 380,
	386, 387, 392, 0, 393, 0, 0, 0, 401, 406,
	407, 408, 410, 411, 412, 413, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 0, 385, 266, 224,
	225, 420, 606, 311, 0, 0, 620, 601, 603, 604,
	607, 611, 612, 613, 614, 615, 617, 619, 623, 419,
	0, 0, 0, 0, 0, 418, 317, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 366, 378, 396, 399, 0, 0, 0, 229,
	398, 0, 0, 0, 0, 0, 0, 0, 622, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 564, 301,
	302, 303, 304, 609, 0, 246, 397, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 265, 271, 409, 273,
	245, 316, 267, 375, 279, 0, 402, 0, 403, 0,
	0, 0, 0, 308, 276, 340, 280, 286, 329, 374,
	314, 334, 243, 365, 341, 290, 0, 0, 631, 605,
	630, 632, 633, 629, 634, 635, 616, 521, 0, 568,
	627, 626, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 284, 0,
	325, 264, 594, 573, 574, 575, 520, 576, 571, 572,
	595, 566, 591, 592, 545, 569, 577, 590, 578, 593,
	596, 597, 636, 637, 584, 638, 581, 598, 589, 588,
	579, 567, 599, 600, 552, 547, 582, 583, 570, 585,
	548, 549, 550, 551, 0, 0, 0, 381, 382, 383,
	405, 367, 0, 417, 350, 562, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 0,
	0, 0, 259, 0, 0, 283, 0, 0, 0, 553,
	0, 0, 342, 297, 0, 0, 0, 0, 610, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 0, 0, 543, 587, 586, 530, 539, 0, 0,
	241, 177, 531, 0, 538, 532, 536, 535, 533, 534,
	0, 602, 0, 0, 0, 0, 0, 0, 502, 515,
	0, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 563, 0, 514, 0, 0, 558, 540, 541, 0,
	0, 0, 0, 232, 347, 363, 242, 338, 376, 247,
	345, 237, 312, 335, 0, 0, 234, 361, 344, 294,
	277, 278, 233, 0, 330, 257, 270, 254, 310, 537,
	561, 565, 253, 624, 559, 371, 236, 0, 370, 309,
	357, 362, 295, 289, 235, 359, 293, 288, 281, 261,
	625, 274, 321, 287, 322, 275, 299, 298, 300, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 0,
	0, 0, 373, 0, 0, 608, 0, 0, 0, 346,
	0, 0, 282, 0, 0, 0, 560, 0, 333, 315,
	621, 503, 0, 331, 285, 358, 323, 364, 348, 372,
	327, 324, 227, 349, 256, 296, 238, 240, 252, 258,
	260, 262, 263, 305, 306, 318, 337, 351, 352, 353,
	255, 248, 332, 249, 272, 250, 228, 339, 251, 230,
	319, 356, 0, 268, 328, 292, 231, 291, 320, 355,
	354, 239, 380, 386, 387, 392, 0, 393, 0, 0,
	0, 401, 406, 407, 408, 410, 411, 412, 413, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	385, 266, 224, 225, 420, 606, 311, 0, 0, 620,
	601, 603, 604, 607, 611, 612, 613, 614, 615, 617,
	619, 623, 419, 0, 0, 0, 0, 0, 418, 317,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 366, 378, 396, 399, 0,
	0, 0, 229, 398, 0, 0, 0, 0, 0, 0,
	0, 622, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 564, 301, 302, 303, 304, 609, 0, 246, 397,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 265,
	271, 409, 273, 245, 316, 267, 375, 279, 0, 402,
	0, 403, 0, 0, 0, 0, 308, 276, 340, 280,
	286, 329, 374, 314, 334, 243, 365, 341, 290, 0,
	0, 631, 605, 630, 632, 633, 629, 634, 635, 616,
	521, 0, 568, 627, 626, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 284, 0, 325, 264, 594, 573, 574, 575, 520,
	576, 571, 572, 595, 566, 591, 592, 545, 569, 577,
	590, 578, 593, 596, 597, 636, 637, 584, 638, 581,
	598, 589, 588, 579, 567, 599, 600, 552, 547, 582,
	583, 570, 585, 548, 549, 550, 551, 350, 562, 0,
	381, 382, 383, 405, 367, 0, 417, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 259, 0, 0, 283, 0,
	0, 0, 553, 0, 0, 342, 297, 0, 0, 0,
	0, 610, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 0, 0, 543, 587, 586, 530,
	539, 0, 0, 241, 177, 531, 0, 538, 532, 536,
	535, 533, 534, 0, 602, 0, 0, 0, 0, 0,
	0, 502, 515, 0, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	0, 0, 0, 0, 563, 0, 514, 0, 0, 558,
	540, 541, 0, 0, 0, 0, 232, 347, 363, 242,
	338, 376, 247, 345, 237, 312, 335, 0, 0, 234,
	361, 344, 294, 277, 278, 233, 0, 330, 257, 270,
	254, 310, 537, 561, 565, 253, 624, 559, 371, 236,
	0, 370, 309, 357, 362, 295, 289, 235, 359, 293,
	288, 281, 261, 625, 274, 321, 287, 322, 275, 299,
	298, 300, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 0, 0, 0, 373, 0, 0, 608, 0,
	0, 0, 346, 0, 0, 282, 0, 0, 0, 560,
	0, 333, 315, 621, 503, 0, 331, 285, 358, 323,
	364, 348, 372, 327, 324, 227, 349, 256, 296, 238,
	240, 252, 258, 260, 262, 263, 305, 306, 318, 337,
	351, 352, 353, 255, 248, 332, 249, 272, 250, 228,
	339, 251, 230, 319, 356, 0, 268, 328, 292, 231,
	291, 320, 355, 354, 239, 380, 386, 387, 392, 0,
	393, 0, 0, 0, 401, 406, 407, 408, 410, 411,
	412, 413, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 385, 266, 224, 225, 420, 606, 311,
	0, 0, 620, 601, 603, 604, 607, 611, 612, 613,
	614, 615, 617, 619, 623, 419, 0, 0, 0, 0,
	0, 418, 317, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 366, 378,
	396, 399, 0, 0, 0, 229, 398, 0, 0, 0,
	0, 0, 0, 0, 622, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 564, 301, 302, 303, 304, 609,
	0, 246, 397, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 265, 271, 409, 273, 245, 316, 267, 375,
	279, 0, 402, 0, 403, 0, 0, 0, 0, 308,
	276, 340, 280, 286, 329, 374, 314, 334, 243, 365,
	341, 290, 0, 0, 631, 605, 630, 632, 633, 629,
	634, 635, 616, 521, 0, 568, 627, 626, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 284, 0, 325, 264, 594, 573,
	574, 575, 520, 576, 571, 572, 595, 566, 591, 592,
	545, 569, 577, 590, 578, 593, 596, 597, 636, 637,
	584, 638, 581, 598, 589, 588, 579, 567, 599, 600,
	552, 547, 582, 583, 570, 585, 548, 549, 550, 551,
	350, 562, 0, 381, 382, 383, 405, 367, 0, 417,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	1290, 0, 0, 0, 518, 0, 0, 0, 259, 0,
	0, 283, 0, 0, 0, 553, 0, 0, 342, 297,
	0, 0, 0, 0, 610, 618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 0, 0, 543,
	587, 586, 530, 539, 0, 0, 241, 177, 531, 0,
	538, 532, 536, 535, 533, 534, 0, 602, 0, 0,
	0, 0, 0, 0, 0, 515, 0, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 563, 0, 514,
	0, 0, 558, 540, 541, 0, 0, 0, 0, 232,
	347, 363, 242, 338, 376, 247, 345, 237, 312, 335,
	0, 0, 234, 361, 344, 294, 277, 278, 233, 0,
	330, 257, 270, 254, 310, 537, 561, 565, 253, 624,
	559, 371, 236, 0, 370, 309, 357, 362, 295, 289,
	235, 359, 293, 288, 281, 261, 625, 274, 321, 287,
	322, 275, 299, 298, 300, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 0, 0, 0, 373, 0,
	0, 608, 0, 0, 0, 346, 0, 0, 282, 0,
	0, 0, 560, 0, 333, 315, 621, 0, 0, 331,
	285, 358, 323, 364, 348, 372, 327, 324, 227, 349,
	256, 296, 238, 240, 252, 258, 260, 262, 263, 305,
	306, 318, 337, 351, 352, 353, 255, 248, 332, 249,
	272, 250, 228, 339, 251, 230, 319, 356, 0, 268,
	328, 292, 231, 291, 320, 355, 354, 239, 380, 1291,
	1292, 392, 0, 393, 0, 0, 0, 401, 406, 407,
	408, 410, 411, 412, 413, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 385, 266, 224, 225,
	420, 606, 311, 0, 0, 620, 601, 603, 604, 607,
	611, 612, 613, 614, 615, 617, 619, 623, 419, 0,
	0, 0, 0, 0, 418, 317, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 366, 378, 396, 399, 0, 0, 0, 229, 398,
	0, 0, 0, 0, 0, 0, 0, 622, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 564, 301, 302,
	303, 304, 609, 0, 246, 397, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 265, 271, 409, 273, 245,
	316, 267, 375, 279, 0, 402, 0, 403, 0, 0,
	0, 0, 308, 276, 340, 280, 286, 329, 374, 314,
	334, 243, 365, 341, 290, 0, 0, 631, 605, 630,
	632, 633, 629, 634, 635, 616, 521, 0, 568, 627,
	626, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 284, 0, 325,
	264, 594, 573, 574, 575, 520, 576, 571, 572, 595,
	566, 591, 592, 545, 569, 577, 590, 578, 593, 596,
	597, 636, 637, 584, 638, 581, 598, 589, 588, 579,
	567, 599, 600, 552, 547, 582, 583, 570, 585, 548,
	549, 550, 551, 350, 562, 0, 381, 382, 383, 405,
	367, 0, 417, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 259, 0, 0, 283, 0, 0, 0, 553, 0,
	0, 342, 297, 0, 0, 0, 0, 610, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 587, 586, 530, 539, 0, 0, 241,
	177, 531, 0, 538, 532, 536, 535, 533, 534, 0,
	602, 0, 0, 0, 0, 0, 0, 502, 515, 0,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 513, 0, 0, 0, 0,
	563, 0, 514, 0, 0, 558, 540, 541, 0, 0,
	0, 0, 232, 347, 363, 242, 338, 376, 247, 345,
	237, 312, 335, 0, 0, 234, 361, 344, 294, 277,
	278, 233, 0, 330, 257, 270, 254, 310, 537, 561,
	565, 253, 624, 559, 371, 236, 0, 370, 309, 357,
	362, 295, 289, 235, 359, 293, 288, 281, 261, 625,
	274, 321, 287, 322, 275, 299, 298, 300, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 0,
	0, 373, 0, 0, 608, 0, 0, 0, 346, 0,
	0, 282, 0, 0, 0, 560, 0, 333, 315, 621,
	503, 0, 331, 285, 358, 323, 364, 348, 372, 327,
	324, 227, 349, 256, 296, 238, 240, 252, 258, 260,
	262, 263, 305, 306, 318, 337, 351, 352, 353, 255,
	248, 332, 249, 272, 250, 228, 339, 251, 230, 319,
	356, 0, 268, 328, 292, 231, 291, 320, 355, 354,
	239, 380, 386, 387, 392, 0, 393, 0, 0, 0,
	401, 406, 407, 408, 410, 411, 412, 413, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 385,
	266, 224, 225, 420, 606, 311, 0, 0, 620, 601,
	603, 604, 607, 611, 612, 613, 614, 615, 617, 619,
	623, 419, 0, 0, 0, 0, 0, 418, 317, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 366, 378, 396, 399, 0, 0,
	0, 229, 398, 0, 0, 0, 0, 0, 0, 0,
	622, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	564, 301, 302, 303, 304, 609, 0, 246, 397, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 265, 271,
	409, 273, 245, 316, 267, 375, 279, 0, 402, 0,
	403, 0, 0, 0, 0, 308, 276, 340, 280, 286,
	329, 374, 314, 334, 243, 365, 341, 290, 0, 0,
	631, 605, 630, 632, 633, 629, 634, 635, 616, 521,
	0, 568, 627, 626, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	284, 0, 325, 264, 594, 573, 574, 575, 520, 576,
	571, 572, 595, 566, 591, 592, 545, 569, 577, 590,
	578, 593, 596, 597, 636, 637, 584, 638, 581, 598,
	589, 588, 579, 567, 599, 600, 552, 547, 582, 583,
	570, 585, 548, 549, 550, 551, 350, 562, 0, 381,
	382, 383, 405, 367, 0, 417, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 0, 0, 0, 259, 0, 0, 283, 0, 0,
	0, 553, 0, 0, 342, 297, 0, 0, 0, 0,
	610, 618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 0, 0, 543, 587, 586, 530, 539,
	0, 0, 241, 177, 531, 0, 538, 532, 536, 535,
	533, 534, 0, 602, 0, 0, 0, 0, 0, 0,
	0, 515, 0, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 0, 563, 0, 514, 0, 0, 558, 540,
	541, 0, 0, 0, 0, 232, 347, 363, 242, 338,
	376, 247, 345, 237, 312, 335, 0, 0, 234, 361,
	344, 294, 277, 278, 233, 0, 330, 257, 270, 254,
	310, 537, 561, 565, 253, 624, 559, 371, 236, 0,
	370, 309, 357, 362, 295, 289, 235, 359, 293, 288,
	281, 261, 625, 274, 321, 287, 322, 275, 299, 298,
	300, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 0, 0, 0, 373, 0, 0, 608, 0, 0,
	0, 346, 0, 0, 282, 0, 0, 0, 560, 0,
	333, 315, 621, 0, 0, 331, 285, 358, 323, 364,
	348, 372, 327, 324, 227, 349, 256, 296, 238, 240,
	252, 258, 260, 262, 263, 305, 306, 318, 337, 351,
	352, 353, 255, 248, 332, 249, 272, 250, 228, 339,
	251, 230, 319, 356, 0, 268, 328, 292, 231, 291,
	320, 355, 354, 239, 380, 386, 387, 392, 0, 393,
	0, 0, 0, 401, 406, 407, 408, 410, 411, 412,
	413, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 385, 266, 224, 225, 420, 606, 311, 0,
	0, 620, 601, 603, 604, 607, 611, 612, 613, 614,
	615, 617, 619, 623, 419, 0, 0, 0, 0, 0,
	418, 317, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 366, 378, 396,
	399, 0, 0, 0, 229, 398, 0, 0, 0, 0,
	0, 0, 0, 622, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 564, 301, 302, 303, 304, 609, 0,
	246, 397, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 265, 271, 409, 273, 245, 316, 267, 375, 279,
	0, 402, 0, 403, 0, 0, 0, 0, 308, 276,
	340, 280, 286, 329, 374, 314, 334, 243, 365, 341,
	290, 0, 0, 631, 605, 630, 632, 633, 629, 634,
	635, 616, 521, 0, 568, 627, 626, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 284, 0, 325, 264, 594, 573, 574,
	575, 520, 576, 571, 572, 595, 566, 591, 592, 545,
	569, 577, 590, 578, 593, 596, 597, 636, 637, 584,
	638, 581, 598, 589, 588, 579, 567, 599, 600, 552,
	547, 582, 583, 570, 585, 548, 549, 550, 551, 0,
	0, 0, 381, 382, 383, 405, 367, 0, 417, 154,
	350, 49, 146, 123, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 0, 0, 0, 0, 0, 139, 0, 259, 0,
	148, 283, 0, 0, 0, 106, 0, 0, 342, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 151, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 241, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	347, 363, 242, 338, 376, 247, 345, 237, 312, 335,
	0, 0, 234, 361, 344, 294, 277, 278, 233, 0,
	330, 257, 270, 254, 310, 0, 360, 388, 253, 379,
	0, 371, 236, 0, 370, 309, 357, 362, 295, 289,
	235, 359, 293, 288, 281, 261, 404, 274, 321, 287,
	322, 275, 299, 298, 300, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 122, 145, 152,
	0, 93, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 169, 0, 0, 0, 346, 0, 0, 282, 144,
	138, 137, 389, 0, 333, 315, 55, 0, 0, 331,
	285, 358, 323, 364, 348, 372, 327, 324, 227, 349,
	256, 296, 238, 240, 252, 258, 260, 262, 263, 305,
	306, 318, 337, 351, 352, 353, 255, 248, 332, 249,
	272, 250, 228, 339, 251, 230, 319, 356, 0, 268,
	328, 292, 231, 291, 320, 355, 354, 239, 380, 386,
	387, 392, 0, 393, 140, 141, 142, 401, 406, 407,
	408, 410, 411, 412, 413, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 385, 266, 224, 225,
	368, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 384, 172, 0, 0, 0, 180, 0,
	0, 0, 143, 0, 181, 317, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 366, 378, 396, 399, 0, 0, 0, 229, 398,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 394, 301, 302,
	303, 304, 269, 0, 246, 397, 326, 104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 0, 0,
	0, 0, 0, 390, 391, 265, 271, 409, 273, 245,
	316, 267, 375, 279, 0, 402, 0, 403, 0, 0,
	0, 0, 308, 276, 340, 280, 286, 329, 374, 314,
	334, 243, 365, 341, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 284, 124, 325,
	264, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 0, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 220,
	221, 222, 223, 0, 0, 0, 381, 382, 383, 405,
	367, 350, 182, 38, 170, 173, 175, 174, 0, 47,
	5, 109, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 342,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 985, 0, 0,
	176, 0, 0, 530, 539, 0, 0, 241, 177, 531,
	0, 538, 532, 536, 535, 533, 534, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	232, 347, 363, 242, 338, 376, 247, 345, 237, 312,
	335, 0, 0, 234, 361, 344, 294, 277, 278, 233,
	0, 330, 257, 270, 254, 310, 537, 360, 388, 253,
	379, 0, 371, 236, 0, 370, 309, 357, 362, 295,
	289, 235, 359, 293, 288, 281, 261, 404, 274, 321,
	287, 322, 275, 299, 298, 300, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 282,
	0, 0, 0, 389, 0, 333, 315, 0, 0, 0,
	331, 285, 358, 323, 364, 348, 372, 327, 324, 227,
	349, 256, 296, 238, 240, 252, 258, 260, 262, 263,
	305, 306, 318, 337, 351, 352, 353, 255, 248, 332,
	249, 272, 250, 228, 339, 251, 230, 319, 356, 0,
	268, 328, 292, 231, 291, 320, 355, 354, 239, 380,
	386, 387, 392, 0, 393, 0, 0, 0, 401, 406,
	407, 408, 410, 411, 412, 413, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 0, 385, 266, 224,
	225, 420, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 384, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 418, 317, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 366, 378, 396, 399, 0, 0, 0, 229,
	398, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 394, 301,
	302, 303, 304, 269, 0, 246, 397, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 265, 271, 409, 273,
	245, 316, 267, 375, 279, 0, 402, 0, 403, 0,
	0, 0, 0, 308, 276, 340, 280, 286, 329, 374,
	314, 334, 243, 365, 341, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 284, 0,
	325, 264, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 0, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	220, 221, 222, 223, 0, 0, 0, 381, 382, 383,
	405, 367, 0, 417, 154, 350, 49, 146, 123, 0,
	0, 0, 0, 0, 0, 0, 313, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 342, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 241, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 347, 363, 242, 338, 376,
	247, 345, 237, 312, 335, 0, 0, 234, 361, 344,
	294, 277, 278, 233, 0, 330, 257, 270, 254, 310,
	0, 360, 388, 253, 379, 0, 371, 236, 0, 370,
	309, 357, 362, 295, 289, 235, 359, 293, 288, 281,
	261, 404, 274, 321, 287, 322, 275, 299, 298, 300,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 282, 0, 0, 0, 389, 0, 333,
	315, 0, 0, 0, 331, 285, 358, 323, 364, 348,
	372, 327, 324, 227, 349, 256, 296, 238, 240, 252,
	258, 260, 262, 263, 305, 306, 318, 337, 351, 352,
	353, 255, 248, 332, 249, 272, 250, 228, 339, 251,
	230, 319, 356, 0, 268, 328, 292, 231, 291, 320,
	355, 354, 239, 380, 386, 387, 392, 0, 393, 0,
	0, 0, 401, 406, 407, 408, 410, 411, 412, 413,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 385, 266, 224, 225, 420, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 384, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 418,
	317, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 366, 378, 396, 399,
	0, 0, 0, 229, 398, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 394, 301, 302, 303, 304, 438, 440, 246,
	397, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	265, 271, 409, 273, 245, 316, 267, 375, 279, 0,
	402, 0, 403, 0, 0, 0, 0, 308, 276, 340,
	280, 286, 329, 374, 314, 334, 243, 365, 341, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 284, 124, 325, 264, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 0, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 220, 221, 222, 223, 350, 0,
	0, 381, 382, 383, 405, 367, 0, 417, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 816, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 342, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 241, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 0, 0, 0, 0, 232, 347, 363,
	242, 338, 376, 247, 345, 237, 312, 335, 0, 0,
	1766, 1768, 1769, 1770, 1771, 1772, 1773, 0, 1777, 1774,
	1775, 1776, 310, 0, 1761, 1762, 1763, 1764, 802, 1747,
	1767, 0, 1748, 309, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1765, 321, 287, 322, 275,
	299, 298, 300, 827, 829, 831, 833, 836, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 282, 0, 0, 0,
	1760, 0, 333, 315, 0, 0, 0, 331, 285, 358,
	323, 364, 348, 372, 327, 324, 227, 349, 256, 296,
	238, 240, 252, 258, 260, 262, 263, 305, 306, 318,
	337, 351, 352, 353, 255, 248, 332, 249, 272, 250,
	228, 339, 251, 230, 319, 356, 0, 268, 328, 292,
	231, 291, 320, 355, 354, 239, 380, 386, 387, 392,
	0, 393, 0, 0, 0, 401, 406, 407, 408, 410,
	411, 412, 413, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 385, 266, 224, 225, 420, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 384, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 418, 317, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 366,
	378, 396, 399, 0, 0, 0, 229, 398, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 394, 301, 302, 303, 304,
	269, 0, 246, 397, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 265, 271, 409, 273, 245, 316, 267,
	375, 279, 0, 402, 0, 403, 0, 0, 0, 0,
	308, 276, 340, 280, 286, 329, 374, 314, 334, 243,
	365, 341, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 826, 284, 0, 325, 264, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 0, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 220, 221, 222,
	223, 350, 0, 0, 381, 382, 383, 405, 367, 0,
	417, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 342,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 241, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 1833,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 347, 363, 242, 338, 376, 247, 345, 237, 312,
	335, 0, 0, 234, 361, 344, 294, 277, 278, 233,
	0, 330, 257, 270, 254, 310, 0, 360, 388, 253,
	379, 0, 371, 236, 0, 370, 309, 357, 362, 295,
	289, 235, 359, 293, 288, 281, 261, 404, 274, 321,
	287, 322, 275, 299, 298, 300, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 373,
	0, 0, 0, 1832, 0, 1831, 346, 1829, 1834, 282,
	0, 0, 0, 389, 0, 333, 315, 0, 0, 0,
	331, 285, 358, 323, 364, 348, 372, 327, 324, 227,
	349, 256, 296, 238, 240, 252, 258, 260, 262, 263,
	305, 306, 318, 337, 351, 352, 353, 255, 248, 332,
	249, 272, 250, 228, 339, 251, 230, 319, 356, 1835,
	268, 328, 292, 231, 291, 320, 355, 354, 239, 380,
	386, 387, 392, 0, 393, 0, 0, 0, 401, 406,
	407, 408, 410, 411, 412, 413, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 0, 385, 266, 224,
	225, 420, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 384, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 418, 317, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 366, 378, 396, 399, 0, 0, 0, 229,
	398, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 394, 301,
	302, 303, 304, 269, 0, 246, 397, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 265, 271, 409, 273,
	245, 316, 267, 375, 279, 0, 402, 0, 403, 0,
	0, 0, 0, 308, 276, 340, 280, 286, 329, 374,
	314, 334, 243, 365, 341, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 284, 0,
	325, 264, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 0, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	220, 221, 222, 223, 350, 0, 0, 381, 382, 383,
	405, 367, 0, 417, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 259, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 342, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 1575, 0, 0, 0,
	241, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 920, 921, 922, 919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 347, 363, 242, 338, 376, 247,
	345, 237, 312, 335, 0, 0, 234, 361, 344, 294,
	277, 278, 233, 0, 330, 257, 270, 254, 310, 0,
	360, 388, 253, 379, 0, 371, 236, 0, 370, 309,
	357, 362, 295, 289, 235, 359, 293, 288, 281, 261,
	404, 274, 321, 287, 322, 275, 299, 298, 300, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 282, 0, 0, 0, 389, 0, 333, 315,
	0, 0, 0, 331, 285, 358, 323, 364, 348, 372,
	327, 324, 227, 349, 256, 296, 238, 240, 252, 258,
	260, 262, 263, 305, 306, 318, 337, 351, 352, 353,
	255, 248, 332, 249, 272, 250, 228, 339, 251, 230,
	319, 356, 0, 268, 328, 292, 231, 291, 320, 355,
	354, 239, 380, 386, 387, 392, 0, 393, 0, 0,
	0, 401, 406, 407, 408, 410, 411, 412, 413, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	385, 266, 224, 225, 420, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 384, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 418, 317,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 366, 378, 396, 399, 0,
	0, 0, 229, 398, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 394, 301, 302, 303, 304, 269, 0, 246, 397,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 265,
	271, 409, 273, 245, 316, 267, 375, 279, 0, 402,
	0, 403, 0, 0, 0, 0, 308, 276, 340, 280,
	286, 329, 374, 314, 334, 243, 365, 341, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 284, 0, 325, 264, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 0, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 220, 221, 222, 223, 350, 0, 0,
	381, 382, 383, 405, 367, 0, 417, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 740, 0, 283, 0,
	0, 0, 0, 0, 0, 342, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 748, 749, 0,
	0, 0, 0, 241, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 347, 363, 242,
	338, 376, 247, 345, 237, 312, 335, 0, 0, 234,
	361, 344, 294, 277, 278, 233, 0, 330, 257, 270,
	254, 310, 0, 360, 388, 253, 379, 730, 371, 236,
	729, 370, 309, 357, 362, 295, 289, 235, 359, 293,
	288, 281, 261, 404, 274, 321, 287, 322, 275, 299,
	298, 300, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 282, 0, 0, 0, 389,
	0, 333, 315, 0, 0, 0, 331, 285, 358, 323,
	364, 348, 372, 738, 324, 227, 349, 256, 296, 238,
	240, 252, 258, 260, 262, 263, 305, 306, 318, 337,
	351, 352, 353, 255, 248, 332, 249, 272, 250, 228,
	339, 251, 230, 319, 356, 0, 268, 328, 292, 231,
	291, 320, 355, 354, 239, 380, 386, 387, 392, 0,
	393, 0, 0, 0, 401, 406, 407, 408, 410, 411,
	412, 413, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 385, 266, 224, 225, 420, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	384, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 418, 317, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 366, 378,
	396, 399, 0, 0, 0, 229, 398, 0, 0, 0,
	0, 0, 0, 739, 369, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 742, 301, 302, 303, 304, 269,
	0, 246, 397, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 265, 271, 409, 273, 245, 316, 267, 375,
	279, 0, 402, 0, 403, 0, 0, 0, 0, 750,
	745, 746, 280, 286, 329, 374, 314, 334, 243, 365,
	341, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 284, 0, 325, 264, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	0, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 220, 221, 222, 223,
	154, 350, 0, 381, 382, 383, 405, 367, 0, 417,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 283, 0, 0, 0, 106, 0, 0, 342,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 1618, 0,
	176, 0, 0, 0, 0, 0, 0, 241, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 347, 363, 242, 338, 376, 247, 345, 237, 312,
	335, 0, 0, 234, 361, 344, 294, 277, 278, 233,
	0, 330, 257, 270, 254, 310, 0, 360, 388, 253,
	379, 0, 371, 236, 0, 370, 309, 357, 362, 295,
	289, 235, 359, 293, 288, 281, 261, 404, 274, 321,
	287, 322, 275, 299, 298, 300, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 282,
	0, 0, 0, 389, 0, 333, 315, 0, 0, 0,
	331, 285, 358, 323, 364, 348, 372, 327, 324, 227,
	349, 256, 296, 238, 240, 252, 258, 260, 262, 263,
	305, 306, 318, 337, 351, 352, 353, 255, 248, 332,
	249, 272, 250, 228, 339, 251, 230, 319, 356, 0,
	268, 328, 292, 231, 291, 320, 355, 354, 239, 380,
	386, 387, 392, 0, 393, 0, 0, 0, 401, 406,
	407, 408, 410, 411, 412, 413, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 0, 385, 266, 224,
	225, 420, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 384, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 418, 317, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 366, 378, 396, 399, 0, 0, 0, 229,
	398, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 394, 301,
	302, 303, 304, 269, 0, 246, 397, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 265, 271, 409, 273,
	245, 316, 267, 375, 279, 0, 402, 0, 403, 0,
	0, 0, 0, 308, 276, 340, 280, 286, 329, 374,
	314, 334, 243, 365, 341, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 284, 124,
	325, 264, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 0, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	220, 221, 222, 223, 154, 350, 0, 381, 382, 383,
	405, 367, 0, 417, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 283, 0, 0, 0,
	106, 0, 0, 342, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 1609, 0, 176, 0, 0, 0, 0, 0,
	0, 241, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 347, 363, 242, 338, 376,
	247, 345, 237, 312, 335, 0, 0, 234, 361, 344,
	294, 277, 278, 233, 0, 330, 257, 270, 254, 310,
	0, 360, 388, 253, 379, 0, 371, 236, 0, 370,
	309, 357, 362, 295, 289, 235, 359, 293, 288, 281,
	261, 404, 274, 321, 287, 322, 275, 299, 298, 300,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 282, 0, 0, 0, 389, 0, 333,
	315, 0, 0, 0, 331, 285, 358, 323, 364, 348,
	372, 327, 324, 227, 349, 256, 296, 238, 240, 252,
	258, 260, 262, 263, 305, 306, 318, 337, 351, 352,
	353, 255, 248, 332, 249, 272, 250, 228, 339, 251,
	230, 319, 356, 0, 268, 328, 292, 231, 291, 320,
	355, 354, 239, 380, 386, 387, 392, 0, 393, 0,
	0, 0, 401, 406, 407, 408, 410, 411, 412, 413,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 385, 266, 224, 225, 420, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 384, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 418,
	317, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 366, 378, 396, 399,
	0, 0, 0, 229, 398, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 394, 301, 302, 303, 304, 269, 0, 246,
	397, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	265, 271, 409, 273, 245, 316, 267, 375, 279, 0,
	402, 0, 403, 0, 0, 0, 0, 308, 276, 340,
	280, 286, 329, 374, 314, 334, 243, 365, 341, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 284, 124, 325, 264, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 0, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 220, 221, 222, 223, 154, 350,
	0, 381, 382, 383, 405, 367, 0, 417, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	283, 0, 0, 0, 106, 0, 0, 342, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 241, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 347,
	363, 242, 338, 376, 247, 345, 237, 312, 335, 0,
	0, 234, 361, 344, 294, 277, 278, 233, 0, 330,
	257, 270, 254, 310, 0, 360, 388, 253, 379, 0,
	371, 236, 0, 370, 309, 357, 362, 295, 289, 235,
	359, 293, 288, 281, 261, 404, 274, 321, 287, 322,
	275, 299, 298, 300, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 282, 0, 0,
	0, 389, 0, 333, 315, 0, 0, 0, 331, 285,
	358, 323, 364, 348, 372, 327, 324, 227, 349, 256,
	296, 238, 240, 252, 258, 260, 262, 263, 305, 306,
	318, 337, 351, 352, 353, 255, 248, 332, 249, 272,
	250, 228, 339, 251, 230, 319, 356, 0, 268, 328,
	292, 231, 291, 320, 355, 354, 239, 380, 386, 387,
	392, 0, 393, 0, 0, 0, 401, 406, 407, 408,
	410, 411, 412, 413, 0, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 0, 385, 266, 224, 225, 420,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 384, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 418, 317, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	366, 378, 396, 399, 0, 0, 0, 229, 398, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 394, 301, 302, 303,
	304, 269, 0, 246, 397, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 265, 271, 409, 273, 245, 316,
	267, 375, 279, 0, 402, 0, 403, 0, 0, 0,
	0, 308, 276, 340, 280, 286, 329, 374, 314, 334,
	243, 365, 341, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 284, 124, 325, 264,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 0, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 220, 221,
	222, 223, 350, 0, 0, 381, 382, 383, 405, 367,
	0, 417, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	342, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 748, 749, 0, 0, 0, 0, 241, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 347, 363, 242, 338, 376, 247, 345, 237,
	312, 335, 0, 0, 234, 361, 344, 294, 277, 278,
	233, 0, 330, 257, 270, 254, 310, 0, 360, 388,
	253, 379, 730, 371, 236, 729, 370, 309, 357, 362,
	295, 289, 235, 359, 293, 288, 281, 261, 404, 274,
	321, 287, 322, 275, 299, 298, 300, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	282, 0, 0, 0, 389, 0, 333, 315, 0, 0,
	0, 331, 285, 358, 323, 364, 348, 372, 327, 324,
	227, 349, 256, 296, 238, 240, 252, 258, 260, 262,
	263, 305, 306, 318, 337, 351, 352, 353, 255, 248,
	332, 249, 272, 250, 228, 339, 251, 230, 319, 356,
	0, 268, 328, 292, 231, 291, 320, 355, 354, 239,
	380, 386, 387, 392, 0, 393, 0, 0, 0, 401,
	406, 407, 408, 410, 411, 412, 413, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 385, 266,
	224, 225, 420, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 384, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 418, 317, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 366, 378, 396, 399, 0, 0, 0,
	229, 398, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 394,
	301, 302, 303, 304, 269, 0, 246, 397, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 265, 271, 409,
	273, 245, 316, 267, 375, 279, 0, 402, 0, 403,
	0, 0, 0, 0, 750, 745, 746, 280, 286, 329,
	374, 314, 334, 243, 365, 341, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 284,
	0, 325, 264, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 0, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 220, 221, 222, 223, 350, 0, 0, 381, 382,
	383, 405, 367, 0, 417, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 2167, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 342, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 241, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 347, 363, 242, 338, 376,
	247, 345, 237, 312, 335, 0, 0, 234, 361, 344,
	294, 277, 278, 233, 0, 330, 257, 270, 254, 310,
	0, 360, 388, 253, 379, 0, 371, 236, 0, 370,
	309, 357, 362, 295, 289, 235, 359, 293, 288, 281,
	261, 404, 274, 321, 287, 322, 275, 299, 298, 300,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 2170, 0, 0, 2169, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 282, 0, 0, 0, 389, 0, 333,
	315, 0, 0, 0, 331, 285, 358, 323, 364, 348,
	372, 327, 324, 227, 349, 256, 296, 238, 240, 252,
	258, 260, 262, 263, 305, 306, 318, 337, 351, 352,
	353, 255, 248, 332, 249, 272, 250, 228, 339, 251,
	230, 319, 356, 0, 268, 328, 292, 231, 291, 320,
	355, 354, 239, 380, 386, 387, 392, 0, 393, 0,
	0, 0, 401, 406, 407, 408, 410, 411, 412, 413,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 385, 266, 224, 225, 420, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 384, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 418,
	317, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 366, 378, 396, 399,
	0, 0, 0, 229, 398, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 394, 301, 302, 303, 304, 269, 0, 246,
	397, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	265, 271, 409, 273, 245, 316, 267, 375, 279, 0,
	402, 0, 403, 0, 0, 0, 0, 308, 276, 340,
	280, 286, 329, 374, 314, 334, 243, 365, 341, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 284, 0, 325, 264, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 0, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 220, 221, 222, 223, 350, 0,
	0, 381, 382, 383, 405, 367, 0, 417, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 1142, 0, 283,
	0, 0, 0, 0, 0, 0, 342, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	1140, 0, 0, 0, 241, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1138, 0, 0, 0, 0, 0, 0, 232, 347, 363,
	242, 338, 376, 247, 345, 237, 312, 335, 0, 0,
	234, 361, 344, 294, 277, 278, 233, 0, 330, 257,
	270, 254, 310, 0, 360, 388, 253, 379, 0, 371,
	236, 0, 370, 309, 357, 362, 295, 289, 235, 359,
	293, 288, 281, 261, 404, 274, 321, 287, 322, 275,
	299, 298, 300, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 282, 0, 0, 0,
	389, 0, 333, 315, 0, 0, 0, 331, 285, 358,
	323, 364, 348, 372, 327, 324, 227, 349, 256, 296,
	238, 240, 252, 258, 260, 262, 263, 305, 306, 318,
	337, 351, 352, 353, 255, 248, 332, 249, 272, 250,
	228, 339, 251, 230, 319, 356, 0, 268, 328, 292,
	231, 291, 320, 355, 354, 239, 380, 386, 387, 392,
	0, 393, 0, 0, 0, 401, 406, 407, 408, 410,
	411, 412, 413, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 385, 266, 224, 225, 420, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 384, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 418, 317, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 366,
	378, 396, 399, 0, 0, 0, 229, 398, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 394, 301, 302, 303, 304,
	269, 0, 246, 397, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 265, 271, 409, 273, 245, 316, 267,
	375, 279, 0, 402, 0, 403, 0, 0, 0, 0,
	308, 276, 340, 280, 286, 329, 374, 314, 334, 243,
	365, 341, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 284, 0, 325, 264, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 0, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 220, 221, 222,
	223, 350, 0, 0, 381, 382, 383, 405, 367, 0,
	417, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	1136, 0, 283, 0, 0, 0, 0, 0, 0, 342,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 1140, 0, 0, 0, 241, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1138, 0, 0, 0, 0, 0, 0,
	232, 347, 363, 242, 338, 376, 247, 345, 237, 312,
	335, 0, 0, 234, 361, 344, 294, 277, 278, 233,
	0, 330, 257, 270, 254, 310, 0, 360, 388, 253,
	379, 0, 371, 236, 0, 370, 309, 357, 362, 295,
	289, 235, 359, 293, 288, 281, 261, 404, 274, 321,
	287, 322, 275, 299, 298, 300, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 282,
	0, 0, 0, 389, 0, 333, 315, 0, 0, 0,
	331, 285, 358, 323, 364, 348, 372, 327, 324, 227,
	349, 256, 296, 238, 240, 252, 258, 260, 262, 263,
	305, 306, 318, 337, 351, 352, 353, 255, 248, 332,
	249, 272, 250, 228, 339, 251, 230, 319, 356, 0,
	268, 328, 292, 231, 291, 320, 355, 354, 239, 380,
	386, 387, 392, 0, 393, 0, 0, 0, 401, 406,
	407, 408, 410, 411, 412, 413, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 0, 385, 266, 224,
	225, 420, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 384, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 418, 317, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 366, 378, 396, 399, 0, 0, 0, 229,
	398, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 394, 301,
	302, 303, 304, 269, 0, 246, 397, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 265, 271, 409, 273,
	245, 316, 267, 375, 279, 0, 402, 0, 403, 0,
	0, 0, 0, 308, 276, 340, 280, 286, 329, 374,
	314, 334, 243, 365, 341, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 284, 0,
	325, 264, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 0, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	220, 221, 222, 223, 350, 0, 0, 381, 382, 383,
	405, 367, 0, 417, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 342, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2811, 0, 176, 587, 0, 0, 0, 0, 0,
	241, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 347, 363, 242, 338, 376, 247,
	345, 237, 312, 335, 0, 0, 234, 361, 344, 294,
	277, 278, 233, 0, 330, 257, 270, 254, 310, 0,
	360, 388, 253, 379, 0, 371, 236, 0, 370, 309,
	357, 362, 295, 289, 235, 359, 293, 288, 281, 261,
	404, 274, 321, 287, 322, 275, 299, 298, 300, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 282, 0, 0, 0, 389, 0, 333, 315,
	0, 0, 0, 331, 285, 358, 323, 364, 348, 372,
	327, 324, 227, 349, 256, 296, 238, 240, 252, 258,
	260, 262, 263, 305, 306, 318, 337, 351, 352, 353,
	255, 248, 332, 249, 272, 250, 228, 339, 251, 230,
	319, 356, 0, 268, 328, 292, 231, 291, 320, 355,
	354, 239, 380, 386, 387, 392, 0, 393, 0, 0,
	0, 401, 406, 407, 408, 410, 411, 412, 413, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	385, 266, 224, 225, 420, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 384, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 418, 317,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 366, 378, 396, 399, 0,
	0, 0, 229, 398, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 394, 301, 302, 303, 304, 269, 0, 246, 397,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 265,
	271, 409, 273, 245, 316, 267, 375, 279, 0, 402,
	0, 403, 0, 0, 0, 0, 308, 276, 340, 280,
	286, 329, 374, 314, 334, 243, 365, 341, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 284, 0, 325, 264, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 0, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 220, 221, 222, 223, 350, 0, 0,
	381, 382, 383, 405, 367, 0, 417, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 342, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 1140,
	0, 0, 0, 241, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2525,
	0, 0, 0, 0, 0, 0, 232, 347, 363, 242,
	338, 376, 247, 345, 237, 312, 335, 0, 0, 234,
	361, 344, 294, 277, 278, 233, 0, 330, 257, 270,
	254, 310, 0, 360, 388, 253, 379, 0, 371, 236,
	0, 370, 309, 357, 362, 295, 289, 235, 359, 293,
	288, 281, 261, 404, 274, 321, 287, 322, 275, 299,
	298, 300, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 282, 0, 0, 0, 389,
	0, 333, 315, 0, 0, 0, 331, 285, 358, 323,
	364, 348, 372, 327, 324, 227, 349, 256, 296, 238,
	240, 252, 258, 260, 262, 263, 305, 306, 318, 337,
	351, 352, 353, 255, 248, 332, 249, 272, 250, 228,
	339, 251, 230, 319, 356, 0, 268, 328, 292, 231,
	291, 320, 355, 354, 239, 380, 386, 387, 392, 0,
	393, 0, 0, 0, 401, 406, 407, 408, 410, 411,
	412, 413, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 385, 266, 224, 225, 420, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	384, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 418, 317, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 366, 378,
	396, 399, 0, 0, 0, 229, 398, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 394, 301, 302, 303, 304, 269,
	0, 246, 397, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 265, 271, 409, 273, 245, 316, 267, 375,
	279, 0, 402, 0, 403, 0, 0, 0, 0, 308,
	276, 340, 280, 286, 329, 374, 314, 334, 243, 365,
	341, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 284, 0, 325, 264, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	0, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 220, 221, 222, 223,
	350, 0, 0, 381, 382, 383, 405, 367, 0, 417,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 342, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 1140, 0, 0, 0, 241, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1138, 0, 0, 0, 0, 0, 0, 232,
	347, 363, 242, 338, 376, 247, 345, 237, 312, 335,
	0, 0, 234, 361, 344, 294, 277, 278, 233, 0,
	330, 257, 270, 254, 310, 0, 360, 388, 253, 379,
	0, 371, 236, 0, 370, 309, 357, 362, 295, 289,
	235, 359, 293, 288, 281, 261, 404, 274, 321, 287,
	322, 275, 299, 298, 300, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 282, 0,
	0, 0, 389, 0, 333, 315, 0, 0, 0, 331,
	285, 358, 323, 364, 348, 372, 327, 324, 227, 349,
	256, 296, 238, 240, 252, 258, 260, 262, 263, 305,
	306, 318, 337, 351, 352, 353, 255, 248, 332, 249,
	272, 250, 228, 339, 251, 230, 319, 356, 0, 268,
	328, 292, 231, 291, 320, 355, 354, 239, 380, 386,
	387, 392, 0, 393, 0, 0, 0, 401, 406, 407,
	408, 410, 411, 412, 413, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 385, 266, 224, 225,
	420, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 384, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 418, 317, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 366, 378, 396, 399, 0, 0, 0, 229, 398,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 394, 301, 302,
	303, 304, 269, 0, 246, 397, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 265, 271, 409, 273, 245,
	316, 267, 375, 279, 0, 402, 0, 403, 0, 0,
	0, 0, 308, 276, 340, 280, 286, 329, 374, 314,
	334, 243, 365, 341, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 284, 0, 325,
	264, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 0, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 220,
	221, 222, 223, 350, 0, 0, 381, 382, 383, 405,
	367, 0, 417, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1895, 0, 0, 0,
	0, 259, 0, 0, 283, 0, 0, 0, 0, 0,
	0, 342, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 1897, 0, 0, 0, 241,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 347, 363, 242, 338, 376, 247, 345,
	237, 312, 335, 0, 0, 234, 361, 344, 294, 277,
	278, 233, 0, 330, 257, 270, 254, 310, 0, 360,
	388, 253, 379, 0, 371, 236, 0, 370, 309, 357,
	362, 295, 289, 235, 359, 293, 288, 281, 261, 404,
	274, 321, 287, 322, 275, 299, 298, 300, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 282, 0, 0, 0, 389, 0, 333, 315, 0,
	0, 0, 331, 285, 358, 323, 364, 348, 372, 327,
	324, 227, 349, 256, 296, 238, 240, 252, 258, 260,
	262, 263, 305, 306, 318, 337, 351, 352, 353, 255,
	248, 332, 249, 272, 250, 228, 339, 251, 230, 319,
	356, 0, 268, 328, 292, 231, 291, 320, 355, 354,
	239, 380, 386, 387, 392, 0, 393, 0, 0, 0,
	401, 406, 407, 408, 410, 411, 412, 413, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 385,
	266, 224, 225, 420, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 384, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 418, 317, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 366, 378, 396, 399, 0, 0,
	0, 229, 398, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	394, 301, 302, 303, 304, 269, 0, 246, 397, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 265, 271,
	409, 273, 245, 316, 267, 375, 279, 0, 402, 0,
	403, 0, 0, 0, 0, 308, 276, 340, 280, 286,
	329, 374, 314, 334, 243, 365, 341, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	284, 0, 325, 264, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 0, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 220, 221, 222, 223, 350, 0, 0, 381,
	382, 383, 405, 367, 0, 417, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 1910, 0, 283, 0, 0,
	0, 0, 0, 0, 342, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 1140, 0,
	0, 0, 241, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 347, 363, 242, 338,
	376, 247, 345, 237, 312, 335, 0, 0, 234, 361,
	344, 294, 277, 278, 233, 0, 330, 257, 270, 254,
	310, 0, 360, 388, 253, 379, 0, 371, 236, 0,
	370, 309, 357, 362, 295, 289, 235, 359, 293, 288,
	281, 261, 404, 274, 321, 287, 322, 275, 299, 298,
	300, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 282, 0, 0, 0, 389, 0,
	333, 315, 0, 0, 0, 331, 285, 358, 323, 364,
	348, 372, 327, 324, 227, 349, 256, 296, 238, 240,
	252, 258, 260, 262, 263, 305, 306, 318, 337, 351,
	352, 353, 255, 248, 332, 249, 272, 250, 228, 339,
	251, 230, 319, 356, 0, 268, 328, 292, 231, 291,
	320, 355, 354, 239, 380, 386, 387, 392, 0, 393,
	0, 0, 0, 401, 406, 407, 408, 410, 411, 412,
	413, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 385, 266, 224, 225, 420, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 384,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	418, 317, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 366, 378, 396,
	399, 0, 0, 0, 229, 398, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 394, 301, 302, 303, 304, 269, 0,
	246, 397, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 265, 271, 409, 273, 245, 316, 267, 375, 279,
	0, 402, 0, 403, 0, 0, 0, 0, 308, 276,
	340, 280, 286, 329, 374, 314, 334, 243, 365, 341,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 284, 0, 325, 264, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 0,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 220, 221, 222, 223, 350,
	0, 0, 381, 382, 383, 405, 367, 0, 417, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	283, 0, 0, 0, 0, 0, 0, 342, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2889, 0, 176, 0,
	0, 0, 0, 0, 0, 241, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 347,
	363, 242, 338, 376, 247, 345, 237, 312, 335, 0,
	0, 234, 361, 344, 294, 277, 278, 233, 0, 330,
	257, 270, 254, 310, 0, 360, 388, 253, 379, 0,
	371, 236, 0, 370, 309, 357, 362, 295, 289, 235,
	359, 293, 288, 281, 261, 404, 274, 321, 287, 322,
	275, 299, 298, 300, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 282, 0, 0,
	0, 389, 0, 333, 315, 0, 0, 0, 331, 285,
	358, 323, 364, 348, 372, 327, 324, 227, 349, 256,
	296, 238, 240, 252, 258, 260, 262, 263, 305, 306,
	318, 337, 351, 352, 353, 255, 248, 332, 249, 272,
	250, 228, 339, 251, 230, 319, 356, 0, 268, 328,
	292, 231, 291, 320, 355, 354, 239, 380, 386, 387,
	392, 0, 393, 0, 0, 0, 401, 406, 407, 408,
	410, 411, 412, 413, 0, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 0, 385, 266, 224, 225, 420,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 384, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 418, 317, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	366, 378, 396, 399, 0, 0, 0, 229, 398, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 394, 301, 302, 303,
	304, 269, 0, 246, 397, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 265, 271, 409, 273, 245, 316,
	267, 375, 279, 0, 402, 0, 403, 0, 0, 0,
	0, 308, 276, 340, 280, 286, 329, 374, 314, 334,
	243, 365, 341, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 284, 0, 325, 264,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 0, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 220, 221,
	222, 223, 350, 0, 0, 381, 382, 383, 405, 367,
	0, 417, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	342, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 587, 0, 0, 0, 0, 0, 241, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 347, 363, 242, 338, 376, 247, 345, 237,
	312, 335, 0, 0, 234, 361, 344, 294, 277, 278,
	233, 0, 330, 257, 270, 254, 310, 0, 360, 388,
	253, 379, 0, 371, 236, 0, 370, 309, 357, 362,
	295, 289, 235, 359, 293, 288, 281, 261, 404, 274,
	321, 287, 322, 275, 299, 298, 300, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	282, 0, 0, 0, 389, 0, 333, 315, 0, 0,
	0, 331, 285, 358, 323, 364, 348, 372, 327, 324,
	227, 349, 256, 296, 238, 240, 252, 258, 260, 262,
	263, 305, 306, 318, 337, 351, 352, 353, 255, 248,
	332, 249, 272, 250, 228, 339, 251, 230, 319, 356,
	0, 268, 328, 292, 231, 291, 320, 355, 354, 239,
	380, 386, 387, 392, 0, 393, 0, 0, 0, 401,
	406, 407, 408, 410, 411, 412, 413, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 385, 266,
	224, 225, 420, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 384, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 418, 317, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 366, 378, 396, 399, 0, 0, 0,
	229, 398, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 394,
	301, 302, 303, 304, 269, 0, 246, 397, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 265, 271, 409,
	273, 245, 316, 267, 375, 279, 0, 402, 0, 403,
	0, 0, 0, 0, 308, 276, 340, 280, 286, 329,
	374, 314, 334, 243, 365, 341, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 284,
	0, 325, 264, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 0, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 220, 221, 222, 223, 350, 0, 0, 381, 382,
	383, 405, 367, 0, 417, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 342, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2826, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 241, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 347, 363, 242, 338, 376,
	247, 345, 237, 312, 335, 0, 0, 234, 361, 344,
	294, 277, 278, 233, 0, 330, 257, 270, 254, 310,
	0, 360, 388, 253, 379, 0, 371, 236, 0, 370,
	309, 357, 362, 295, 289, 235, 359, 293, 288, 281,
	261, 404, 274, 321, 287, 322, 275, 299, 298, 300,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 282, 0, 0, 0, 389, 0, 333,
	315, 0, 0, 0, 331, 285, 358, 323, 364, 348,
	372, 327, 324, 227, 349, 256, 296, 238, 240, 252,
	258, 260, 262, 263, 305, 306, 318, 337, 351, 352,
	353, 255, 248, 332, 249, 272, 250, 228, 339, 251,
	230, 319, 356, 0, 268, 328, 292, 231, 291, 320,
	355, 354, 239, 380, 386, 387, 392, 0, 393, 0,
	0, 0, 401, 406, 407, 408, 410, 411, 412, 413,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 385, 266, 224, 225, 420, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 384, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 418,
	317, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 366, 378, 396, 399,
	0, 0, 0, 229, 398, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 394, 301, 302, 303, 304, 269, 0, 246,
	397, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	265, 271, 409, 273, 245, 316, 267, 375, 279, 0,
	402, 0, 403, 0, 0, 0, 0, 308, 276, 340,
	280, 286, 329, 374, 314, 334, 243, 365, 341, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 284, 0, 325, 264, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 0, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 220, 221, 222, 223, 350, 0,
	0, 381, 382, 383, 405, 367, 0, 417, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 342, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 241, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 347, 363,
	242, 338, 376, 247, 345, 237, 312, 335, 0, 0,
	234, 361, 344, 294, 277, 278, 233, 0, 330, 257,
	270, 254, 310, 0, 360, 388, 253, 379, 0, 371,
	236, 0, 370, 309, 357, 362, 295, 289, 235, 359,
	293, 288, 281, 261, 404, 274, 321, 287, 322, 275,
	299, 298, 300, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	2767, 0, 0, 346, 0, 0, 282, 0, 0, 0,
	389, 0, 333, 315, 0, 0, 0, 331, 285, 358,
	323, 364, 348, 372, 327, 324, 227, 349, 256, 296,
	238, 240, 252, 258, 260, 262, 263, 305, 306, 318,
	337, 351, 352, 353, 255, 248, 332, 249, 272, 250,
	228, 339, 251, 230, 319, 356, 0, 268, 328, 292,
	231, 291, 320, 355, 354, 239, 380, 386, 387, 392,
	0, 393, 0, 0, 0, 401, 406, 407, 408, 410,
	411, 412, 413, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 385, 266, 224, 225, 420, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 384, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 418, 317, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 366,
	378, 396, 399, 0, 0, 0, 229, 398, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 394, 301, 302, 303, 304,
	269, 0, 246, 397, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 265, 271, 409, 273, 245, 316, 267,
	375, 279, 0, 402, 0, 403, 0, 0, 0, 0,
	308, 276, 340, 280, 286, 329, 374, 314, 334, 243,
	365, 341, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 284, 0, 325, 264, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 0, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 220, 221, 222,
	223, 350, 0, 0, 381, 382, 383, 405, 367, 0,
	417, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 342,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2606, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 241, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 347, 363, 242, 338, 376, 247, 345, 237, 312,
	335, 0, 0, 234, 361, 344, 294, 277, 278, 233,
	0, 330, 257, 270, 254, 310, 0, 360, 388, 253,
	379, 0, 371, 236, 0, 370, 309, 357, 362, 295,
	289, 235, 359, 293, 288, 281, 261, 404, 274, 321,
	287, 322, 275, 299, 298, 300, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 282,
	0, 0, 0, 389, 0, 333, 315, 0, 0, 0,
	331, 285, 358, 323, 364, 348, 372, 327, 324, 227,
	349, 256, 296, 238, 240, 252, 258, 260, 262, 263,
	305, 306, 318, 337, 351, 352, 353, 255, 248, 332,
	249, 272, 250, 228, 339, 251, 230, 319, 356, 0,
	268, 328, 292, 231, 291, 320, 355, 354, 239, 380,
	386, 387, 392, 0, 393, 0, 0, 0, 401, 406,
	407, 408, 410, 411, 412, 413, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 0, 385, 266, 224,
	225, 420, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 384, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 418, 317, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 366, 378, 396, 399, 0, 0, 0, 229,
	398, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 394, 301,
	302, 303, 304, 269, 0, 246, 397, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 265, 271, 409, 273,
	245, 316, 267, 375, 279, 0, 402, 0, 403, 0,
	0, 0, 0, 308, 276, 340, 280, 286, 329, 374,
	314, 334, 243, 365, 341, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 284, 0,
	325, 264, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 0, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	220, 221, 222, 223, 350, 0, 0, 381, 382, 383,
	405, 367, 0, 417, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 342, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	241, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 347, 363, 242, 338, 376, 247,
	345, 237, 312, 335, 0, 0, 234, 361, 344, 294,
	277, 278, 233, 0, 330, 257, 270, 254, 310, 0,
	360, 388, 253, 379, 0, 371, 236, 0, 370, 309,
	357, 362, 295, 289, 235, 359, 293, 288, 281, 261,
	404, 274, 321, 287, 322, 275, 299, 298, 300, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 2650, 0, 0, 346,
	0, 0, 282, 0, 0, 0, 389, 0, 333, 315,
	0, 0, 0, 331, 285, 358, 323, 364, 348, 372,
	327, 324, 227, 349, 256, 296, 238, 240, 252, 258,
	260, 262, 263, 305, 306, 318, 337, 351, 352, 353,
	255, 248, 332, 249, 272, 250, 228, 339, 251, 230,
	319, 356, 0, 268, 328, 292, 231, 291, 320, 355,
	354, 239, 380, 386, 387, 392, 0, 393, 0, 0,
	0, 401, 406, 407, 408, 410, 411, 412, 413, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	385, 266, 224, 225, 420, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 384, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 418, 317,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 366, 378, 396, 399, 0,
	0, 0, 229, 398, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 394, 301, 302, 303, 304, 269, 0, 246, 397,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 265,
	271, 409, 273, 245, 316, 267, 375, 279, 0, 402,
	0, 403, 0, 0, 0, 0, 308, 276, 340, 280,
	286, 329, 374, 314, 334, 243, 365, 341, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 284, 0, 325, 264, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 0, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 220, 221, 222, 223, 350, 0, 0,
	381, 382, 383, 405, 367, 0, 417, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 342, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 241, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 347, 363, 242,
	338, 376, 247, 345, 237, 312, 335, 0, 0, 234,
	361, 344, 294, 277, 278, 233, 0, 330, 257, 270,
	254, 310, 0, 360, 388, 253, 379, 0, 371, 236,
	0, 370, 309, 357, 362, 295, 289, 235, 359, 293,
	288, 281, 261, 404, 274, 321, 287, 322, 275, 299,
	298, 300, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 282, 0, 0, 0, 389,
	0, 333, 315, 0, 0, 0, 331, 285, 358, 323,
	364, 348, 372, 327, 324, 227, 349, 256, 296, 238,
	240, 252, 258, 260, 262, 263, 305, 306, 318, 337,
	351, 352, 353, 255, 248, 332, 249, 272, 250, 228,
	339, 251, 230, 319, 356, 0, 268, 328, 292, 231,
	291, 320, 355, 354, 239, 380, 386, 387, 392, 0,
	393, 0, 0, 0, 401, 406, 407, 408, 410, 411,
	412, 413, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 385, 266, 224, 225, 420, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	384, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 418, 317, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 366, 378,
	396, 399, 0, 0, 0, 229, 398, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 394, 301, 302, 303, 304, 269,
	0, 246, 397, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 265, 271, 409, 273, 245, 316, 267, 375,
	279, 0, 402, 0, 403, 0, 0, 0, 0, 308,
	276, 340, 280, 286, 329, 374, 314, 334, 243, 365,
	341, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 284, 0, 325, 264, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	0, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 220, 221, 222, 223,
	350, 0, 0, 381, 382, 383, 405, 367, 0, 417,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 342, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 241, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	347, 363, 242, 338, 376, 247, 345, 237, 312, 335,
	0, 0, 234, 361, 344, 294, 277, 278, 233, 0,
	330, 257, 270, 254, 310, 0, 360, 388, 253, 379,
	0, 371, 236, 0, 370, 309, 357, 362, 295, 289,
	235, 359, 293, 288, 281, 261, 404, 274, 321, 287,
	322, 275, 299, 298, 300, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 282, 0,
	0, 0, 389, 0, 333, 315, 0, 0, 0, 331,
	285, 358, 323, 364, 348, 372, 327, 324, 227, 349,
	256, 296, 238, 240, 252, 258, 260, 262, 263, 305,
	306, 318, 337, 351, 352, 353, 255, 248, 332, 249,
	272, 250, 228, 339, 251, 230, 319, 356, 0, 268,
	328, 292, 231, 291, 320, 355, 354, 239, 380, 386,
	387, 392, 0, 393, 0, 0, 0, 401, 406, 407,
	408, 410, 411, 412, 413, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 385, 266, 224, 225,
	420, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 384, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 418, 317, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 366, 378, 396, 399, 0, 0, 0, 229, 398,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 394, 301, 302,
	303, 304, 269, 0, 246, 397, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 265, 271, 409, 273, 245,
	316, 267, 375, 279, 0, 402, 0, 403, 0, 0,
	0, 0, 308, 276, 340, 280, 286, 329, 374, 314,
	334, 243, 365, 341, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 284, 0, 325,
	264, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 0, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 220,
	221, 222, 223, 350, 0, 0, 381, 382, 383, 405,
	367, 0, 417, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 283, 0, 0, 0, 0, 0,
	0, 342, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 241,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 347, 363, 242, 338, 376, 247, 345,
	237, 312, 335, 0, 0, 234, 361, 344, 294, 277,
	278, 233, 0, 330, 257, 270, 254, 310, 0, 360,
	388, 253, 379, 0, 371, 236, 0, 370, 309, 357,
	362, 295, 289, 235, 359, 293, 288, 281, 261, 404,
	274, 321, 287, 322, 275, 299, 298, 300, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 282, 0, 0, 0, 389, 0, 333, 315, 0,
	0, 0, 331, 285, 358, 323, 364, 348, 372, 327,
	324, 227, 349, 256, 296, 238, 240, 252, 258, 260,
	262, 263, 305, 306, 318, 337, 351, 352, 353, 255,
	248, 332, 249, 272, 250, 228, 339, 251, 230, 319,
	356, 0, 268, 328, 292, 231, 291, 320, 355, 354,
	239, 380, 386, 387, 392, 0, 393, 0, 0, 0,
	401, 406, 407, 408, 410, 411, 412, 413, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 385,
	266, 224, 225, 420, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 384, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 418, 317, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 366, 378, 396, 399, 0, 0,
	0, 229, 398, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	394, 301, 302, 303, 304, 269, 0, 246, 397, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 265, 271,
	409, 273, 245, 316, 267, 375, 279, 0, 402, 0,
	403, 0, 0, 0, 0, 308, 276, 340, 280, 286,
	329, 374, 314, 334, 243, 365, 341, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	284, 0, 325, 264, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 0, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 220, 221, 222, 223, 350, 0, 0, 381,
	382, 383, 405, 367, 0, 417, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 342, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 2317, 0,
	0, 0, 241, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 347, 363, 242, 338,
	376, 247, 345, 237, 312, 335, 0, 0, 234, 361,
	344, 294, 277, 278, 233, 0, 330, 257, 270, 254,
	310, 0, 360, 388, 253, 379, 0, 371, 236, 0,
	370, 309, 357, 362, 295, 289, 235, 359, 293, 288,
	281, 261, 404, 274, 321, 287, 322, 275, 299, 298,
	300, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 282, 0, 0, 0, 389, 0,
	333, 315, 0, 0, 0, 331, 285, 358, 323, 364,
	348, 372, 327, 324, 227, 349, 256, 296, 238, 240,
	252, 258, 260, 262, 263, 305, 306, 318, 337, 351,
	352, 353, 255, 248, 332, 249, 272, 250, 228, 339,
	251, 230, 319, 356, 0, 268, 328, 292, 231, 291,
	320, 355, 354, 239, 380, 386, 387, 392, 0, 393,
	0, 0, 0, 401, 406, 407, 408, 410, 411, 412,
	413, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 385, 266, 224, 225, 420, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 384,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	418, 317, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 366, 378, 396,
	399, 0, 0, 0, 229, 398, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 394, 301, 302, 303, 304, 269, 0,
	246, 397, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 265, 271, 409, 273, 245, 316, 267, 375, 279,
	0, 402, 0, 403, 0, 0, 0, 0, 308, 276,
	340, 280, 286, 329, 374, 314, 334, 243, 365, 341,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 284, 0, 325, 264, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 0,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 220, 221, 222, 223, 350,
	0, 0, 381, 382, 383, 405, 367, 0, 417, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	283, 0, 0, 0, 0, 0, 0, 342, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 241, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 347,
	363, 242, 338, 376, 247, 345, 237, 312, 335, 0,
	0, 234, 361, 344, 294, 277, 278, 233, 0, 330,
	257, 270, 254, 310, 0, 360, 388, 253, 379, 0,
	371, 236, 0, 370, 309, 357, 362, 295, 289, 235,
	359, 293, 288, 281, 261, 404, 274, 321, 287, 322,
	275, 299, 298, 300, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 282, 0, 0,
	0, 389, 0, 333, 315, 0, 0, 0, 331, 285,
	358, 323, 364, 348, 372, 327, 324, 227, 349, 256,
	296, 238, 240, 252, 258, 260, 262, 263, 305, 306,
	318, 337, 351, 352, 353, 255, 248, 332, 249, 272,
	250, 228, 339, 251, 230, 319, 356, 0, 268, 328,
	292, 231, 291, 320, 355, 354, 239, 380, 386, 387,
	392, 0, 393, 0, 0, 0, 401, 406, 407, 408,
	410, 411, 412, 413, 0, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 0, 385, 266, 224, 225, 420,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 384, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 418, 317, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	366, 378, 396, 399, 0, 0, 0, 229, 398, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 394, 301, 302, 303,
	304, 269, 0, 246, 397, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 265, 271, 409, 273, 245, 316,
	267, 375, 279, 0, 402, 0, 403, 0, 0, 0,
	0, 308, 276, 340, 280, 286, 329, 374, 314, 334,
	243, 365, 341, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 284, 0, 325, 264,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 0, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 220, 221,
	222, 223, 350, 0, 0, 381, 382, 383, 405, 367,
	0, 417, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	342, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 1140, 0, 0, 0, 241, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 347, 363, 242, 338, 376, 247, 345, 237,
	312, 335, 0, 0, 234, 361, 344, 294, 277, 278,
	233, 0, 330, 257, 270, 254, 310, 0, 360, 388,
	253, 379, 0, 371, 236, 0, 370, 309, 357, 362,
	295, 289, 235, 359, 293, 288, 281, 261, 404, 274,
	321, 287, 322, 275, 299, 298, 300, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	282, 0, 0, 0, 389, 0, 333, 315, 0, 0,
	0, 331, 285, 358, 323, 364, 348, 372, 327, 324,
	227, 349, 256, 296, 238, 240, 252, 258, 260, 262,
	263, 305, 306, 318, 337, 351, 352, 353, 255, 248,
	332, 249, 272, 250, 228, 339, 251, 230, 319, 356,
	0, 268, 328, 292, 231, 291, 320, 355, 354, 239,
	380, 386, 387, 392, 0, 393, 0, 0, 0, 401,
	406, 407, 408, 410, 411, 412, 413, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 385, 266,
	224, 225, 420, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 384, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 418, 317, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 366, 378, 396, 399, 0, 0, 0,
	229, 398, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 394,
	301, 302, 303, 304, 269, 0, 246, 397, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 265, 271, 409,
	273, 245, 316, 267, 375, 279, 0, 402, 0, 403,
	0, 0, 0, 0, 308, 276, 340, 280, 286, 329,
	374, 314, 334, 243, 365, 341, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 284,
	0, 325, 264, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 0, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 220, 221, 222, 223, 350, 0, 0, 381, 382,
	383, 405, 367, 0, 417, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 342, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 1897, 0, 0,
	0, 241, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 347, 363, 242, 338, 376,
	247, 345, 237, 312, 335, 0, 0, 234, 361, 344,
	294, 277, 278, 233, 0, 330, 257, 270, 254, 310,
	0, 360, 388, 253, 379, 0, 371, 236, 0, 370,
	309, 357, 362, 295, 289, 235, 359, 293, 288, 281,
	261, 404, 274, 321, 287, 322, 275, 299, 298, 300,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 282, 0, 0, 0, 389, 0, 333,
	315, 0, 0, 0, 331, 285, 358, 323, 364, 348,
	372, 327, 324, 227, 349, 256, 296, 238, 240, 252,
	258, 260, 262, 263, 305, 306, 318, 337, 351, 352,
	353, 255, 248, 332, 249, 272, 250, 228, 339, 251,
	230, 319, 356, 0, 268, 328, 292, 231, 291, 320,
	355, 354, 239, 380, 386, 387, 392, 0, 393, 0,
	0, 0, 401, 406, 407, 408, 410, 411, 412, 413,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 385, 266, 224, 225, 420, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 384, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 418,
	317, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 366, 378, 396, 399,
	0, 0, 0, 229, 398, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 394, 301, 302, 303, 304, 269, 0, 246,
	397, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	265, 271, 409, 273, 245, 316, 267, 375, 279, 0,
	402, 0, 403, 0, 0, 0, 0, 308, 276, 340,
	280, 286, 329, 374, 314, 334, 243, 365, 341, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 284, 0, 325, 264, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 0, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 220, 221, 222, 223, 350, 0,
	0, 381, 382, 383, 405, 367, 0, 417, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 342, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 241, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 347, 363,
	242, 338, 376, 247, 345, 237, 312, 335, 0, 0,
	234, 361, 344, 294, 277, 278, 233, 0, 330, 257,
	270, 254, 310, 0, 360, 388, 253, 379, 0, 371,
	236, 0, 370, 309, 357, 362, 295, 289, 235, 359,
	293, 288, 281, 261, 404, 274, 321, 287, 322, 275,
	299, 298, 300, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 282, 0, 0, 0,
	389, 0, 333, 315, 0, 0, 0, 331, 285, 358,
	323, 364, 348, 372, 327, 324, 227, 349, 256, 296,
	238, 240, 252, 258, 260, 262, 263, 305, 306, 318,
	337, 351, 352, 353, 255, 248, 332, 249, 272, 250,
	228, 339, 251, 230, 319, 356, 0, 268, 328, 292,
	231, 291, 320, 355, 354, 239, 380, 386, 387, 392,
	0, 393, 0, 0, 0, 401, 406, 407, 408, 410,
	411, 412, 413, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 385, 266, 224, 225, 420, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 384, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 418, 317, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 366,
	378, 396, 399, 0, 0, 0, 229, 398, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 394, 301, 302, 303, 304,
	269, 0, 246, 397, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 265, 271, 409, 273, 245, 316, 267,
	375, 279, 0, 402, 0, 403, 0, 0, 0, 0,
	308, 276, 340, 280, 286, 329, 374, 314, 334, 243,
	365, 341, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 284, 0, 325, 264, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 0, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 220, 221, 222,
	223, 350, 0, 0, 381, 382, 383, 405, 367, 0,
	417, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 342,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 241, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1925, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 347, 363, 242, 338, 376, 247, 345, 237, 312,
	335, 0, 0, 234, 361, 344, 294, 277, 278, 233,
	0, 330, 257, 270, 254, 310, 0, 360, 388, 253,
	379, 0, 371, 236, 0, 370, 309, 357, 362, 295,
	289, 235, 359, 293, 288, 281, 261, 404, 274, 321,
	287, 322, 275, 299, 298, 300, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 282,
	0, 0, 0, 389, 0, 333, 315, 0, 0, 0,
	331, 285, 358, 323, 364, 348, 372, 327, 324, 227,
	349, 256, 296, 238, 240, 252, 258, 260, 262, 263,
	305, 306, 318, 337, 351, 352, 353, 255, 248, 332,
	249, 272, 250, 228, 339, 251, 230, 319, 356, 0,
	268, 328, 292, 231, 291, 320, 355, 354, 239, 380,
	386, 387, 392, 0, 393, 0, 0, 0, 401, 406,
	407, 408, 410, 411, 412, 413, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 0, 385, 266, 224,
	225, 420, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 384, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 418, 317, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 366, 378, 396, 399, 0, 0, 0, 229,
	398, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 394, 301,
	302, 303, 304, 269, 0, 246, 397, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 265, 271, 409, 273,
	245, 316, 267, 375, 279, 0, 402, 0, 403, 0,
	0, 0, 0, 308, 276, 340, 280, 286, 329, 374,
	314, 334, 243, 365, 341, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 284, 0,
	325, 264, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 0, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	220, 221, 222, 223, 350, 0, 0, 381, 382, 383,
	405, 367, 0, 417, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 342, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 1923, 0, 0, 0,
	241, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 347, 363, 242, 338, 376, 247,
	345, 237, 312, 335, 0, 0, 234, 361, 344, 294,
	277, 278, 233, 0, 330, 257, 270, 254, 310, 0,
	360, 388, 253, 379, 0, 371, 236, 0, 370, 309,
	357, 362, 295, 289, 235, 359, 293, 288, 281, 261,
	404, 274, 321, 287, 322, 275, 299, 298, 300, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 282, 0, 0, 0, 389, 0, 333, 315,
	0, 0, 0, 331, 285, 358, 323, 364, 348, 372,
	327, 324, 227, 349, 256, 296, 238, 240, 252, 258,
	260, 262, 263, 305, 306, 318, 337, 351, 352, 353,
	255, 248, 332, 249, 272, 250, 228, 339, 251, 230,
	319, 356, 0, 268, 328, 292, 231, 291, 320, 355,
	354, 239, 380, 386, 387, 392, 0, 393, 0, 0,
	0, 401, 406, 407, 408, 410, 411, 412, 413, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	385, 266, 224, 225, 420, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 384, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 418, 317,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 366, 378, 396, 399, 0,
	0, 0, 229, 398, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 394, 301, 302, 303, 304, 269, 0, 246, 397,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 265,
	271, 409, 273, 245, 316, 267, 375, 279, 0, 402,
	0, 403, 0, 0, 0, 0, 308, 276, 340, 280,
	286, 329, 374, 314, 334, 243, 365, 341, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 284, 0, 325, 264, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 0, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 220, 221, 222, 223, 0, 0, 0,
	381, 382, 383, 405, 367, 350, 417, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 342, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 241, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 347, 363, 242, 338, 376,
	247, 345, 237, 312, 335, 0, 0, 234, 361, 344,
	294, 277, 278, 233, 0, 330, 257, 270, 254, 310,
	0, 360, 388, 253, 379, 0, 371, 236, 0, 370,
	309, 357, 362, 295, 289, 235, 359, 293, 288, 281,
	261, 404, 274, 321, 287, 322, 275, 299, 298, 300,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 282, 0, 0, 0, 389, 0, 333,
	315, 0, 0, 0, 331, 285, 358, 323, 364, 348,
	372, 327, 324, 227, 349, 256, 296, 238, 240, 252,
	258, 260, 262, 263, 305, 306, 318, 337, 351, 352,
	353, 255, 248, 332, 249, 272, 250, 228, 339, 251,
	230, 319, 356, 0, 268, 328, 292, 231, 291, 320,
	355, 354, 239, 380, 386, 387, 392, 0, 393, 0,
	0, 0, 401, 406, 407, 408, 410, 411, 412, 413,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 385, 266, 224, 225, 420, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 384, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 418,
	317, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 366, 378, 396, 399,
	0, 0, 0, 229, 398, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 394, 301, 302, 303, 304, 269, 0, 246,
	397, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	265, 271, 409, 273, 245, 316, 267, 375, 279, 0,
	402, 0, 403, 0, 0, 0, 0, 308, 276, 340,
	280, 286, 329, 374, 314, 334, 243, 365, 341, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 284, 0, 325, 264, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 0, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 220, 221, 222, 223, 350, 0,
	0, 381, 382, 383, 405, 367, 0, 417, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 342, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	1140, 0, 0, 0, 241, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 347, 363,
	242, 338, 376, 247, 345, 237, 312, 335, 0, 0,
	234, 361, 344, 294, 277, 278, 233, 0, 330, 257,
	270, 254, 310, 0, 360, 388, 253, 379, 0, 371,
	236, 0, 370, 309, 357, 362, 295, 289, 235, 359,
	293, 288, 281, 261, 404, 274, 321, 287, 322, 275,
	299, 298, 300, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 282, 0, 0, 0,
	389, 0, 333, 315, 0, 0, 0, 331, 285, 358,
	323, 364, 348, 372, 1452, 324, 227, 349, 256, 296,
	238, 240, 252, 258, 260, 262, 263, 305, 306, 318,
	337, 351, 352, 353, 255, 248, 332, 249, 272, 250,
	228, 339, 251, 230, 319, 356, 0, 268, 328, 292,
	231, 291, 320, 355, 354, 239, 380, 386, 387, 392,
	0, 393, 0, 0, 0, 401, 406, 407, 408, 410,
	411, 412, 413, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 385, 266, 224, 225, 420, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 384, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 418, 317, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 366,
	378, 396, 399, 0, 0, 0, 229, 398, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 394, 301, 302, 303, 304,
	269, 0, 246, 397, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 265, 271, 409, 273, 245, 316, 267,
	375, 279, 0, 402, 0, 403, 0, 0, 0, 0,
	308, 276, 340, 280, 286, 329, 374, 314, 334, 243,
	365, 341, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 284, 0, 325, 264, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 0, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 220, 221, 222,
	223, 350, 0, 0, 381, 382, 383, 405, 367, 0,
	417, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 342,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 241, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 347, 363, 242, 338, 376, 247, 345, 237, 312,
	335, 0, 0, 234, 361, 344, 294, 277, 278, 233,
	0, 330, 257, 270, 254, 310, 0, 360, 388, 253,
	379, 0, 371, 236, 0, 370, 309, 357, 362, 295,
	289, 235, 359, 293, 288, 281, 261, 404, 274, 321,
	287, 322, 275, 299, 298, 300, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 1163, 0, 0, 0, 346, 0, 0, 282,
	0, 0, 0, 389, 0, 333, 315, 0, 0, 0,
	331, 285, 358, 323, 364, 348, 372, 327, 324, 227,
	349, 256, 296, 238, 240, 252, 258, 260, 262, 263,
	305, 306, 318, 337, 351, 352, 353, 255, 248, 332,
	249, 272, 250, 228, 339, 251, 230, 319, 356, 0,
	268, 328, 292, 231, 291, 320, 355, 354, 239, 380,
	386, 387, 392, 0, 393, 0, 0, 0, 401, 406,
	407, 408, 410, 411, 412, 413, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 0, 385, 266, 224,
	225, 420, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 384, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 418, 317, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 366, 378, 396, 399, 0, 0, 0, 229,
	398, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 394, 301,
	302, 303, 304, 269, 0, 246, 397, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 265, 271, 409, 273,
	245, 316, 267, 375, 279, 0, 402, 0, 403, 0,
	0, 0, 0, 308, 276, 340, 280, 286, 329, 374,
	314, 334, 243, 365, 341, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 284, 0,
	325, 264, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 0, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	220, 221, 222, 223, 350, 0, 0, 381, 382, 383,
	405, 367, 0, 417, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 283, 0, 0, 0, 0,
	0, 0, 342, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	241, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 347, 363, 242, 338, 376, 247,
	345, 237, 312, 335, 0, 0, 234, 361, 344, 294,
	277, 278, 233, 0, 330, 257, 270, 254, 310, 0,
	360, 388, 253, 379, 0, 371, 236, 0, 370, 309,
	357, 362, 295, 289, 235, 359, 293, 288, 281, 261,
	404, 274, 321, 287, 322, 275, 299, 298, 300, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 282, 0, 0, 0, 389, 0, 333, 315,
	0, 0, 0, 331, 285, 358, 323, 364, 348, 372,
	327, 324, 227, 349, 256, 296, 238, 240, 252, 258,
	260, 262, 263, 305, 306, 318, 337, 351, 352, 353,
	255, 248, 332, 249, 272, 250, 228, 339, 251, 230,
	319, 356, 0, 268, 328, 292, 231, 291, 320, 355,
	354, 239, 380, 386, 387, 392, 0, 393, 0, 0,
	0, 401, 406, 407, 408, 410, 411, 412, 413, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	385, 266, 224, 225, 420, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 384, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 418, 317,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 366, 378, 396, 399, 0,
	0, 0, 229, 398, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 394, 301, 302, 303, 304, 269, 0, 246, 397,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 265,
	271, 409, 273, 245, 316, 267, 375, 279, 0, 402,
	0, 403, 0, 0, 0, 0, 308, 276, 340, 280,
	286, 329, 374, 314, 334, 243, 365, 341, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 226,
	0, 284, 0, 325, 264, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 0, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 220, 221, 222, 223, 350, 0, 0,
	381, 382, 383, 405, 367, 0, 417, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 283, 0,
	0, 0, 0, 0, 0, 342, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 241, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 347, 363, 242,
	338, 376, 247, 345, 237, 312, 335, 0, 0, 234,
	361, 344, 294, 277, 278, 233, 0, 330, 257, 270,
	254, 310, 0, 360, 388, 253, 379, 0, 371, 236,
	0, 370, 309, 357, 362, 295, 289, 235, 359, 293,
	288, 281, 261, 404, 274, 321, 287, 322, 275, 299,
	298, 300, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 282, 0, 0, 0, 389,
	0, 333, 315, 0, 0, 0, 331, 285, 358, 323,
	364, 348, 372, 456, 324, 227, 349, 256, 296, 238,
	240, 252, 258, 260, 262, 263, 305, 306, 318, 337,
	351, 352, 353, 255, 248, 332, 249, 272, 250, 228,
	339, 251, 230, 319, 356, 0, 268, 328, 292, 231,
	291, 320, 355, 354, 239, 380, 386, 387, 392, 0,
	393, 0, 0, 0, 401, 406, 407, 408, 410, 411,
	412, 413, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 385, 266, 224, 225, 420, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	384, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 418, 317, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 366, 378,
	396, 399, 0, 0, 0, 229, 398, 0, 0, 0,
	0, 0, 0, 457, 369, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 394, 301, 302, 303, 304, 269,
	0, 246, 397, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 265, 271, 409, 273, 245, 316, 267, 375,
	279, 0, 402, 0, 403, 0, 0, 0, 0, 308,
	276, 340, 280, 286, 329, 374, 314, 334, 243, 365,
	341, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 284, 0, 325, 264, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	0, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 220, 221, 222, 223,
	350, 0, 0, 381, 382, 383, 405, 367, 0, 417,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 342, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 241, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	347, 363, 242, 338, 376, 247, 345, 237, 312, 335,
	0, 0, 234, 361, 344, 294, 277, 278, 233, 0,
	330, 257, 270, 254, 310, 0, 360, 388, 253, 379,
	0, 371, 236, 0, 370, 309, 357, 362, 295, 289,
	235, 359, 293, 288, 281, 261, 404, 274, 321, 287,
	322, 275, 299, 298, 300, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 0, 0, 373, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 282, 0,
	0, 0, 389, 0, 333, 315, 0, 0, 0, 331,
	285, 358, 323, 364, 348, 372, 327, 324, 227, 349,
	256, 296, 238, 240, 252, 258, 260, 262, 263, 305,
	306, 318, 337, 351, 352, 353, 255, 248, 332, 249,
	272, 250, 228, 339, 251, 230, 319, 356, 0, 268,
	328, 292, 231, 291, 320, 355, 354, 239, 380, 386,
	387, 392, 0, 393, 0, 0, 0, 401, 406, 407,
	408, 410, 411, 412, 413, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 385, 266, 224, 225,
	420, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 384, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 418, 317, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 366, 378, 396, 399, 0, 0, 0, 229, 398,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 394, 301, 302,
	303, 304, 269, 0, 246, 397, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 265, 271, 409, 273, 245,
	316, 267, 375, 279, 0, 402, 0, 403, 0, 0,
	0, 0, 308, 276, 340, 280, 286, 329, 374, 314,
	334, 243, 365, 341, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 284, 0, 325,
	264, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 0, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 220,
	221, 222, 223, 350, 0, 0, 381, 382, 383, 405,
	367, 0, 417, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 259, 0, 0, 283, 0, 0, 0, 0, 0,
	0, 342, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 241,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 347, 363, 242, 338, 376, 247, 345,
	237, 312, 335, 0, 0, 234, 361, 344, 294, 277,
	278, 233, 0, 330, 257, 270, 254, 310, 0, 360,
	388, 253, 379, 0, 371, 236, 0, 370, 309, 357,
	362, 295, 289, 235, 359, 293, 288, 281, 261, 404,
	274, 321, 287, 322, 275, 299, 298, 300, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 282, 0, 0, 0, 389, 0, 333, 315, 0,
	0, 0, 331, 285, 358, 323, 364, 348, 372, 327,
	324, 227, 349, 256, 296, 238, 240, 252, 258, 260,
	262, 263, 305, 306, 318, 337, 351, 352, 353, 255,
	248, 332, 249, 272, 250, 228, 339, 251, 230, 319,
	356, 0, 268, 328, 292, 231, 291, 320, 355, 354,
	239, 380, 386, 387, 392, 0, 393, 0, 0, 0,
	401, 406, 407, 408, 410, 411, 412, 413, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 385,
	266, 224, 225, 420, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 384, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 418, 317, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 366, 378, 396, 399, 0, 0,
	0, 229, 398, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	394, 301, 302, 303, 304, 269, 0, 246, 397, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 265, 271,
	409, 273, 245, 316, 267, 375, 279, 0, 402, 0,
	403, 0, 0, 0, 0, 308, 276, 340, 280, 286,
	329, 374, 314, 334, 243, 365, 341, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	284, 0, 325, 264, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 0, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 220, 221, 222, 223, 350, 0, 0, 381,
	382, 383, 405, 367, 0, 417, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 342, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 241, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 347, 363, 242, 338,
	376, 247, 345, 237, 312, 335, 0, 0, 234, 361,
	344, 294, 277, 278, 233, 0, 330, 257, 270, 254,
	310, 0, 360, 388, 253, 379, 0, 371, 236, 0,
	370, 309, 357, 362, 295, 289, 235, 359, 293, 288,
	281, 261, 404, 274, 321, 287, 322, 275, 299, 298,
	300, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 282, 0, 0, 0, 389, 0,
	333, 315, 0, 0, 0, 331, 285, 358, 323, 364,
	348, 372, 327, 324, 227, 349, 256, 296, 238, 240,
	252, 258, 260, 262, 263, 305, 306, 318, 337, 351,
	352, 353, 255, 248, 332, 249, 272, 250, 228, 339,
	251, 230, 319, 356, 0, 268, 328, 292, 231, 291,
	320, 355, 354, 239, 380, 386, 387, 392, 0, 393,
	0, 0, 0, 401, 406, 407, 408, 410, 411, 412,
	413, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 385, 266, 224, 225, 420, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 384,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	418, 317, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 366, 378, 396,
	399, 0, 0, 0, 229, 398, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 394, 301, 302, 303, 304, 269, 0,
	246, 397, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 265, 271, 409, 273, 245, 316, 267, 375, 279,
	0, 402, 0, 403, 0, 0, 0, 0, 308, 276,
	340, 280, 286, 329, 374, 314, 334, 243, 365, 341,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 284, 0, 325, 264, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 0,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 220, 221, 222, 223, 350,
	0, 0, 381, 382, 383, 405, 367, 0, 417, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	283, 0, 0, 0, 0, 0, 0, 342, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 241, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 347,
	363, 242, 338, 376, 247, 345, 237, 312, 335, 0,
	0, 234, 361, 344, 294, 277, 278, 233, 0, 330,
	257, 270, 254, 310, 0, 360, 388, 253, 379, 0,
	371, 236, 0, 370, 309, 357, 362, 295, 289, 235,
	359, 293, 288, 281, 261, 404, 274, 321, 287, 322,
	275, 299, 298, 300, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 282, 0, 0,
	0, 389, 0, 333, 315, 0, 0, 0, 331, 285,
	358, 323, 364, 348, 372, 327, 324, 227, 349, 256,
	296, 238, 240, 497, 258, 260, 262, 263, 305, 306,
	318, 337, 351, 352, 353, 255, 248, 332, 249, 272,
	250, 228, 339, 251, 230, 319, 356, 0, 268, 328,
	292, 231, 291, 320, 355, 354, 239, 380, 386, 387,
	392, 0, 393, 0, 0, 0, 401, 406, 407, 408,
	410, 411, 412, 413, 0, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 0, 385, 266, 224, 225, 420,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 384, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 418, 317, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	366, 378, 396, 399, 0, 0, 0, 229, 398, 920,
	921, 922, 919, 0, 0, 0, 369, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 394, 301, 302, 303,
	304, 269, 0, 246, 397, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 265, 271, 409, 273, 245, 316,
	267, 375, 279, 0, 402, 0, 403, 0, 0, 816,
	0, 308, 276, 340, 280, 286, 329, 374, 314, 334,
	243, 365, 341, 290, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 284, 0, 325, 264,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 0, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 220, 221,
	222, 223, 804, 0, 0, 381, 382, 383, 405, 367,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 828, 830, 832, 834, 835, 837, 0,
	841, 838, 839, 840, 0, 0, 819, 820, 821, 822,
	802, 803, 825, 0, 805, 0, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 817, 823, 1509, 0,
	0, 0, 0, 0, 0, 827, 829, 831, 833, 836,
	1343, 0, 0, 0, 1340, 0, 1509, 0, 1342, 1339,
	1341, 1345, 1346, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 1511, 0, 0, 1343, 0, 0, 0, 1340,
	0, 0, 818, 1342, 1339, 1341, 1345, 1346, 0, 0,
	1511, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 2906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1350, 1351, 1352, 1353, 1354, 1355, 1348, 1349,
	1997, 1998, 1509, 0, 0, 0, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1350, 1351, 1352,
	1353, 1354, 1355, 1348, 1349, 0, 2689, 0, 0, 0,
	0, 1485, 1484, 0, 0, 1483, 1511, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 1488, 0, 1491, 0, 1490, 1492, 1494, 0, 1496,
	1497, 1498, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1488,
	0, 0, 0, 1490, 1492, 1494, 0, 1496, 1497, 1498,
	1500, 1501, 1502, 1504, 1505, 1506, 1507, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 0, 826, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 1490, 1492, 1494, 1510, 1496, 1497, 1498, 1500,
	1501, 1502, 1504, 1505, 1506, 1507, 0, 0, 476, 0,
	475, 482, 472, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 479, 480, 0, 481, 485, 0, 0, 467,
	0, 1487, 1508, 0, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 1495, 0, 0, 1493, 494, 0,
	0, 496, 0, 0, 0, 1499, 495, 0, 1503, 0,
	0, 1508, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 1487, 1490,
	1492, 1494, 0, 1496, 1497, 1498, 1500, 1501, 1502, 1504,
	1505, 1506, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 476, 0,
	475, 482, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 480, 0, 481, 485, 0, 0, 467,
	0, 476, 0, 475, 482, 472, 0, 0, 1508, 490,
	0, 0, 0, 0, 0, 479, 480, 0, 481, 485,
	0, 0, 467, 0, 0, 1487, 468, 470, 469, 0,
	0, 0, 490, 0, 0, 0, 474, 0, 494, 0,
	0, 496, 0, 0, 0, 0, 495, 0, 478, 0,
	0, 0, 0, 0, 1503, 493, 0, 0, 0, 0,
	0, 1493, 471, 0, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 477, 483, 0, 484, 486, 0, 0, 487,
	488, 489, 0, 0, 491, 492, 468, 470, 469, 0,
	0, 0, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 468,
	470, 469, 0, 0, 0, 493, 0, 0, 0, 474,
	0, 0, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 477, 483, 0, 484, 486, 0, 0, 487,
	488, 489, 0, 0, 491, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 477, 483, 0, 484, 486,
	0, 0, 487, 488, 489, 0, 0, 491, 492,
}

var yyPact = [...]int{
	2804, -1000, -1000, -1000, -311, 10359, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32355, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32355, -309, 31832,
	31832, -1000, -1000, 1776, -1000, 31309, 11424, 32355, 245, 219,
	32355, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 591, -1000, 30786, -1000, -1000, -1000, -1000,
	-1000, -1000, 500, 33788, 32878, 8256, -264, -1000, 2532, -123,
	717, 721, 739, 739, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2750, 604, 30263, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2886, 176, 604, 13516, -35, -41,
	2532, 291, 353, -1000, 793, 2942, 138, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8256, 8256,
	10359, -316, 10359, 8256, 32355, 32355, -1000, -1000, -1000, -1000,
	500, 33788, 8256, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -41, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 348, -1000, 1158, -1000, -1000, -1000,
	-1000, 2058, 1156, 1711, 465, 32355, -1000, 1153, 465, -1000,
	-1000, -1000, 2532, 2532, -1000, 32355, 32355, 20, 1279, -1000,
	281, 274, 267, 1151, -1000, -1000, -1000, -1000, -1000, 2452,
	-1000, 32355, 32355, 2082, 32355, -1000, 1409, 406, 33938, 2271,
	1097, 654, 2100, -1000, -1000, 2057, -1000, 127, 112, 161,
	489, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 149, -1000,
	2322, -1000, -1000, 116, -1000, -1000, 110, -1000, -1000, -1000,
	-43, -1000, -1000, -1000, -1000, -1000, -1000, -107, -1000, -1000,
	756, 1399, 8256, -1000, 1453, -1000, 3151, -1000, -1000, -1000,
	-1000, 5631, 9825, 9825, 9825, 9825, -1000, -1000, 1926, 8256,
	2056, 2055, -1000, -1000, -1000, -1000, -1000, 1150, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1710, 9302, -1000, 2053, 2052, 2051, 2050, 2039, 2036, 2035,
	2034, 2031, 2030, 2029, 2019, 2018, 2014, 1835, 10890, 2013,
	1705, 1704, 2012, 2007, 2004, 1701, 1835, 1835, 2002, 2001,
	1997, 1996, 1994, 1991, 1990, 1988, 1986, 1982, 1981, 1980,
	1975, 1967, 1965, 1959, 1957, 1955, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 883,
	-1000, 1952, 2250, 2354, 1834, 2421, 2330, 2325, 2320, 2312,
	1569, -1000, -1000, -1000, -135, -1000, -1000, 708, -1000, 692,
	-1000, 32355, 32355, 32355, 495, 495, 495, 495, 495, 551,
	495, 583, 582, 581, 495, -1000, -1000, -1000, -1000, -1000,
	-1000, 666, -1000, -1000, -1000, -1000, 1019, 32355, -1000, 1881,
	1199, 2351, 432, 424, 1199, 294, -1000, 1294, 1294, 1294,
	1294, 1199, 319, 411, 2354, 2354, -44, 1294, -64, 1199,
	1199, -64, 1199, 1199, 1199, 146, -1000, -1000, -1000, 1294,
	413, 1294, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2307,
	2301, 500, 32355, 90, 32355, 500, 500, 508, 1409, 399,
	398, 1036, 1313, -1000, 1221, 32355, 32355, 32355, 1221, 1221,
	17180, 16657, -1000, 32355, -1000, 2354, 1834, -1000, 1820, 2022,
	1819, 1834, 500, 500, 500, 500, 500, 500, 500, 500,
	32355, 32355, 29740, 500, 7200, 7200, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10359, 1568, 1631, 136, -89,
	-313, 163, -1000, -1000, 32355, 2233, 79, -1000, -1000, -1000,
	1836, -1000, 1870, 1870, 1870, 1870, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1896, 1948, -1000, -1000, 1865,
	1865, 1865, 1836, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1892, 1892,
	1895, 1892, 32355, 8256, 32355, 2266, 289, 1947, -1000, 32355,
	275, 2354, 2250, 2354, -1000, -1000, 1144, 1566, 1696, -1000,
	-1000, 281, 1154, -1000, 779, -1000, -1000, -1000, -1000, 32355,
	266, -1000, -1000, 1689, 1936, -1000, 396, 842, 1148, -1000,
	153, 33961, 26071, 1409, 26071, 32355, -1000, -1000, -1000, -1000,
	-1000, -1000, -50, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 123, -1000, 8256, 8256,
	8256, 8256, 8256, -1000, 472, 8779, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9825, 9825, 9825, 9825, 9825, 9825, 9825,
	9825, 9825, 9825, 9825, 9825, 1912, 1289, 9825, 9825, 9825,
	9825, 2022, 2519, 1033, 199, -1000, -1000, -1000, -1000, -1000,
	1281, 1399, 8256, 8256, 32355, -1000, 33158, 8256, 8256, 33183,
	8256, 2303, 8256, 8256, 8256, 1810, 4061, 32355, 8256, -1000,
	1809, 1807, -1000, -1000, 1404, 8256, -1000, -1000, 8256, -1000,
	-1000, 8256, 9825, 8256, -1000, -1000, -1000, 113, 2303, 2303,
	8256, 8256, 2303, 2303, 2303, 1269, 2303, 2303, 2303, 2303,
	2303, 2303, 2303, 2303, 1805, 2354, -264, 6677, -1000, -271,
	2250, 8256, -1000, -1000, 8256, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1695, -88, 713, 697, 701, -1000, 2288,
	-1000, 1929, 1928, 1129, 32355, 1324, 32355, 26071, 32355, 1409,
	32355, 32355, 495, 495, 495, 32355, 508, -1000, 32355, 1019,
	2286, 32355, 2428, 9825, 9825, 29217, 1294, 1199, -1000, -1000,
	32355, -1000, -1000, -1000, 1294, 32355, 1294, 1294, 2428, 1294,
	-1000, -1000, -1000, 1199, 1199, -1000, -1000, -1000, -1000, 1294,
	1294, -1000, -1000, 2428, 32355, -54, 2428, 2428, -38, -1000,
	-1000, -1000, 32355, 32355, 495, 32355, 32355, -1000, 32355, -1000,
	-1000, 32355, 33462, 32355, 32355, 2295, -1000, 26071, 32355, 23979,
	-1000, -1000, 394, 574, 15611, 350, 26071, 5107, -1000, -1000,
	1221, 1221, 1221, 5107, 5107, 1134, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1001, -1000, 139, 2250, -1000, -1000, -1000,
	-1000, -1000, 32355, 32355, 26071, 1409, 32355, 32355, 32355, 32355,
	-1000, 1927, -1000, 2258, 32355, 1035, -1000, -1000, 12993, 1118,
	1035, -1000, 1309, -1000, 8256, 10359, -286, 8256, 10359, 10359,
	8256, 10359, -1000, 8256, 75, -1000, -1000, -1000, -1000, 1563,
	-1000, 1561, -1000, -1000, -1000, 1693, 1693, -1000, 1559, -1000,
	-1000, -1000, -1000, 1557, -1000, -1000, 1556, -1000, -1000, 1804,
	756, -1000, 1692, 2097, -265, -1000, 14564, 32355, 32355, -1000,
	-1000, -265, -1000, 14040, 32355, 2250, -1000, 2250, 32355, -1000,
	2336, -1000, 281, 210, -1000, -1000, -1000, -1000, -1000, -1000,
	1110, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	991, -1000, 32355, -1000, -1000, 153, 26071, 27117, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 165, -1000, -1000, 155, -1000,
	545, 41, 1141, -1000, -1000, 97, 144, 612, 1399, -1000,
	1328, 1328, 1334, -1000, 498, -1000, -1000, -1000, -1000, 1926,
	-1000, -1000, -1000, 1862, 2500, -1000, 1308, 1308, 1102, 1102,
	1102, 1102, 1102, 1322, 1322, -1000, -1000, -1000, 5631, 1912,
	9825, 9825, 9825, 9825, 478, 478, 1413, 3283, -1000, 8256,
	1297, -1000, 8256, 1648, 1250, 1107, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1803, 1801, 1702, 2450,
	1800, 8256, -1000, -1000, 1132, 1130, 1113, -1000, 1714, 7733,
	-1000, -1000, -1000, 1795, 1092, 1794, -1000, -1000, -1000, 1791,
	1099, 889, 1790, 1391, 1788, 986, 8256, 8256, 1096, 1084,
	8256, 8256, 8256, 8256, 1787, 8256, 8256, 8256, 8256, 8256,
	8256, 8256, 8256, -19, -1000, -1000, 1083, -1000, 1399, -1000,
	1691, -1000, 1056, 959, -1000, 1736, -1000, -1000, -1000, -1000,
	706, 691, 687, 32355, 772, 11947, 32355, 1881, 2257, 64,
	-1000, 869, -1000, 41, -119, 796, 2081, 2448, 32355, 32355,
	32355, 2285, 28694, -1000, 1911, 1074, -1000, -1000, 8256, -1000,
	-1000, 2073, 32355, 32355, 2428, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 32355, 2428, 2428, 1199, 1294, -1000, -1000, 1294,
	-1000, -1000, 1294, -1000, 1091, -1000, 32355, -1000, -1000, -1000,
	1881, 944, -1000, 12470, 711, 514, -1000, 1227, 1227, 839,
	1227, 1227, 1227, 1227, 363, 362, 1227, 1227, 1227, 1227,
	1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227,
	1909, -1000, 63, 2293, 152, 869, 170, 2611, 900, -1000,
	-1000, -1000, -1000, 19272, 19272, 15088, 19272, -1000, 1159, -1000,
	-1000, 529, -1000, -1000, 796, -1000, -1000, -1000, 1905, 1278,
	-1000, -1000, 10890, -1000, 5107, 5107, 5107, -1000, -1000, 19795,
	32355, -1000, -113, -1000, -99, -1000, 923, -1000, -1000, 933,
	796, 2096, 923, 923, -1000, 11947, 32355, -1000, 2428, 7200,
	-1000, 23979, -1000, -1000, 28163, -1000, 27640, 2428, 1288, -1000,
	10359, 1586, 131, -1000, 157, -317, 128, 1368, 126, 1399,
	-1000, -1000, 1786, 1784, 1067, -1000, 1062, 1782, 1040, 1037,
	-1000, -72, -1000, 2242, 818, -1000, 1902, -1000, 1031, 2191,
	-1000, 909, -1000, 1276, 1029, -1000, 818, 1025, 2186, 909,
	-1000, -1000, 1080, 19, -1000, -1000, 32355, 1689, 1006, 27117,
	881, -1000, 519, 1077, 1076, -1000, 26071, 124, 26071, -1000,
	26071, -1000, -1000, 261, -1000, 32355, 2248, -1000, -1000, -1000,
	1638, -336, -1000, -1000, -1000, -1000, -1000, 1004, -1000, 478,
	478, 1413, 2636, -1000, 9825, -1000, 9825, 2506, 1287, -1000,
	8256, 1572, 33279, 1112, 18749, 32355, -1000, -1000, 8256, 8256,
	-1000, 2497, -1000, -1000, -1000, -1000, 8256, 8256, 1601, -1000,
	32355, -1000, -1000, -1000, -1000, 18749, -1000, 9825, -1000, 8256,
	871, 2491, -19, -19, 2443, 2337, 2332, 997, -19, 2318,
	2300, 2290, 2279, 2273, 2235, 2219, 2208, -1000, 1899, 6677,
	-1000, -72, 8256, 8256, 8256, 2175, -1000, -1000, -1000, -1000,
	-1000, 690, 105, 1781, 907, -1000, -1000, 32355, -1000, -1000,
	-1000, 1779, 903, -1000, -1000, -1000, 3346, 1870, 1870, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1896, -1000,
	-1000, 1865, 1865, 1865, 1836, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1892, 1892, 1895, 1892, -1000, 2283,
	-1000, -23, 1227, 446, 26071, 376, -1000, 32355, 2095, 364,
	2221, 32355, 1890, 1888, 1887, 209, 3346, 32355, 945, -1000,
	1072, 2942, -1000, 32355, 1399, -1000, 1409, -1000, 1199, -1000,
	2428, 879, -1000, -1000, 2428, 1199, 1199, 1294, 32355, -1000,
	2281, 33462, -1000, -1000, -1000, -1000, 3346, 517, -1000, 700,
	495, 32355, 1367, 700, 1366, 1886, -1000, -1000, -1000, 32355,
	32355, 32355, 1365, 1362, -1000, 32355, 1547, -1000, 1540, 1227,
	1227, 1535, 1686, 1682, 1681, 1227, 1227, 1530, 1680, 26594,
	1527, 1499, 1495, 1565, 1678, 611, 1549, 1539, 1509, 32355,
	1884, 1617, -23, 1227, 148, 1268, 446, 1411, 16134, 32355,
	23979, 23979, 23979, 23979, -1000, 2153, 2149, -1000, 2151, 2115,
	2167, 32355, 23979, 1881, -1000, 26594, -1000, -1000, -1000, 2022,
	989, 2400, 680, 8256, 26071, 1675, 350, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 32355, 32355, 1777, -1000, 2426,
	-1000, 882, -1000, -1000, 1070, -1000, 2426, 1317, -312, 10359,
	1296, 1271, -1000, 8256, 10359, 8256, -293, 140, -299, -1000,
	-1000, -1000, 1674, -1000, -1000, -1000, 1494, -1000, 1477, -6,
	5, 1352, -265, 6677, 290, 32355, -265, 32355, 6677, -1000,
	32355, 279, -265, 32355, 1474, -1000, -1000, -1000, 2431, 26071,
	1409, 1182, 25548, -1000, 115, -1000, 160, 361, 1672, -1000,
	578, 82, -1000, 1260, 1638, -1000, -1000, -1000, 9825, -1000,
	-1000, -1000, -1000, 1399, 8256, 1771, -1000, 659, 659, 1770,
	-1000, 1870, 1870, -1000, 1836, 1865, 1836, 659, 659, 1769,
	-1000, 1729, 2203, -1000, 2133, 2120, 8256, -1000, 1763, 3012,
	1095, -142, -19, -1000, -1000, -1000, -19, -19, -19, -19,
	-1000, -19, -19, -19, -19, -19, -19, -19, -19, 468,
	-1000, -6, 1399, 1399, -1000, -1000, 2172, -1000, 1671, 1661,
	772, 3346, 586, 11947, 2224, 288, 1570, -1000, -1000, 25025,
	355, -1000, -1000, -1000, 515, 181, 1468, 345, -1000, 32355,
	169, 32355, -1000, -1000, -1000, -1000, -1000, 2221, -1000, 741,
	192, 12470, 12470, 12470, 196, 1248, -1000, 465, 996, 1059,
	23979, 32355, -1000, 23456, 1758, -1000, 796, 2428, -1000, 32355,
	-1000, 2428, 2428, 1199, -1000, 288, -1000, 2896, -1000, 32355,
	-1000, 32355, -1000, 32355, 32355, 495, 8256, -1000, -1000, -1000,
	32355, -1000, 175, -1000, -1000, 18749, 18749, -1000, -1000, -1000,
	-1000, 1660, 1657, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 367, 32355, 987, -1000, 1242,
	1570, 25025, 1234, 1654, 355, -1000, 1653, -1000, 789, 32355,
	32355, -1000, 861, -1000, 1233, 2066, 2094, 2066, -1000, -1000,
	-1000, -1000, 2116, -1000, 2114, -1000, -1000, 861, -1000, -1000,
	-1000, -1000, -1000, 680, -1000, 2323, 700, 700, 700, 1757,
	881, 1749, -1000, -1000, -1000, -1000, -1000, 2402, 2419, 24502,
	2402, -1000, -312, 1283, -1000, 1531, 125, 1275, 32355, -1000,
	-1000, -1000, 1748, 1746, -273, 13, 2417, 2401, 2458, -1000,
	1744, 870, -265, -1000, -1000, 818, -1000, -1000, -1000, -265,
	-1000, 818, -1000, -1000, 1409, -1000, 145, -1000, -1000, -1000,
	-1000, -1000, -1000, 30, -1000, 32355, -1000, 1638, 1636, 81,
	-1000, 1399, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8256, -1000, -1000,
	-1000, 2060, -1000, -1000, 8256, 1733, 1635, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2423, -1000, 2399, -273, -1000, -1000, -1000, -1000, -1000, -1000,
	3346, -1000, 2184, -1000, -1000, 1634, 40, -1000, -1000, -1000,
	1632, 1629, 1467, -1000, -1000, 1429, 1114, 49, -1000, -1000,
	-1000, -1000, -1000, -1000, 1411, 32355, 1858, -1000, 1227, 1227,
	1227, 32355, 1732, 846, -1000, 1731, 1723, 471, 1255, 1225,
	-1000, 1466, 19272, 23979, 23456, 856, -1000, 1055, -1000, -1000,
	-1000, 2428, -1000, -1000, 2428, -1000, -1000, 2896, -1000, -1000,
	1381, 9825, -1000, -1000, 1627, 18226, 584, 596, 1857, -1000,
	320, 2456, -1000, 1348, 1340, -1000, 32355, -1000, 1852, -1000,
	1851, 2068, 254, 1846, 1845, 32355, 2043, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 390, 985, -1000, 1617,
	1616, -1000, 40, 1615, -1000, -1000, -1000, 32355, 789, 789,
	2423, 32355, 6677, -1000, -1000, 8256, 1844, -1000, 8256, -1000,
	-1000, -1000, -1000, -1000, 1842, 2255, -1000, -1000, -1000, -1000,
	-1000, -1000, 8256, 8256, -1000, -1000, 492, 10359, -301, 135,
	-1000, -1000, -1000, -275, 1614, -1000, -1000, 2397, 1612, 1579,
	32355, -1000, 818, 818, 796, -1000, -1000, -38, -1000, -1000,
	-1000, 1984, -1000, 1944, -19, -1000, 168, 8256, -275, -184,
	-1000, -1000, -1000, -1000, 255, -1000, -1000, 164, -1000, -1000,
	1426, 388, -1000, -1000, 789, 22410, 18749, 18226, 1610, -1000,
	33636, 12470, 123, 33636, 725, 1223, -1000, 1465, -1000, 1450,
	-1000, 2428, 856, 1055, -1000, -1000, 1166, -1000, -1000, -1000,
	-1000, 1413, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1444, 1841, -128, -1000, -1000,
	1840, 22410, 22410, 317, 317, 22410, 22410, 1839, 512, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2354, -1000, -1000,
	1399, 32355, 1399, 22933, -1000, 2396, 2394, 1399, 756, -1000,
	-312, 32355, 32355, -277, 1442, -1000, 1600, 10, -1000, -1000,
	784, -280, -8, 1, -1000, -1000, -1000, 1719, -1000, 3538,
	-1000, -1000, -1000, 756, -277, 32355, 360, 1584, -1000, -1000,
	162, -1000, -1000, 973, -1000, 1836, 8256, -1000, -1000, -1000,
	456, 33529, -1000, -1000, -1000, -38, 456, 426, 194, -1000,
	1424, -1000, -1000, 2423, -1000, 1606, 8256, 1835, -179, 22410,
	965, 964, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 963,
	957, 22410, -1000, -1000, -1000, 331, -1000, 955, 954, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1832, -1000, -1000, 2393,
	-1000, 1583, 499, -13, 1, -1000, 2388, 9, 2386, 2377,
	-1000, -1000, 4584, -268, -22, 292, -1000, 2280, -1000, -1000,
	28, -1000, -1000, -1000, 22410, 2254, 1907, 272, 2375, 33636,
	-1000, -1000, 272, -1000, 198, -1000, 1205, -1000, 1423, -1000,
	2354, -1000, 1742, -1000, 2092, -1000, 132, 948, -1000, -1000,
	-1000, -1000, 946, -1000, -1000, -1000, 21887, 32355, 1579, -1000,
	1831, 1421, 13, 2, 2370, -1000, 1579, 2369, 1579, 1579,
	1329, -1000, -1000, -1000, -1000, -1000, 1582, -1000, 234, -1000,
	-1000, 2254, -1000, 2359, 351, -1000, -1000, -1000, -1000, 1417,
	-1000, -1000, 512, -1000, 2086, 2084, 2437, -1000, -1000, -1000,
	-1000, 234, 234, 234, 234, 103, -1000, -1000, 936, -1000,
	-1000, 2277, 17703, -12, -1000, -1000, -1000, 1580, -1000, 1579,
	-1000, -1000, 4584, -1000, -1000, 1227, 1576, 185, -1000, -1000,
	-1000, 21364, 300, 299, 296, -1000, 381, -1000, -1000, -1000,
	-1000, 2455, -1000, 2444, 657, 657, -1000, -1000, 32355, -1000,
	32355, -1000, 932, -1000, -1000, -1000, 1042, -1000, -1000, -1000,
	-1000, -1000, 1406, -1000, 32355, -1000, 32355, 293, 1397, 9825,
	1828, 9825, 1827, 314, 1824, -1000, -1000, -1000, 1438, 336,
	-1000, -1000, 738, -1000, 1226, -1000, 20841, 32355, -1000, -1000,
	917, 1823, 2358, -1000, 2987, 32355, 2774, 32355, 1822, 1224,
	9825, -1000, -1000, -1000, 32355, 6154, -1000, 1039, -1000, -1000,
	447, 302, -1000, 898, -1000, 852, 20318, 1396, 2579, -1000,
	-1000, 1399, 32355, 845, -1000, 32355, 278, -1000, -1000, -1000,
	836, -1000, -1000, -1000, -1000, 447, 2162, -1000, 1389, -1000,
	-1000, 33480, 563, -1000, -1000, 33480, 282, -1000, 401, 1637,
	-1000, -1000, 835, -1000, 32355, 614, 8256, -1000, 282, 33636,
	-1000, 8256, 803, -1000, 33636, 801, -1000, -1000,
}

var yyPgo = [...]int{
	0, 140, 2474, 206, 136, 3065, 62, 209, 196, 172,
	208, 3064, 3063, 2231, 2228, 3062, 3061, 3059, 3058, 3056,
	3054, 3053, 3051, 3050, 3049, 3047, 3046, 3045, 3044, 3043,
	3040, 3039, 3037, 3033, 3032, 3031, 3030, 3029, 3027, 204,
	3026, 3025, 3023, 3022, 3021, 3020, 3019, 3018, 3017, 3015,
	3011, 3010, 3008, 3007, 3006, 3005, 3004, 3002, 3001, 3000,
	2999, 2998, 2996, 2995, 2994, 2992, 2990, 2989, 167, 2987,
	2205, 2984, 2982, 2981, 2978, 2975, 2971, 2970, 180, 2968,
	2966, 2964, 2963, 2962, 2961, 2959, 2958, 2957, 2953, 2951,
	2950, 2949, 2946, 2943, 2942, 2941, 174, 2940, 134, 158,
	2939, 2938, 2937, 2935, 2934, 198, 186, 49, 2933, 37,
	2932, 178, 2931, 115, 2930, 112, 2929, 2928, 2925, 2921,
	2920, 2919, 2917, 2916, 2914, 2913, 2911, 2907, 68, 2906,
	2891, 343, 155, 215, 1498, 223, 205, 149, 133, 86,
	2890, 2229, 2889, 124, 188, 128, 24, 2888, 141, 2885,
	116, 31, 47, 210, 106, 40, 126, 95, 2881, 168,
	65, 2880, 84, 2875, 2874, 214, 154, 2873, 88, 2872,
	2870, 2867, 2860, 156, 151, 2859, 2857, 98, 2855, 2854,
	82, 2853, 46, 2852, 132, 2851, 258, 90, 97, 2849,
	2846, 2844, 77, 2843, 2836, 2835, 2833, 139, 2831, 2830,
	100, 67, 2829, 2828, 2826, 45, 2824, 53, 2823, 55,
	2821, 2819, 2815, 2811, 52, 2808, 2806, 14, 21, 23,
	2805, 19, 2804, 130, 2802, 2801, 2800, 2, 2799, 181,
	42, 78, 113, 2798, 349, 2795, 2794, 2793, 120, 2791,
	350, 2789, 2787, 2786, 2784, 2783, 5, 2782, 179, 36,
	2781, 75, 110, 123, 157, 163, 2780, 2779, 2776, 93,
	83, 71, 0, 2774, 121, 2772, 2771, 2770, 213, 2769,
	195, 160, 193, 117, 216, 162, 2768, 2767, 70, 2753,
	127, 72, 104, 8, 2751, 183, 2744, 793, 142, 2742,
	161, 2741, 119, 1, 114, 2736, 2734, 34, 220, 2733,
	2732, 2728, 94, 2726, 2725, 91, 109, 2724, 2723, 2721,
	33, 2720, 29, 28, 2716, 79, 2713, 202, 2712, 144,
	103, 143, 138, 122, 185, 189, 63, 54, 2711, 1311,
	118, 74, 22, 2709, 192, 2694, 222, 187, 2691, 190,
	2690, 207, 315, 164, 2689, 146, 10, 35, 26, 2688,
	12, 2687, 211, 153, 2684, 2683, 20, 2682, 18, 2681,
	2679, 2676, 2673, 9, 2672, 2669, 2661, 4, 7, 2660,
	3, 191, 2659, 2658, 2657, 2656, 38, 102, 2654, 101,
	169, 2651, 2650, 73, 2649, 2648, 2646, 1758, 2643, 2640,
	2639, 2638, 2637, 2636, 2635, 2634, 2633, 2632, 76, 43,
	2617, 2616, 2615, 2609, 59, 111, 2608, 2607, 2606, 2604,
	30, 145, 2603, 16, 2601, 27, 25, 32, 2595, 99,
	2594, 17, 147, 2593, 2592, 15, 2578, 2577, 11, 13,
	2571, 2570, 85, 2567, 66, 41, 131, 80, 2566, 60,
	166, 108, 2563, 2561, 201, 199, 159, 2560, 177, 200,
	212, 2557, 165, 2556, 2545, 2544, 2533, 2530, 2529, 858,
	2520, 2519, 203, 44, 69, 89, 2512, 2509, 2508, 64,
	129, 92, 87, 170, 2505, 152, 2504, 2501, 81, 2500,
	2499, 2491, 2489, 2488, 150, 2486, 2484, 2483, 2478, 194,
	197, 2476,
}

//line mysql_sql.y:9365
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 483, 487, 487, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 103, 481, 481, 481, 482, 482, 100, 120,
	119, 122, 122, 121, 121, 118, 118, 114, 117, 117,
	116, 116, 115, 110, 112, 112, 111, 113, 113, 101,
	89, 102, 431, 431, 430, 430, 429, 429, 384, 384,
	428, 428, 428, 427, 427, 427, 426, 426, 425, 425,
	424, 424, 422, 422, 423, 421, 420, 420, 420, 418,
	418, 418, 414, 414, 416, 415, 415, 417, 409, 409,
	412, 412, 410, 410, 410, 410, 413, 408, 408, 408,
	407, 407, 88, 88, 88, 331, 331, 87, 87, 345,
	345, 345, 345, 345, 343, 343, 343, 343, 343, 343,
	342, 342, 341, 341, 346, 346, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 79, 79, 79, 79,
	82, 82, 82, 83, 340, 340, 340, 80, 81, 81,
	330, 330, 335, 335, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 339, 339, 339, 337,
	337, 336, 336, 338, 338, 73, 73, 73, 76, 75,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 74,
	74, 74, 74, 74, 74, 69, 69, 69, 69, 69,
	68, 68, 70, 70, 327, 327, 326, 84, 84, 85,
	485, 485, 484, 486, 486, 486, 486, 86, 92, 92,
	92, 92, 92, 92, 92, 91, 91, 94, 94, 93,
	95, 78, 78, 78, 78, 78, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 455, 455, 455, 457, 457,
	266, 267, 488, 269, 265, 265, 265, 451, 451, 452,
	453, 454, 454, 454, 90, 11, 11, 11, 11, 11,
	11, 67, 72, 222, 222, 223, 223, 223, 223, 224,
	224, 224, 224, 224, 225, 226, 226, 65, 71, 71,
	468, 468, 66, 475, 475, 387, 387, 280, 280, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 391, 392, 276, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 46, 45, 45, 45, 316, 316,
	44, 489, 489, 255, 255, 55, 48, 56, 57, 58,
	59, 60, 61, 43, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 64, 64, 403, 403, 491, 491, 491,
	62, 63, 386, 386, 386, 53, 52, 51, 50, 49,
	49, 42, 42, 41, 41, 47, 126, 127, 273, 273,
	273, 275, 275, 271, 490, 490, 358, 358, 274, 274,
	40, 40, 40, 40, 272, 272, 254, 270, 270, 270,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 23, 24, 26, 324, 324,
	321, 25, 18, 17, 20, 16, 19, 21, 22, 22,
	9, 9, 9, 9, 13, 13, 14, 138, 138, 187,
	187, 463, 463, 459, 459, 460, 460, 460, 461, 461,
	462, 462, 96, 397, 397, 397, 397, 397, 397, 8,
	161, 161, 160, 160, 396, 396, 396, 396, 396, 396,
	328, 328, 440, 440, 440, 441, 159, 159, 154, 154,
	398, 398, 294, 442, 442, 406, 406, 405, 405, 404,
	404, 157, 157, 158, 158, 141, 141, 106, 106, 411,
	411, 411, 411, 419, 419, 383, 383, 214, 214, 249,
	249, 250, 250, 131, 131, 132, 132, 132, 132, 132,
	132, 448, 448, 450, 450, 449, 156, 156, 152, 152,
	153, 153, 153, 151, 151, 150, 149, 149, 148, 146,
	146, 146, 147, 147, 147, 134, 134, 134, 133, 133,
	133, 133, 133, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 135, 135, 456, 456, 456,
	388, 388, 388, 394, 394, 231, 231, 232, 232, 230,
	230, 136, 136, 137, 137, 137, 137, 229, 229, 228,
	139, 139, 145, 144, 144, 140, 140, 140, 140, 239,
	239, 238, 238, 238, 238, 99, 104, 104, 105, 164,
	164, 237, 236, 236, 236, 163, 163, 162, 162, 155,
	155, 143, 143, 143, 143, 235, 142, 233, 480, 480,
	479, 479, 478, 476, 476, 476, 477, 477, 477, 477,
	433, 433, 433, 433, 433, 260, 260, 260, 264, 264,
	263, 263, 263, 263, 263, 268, 7, 7, 7, 7,
	7, 30, 30, 30, 30, 30, 30, 30, 30, 36,
	172, 173, 37, 174, 174, 175, 175, 176, 176, 177,
	178, 179, 179, 179, 179, 35, 165, 165, 166, 166,
	167, 167, 168, 169, 169, 169, 171, 170, 34, 27,
	464, 467, 465, 465, 469, 469, 469, 470, 470, 470,
	471, 471, 28, 123, 128, 128, 125, 130, 130, 130,
	130, 130, 124, 466, 472, 472, 472, 325, 325, 322,
	323, 323, 320, 319, 319, 319, 474, 474, 473, 473,
	473, 261, 261, 29, 315, 315, 317, 318, 318, 318,
	309, 309, 309, 309, 33, 313, 313, 314, 314, 314,
	314, 314, 310, 310, 312, 312, 308, 308, 308, 308,
	308, 32, 129, 129, 307, 307, 305, 305, 303, 303,
	304, 304, 302, 302, 302, 306, 306, 31, 31, 31,
	108, 107, 107, 107, 252, 252, 251, 251, 109, 38,
	199, 199, 372, 372, 372, 372, 372, 390, 390, 390,
	373, 373, 373, 374, 374, 374, 375, 375, 375, 375,
	375, 389, 389, 347, 347, 348, 348, 348, 351, 351,
	364, 364, 365, 365, 363, 363, 370, 370, 369, 369,
	368, 368, 367, 367, 366, 366, 366, 366, 361, 361,
	360, 360, 349, 349, 349, 349, 349, 350, 350, 350,
	359, 359, 362, 362, 205, 205, 206, 206, 206, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 438, 438,
	439, 208, 208, 208, 212, 212, 212, 212, 212, 212,
	207, 207, 209, 209, 188, 188, 186, 186, 180, 180,
	181, 181, 182, 182, 182, 185, 185, 183, 183, 184,
	184, 184, 184, 333, 333, 436, 436, 437, 437, 432,
	432, 432, 435, 435, 435, 435, 435, 434, 434, 189,
	247, 247, 247, 262, 262, 262, 262, 246, 246, 246,
	204, 204, 203, 203, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 332,
	332, 277, 277, 278, 278, 221, 220, 220, 220, 220,
	220, 218, 219, 217, 217, 217, 217, 217, 216, 216,
	215, 215, 215, 311, 311, 213, 213, 211, 211, 211,
	210, 210, 210, 371, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 245, 286,
	286, 291, 291, 447, 447, 446, 190, 190, 190, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 200, 200,
	200, 356, 356, 356, 356, 356, 357, 357, 357, 354,
	354, 355, 355, 295, 296, 296, 395, 395, 352, 352,
	353, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 402, 402,
	402, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 458, 458, 458,
	443, 443, 443, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 243, 243, 243, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	297, 297, 298, 298, 399, 399, 399, 399, 399, 399,
	400, 400, 401, 401, 401, 401, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 284, 240, 240, 240, 299,
	292, 292, 293, 293, 287, 287, 287, 287, 287, 287,
	287, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 288, 288, 290, 290, 301, 301, 301,
	300, 300, 300, 300, 300, 300, 300, 202, 202, 202,
	202, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 192, 192, 192, 192, 196, 196, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 197, 197, 197, 197, 195, 195, 195, 195,
	195, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 97, 98, 98,
	194, 248, 248, 376, 376, 379, 379, 377, 377, 378,
	380, 380, 380, 381, 381, 381, 382, 382, 382, 385,
	385, 253, 253, 253, 259, 259, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 3, 3,
	2, 4, 4, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 2, 4, 3,
	3, 1, 1, 1, 1, 1, 2, 3, 4, 7,
	2, 3, 3, 4, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 2, 2, 1, 2,
	2, 2, 3, 2, 3, 1, 1, 7, 7, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 5, 0, 2,
	7, 0, 1, 0, 1, 5, 3, 3, 2, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 4, 6,
	7, 4, 4, 7, 8, 3, 3, 3, 0, 2,
	2, 0, 2, 2, 1, 1, 1, 1, 0, 1,
	4, 4, 5, 4, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 4, 1, 3,
	1, 4, 6, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 2, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 7, 7,
	1, 4, 1, 1, 3, 4, 3, 0, 1, 1,
	0, 2, 7, 8, 0, 2, 6, 0, 2, 2,
	3, 3, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 11,
	2, 2, 4, 5, 1, 3, 0, 3, 5, 10,
	0, 2, 0, 3, 2, 4, 3, 0, 2, 1,
	0, 2, 3, 0, 2, 3, 0, 3, 2, 4,
	3, 0, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 1, 7, 7, 2, 1, 7,
	7, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	5, 0, 1, 3, 0, 1, 0, 2, 0, 1,
	6, 8, 6, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	4, 3, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	2, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -483, -487, -2, -5, 551, -1, -4, -98, -73,
	-7, -100, -101, -8, -96, -9, -10, -12, -77, -91,
	-93, -95, -94, -39, -11, -90, -68, -69, -79, -84,
	-87, -88, -89, -102, -97, -99, -131, -103, 544, -74,
	-75, -76, -30, -29, -28, -27, -123, 550, 408, 12,
	456, -13, -14, -448, -15, 237, -265, -266, -267, -269,
	-488, -40, -41, -42, -49, -50, -51, -52, -53, -62,
	-63, -64, -43, -44, -45, -48, -46, -55, -56, -57,
	-58, -59, -60, -61, -47, -126, -127, -66, -65, -71,
	-67, -72, -125, 212, -70, 61, -80, -81, -82, -83,
	-85, -86, 339, 345, 398, 543, 46, -132, -134, 552,
	140, 141, 143, 144, -31, -32, -33, -34, -35, -36,
	-38, -37, 208, 14, 489, -16, -19, -17, -20, -18,
	-25, -26, -24, -21, -23, -124, -22, 232, 231, 37,
	295, 296, 297, 343, 230, 209, 13, 30, 41, 321,
	-133, 67, 210, -135, 10, 554, -6, -3, -2, -110,
	-114, -118, -121, -122, -119, -120, -4, -98, 98, 222,
	545, -262, 335, 546, 548, 547, 70, 78, -256, -258,
	339, 345, 543, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 459,
	530, 531, 532, 533, 319, 320, 486, 249, 273, 369,
	276, 283, 140, 159, 153, 181, 173, 148, 253, 288,
	254, 77, 143, 442, 88, 420, 395, 146, 268, 270,
	272, 275, 255, 169, 164, 267, 251, 162, 256, 39,
	257, 186, 258, 259, 491, 416, 318, 422, 280, 393,
	163, 417, 271, 419, 188, 192, 434, 157, 158, 424,
	436, 185, 229, 42, 488, 241, 437, 190, 184, 180,
	445, 284, 282, 183, 156, 179, 252, 50, 194, 193,
	195, 389, 390, 391, 392, 260, 261, 333, 433, 176,
	165, 323, 149, 22, 440, 236, 421, 346, 262, 277,
	285, 189, 191, 243, 248, 490, 397, 247, 281, 438,
	161, 240, 269, 235, 441, 150, 348, 263, 144, 274,
	435, 444, 49, 361, 155, 147, 226, 141, 245, 250,
	11, 264, 265, 266, 287, 286, 278, 177, 242, 182,
	167, 154, 178, 142, 244, 443, 362, 541, 321, 378,
	175, 172, 246, 219, 439, 423, 145, 382, 363, 170,
	289, 537, 538, 539, 334, 317, 290, 291, 168, 233,
	414, 415, 292, 294, 388, 310, 364, 396, 370, 365,
	201, 298, 426, 428, 187, 540, 299, 300, 301, 418,
	302, 303, 304, 305, -338, -336, -262, 543, 345, 339,
	321, -174, -262, 553, -141, 38, -186, -262, -141, -70,
	-14, -13, -133, -134, -186, 216, -270, 23, 393, -78,
	394, 212, 67, -262, -9, -8, -96, -68, -131, -268,
	-262, 295, 295, -268, 216, -262, 247, 377, -387, 222,
	-342, -315, 248, -341, -317, -344, -318, 31, 208, 210,
	209, 244, 14, 343, 218, 12, 10, 344, 230, 24,
	25, 27, 13, 345, 347, 28, 348, 351, 352, 353,
	41, 356, 357, 237, 70, 78, 73, 255, -173, -262,
	-293, -287, 95, 238, -289, -282, -283, -285, -428, -422,
	-281, 67, 122, 123, 130, 96, -284, -371, 35, 98,
	496, 457, -241, -242, -243, -244, -245, -262, -423, -421,
	73, 79, 82, 85, 86, 84, 83, 166, 81, 74,
	134, 135, -134, 70, -443, 504, -257, 525, 530, 531,
	532, 533, 524, 46, -393, -401, 215, -399, 133, 171,
	233, 167, 12, 128, 388, 168, 501, 521, 459, 505,
	528, 498, 499, 493, 494, 495, 497, 506, 508, 520,
	-402, 516, 526, 527, 514, 529, 72, 71, 519, 518,
	507, 502, 503, 509, 492, 500, 510, 511, 517, 522,
	523, 327, 88, 328, 329, 449, 322, 330, 222, 393,
	55, 331, 332, 333, 334, 335, 456, 336, 56, 337,
	326, 237, 378, 338, 170, 187, 461, 460, 462, 453,
	450, 448, 451, 452, 454, 455, 512, 513, 515, -104,
	-105, 535, -150, -151, -234, 19, 6, 7, 8, 9,
	-481, 395, 490, 145, 142, -329, 145, 94, 150, 149,
	-329, 298, 243, 340, 219, 319, 378, 302, 247, -309,
	-307, -389, 292, 288, 217, 227, 226, 89, 449, 215,
	354, -459, -460, 205, 206, 207, -450, 482, -449, -262,
	329, 26, 216, 340, 428, 426, 427, 429, 430, 431,
	432, -54, -403, -386, 423, 422, -274, 415, 421, 413,
	425, 416, 320, 304, 303, 208, 483, -253, 364, 396,
	243, 446, 447, 341, 397, 434, 435, 417, 88, 174,
	171, 219, 216, 319, 449, 378, 302, -459, 247, 377,
	40, -335, 388, -334, -336, 434, 435, 445, 71, 72,
	433, -253, 88, 414, 414, -151, -234, -150, -132, -134,
	-99, -448, 217, 319, 378, 247, 218, 216, 219, 449,
	295, 340, 243, 302, -388, -456, 31, -394, 202, 203,
	204, 32, 33, -1, 102, 554, -287, -287, -6, 555,
	-6, -287, -262, -262, 137, -192, -196, -193, -195, -194,
	-198, -197, 171, 172, 133, 175, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 30, 187, 233, 167,
	168, 169, 170, 188, 153, 173, 487, 196, 154, 197,
	155, 198, 156, 199, 157, 158, 200, 159, 162, 163,
	164, 161, 136, 67, 136, 73, -157, 239, -186, 136,
	-157, -151, -150, -151, -186, -246, -262, 395, 105, -78,
	-78, 394, -451, -452, -453, -455, 212, 394, 393, 136,
	15, -268, -268, 65, -186, -317, 247, -342, -315, 35,
	64, 137, 220, 137, 64, 67, 341, 319, 378, 342,
	449, 216, 354, 219, 247, 355, 319, 378, 216, 219,
	449, 247, 319, 216, 219, 378, 247, 355, 413, 414,
	219, 26, 346, 349, 350, 414, -407, 445, 137, 94,
	91, 92, 93, -287, 112, -300, 105, 106, 107, 108,
	109, 110, 111, 119, 118, 129, 122, 123, 124, 125,
	126, 127, 128, 120, 121, 115, 95, 113, 117, 114,
	97, -134, -287, -293, 46, -285, -285, -285, -285, -371,
	-291, -287, 67, 67, 136, 73, -287, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, -400,
	67, 67, -297, -298, 67, 67, -281, -246, 67, 73,
	73, 67, 67, 67, 73, -298, -298, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, -151, 137, 67, -106, 38,
	-153, 21, -135, -134, 20, 31, 32, 31, 32, 31,
	32, 31, 32, 79, 438, 489, 148, 149, 150, -172,
	-262, -174, -165, -262, -305, 222, -305, -305, -305, -305,
	218, -305, 216, 216, 216, -305, -461, 152, 137, -450,
	-156, 67, -273, 113, 117, 23, 245, 245, -273, 282,
	-489, -490, 15, 115, -271, -490, -271, -271, -273, -491,
	218, 424, 42, 246, 245, -152, -153, -152, 418, 414,
	-358, 419, 420, -275, -490, -274, -273, -273, -274, -273,
	-273, -273, 216, 219, 449, 302, -489, 245, -489, 30,
	30, -387, -186, -387, 483, -254, -262, -387, -387, -462,
	221, -317, 247, 247, 137, 105, 23, -337, 105, 116,
	-336, -336, -336, -337, -337, -207, 40, -261, 133, -262,
	73, -207, 40, -485, -484, -186, -152, -135, -134, 68,
	68, 68, -387, -387, -387, -387, -387, -387, -387, -387,
	-268, -165, -174, 222, -387, -136, -137, 124, -287, -262,
	-136, -3, -112, -111, 99, 100, 102, 546, 335, 545,
	549, 543, -336, 40, -382, 362, 361, -376, -378, 67,
	-377, 67, -377, -377, -377, 67, 67, -379, 67, -379,
	-379, -376, -380, 67, -380, -381, 67, -380, -262, -292,
	-293, -262, 38, -396, 46, -131, 67, 30, 67, -262,
	-397, 46, -131, 67, 30, -152, -106, -153, 136, 79,
	73, -78, 68, 137, -454, 85, 86, -457, 185, 177,
	-262, -92, 73, -7, -8, -9, -10, -39, -68, -131,
	-424, -422, 67, 31, 387, 64, 15, -343, 216, 449,
	340, 243, 219, 319, -341, -324, -321, -319, -261, -317,
	-320, -319, -346, -246, 414, -107, 399, 294, -287, -287,
	-287, -287, -287, 84, 95, 317, 85, 86, -282, -301,
	31, 290, 291, -283, -283, -283, -283, -283, -283, -283,
	-283, -283, -283, -283, -283, -290, -299, -371, 67, 115,
	113, 117, 114, 97, -285, -285, -283, -283, 68, 137,
	-447, -446, 99, -287, -287, -262, -444, -445, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 331,
	326, 332, 330, 322, 338, 333, 334, 170, 480, 481,
	474, 475, 476, 477, 478, 479, -292, -292, -287, -444,
	-292, -240, 32, 31, -293, -293, -293, 68, -287, -458,
	315, 314, 316, -154, -262, -292, 68, 68, 68, 79,
	-293, -293, -292, -283, -292, -445, -240, -240, -293, -293,
	-240, -240, -240, -240, 124, -240, -240, -240, -240, -240,
	-240, -240, -240, 68, -152, -105, -405, -404, -287, 40,
	536, -106, -287, -149, -148, -287, -482, 73, 439, 440,
	146, 149, 148, 34, 67, 67, 136, -186, 95, -464,
	-262, -325, -322, -319, -262, -315, -262, -262, -305, -305,
	-305, -186, -462, -449, 34, -155, -262, -230, 16, -285,
	-285, -319, 247, -489, -273, -255, -254, -275, -270, -275,
	-275, -230, -490, -273, -273, -275, -271, -230, -262, 414,
	-230, -230, -358, -272, -262, -272, -305, -254, -255, -255,
	-186, -222, -223, 213, 210, 209, -227, 359, 249, -306,
	253, 77, 254, 395, 255, 218, 257, 258, 259, 229,
	260, 261, 262, 388, 263, 264, 265, 266, 342, 6,
	305, 40, -464, -464, 30, -325, -262, -144, -139, -143,
	-140, -145, -233, -235, -142, 67, -186, -134, -262, 31,
	387, -340, 387, 31, -315, -334, -330, 73, 388, -320,
	-339, 64, 133, -404, -337, -337, -337, -339, -339, 132,
	137, -486, 438, 439, 205, -106, -188, -186, -464, -324,
	-315, -262, -188, -188, -262, 67, 35, -262, -229, 137,
	-228, 15, -263, -262, 34, 73, 136, -229, -113, -111,
	101, -287, -6, 545, -287, -6, -6, -287, -6, -287,
	-385, 363, 79, 79, -248, 73, -248, 79, 79, 79,
	68, 73, -328, 64, -398, -294, -442, 535, -159, 68,
	-154, -440, -441, -154, -158, -262, -398, -159, 68, -440,
	-106, -106, -262, 23, -78, -452, 136, 137, -155, -343,
	-323, -320, -345, 124, -262, -331, 137, 489, 556, 71,
	220, -474, -473, 379, 68, 137, -408, 221, 456, 73,
	557, 201, 84, 317, 85, 86, -371, -293, -290, -285,
	-285, -283, -283, -288, 234, -288, 94, -287, -286, -446,
	101, -287, 34, 137, 65, 136, 68, 68, 15, 15,
	68, -287, 68, 68, 68, 68, 15, 15, -287, 68,
	136, 68, 68, 68, 68, 65, 68, 137, 68, 137,
	-293, -287, 68, 68, -287, -287, -287, -293, 68, -287,
	-287, -287, -287, -287, -287, -287, -287, -353, 409, 137,
	68, 73, 137, 22, 137, -146, 36, 37, 147, 150,
	150, 149, -173, -175, -176, -177, -178, -179, 115, 138,
	139, -166, -167, -168, -169, -192, -246, 172, 175, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	233, 167, 168, 169, 170, 188, 153, 173, 154, 155,
	156, 157, 158, 159, 162, 163, 164, 161, -262, -156,
	35, -467, 366, -475, 137, 40, -473, 449, -308, 65,
	-129, 15, -186, -186, -186, -199, 34, 15, -138, -187,
	-262, 67, 68, 137, -287, -316, 65, -262, -255, -230,
	-186, -262, -230, -230, -273, -275, -275, -271, 136, -254,
	-156, 137, -182, -189, -183, -185, -246, -278, -184, 227,
	-437, 225, 223, 89, 228, 279, 90, 218, -224, 218,
	90, 224, 228, 223, -225, 218, -259, 105, -259, -253,
	132, -259, -259, -259, -259, 256, 256, -259, -259, -259,
	-259, -259, -259, -259, -259, -259, -259, -259, -259, -259,
	-259, 67, -468, 366, 30, 325, -475, -130, 319, 30,
	-236, -237, -238, -239, 53, 57, 59, 54, 55, 56,
	60, 30, 137, -260, -264, 34, -262, 73, -260, -134,
	-139, -144, -260, 67, 220, 67, 105, -339, -339, -339,
	40, -261, -484, 445, 439, 137, 64, -166, -174, -230,
	-137, -139, -262, 73, -262, 124, -230, 102, -6, 100,
	-117, -116, -115, 103, 543, 549, 102, 102, 102, 68,
	68, 68, 137, 68, 68, 68, 137, 68, 137, -411,
	419, 39, 137, 67, 68, 137, 46, 137, 105, 68,
	137, 68, 46, 136, 395, -262, -422, 68, -345, 137,
	220, 136, 136, -321, 345, -261, -323, 20, 489, -246,
	38, -252, -251, 73, 557, 68, -288, -288, 94, -285,
	-282, 68, 102, -287, 100, -190, -192, 361, 362, -191,
	-197, 133, 171, 233, 170, 169, 167, 361, 362, -207,
	-262, -287, -287, 68, -287, -287, 15, -262, -207, -283,
	-287, -151, 68, -352, -353, -352, 68, 68, 68, 68,
	-352, 68, 68, 68, 68, 68, 68, 68, 68, 67,
	-404, -411, -287, -287, -148, -147, 43, 150, 353, 68,
	137, -246, 68, 137, -192, 34, -470, 421, 368, -259,
	-280, -279, 321, 41, -391, 388, 374, 375, -322, 247,
	-262, 64, 309, 310, 311, 312, -303, -304, -302, -306,
	-464, 67, 67, 67, -372, 299, -192, -186, -138, -262,
	15, 137, -463, 136, -1, -262, -315, -273, -230, -490,
	-230, -273, -273, -275, -262, 34, -223, -192, -184, -436,
	-437, -305, -262, 90, -436, 90, 67, -262, -262, -262,
	90, 90, -262, 79, 79, -259, -259, 79, 73, 73,
	73, -259, -259, 79, 73, -264, 79, 79, 79, 79,
	40, 73, -212, 40, 267, 271, 268, 269, 270, 79,
	40, 79, 40, 79, 40, -262, 67, -438, -439, 73,
	-470, -259, 325, 105, -280, -128, 77, 31, -160, 213,
	210, -464, -327, -326, -246, -143, -143, -143, -143, 53,
	53, 53, 58, 53, 58, 53, -238, -327, -145, -156,
	-264, 68, -480, -479, -478, -476, 61, 221, 62, -292,
	-323, -276, 73, -330, -186, -186, 68, -232, 17, 136,
	-232, 98, -6, -113, -115, -287, -6, -287, 545, 335,
	546, 73, 79, 79, -419, 405, 400, 402, 90, -294,
	-406, -405, 46, -131, -154, -398, -441, -404, -262, 46,
	-131, -398, -262, 79, 15, -320, -315, 124, 124, -262,
	346, -331, 73, 367, 73, 216, 558, 137, 105, -252,
	-282, -287, 68, -200, 158, 157, -200, 68, -377, -377,
	-376, -379, -376, -200, -200, 68, 68, 23, 68, 68,
	68, -287, 68, 68, 137, -395, 458, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-296, -295, 239, -419, 44, 45, 73, 73, -177, -192,
	214, -168, 40, -131, -471, 77, -465, 73, -262, -472,
	77, 369, 135, 323, 40, 370, 371, 385, 318, 79,
	79, 376, -466, -262, -161, 319, -186, -302, -253, 132,
	258, 302, -180, -181, -182, -180, -180, -373, 301, 20,
	79, 123, -157, 65, 136, -139, -187, -262, 124, 68,
	-230, -262, -230, -230, -273, -131, -204, -203, -201, 84,
	95, 40, 359, -202, 77, 132, 272, 250, 273, -221,
	-277, 64, 365, 223, 89, 90, 347, -278, -434, -262,
	-432, -434, -262, -432, -432, -305, -287, -262, -226, 307,
	308, -207, -207, 73, 73, -208, 250, -188, 68, 137,
	105, -471, -465, 105, 73, -472, 73, 137, -160, -160,
	-230, 137, 105, -163, -162, 64, 65, -164, 64, -162,
	53, 53, -230, -478, -477, 23, -437, -437, -437, 68,
	68, -231, 18, 20, 124, -231, 102, 100, 102, 102,
	-262, 68, 68, -383, 537, -415, -417, 400, 20, 20,
	13, 68, -398, -398, -315, -331, 388, -186, -251, 73,
	558, -287, 68, -287, 68, 73, -151, 20, -383, -170,
	-192, -281, 73, -469, 379, 73, 73, 79, 40, 79,
	135, 372, -392, -128, -160, 67, -259, -259, -259, -262,
	68, 137, 68, 68, -374, 238, 79, 123, 79, 123,
	79, -260, -139, -262, -230, -463, 136, -230, -230, -201,
	84, -283, 73, -209, -261, 133, -210, 40, 271, 267,
	-211, 40, 251, 252, -213, 67, 279, 13, 90, 90,
	-186, 67, 67, 65, 289, 67, 67, -434, 68, 251,
	252, 68, -439, 73, -469, 73, -464, -151, -326, -404,
	-287, 67, -287, 67, 53, 19, 17, -287, -293, 222,
	-6, 546, 335, -214, 538, 73, 20, 73, -413, 73,
	-327, -109, -409, -358, 68, 68, -352, -355, -354, -357,
	406, 281, 412, -293, -214, 488, 20, 489, 322, 40,
	79, 40, 373, -310, -312, -246, 67, -207, -209, 73,
	-205, -206, -227, -182, -108, -107, -205, -375, 141, 79,
	123, 79, 79, -230, -230, 79, 67, -399, -311, 67,
	-310, -310, -435, 309, 310, 311, 313, 312, -435, -310,
	-310, 67, -333, -332, 280, 95, -152, -155, -433, -262,
	223, 20, 20, -262, -262, -249, 539, 79, 73, 402,
	-384, 540, -418, 405, -412, -410, 400, 401, 402, 403,
	68, -356, 97, 372, 376, -287, -249, -171, -262, 73,
	367, 73, 322, 68, 137, -376, -287, -347, 239, 137,
	-227, -109, -347, -390, 149, 300, 489, 79, 123, 79,
	-151, 68, -287, -297, -216, -215, 485, -310, 68, 68,
	68, 68, -310, 280, 68, 68, 137, 67, 20, 73,
	-420, 221, -416, -417, 404, -410, 20, 402, 20, 20,
	-356, 535, 410, 411, 410, 411, 34, 388, -313, -312,
	-146, 68, -348, 288, 20, -227, -348, 300, 79, 123,
	79, -152, 68, -220, -218, -219, 64, 417, 277, 278,
	68, -313, -313, -313, -313, 68, -262, 223, -250, -262,
	-413, -427, 67, 79, -415, -414, -416, 20, -413, 20,
	-413, -413, 94, 73, -314, 229, 77, 489, 307, 308,
	-146, 20, -349, 281, 282, -350, -362, 284, 79, -332,
	-219, 64, -218, 64, 14, 13, -221, 68, 137, -431,
	30, 68, -426, -425, -247, -421, -262, 405, 406, 73,
	-413, -356, -259, 73, 306, -246, 67, -360, 285, 67,
	-358, 67, -358, 90, 310, -217, 274, 275, 30, 149,
	-217, -262, -430, -429, -428, 68, 137, 136, 79, -262,
	-346, -351, 286, 79, -283, 67, -283, 67, -359, 283,
	67, 84, 40, 276, 137, 105, -425, -262, 68, -364,
	67, 20, 68, -346, 68, -346, 67, 105, -283, -429,
	40, -287, 136, -365, -363, 239, -350, 68, 68, 68,
	-346, 79, 68, -262, 68, 137, -262, -361, 287, 68,
	-363, -366, 46, 79, -370, -367, 67, -227, 241, 115,
	-370, -227, -369, -368, 286, 242, 67, 68, 137, -262,
	238, 67, -293, -368, -367, -293, 68, 68,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 245,
	246, 247, 746, 747, 748, 749, 750, 0, 0, 0,
	0, 520, 521, 0, 492, 0, 0, 0, 0, 0,
	0, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 335, 336, 337,
	338, 339, 340, 0, 270, 266, 206, 207, 208, 209,
	277, 278, 365, 0, 0, 0, 0, 603, -2, 53,
	259, 0, 250, 250, 751, 752, 753, 754, 755, 756,
	757, 758, -2, 533, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 324, 325, 326,
	320, 321, 323, 322, -2, 0, 533, 0, 0, 0,
	623, 0, 0, 638, 660, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1043, 1044, 1045, 1046,
	-2, 1510, 1489, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 0, 243, 241, 1489, 1510, 1570,
	1603, 0, 763, 0, 581, 0, 586, 1006, 581, 271,
	522, 523, 623, 623, 490, 0, 306, 0, 1502, 310,
	0, 0, 0, 487, 301, 302, 303, 304, 305, 0,
	745, 0, 0, 297, 0, 265, 1561, 0, 0, 0,
	0, 0, 0, 150, 834, 152, 836, 156, 163, 0,
	0, 168, 169, 172, 173, 174, 175, 176, 0, 180,
	0, 182, 185, 0, 187, 188, 0, 191, 192, 193,
	0, 203, 204, 205, 837, 838, 839, -2, 81, 761,
	1427, 1322, 0, 1329, 1330, 1341, 1352, 1116, 1117, 1118,
	1119, 0, 0, 0, 0, 0, 1126, 1127, 0, 1141,
	1663, 0, 1133, 1134, 1135, 1136, 1137, 90, 102, 103,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	0, 1295, 1103, 1043, 0, 1671, 0, 1691, 1696, 1697,
	1698, 1699, 1690, 0, 0, 1280, 0, 1270, 0, 0,
	-2, -2, 0, 0, 1629, -2, 1668, 1687, 1695, 1672,
	1694, 1665, 1666, 1660, 1661, 1662, 1664, 1673, 1675, 1686,
	0, 1682, 1692, 1693, 0, 0, 104, 105, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1286, -2, 1288, 1289, 1291, 1292, 1293, 1294, -2,
	1297, 1298, 1299, -2, -2, 1302, 1303, 1304, 1305, 1306,
	1307, 1310, -2, 1312, -2, -2, 1282, 1283, 1284, 1285,
	1274, 1275, 1276, 1277, 1278, 1279, -2, -2, -2, 623,
	696, 0, -2, 0, 0, 0, 643, 646, 649, 652,
	0, 54, 55, 260, 261, 249, 251, 0, 255, 0,
	248, 0, 0, 0, 866, 866, 866, 866, 866, 0,
	866, 0, 0, 0, 866, 841, 842, 843, 864, 865,
	912, 538, 534, 535, 536, 537, 611, 0, 613, 616,
	468, 415, 0, 0, 468, 0, 428, 421, 0, 0,
	0, 468, 0, 0, 618, 618, 0, 471, 478, 468,
	468, -2, 468, 468, 468, 0, 434, 435, 436, 421,
	0, 421, 440, 441, 442, 453, 454, 479, 1451, 0,
	0, 365, 0, 365, 0, 365, 365, 540, 1561, 0,
	0, 217, 1629, 222, 0, 1509, 1575, 1524, 0, 0,
	1542, 0, -2, 0, 287, 618, 0, 624, 0, 623,
	0, 0, 365, 365, 365, 365, 365, 365, 365, 365,
	0, 0, 0, 365, 0, 0, 661, 662, 657, 658,
	659, 663, 664, 5, 6, 19, 0, 0, 0, 0,
	0, 0, 60, 59, 0, 1428, 1446, 1383, 1384, 1385,
	1433, 1387, 1437, 1437, 1437, 1437, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 0, 0, 1426, 1406, 1435,
	1435, 1435, 1433, 1430, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1440, 1440,
	1443, 1440, 0, 1320, 0, 0, 0, 0, 585, 0,
	0, 618, -2, 0, 491, 307, 1047, 0, 0, 311,
	312, 0, 0, 327, 0, 330, 315, 316, 317, 0,
	0, 299, 300, 0, 0, 267, 0, 0, 0, 366,
	0, 0, 0, 0, 0, 0, 160, 157, 164, 167,
	177, 184, 0, 196, 198, 201, 158, 165, 170, 171,
	178, 199, 159, 161, 162, 166, 200, 202, 179, 183,
	197, 181, 186, 189, 190, 195, 0, 131, 0, 0,
	0, 0, 0, 1328, 0, 0, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1322, 0, 0, 1122, 1123, 1124, 1125, 1128,
	0, 1142, 0, 0, 0, 1381, 0, 1320, 1320, 0,
	1320, 1316, 0, 0, 0, 0, 0, 0, 1320, 1256,
	0, 0, 1258, 1271, 0, 0, 1260, 1261, 0, 1264,
	1265, 1320, 0, 1320, 1269, 1252, 1253, 0, 1316, 1316,
	0, 0, 1316, 1316, 1316, 1316, 1316, 1316, 1316, 1316,
	1316, 1316, 1316, 1316, 0, 618, 0, 0, 606, 0,
	587, 0, 640, 642, 0, 644, 645, 647, 648, 650,
	651, 653, 654, 56, 0, 0, 253, 0, 258, 0,
	760, 0, 0, 776, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 866, 866, 0, 540, 539, 0, 612,
	0, 0, 669, 0, 0, 0, 421, 468, 426, 427,
	423, 422, 474, 475, 471, 0, 471, 471, 669, 0,
	447, 448, 449, 468, 468, 455, 619, 456, 457, 471,
	0, 476, 477, 669, 0, 0, 669, 669, 0, 465,
	466, 467, 0, 0, 866, 0, 423, 438, 423, 1452,
	1453, 0, 875, 0, 0, 0, 486, 0, 0, 0,
	541, 210, 0, 0, 0, 0, 0, 0, 239, 240,
	0, 0, 0, 0, 0, 230, 233, 1000, 1001, 831,
	832, 234, 235, 279, 280, 0, 587, 639, 641, 635,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 518, 0, 0, 677, 671, 673, 740, 90,
	677, 8, 77, 74, 0, 19, 0, 0, 19, 19,
	0, 19, 244, 0, 1449, 1447, 1448, 1386, 1434, 0,
	1411, 0, 1412, 1413, 1414, 0, 0, 1407, 0, 1408,
	1409, 1410, 1402, 0, 1403, 1404, 0, 1405, 242, 0,
	1321, 764, 0, 560, 573, 555, 0, 562, 0, 1007,
	542, 573, 544, 0, 562, 587, 609, 587, 0, 308,
	0, 313, 0, 0, 329, 331, 332, 333, 318, 319,
	488, 295, 296, 288, 289, 290, 291, 292, 293, 294,
	298, 100, 0, 268, 269, 0, 0, 0, 144, 145,
	146, 147, 148, 149, 151, 135, 508, 510, 823, 835,
	0, 826, 0, 154, 194, 127, 0, 0, 1323, 1324,
	1325, 1326, 1327, 1331, 0, 1333, 1335, 1337, 1339, 0,
	1357, -2, -2, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1342, 1355, 1356, 0, 0,
	0, 0, 0, 0, 1353, 1353, 1348, 0, 1120, 0,
	1139, 1143, 0, 0, 0, 91, 1315, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 0, 0, 1322, 0,
	0, 0, 1317, 1318, 0, 0, 0, 1211, 0, 0,
	1217, 1218, 1219, 0, 568, 0, 1281, 1257, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 697, 0, 577, 579, 580,
	0, 607, 620, 625, 626, 629, 52, 57, 262, 263,
	0, 0, 257, 0, -2, 778, 0, 616, 0, 0,
	790, 363, 817, 0, 0, 833, 856, 862, 0, 0,
	0, 890, 0, 614, 0, 0, 709, 414, 0, 469,
	470, 418, 1561, 423, 669, 429, 424, 430, 473, 431,
	432, 433, 0, 669, 669, 468, 471, 458, 472, 471,
	461, 462, 0, 480, 484, 481, 0, 483, 437, 439,
	616, 342, 343, 0, 0, 0, 348, 1454, 1454, 0,
	1454, 1454, 1454, 1454, 0, 0, 1454, 1454, 1454, 1454,
	1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,
	0, 876, 360, 0, 0, 363, 807, 682, 0, 683,
	684, 680, 711, 735, 735, 0, 735, 715, 1006, 211,
	212, 0, 214, 215, 216, 223, 218, 220, 0, 0,
	224, 236, 237, 238, 0, 0, 0, 228, 229, 0,
	0, 282, 283, 285, 0, 605, 505, 1004, 506, 507,
	511, 0, 513, 514, 515, 778, 0, 812, 669, 0,
	678, 0, 674, 741, 0, 743, 0, 669, 0, 75,
	19, 0, 68, 65, 0, 0, 0, 0, 0, 1429,
	1382, 1450, 0, 0, 0, 1431, 0, 0, 0, 0,
	58, 589, 549, 0, 554, 570, 0, 574, 0, 0,
	566, 559, 563, 0, 0, 583, 543, 0, 0, 548,
	608, 610, 1048, 0, 314, 328, 0, 0, 0, 0,
	138, 820, 0, 139, 143, 133, 0, 0, 0, 825,
	0, 822, 827, 0, 153, 0, 0, 128, 129, 881,
	886, 0, 1332, 1334, 1336, 1338, 1340, 0, 1343, 1353,
	1353, 1349, 0, 1344, 0, 1346, 0, 1323, 0, 1144,
	0, 0, 0, 0, 0, 0, 1201, 1202, 0, 0,
	1206, 0, 1208, 1209, 1210, 1212, 0, 0, 0, 1216,
	0, 1255, 1273, 1259, 1262, 0, 1266, 0, 1268, 0,
	623, 0, 1178, 1178, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 1138, 0, 0,
	698, 589, 0, 0, 0, 632, 630, 631, 264, 252,
	254, 0, 0, 0, 766, 767, 769, 0, 772, 773,
	774, 0, 779, 780, 782, 783, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1494, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 777, 0,
	867, 797, 1454, 367, 0, 0, 819, 0, 0, 0,
	-2, 0, 0, 0, 0, 892, 0, 0, 0, 527,
	531, 23, 617, 0, 670, 416, 0, 417, 468, 425,
	669, 1006, 450, 451, 669, 468, 468, 471, 0, 482,
	0, 875, 345, 1012, 1013, 1014, 0, 0, 1018, 1025,
	866, 1073, 0, 1025, 0, 0, 1027, 1028, 346, 0,
	0, 0, 0, 0, 347, 0, 0, 1455, 0, 1454,
	1454, 0, 0, 0, 0, 1454, 1454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 797, 1454, 0, 0, 367, 804, 0, 0,
	0, 0, 0, 0, 702, 0, 0, 701, 0, 0,
	0, 0, 0, 616, 736, 0, 738, 739, 713, -2,
	0, 682, 718, 1320, 0, 0, 0, 225, 226, 227,
	231, 232, 281, 284, 286, 0, 0, 0, 519, 667,
	672, 679, 742, 744, 91, 675, 667, 0, 78, 19,
	77, 69, 70, 0, 19, 0, 0, 0, 0, 1439,
	1438, 1424, 0, 1425, 1436, 1441, 0, 1444, 0, 593,
	0, 0, 573, 575, 0, 0, 573, 0, 0, 582,
	0, 0, 573, 0, 0, 489, 101, 334, 0, 0,
	0, 0, 0, 509, 0, 824, 135, 0, 0, 155,
	0, 0, 884, 0, 886, 1319, 1345, 1347, 0, 1354,
	1350, 1121, 1129, 1140, 0, 0, 1146, 1158, 1158, 0,
	1149, 1437, 1437, 1152, 1433, 1435, 1433, 1158, 1158, 0,
	92, 0, 0, 1207, 0, 0, 0, 569, 0, 0,
	0, 1176, 1178, 1183, 1179, 1184, 1178, 1178, 1178, 1178,
	1189, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1174,
	578, 593, 621, 622, 627, 628, 0, 256, 0, 0,
	771, 0, 0, 0, 784, 0, 800, 798, 799, 0,
	814, 368, 369, 370, 371, 0, 0, 0, 818, 0,
	550, 0, 857, 858, 859, 860, 861, -2, 870, 0,
	0, 1008, 1008, 1008, 900, 0, 891, 581, 0, -2,
	0, 0, 529, 0, 0, 710, 419, 669, 443, 0,
	459, 669, 669, 468, 485, 0, 344, -2, 1017, 1037,
	1026, 1037, 1074, 1037, 1037, 866, 0, 349, 350, 351,
	0, 353, 0, 959, 960, 0, 0, 963, 964, 965,
	966, 0, 0, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 994, 995, 996, 997, 998, 999, 979,
	980, 981, 982, 983, 984, 991, 0, 0, 988, 0,
	800, 0, 0, 0, 814, 806, 0, 808, 809, 0,
	0, 552, 669, 274, 0, 705, 699, 0, 688, 703,
	704, 691, 0, 693, 0, 689, 690, 669, 681, 712,
	737, 714, 717, 719, 720, 726, 0, 0, 0, 0,
	213, 0, 387, 219, 1005, 512, 517, 665, 0, 0,
	665, 73, 76, 0, 71, 0, 0, 0, 0, 63,
	61, 1432, 0, 0, 595, 115, 0, 0, 0, 571,
	0, 576, 573, 558, 567, 557, 564, 565, 584, 573,
	547, 546, 1049, 309, 0, 821, 135, 140, 141, 142,
	136, 134, 828, 0, 830, 0, 882, 886, 0, 0,
	1351, 1145, 1130, 1147, 1159, 1160, 1148, 1131, 1150, 1151,
	1153, 1154, 1155, 1156, 1157, 1132, 1203, 0, 1205, 1213,
	1214, 0, 1263, 1267, 0, 0, 0, 1182, 1185, 1186,
	1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	623, 1175, 0, 595, 633, 634, 759, 762, 768, 770,
	0, 781, 0, 788, 789, 0, 0, 792, 793, 802,
	0, 0, 0, 373, 374, 0, 0, 0, 386, 382,
	383, 384, 364, 813, 804, 0, 0, 871, 1454, 1454,
	1454, 0, 0, 1009, 1010, 0, 0, 903, 0, 0,
	894, 0, 735, 0, 0, 669, 528, 531, 532, 615,
	420, 669, 463, 460, 669, 341, 1039, -2, 1052, 1054,
	0, 0, 1057, 1058, 0, 0, 0, 0, 1095, 1064,
	0, 0, 1068, 0, 1369, 1370, 0, 1072, 0, 1038,
	0, 1029, 1038, 0, 0, 1037, 0, 352, 354, 355,
	356, 961, 962, 967, 968, 985, 0, 0, 987, 0,
	0, 357, 0, 0, 358, 362, 805, 0, 810, 811,
	623, 0, 0, 685, 706, 0, 0, 686, 0, 687,
	692, 694, 273, 721, 0, 0, 723, 724, 725, 716,
	221, 655, 0, 0, 676, 656, 0, 19, 0, 0,
	66, 1442, 1445, 597, 0, 594, 116, 0, 0, 0,
	0, 572, 556, 545, 137, 132, 829, 118, 885, 887,
	883, 0, 1215, 0, 1178, 1177, 1171, 0, 597, 0,
	787, 785, 801, 791, 0, 815, 816, 0, 375, 376,
	0, 379, 385, 803, 551, 0, 0, 0, 0, 863,
	-2, 0, 0, -2, 906, 0, 901, 0, 893, 0,
	896, 669, 669, -2, 525, 530, 0, 444, 464, 1053,
	1055, 1056, 1059, 1060, 1002, 1003, 1061, 1100, 1101, 1102,
	1062, 1097, 1098, 1099, 1063, 0, 0, 0, 1367, 1368,
	1093, 0, 0, 0, 0, 0, 0, 0, 1023, 992,
	993, 986, 989, 990, 361, 359, 553, 618, 275, 276,
	707, 0, 700, 730, 727, 0, 0, 666, 668, 67,
	72, 0, 0, 599, 0, 596, 0, 590, 592, 126,
	561, 88, 109, 0, 1204, 1254, 1181, 0, 1172, 0,
	1166, 1167, 1168, 1173, 599, 0, 0, 0, 372, 377,
	0, 380, 381, 0, 852, 1433, 0, 872, 873, 874,
	913, -2, 956, 1011, 878, 118, 913, 897, 0, 904,
	0, 902, 895, 623, 526, 0, 0, 1270, 1088, 0,
	0, 0, 1030, 1032, 1033, 1034, 1035, 1036, 1031, 0,
	0, 0, 1022, 1024, 1069, 0, 272, 0, 0, 731,
	733, 728, 729, 62, 64, 79, 0, 598, 117, 0,
	80, 0, 106, 0, 119, 120, 0, 0, 0, 0,
	1180, 1169, 0, 0, 0, 0, 588, 0, 786, 794,
	0, 796, 378, 845, 0, 629, 0, 915, 0, 875,
	958, 880, 915, 889, 0, 899, 0, 908, 0, 905,
	618, 1096, 0, 1067, 1076, 1089, 0, 0, 845, 845,
	845, 845, 0, 1070, 708, 722, 0, 0, 0, 89,
	93, 0, 115, 112, 0, 121, 0, 0, 0, 0,
	0, 1161, 1162, 1164, 1163, 1165, 0, 795, 844, 853,
	854, 629, 877, 0, 952, 957, 879, 898, 907, 0,
	910, 524, 1065, 1075, 1077, 1078, 0, 1090, 1091, 1092,
	1094, 1015, 1016, 1019, 1020, 0, 732, 734, 0, 601,
	591, 82, 0, 0, 110, 111, 113, 0, 122, 0,
	124, 125, 0, 775, 846, 1454, 0, 0, 850, 851,
	855, 0, 940, 0, 0, 946, 0, 953, 909, 1066,
	1079, 0, 1080, 0, 0, 0, 1021, 600, 0, 888,
	0, 94, 0, 96, 98, 99, 1040, 107, 108, 114,
	123, 1170, 0, 848, 0, 916, 0, 918, 0, 0,
	0, 0, 0, 950, 0, 1081, 1083, 1084, 0, 0,
	1082, 602, 83, 84, 0, 95, 0, 0, 847, 849,
	0, 920, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 1085, 1087, 1086, 0, 0, 97, 1041, 917, 914,
	0, 952, 942, 0, 944, 0, 0, 0, 0, 85,
	86, 87, 0, 0, 922, 0, 938, 943, 945, 947,
	0, 951, 949, 1042, 921, 0, 934, 919, 0, 948,
	923, -2, 0, 939, 924, -2, 0, 932, 0, 0,
	925, 933, 0, 928, 0, 0, 0, 927, 0, -2,
	935, 0, 0, 929, -2, 0, 937, 936,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 127, 119, 3,
	67, 68, 124, 122, 137, 123, 136, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 555, 554,
	106, 105, 107, 3, 556, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 557, 118, 558, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 104,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	120, 121, 126, 128, 131, 132, 133, 134, 135, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:707
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:714
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:720
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:728
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:734
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:738
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:753
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:757
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:763
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:811
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:831
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:837
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:844
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:852
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:858
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:867
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:877
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:885
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:893
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:901
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:911
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:919
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:936
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:945
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:959
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:965
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:969
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:975
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:984
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:994
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:998
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1004
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1017
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1023
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1044
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1057
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1068
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1074
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1078
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1084
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1091
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1099
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1103
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1117
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1121
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1125
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1138
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1144
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1153
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1164
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1168
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1174
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1178
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1184
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1188
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1194
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1218
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1237
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1241
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1245
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1261
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1269
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1276
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1281
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1288
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1297
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1321
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1325
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1331
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1337
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1355
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1395
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1399
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1403
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1408
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1412
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1442
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1455
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1459
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1482
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1495
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1507
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1531
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1535
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1539
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1543
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1547
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1551
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1558
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1562
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1568
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1575
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1584
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1588
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1594
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1598
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1662
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1666
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1670
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1674
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1678
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1682
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1714
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1718
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1722
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1726
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1730
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1734
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1738
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1886
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1892
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1896
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1902
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1927
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1935
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1958
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2026
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2030
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2034
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2040
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2044
		{
			yyVAL.str = yyDollar[1].str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2050
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2054
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2060
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2064
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2075
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2081
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2086
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2090
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2094
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2098
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2102
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2106
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2110
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2114
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2118
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2124
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2128
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2136
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2141
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2172
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2189
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2196
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2207
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2222
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2244
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2248
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2254
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2306
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2358
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2374
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2429
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2435
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2446
		{
			yyVAL.str = "true"
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2447
		{
			yyVAL.str = "false"
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2488
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2492
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2498
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2509
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2513
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2519
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2547
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2555
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2568
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2575
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2604
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2610
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2641
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2654
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2670
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2674
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2682
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2686
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2690
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2694
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2736
		{
			yyVAL.item = nil
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2741
		{
			yyVAL.item = nil
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2778
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2787
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2791
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2804
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2815
		{
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2819
		{
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2824
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2833
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2841
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2847
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2853
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2859
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2865
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2877
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2902
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2931
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2941
		{
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2943
		{
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2991
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2997
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3012
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3044
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3092
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3096
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3101
		{
			yyVAL.str = ""
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3105
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3111
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3124
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3128
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3153
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3157
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3163
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3169
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3173
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3177
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3183
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3187
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3237
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3241
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3247
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3265
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3326
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3338
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3354
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3367
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3378
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3382
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3388
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3393
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3400
		{
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3402
		{
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3405
		{
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3414
		{
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3418
		{
		}
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3423
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3432
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3445
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3453
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3467
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3500
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3506
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3510
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3516
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3529
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3537
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3551
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3570
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3574
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3583
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3587
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3593
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3602
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3606
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3612
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3616
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3622
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3626
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3632
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3637
		{
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3648
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3652
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3668
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3674
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3678
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3684
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3688
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3710
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3717
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3724
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3742
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3761
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3767
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3774
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3778
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3791
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3795
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3800
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3804
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3811
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3816
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3823
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3829
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3833
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3837
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3841
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3845
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3849
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3855
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3862
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3871
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3875
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3881
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3893
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3902
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3908
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3912
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3916
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3925
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3931
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3937
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3941
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3952
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3956
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3960
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3965
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3969
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3973
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3979
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3983
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3987
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4001
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4005
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4015
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4025
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4035
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4047
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4055
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4063
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4072
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4080
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4088
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4096
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4104
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4112
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4120
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4128
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4136
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4157
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4171
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4175
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4179
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4205
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4214
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4223
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4229
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4233
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4239
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4243
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4248
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4252
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4257
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4265
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4271
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4279
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4297
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4303
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4321
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4330
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4340
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4344
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4354
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4358
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4362
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4366
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4372
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4382
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4386
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4392
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4402
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4408
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4414
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4418
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4422
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4432
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4442
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4448
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4452
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4458
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4462
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4472
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4485
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4491
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4497
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4528
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4532
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4548
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4552
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4556
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4561
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4565
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4569
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4573
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4582
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4586
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4590
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4594
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4599
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4603
		{
			yyVAL.str = yyDollar[1].str
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4607
		{
			yyVAL.str = yyDollar[2].str
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4613
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4619
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4623
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4627
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4635
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4641
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 759:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4684
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4690
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 762:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4696
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4706
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4711
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4717
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4724
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4728
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4734
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4740
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4745
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4749
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4753
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4757
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4776
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4781
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4787
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4794
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4798
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4804
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4810
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4814
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4824
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4830
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4836
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4847
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4859
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4865
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4875
		{
			yyVAL.str = yyDollar[1].str
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4879
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4885
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4892
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4898
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4906
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4912
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4919
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4927
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4933
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4942
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4965
		{
			yyVAL.str = ""
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4969
		{
			yyVAL.str = yyDollar[2].str
		}
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4975
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4989
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4995
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5001
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5007
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5016
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5025
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5030
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5044
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5150
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5154
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5160
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5170
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5174
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5180
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5190
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5194
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5198
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5203
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5207
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5213
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5220
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5226
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5235
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5242
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5251
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5255
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5261
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5275
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5279
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5288
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5292
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5296
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5300
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5306
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5329
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5351
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5355
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5359
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5363
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5367
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5373
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5377
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5383
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5388
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5397
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5401
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5409
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5415
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5430
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5444
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5453
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5459
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5463
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5473
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5477
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5482
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5486
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5492
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5504
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5513
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5526
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5533
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5551
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5562
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5566
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5571
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5575
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5582
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5593
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5606
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5620
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5628
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5635
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5642
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5649
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5656
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5660
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5664
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5672
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5679
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5690
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5697
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5708
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5715
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5722
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5729
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5749
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5763
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5770
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5781
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5794
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5800
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5804
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5810
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5819
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5833
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5839
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5843
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5849
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5856
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5865
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5869
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5878
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5883
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5887
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5892
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5896
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5906
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5910
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5921
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5929
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5937
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5945
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5956
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5965
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5975
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5985
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5989
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6007
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6013
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6017
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6021
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6027
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6031
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6035
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6039
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6043
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6047
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6052
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6056
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6060
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6064
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6068
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6072
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6076
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6080
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6084
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6092
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6096
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6104
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6108
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6112
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6116
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6120
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6124
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6128
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6132
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6136
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6140
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6147
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6151
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6157
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6162
		{
			yyVAL.str = ""
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6166
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6170
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6180
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6184
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6188
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6192
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6196
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6210
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6214
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6223
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6228
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6241
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6245
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6255
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6259
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6265
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6274
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6299
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6313
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6328
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6337
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6347
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6361
		{
			yyVAL.str = ""
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6365
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6375
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6381
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6387
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6401
		{
			yyVAL.str = ""
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6405
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6411
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6417
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6421
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6425
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6431
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6435
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6439
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6443
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6449
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6453
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6457
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6462
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6466
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6472
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6476
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6482
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6486
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6490
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6494
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6498
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6502
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6507
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6511
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6515
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6519
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6523
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6527
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6531
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6535
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6548
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6558
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6563
		{
			yyVAL.str = ""
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6567
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6573
		{
			yyVAL.str = ""
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6577
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6595
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6602
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6609
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6616
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6623
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6632
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6638
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6644
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6648
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6652
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6656
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6660
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6665
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6672
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6676
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6680
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6689
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6694
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6698
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6714
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6720
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6724
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6728
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6736
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6744
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6748
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6752
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6756
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6764
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6768
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6774
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6778
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6782
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6810
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6814
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6818
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6823
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6831
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6840
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6849
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6853
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6857
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6861
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6865
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6871
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6884
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6893
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6899
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6903
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6909
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6918
		{
			t := yyVAL.columnTypeUnion()
			if strings.ToLower(t.InternalType.FamilyString) == "binary" {
				t.InternalType.Scale = -1
			}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6924
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6958
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6971
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6984
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6996
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7010
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7025
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7040
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7057
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7072
		{
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7078
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7082
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7086
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7092
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7096
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7118
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7125
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7138
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7145
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7154
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7159
		{
			yyVAL.str = ","
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7163
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7175
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7185
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7196
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7215
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7224
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7234
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7244
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7254
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7264
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7274
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7284
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7294
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7304
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7314
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7324
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7334
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7344
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7369
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7377
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7385
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7393
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7403
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7411
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7420
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7428
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7436
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7444
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7452
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7463
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7485
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7496
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7518
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7554
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7566
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7578
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7589
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7597
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7604
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7611
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7623
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7631
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7641
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7651
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7659
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7670
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7679
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7688
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7696
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7706
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7714
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7728
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7738
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7757
		{
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7759
		{
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7800
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7811
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7815
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7819
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7825
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7834
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7840
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7844
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7851
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7855
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7859
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7867
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7871
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7875
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7879
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7885
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7889
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7893
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7897
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7901
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7905
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7909
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7913
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7917
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7921
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7929
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7933
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7937
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7941
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7945
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7949
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7953
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7957
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7961
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7965
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7975
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7981
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7985
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7992
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7996
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8000
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8006
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8010
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8014
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8018
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8022
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8026
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8030
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8036
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8040
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8044
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8048
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8054
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8058
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8071
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8076
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8080
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8084
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8088
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8092
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8096
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8110
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8114
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8121
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8132
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8137
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8143
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8155
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8167
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8179
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8192
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8205
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8218
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8231
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8244
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8270
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8283
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8296
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8309
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8324
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8351
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8393
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8441
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8458
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8470
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8490
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8510
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8546
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8559
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8572
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8585
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8598
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8610
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8622
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8634
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8646
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8670
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8682
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8694
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8706
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8719
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8732
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8747
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8755
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8764
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8774
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8797
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8802
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8808
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8815
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8819
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8824
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8828
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8834
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8840
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8847
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8854
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8863
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8870
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8894
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8900
		{
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8902
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8912
		{
			yyVAL.str = ""
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8916
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

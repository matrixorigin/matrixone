// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const STAGE = 57420
const CREDENTIALS = 57421
const ENABLE = 57422
const INTEGRAL = 57423
const HEX = 57424
const BIT_LITERAL = 57425
const FLOAT = 57426
const HEXNUM = 57427
const NULL = 57428
const TRUE = 57429
const FALSE = 57430
const LOWER_THAN_CHARSET = 57431
const CHARSET = 57432
const UNIQUE = 57433
const KEY = 57434
const OR = 57435
const PIPE_CONCAT = 57436
const XOR = 57437
const AND = 57438
const NOT = 57439
const BETWEEN = 57440
const CASE = 57441
const WHEN = 57442
const THEN = 57443
const ELSE = 57444
const END = 57445
const ELSEIF = 57446
const LOWER_THAN_EQ = 57447
const LE = 57448
const GE = 57449
const NE = 57450
const NULL_SAFE_EQUAL = 57451
const IS = 57452
const LIKE = 57453
const REGEXP = 57454
const IN = 57455
const ASSIGNMENT = 57456
const ILIKE = 57457
const SHIFT_LEFT = 57458
const SHIFT_RIGHT = 57459
const DIV = 57460
const MOD = 57461
const UNARY = 57462
const COLLATE = 57463
const BINARY = 57464
const UNDERSCORE_BINARY = 57465
const INTERVAL = 57466
const OUT = 57467
const INOUT = 57468
const BEGIN = 57469
const START = 57470
const TRANSACTION = 57471
const COMMIT = 57472
const ROLLBACK = 57473
const WORK = 57474
const CONSISTENT = 57475
const SNAPSHOT = 57476
const CHAIN = 57477
const NO = 57478
const RELEASE = 57479
const PRIORITY = 57480
const QUICK = 57481
const BIT = 57482
const TINYINT = 57483
const SMALLINT = 57484
const MEDIUMINT = 57485
const INT = 57486
const INTEGER = 57487
const BIGINT = 57488
const INTNUM = 57489
const REAL = 57490
const DOUBLE = 57491
const FLOAT_TYPE = 57492
const DECIMAL = 57493
const NUMERIC = 57494
const DECIMAL_VALUE = 57495
const TIME = 57496
const TIMESTAMP = 57497
const DATETIME = 57498
const YEAR = 57499
const CHAR = 57500
const VARCHAR = 57501
const BOOL = 57502
const CHARACTER = 57503
const VARBINARY = 57504
const NCHAR = 57505
const TEXT = 57506
const TINYTEXT = 57507
const MEDIUMTEXT = 57508
const LONGTEXT = 57509
const BLOB = 57510
const TINYBLOB = 57511
const MEDIUMBLOB = 57512
const LONGBLOB = 57513
const JSON = 57514
const ENUM = 57515
const UUID = 57516
const GEOMETRY = 57517
const POINT = 57518
const LINESTRING = 57519
const POLYGON = 57520
const GEOMETRYCOLLECTION = 57521
const MULTIPOINT = 57522
const MULTILINESTRING = 57523
const MULTIPOLYGON = 57524
const INT1 = 57525
const INT2 = 57526
const INT3 = 57527
const INT4 = 57528
const INT8 = 57529
const S3OPTION = 57530
const SQL_SMALL_RESULT = 57531
const SQL_BIG_RESULT = 57532
const SQL_BUFFER_RESULT = 57533
const LOW_PRIORITY = 57534
const HIGH_PRIORITY = 57535
const DELAYED = 57536
const CREATE = 57537
const ALTER = 57538
const DROP = 57539
const RENAME = 57540
const ANALYZE = 57541
const ADD = 57542
const RETURNS = 57543
const SCHEMA = 57544
const TABLE = 57545
const SEQUENCE = 57546
const INDEX = 57547
const VIEW = 57548
const TO = 57549
const IGNORE = 57550
const IF = 57551
const PRIMARY = 57552
const COLUMN = 57553
const CONSTRAINT = 57554
const SPATIAL = 57555
const FULLTEXT = 57556
const FOREIGN = 57557
const KEY_BLOCK_SIZE = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const MAXVALUE = 57567
const PARTITION = 57568
const REORGANIZE = 57569
const LESS = 57570
const THAN = 57571
const PROCEDURE = 57572
const TRIGGER = 57573
const STATUS = 57574
const VARIABLES = 57575
const ROLE = 57576
const PROXY = 57577
const AVG_ROW_LENGTH = 57578
const STORAGE = 57579
const DISK = 57580
const MEMORY = 57581
const CHECKSUM = 57582
const COMPRESSION = 57583
const DATA = 57584
const DIRECTORY = 57585
const DELAY_KEY_WRITE = 57586
const ENCRYPTION = 57587
const ENGINE = 57588
const MAX_ROWS = 57589
const MIN_ROWS = 57590
const PACK_KEYS = 57591
const ROW_FORMAT = 57592
const STATS_AUTO_RECALC = 57593
const STATS_PERSISTENT = 57594
const STATS_SAMPLE_PAGES = 57595
const DYNAMIC = 57596
const COMPRESSED = 57597
const REDUNDANT = 57598
const COMPACT = 57599
const FIXED = 57600
const COLUMN_FORMAT = 57601
const AUTO_RANDOM = 57602
const ENGINE_ATTRIBUTE = 57603
const SECONDARY_ENGINE_ATTRIBUTE = 57604
const INSERT_METHOD = 57605
const RESTRICT = 57606
const CASCADE = 57607
const ACTION = 57608
const PARTIAL = 57609
const SIMPLE = 57610
const CHECK = 57611
const ENFORCED = 57612
const RANGE = 57613
const LIST = 57614
const ALGORITHM = 57615
const LINEAR = 57616
const PARTITIONS = 57617
const SUBPARTITION = 57618
const SUBPARTITIONS = 57619
const CLUSTER = 57620
const TYPE = 57621
const ANY = 57622
const SOME = 57623
const EXTERNAL = 57624
const LOCALFILE = 57625
const URL = 57626
const PREPARE = 57627
const DEALLOCATE = 57628
const RESET = 57629
const EXTENSION = 57630
const INCREMENT = 57631
const CYCLE = 57632
const MINVALUE = 57633
const PUBLICATION = 57634
const SUBSCRIPTIONS = 57635
const PUBLICATIONS = 57636
const PROPERTIES = 57637
const PARSER = 57638
const VISIBLE = 57639
const INVISIBLE = 57640
const BTREE = 57641
const HASH = 57642
const RTREE = 57643
const BSI = 57644
const ZONEMAP = 57645
const LEADING = 57646
const BOTH = 57647
const TRAILING = 57648
const UNKNOWN = 57649
const EXPIRE = 57650
const ACCOUNT = 57651
const ACCOUNTS = 57652
const UNLOCK = 57653
const DAY = 57654
const NEVER = 57655
const PUMP = 57656
const MYSQL_COMPATIBILITY_MODE = 57657
const SECOND = 57658
const ASCII = 57659
const COALESCE = 57660
const COLLATION = 57661
const HOUR = 57662
const MICROSECOND = 57663
const MINUTE = 57664
const MONTH = 57665
const QUARTER = 57666
const REPEAT = 57667
const REVERSE = 57668
const ROW_COUNT = 57669
const WEEK = 57670
const REVOKE = 57671
const FUNCTION = 57672
const PRIVILEGES = 57673
const TABLESPACE = 57674
const EXECUTE = 57675
const SUPER = 57676
const GRANT = 57677
const OPTION = 57678
const REFERENCES = 57679
const REPLICATION = 57680
const SLAVE = 57681
const CLIENT = 57682
const USAGE = 57683
const RELOAD = 57684
const FILE = 57685
const TEMPORARY = 57686
const ROUTINE = 57687
const EVENT = 57688
const SHUTDOWN = 57689
const NULLX = 57690
const AUTO_INCREMENT = 57691
const APPROXNUM = 57692
const SIGNED = 57693
const UNSIGNED = 57694
const ZEROFILL = 57695
const ENGINES = 57696
const LOW_CARDINALITY = 57697
const AUTOEXTEND_SIZE = 57698
const ADMIN_NAME = 57699
const RANDOM = 57700
const SUSPEND = 57701
const ATTRIBUTE = 57702
const HISTORY = 57703
const REUSE = 57704
const CURRENT = 57705
const OPTIONAL = 57706
const FAILED_LOGIN_ATTEMPTS = 57707
const PASSWORD_LOCK_TIME = 57708
const UNBOUNDED = 57709
const SECONDARY = 57710
const RESTRICTED = 57711
const USER = 57712
const IDENTIFIED = 57713
const CIPHER = 57714
const ISSUER = 57715
const X509 = 57716
const SUBJECT = 57717
const SAN = 57718
const REQUIRE = 57719
const SSL = 57720
const NONE = 57721
const PASSWORD = 57722
const MAX_QUERIES_PER_HOUR = 57723
const MAX_UPDATES_PER_HOUR = 57724
const MAX_CONNECTIONS_PER_HOUR = 57725
const MAX_USER_CONNECTIONS = 57726
const FORMAT = 57727
const VERBOSE = 57728
const CONNECTION = 57729
const TRIGGERS = 57730
const PROFILES = 57731
const LOAD = 57732
const INFILE = 57733
const TERMINATED = 57734
const OPTIONALLY = 57735
const ENCLOSED = 57736
const ESCAPED = 57737
const STARTING = 57738
const LINES = 57739
const ROWS = 57740
const IMPORT = 57741
const MODUMP = 57742
const OVER = 57743
const PRECEDING = 57744
const FOLLOWING = 57745
const GROUPS = 57746
const DATABASES = 57747
const TABLES = 57748
const SEQUENCES = 57749
const EXTENDED = 57750
const FULL = 57751
const PROCESSLIST = 57752
const FIELDS = 57753
const COLUMNS = 57754
const OPEN = 57755
const ERRORS = 57756
const WARNINGS = 57757
const INDEXES = 57758
const SCHEMAS = 57759
const NODE = 57760
const LOCKS = 57761
const ROLES = 57762
const TABLE_NUMBER = 57763
const COLUMN_NUMBER = 57764
const TABLE_VALUES = 57765
const TABLE_SIZE = 57766
const NAMES = 57767
const GLOBAL = 57768
const PERSIST = 57769
const SESSION = 57770
const ISOLATION = 57771
const LEVEL = 57772
const READ = 57773
const WRITE = 57774
const ONLY = 57775
const REPEATABLE = 57776
const COMMITTED = 57777
const UNCOMMITTED = 57778
const SERIALIZABLE = 57779
const LOCAL = 57780
const EVENTS = 57781
const PLUGINS = 57782
const CURRENT_TIMESTAMP = 57783
const DATABASE = 57784
const CURRENT_TIME = 57785
const LOCALTIME = 57786
const LOCALTIMESTAMP = 57787
const UTC_DATE = 57788
const UTC_TIME = 57789
const UTC_TIMESTAMP = 57790
const REPLACE = 57791
const CONVERT = 57792
const SEPARATOR = 57793
const TIMESTAMPDIFF = 57794
const CURRENT_DATE = 57795
const CURRENT_USER = 57796
const CURRENT_ROLE = 57797
const SECOND_MICROSECOND = 57798
const MINUTE_MICROSECOND = 57799
const MINUTE_SECOND = 57800
const HOUR_MICROSECOND = 57801
const HOUR_SECOND = 57802
const HOUR_MINUTE = 57803
const DAY_MICROSECOND = 57804
const DAY_SECOND = 57805
const DAY_MINUTE = 57806
const DAY_HOUR = 57807
const YEAR_MONTH = 57808
const SQL_TSI_HOUR = 57809
const SQL_TSI_DAY = 57810
const SQL_TSI_WEEK = 57811
const SQL_TSI_MONTH = 57812
const SQL_TSI_QUARTER = 57813
const SQL_TSI_YEAR = 57814
const SQL_TSI_SECOND = 57815
const SQL_TSI_MINUTE = 57816
const RECURSIVE = 57817
const CONFIG = 57818
const DRAINER = 57819
const MATCH = 57820
const AGAINST = 57821
const BOOLEAN = 57822
const LANGUAGE = 57823
const WITH = 57824
const QUERY = 57825
const EXPANSION = 57826
const ADDDATE = 57827
const BIT_AND = 57828
const BIT_OR = 57829
const BIT_XOR = 57830
const CAST = 57831
const COUNT = 57832
const APPROX_COUNT_DISTINCT = 57833
const APPROX_PERCENTILE = 57834
const CURDATE = 57835
const CURTIME = 57836
const DATE_ADD = 57837
const DATE_SUB = 57838
const EXTRACT = 57839
const GROUP_CONCAT = 57840
const MAX = 57841
const MID = 57842
const MIN = 57843
const NOW = 57844
const POSITION = 57845
const SESSION_USER = 57846
const STD = 57847
const STDDEV = 57848
const MEDIAN = 57849
const STDDEV_POP = 57850
const STDDEV_SAMP = 57851
const SUBDATE = 57852
const SUBSTR = 57853
const SUBSTRING = 57854
const SUM = 57855
const SYSDATE = 57856
const SYSTEM_USER = 57857
const TRANSLATE = 57858
const TRIM = 57859
const VARIANCE = 57860
const VAR_POP = 57861
const VAR_SAMP = 57862
const AVG = 57863
const RANK = 57864
const ROW_NUMBER = 57865
const DENSE_RANK = 57866
const NEXTVAL = 57867
const SETVAL = 57868
const CURRVAL = 57869
const LASTVAL = 57870
const ARROW = 57871
const ROW = 57872
const OUTFILE = 57873
const HEADER = 57874
const MAX_FILE_SIZE = 57875
const FORCE_QUOTE = 57876
const PARALLEL = 57877
const UNUSED = 57878
const BINDINGS = 57879
const DO = 57880
const DECLARE = 57881
const LOOP = 57882
const WHILE = 57883
const LEAVE = 57884
const ITERATE = 57885
const UNTIL = 57886
const CALL = 57887
const SPBEGIN = 57888
const BACKEND = 57889
const SERVERS = 57890
const KILL = 57891
const QUERY_RESULT = 57892

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"ENABLE",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9862

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 112,
	21, 651,
	-2, 632,
	-1, 126,
	222, 884,
	-2, 955,
	-1, 149,
	42, 472,
	222, 472,
	249, 479,
	250, 479,
	433, 472,
	-2, 505,
	-1, 185,
	569, 1650,
	-2, 390,
	-1, 510,
	301, 130,
	408, 130,
	-2, 1562,
	-1, 573,
	68, 1361,
	-2, 1704,
	-1, 574,
	68, 1379,
	-2, 1675,
	-1, 578,
	68, 1380,
	-2, 1703,
	-1, 603,
	68, 1291,
	-2, 1766,
	-1, 604,
	68, 1292,
	-2, 1765,
	-1, 605,
	68, 1293,
	-2, 1755,
	-1, 606,
	68, 1730,
	-2, 1750,
	-1, 607,
	68, 1731,
	-2, 1751,
	-1, 608,
	68, 1732,
	-2, 1757,
	-1, 609,
	68, 1733,
	-2, 1740,
	-1, 610,
	68, 1734,
	-2, 1748,
	-1, 611,
	68, 1735,
	-2, 1758,
	-1, 612,
	68, 1736,
	-2, 1759,
	-1, 613,
	68, 1737,
	-2, 1764,
	-1, 614,
	68, 1738,
	-2, 1769,
	-1, 615,
	68, 1739,
	-2, 1770,
	-1, 617,
	68, 1358,
	-2, 1551,
	-1, 621,
	68, 1363,
	-2, 1563,
	-1, 624,
	68, 1367,
	-2, 1581,
	-1, 628,
	68, 1371,
	-2, 1621,
	-1, 629,
	68, 1372,
	-2, 1699,
	-1, 637,
	68, 1382,
	-2, 1684,
	-1, 638,
	68, 1383,
	-2, 1729,
	-1, 639,
	68, 1384,
	-2, 1694,
	-1, 640,
	68, 1385,
	-2, 1719,
	-1, 651,
	68, 1269,
	-2, 1760,
	-1, 652,
	68, 1270,
	-2, 1761,
	-1, 653,
	68, 1271,
	-2, 1762,
	-1, 657,
	21, 652,
	-2, 615,
	-1, 728,
	428, 505,
	429, 505,
	-2, 473,
	-1, 771,
	109, 1551,
	120, 1551,
	140, 1551,
	-2, 1526,
	-1, 874,
	21, 652,
	-2, 615,
	-1, 974,
	21, 651,
	-2, 1169,
	-1, 1329,
	68, 1429,
	-2, 1701,
	-1, 1330,
	68, 1430,
	-2, 1702,
	-1, 1464,
	69, 796,
	-2, 802,
	-1, 1811,
	69, 1512,
	141, 1512,
	-2, 1686,
	-1, 1812,
	69, 1512,
	141, 1512,
	-2, 1685,
	-1, 1813,
	69, 1490,
	141, 1490,
	-2, 1672,
	-1, 1814,
	69, 1491,
	141, 1491,
	-2, 1677,
	-1, 1815,
	69, 1492,
	141, 1492,
	-2, 1609,
	-1, 1816,
	69, 1493,
	141, 1493,
	-2, 1603,
	-1, 1817,
	69, 1494,
	141, 1494,
	-2, 1542,
	-1, 1818,
	69, 1495,
	141, 1495,
	-2, 1674,
	-1, 1819,
	69, 1496,
	141, 1496,
	-2, 1607,
	-1, 1820,
	69, 1497,
	141, 1497,
	-2, 1602,
	-1, 1821,
	69, 1498,
	141, 1498,
	-2, 1595,
	-1, 1823,
	69, 1501,
	141, 1501,
	-2, 1719,
	-1, 1824,
	69, 1481,
	141, 1481,
	-2, 1704,
	-1, 1825,
	69, 1510,
	141, 1510,
	-2, 1675,
	-1, 1826,
	69, 1510,
	141, 1510,
	-2, 1703,
	-1, 1827,
	69, 1510,
	141, 1510,
	-2, 1564,
	-1, 1828,
	69, 1508,
	141, 1508,
	-2, 1694,
	-1, 1829,
	69, 1505,
	141, 1505,
	-2, 1586,
	-1, 1830,
	68, 1462,
	69, 1462,
	141, 1462,
	368, 1462,
	369, 1462,
	370, 1462,
	-2, 1541,
	-1, 1831,
	68, 1463,
	69, 1463,
	141, 1463,
	368, 1463,
	369, 1463,
	370, 1463,
	-2, 1543,
	-1, 1832,
	68, 1466,
	69, 1466,
	141, 1466,
	368, 1466,
	369, 1466,
	370, 1466,
	-2, 1676,
	-1, 1833,
	68, 1468,
	69, 1468,
	141, 1468,
	368, 1468,
	369, 1468,
	370, 1468,
	-2, 1659,
	-1, 1834,
	68, 1470,
	69, 1470,
	141, 1470,
	368, 1470,
	369, 1470,
	370, 1470,
	-2, 1608,
	-1, 1835,
	68, 1472,
	69, 1472,
	141, 1472,
	368, 1472,
	369, 1472,
	370, 1472,
	-2, 1591,
	-1, 1836,
	68, 1473,
	69, 1473,
	141, 1473,
	368, 1473,
	369, 1473,
	370, 1473,
	-2, 1592,
	-1, 1837,
	68, 1475,
	69, 1475,
	141, 1475,
	368, 1475,
	369, 1475,
	370, 1475,
	-2, 1540,
	-1, 1838,
	69, 1515,
	141, 1515,
	368, 1515,
	369, 1515,
	370, 1515,
	-2, 1569,
	-1, 1839,
	69, 1515,
	141, 1515,
	368, 1515,
	369, 1515,
	370, 1515,
	-2, 1582,
	-1, 1840,
	69, 1518,
	141, 1518,
	368, 1518,
	369, 1518,
	370, 1518,
	-2, 1565,
	-1, 1841,
	69, 1518,
	141, 1518,
	368, 1518,
	369, 1518,
	370, 1518,
	-2, 1624,
	-1, 1842,
	69, 1515,
	141, 1515,
	368, 1515,
	369, 1515,
	370, 1515,
	-2, 1644,
	-1, 1857,
	92, 919,
	136, 919,
	175, 919,
	178, 919,
	262, 919,
	-2, 912,
	-1, 1978,
	21, 651,
	-2, 745,
	-1, 2170,
	92, 919,
	136, 919,
	175, 919,
	178, 919,
	262, 919,
	-2, 913,
	-1, 2182,
	66, 561,
	141, 561,
	-2, 1058,
	-1, 2204,
	178, 919,
	286, 1137,
	-2, 1111,
	-1, 2489,
	178, 919,
	286, 1137,
	-2, 1112,
	-1, 2628,
	92, 919,
	136, 919,
	175, 919,
	178, 919,
	-2, 1001,
	-1, 2631,
	92, 919,
	136, 919,
	175, 919,
	178, 919,
	-2, 1001,
	-1, 2641,
	66, 561,
	141, 561,
	-2, 1059,
	-1, 2746,
	92, 919,
	136, 919,
	175, 919,
	178, 919,
	-2, 1002,
	-1, 3069,
	69, 973,
	141, 973,
	-2, 919,
	-1, 3073,
	69, 973,
	141, 973,
	-2, 919,
	-1, 3087,
	69, 977,
	141, 977,
	-2, 919,
	-1, 3092,
	69, 978,
	141, 978,
	-2, 919,
}

const yyPrivate = 57344

const yyLast = 36795

var yyAct = [...]int{
	540, 3073, 1528, 3072, 3081, 3052, 176, 1248, 519, 2955,
	521, 3011, 1310, 542, 2977, 2999, 529, 2713, 2503, 2877,
	2770, 2708, 2907, 2781, 2908, 1789, 2890, 2894, 2869, 2739,
	2581, 2736, 2803, 2738, 2582, 1005, 658, 2833, 1238, 427,
	2740, 2711, 1112, 2878, 2793, 2880, 1486, 570, 2185, 433,
	2745, 438, 438, 2461, 1313, 1170, 2703, 438, 454, 463,
	2651, 161, 463, 2279, 2280, 1604, 2518, 2609, 2264, 1896,
	2490, 2272, 1972, 2579, 2071, 1697, 523, 2567, 1569, 2278,
	2301, 1533, 474, 1809, 1666, 2275, 2550, 2433, 2430, 2517,
	2428, 2200, 770, 1899, 1069, 1866, 2171, 2070, 1616, 468,
	2377, 1807, 868, 1306, 1446, 1956, 1667, 1799, 1675, 512,
	1674, 2459, 1601, 2112, 2338, 1234, 2020, 513, 518, 1640,
	1693, 1597, 2321, 1247, 1692, 776, 1572, 1961, 1917, 705,
	1163, 2150, 1897, 1973, 2145, 1515, 764, 2206, 6, 555,
	112, 1524, 1120, 172, 8, 112, 171, 7, 1865, 54,
	1472, 1242, 36, 427, 2037, 1454, 1570, 1304, 1725, 1309,
	822, 2000, 2462, 1694, 522, 1203, 432, 1086, 1805, 1179,
	2113, 1149, 1848, 111, 35, 426, 176, 511, 176, 1239,
	813, 814, 1704, 2464, 2463, 1359, 530, 1343, 1498, 1295,
	885, 1497, 774, 1673, 444, 513, 1101, 112, 520, 1488,
	26, 1670, 15, 1656, 1043, 13, 1210, 1088, 1303, 1630,
	460, 1229, 763, 1148, 1980, 1121, 1146, 14, 704, 1471,
	32, 1364, 447, 1097, 1365, 477, 23, 655, 450, 476,
	16, 1113, 10, 1202, 162, 462, 155, 809, 657, 811,
	687, 702, 735, 1006, 1701, 2827, 2371, 1067, 2622, 1711,
	2073, 723, 2371, 2574, 2026, 2024, 810, 2023, 459, 2021,
	455, 1213, 1217, 457, 806, 806, 805, 160, 158, 806,
	434, 1133, 2701, 2334, 1215, 458, 2332, 1645, 456, 943,
	944, 945, 942, 943, 944, 945, 942, 2799, 2794, 2704,
	2580, 443, 1450, 1000, 2882, 1669, 778, 466, 656, 804,
	112, 2946, 666, 2843, 8, 2726, 780, 7, 1385, 159,
	906, 50, 151, 127, 159, 112, 159, 112, 1059, 159,
	159, 159, 159, 159, 159, 2066, 50, 151, 127, 2725,
	777, 779, 2058, 2853, 1698, 472, 1262, 2400, 159, 1255,
	50, 151, 127, 473, 1709, 749, 1852, 2844, 748, 1296,
	1998, 110, 1300, 1259, 940, 1614, 1252, 2353, 2346, 110,
	1129, 1999, 1986, 1130, 2307, 1985, 1581, 156, 1987, 1060,
	2308, 2309, 156, 1280, 1261, 659, 1299, 1254, 156, 156,
	156, 156, 156, 646, 2038, 645, 647, 648, 2995, 649,
	650, 921, 1582, 1583, 922, 1150, 156, 1152, 667, 914,
	1458, 1459, 916, 2147, 794, 744, 1116, 1511, 2993, 1109,
	1115, 1118, 1119, 2148, 1118, 1119, 1312, 2911, 2912, 938,
	773, 772, 924, 2721, 2885, 2942, 2884, 2941, 2883, 2940,
	917, 2885, 933, 2884, 753, 2883, 1780, 438, 2981, 2982,
	2804, 2805, 2806, 2807, 2801, 2871, 2583, 438, 878, 1132,
	2871, 750, 2339, 2874, 2797, 1301, 2945, 2146, 2340, 2583,
	2341, 2053, 1315, 1381, 879, 463, 463, 1378, 438, 2887,
	2592, 1380, 1377, 1379, 1383, 1384, 1298, 2610, 1598, 1382,
	873, 875, 1592, 1588, 1291, 1705, 2444, 2153, 877, 1216,
	1214, 2434, 2617, 1653, 2731, 2442, 1951, 919, 888, 2137,
	1847, 2822, 696, 2063, 2513, 910, 1223, 1222, 2702, 816,
	2364, 126, 752, 157, 936, 937, 935, 2268, 2333, 1954,
	888, 2815, 507, 1399, 2816, 509, 909, 1953, 912, 2366,
	508, 775, 976, 149, 2825, 2728, 1957, 2948, 2949, 2810,
	915, 918, 872, 789, 786, 781, 785, 787, 2439, 2440,
	2720, 2988, 2438, 2458, 901, 2840, 2722, 2815, 920, 2910,
	2816, 2526, 2527, 2997, 2441, 2468, 911, 2899, 2178, 1314,
	874, 792, 878, 465, 464, 784, 1854, 2818, 1714, 1716,
	1717, 3066, 2675, 2895, 751, 1710, 3082, 3020, 1297, 1107,
	3027, 112, 112, 778, 1612, 1613, 1321, 1324, 1325, 1131,
	2992, 3031, 1141, 780, 460, 460, 2957, 1322, 2817, 2860,
	1096, 2666, 1010, 2818, 2165, 2166, 2167, 2168, 1388, 1389,
	1390, 1391, 1392, 1393, 1386, 1387, 790, 777, 779, 1928,
	923, 931, 932, 793, 2953, 2954, 471, 2957, 913, 2771,
	2772, 2773, 2775, 2774, 2817, 2783, 2248, 1927, 1009, 892,
	782, 2436, 459, 459, 455, 455, 2655, 457, 457, 3002,
	2661, 1948, 1949, 2159, 974, 1159, 1158, 899, 1699, 458,
	458, 791, 456, 456, 780, 2826, 2596, 1065, 433, 1068,
	881, 882, 2370, 926, 890, 889, 927, 3083, 1111, 1110,
	1699, 1040, 1699, 1094, 1093, 898, 1092, 2002, 777, 779,
	894, 895, 1902, 3053, 705, 3077, 890, 889, 3089, 2841,
	2834, 783, 2868, 869, 929, 806, 806, 806, 982, 2842,
	806, 461, 2947, 806, 978, 979, 980, 981, 806, 2416,
	2633, 883, 1726, 2303, 2305, 461, 2699, 1070, 1147, 2022,
	472, 1117, 2059, 1218, 1700, 1712, 1990, 1916, 1118, 1119,
	438, 906, 1143, 1702, 1915, 1076, 1905, 427, 427, 2369,
	1080, 1079, 1078, 467, 1713, 1114, 427, 427, 1118, 1119,
	1174, 1174, 656, 438, 2152, 1071, 1072, 1073, 1074, 1075,
	51, 1077, 3003, 788, 2727, 1081, 2998, 2445, 2424, 925,
	2435, 463, 1068, 433, 51, 2668, 1206, 1206, 128, 1048,
	1108, 1599, 2823, 128, 2067, 128, 672, 176, 128, 128,
	128, 128, 128, 128, 1715, 900, 427, 1181, 2811, 775,
	514, 1083, 2812, 1018, 1019, 930, 1176, 128, 2156, 2157,
	2367, 3076, 1323, 2782, 905, 2732, 1901, 2318, 2319, 745,
	2136, 1903, 2437, 2155, 1066, 2379, 2378, 1591, 1589, 1292,
	928, 699, 700, 701, 2811, 1273, 1274, 671, 2879, 1793,
	1224, 674, 673, 1795, 1794, 1246, 1063, 1249, 1461, 2239,
	2240, 1462, 1257, 1172, 1172, 2662, 2663, 2249, 2251, 2252,
	2253, 2250, 3088, 2456, 1906, 1061, 1062, 2657, 1792, 1460,
	1045, 2656, 1278, 1154, 1156, 1904, 2304, 697, 1168, 1169,
	745, 668, 1166, 1167, 657, 1940, 1174, 669, 1174, 878,
	3000, 3001, 2753, 1103, 1104, 1183, 1263, 1489, 1802, 1095,
	444, 1757, 747, 1489, 1756, 746, 1105, 2473, 1047, 3032,
	1098, 1102, 1102, 1102, 1123, 1124, 2183, 1126, 1127, 1128,
	1142, 1803, 1804, 3095, 1922, 1085, 112, 1277, 3094, 1311,
	1633, 941, 1219, 1098, 1098, 1276, 2547, 1236, 1237, 1198,
	1970, 1134, 1135, 906, 2040, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1122, 2238, 1850,
	1125, 1354, 1355, 747, 1157, 2543, 746, 3085, 1363, 797,
	802, 803, 3067, 2629, 807, 808, 941, 3062, 1099, 812,
	1783, 1412, 2184, 1402, 1403, 1404, 1577, 660, 112, 2457,
	2058, 1971, 112, 2142, 1244, 941, 1418, 443, 780, 1419,
	941, 1253, 780, 112, 1421, 1260, 1196, 1192, 1308, 1293,
	1207, 1426, 1427, 112, 3056, 1227, 460, 1230, 1231, 1197,
	1241, 1208, 1971, 1245, 1182, 1294, 1287, 3055, 2547, 754,
	660, 943, 944, 945, 942, 3036, 3013, 437, 437, 3086,
	2139, 1289, 2184, 445, 1707, 1305, 2045, 1326, 903, 3063,
	438, 1971, 1470, 1174, 1474, 1475, 1631, 1477, 1478, 1264,
	1849, 2971, 438, 1444, 459, 705, 455, 2922, 1487, 457,
	2913, 2002, 1174, 1698, 1286, 2862, 1283, 2398, 1143, 1282,
	657, 458, 1100, 454, 456, 904, 1707, 1265, 1447, 1411,
	1580, 2861, 1269, 1889, 1394, 1395, 1788, 1398, 1761, 1707,
	1285, 2858, 1510, 871, 1284, 1413, 1281, 1707, 3014, 941,
	1516, 1516, 1307, 1143, 1302, 1143, 1143, 2857, 1420, 438,
	1422, 1470, 1470, 1514, 904, 1174, 1567, 1579, 2090, 1689,
	2856, 1469, 2855, 2972, 1610, 1345, 2829, 2680, 1476, 2830,
	1787, 427, 2830, 1174, 799, 800, 801, 2863, 1736, 1352,
	1353, 906, 1041, 1479, 1480, 1481, 863, 859, 860, 861,
	862, 2533, 2095, 1870, 2094, 2093, 2091, 1084, 438, 1470,
	1174, 1357, 1621, 2830, 438, 1624, 1625, 943, 944, 945,
	942, 1628, 1629, 2298, 2118, 1160, 1635, 3050, 2616, 2830,
	3015, 2644, 2074, 176, 1397, 2474, 176, 176, 2056, 176,
	1562, 1563, 2830, 2478, 2830, 2323, 1518, 958, 2830, 2002,
	2186, 2061, 1473, 943, 944, 945, 942, 2049, 2047, 2042,
	2035, 2033, 1593, 1735, 1499, 1423, 1501, 1502, 2092, 2060,
	1451, 1492, 1609, 2534, 2052, 1412, 1412, 1677, 2031, 1507,
	2029, 1886, 1412, 1412, 1752, 1737, 1517, 1684, 1618, 1445,
	1869, 1784, 1688, 1620, 1644, 1971, 941, 1647, 1648, 1786,
	1650, 1607, 1608, 1600, 941, 1585, 1578, 1587, 1490, 1491,
	1870, 1487, 1623, 1765, 1764, 1174, 1696, 1605, 1606, 1483,
	1755, 1495, 1496, 1484, 1473, 1503, 1746, 1638, 1098, 2043,
	2048, 2043, 2036, 2034, 1508, 1466, 1494, 1266, 1505, 1506,
	1509, 1519, 1504, 1512, 1513, 1500, 1520, 1521, 1745, 3045,
	2030, 1744, 2030, 1102, 1706, 1270, 946, 1690, 987, 891,
	1982, 2361, 1870, 1783, 1678, 975, 871, 866, 864, 1305,
	2469, 2900, 112, 984, 1719, 112, 112, 1164, 112, 1723,
	1724, 1568, 3033, 1672, 1566, 941, 941, 1584, 1165, 1586,
	1672, 2754, 941, 1594, 670, 989, 2021, 2572, 941, 2096,
	2097, 1401, 1400, 2636, 1089, 1138, 1615, 1140, 1090, 1144,
	1145, 1162, 1918, 2828, 778, 2901, 2634, 1099, 1619, 2659,
	941, 778, 2658, 941, 780, 2621, 1707, 1271, 2548, 2081,
	112, 780, 871, 2470, 2538, 2755, 1641, 1639, 1187, 1188,
	1189, 1190, 1191, 460, 1193, 1194, 1195, 2637, 777, 779,
	1200, 1201, 1762, 543, 552, 777, 779, 1658, 2535, 1769,
	2635, 2451, 544, 870, 551, 545, 549, 548, 546, 547,
	2372, 2270, 2163, 876, 2046, 1992, 1681, 2471, 943, 944,
	945, 942, 1687, 1679, 512, 880, 878, 1843, 1682, 2575,
	1683, 459, 2015, 455, 897, 1642, 457, 1161, 1432, 1360,
	438, 438, 438, 1691, 1867, 2325, 974, 1360, 458, 1732,
	1468, 456, 675, 1351, 1874, 1143, 780, 553, 1211, 1686,
	1642, 1100, 1790, 1791, 2939, 1879, 1810, 942, 2670, 1348,
	1350, 1347, 1727, 1349, 1718, 943, 944, 945, 942, 1143,
	777, 779, 943, 944, 945, 942, 878, 1910, 2669, 550,
	945, 942, 2342, 2025, 1345, 1720, 959, 960, 961, 962,
	963, 964, 965, 958, 1731, 1424, 1425, 1721, 1722, 1428,
	1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 943, 944, 945, 942, 2218, 1895, 961, 962, 963,
	964, 965, 958, 2217, 2212, 1975, 1975, 1579, 1975, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 943, 944, 945, 942, 2210, 427, 427, 1759, 3030,
	2573, 2733, 2734, 2648, 878, 3071, 943, 944, 945, 942,
	1174, 438, 1779, 1781, 1782, 2083, 1205, 1205, 3059, 2729,
	3021, 3016, 1416, 438, 2958, 2614, 1921, 878, 433, 2930,
	2902, 2845, 1206, 2795, 1579, 1844, 1417, 2010, 2762, 2012,
	2757, 1796, 2450, 176, 1010, 2756, 2638, 3029, 1977, 2613,
	1981, 1883, 2443, 2357, 1884, 1979, 1851, 2337, 2336, 2260,
	1919, 1920, 2730, 1923, 1924, 1925, 1926, 1810, 2615, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1009, 1941, 1942, 1943, 1944, 1945, 1875, 1946, 1891, 2054,
	1888, 2243, 1696, 2258, 2105, 1876, 1877, 2242, 1988, 1174,
	1989, 1174, 2259, 1174, 2016, 1880, 1881, 1887, 878, 1894,
	1893, 1885, 2009, 1996, 2162, 1882, 1978, 2256, 1993, 1994,
	2241, 2004, 943, 944, 945, 942, 780, 2233, 2227, 2224,
	1102, 2017, 1154, 1156, 1748, 2223, 2257, 1174, 2099, 1955,
	949, 950, 951, 952, 953, 954, 955, 947, 2068, 2222,
	777, 779, 1983, 2106, 1661, 2245, 1139, 2987, 1174, 2391,
	2255, 1660, 1316, 1317, 1318, 1319, 1320, 1659, 2108, 943,
	944, 945, 942, 1578, 943, 944, 945, 942, 1212, 1180,
	1997, 1655, 112, 943, 944, 945, 942, 1654, 1747, 1267,
	1058, 1211, 2098, 2847, 2006, 2005, 2904, 2008, 2244, 2110,
	507, 2273, 878, 509, 2064, 2390, 1361, 1362, 508, 2893,
	2429, 2709, 1396, 2107, 943, 944, 945, 942, 2085, 2983,
	1406, 2943, 943, 944, 945, 942, 2889, 2065, 2737, 1622,
	2007, 943, 944, 945, 942, 943, 944, 945, 942, 2014,
	1172, 2866, 2140, 2824, 2051, 2796, 2715, 2079, 2761, 2129,
	1174, 2808, 2760, 2160, 2055, 2057, 2062, 2744, 1305, 1470,
	2707, 1172, 2714, 1448, 2705, 2182, 2684, 1452, 2682, 2265,
	1455, 2188, 943, 944, 945, 942, 2679, 2650, 2612, 2114,
	2075, 2076, 2611, 2608, 2119, 2601, 2595, 2197, 943, 944,
	945, 942, 2598, 878, 2143, 2072, 2089, 2631, 2542, 2540,
	2394, 2209, 943, 944, 945, 942, 2531, 2530, 2393, 2214,
	2215, 2452, 2216, 2630, 2421, 2420, 2219, 1516, 943, 944,
	945, 942, 2392, 2368, 1734, 2078, 943, 944, 945, 942,
	2335, 2312, 1975, 1895, 943, 944, 945, 942, 2173, 2172,
	2130, 2127, 1236, 1237, 2133, 2254, 2261, 2179, 943, 944,
	945, 942, 2246, 2236, 427, 2234, 2189, 2230, 1470, 878,
	1579, 1579, 1579, 1579, 2628, 2229, 2228, 943, 944, 945,
	942, 878, 1579, 602, 601, 1975, 2149, 1785, 1663, 2204,
	1657, 1457, 1268, 1017, 1448, 943, 944, 945, 942, 1448,
	1448, 1174, 2207, 1244, 2208, 1013, 2207, 1012, 988, 2281,
	2158, 867, 159, 438, 438, 151, 127, 2187, 112, 1473,
	2600, 2281, 8, 2181, 2587, 7, 2578, 2577, 176, 1241,
	2566, 2565, 1245, 176, 1231, 2479, 2396, 2389, 2196, 2205,
	2381, 2199, 1643, 2376, 2294, 1646, 2320, 2141, 1649, 2138,
	2211, 1651, 2032, 2028, 1412, 1740, 1412, 2027, 1770, 2352,
	2225, 2226, 2221, 2356, 1760, 2203, 2231, 2232, 1758, 1174,
	156, 3084, 2363, 1754, 1753, 2235, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 1467, 1751, 2191, 2326,
	2267, 1742, 2193, 2190, 2330, 2266, 1739, 2271, 1482, 1738,
	2269, 2194, 2195, 1662, 2126, 2192, 1443, 2293, 2295, 1578,
	1578, 1578, 1578, 1442, 657, 1441, 2306, 1447, 2297, 1415,
	1414, 1578, 2351, 1405, 2313, 2310, 2282, 2283, 2284, 2285,
	943, 944, 945, 942, 1186, 943, 944, 945, 942, 2349,
	1184, 3044, 2384, 159, 2386, 2355, 2328, 2324, 2327, 3038,
	2296, 2365, 2360, 878, 3028, 1522, 2345, 2343, 3025, 3023,
	2432, 2929, 2348, 2864, 1007, 1226, 2350, 112, 2779, 2767,
	2447, 2763, 112, 2693, 2691, 438, 2677, 2676, 2673, 2672,
	2665, 2373, 2623, 1235, 1228, 878, 878, 878, 1729, 2359,
	1087, 1733, 112, 1810, 1579, 1867, 2262, 2477, 2380, 112,
	2213, 156, 780, 2481, 1617, 2347, 2374, 2387, 2388, 780,
	1617, 2176, 2354, 878, 2175, 2174, 1240, 2516, 1243, 2519,
	2385, 2519, 2519, 1232, 2128, 1895, 1895, 1895, 2524, 2041,
	1743, 1991, 1947, 1868, 2423, 2401, 1174, 1174, 1750, 2402,
	2403, 2404, 2405, 1346, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 156, 2486, 2425, 2417, 1763, 2422, 1626, 1766,
	1767, 1768, 2172, 1465, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 2475, 438, 2125, 2455, 2448, 2454, 2432, 1464,
	1290, 1256, 1233, 2515, 2514, 1042, 1039, 1470, 1470, 1038,
	2476, 2528, 2529, 2472, 112, 1037, 2509, 2465, 2466, 1036,
	943, 944, 945, 942, 780, 2487, 1035, 2427, 2921, 2124,
	2520, 2521, 2382, 2383, 1034, 1033, 1032, 2522, 2123, 1031,
	1871, 957, 956, 966, 967, 959, 960, 961, 962, 963,
	964, 965, 958, 1578, 2099, 943, 944, 945, 942, 1172,
	1172, 1030, 1029, 2576, 943, 944, 945, 942, 112, 2122,
	661, 662, 663, 664, 1028, 2963, 2121, 1027, 780, 2919,
	2120, 2485, 1026, 660, 1025, 1024, 2537, 2536, 2117, 2541,
	2917, 2532, 2544, 2545, 1023, 943, 944, 945, 942, 1022,
	438, 2555, 943, 944, 945, 942, 943, 944, 945, 942,
	1021, 2559, 1020, 1016, 943, 944, 945, 942, 1015, 1014,
	2480, 969, 1011, 973, 2482, 2483, 1004, 2562, 2563, 2564,
	2539, 1003, 2571, 1185, 2484, 1001, 1448, 3060, 1448, 970,
	972, 968, 1000, 971, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 1448, 1448, 2116, 999,
	998, 2588, 997, 996, 995, 994, 2591, 993, 2589, 992,
	991, 2590, 990, 986, 985, 908, 2594, 865, 2551, 2552,
	2915, 2602, 1205, 2674, 943, 944, 945, 942, 1873, 2627,
	957, 956, 966, 967, 959, 960, 961, 962, 963, 964,
	965, 958, 1856, 1975, 1579, 2641, 3042, 896, 2115, 2546,
	2961, 2909, 2554, 2164, 2003, 2557, 1859, 1860, 1861, 2111,
	1665, 2604, 907, 2556, 2558, 2290, 2288, 2287, 1174, 2286,
	2291, 2289, 2649, 2607, 943, 944, 945, 942, 2606, 97,
	2292, 1878, 1967, 1968, 438, 943, 944, 945, 942, 3070,
	2619, 2620, 2050, 2516, 53, 52, 2643, 2044, 2102, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 2696, 2135, 2695, 1470, 2639, 1560, 2201, 878, 2202,
	435, 2426, 2640, 2082, 943, 944, 945, 942, 1220, 2514,
	2647, 2100, 2101, 2069, 440, 2418, 2419, 2039, 1044, 2103,
	2104, 2509, 1790, 1791, 176, 1250, 2886, 2698, 2694, 441,
	442, 2198, 2109, 2687, 2624, 2625, 2626, 878, 2281, 2678,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 2652, 439, 2681, 1448, 2683, 1845, 2131, 2132, 1455,
	2080, 2723, 2688, 1578, 2689, 1356, 1627, 1180, 902, 2144,
	1863, 1485, 1463, 2686, 878, 1174, 1174, 2281, 2974, 1617,
	878, 2747, 1958, 2765, 2747, 2700, 943, 944, 945, 942,
	1952, 943, 944, 945, 942, 1401, 1400, 1056, 1057, 1565,
	2710, 1137, 2685, 1054, 1055, 1136, 1963, 1966, 1967, 1968,
	1964, 2724, 1965, 1969, 934, 1963, 1966, 1967, 1968, 1964,
	1895, 1965, 1969, 878, 878, 2642, 2561, 878, 878, 1046,
	2742, 2645, 2751, 2748, 2646, 2750, 2743, 1052, 1053, 2001,
	2643, 1685, 1487, 1091, 2787, 3039, 2776, 3040, 1050, 1051,
	2951, 2936, 2791, 2792, 2934, 2896, 2768, 2769, 2876, 2875,
	2777, 2778, 2873, 112, 2716, 2764, 2865, 2790, 661, 662,
	663, 664, 2789, 2706, 2603, 2585, 2821, 2584, 1172, 2652,
	2784, 660, 2322, 2569, 1049, 660, 2814, 2568, 2785, 1489,
	2965, 2964, 1106, 2358, 1858, 1741, 893, 2964, 2965, 2836,
	957, 956, 966, 967, 959, 960, 961, 962, 963, 964,
	965, 958, 2667, 2809, 2586, 2813, 2314, 61, 878, 2819,
	163, 3, 2, 1151, 1984, 1611, 1178, 1, 1456, 2831,
	878, 665, 2299, 2300, 2560, 2302, 1703, 1950, 1846, 2838,
	2446, 1082, 2837, 698, 1407, 2846, 1275, 796, 887, 1272,
	2849, 2854, 886, 884, 1358, 557, 1668, 2263, 2237, 2786,
	2973, 3010, 2928, 2859, 2976, 1288, 541, 2867, 2800, 2932,
	2802, 2712, 1708, 939, 2344, 707, 719, 2881, 593, 568,
	1002, 878, 1258, 1251, 2399, 2872, 2870, 798, 2897, 2758,
	2759, 567, 2329, 2618, 2331, 2154, 2317, 2839, 795, 720,
	1652, 2905, 2397, 2798, 1221, 1225, 2752, 2892, 2632, 2888,
	2891, 2467, 1448, 2177, 2923, 2926, 2898, 1448, 3080, 3069,
	3051, 2180, 3037, 2956, 3065, 2991, 3026, 2719, 2717, 2718,
	3019, 2952, 2914, 2916, 2918, 2920, 478, 2927, 1590, 2903,
	425, 745, 761, 2780, 2850, 2935, 1664, 2937, 2938, 2933,
	2931, 479, 1872, 2944, 2375, 957, 956, 966, 967, 959,
	960, 961, 962, 963, 964, 965, 958, 2766, 685, 2950,
	1855, 686, 2170, 2169, 1327, 948, 2395, 1344, 2959, 2414,
	2980, 2962, 2960, 2415, 983, 517, 2966, 1730, 2967, 2151,
	2968, 2970, 2969, 2979, 2504, 2311, 60, 59, 58, 57,
	1634, 184, 878, 559, 183, 2735, 2881, 2161, 2984, 2985,
	2925, 2978, 539, 538, 537, 536, 535, 1962, 1960, 1959,
	1574, 2994, 2996, 3009, 747, 1573, 1632, 746, 2525, 2220,
	1914, 3004, 1907, 1523, 2906, 3012, 2851, 2852, 2664, 3017,
	2247, 878, 2989, 3005, 3006, 3007, 3008, 2660, 2654, 1557,
	2746, 2488, 3022, 3018, 3024, 2489, 2495, 1862, 821, 2315,
	2316, 732, 817, 819, 820, 2980, 3035, 818, 2088, 708,
	2084, 1890, 2460, 1801, 878, 1800, 878, 1798, 2979, 3034,
	1797, 1311, 1064, 2820, 2523, 683, 3041, 3046, 3043, 2605,
	1808, 1806, 2553, 3012, 3047, 878, 710, 2549, 693, 3054,
	1676, 3061, 1453, 2134, 3064, 1575, 1571, 3058, 1857, 2449,
	1853, 141, 47, 88, 1311, 87, 1311, 95, 139, 3068,
	46, 168, 3075, 167, 2986, 170, 3079, 3078, 169, 166,
	2018, 2019, 165, 3087, 1209, 1311, 164, 2077, 2749, 3092,
	3075, 3091, 3090, 654, 37, 3079, 33, 3093, 12, 11,
	34, 21, 22, 20, 1279, 19, 25, 31, 30, 731,
	730, 957, 956, 966, 967, 959, 960, 961, 962, 963,
	964, 965, 958, 105, 1728, 104, 729, 29, 103, 102,
	101, 100, 99, 28, 18, 706, 41, 40, 39, 9,
	94, 92, 27, 93, 90, 91, 709, 740, 957, 956,
	966, 967, 959, 960, 961, 962, 963, 964, 965, 958,
	89, 72, 71, 70, 85, 84, 83, 82, 81, 80,
	736, 2453, 78, 79, 695, 718, 690, 69, 679, 68,
	67, 66, 65, 76, 86, 692, 691, 77, 75, 74,
	73, 64, 63, 62, 837, 124, 125, 123, 122, 121,
	120, 119, 677, 118, 737, 741, 684, 42, 43, 44,
	45, 135, 2597, 134, 136, 138, 140, 137, 132, 2599,
	130, 726, 133, 724, 728, 744, 131, 129, 55, 725,
	722, 721, 17, 727, 712, 713, 711, 714, 715, 716,
	717, 24, 742, 4, 743, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 688, 738, 739, 0, 0, 0,
	676, 0, 0, 0, 682, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	837, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 825, 678, 0, 0, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 0, 0,
	0, 845, 849, 851, 853, 855, 856, 858, 0, 863,
	859, 860, 861, 862, 0, 840, 841, 842, 843, 823,
	824, 846, 681, 826, 0, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 838, 844, 0, 0, 0,
	1448, 0, 0, 733, 848, 850, 852, 854, 857, 1448,
	0, 0, 2690, 0, 0, 2692, 2593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 2697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 839, 0, 0, 0, 0, 0, 845, 849, 851,
	853, 855, 856, 858, 694, 863, 859, 860, 861, 862,
	0, 840, 841, 842, 843, 823, 824, 846, 0, 826,
	0, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 838, 844, 0, 0, 0, 0, 0, 0, 0,
	848, 850, 852, 854, 857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 839, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 0, 0, 0,
	268, 0, 0, 293, 0, 0, 0, 0, 566, 0,
	0, 352, 307, 0, 0, 0, 0, 625, 633, 0,
	2671, 0, 0, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 556, 602, 601, 543, 552, 0, 0, 246,
	182, 0, 0, 0, 544, 0, 551, 545, 549, 548,
	546, 547, 0, 617, 0, 0, 0, 0, 0, 0,
	515, 528, 2832, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2848, 0, 0, 525, 526, 0,
	0, 0, 0, 576, 0, 527, 0, 0, 571, 553,
	554, 0, 0, 0, 0, 237, 357, 373, 247, 348,
	386, 252, 355, 242, 322, 345, 0, 0, 239, 371,
	354, 304, 287, 288, 238, 0, 340, 266, 279, 263,
	320, 550, 574, 578, 262, 639, 572, 381, 241, 989,
	380, 319, 367, 372, 305, 299, 240, 369, 303, 298,
	291, 270, 640, 283, 331, 297, 332, 284, 309, 308,
	310, 847, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 383, 0, 0, 623, 0, 0,
	0, 356, 0, 0, 292, 0, 0, 0, 573, 0,
	343, 325, 636, 516, 0, 341, 295, 368, 333, 374,
	358, 382, 337, 334, 232, 359, 265, 306, 243, 245,
	260, 267, 269, 271, 272, 315, 316, 328, 347, 361,
	362, 363, 264, 253, 342, 254, 281, 255, 233, 257,
	256, 258, 349, 259, 235, 329, 366, 847, 277, 338,
	302, 236, 301, 330, 365, 364, 244, 390, 396, 397,
	402, 0, 403, 0, 0, 0, 411, 416, 417, 418,
	420, 421, 422, 423, 0, 0, 0, 0, 405, 0,
	0, 0, 1409, 1408, 1410, 395, 275, 229, 230, 431,
	621, 321, 0, 0, 635, 616, 618, 619, 622, 626,
	627, 628, 629, 630, 632, 634, 638, 430, 0, 0,
	0, 0, 0, 429, 327, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	376, 388, 406, 409, 0, 0, 0, 0, 234, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 387, 0, 3049, 0, 0, 0, 577, 311,
	312, 313, 314, 624, 0, 251, 407, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 401, 274, 280, 419, 282,
	250, 326, 276, 385, 289, 0, 412, 0, 413, 0,
	0, 0, 0, 318, 285, 286, 350, 290, 296, 339,
	384, 324, 344, 248, 375, 351, 300, 0, 0, 646,
	620, 645, 647, 648, 644, 649, 650, 631, 534, 0,
	581, 642, 641, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 294,
	0, 335, 273, 609, 586, 587, 588, 533, 589, 584,
	585, 610, 579, 606, 607, 558, 582, 590, 605, 591,
	608, 611, 612, 651, 652, 597, 653, 594, 613, 604,
	603, 592, 580, 614, 615, 565, 560, 595, 596, 583,
	598, 599, 600, 561, 562, 563, 564, 360, 575, 0,
	391, 392, 393, 415, 377, 0, 428, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 0, 0, 0, 268, 1449, 0, 293, 0,
	0, 0, 0, 566, 0, 0, 352, 307, 0, 0,
	0, 0, 625, 633, 0, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 524, 0, 0, 556, 602, 601,
	543, 552, 0, 0, 246, 182, 0, 0, 0, 544,
	0, 551, 545, 549, 548, 546, 547, 0, 617, 0,
	0, 0, 0, 0, 0, 515, 528, 0, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 526, 0, 0, 0, 0, 576, 0,
	527, 0, 0, 1603, 553, 554, 0, 0, 0, 0,
	237, 357, 373, 247, 348, 386, 252, 355, 242, 322,
	345, 0, 0, 239, 371, 354, 304, 287, 288, 238,
	0, 340, 266, 279, 263, 320, 550, 574, 578, 262,
	639, 572, 381, 241, 0, 380, 319, 367, 372, 305,
	299, 240, 369, 303, 298, 291, 270, 640, 283, 331,
	297, 332, 284, 309, 308, 310, 0, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 383,
	0, 0, 623, 0, 0, 0, 356, 0, 0, 292,
	0, 0, 0, 573, 0, 343, 325, 636, 516, 0,
	341, 295, 368, 333, 374, 358, 382, 337, 334, 232,
	359, 265, 306, 243, 245, 260, 267, 269, 271, 272,
	315, 316, 328, 347, 361, 362, 363, 264, 253, 342,
	254, 281, 255, 233, 257, 256, 258, 349, 259, 235,
	329, 366, 0, 277, 338, 302, 236, 301, 330, 365,
	364, 244, 390, 396, 397, 402, 0, 403, 0, 0,
	0, 411, 416, 417, 418, 420, 421, 422, 423, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	395, 275, 229, 230, 431, 621, 321, 0, 0, 635,
	616, 618, 619, 622, 626, 627, 628, 629, 630, 632,
	634, 638, 430, 0, 0, 0, 0, 0, 429, 327,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 376, 388, 406, 409, 0,
	0, 0, 0, 234, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 387, 0, 0,
	0, 0, 0, 577, 311, 312, 313, 314, 624, 0,
	251, 407, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	401, 274, 280, 419, 282, 250, 326, 276, 385, 289,
	0, 412, 0, 413, 0, 0, 0, 0, 318, 285,
	286, 350, 290, 296, 339, 384, 324, 344, 248, 375,
	351, 300, 0, 0, 646, 620, 645, 647, 648, 644,
	649, 650, 631, 534, 0, 581, 642, 641, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 294, 0, 335, 273, 609, 586,
	587, 588, 533, 589, 584, 585, 610, 579, 606, 607,
	558, 582, 590, 605, 591, 608, 611, 612, 651, 652,
	597, 653, 594, 613, 604, 603, 592, 580, 614, 615,
	565, 560, 595, 596, 583, 598, 599, 600, 561, 562,
	563, 564, 159, 360, 575, 391, 392, 393, 415, 377,
	0, 428, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 268, 0, 0, 293, 0, 0, 0, 0, 977,
	0, 0, 352, 307, 0, 0, 0, 0, 625, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 556, 602, 601, 543, 552, 0, 0,
	246, 182, 0, 0, 0, 544, 0, 551, 545, 549,
	548, 546, 547, 0, 617, 0, 0, 0, 0, 0,
	0, 515, 528, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	0, 0, 0, 0, 576, 0, 527, 0, 0, 571,
	553, 554, 0, 0, 0, 0, 237, 357, 373, 247,
	348, 386, 252, 355, 242, 322, 345, 0, 0, 239,
	371, 354, 304, 287, 288, 238, 0, 340, 266, 279,
	263, 320, 550, 574, 578, 262, 639, 572, 381, 241,
	0, 380, 319, 367, 372, 305, 299, 240, 369, 303,
	298, 291, 270, 640, 283, 331, 297, 332, 284, 309,
	308, 310, 0, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 383, 0, 0, 623, 0,
	0, 0, 356, 0, 0, 292, 0, 0, 0, 573,
	0, 343, 325, 636, 516, 0, 341, 295, 368, 333,
	374, 358, 382, 337, 334, 232, 359, 265, 306, 243,
	245, 260, 267, 269, 271, 272, 315, 316, 328, 347,
	361, 362, 363, 264, 253, 342, 254, 281, 255, 233,
	257, 256, 258, 349, 259, 235, 329, 366, 0, 277,
	338, 302, 236, 301, 330, 365, 364, 244, 390, 396,
	397, 402, 0, 403, 0, 0, 0, 411, 416, 417,
	418, 420, 421, 422, 423, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 395, 275, 229, 230,
	431, 621, 321, 0, 0, 635, 616, 618, 619, 622,
	626, 627, 628, 629, 630, 632, 634, 638, 430, 0,
	0, 0, 0, 0, 429, 327, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 376, 388, 406, 409, 0, 0, 0, 0, 234,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 577,
	311, 312, 313, 314, 624, 0, 251, 407, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 274, 280, 419,
	282, 250, 326, 276, 385, 289, 0, 412, 0, 413,
	0, 0, 0, 0, 318, 285, 286, 350, 290, 296,
	339, 384, 324, 344, 248, 375, 351, 300, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	294, 128, 335, 273, 609, 586, 587, 588, 533, 589,
	584, 585, 610, 579, 606, 607, 558, 582, 590, 605,
	591, 608, 611, 612, 651, 652, 597, 653, 594, 613,
	604, 603, 592, 580, 614, 615, 565, 560, 595, 596,
	583, 598, 599, 600, 561, 562, 563, 564, 360, 575,
	0, 391, 392, 393, 415, 377, 0, 428, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 268, 3048, 0, 293,
	0, 0, 0, 0, 566, 0, 0, 352, 307, 0,
	0, 0, 0, 625, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 556, 602,
	601, 543, 552, 0, 0, 246, 182, 0, 0, 0,
	544, 0, 551, 545, 549, 548, 546, 547, 0, 617,
	0, 0, 0, 0, 0, 0, 515, 528, 0, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 0, 0, 0, 0, 576,
	0, 527, 0, 0, 571, 553, 554, 0, 0, 0,
	0, 237, 357, 373, 247, 348, 386, 252, 355, 242,
	322, 345, 0, 0, 239, 371, 354, 304, 287, 288,
	238, 0, 340, 266, 279, 263, 320, 550, 574, 578,
	262, 639, 572, 381, 241, 0, 380, 319, 367, 372,
	305, 299, 240, 369, 303, 298, 291, 270, 640, 283,
	331, 297, 332, 284, 309, 308, 310, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	383, 0, 0, 623, 0, 0, 0, 356, 0, 0,
	292, 0, 0, 0, 573, 0, 343, 325, 636, 516,
	0, 341, 295, 368, 333, 374, 358, 382, 337, 334,
	232, 359, 265, 306, 243, 245, 260, 267, 269, 271,
	272, 315, 316, 328, 347, 361, 362, 363, 264, 253,
	342, 254, 281, 255, 233, 257, 256, 258, 349, 259,
	235, 329, 366, 0, 277, 338, 302, 236, 301, 330,
	365, 364, 244, 390, 396, 397, 402, 0, 403, 0,
	0, 0, 411, 416, 417, 418, 420, 421, 422, 423,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 395, 275, 229, 230, 431, 621, 321, 0, 0,
	635, 616, 618, 619, 622, 626, 627, 628, 629, 630,
	632, 634, 638, 430, 0, 0, 0, 0, 0, 429,
	327, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 376, 388, 406, 409,
	0, 0, 0, 0, 234, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 387, 0,
	0, 0, 0, 0, 577, 311, 312, 313, 314, 624,
	0, 251, 407, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 274, 280, 419, 282, 250, 326, 276, 385,
	289, 0, 412, 0, 413, 0, 0, 0, 0, 318,
	285, 286, 350, 290, 296, 339, 384, 324, 344, 248,
	375, 351, 300, 0, 0, 646, 620, 645, 647, 648,
	644, 649, 650, 631, 534, 0, 581, 642, 641, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 294, 0, 335, 273, 609,
	586, 587, 588, 533, 589, 584, 585, 610, 579, 606,
	607, 558, 582, 590, 605, 591, 608, 611, 612, 651,
	652, 597, 653, 594, 613, 604, 603, 592, 580, 614,
	615, 565, 560, 595, 596, 583, 598, 599, 600, 561,
	562, 563, 564, 360, 575, 0, 391, 392, 393, 415,
	377, 0, 428, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 268, 1449, 0, 293, 0, 0, 0, 0, 566,
	0, 0, 352, 307, 0, 0, 0, 0, 625, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 556, 602, 601, 543, 552, 0, 0,
	246, 182, 0, 0, 0, 544, 0, 551, 545, 549,
	548, 546, 547, 0, 617, 0, 0, 0, 0, 0,
	0, 515, 528, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	0, 0, 0, 0, 576, 0, 527, 0, 0, 571,
	553, 554, 0, 0, 0, 0, 237, 357, 373, 247,
	348, 386, 252, 355, 242, 322, 345, 0, 0, 239,
	371, 354, 304, 287, 288, 238, 0, 340, 266, 279,
	263, 320, 550, 574, 578, 262, 639, 572, 381, 241,
	0, 380, 319, 367, 372, 305, 299, 240, 369, 303,
	298, 291, 270, 640, 283, 331, 297, 332, 284, 309,
	308, 310, 0, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 383, 0, 0, 623, 0,
	0, 0, 356, 0, 0, 292, 0, 0, 0, 573,
	0, 343, 325, 636, 516, 0, 341, 295, 368, 333,
	374, 358, 382, 337, 334, 232, 359, 265, 306, 243,
	245, 260, 267, 269, 271, 272, 315, 316, 328, 347,
	361, 362, 363, 264, 253, 342, 254, 281, 255, 233,
	257, 256, 258, 349, 259, 235, 329, 366, 0, 277,
	338, 302, 236, 301, 330, 365, 364, 244, 390, 396,
	397, 402, 0, 403, 0, 0, 0, 411, 416, 417,
	418, 420, 421, 422, 423, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 395, 275, 229, 230,
	431, 621, 321, 0, 0, 635, 616, 618, 619, 622,
	626, 627, 628, 629, 630, 632, 634, 638, 430, 0,
	0, 0, 0, 0, 429, 327, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 376, 388, 406, 409, 0, 0, 0, 0, 234,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 577,
	311, 312, 313, 314, 624, 0, 251, 407, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 274, 280, 419,
	282, 250, 326, 276, 385, 289, 0, 412, 0, 413,
	0, 0, 0, 0, 318, 285, 286, 350, 290, 296,
	339, 384, 324, 344, 248, 375, 351, 300, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	294, 0, 335, 273, 609, 586, 587, 588, 533, 589,
	584, 585, 610, 579, 606, 607, 558, 582, 590, 605,
	591, 608, 611, 612, 651, 652, 597, 653, 594, 613,
	604, 603, 592, 580, 614, 615, 565, 560, 595, 596,
	583, 598, 599, 600, 561, 562, 563, 564, 360, 575,
	0, 391, 392, 393, 415, 377, 0, 428, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 268, 0, 0, 293,
	0, 0, 0, 0, 566, 0, 0, 352, 307, 0,
	0, 0, 0, 625, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 556, 602,
	601, 543, 552, 0, 0, 246, 182, 0, 0, 0,
	544, 0, 551, 545, 549, 548, 546, 547, 0, 617,
	0, 0, 0, 0, 0, 0, 515, 528, 0, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 1204, 0, 0, 0, 576,
	0, 527, 0, 0, 571, 553, 554, 0, 0, 0,
	0, 237, 357, 373, 247, 348, 386, 252, 355, 242,
	322, 345, 0, 0, 239, 371, 354, 304, 287, 288,
	238, 0, 340, 266, 279, 263, 320, 550, 574, 578,
	262, 639, 572, 381, 241, 0, 380, 319, 367, 372,
	305, 299, 240, 369, 303, 298, 291, 270, 640, 283,
	331, 297, 332, 284, 309, 308, 310, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	383, 0, 0, 623, 0, 0, 0, 356, 0, 0,
	292, 0, 0, 0, 573, 0, 343, 325, 636, 516,
	0, 341, 295, 368, 333, 374, 358, 382, 337, 334,
	232, 359, 265, 306, 243, 245, 260, 267, 269, 271,
	272, 315, 316, 328, 347, 361, 362, 363, 264, 253,
	342, 254, 281, 255, 233, 257, 256, 258, 349, 259,
	235, 329, 366, 0, 277, 338, 302, 236, 301, 330,
	365, 364, 244, 390, 396, 397, 402, 0, 403, 0,
	0, 0, 411, 416, 417, 418, 420, 421, 422, 423,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 395, 275, 229, 230, 431, 621, 321, 0, 0,
	635, 616, 618, 619, 622, 626, 627, 628, 629, 630,
	632, 634, 638, 430, 0, 0, 0, 0, 0, 429,
	327, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 376, 388, 406, 409,
	0, 0, 0, 0, 234, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 387, 0,
	0, 0, 0, 0, 577, 311, 312, 313, 314, 624,
	0, 251, 407, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 274, 280, 419, 282, 250, 326, 276, 385,
	289, 0, 412, 0, 413, 0, 0, 0, 0, 318,
	285, 286, 350, 290, 296, 339, 384, 324, 344, 248,
	375, 351, 300, 0, 0, 646, 620, 645, 647, 648,
	644, 649, 650, 631, 534, 0, 581, 642, 641, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 294, 0, 335, 273, 609,
	586, 587, 588, 533, 589, 584, 585, 610, 579, 606,
	607, 558, 582, 590, 605, 591, 608, 611, 612, 651,
	652, 597, 653, 594, 613, 604, 603, 592, 580, 614,
	615, 565, 560, 595, 596, 583, 598, 599, 600, 561,
	562, 563, 564, 0, 0, 0, 391, 392, 393, 415,
	377, 0, 428, 360, 575, 0, 0, 1749, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 268, 0, 0, 293, 0, 0, 0, 0, 566,
	0, 0, 352, 307, 0, 0, 0, 0, 625, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 556, 602, 601, 543, 552, 0, 0,
	246, 182, 0, 0, 0, 544, 0, 551, 545, 549,
	548, 546, 547, 0, 617, 0, 0, 0, 0, 0,
	0, 515, 528, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	0, 0, 0, 0, 576, 0, 527, 0, 0, 571,
	553, 554, 0, 0, 0, 0, 237, 357, 373, 247,
	348, 386, 252, 355, 242, 322, 345, 0, 0, 239,
	371, 354, 304, 287, 288, 238, 0, 340, 266, 279,
	263, 320, 550, 574, 578, 262, 639, 572, 381, 241,
	0, 380, 319, 367, 372, 305, 299, 240, 369, 303,
	298, 291, 270, 640, 283, 331, 297, 332, 284, 309,
	308, 310, 0, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 383, 0, 0, 623, 0,
	0, 0, 356, 0, 0, 292, 0, 0, 0, 573,
	0, 343, 325, 636, 516, 0, 341, 295, 368, 333,
	374, 358, 382, 337, 334, 232, 359, 265, 306, 243,
	245, 260, 267, 269, 271, 272, 315, 316, 328, 347,
	361, 362, 363, 264, 253, 342, 254, 281, 255, 233,
	257, 256, 258, 349, 259, 235, 329, 366, 0, 277,
	338, 302, 236, 301, 330, 365, 364, 244, 390, 396,
	397, 402, 0, 403, 0, 0, 0, 411, 416, 417,
	418, 420, 421, 422, 423, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 395, 275, 229, 230,
	431, 621, 321, 0, 0, 635, 616, 618, 619, 622,
	626, 627, 628, 629, 630, 632, 634, 638, 430, 0,
	0, 0, 0, 0, 429, 327, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 376, 388, 406, 409, 0, 0, 0, 0, 234,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 577,
	311, 312, 313, 314, 624, 0, 251, 407, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 274, 280, 419,
	282, 250, 326, 276, 385, 289, 0, 412, 0, 413,
	0, 0, 0, 0, 318, 285, 286, 350, 290, 296,
	339, 384, 324, 344, 248, 375, 351, 300, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	294, 0, 335, 273, 609, 586, 587, 588, 533, 589,
	584, 585, 610, 579, 606, 607, 558, 582, 590, 605,
	591, 608, 611, 612, 651, 652, 597, 653, 594, 613,
	604, 603, 592, 580, 614, 615, 565, 560, 595, 596,
	583, 598, 599, 600, 561, 562, 563, 564, 360, 575,
	0, 391, 392, 393, 415, 377, 0, 428, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 268, 0, 0, 293,
	0, 0, 0, 0, 566, 0, 0, 352, 307, 0,
	0, 0, 0, 625, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 556, 602,
	601, 543, 552, 0, 0, 246, 182, 0, 0, 0,
	544, 0, 551, 545, 549, 548, 546, 547, 0, 617,
	0, 0, 0, 0, 0, 0, 515, 528, 0, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 0, 0, 0, 0, 576,
	0, 527, 0, 0, 571, 553, 554, 0, 0, 0,
	0, 237, 357, 373, 247, 348, 386, 252, 355, 242,
	322, 345, 0, 0, 239, 371, 354, 304, 287, 288,
	238, 0, 340, 266, 279, 263, 320, 550, 574, 578,
	262, 639, 572, 381, 241, 0, 380, 319, 367, 372,
	305, 299, 240, 369, 303, 298, 291, 270, 640, 283,
	331, 297, 332, 284, 309, 308, 310, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	383, 0, 0, 623, 0, 0, 0, 356, 0, 0,
	292, 0, 0, 0, 573, 0, 343, 325, 636, 516,
	0, 341, 295, 368, 333, 374, 358, 382, 337, 334,
	232, 359, 265, 306, 243, 245, 260, 267, 269, 271,
	272, 315, 316, 328, 347, 361, 362, 363, 264, 253,
	342, 254, 281, 255, 233, 257, 256, 258, 349, 259,
	235, 329, 366, 0, 277, 338, 302, 236, 301, 330,
	365, 364, 244, 390, 396, 397, 402, 0, 403, 0,
	0, 0, 411, 416, 417, 418, 420, 421, 422, 423,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 395, 275, 229, 230, 431, 621, 321, 0, 0,
	635, 616, 618, 619, 622, 626, 627, 628, 629, 630,
	632, 634, 638, 430, 0, 0, 0, 0, 0, 429,
	327, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 376, 388, 406, 409,
	0, 0, 0, 0, 234, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 387, 0,
	0, 0, 0, 0, 577, 311, 312, 313, 314, 624,
	0, 251, 407, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 274, 280, 419, 282, 250, 326, 276, 385,
	289, 0, 412, 0, 413, 0, 0, 0, 0, 318,
	285, 286, 350, 290, 296, 339, 384, 324, 344, 248,
	375, 351, 300, 0, 0, 646, 620, 645, 647, 648,
	644, 649, 650, 631, 534, 0, 581, 642, 641, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 294, 0, 335, 273, 609,
	586, 587, 588, 533, 589, 584, 585, 610, 579, 606,
	607, 558, 582, 590, 605, 591, 608, 611, 612, 651,
	652, 597, 653, 594, 613, 604, 603, 592, 580, 614,
	615, 565, 560, 595, 596, 583, 598, 599, 600, 561,
	562, 563, 564, 360, 575, 0, 391, 392, 393, 415,
	377, 0, 428, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 531, 0, 0,
	0, 268, 0, 0, 293, 0, 0, 0, 0, 566,
	0, 0, 352, 307, 0, 0, 0, 0, 625, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 556, 602, 601, 543, 552, 0, 0,
	246, 182, 0, 0, 0, 544, 0, 551, 545, 549,
	548, 546, 547, 0, 617, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	0, 0, 0, 0, 576, 0, 527, 0, 0, 571,
	553, 554, 0, 0, 0, 0, 237, 357, 373, 247,
	348, 386, 252, 355, 242, 322, 345, 0, 0, 239,
	371, 354, 304, 287, 288, 238, 0, 340, 266, 279,
	263, 320, 550, 574, 578, 262, 639, 572, 381, 241,
	0, 380, 319, 367, 372, 305, 299, 240, 369, 303,
	298, 291, 270, 640, 283, 331, 297, 332, 284, 309,
	308, 310, 0, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 383, 0, 0, 623, 0,
	0, 0, 356, 0, 0, 292, 0, 0, 0, 573,
	0, 343, 325, 636, 0, 0, 341, 295, 368, 333,
	374, 358, 382, 337, 334, 232, 359, 265, 306, 243,
	245, 260, 267, 269, 271, 272, 315, 316, 328, 347,
	361, 362, 363, 264, 253, 342, 254, 281, 255, 233,
	257, 256, 258, 349, 259, 235, 329, 366, 0, 277,
	338, 302, 236, 301, 330, 365, 364, 244, 390, 1329,
	1330, 402, 0, 403, 0, 0, 0, 411, 416, 417,
	418, 420, 421, 422, 423, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 395, 275, 229, 230,
	431, 621, 321, 0, 0, 635, 616, 618, 619, 622,
	626, 627, 628, 629, 630, 632, 634, 638, 430, 0,
	0, 0, 0, 0, 429, 327, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 376, 388, 406, 409, 0, 0, 0, 0, 234,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 577,
	311, 312, 313, 314, 624, 0, 251, 407, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 274, 280, 419,
	282, 250, 326, 276, 385, 289, 0, 412, 0, 413,
	0, 0, 0, 0, 318, 285, 286, 350, 290, 296,
	339, 384, 324, 344, 248, 375, 351, 300, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	294, 0, 335, 273, 609, 586, 587, 588, 533, 589,
	584, 585, 610, 579, 606, 607, 558, 582, 590, 605,
	591, 608, 611, 612, 651, 652, 597, 653, 594, 613,
	604, 603, 592, 580, 614, 615, 565, 560, 595, 596,
	583, 598, 599, 600, 561, 562, 563, 564, 360, 575,
	0, 391, 392, 393, 415, 377, 0, 428, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 268, 0, 0, 293,
	0, 0, 0, 0, 566, 0, 0, 352, 307, 0,
	0, 0, 0, 625, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 602,
	601, 543, 552, 0, 0, 246, 182, 0, 0, 0,
	544, 0, 551, 545, 549, 548, 546, 547, 0, 617,
	0, 0, 0, 0, 0, 0, 515, 528, 0, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 0, 0, 0, 0, 576,
	0, 527, 0, 0, 571, 553, 554, 0, 0, 0,
	0, 237, 357, 373, 247, 348, 386, 252, 355, 242,
	322, 345, 0, 0, 239, 371, 354, 304, 287, 288,
	238, 0, 340, 266, 279, 263, 320, 550, 574, 578,
	262, 639, 572, 381, 241, 0, 380, 319, 367, 372,
	305, 299, 240, 369, 303, 298, 291, 270, 640, 283,
	331, 297, 332, 284, 309, 308, 310, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	383, 0, 0, 623, 0, 0, 0, 356, 0, 0,
	292, 0, 0, 0, 573, 0, 343, 325, 636, 516,
	0, 341, 295, 368, 333, 374, 358, 382, 337, 334,
	232, 359, 265, 306, 243, 245, 260, 267, 269, 271,
	272, 315, 316, 328, 347, 361, 362, 363, 264, 253,
	342, 254, 281, 255, 233, 257, 256, 258, 349, 259,
	235, 329, 366, 0, 277, 338, 302, 236, 301, 330,
	365, 364, 244, 390, 396, 397, 402, 0, 403, 0,
	0, 0, 411, 416, 417, 418, 420, 421, 422, 423,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 395, 275, 229, 230, 431, 621, 321, 0, 0,
	635, 616, 618, 619, 622, 626, 627, 628, 629, 630,
	632, 634, 638, 430, 0, 0, 0, 0, 0, 429,
	327, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 376, 388, 406, 409,
	0, 0, 0, 0, 234, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 387, 0,
	0, 0, 0, 0, 577, 311, 312, 313, 314, 624,
	0, 251, 407, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 274, 280, 419, 282, 250, 326, 276, 385,
	289, 0, 412, 0, 413, 0, 0, 0, 0, 318,
	285, 286, 350, 290, 296, 339, 384, 324, 344, 248,
	375, 351, 300, 0, 0, 646, 620, 645, 647, 648,
	644, 649, 650, 631, 534, 0, 581, 642, 641, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 294, 0, 335, 273, 609,
	586, 587, 588, 533, 589, 584, 585, 610, 579, 606,
	607, 558, 582, 590, 605, 591, 608, 611, 612, 651,
	652, 597, 653, 594, 613, 604, 603, 592, 580, 614,
	615, 565, 560, 595, 596, 583, 598, 599, 600, 561,
	562, 563, 564, 360, 575, 0, 391, 392, 393, 415,
	377, 0, 428, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 268, 0, 0, 293, 0, 0, 0, 0, 566,
	0, 0, 352, 307, 0, 0, 0, 0, 625, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 556, 602, 601, 543, 552, 0, 0,
	246, 182, 0, 0, 0, 544, 0, 551, 545, 549,
	548, 546, 547, 0, 617, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	0, 0, 0, 0, 576, 0, 527, 0, 0, 571,
	553, 554, 0, 0, 0, 0, 237, 357, 373, 247,
	348, 386, 252, 355, 242, 322, 345, 0, 0, 239,
	371, 354, 304, 287, 288, 238, 0, 340, 266, 279,
	263, 320, 550, 574, 578, 262, 639, 572, 381, 241,
	0, 380, 319, 367, 372, 305, 299, 240, 369, 303,
	298, 291, 270, 640, 283, 331, 297, 332, 284, 309,
	308, 310, 0, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 383, 0, 0, 623, 0,
	0, 0, 356, 0, 0, 292, 0, 0, 0, 573,
	0, 343, 325, 636, 0, 0, 341, 295, 368, 333,
	374, 358, 382, 337, 334, 232, 359, 265, 306, 243,
	245, 260, 267, 269, 271, 272, 315, 316, 328, 347,
	361, 362, 363, 264, 253, 342, 254, 281, 255, 233,
	257, 256, 258, 349, 259, 235, 329, 366, 0, 277,
	338, 302, 236, 301, 330, 365, 364, 244, 390, 396,
	397, 402, 0, 403, 0, 0, 0, 411, 416, 417,
	418, 420, 421, 422, 423, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 395, 275, 229, 230,
	431, 621, 321, 0, 0, 635, 616, 618, 619, 622,
	626, 627, 628, 629, 630, 632, 634, 638, 430, 0,
	0, 0, 0, 0, 429, 327, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 376, 388, 406, 409, 0, 0, 0, 0, 234,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 577,
	311, 312, 313, 314, 624, 0, 251, 407, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 274, 280, 419,
	282, 250, 326, 276, 385, 289, 0, 412, 0, 413,
	0, 0, 0, 0, 318, 285, 286, 350, 290, 296,
	339, 384, 324, 344, 248, 375, 351, 300, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	294, 0, 335, 273, 609, 586, 587, 588, 533, 589,
	584, 585, 610, 579, 606, 607, 558, 582, 590, 605,
	591, 608, 611, 612, 651, 652, 597, 653, 594, 613,
	604, 603, 592, 580, 614, 615, 565, 560, 595, 596,
	583, 598, 599, 600, 561, 562, 563, 564, 0, 0,
	0, 391, 392, 393, 415, 377, 0, 428, 159, 360,
	50, 151, 127, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 144, 0, 268, 0, 153,
	293, 0, 0, 0, 0, 110, 0, 0, 352, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 0, 0, 156, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 246, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 357, 373, 247, 348, 386, 252, 355,
	242, 322, 345, 0, 0, 239, 371, 354, 304, 287,
	288, 238, 0, 340, 266, 279, 263, 320, 0, 370,
	398, 262, 389, 0, 381, 241, 0, 380, 319, 367,
	372, 305, 299, 240, 369, 303, 298, 291, 270, 414,
	283, 331, 297, 332, 284, 309, 308, 310, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	126, 150, 157, 0, 96, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 174, 0, 0, 0, 356, 0,
	0, 292, 149, 143, 142, 399, 0, 343, 325, 56,
	0, 0, 341, 295, 368, 333, 374, 358, 382, 337,
	334, 232, 359, 265, 306, 243, 245, 260, 267, 269,
	271, 272, 315, 316, 328, 347, 361, 362, 363, 264,
	253, 342, 254, 281, 255, 233, 257, 256, 258, 349,
	259, 235, 329, 366, 0, 277, 338, 302, 236, 301,
	330, 365, 364, 244, 390, 396, 397, 402, 0, 403,
	145, 146, 147, 411, 416, 417, 418, 420, 421, 422,
	423, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 395, 275, 229, 230, 378, 261, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 394,
	177, 0, 0, 424, 185, 0, 0, 0, 148, 0,
	186, 327, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 376, 388, 406,
	409, 0, 0, 0, 0, 234, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 404, 311, 312, 313, 314,
	278, 0, 251, 407, 336, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 0, 0, 0,
	0, 400, 401, 274, 280, 419, 282, 250, 326, 276,
	385, 289, 0, 412, 0, 413, 0, 0, 0, 0,
	318, 285, 286, 350, 290, 296, 339, 384, 324, 344,
	248, 375, 351, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 294, 128, 335, 273,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 0, 0, 0,
	225, 226, 227, 228, 0, 0, 0, 391, 392, 393,
	415, 377, 360, 187, 38, 175, 178, 180, 179, 0,
	48, 5, 0, 323, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 352, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1008,
	0, 0, 181, 0, 0, 543, 552, 0, 0, 246,
	182, 0, 0, 0, 544, 0, 551, 545, 549, 548,
	546, 547, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 237, 357, 373, 247, 348,
	386, 252, 355, 242, 322, 345, 0, 0, 239, 371,
	354, 304, 287, 288, 238, 0, 340, 266, 279, 263,
	320, 550, 370, 398, 262, 389, 0, 381, 241, 0,
	380, 319, 367, 372, 305, 299, 240, 369, 303, 298,
	291, 270, 414, 283, 331, 297, 332, 284, 309, 308,
	310, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 356, 0, 0, 292, 0, 0, 0, 399, 0,
	343, 325, 0, 0, 0, 341, 295, 368, 333, 374,
	358, 382, 337, 334, 232, 359, 265, 306, 243, 245,
	260, 267, 269, 271, 272, 315, 316, 328, 347, 361,
	362, 363, 264, 253, 342, 254, 281, 255, 233, 257,
	256, 258, 349, 259, 235, 329, 366, 0, 277, 338,
	302, 236, 301, 330, 365, 364, 244, 390, 396, 397,
	402, 0, 403, 0, 0, 0, 411, 416, 417, 418,
	420, 421, 422, 423, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 395, 275, 229, 230, 431,
	261, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 394, 0, 0, 0, 424, 430, 0, 0,
	0, 0, 0, 429, 327, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	376, 388, 406, 409, 0, 0, 0, 0, 234, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 387, 0, 0, 0, 0, 0, 404, 311,
	312, 313, 314, 278, 0, 251, 407, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 401, 274, 280, 419, 282,
	250, 326, 276, 385, 289, 0, 412, 0, 413, 0,
	0, 0, 0, 318, 285, 286, 350, 290, 296, 339,
	384, 324, 344, 248, 375, 351, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 294,
	0, 335, 273, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 0, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	0, 0, 0, 225, 226, 227, 228, 0, 0, 0,
	391, 392, 393, 415, 377, 0, 428, 159, 360, 50,
	151, 127, 0, 0, 0, 0, 0, 0, 0, 323,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 352, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 246, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 357, 373, 247, 348, 386, 252, 355, 242,
	322, 345, 0, 0, 239, 371, 354, 304, 287, 288,
	238, 0, 340, 266, 279, 263, 320, 0, 370, 398,
	262, 389, 0, 381, 241, 0, 380, 319, 367, 372,
	305, 299, 240, 369, 303, 298, 291, 270, 414, 283,
	331, 297, 332, 284, 309, 308, 310, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 356, 0, 0,
	292, 0, 0, 0, 399, 0, 343, 325, 0, 0,
	0, 341, 295, 368, 333, 374, 358, 382, 337, 334,
	232, 359, 265, 306, 243, 245, 260, 267, 269, 271,
	272, 315, 316, 328, 347, 361, 362, 363, 264, 253,
	342, 254, 281, 255, 233, 257, 256, 258, 349, 259,
	235, 329, 366, 0, 277, 338, 302, 236, 301, 330,
	365, 364, 244, 390, 396, 397, 402, 0, 403, 0,
	0, 0, 411, 416, 417, 418, 420, 421, 422, 423,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 395, 275, 229, 230, 431, 261, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 394, 0,
	0, 0, 424, 430, 0, 0, 0, 0, 0, 429,
	327, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 376, 388, 406, 409,
	0, 0, 0, 0, 234, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 387, 0,
	0, 0, 0, 0, 404, 311, 312, 313, 314, 449,
	451, 251, 407, 336, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 274, 280, 419, 282, 250, 326, 276, 385,
	289, 0, 412, 0, 413, 0, 0, 0, 0, 318,
	285, 286, 350, 290, 296, 339, 384, 324, 344, 248,
	375, 351, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 294, 128, 335, 273, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 0, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 0, 0, 0, 225,
	226, 227, 228, 360, 0, 0, 391, 392, 393, 415,
	377, 0, 428, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 837, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 352, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	246, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 0, 0, 0, 0, 0, 237, 357, 373, 247,
	348, 386, 252, 355, 242, 322, 345, 0, 0, 1830,
	1832, 1833, 1834, 1835, 1836, 1837, 0, 1842, 1838, 1839,
	1840, 1841, 0, 1825, 1826, 1827, 1828, 823, 1811, 1831,
	0, 1812, 319, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1829, 331, 297, 332, 284, 309,
	308, 310, 848, 850, 852, 854, 857, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	0, 0, 356, 0, 0, 292, 0, 0, 0, 1824,
	0, 343, 325, 0, 0, 0, 341, 295, 368, 333,
	374, 358, 382, 337, 334, 232, 359, 265, 306, 243,
	245, 260, 267, 269, 271, 272, 315, 316, 328, 347,
	361, 362, 363, 264, 253, 342, 254, 281, 255, 233,
	257, 256, 258, 349, 259, 235, 329, 366, 0, 277,
	338, 302, 236, 301, 330, 365, 364, 244, 390, 396,
	397, 402, 0, 403, 0, 0, 0, 411, 416, 417,
	418, 420, 421, 422, 423, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 395, 275, 229, 230,
	431, 261, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 394, 0, 0, 0, 424, 430, 0,
	0, 0, 0, 0, 429, 327, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 376, 388, 406, 409, 0, 0, 0, 0, 234,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 404,
	311, 312, 313, 314, 278, 0, 251, 407, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 274, 280, 419,
	282, 250, 326, 276, 385, 289, 0, 412, 0, 413,
	0, 0, 0, 0, 318, 285, 286, 350, 290, 296,
	339, 384, 324, 344, 248, 375, 351, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 847,
	294, 0, 335, 273, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 0, 0, 0, 225, 226, 227, 228, 360, 0,
	0, 391, 392, 393, 415, 377, 0, 428, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 352, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 246, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	1902, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 357, 373, 247, 348, 386, 252, 355, 242,
	322, 345, 0, 0, 239, 371, 354, 304, 287, 288,
	238, 0, 340, 266, 279, 263, 320, 0, 370, 398,
	262, 389, 0, 381, 241, 0, 380, 319, 367, 372,
	305, 299, 240, 369, 303, 298, 291, 270, 414, 283,
	331, 297, 332, 284, 309, 308, 310, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1906,
	383, 0, 0, 0, 1901, 1892, 1900, 356, 1898, 1903,
	292, 0, 0, 0, 399, 0, 343, 325, 0, 0,
	0, 341, 295, 368, 333, 374, 358, 382, 337, 334,
	232, 359, 265, 306, 243, 245, 260, 267, 269, 271,
	272, 315, 316, 328, 347, 361, 362, 363, 264, 253,
	342, 254, 281, 255, 233, 257, 256, 258, 349, 259,
	235, 329, 366, 1904, 277, 338, 302, 236, 301, 330,
	365, 364, 244, 390, 396, 397, 402, 0, 403, 0,
	0, 0, 411, 416, 417, 418, 420, 421, 422, 423,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 395, 275, 229, 230, 431, 261, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 394, 0,
	0, 0, 424, 430, 0, 0, 0, 0, 0, 429,
	327, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 376, 388, 406, 409,
	0, 0, 0, 0, 234, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 387, 0,
	0, 0, 0, 0, 404, 311, 312, 313, 314, 278,
	0, 251, 407, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 274, 280, 419, 282, 250, 326, 276, 385,
	289, 0, 412, 0, 413, 0, 0, 0, 0, 318,
	285, 286, 350, 290, 296, 339, 384, 324, 344, 248,
	375, 351, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 294, 0, 335, 273, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 0, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 0, 0, 0, 225,
	226, 227, 228, 360, 0, 0, 391, 392, 393, 415,
	377, 0, 428, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 352, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	246, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 1902, 1905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 357, 373, 247,
	348, 386, 252, 355, 242, 322, 345, 0, 0, 239,
	371, 354, 304, 287, 288, 238, 0, 340, 266, 279,
	263, 320, 0, 370, 398, 262, 389, 0, 381, 241,
	0, 380, 319, 367, 372, 305, 299, 240, 369, 303,
	298, 291, 270, 414, 283, 331, 297, 332, 284, 309,
	308, 310, 0, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1906, 383, 0, 0, 0, 1901,
	0, 1900, 356, 1898, 1903, 292, 0, 0, 0, 399,
	0, 343, 325, 0, 0, 0, 341, 295, 368, 333,
	374, 358, 382, 337, 334, 232, 359, 265, 306, 243,
	245, 260, 267, 269, 271, 272, 315, 316, 328, 347,
	361, 362, 363, 264, 253, 342, 254, 281, 255, 233,
	257, 256, 258, 349, 259, 235, 329, 366, 1904, 277,
	338, 302, 236, 301, 330, 365, 364, 244, 390, 396,
	397, 402, 0, 403, 0, 0, 0, 411, 416, 417,
	418, 420, 421, 422, 423, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 395, 275, 229, 230,
	431, 261, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 394, 0, 0, 0, 424, 430, 0,
	0, 0, 0, 0, 429, 327, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 376, 388, 406, 409, 0, 0, 0, 0, 234,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 404,
	311, 312, 313, 314, 278, 0, 251, 407, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 274, 280, 419,
	282, 250, 326, 276, 385, 289, 0, 412, 0, 413,
	0, 0, 0, 0, 318, 285, 286, 350, 290, 296,
	339, 384, 324, 344, 248, 375, 351, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	294, 0, 335, 273, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 0, 0, 0, 225, 226, 227, 228, 360, 0,
	0, 391, 392, 393, 415, 377, 0, 428, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 0, 268, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 352, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 1637, 0, 0, 0, 246, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 943, 944, 945, 942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 357, 373, 247, 348, 386, 252, 355, 242,
	322, 345, 0, 0, 239, 371, 354, 304, 287, 288,
	238, 0, 340, 266, 279, 263, 320, 0, 370, 398,
	262, 389, 0, 381, 241, 0, 380, 319, 367, 372,
	305, 299, 240, 369, 303, 298, 291, 270, 414, 283,
	331, 297, 332, 284, 309, 308, 310, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 356, 0, 0,
	292, 0, 0, 0, 399, 0, 343, 325, 0, 0,
	0, 341, 295, 368, 333, 374, 358, 382, 337, 334,
	232, 359, 265, 306, 243, 245, 260, 267, 269, 271,
	272, 315, 316, 328, 347, 361, 362, 363, 264, 253,
	342, 254, 281, 255, 233, 257, 256, 258, 349, 259,
	235, 329, 366, 0, 277, 338, 302, 236, 301, 330,
	365, 364, 244, 390, 396, 397, 402, 0, 403, 0,
	0, 0, 411, 416, 417, 418, 420, 421, 422, 423,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 395, 275, 229, 230, 431, 261, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 394, 0,
	0, 0, 424, 430, 0, 0, 0, 0, 0, 429,
	327, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 376, 388, 406, 409,
	0, 0, 0, 0, 234, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 387, 0,
	0, 0, 0, 0, 404, 311, 312, 313, 314, 278,
	0, 251, 407, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 274, 280, 419, 282, 250, 326, 276, 385,
	289, 0, 412, 0, 413, 0, 0, 0, 0, 318,
	285, 286, 350, 290, 296, 339, 384, 324, 344, 248,
	375, 351, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 294, 0, 335, 273, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 0, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 0, 0, 0, 225,
	226, 227, 228, 360, 0, 0, 391, 392, 393, 415,
	377, 0, 428, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 760, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 352, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 767, 768, 0, 0, 0, 0,
	246, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 357, 755, 247,
	348, 386, 252, 355, 242, 322, 345, 0, 0, 239,
	371, 354, 304, 287, 288, 238, 0, 340, 266, 279,
	263, 320, 0, 370, 398, 262, 389, 747, 381, 241,
	746, 380, 319, 367, 372, 305, 299, 240, 369, 303,
	298, 291, 270, 414, 283, 331, 297, 332, 284, 309,
	308, 310, 0, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	0, 0, 356, 0, 0, 292, 0, 0, 0, 399,
	0, 343, 325, 0, 0, 0, 341, 295, 368, 333,
	374, 358, 382, 758, 334, 232, 359, 265, 306, 243,
	245, 260, 267, 269, 271, 272, 315, 316, 328, 347,
	361, 362, 363, 264, 253, 342, 254, 281, 255, 233,
	257, 256, 258, 349, 259, 235, 329, 366, 0, 277,
	338, 302, 236, 301, 330, 365, 364, 244, 390, 396,
	397, 402, 0, 403, 0, 0, 0, 411, 416, 417,
	418, 420, 421, 422, 423, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 395, 275, 229, 230,
	431, 261, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 394, 0, 0, 0, 424, 430, 0,
	0, 0, 0, 0, 429, 327, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 376, 388, 406, 409, 0, 0, 0, 0, 234,
	408, 0, 0, 0, 0, 0, 0, 759, 0, 379,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 762,
	311, 312, 313, 314, 278, 0, 251, 407, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 274, 280, 419,
	282, 250, 326, 276, 385, 289, 0, 412, 0, 413,
	0, 0, 0, 0, 769, 756, 765, 757, 290, 296,
	339, 384, 324, 344, 248, 375, 351, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	294, 0, 335, 273, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 0, 0, 0, 225, 226, 227, 228, 360, 0,
	0, 391, 392, 393, 415, 377, 0, 428, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 352, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 246, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 1909, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 357, 373, 247, 348, 386, 252, 355, 242,
	322, 345, 0, 0, 239, 371, 354, 304, 287, 288,
	238, 0, 340, 266, 279, 263, 320, 0, 370, 398,
	262, 389, 0, 381, 241, 0, 380, 319, 367, 372,
	305, 299, 240, 369, 303, 298, 291, 270, 414, 283,
	331, 297, 332, 284, 309, 308, 310, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	383, 0, 0, 0, 1913, 1911, 0, 356, 0, 1912,
	292, 0, 0, 0, 399, 0, 343, 325, 0, 0,
	0, 341, 295, 368, 333, 374, 358, 382, 337, 334,
	232, 359, 265, 306, 243, 245, 260, 267, 269, 271,
	272, 315, 316, 328, 347, 361, 362, 363, 264, 253,
	342, 254, 281, 255, 233, 257, 256, 258, 349, 259,
	235, 329, 366, 0, 277, 338, 302, 236, 301, 330,
	365, 364, 244, 390, 396, 397, 402, 0, 403, 0,
	0, 0, 411, 416, 417, 418, 420, 421, 422, 423,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 395, 275, 229, 230, 431, 261, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 394, 0,
	0, 0, 424, 430, 0, 0, 0, 0, 0, 429,
	327, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 376, 388, 406, 409,
	0, 0, 0, 0, 234, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 387, 0,
	0, 0, 0, 0, 404, 311, 312, 313, 314, 278,
	0, 251, 407, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 274, 280, 419, 282, 250, 326, 276, 385,
	289, 0, 412, 0, 413, 0, 0, 0, 0, 318,
	285, 286, 350, 290, 296, 339, 384, 324, 344, 248,
	375, 351, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 294, 0, 335, 273, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 0, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 0, 0, 0, 225,
	226, 227, 228, 159, 360, 0, 391, 392, 393, 415,
	377, 0, 428, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 293, 0, 0, 0, 0,
	110, 0, 0, 352, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 1680, 0, 181, 0, 0, 0, 0, 0,
	0, 246, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 357, 373,
	247, 348, 386, 252, 355, 242, 322, 345, 0, 0,
	239, 371, 354, 304, 287, 288, 238, 0, 340, 266,
	279, 263, 320, 0, 370, 398, 262, 389, 0, 381,
	241, 0, 380, 319, 367, 372, 305, 299, 240, 369,
	303, 298, 291, 270, 414, 283, 331, 297, 332, 284,
	309, 308, 310, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 292, 0, 0, 0,
	399, 0, 343, 325, 0, 0, 0, 341, 295, 368,
	333, 374, 358, 382, 337, 334, 232, 359, 265, 306,
	243, 245, 260, 267, 269, 271, 272, 315, 316, 328,
	347, 361, 362, 363, 264, 253, 342, 254, 281, 255,
	233, 257, 256, 258, 349, 259, 235, 329, 366, 0,
	277, 338, 302, 236, 301, 330, 365, 364, 244, 390,
	396, 397, 402, 0, 403, 0, 0, 0, 411, 416,
	417, 418, 420, 421, 422, 423, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 395, 275, 229,
	230, 431, 261, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 394, 0, 0, 0, 424, 430,
	0, 0, 0, 0, 0, 429, 327, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 376, 388, 406, 409, 0, 0, 0, 0,
	234, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 387, 0, 0, 0, 0, 0,
	404, 311, 312, 313, 314, 278, 0, 251, 407, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 401, 274, 280,
	419, 282, 250, 326, 276, 385, 289, 0, 412, 0,
	413, 0, 0, 0, 0, 318, 285, 286, 350, 290,
	296, 339, 384, 324, 344, 248, 375, 351, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 294, 128, 335, 273, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 0, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 0, 0, 0, 225, 226, 227, 228, 159,
	360, 0, 391, 392, 393, 415, 377, 0, 428, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 293, 0, 0, 0, 0, 110, 0, 0, 352,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 1671, 0,
	181, 0, 0, 0, 0, 0, 0, 246, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 357, 373, 247, 348, 386, 252,
	355, 242, 322, 345, 0, 0, 239, 371, 354, 304,
	287, 288, 238, 0, 340, 266, 279, 263, 320, 0,
	370, 398, 262, 389, 0, 381, 241, 0, 380, 319,
	367, 372, 305, 299, 240, 369, 303, 298, 291, 270,
	414, 283, 331, 297, 332, 284, 309, 308, 310, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 356,
	0, 0, 292, 0, 0, 0, 399, 0, 343, 325,
	0, 0, 0, 341, 295, 368, 333, 374, 358, 382,
	337, 334, 232, 359, 265, 306, 243, 245, 260, 267,
	269, 271, 272, 315, 316, 328, 347, 361, 362, 363,
	264, 253, 342, 254, 281, 255, 233, 257, 256, 258,
	349, 259, 235, 329, 366, 0, 277, 338, 302, 236,
	301, 330, 365, 364, 244, 390, 396, 397, 402, 0,
	403, 0, 0, 0, 411, 416, 417, 418, 420, 421,
	422, 423, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 395, 275, 229, 230, 431, 261, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	394, 0, 0, 0, 424, 430, 0, 0, 0, 0,
	0, 429, 327, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 376, 388,
	406, 409, 0, 0, 0, 0, 234, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	387, 0, 0, 0, 0, 0, 404, 311, 312, 313,
	314, 278, 0, 251, 407, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 401, 274, 280, 419, 282, 250, 326,
	276, 385, 289, 0, 412, 0, 413, 0, 0, 0,
	0, 318, 285, 286, 350, 290, 296, 339, 384, 324,
	344, 248, 375, 351, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 294, 128, 335,
	273, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 0, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 0, 0,
	0, 225, 226, 227, 228, 159, 360, 0, 391, 392,
	393, 415, 377, 0, 428, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 110, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1576, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 128, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 767, 768, 0, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 747, 381, 241, 746, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 769, 1595, 765, 1596, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 2274, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 2277,
	0, 0, 2276, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	1177, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 1175, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 1171, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 1175,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2975,
	0, 181, 602, 0, 0, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 1175,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2653, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 1175, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 1976,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	1995, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 1175, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3057, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 602, 0, 0, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2990, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 2924, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2741, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 2788, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 2431, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 1175, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 1976,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 360, 0, 0, 391,
	392, 393, 415, 377, 0, 428, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 352, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 246, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	357, 373, 247, 348, 386, 252, 355, 242, 322, 345,
	0, 0, 239, 371, 354, 304, 287, 288, 238, 0,
	340, 266, 279, 263, 320, 0, 370, 398, 262, 389,
	0, 381, 241, 0, 380, 319, 367, 372, 305, 299,
	240, 369, 303, 298, 291, 270, 414, 283, 331, 297,
	332, 284, 309, 308, 310, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 292, 0,
	0, 0, 399, 0, 343, 325, 0, 0, 0, 341,
	295, 368, 333, 374, 358, 382, 337, 334, 232, 359,
	265, 306, 243, 245, 260, 267, 269, 271, 272, 315,
	316, 328, 347, 361, 362, 363, 264, 253, 342, 254,
	281, 255, 233, 257, 256, 258, 349, 259, 235, 329,
	366, 0, 277, 338, 302, 236, 301, 330, 365, 364,
	244, 390, 396, 397, 402, 0, 403, 0, 0, 0,
	411, 416, 417, 418, 420, 421, 422, 423, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 395,
	275, 229, 230, 431, 261, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 394, 0, 0, 0,
	424, 430, 0, 0, 0, 0, 0, 429, 327, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 376, 388, 406, 409, 0, 0,
	0, 0, 234, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 404, 311, 312, 313, 314, 278, 0, 251,
	407, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	274, 280, 419, 282, 250, 326, 276, 385, 289, 0,
	412, 0, 413, 0, 0, 0, 0, 318, 285, 286,
	350, 290, 296, 339, 384, 324, 344, 248, 375, 351,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 294, 0, 335, 273, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 225, 226, 227,
	228, 360, 0, 0, 391, 392, 393, 415, 377, 0,
	428, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	352, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 2011, 0, 0, 0, 246, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 357, 373, 247, 348, 386,
	252, 355, 242, 322, 345, 0, 0, 239, 371, 354,
	304, 287, 288, 238, 0, 340, 266, 279, 263, 320,
	0, 370, 398, 262, 389, 0, 381, 241, 0, 380,
	319, 367, 372, 305, 299, 240, 369, 303, 298, 291,
	270, 414, 283, 331, 297, 332, 284, 309, 308, 310,
	0, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 292, 0, 0, 0, 399, 0, 343,
	325, 0, 0, 0, 341, 295, 368, 333, 374, 358,
	382, 337, 334, 232, 359, 265, 306, 243, 245, 260,
	267, 269, 271, 272, 315, 316, 328, 347, 361, 362,
	363, 264, 253, 342, 254, 281, 255, 233, 257, 256,
	258, 349, 259, 235, 329, 366, 0, 277, 338, 302,
	236, 301, 330, 365, 364, 244, 390, 396, 397, 402,
	0, 403, 0, 0, 0, 411, 416, 417, 418, 420,
	421, 422, 423, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 395, 275, 229, 230, 431, 261,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 394, 0, 0, 0, 424, 430, 0, 0, 0,
	0, 0, 429, 327, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 376,
	388, 406, 409, 0, 0, 0, 0, 234, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 404, 311, 312,
	313, 314, 278, 0, 251, 407, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 274, 280, 419, 282, 250,
	326, 276, 385, 289, 0, 412, 0, 413, 0, 0,
	0, 0, 318, 285, 286, 350, 290, 296, 339, 384,
	324, 344, 248, 375, 351, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 294, 0,
	335, 273, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 225, 226, 227, 228, 0, 0, 0, 391,
	392, 393, 415, 377, 360, 428, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 352, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 246, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 357, 373,
	247, 348, 386, 252, 355, 242, 322, 345, 0, 0,
	239, 371, 354, 304, 287, 288, 238, 0, 340, 266,
	279, 263, 320, 0, 370, 398, 262, 389, 0, 381,
	241, 0, 380, 319, 367, 372, 305, 299, 240, 369,
	303, 298, 291, 270, 414, 283, 331, 297, 332, 284,
	309, 308, 310, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 292, 0, 0, 0,
	399, 0, 343, 325, 0, 0, 0, 341, 295, 368,
	333, 374, 358, 382, 337, 334, 232, 359, 265, 306,
	243, 245, 260, 267, 269, 271, 272, 315, 316, 328,
	347, 361, 362, 363, 264, 253, 342, 254, 281, 255,
	233, 257, 256, 258, 349, 259, 235, 329, 366, 0,
	277, 338, 302, 236, 301, 330, 365, 364, 244, 390,
	396, 397, 402, 0, 403, 0, 0, 0, 411, 416,
	417, 418, 420, 421, 422, 423, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 395, 275, 229,
	230, 431, 261, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 394, 0, 0, 0, 424, 430,
	0, 0, 0, 0, 0, 429, 327, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 376, 388, 406, 409, 0, 0, 0, 0,
	234, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 387, 0, 0, 0, 0, 0,
	404, 311, 312, 313, 314, 278, 0, 251, 407, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 401, 274, 280,
	419, 282, 250, 326, 276, 385, 289, 0, 412, 0,
	413, 0, 0, 0, 0, 318, 285, 286, 350, 290,
	296, 339, 384, 324, 344, 248, 375, 351, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 294, 0, 335, 273, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 0, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 0, 0, 0, 225, 226, 227, 228, 360,
	0, 0, 391, 392, 393, 415, 377, 0, 428, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 1564, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 352, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 246, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 357, 373, 247, 348, 386, 252, 355,
	242, 322, 345, 0, 0, 239, 371, 354, 304, 287,
	288, 238, 0, 340, 266, 279, 263, 320, 0, 370,
	398, 262, 389, 0, 381, 241, 0, 380, 319, 367,
	372, 305, 299, 240, 369, 303, 298, 291, 270, 414,
	283, 331, 297, 332, 284, 309, 308, 310, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 292, 0, 0, 0, 399, 0, 343, 325, 0,
	0, 0, 341, 295, 368, 333, 374, 358, 382, 337,
	334, 232, 359, 265, 306, 243, 245, 260, 267, 269,
	271, 272, 315, 316, 328, 347, 361, 362, 363, 264,
	253, 342, 254, 281, 255, 233, 257, 256, 258, 349,
	259, 235, 329, 366, 0, 277, 338, 302, 236, 301,
	330, 365, 364, 244, 390, 396, 397, 402, 0, 403,
	0, 0, 0, 411, 416, 417, 418, 420, 421, 422,
	423, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 395, 275, 229, 230, 431, 261, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 394,
	0, 0, 0, 424, 430, 0, 0, 0, 0, 0,
	429, 327, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 376, 388, 406,
	409, 0, 0, 0, 0, 234, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 404, 311, 312, 313, 314,
	278, 0, 251, 407, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 274, 280, 419, 282, 250, 326, 276,
	385, 289, 0, 412, 0, 413, 0, 0, 0, 0,
	318, 285, 286, 350, 290, 296, 339, 384, 324, 344,
	248, 375, 351, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 294, 0, 335, 273,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 0, 0, 0,
	225, 226, 227, 228, 360, 0, 0, 391, 392, 393,
	415, 377, 0, 428, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 352, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 1175, 0, 0,
	0, 246, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 357, 373,
	247, 348, 386, 252, 355, 242, 322, 345, 0, 0,
	239, 371, 354, 304, 287, 288, 238, 0, 340, 266,
	279, 263, 320, 0, 370, 398, 262, 389, 0, 381,
	241, 0, 380, 319, 367, 372, 305, 299, 240, 369,
	303, 298, 291, 270, 414, 283, 331, 297, 332, 284,
	309, 308, 310, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 292, 0, 0, 0,
	399, 0, 343, 325, 0, 0, 0, 341, 295, 368,
	333, 374, 358, 382, 1493, 334, 232, 359, 265, 306,
	243, 245, 260, 267, 269, 271, 272, 315, 316, 328,
	347, 361, 362, 363, 264, 253, 342, 254, 281, 255,
	233, 257, 256, 258, 349, 259, 235, 329, 366, 0,
	277, 338, 302, 236, 301, 330, 365, 364, 244, 390,
	396, 397, 402, 0, 403, 0, 0, 0, 411, 416,
	417, 418, 420, 421, 422, 423, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 395, 275, 229,
	230, 431, 261, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 394, 0, 0, 0, 424, 430,
	0, 0, 0, 0, 0, 429, 327, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 376, 388, 406, 409, 0, 0, 0, 0,
	234, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 387, 0, 0, 0, 0, 0,
	404, 311, 312, 313, 314, 278, 0, 251, 407, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 401, 274, 280,
	419, 282, 250, 326, 276, 385, 289, 0, 412, 0,
	413, 0, 0, 0, 0, 318, 285, 286, 350, 290,
	296, 339, 384, 324, 344, 248, 375, 351, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 294, 0, 335, 273, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 0, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 0, 0, 0, 225, 226, 227, 228, 360,
	0, 0, 391, 392, 393, 415, 377, 0, 428, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 352, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 246, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 357, 373, 247, 348, 386, 252, 355,
	242, 322, 345, 0, 0, 239, 371, 354, 304, 287,
	288, 238, 0, 340, 266, 279, 263, 320, 0, 370,
	398, 262, 389, 0, 381, 241, 0, 380, 319, 367,
	372, 305, 299, 240, 369, 303, 298, 291, 270, 414,
	283, 331, 297, 332, 284, 309, 308, 310, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 1199, 0, 0, 0, 356, 0,
	0, 292, 0, 0, 0, 399, 0, 343, 325, 0,
	0, 0, 341, 295, 368, 333, 374, 358, 382, 337,
	334, 232, 359, 265, 306, 243, 245, 260, 267, 269,
	271, 272, 315, 316, 328, 347, 361, 362, 363, 264,
	253, 342, 254, 281, 255, 233, 257, 256, 258, 349,
	259, 235, 329, 366, 0, 277, 338, 302, 236, 301,
	330, 365, 364, 244, 390, 396, 397, 402, 0, 403,
	0, 0, 0, 411, 416, 417, 418, 420, 421, 422,
	423, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 395, 275, 229, 230, 431, 261, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 394,
	0, 0, 0, 424, 430, 0, 0, 0, 0, 0,
	429, 327, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 376, 388, 406,
	409, 0, 0, 0, 0, 234, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 404, 311, 312, 313, 314,
	278, 0, 251, 407, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 274, 280, 419, 282, 250, 326, 276,
	385, 289, 0, 412, 0, 413, 0, 0, 0, 0,
	318, 285, 286, 350, 290, 296, 339, 384, 324, 344,
	248, 375, 351, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 294, 0, 335, 273,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 0, 0, 0,
	225, 226, 227, 228, 360, 0, 0, 391, 392, 393,
	415, 377, 0, 428, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 352, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 246, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 357, 373,
	247, 348, 386, 252, 355, 242, 322, 345, 0, 0,
	239, 371, 354, 304, 287, 288, 238, 0, 340, 266,
	279, 263, 320, 0, 370, 398, 262, 389, 0, 381,
	241, 0, 380, 319, 367, 372, 305, 299, 240, 369,
	303, 298, 291, 270, 414, 283, 331, 297, 332, 284,
	309, 308, 310, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 292, 0, 0, 0,
	399, 0, 343, 325, 0, 0, 0, 341, 295, 368,
	333, 374, 358, 382, 337, 334, 232, 359, 265, 306,
	243, 245, 260, 267, 269, 271, 272, 315, 316, 328,
	347, 361, 362, 363, 264, 253, 342, 254, 281, 255,
	233, 257, 256, 258, 349, 259, 235, 329, 366, 0,
	277, 338, 302, 236, 301, 330, 365, 364, 244, 390,
	396, 397, 402, 0, 403, 0, 0, 0, 411, 416,
	417, 418, 420, 421, 422, 423, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 395, 275, 229,
	230, 431, 261, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 394, 0, 0, 0, 424, 430,
	0, 0, 0, 0, 0, 429, 327, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 376, 388, 406, 409, 0, 0, 0, 0,
	234, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 387, 0, 0, 0, 0, 0,
	404, 311, 312, 313, 314, 278, 0, 251, 407, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 401, 274, 280,
	419, 282, 250, 326, 276, 385, 289, 0, 412, 0,
	413, 0, 0, 0, 0, 318, 285, 286, 350, 290,
	296, 339, 384, 324, 344, 248, 375, 351, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 703, 0, 0, 0, 231,
	0, 294, 0, 335, 273, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 0, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 0, 0, 0, 225, 226, 227, 228, 360,
	0, 0, 391, 392, 393, 415, 377, 0, 428, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 352, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 246, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 357, 373, 247, 348, 386, 252, 355,
	242, 322, 345, 0, 0, 239, 371, 354, 304, 287,
	288, 238, 0, 340, 266, 279, 263, 320, 0, 370,
	398, 262, 389, 0, 381, 241, 0, 380, 319, 367,
	372, 305, 299, 240, 369, 303, 298, 291, 270, 414,
	283, 331, 297, 332, 284, 309, 308, 310, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 292, 0, 0, 0, 399, 0, 343, 325, 0,
	0, 0, 341, 295, 368, 333, 374, 358, 382, 469,
	334, 232, 359, 265, 306, 243, 245, 260, 267, 269,
	271, 272, 315, 316, 328, 347, 361, 362, 363, 264,
	253, 342, 254, 281, 255, 233, 257, 256, 258, 349,
	259, 235, 329, 366, 0, 277, 338, 302, 236, 301,
	330, 365, 364, 244, 390, 396, 397, 402, 0, 403,
	0, 0, 0, 411, 416, 417, 418, 420, 421, 422,
	423, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 395, 275, 229, 230, 431, 261, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 394,
	0, 0, 0, 424, 430, 0, 0, 0, 0, 0,
	429, 327, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 376, 388, 406,
	409, 0, 0, 0, 0, 234, 408, 0, 0, 0,
	0, 0, 0, 470, 0, 379, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 404, 311, 312, 313, 314,
	278, 0, 251, 407, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 274, 280, 419, 282, 250, 326, 276,
	385, 289, 0, 412, 0, 413, 0, 0, 0, 0,
	318, 285, 286, 350, 290, 296, 339, 384, 324, 344,
	248, 375, 351, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 294, 0, 335, 273,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 0, 0, 0,
	225, 226, 227, 228, 360, 0, 0, 391, 392, 393,
	415, 377, 0, 428, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 352, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 246, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 357, 373,
	247, 348, 386, 252, 355, 242, 322, 345, 0, 0,
	239, 371, 354, 304, 287, 288, 238, 0, 340, 266,
	279, 263, 320, 0, 370, 398, 262, 389, 0, 381,
	241, 0, 380, 319, 367, 372, 305, 299, 240, 369,
	303, 298, 291, 270, 414, 283, 331, 297, 332, 284,
	309, 308, 310, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 292, 0, 0, 0,
	399, 0, 343, 325, 0, 0, 0, 341, 295, 368,
	333, 374, 358, 382, 337, 334, 232, 359, 265, 306,
	243, 245, 260, 267, 269, 271, 272, 315, 316, 328,
	347, 361, 362, 363, 264, 253, 342, 254, 281, 255,
	233, 257, 256, 258, 349, 259, 235, 329, 366, 0,
	277, 338, 302, 236, 301, 330, 365, 364, 244, 390,
	396, 397, 402, 0, 403, 0, 0, 0, 411, 416,
	417, 418, 420, 421, 422, 423, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 395, 275, 229,
	230, 431, 261, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 394, 0, 0, 0, 424, 430,
	0, 0, 0, 0, 0, 429, 327, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 376, 388, 406, 409, 0, 0, 0, 0,
	234, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 387, 0, 0, 0, 0, 0,
	404, 311, 312, 313, 314, 278, 0, 251, 407, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 401, 274, 280,
	419, 282, 250, 326, 276, 385, 289, 0, 412, 0,
	413, 0, 0, 0, 0, 318, 285, 286, 350, 290,
	296, 339, 384, 324, 344, 248, 375, 351, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 294, 0, 335, 273, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 0, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 0, 0, 0, 225, 226, 227, 228, 360,
	0, 0, 391, 392, 393, 415, 377, 0, 428, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 268, 0, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 352, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 246, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 357, 373, 247, 348, 386, 252, 355,
	242, 322, 345, 0, 0, 239, 371, 354, 304, 287,
	288, 238, 0, 340, 266, 279, 263, 320, 0, 370,
	398, 262, 389, 0, 381, 241, 0, 380, 319, 367,
	372, 305, 299, 240, 369, 303, 298, 291, 270, 414,
	283, 331, 297, 332, 284, 309, 308, 310, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 292, 0, 0, 0, 399, 0, 343, 325, 0,
	0, 0, 341, 295, 368, 333, 374, 358, 382, 337,
	334, 232, 359, 265, 306, 243, 245, 260, 267, 269,
	271, 272, 315, 316, 328, 347, 361, 362, 363, 264,
	253, 342, 254, 281, 255, 233, 257, 256, 258, 349,
	259, 235, 329, 366, 0, 277, 338, 302, 236, 301,
	330, 365, 364, 244, 390, 396, 397, 402, 0, 403,
	0, 0, 0, 411, 416, 417, 418, 420, 421, 422,
	423, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 395, 275, 229, 230, 431, 261, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 394,
	0, 0, 0, 424, 430, 0, 0, 0, 0, 0,
	429, 327, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 376, 388, 406,
	409, 0, 0, 0, 0, 234, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 404, 311, 312, 313, 314,
	278, 0, 251, 407, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 274, 280, 419, 282, 250, 326, 276,
	385, 289, 0, 412, 0, 413, 0, 0, 0, 0,
	318, 285, 286, 350, 290, 296, 339, 384, 324, 344,
	248, 375, 351, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 294, 0, 335, 273,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 0, 0, 0,
	225, 226, 227, 228, 360, 0, 0, 391, 392, 393,
	415, 377, 0, 428, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 352, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 246, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 357, 373,
	247, 348, 386, 252, 355, 242, 322, 345, 0, 0,
	239, 371, 354, 304, 287, 288, 238, 0, 340, 266,
	279, 263, 320, 0, 370, 398, 262, 389, 0, 381,
	241, 0, 380, 319, 367, 372, 305, 299, 240, 369,
	303, 298, 291, 270, 414, 283, 331, 297, 332, 284,
	309, 308, 310, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 292, 0, 0, 0,
	399, 0, 343, 325, 0, 0, 0, 341, 295, 368,
	333, 374, 358, 382, 337, 334, 232, 359, 265, 306,
	243, 245, 260, 267, 269, 271, 272, 315, 316, 328,
	347, 361, 362, 363, 264, 253, 342, 254, 281, 255,
	233, 257, 256, 258, 349, 259, 235, 329, 366, 0,
	277, 338, 302, 236, 301, 330, 365, 364, 244, 390,
	396, 397, 402, 0, 403, 0, 0, 0, 411, 416,
	417, 418, 420, 421, 422, 423, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 395, 275, 229,
	230, 431, 261, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 394, 0, 0, 0, 424, 430,
	0, 0, 0, 0, 0, 429, 327, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 376, 388, 406, 409, 0, 0, 0, 0,
	234, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 387, 0, 0, 0, 0, 0,
	404, 311, 312, 313, 314, 278, 0, 251, 407, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 401, 274, 280,
	419, 282, 250, 326, 276, 385, 289, 0, 412, 0,
	413, 0, 0, 0, 0, 318, 285, 286, 350, 290,
	296, 339, 384, 324, 344, 248, 375, 351, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 294, 0, 335, 273, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 0, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 0, 0, 0, 225, 226, 227, 228, 360,
	0, 0, 391, 392, 393, 415, 377, 0, 428, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 352, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 246, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 357, 1155, 247, 348, 386, 252, 355,
	242, 322, 345, 0, 0, 239, 371, 354, 304, 287,
	288, 238, 0, 340, 266, 279, 263, 320, 0, 370,
	398, 262, 389, 0, 381, 241, 0, 380, 319, 367,
	372, 305, 299, 240, 369, 303, 298, 291, 270, 414,
	283, 331, 297, 332, 284, 309, 308, 310, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 292, 0, 0, 0, 399, 0, 343, 325, 0,
	0, 0, 341, 295, 368, 333, 374, 358, 382, 337,
	334, 232, 359, 265, 306, 243, 245, 260, 267, 269,
	271, 272, 315, 316, 328, 347, 361, 362, 363, 264,
	253, 342, 254, 281, 255, 233, 257, 256, 258, 349,
	259, 235, 329, 366, 0, 277, 338, 302, 236, 301,
	330, 365, 364, 244, 390, 396, 397, 402, 0, 403,
	0, 0, 0, 411, 416, 417, 418, 420, 421, 422,
	423, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 395, 275, 229, 230, 431, 261, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 394,
	0, 0, 0, 424, 430, 0, 0, 0, 0, 0,
	429, 327, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 376, 388, 406,
	409, 0, 0, 0, 0, 234, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 404, 311, 312, 313, 314,
	278, 0, 251, 407, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 274, 280, 419, 282, 250, 326, 276,
	385, 289, 0, 412, 0, 413, 0, 0, 0, 0,
	318, 285, 286, 350, 290, 296, 339, 384, 324, 344,
	248, 375, 351, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 294, 0, 335, 273,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 0, 0, 0,
	225, 226, 227, 228, 360, 0, 0, 391, 392, 393,
	415, 377, 0, 428, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 352, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 246, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 357, 1153,
	247, 348, 386, 252, 355, 242, 322, 345, 0, 0,
	239, 371, 354, 304, 287, 288, 238, 0, 340, 266,
	279, 263, 320, 0, 370, 398, 262, 389, 0, 381,
	241, 0, 380, 319, 367, 372, 305, 299, 240, 369,
	303, 298, 291, 270, 414, 283, 331, 297, 332, 284,
	309, 308, 310, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 292, 0, 0, 0,
	399, 0, 343, 325, 0, 0, 0, 341, 295, 368,
	333, 374, 358, 382, 337, 334, 232, 359, 265, 306,
	243, 245, 260, 267, 269, 271, 272, 315, 316, 328,
	347, 361, 362, 363, 264, 253, 342, 254, 281, 255,
	233, 257, 256, 258, 349, 259, 235, 329, 366, 0,
	277, 338, 302, 236, 301, 330, 365, 364, 244, 390,
	396, 397, 402, 0, 403, 0, 0, 0, 411, 416,
	417, 418, 420, 421, 422, 423, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 395, 275, 229,
	230, 431, 261, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 394, 0, 0, 0, 424, 430,
	0, 0, 0, 0, 0, 429, 327, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 376, 388, 406, 409, 0, 0, 0, 0,
	234, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 387, 0, 0, 0, 0, 0,
	404, 311, 312, 313, 314, 278, 0, 251, 407, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 401, 274, 280,
	419, 282, 250, 326, 276, 385, 289, 0, 412, 0,
	413, 0, 0, 0, 0, 318, 285, 286, 350, 290,
	296, 339, 384, 324, 344, 248, 375, 351, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 294, 0, 335, 273, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 0, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 0, 0, 0, 225, 226, 227, 228, 360,
	0, 0, 391, 392, 393, 415, 377, 0, 428, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 352, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 246, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 357, 373, 247, 348, 386, 252, 355,
	242, 322, 345, 0, 0, 239, 371, 354, 304, 287,
	288, 238, 0, 340, 266, 279, 263, 320, 0, 370,
	398, 262, 389, 0, 381, 241, 0, 380, 319, 367,
	372, 305, 299, 240, 369, 303, 298, 291, 270, 414,
	283, 331, 297, 332, 284, 309, 308, 310, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 292, 0, 0, 0, 399, 0, 343, 325, 0,
	0, 0, 341, 295, 368, 333, 374, 358, 382, 337,
	334, 232, 359, 265, 306, 243, 245, 510, 267, 269,
	271, 272, 315, 316, 328, 347, 361, 362, 363, 264,
	253, 342, 254, 281, 255, 233, 257, 256, 258, 349,
	259, 235, 329, 366, 0, 277, 338, 302, 236, 301,
	330, 365, 364, 244, 390, 396, 397, 402, 0, 403,
	0, 0, 0, 411, 416, 417, 418, 420, 421, 422,
	423, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 395, 275, 229, 230, 431, 261, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 394,
	0, 0, 0, 424, 430, 0, 0, 0, 0, 0,
	429, 327, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 376, 388, 406,
	409, 0, 0, 0, 0, 234, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 404, 311, 312, 313, 314,
	278, 0, 251, 407, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 274, 280, 419, 282, 250, 326, 276,
	385, 289, 0, 412, 159, 413, 50, 151, 127, 0,
	318, 285, 286, 350, 290, 296, 339, 384, 324, 344,
	248, 375, 351, 300, 152, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 153, 0, 224, 0, 0,
	0, 110, 0, 837, 0, 943, 944, 945, 942, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	0, 0, 156, 0, 231, 0, 294, 0, 335, 273,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 0, 0, 0,
	225, 226, 227, 228, 0, 0, 0, 391, 392, 393,
	415, 377, 0, 428, 1385, 159, 0, 50, 151, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 115,
	0, 116, 117, 0, 0, 152, 0, 0, 0, 0,
	825, 0, 144, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 0, 0, 0, 0,
	845, 849, 851, 853, 855, 856, 858, 98, 863, 859,
	860, 861, 862, 156, 840, 841, 842, 843, 823, 824,
	846, 0, 826, 0, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 838, 844, 126, 150, 157, 0,
	96, 0, 0, 848, 850, 852, 854, 857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 143,
	142, 0, 0, 0, 0, 56, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	839, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	115, 0, 116, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 1378, 0, 0, 0, 1380, 1377, 1379,
	1383, 1384, 1385, 0, 0, 1382, 145, 146, 147, 2493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 2505, 0, 0, 126, 150, 157,
	0, 96, 0, 0, 0, 0, 0, 2496, 0, 0,
	106, 0, 0, 0, 148, 0, 107, 2491, 0, 149,
	143, 142, 2511, 2512, 0, 0, 56, 0, 2492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2497, 0, 0, 0, 0,
	0, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 0, 0, 0, 0, 145, 146, 147,
	0, 0, 0, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1388, 1389, 1390, 1391, 1392, 1393,
	1386, 1387, 0, 154, 0, 1558, 0, 1381, 0, 0,
	0, 1378, 0, 0, 0, 1380, 1377, 1379, 1383, 1384,
	51, 106, 0, 1382, 0, 148, 0, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1560,
	0, 0, 0, 0, 0, 0, 2510, 0, 1900, 0,
	0, 0, 0, 128, 0, 0, 0, 1558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	847, 0, 0, 2501, 0, 0, 0, 1535, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 1560, 49, 0, 0, 2498, 2502, 2500, 2499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	38, 0, 0, 0, 0, 0, 48, 5, 0, 3074,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 1535,
	0, 0, 0, 2507, 2508, 0, 0, 0, 0, 0,
	0, 51, 0, 0, 1551, 0, 0, 0, 0, 0,
	0, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1388, 1389, 1390, 1391, 1392, 1393, 1386, 1387,
	0, 0, 0, 2513, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2494, 0, 0, 0, 0,
	0, 2506, 0, 0, 0, 0, 1551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1558, 0, 1527, 1526, 1529, 0, 1525, 0, 0, 0,
	0, 1539, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 38, 1545, 0, 0, 0, 0, 48, 0, 0,
	0, 113, 0, 0, 1560, 0, 0, 0, 0, 0,
	0, 0, 1532, 1561, 0, 0, 1534, 1536, 1538, 0,
	1540, 1541, 1542, 1546, 1547, 1548, 1550, 1553, 1554, 1555,
	0, 0, 1558, 1539, 0, 0, 0, 1543, 1552, 1544,
	0, 0, 1535, 0, 1545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1532, 1561, 1560, 0, 1534, 1536,
	1538, 1559, 1540, 1541, 1542, 1546, 1547, 1548, 1550, 1553,
	1554, 1555, 0, 0, 0, 0, 0, 0, 0, 1543,
	1552, 1544, 0, 0, 0, 0, 0, 489, 0, 488,
	495, 485, 0, 0, 1535, 2835, 0, 0, 1556, 1551,
	0, 492, 493, 0, 494, 498, 0, 0, 480, 0,
	0, 0, 0, 1559, 0, 1531, 0, 0, 503, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 507, 0,
	1556, 509, 0, 1537, 0, 0, 508, 0, 0, 0,
	0, 1551, 0, 0, 0, 0, 0, 1531, 489, 0,
	488, 495, 485, 0, 1530, 0, 1539, 0, 0, 0,
	0, 0, 492, 493, 0, 494, 498, 1545, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 1549, 503,
	0, 0, 0, 0, 0, 1537, 0, 1532, 1561, 0,
	0, 1534, 1536, 1538, 0, 1540, 1541, 1542, 1546, 1547,
	1548, 1550, 1553, 1554, 1555, 0, 0, 0, 0, 0,
	0, 0, 1543, 1552, 1544, 0, 0, 0, 1539, 0,
	489, 0, 488, 495, 485, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 492, 493, 0, 494, 498, 0,
	0, 480, 0, 0, 0, 0, 1559, 0, 0, 1532,
	1561, 503, 0, 1534, 1536, 1538, 0, 1540, 1541, 1542,
	1546, 1547, 1548, 1550, 1553, 1554, 1555, 0, 0, 481,
	483, 482, 0, 0, 1543, 1552, 1544, 0, 0, 487,
	0, 507, 0, 1556, 509, 0, 0, 0, 0, 508,
	0, 491, 0, 0, 0, 0, 0, 0, 506, 0,
	1531, 0, 0, 0, 0, 484, 0, 1530, 1559, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 0, 0, 1556, 0, 0, 0, 0,
	481, 483, 482, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 1531, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 484, 0, 0, 0,
	0, 0, 0, 1549, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 0, 0, 0, 0, 486, 490, 496,
	0, 497, 499, 0, 0, 500, 501, 502, 0, 0,
	504, 505, 481, 483, 482, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 490,
	496, 0, 497, 499, 0, 0, 500, 501, 502, 0,
	0, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	486, 490, 496, 0, 497, 499, 0, 0, 500, 501,
	502, 0, 0, 504, 505,
}

var yyPact = [...]int{
	35504, -1000, -1000, -1000, -301, 9368, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33473, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33473, -297,
	32938, 32938, -1000, -1000, 1992, -1000, 32403, 10457, 33473, 272,
	271, 33473, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 543, -1000, 31868, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 514, 36277, 35078, 7217,
	-249, -1000, 2712, -102, 752, 761, 708, 708, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2955, 642, 31333, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2799,
	125, 642, 13132, -2, -3, 2712, 312, 324, -1000, 958,
	35625, 160, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7217, 7217, 9368, -313, 9368, 7217, 33473,
	33473, -1000, -1000, -1000, -1000, 514, 36277, 7217, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -3, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3164, -1000, 1208, -1000, -1000,
	-1000, -1000, 2379, 1207, 1927, 470, 33473, -1000, 1206, 470,
	-1000, -1000, -1000, 2712, 2712, -1000, 33473, 33473, 60, 1356,
	-1000, 314, 328, 304, 1199, -1000, -1000, -1000, -1000, -1000,
	-1000, 390, 2731, -1000, 33473, 33473, 2411, 33473, -1000, 1729,
	416, 36430, 2583, 1003, 610, 2427, -1000, -1000, 2377, -1000,
	178, 179, 171, 463, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 209, -1000, 2638, -1000, -1000, 163, -1000, -1000, 158,
	-1000, -1000, -1000, -4, -1000, -1000, -1000, -1000, -1000, -1000,
	-101, -1000, -1000, 810, 1420, 7217, -1000, 1631, -1000, 2292,
	-1000, -1000, -1000, -1000, 4532, 8822, 8822, 8822, 8822, -1000,
	-1000, 2174, 7217, 2376, 2375, -1000, -1000, -1000, -1000, -1000,
	1198, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1924, 8287, -1000, 2374, 2372, 2371, 2369,
	2367, 2366, 2365, 2364, 2362, 2361, 2344, 2337, 2333, 2328,
	2086, 9911, 2324, 1923, 1921, 2321, 2320, 2315, 1909, 2086,
	2086, 2314, 2312, 2301, 2296, 2287, 2286, 2284, 2279, 2276,
	2264, 2263, 2241, 2238, 2237, 2236, 2228, 2221, 2217, 2211,
	2208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1031, -1000, 2207, 2530, 2658, 2123,
	2714, 2667, 2656, 2622, 2616, 1707, -1000, -1000, -1000, -130,
	-1000, -1000, 733, -1000, 712, -1000, 33473, 33473, 33473, 511,
	511, 511, 511, 511, 511, 533, 511, 542, 541, 540,
	511, -1000, -1000, -1000, -1000, -1000, -1000, 665, -1000, -1000,
	-1000, -1000, 1046, 33473, -1000, 2112, 1267, 2670, 447, 445,
	444, 1267, 321, -1000, 1382, 1382, 1382, 1382, 1267, 367,
	439, 2658, 2658, -17, 1382, -21, 1267, 1267, -21, 1267,
	1267, 1267, 140, -294, -1000, -1000, -1000, 1382, 1382, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2625, 2621, 514, 33473,
	109, 33473, 514, 514, 513, -51, 34543, 34008, 1729, 415,
	414, 1064, 1368, -1000, 1248, 33473, 33473, 1248, 1248, 17415,
	16880, -1000, 33473, -1000, 2658, 2123, -1000, 2061, 2334, 2055,
	2123, 514, 514, 514, 514, 514, 141, 514, 514, 514,
	33473, 33473, 30798, 514, 514, 6137, 6137, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9368, 1688, 1674, 155,
	-68, -299, 188, -1000, -1000, 33473, 2518, 138, -1000, -1000,
	-1000, 2087, -1000, 2106, 2106, 2106, 2106, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2145, 2204, -1000, -1000,
	2105, 2105, 2105, 2087, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2138,
	2138, 2140, 2140, 2138, 33473, 7217, 33473, 2537, 309, 2203,
	-1000, 33473, 306, 2658, 2530, 2658, -1000, -1000, 1177, 1706,
	1908, -1000, -1000, 314, 1266, -1000, 766, -1000, -1000, -1000,
	-1000, 33473, -101, 299, -1000, -1000, 1901, 2202, -1000, 453,
	964, 1030, -1000, 129, 36358, 26510, 1729, 26510, 33473, -1000,
	-1000, -1000, -1000, -1000, -1000, -7, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 161,
	-1000, 7217, 7217, 7217, 7217, 7217, -1000, 508, 7752, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8822, 8822, 8822, 8822,
	8822, 8822, 8822, 8822, 8822, 8822, 8822, 8822, 2165, 1392,
	8822, 8822, 8822, 8822, 2334, 2546, 1050, 225, -1000, -1000,
	-1000, -1000, -1000, 1376, 1420, 7217, 7217, 33473, -1000, 35460,
	7217, 7217, 35628, 7217, 2614, 7217, 7217, 7217, 2044, 3461,
	33473, 7217, -1000, 2041, 2040, -1000, -1000, 1553, 7217, -1000,
	-1000, 7217, -1000, -1000, 7217, 8822, 7217, -1000, -1000, -1000,
	134, 2614, 2614, 7217, 7217, 2614, 2614, 2614, 1350, 2614,
	2614, 2614, 2614, 2614, 2614, 2614, 2614, 2036, 2034, 2027,
	2658, -249, 5602, -1000, -256, 2530, 7217, -1000, -1000, 7217,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1907, -49,
	739, 715, 719, -1000, 2588, -1000, 2201, 2185, 1175, 33473,
	1391, 33473, 26510, 33473, 33473, 1729, 33473, 33473, 511, 511,
	511, 33473, 513, -1000, 33473, 1046, 2587, 33473, 2723, 8822,
	8822, 30263, 1382, 1267, 1267, -1000, -1000, 33473, -1000, -1000,
	-1000, 1382, 33473, 1382, 1382, 2723, 1382, -1000, -1000, -1000,
	1267, 1267, -1000, -1000, -1000, -1000, 1382, 1382, -1000, -1000,
	2723, 33473, -16, 2723, 2723, -14, -1000, -1000, -1000, 33473,
	33473, 511, 33473, -1000, 33473, 33473, -1000, -1000, 33473, 35949,
	33473, 29728, 2619, -1000, 26510, 33473, 24370, -1000, 969, -1000,
	-81, -1000, -57, -51, 1248, -51, 1248, -1000, 452, 451,
	15810, 404, 26510, 3996, -1000, -1000, 1248, 1248, 3996, 3996,
	1116, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1013, -1000,
	146, 2530, -1000, -1000, -1000, -1000, -1000, 33473, 33473, 26510,
	1729, 33473, 514, 33473, 33473, 33473, -1000, 2180, -1000, 2581,
	33473, 33473, 935, -1000, -1000, 12597, 1167, 935, -1000, 1395,
	-1000, 7217, 9368, -280, 7217, 9368, 9368, 7217, 9368, -1000,
	7217, 123, -1000, -1000, -1000, -1000, 1704, -1000, 1698, -1000,
	-1000, -1000, 1906, 1906, -1000, 1684, -1000, -1000, -1000, -1000,
	1678, -1000, -1000, 1671, -1000, -1000, -1000, 2024, 810, -1000,
	1904, 2425, -252, -1000, 14739, 33473, 33473, -1000, -1000, -252,
	-1000, 14203, 33473, 2530, -1000, 2530, 33473, -1000, 2668, -1000,
	314, 282, -1000, -1000, -1000, -1000, -1000, -1000, 1132, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1008, -1000,
	33473, -1000, -1000, 129, 26510, 27580, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 193, -1000, -1000, 172, -1000, 529, 97,
	1265, -1000, -1000, 119, 175, 559, 1420, -1000, 1433, 1433,
	1409, -1000, 490, -1000, -1000, -1000, -1000, 2174, -1000, -1000,
	-1000, 1942, 2467, -1000, 1439, 1439, 1094, 1094, 1094, 1094,
	1094, 1410, 1410, -1000, -1000, -1000, 4532, 2165, 8822, 8822,
	8822, 8822, 494, 494, 2189, 3026, -1000, 7217, 1384, -1000,
	7217, 1890, 1102, 1125, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2020, 2017, 2030, 2730, 2012, 7217,
	-1000, -1000, 1262, 1259, 1237, -1000, 1719, 6682, -1000, -1000,
	-1000, 2008, 1124, 1995, -1000, -1000, -1000, 1994, 1231, 855,
	1989, 1457, 1985, 977, 7217, 7217, 1225, 1224, 7217, 7217,
	7217, 7217, 1979, 7217, 7217, 7217, 7217, 7217, 7217, 7217,
	7217, 18, 18, 18, -1000, -1000, 1202, -1000, 1420, -1000,
	1903, -1000, 1138, 975, -1000, 1466, -1000, -1000, -1000, -1000,
	737, 705, 710, 33473, 799, 10992, 33473, 2112, 2571, 126,
	-1000, 939, -1000, 97, -113, 275, 822, 2406, 2729, 33473,
	33473, 33473, 2586, 29193, -1000, 2155, 1201, -1000, -1000, 7217,
	-1000, -1000, 2392, 33473, 33473, 2723, 2723, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 33473, 2723, 2723, 1267, 1382, -1000,
	-1000, 1382, -1000, -1000, 1382, -1000, 1121, -1000, 33473, -1000,
	-1000, -1000, 2112, 972, -1000, 11527, 13667, 532, -1000, 523,
	1283, 1283, 1283, 808, 1283, 1283, 1283, 1283, 387, 369,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 759, 1283, 1283, 1283, 1283, 1283, -1000, 1283, 2154,
	-1000, 406, 122, 2610, 195, 187, 939, 210, 2602, 930,
	-1000, -1000, -1000, -1000, 19555, 19555, 15275, 19555, -1000, 1272,
	-51, -86, -1000, -1000, 969, 3996, 969, 3996, -1000, -1000,
	522, -1000, -1000, 822, -1000, 33473, 33473, -1000, -1000, 2153,
	1346, -1000, -1000, 9911, -1000, 3996, 3996, -1000, -1000, 20090,
	33473, -1000, -105, -1000, -88, 2666, 950, -1000, -1000, 952,
	822, 2419, 33473, 950, -1000, -1000, 10992, 33473, -1000, -1000,
	2723, 6137, -1000, 24370, -1000, -1000, 28650, -1000, 28115, 2723,
	1366, -1000, 9368, 1627, 152, -1000, 184, -304, 149, 1427,
	148, 1420, -1000, -1000, 1978, 1974, 1191, -1000, 1189, 1973,
	1172, 1171, -1000, -44, -1000, 2528, 823, -1000, 2151, -1000,
	1170, 2480, -1000, 925, -1000, 1345, 1169, -1000, 823, 1168,
	2475, 925, 2666, -1000, 1114, 57, -1000, -1000, 33473, 1901,
	1149, 27580, 869, -1000, 518, 1109, 1091, -1000, 26510, 151,
	26510, -1000, 26510, -1000, -1000, 305, -1000, 33473, 2525, -1000,
	-1000, -1000, 1821, -320, -1000, -1000, -1000, -1000, -1000, 1143,
	-1000, 494, 494, 2189, 2989, -1000, 8822, -1000, 8822, 2541,
	1303, -1000, 7217, 1511, 35523, 1011, 19020, 33473, -1000, -1000,
	7217, 7217, -1000, 2459, -1000, -1000, -1000, -1000, 7217, 7217,
	1679, -1000, 33473, -1000, -1000, -1000, -1000, 19020, -1000, 8822,
	-1000, 7217, 988, 2420, 18, 18, 2409, 2359, 2289, 1135,
	18, 2281, 2277, 2270, 2239, 2230, 2195, 2025, 1872, -1000,
	2146, -1000, -1000, 5602, -1000, -44, 7217, 7217, 7217, 2499,
	-1000, -1000, -1000, -1000, -1000, 686, 139, 1970, 919, -1000,
	-1000, 33473, -1000, -1000, -1000, 1968, 872, -1000, -1000, -1000,
	3250, 2106, 2106, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2145, -1000, -1000, 2105, 2105, 2105, 2087, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2138, 2138,
	2140, 2140, 2138, -1000, 2585, -1000, 27, 1283, 446, 26510,
	412, -1000, 33473, 1633, 1343, 2418, 298, 2506, 33473, 2137,
	2136, 2133, 262, 3250, 33473, 921, -1000, 1090, 35625, -1000,
	33473, 1420, -1000, 1729, -1000, 1267, -1000, -1000, 2723, 983,
	-1000, -1000, 2723, 1267, 1267, 1382, 33473, -1000, 2547, 35949,
	-1000, 2503, 33473, -1000, -1000, 3250, 609, -1000, 662, 511,
	33473, 1501, 662, 1480, 2122, -1000, -1000, -1000, 33473, 33473,
	-1000, 33473, 1479, 1471, -1000, 33473, 33473, 1666, -1000, 1652,
	1646, 1283, 1283, 1645, 1892, 1891, 1883, 1283, 1283, 1644,
	1881, 27045, 1879, 825, 1637, 1614, 1608, 1715, 1878, 606,
	-1000, 1871, 1677, 1653, 1619, 33473, 2118, 1795, -1000, -1000,
	27, 1283, 185, 33473, 1342, 446, 1723, 16345, 33473, 24370,
	24370, 24370, 24370, -1000, 2445, 2443, -1000, 2442, 2441, 2456,
	33473, 24370, 2112, -1000, 27045, -1000, -1000, -1000, 2334, 1134,
	2611, 671, 7217, -1000, -1000, -84, -82, -1000, -1000, -1000,
	26510, 1857, 404, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2753, 33473, 33473, 556, 1967, -1000, 2715, -1000, 870,
	-1000, -1000, 1085, -1000, 2715, 1383, -303, 9368, 1370, 1269,
	-1000, 7217, 9368, 7217, -281, 176, -285, -1000, -1000, -1000,
	1856, -1000, -1000, -1000, 1575, -1000, 1574, 38, 49, 1438,
	-252, 5602, 311, 33473, -252, 33473, 5602, -1000, 33473, 310,
	-252, -1000, 33473, 1570, -1000, -1000, -1000, 2728, 26510, 1729,
	1213, 25975, -1000, 157, -1000, 191, 455, 1849, -1000, 539,
	111, -1000, 1341, 1821, -1000, -1000, -1000, 8822, -1000, -1000,
	-1000, -1000, 1420, 7217, 1964, -1000, 684, 684, 1961, -1000,
	2106, 2106, -1000, 2087, 2105, 2087, 684, 684, 1958, -1000,
	1736, 1853, -1000, 1839, 1831, 7217, -1000, 1957, 2783, 956,
	-131, 18, -1000, -1000, -1000, 18, 18, 18, 18, -1000,
	18, 18, 18, 18, 18, 18, 18, 18, 486, -1000,
	38, 1420, 1420, -1000, -1000, 2521, -1000, 1841, 1840, 799,
	3250, 570, 10992, 2511, 313, 1732, -1000, -1000, -1000, 25440,
	413, -1000, -1000, -1000, 512, 170, 1569, 403, -1000, 33473,
	210, 1560, 1332, 1837, 33473, -1000, -1000, -1000, -1000, -1000,
	2506, -1000, 747, 244, 12062, 12062, 12062, 257, 1330, -1000,
	470, 861, 1075, 24370, 33473, -1000, 23835, 1956, -1000, 822,
	2723, -1000, 33473, -1000, 2723, 2723, 1267, -1000, 313, -1000,
	-1000, -1000, 33473, 2503, 35769, -1000, 33473, -1000, 33473, -1000,
	33473, 33473, 511, 7217, -1000, -1000, -1000, 33473, -1000, 247,
	-1000, -1000, -1000, -1000, -1000, 19020, 19020, -1000, -1000, -1000,
	-1000, 1833, 1832, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 33473, 1112, -1000, 1329, 1732, 25440, 1305, 1248,
	1825, 413, -1000, 1824, -1000, 844, 33473, 33473, -1000, 907,
	-1000, 1299, 2383, 2417, 2383, -1000, -1000, -1000, -1000, 2439,
	-1000, 2431, -1000, -1000, 907, -1000, -1000, -1000, -1000, -1000,
	671, -1000, 2653, 662, 662, 662, 1952, -1000, -1000, -1000,
	869, 1951, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2719, 2713, 24905, 2719, -1000, -303, 1271, -1000, 1496,
	147, 1363, 33473, -1000, -1000, -1000, 1948, 1947, -259, 50,
	2707, 2705, 2751, -1000, 1945, 859, -252, -1000, -1000, 823,
	-1000, -1000, -1000, -252, -1000, 823, -1000, -1000, 1729, -1000,
	169, -1000, -1000, -1000, -1000, -1000, -1000, 73, -1000, 33473,
	-1000, 1821, 1812, 105, -1000, 1420, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7217, -1000, -1000, -1000, 1823, -1000, -1000, 7217, 1941,
	1811, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2716, -1000, 2704, -259, -1000, -1000,
	-1000, -1000, -1000, -1000, 3250, -1000, 1359, -1000, -1000, 1809,
	89, -1000, -1000, -1000, 1808, 1804, 1566, -1000, -1000, 1585,
	1069, 112, -1000, -1000, -1000, -1000, -1000, -1000, 1723, 1723,
	1296, -322, -1000, 2104, -1000, 1283, 1283, 1283, 33473, 1895,
	852, -1000, -1000, -1000, -1000, 1844, 1828, 488, 1313, 1300,
	-1000, 1563, 19555, 24370, 23835, 901, -1000, 1071, -1000, -1000,
	-1000, 2723, -1000, -1000, 2723, -1000, -1000, -1000, -1000, 35769,
	-1000, -1000, 1515, 8822, -1000, -1000, 1803, 18485, 616, 1293,
	1290, 620, 2102, -1000, 325, 2749, -1000, -1000, -1000, 617,
	1434, 1414, -1000, 33473, -1000, 2101, -1000, 2100, 2387, 286,
	2099, 2098, 33473, 1807, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1088, -1000, 1795, 1794, -1000, 89, 1792, 3996,
	-1000, -1000, -1000, 33473, 844, 844, 2716, 33473, 5602, -1000,
	-1000, 7217, 2096, -1000, 7217, -1000, -1000, -1000, -1000, -1000,
	2095, 2524, -1000, -1000, -1000, -1000, -1000, -1000, 7217, 7217,
	-1000, -1000, 510, 9368, -286, 166, -1000, -1000, -1000, -261,
	1790, -1000, -1000, 2703, 1786, 1737, 33473, -1000, 823, 823,
	822, -1000, -1000, -14, -1000, -1000, -1000, 1793, -1000, 1777,
	18, -1000, 135, 7217, -261, -169, -1000, -1000, -1000, -1000,
	285, -1000, -1000, 206, -1000, -1000, 1579, 454, -1000, -1000,
	-1000, 1512, 1754, 22765, 19020, 18485, 1783, -1000, 36216, 12062,
	161, 36216, 767, 1288, -1000, 1562, -1000, 1557, -1000, 2723,
	901, 1071, -1000, -1000, 1095, -1000, -1000, -1000, -1000, 2189,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1778, 1774,
	-1000, -1000, -1000, -1000, -1000, 1555, 2093, -75, 2603, -1000,
	-1000, 2091, 22765, 22765, 323, 323, 22765, 22765, 2090, 546,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2658, -1000, -1000,
	1420, 33473, 1420, 23300, -1000, 2702, 2697, 1420, 810, -1000,
	-303, 33473, 33473, -263, 1550, -1000, 1771, 43, -1000, -1000,
	815, -265, 30, 31, -1000, -1000, -1000, 1782, -1000, 438,
	-1000, -1000, -1000, 810, -263, 33473, 427, 1769, -1000, -1000,
	205, -1000, -1000, -1000, -1000, 104, -1000, 1284, 1087, -1000,
	2087, 7217, -1000, -1000, -1000, 467, 36154, -1000, -1000, -1000,
	-14, 467, 402, 220, -1000, 1548, -1000, -1000, 2716, -1000,
	-1000, -1000, 1724, 7217, 2086, 1283, -162, 22765, 1083, 1081,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1068, 1052, 22765,
	-1000, -1000, -1000, 322, -1000, 1042, 1026, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2085, -1000, -1000, 2696, -1000, 1767,
	487, 37, 31, -1000, 2692, 42, 2689, 2688, -1000, -1000,
	474, -253, 16, 14, 12, -1000, -1000, -1000, 7217, -1000,
	2542, -1000, -1000, 72, -1000, -1000, -1000, 1754, 1752, -1000,
	22765, 2536, 1740, 288, 2685, 36216, -1000, -1000, 288, -1000,
	260, -1000, 1268, -1000, 1547, -1000, 2658, -1000, 1727, -1000,
	33473, 2416, -1000, 133, 1021, 2384, 2294, 2283, 2232, 1018,
	-1000, -1000, -1000, 22230, 33473, 1737, -1000, 2083, 1546, 50,
	32, 2684, -1000, 1737, 2681, 1737, 1737, 1406, -1000, 9,
	7, 5, -1000, -1000, -1000, -1000, 1747, -1000, -1000, -1000,
	223, -1000, -1000, 2536, -1000, 2680, 346, -1000, -1000, -1000,
	-1000, 1541, -1000, -1000, 546, -1000, -1000, 2415, 2280, 2727,
	-1000, -1000, -1000, -1000, 223, 323, 223, 323, 223, 323,
	223, 323, 150, -1000, -1000, 1012, -1000, -1000, 2598, 17950,
	24, -1000, -1000, -1000, 1745, -1000, 1737, -1000, -1000, 474,
	-1000, -1000, -1000, -1000, -1000, 1283, 1683, 238, -1000, -1000,
	-1000, 21695, 308, 340, 320, -1000, 469, -1000, -1000, -1000,
	-1000, 2735, -1000, 2733, 629, 629, -1000, -1000, -1000, -1000,
	-1000, -1000, 33473, -1000, 33473, -1000, 987, -1000, -1000, -1000,
	1070, -1000, -1000, -1000, -1000, -1000, 1538, -1000, 33473, -1000,
	33473, 294, 1537, 8822, 2081, 8822, 2080, 300, 2076, -1000,
	-1000, -1000, 1559, 318, -1000, 223, 223, 223, 223, -1000,
	788, -1000, 1253, -1000, 21160, 33473, -1000, -1000, 986, 2071,
	2675, -1000, 2628, 33473, 2407, 33473, 2063, 1220, 8822, -1000,
	-1000, -1000, 33473, 5067, -1000, 1067, -1000, -1000, 460, 315,
	-1000, 978, -1000, 965, 20625, 1535, 2338, -1000, -1000, 1420,
	33473, 928, -1000, 33473, 287, -1000, -1000, -1000, 923, -1000,
	-1000, -1000, -1000, 460, 2472, -1000, 1522, -1000, -1000, 36001,
	586, -1000, -1000, 36001, 293, -1000, 441, 1993, -1000, -1000,
	918, -1000, 33473, 640, 7217, -1000, 293, 36216, -1000, 7217,
	879, -1000, 36216, 874, -1000, -1000,
}

var yyPgo = [...]int{
	0, 138, 2770, 234, 146, 3243, 61, 232, 205, 202,
	230, 3241, 3232, 2525, 2524, 3228, 3227, 3226, 3222, 3220,
	3218, 3217, 3216, 3215, 3214, 3213, 3211, 3210, 3209, 3208,
	3207, 3203, 3201, 3200, 3199, 3198, 3197, 3196, 3195, 226,
	3193, 3192, 3191, 3190, 3189, 3188, 3187, 3184, 3183, 3182,
	3181, 3180, 3179, 3177, 3175, 3173, 3172, 3169, 3168, 3167,
	3166, 3165, 3164, 3163, 3162, 3161, 3160, 3145, 3144, 3143,
	200, 3142, 2509, 3141, 3140, 3139, 3138, 3137, 3136, 3134,
	228, 3133, 3132, 3131, 3130, 3129, 3128, 3127, 3125, 3123,
	3108, 3107, 220, 3106, 3105, 3104, 3103, 3102, 3101, 217,
	3100, 143, 174, 3099, 3098, 3096, 3094, 3093, 227, 204,
	54, 3088, 41, 3086, 206, 3084, 119, 3082, 116, 3081,
	3080, 3079, 3078, 3075, 3073, 3071, 3070, 3068, 3067, 3065,
	3063, 3062, 3061, 3060, 3059, 71, 3058, 105, 152, 173,
	236, 139, 268, 233, 165, 148, 78, 3056, 2550, 3055,
	156, 214, 126, 25, 3053, 155, 3052, 125, 36, 42,
	231, 108, 46, 167, 102, 3050, 201, 85, 86, 3047,
	3042, 161, 247, 168, 3041, 101, 3040, 3039, 3033, 3032,
	177, 166, 3030, 3027, 107, 3025, 3023, 111, 3022, 53,
	184, 132, 183, 3021, 1006, 95, 98, 162, 3020, 3018,
	83, 3017, 3014, 3013, 3012, 160, 3008, 3007, 100, 70,
	3006, 3005, 3001, 50, 3000, 55, 2999, 60, 2998, 2997,
	2990, 2988, 56, 2987, 2986, 15, 22, 24, 2984, 18,
	2983, 141, 2982, 2980, 2979, 91, 2978, 2, 2976, 209,
	199, 77, 122, 2975, 375, 2970, 2969, 2968, 127, 2967,
	523, 2966, 2965, 2964, 2963, 2962, 40, 2961, 203, 44,
	2960, 74, 97, 2957, 2955, 31, 92, 188, 191, 2954,
	2953, 2951, 128, 72, 103, 0, 2950, 133, 2949, 2948,
	2947, 235, 2946, 222, 196, 135, 207, 251, 142, 2945,
	2944, 69, 2939, 131, 76, 45, 118, 8, 16, 198,
	2937, 820, 158, 2935, 187, 2934, 123, 7, 106, 2933,
	2929, 35, 243, 2927, 2925, 2924, 96, 2923, 2922, 94,
	81, 2921, 2920, 2918, 33, 2917, 29, 26, 2903, 82,
	2902, 225, 2901, 159, 120, 157, 150, 124, 208, 219,
	64, 63, 2896, 1374, 121, 75, 23, 2893, 212, 2892,
	136, 130, 2890, 112, 2888, 229, 343, 189, 2886, 163,
	12, 37, 27, 2881, 9, 2880, 113, 170, 2879, 2878,
	19, 43, 2877, 17, 2876, 2875, 2874, 2873, 5, 2872,
	2870, 2869, 1, 4, 2868, 3, 186, 2863, 2861, 2858,
	2856, 38, 211, 2855, 115, 179, 151, 2854, 73, 2853,
	2850, 2849, 636, 2848, 240, 2847, 2846, 2845, 2843, 2841,
	2837, 2834, 2833, 2832, 84, 47, 2830, 2829, 2828, 2826,
	65, 104, 2824, 2823, 2822, 2821, 32, 154, 2820, 21,
	2819, 30, 28, 34, 2818, 114, 2817, 13, 164, 2816,
	2815, 14, 2814, 2812, 10, 11, 2811, 2810, 89, 2809,
	66, 20, 137, 93, 2808, 2807, 68, 193, 110, 2806,
	2805, 221, 224, 185, 2804, 149, 218, 241, 2803, 190,
	2802, 2799, 2798, 2797, 2796, 2794, 897, 2793, 2791, 216,
	48, 79, 88, 2790, 2788, 2787, 67, 134, 90, 87,
	182, 2786, 172, 2785, 2784, 80, 2783, 2782, 2781, 2778,
	2777, 169, 2776, 2775, 171, 213, 2774, 2773, 2772, 2767,
	223, 215, 2742,
}

//line mysql_sql.y:9862
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 500, 508, 508, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 106, 498, 498, 498, 499, 499, 103, 123,
	122, 125, 125, 124, 124, 121, 121, 117, 120, 120,
	119, 119, 118, 113, 115, 115, 114, 116, 116, 104,
	92, 105, 447, 447, 446, 446, 445, 445, 399, 399,
	444, 444, 444, 443, 443, 443, 442, 442, 441, 441,
	440, 440, 438, 438, 439, 437, 436, 436, 436, 434,
	434, 434, 430, 430, 432, 431, 431, 433, 425, 425,
	428, 428, 426, 426, 426, 426, 429, 424, 424, 424,
	423, 423, 91, 91, 91, 345, 345, 90, 90, 359,
	359, 359, 359, 359, 357, 357, 357, 357, 357, 357,
	356, 356, 355, 355, 360, 360, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 81, 81, 81, 81,
	81, 86, 86, 86, 505, 505, 504, 504, 506, 506,
	506, 506, 507, 507, 84, 84, 84, 85, 354, 354,
	354, 82, 83, 83, 344, 344, 349, 349, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 353, 353, 353, 351, 351, 350, 350, 352, 352,
	75, 75, 75, 78, 77, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 76, 76, 76, 76, 76, 76,
	71, 71, 71, 71, 71, 70, 70, 72, 72, 341,
	341, 340, 87, 87, 88, 502, 502, 501, 503, 503,
	503, 503, 89, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 97, 97, 96, 98, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 472, 472, 472, 474, 474, 279, 280, 509, 282,
	278, 278, 278, 468, 468, 469, 470, 471, 471, 471,
	93, 11, 11, 11, 11, 11, 11, 69, 74, 230,
	230, 231, 231, 231, 231, 231, 231, 231, 235, 235,
	235, 234, 232, 232, 232, 232, 232, 232, 233, 236,
	236, 67, 73, 73, 73, 485, 485, 68, 492, 492,
	402, 402, 293, 293, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	407, 408, 289, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 46, 45, 45, 45, 330, 330, 44, 510, 510,
	268, 268, 56, 55, 48, 57, 58, 59, 60, 61,
	62, 43, 54, 54, 54, 54, 54, 54, 54, 54,
	65, 65, 419, 419, 512, 512, 512, 63, 64, 401,
	401, 401, 53, 52, 51, 50, 49, 49, 42, 42,
	41, 41, 47, 129, 130, 286, 286, 286, 288, 288,
	284, 511, 511, 373, 373, 287, 287, 40, 40, 40,
	40, 66, 285, 285, 267, 283, 283, 283, 12, 12,
	10, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 23, 24, 26, 338, 338, 335,
	25, 18, 17, 20, 16, 16, 19, 21, 22, 22,
	9, 9, 9, 9, 13, 13, 14, 145, 145, 195,
	195, 480, 480, 476, 476, 477, 477, 477, 478, 478,
	479, 479, 99, 413, 413, 413, 413, 413, 413, 8,
	167, 167, 412, 412, 412, 412, 412, 412, 342, 342,
	457, 457, 457, 458, 166, 166, 161, 161, 414, 414,
	308, 459, 459, 422, 422, 421, 421, 420, 420, 164,
	164, 165, 165, 148, 148, 109, 109, 427, 427, 427,
	427, 435, 435, 398, 398, 222, 222, 259, 259, 260,
	260, 138, 138, 139, 139, 139, 139, 139, 139, 465,
	465, 467, 467, 466, 163, 163, 159, 159, 160, 160,
	160, 158, 158, 157, 156, 156, 155, 153, 153, 153,
	154, 154, 154, 171, 171, 141, 141, 141, 140, 140,
	140, 140, 140, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 142, 142, 473, 473, 473,
	403, 403, 403, 410, 410, 241, 241, 242, 242, 240,
	240, 143, 143, 144, 144, 144, 144, 239, 239, 238,
	146, 146, 152, 151, 151, 147, 147, 147, 147, 249,
	249, 248, 248, 248, 248, 102, 107, 107, 108, 170,
	170, 247, 246, 246, 246, 169, 169, 168, 168, 162,
	162, 150, 150, 150, 150, 245, 149, 243, 497, 497,
	496, 496, 495, 493, 493, 493, 494, 494, 494, 494,
	449, 449, 449, 449, 449, 273, 273, 273, 277, 277,
	276, 276, 276, 276, 276, 281, 7, 7, 7, 7,
	7, 7, 30, 30, 30, 30, 30, 30, 30, 30,
	36, 179, 180, 37, 181, 181, 182, 182, 183, 183,
	184, 185, 186, 186, 186, 186, 35, 172, 172, 173,
	173, 174, 174, 175, 176, 176, 176, 178, 177, 34,
	27, 481, 484, 482, 482, 486, 486, 486, 487, 487,
	487, 487, 488, 488, 28, 126, 131, 133, 263, 263,
	264, 264, 265, 265, 134, 134, 134, 135, 135, 128,
	137, 137, 137, 137, 137, 127, 132, 483, 489, 489,
	489, 339, 339, 336, 337, 337, 334, 333, 333, 333,
	491, 491, 490, 490, 490, 274, 274, 29, 329, 329,
	331, 332, 332, 332, 323, 323, 323, 323, 33, 327,
	327, 328, 328, 328, 328, 328, 324, 324, 326, 326,
	322, 322, 322, 322, 322, 32, 136, 136, 321, 321,
	319, 319, 317, 317, 318, 318, 316, 316, 316, 320,
	320, 31, 31, 31, 111, 110, 110, 110, 262, 262,
	261, 261, 112, 38, 207, 207, 387, 387, 387, 387,
	387, 405, 405, 405, 388, 388, 388, 389, 389, 389,
	390, 390, 390, 390, 390, 404, 404, 406, 406, 406,
	361, 361, 362, 362, 362, 365, 365, 379, 379, 380,
	380, 378, 378, 385, 385, 384, 384, 383, 383, 382,
	382, 381, 381, 381, 381, 376, 376, 375, 375, 363,
	363, 363, 363, 363, 364, 364, 364, 374, 374, 377,
	377, 213, 213, 214, 214, 214, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 455, 455, 456, 216, 216, 220, 220, 220, 220,
	220, 220, 215, 215, 217, 217, 196, 196, 194, 194,
	187, 187, 188, 188, 189, 189, 189, 193, 193, 192,
	192, 192, 192, 190, 190, 191, 191, 191, 191, 191,
	191, 347, 347, 452, 452, 453, 453, 448, 448, 448,
	451, 451, 451, 451, 451, 454, 454, 454, 450, 450,
	197, 257, 257, 257, 275, 275, 275, 275, 256, 256,
	256, 212, 212, 211, 211, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 346, 346, 290, 290, 291,
	291, 229, 228, 228, 228, 228, 228, 226, 227, 225,
	225, 225, 225, 225, 224, 224, 223, 223, 223, 325,
	325, 221, 221, 219, 219, 219, 218, 218, 218, 386,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 255, 255, 255, 300, 300, 305,
	305, 464, 464, 463, 198, 198, 198, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 208, 208, 208, 370,
	370, 370, 370, 371, 371, 371, 371, 372, 372, 372,
	368, 368, 369, 369, 309, 310, 310, 411, 411, 366,
	366, 367, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 418,
	418, 418, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 475, 475,
	475, 460, 460, 460, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 253, 253, 253, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 311, 311, 312, 312, 415, 415, 415, 415, 415,
	415, 416, 416, 417, 417, 417, 417, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 298, 250, 250, 250,
	313, 306, 306, 307, 307, 301, 301, 301, 301, 301,
	301, 301, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 302, 302, 304, 304, 315, 315,
	315, 314, 314, 314, 314, 314, 314, 314, 210, 210,
	210, 210, 295, 295, 295, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 200, 200, 200, 200,
	204, 204, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 205, 205, 205, 205,
	205, 203, 203, 203, 203, 203, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 100, 101, 101, 202, 258, 258, 391, 391,
	394, 394, 392, 392, 393, 395, 395, 395, 396, 396,
	396, 397, 397, 397, 400, 400, 266, 266, 266, 272,
	272, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 7, 4, 1,
	3, 2, 2, 2, 1, 3, 3, 4, 0, 1,
	2, 1, 2, 2, 1, 2, 3, 2, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 2, 5, 5, 0, 2, 7, 0, 1,
	0, 1, 5, 5, 3, 3, 2, 4, 4, 4,
	4, 4, 1, 1, 1, 3, 3, 1, 1, 1,
	6, 8, 0, 1, 1, 1, 1, 5, 5, 0,
	1, 1, 3, 3, 3, 4, 6, 7, 4, 4,
	7, 8, 3, 3, 3, 0, 2, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	4, 3, 1, 3, 1, 1, 3, 5, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 4, 1, 3, 1,
	4, 6, 6, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 5, 3, 4, 6, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 0, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 12, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 7,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 1, 0, 2, 7, 8, 8, 3, 0, 5,
	1, 3, 0, 3, 0, 3, 3, 0, 2, 6,
	0, 2, 2, 3, 3, 4, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 1, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 5,
	4, 1, 3, 3, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 7,
	9, 7, 9, 2, 1, 7, 9, 7, 9, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 3, 3, 2, 2, 1, 5, 6,
	4, 1, 1, 1, 5, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 1,
	1, 1, 1, 1, 4, 4, 4, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 2, 0,
	1, 6, 8, 6, 5, 5, 6, 6, 6, 6,
	5, 6, 6, 6, 6, 6, 6, 6, 6, 1,
	1, 1, 4, 4, 6, 8, 6, 4, 5, 4,
	4, 4, 3, 4, 6, 6, 7, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 8, 4, 2, 3, 2,
	4, 2, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -500, -508, -2, -5, 563, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -138, -106, 556, -76,
	-77, -78, -30, -29, -28, -27, -126, -131, 562, 417,
	12, 466, -13, -14, -465, -15, 241, -278, -279, -280,
	-282, -509, -40, -41, -42, -49, -50, -51, -52, -53,
	-63, -64, -65, -43, -44, -45, -48, -46, -56, -55,
	-57, -58, -59, -60, -61, -62, -47, -129, -130, -66,
	-68, -67, -73, -69, -74, -128, 216, -72, 62, -82,
	-83, -84, -85, -86, -88, -89, 346, 352, 407, 555,
	47, -139, -141, 566, 144, 145, 147, 148, -31, -32,
	-33, -34, -35, -36, -38, -37, 212, 14, 499, -16,
	-19, -17, -20, -18, -25, -26, -24, -21, -23, -127,
	-22, -132, 236, 235, 37, 302, 303, 304, 350, 234,
	213, 13, 30, 41, 328, -140, 68, 214, -142, 10,
	568, -6, -3, -2, -113, -117, -121, -124, -125, -122,
	-123, -4, -101, 102, 226, 557, -275, 342, 558, 560,
	559, 71, 79, -269, -271, 346, 352, 555, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 469, 542, 543, 544, 545, 326,
	327, 496, 253, 277, 377, 283, 290, 144, 163, 157,
	185, 177, 152, 257, 295, 258, 78, 147, 452, 92,
	429, 404, 150, 272, 274, 276, 279, 278, 280, 282,
	259, 329, 173, 168, 271, 255, 166, 260, 39, 261,
	190, 262, 263, 501, 425, 325, 431, 287, 402, 167,
	426, 275, 428, 192, 196, 443, 444, 161, 162, 433,
	446, 189, 233, 42, 498, 245, 447, 194, 188, 184,
	455, 291, 289, 187, 160, 183, 256, 51, 198, 197,
	199, 398, 399, 400, 401, 264, 265, 340, 442, 180,
	169, 330, 153, 22, 450, 240, 430, 353, 266, 284,
	292, 193, 195, 247, 252, 500, 406, 251, 288, 448,
	165, 244, 273, 239, 451, 154, 355, 267, 148, 281,
	445, 454, 50, 368, 159, 151, 230, 145, 249, 254,
	11, 268, 269, 270, 294, 293, 285, 181, 246, 186,
	171, 158, 182, 146, 248, 453, 369, 553, 328, 387,
	179, 176, 250, 223, 449, 432, 149, 391, 370, 174,
	296, 549, 550, 551, 341, 324, 297, 298, 172, 237,
	423, 424, 299, 301, 397, 317, 371, 405, 378, 372,
	205, 305, 435, 437, 191, 552, 306, 307, 308, 427,
	309, 310, 311, 312, 345, -352, -350, -275, 555, 352,
	346, 328, -181, -275, 567, -148, 38, -194, -275, -148,
	-72, -14, -13, -140, -141, -194, 220, -283, 23, 402,
	-80, 403, 216, 68, -275, -9, -92, -8, -99, -70,
	-138, 407, -281, -275, 302, 302, -281, 220, -275, 251,
	385, -402, 226, -356, -329, 252, -355, -331, -358, -332,
	31, 212, 214, 213, 248, 14, 350, 222, 12, 10,
	351, 234, 24, 25, 27, 13, 352, 354, 28, 355,
	358, 359, 360, 41, 363, 364, 241, 71, 79, 74,
	259, -180, -275, -307, -301, 99, 242, -303, -296, -297,
	-299, -444, -438, -294, 68, 126, 127, 134, 100, -298,
	-386, 35, 102, 506, 467, -251, -252, -253, -254, -255,
	-275, -439, -437, 74, 83, 86, 89, 90, 88, 87,
	170, 85, 75, 138, 139, -141, 71, -460, 514, -270,
	535, 542, 543, 544, 545, 534, 47, -409, -417, 219,
	-415, 137, 175, 237, 171, 12, 132, 397, 172, 511,
	531, 469, 515, 538, 508, 509, 503, 504, 505, 507,
	516, 518, 530, -418, 526, 536, 537, 524, 539, 540,
	541, 73, 72, 529, 528, 517, 512, 513, 519, 502,
	510, 520, 521, 527, 532, 533, 334, 92, 335, 336,
	459, 329, 337, 226, 402, 56, 338, 339, 340, 341,
	342, 466, 343, 57, 344, 333, 241, 387, 345, 174,
	191, 471, 470, 472, 463, 460, 458, 461, 462, 464,
	465, 522, 523, 525, -107, -108, 547, -157, -158, -244,
	19, 6, 7, 8, 9, -498, 404, 500, 149, 146,
	-343, 149, 98, 154, 153, -343, 305, 247, 347, 223,
	326, 387, 309, 80, 251, -323, -321, -404, 299, 295,
	221, 231, 230, 93, 459, 219, 361, -476, -477, 209,
	210, 211, -467, 492, -466, -275, 336, 26, 220, 347,
	247, 437, 435, 436, 438, 439, 440, 441, -54, -419,
	-401, 432, 431, -287, 424, 430, 422, 434, 425, 327,
	311, 310, 212, 564, 493, -266, 371, 405, 456, 457,
	348, 406, 443, 445, 426, 92, 178, 175, 223, 220,
	326, 459, 387, 309, -476, 146, 443, 445, 251, 385,
	40, -349, 397, -348, -350, 444, 455, 72, 73, 442,
	-266, 92, 423, 423, -158, -244, -157, -139, -141, -102,
	-465, 221, 326, 387, 251, 222, 220, 223, 459, 219,
	302, 347, 247, 309, 80, -403, -473, 31, -410, 206,
	207, 208, 32, 33, -1, 106, 568, -301, -301, -6,
	569, -6, -301, -275, -275, 141, -200, -204, -201, -203,
	-202, -206, -205, 175, 176, 137, 179, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 30, 191, 237,
	171, 172, 173, 174, 192, 157, 177, 497, 200, 158,
	201, 159, 202, 160, 203, 161, 162, 204, 163, 166,
	167, 168, 169, 165, 140, 68, 140, 74, -164, 243,
	-194, 140, -164, -158, -157, -158, -194, -256, -275, 404,
	109, -80, -80, 403, -468, -469, -470, -472, 216, 403,
	402, 140, 259, 15, -281, -281, 66, -194, -331, 251,
	-356, -329, 35, 65, 141, 224, 141, 65, 68, 348,
	326, 387, 349, 459, 220, 361, 223, 251, 362, 326,
	387, 220, 223, 459, 251, 326, 220, 223, 387, 251,
	362, 422, 423, 223, 26, 353, 356, 357, 423, -423,
	455, 141, 98, 95, 96, 97, -301, 116, -314, 109,
	110, 111, 112, 113, 114, 115, 123, 122, 133, 126,
	127, 128, 129, 130, 131, 132, 124, 125, 119, 99,
	117, 121, 118, 101, -141, -301, -307, 47, -299, -299,
	-299, -299, -386, -305, -301, 68, 68, 140, 74, -301,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, -416, 68, 68, -311, -312, 68, 68, -294,
	-256, 68, 74, 74, 68, 68, 68, 74, -312, -312,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	-158, 141, 68, -109, 38, -160, 21, -142, -141, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 83, 448,
	499, 152, 153, 154, -179, -275, -181, -172, -275, -319,
	226, -319, -319, -319, -319, -319, 222, -319, 220, 220,
	220, -319, -478, 156, 141, -467, -163, 68, -286, 117,
	121, 23, 249, 249, 249, -286, 289, -510, -511, 15,
	119, -284, -511, -284, -284, -286, -512, 222, 433, 42,
	250, 249, -159, -160, -159, 427, 423, -373, 428, 429,
	-288, -511, -287, -286, -286, -287, -286, -286, -286, 220,
	223, 459, 309, 565, -510, -510, 30, 30, -402, -194,
	-402, 493, -267, -275, -402, -402, -479, 225, -505, -504,
	446, -507, 448, 146, -350, 146, -350, -331, 251, 251,
	141, 109, 23, -351, 109, 120, -350, -350, -351, -351,
	-215, 40, -274, 137, -275, 74, -215, 40, -502, -501,
	-194, -159, -142, -141, 69, 69, 69, -402, -402, -402,
	-402, -402, -404, -402, -402, -402, -281, -172, -181, 226,
	-402, -402, -143, -144, 128, -301, -275, -143, -3, -115,
	-114, 103, 104, 106, 558, 342, 557, 561, 555, -350,
	40, -397, 369, 368, -391, -393, 68, -392, 68, -392,
	-392, -392, 68, 68, -394, 68, -394, -394, -391, -395,
	68, -395, -396, 68, -396, -395, -275, -306, -307, -275,
	38, -412, 47, -138, 68, 30, 68, -275, -413, 47,
	-138, 68, 30, -159, -109, -160, 140, 83, 74, -80,
	69, 141, -471, 89, 90, -474, 189, 181, -275, -95,
	74, -7, -8, -9, -10, -39, -70, -138, -440, -438,
	68, 31, 396, 65, 15, -357, 220, 459, 347, 247,
	223, 326, -355, -338, -335, -333, -274, -331, -334, -333,
	-360, -256, 423, -110, 408, 301, -301, -301, -301, -301,
	-301, 88, 99, 324, 89, 90, -296, -315, 31, 297,
	298, -297, -297, -297, -297, -297, -297, -297, -297, -297,
	-297, -297, -297, -304, -313, -386, 68, 119, 117, 121,
	118, 101, -299, -299, -297, -297, 69, 141, -464, -463,
	103, -301, -301, -275, -461, -462, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 338, 333, 339,
	337, 329, 345, 340, 341, 174, 490, 491, 484, 485,
	486, 487, 488, 489, -306, -306, -301, -461, -306, -250,
	32, 31, -307, -307, -307, 69, -301, -475, 322, 321,
	323, -161, -275, -306, 69, 69, 69, 83, -307, -307,
	-306, -297, -306, -462, -250, -250, -307, -307, -250, -250,
	-250, -250, 128, -250, -250, -250, -250, -250, -250, -250,
	-250, 69, 69, 69, -159, -108, -421, -420, -301, 40,
	548, -109, -301, -156, -155, -301, -499, 74, 449, 450,
	150, 153, 152, 34, 68, 68, 140, -194, 99, -481,
	-275, -339, -336, -333, -275, -275, -329, -275, -275, -319,
	-319, -319, -194, -479, -466, 34, -162, -275, -240, 16,
	-299, -299, -333, 251, -510, -286, -286, -268, -267, -288,
	-283, -288, -288, -240, -511, -286, -286, -288, -284, -240,
	-275, 423, -240, -240, -373, -285, -275, -285, -319, -267,
	-268, -268, -194, -230, -231, 217, 214, 213, -237, 215,
	373, 366, 253, -320, 257, 78, 258, 404, 259, 222,
	261, 262, 263, 278, 280, 233, 264, 265, 266, 397,
	267, 145, 279, 268, 269, 270, 349, -216, 6, 312,
	40, 254, -481, -481, 30, 30, -339, -275, -151, -146,
	-150, -147, -152, -243, -245, -149, 68, -194, -141, -275,
	141, 447, 449, 450, -505, -351, -505, -351, 31, 396,
	-354, 396, 31, -329, -348, 443, 445, -344, 74, 397,
	-334, -353, 65, 137, -420, -351, -351, -353, -353, 136,
	141, -503, 448, 449, 209, -109, -196, -194, -481, -338,
	-329, -275, -402, -196, -275, -275, 68, 35, -275, -275,
	-239, 141, -238, 15, -276, -275, 34, 74, 140, -239,
	-116, -114, 105, -301, -6, 557, -301, -6, -6, -301,
	-6, -301, -400, 370, 83, 83, -258, 74, -258, 83,
	83, 83, 69, 74, -342, 65, -414, -308, -459, 547,
	-166, 69, -161, -457, -458, -161, -165, -275, -414, -166,
	69, -457, -109, -109, -275, 23, -80, -469, 140, 141,
	-162, -357, -337, -334, -359, 128, -275, -345, 141, 499,
	572, 72, 224, -491, -490, 388, 69, 141, -424, 225,
	466, 74, 570, 205, 88, 324, 89, 90, -386, -307,
	-304, -299, -299, -297, -297, -302, 238, -302, 98, -301,
	-300, -463, 105, -301, 34, 141, 66, 140, 69, 69,
	15, 15, 69, -301, 69, 69, 69, 69, 15, 15,
	-301, 69, 140, 69, 69, 69, 69, 66, 69, 141,
	69, 141, -307, -301, 69, 69, -301, -301, -301, -307,
	69, -301, -301, -301, -301, -301, -301, -301, -301, -367,
	418, -367, -367, 141, 69, 74, 141, 22, 141, -153,
	36, 37, 151, 154, 154, 153, -180, -182, -183, -184,
	-185, -186, 119, 142, 143, -173, -174, -175, -176, -200,
	-256, 176, 179, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 237, 171, 172, 173, 174, 192,
	157, 177, 158, 159, 160, 161, 162, 163, 166, 167,
	168, 169, 165, -275, -163, 35, -484, 374, -492, 141,
	40, -490, 459, -133, 301, -322, 66, -136, 15, -194,
	-194, -194, -207, 34, 15, -145, -195, -275, 68, 69,
	141, -301, -330, 66, -275, -268, -240, -240, -194, -275,
	-240, -240, -286, -288, -288, -284, 140, -267, -163, 141,
	-193, -197, 228, -190, -192, -256, -291, -191, 231, -453,
	229, 227, 93, 232, 286, 94, 222, -232, 222, 94,
	-275, 228, 232, 227, -233, 222, 224, -272, 109, -272,
	-272, -266, 136, -272, -272, -272, -272, 260, 260, -272,
	-272, -272, -272, -272, -272, -272, -272, -272, -272, -272,
	146, -272, -272, -272, -272, -272, -272, 68, 255, 256,
	-485, 374, 30, 332, 332, -492, -137, 326, 30, -246,
	-247, -248, -249, 54, 58, 60, 55, 56, 57, 61,
	30, 141, -273, -277, 34, -275, 74, -273, -141, -146,
	-151, -273, 68, -504, -506, 451, 448, 454, -353, -353,
	224, 68, 109, -353, -353, 40, -274, -501, 455, 449,
	-171, 23, 141, 65, -196, -173, -181, -240, -144, -146,
	-275, 74, -275, 128, -240, 106, -6, 104, -120, -119,
	-118, 107, 555, 561, 106, 106, 106, 69, 69, 69,
	141, 69, 69, 69, 141, 69, 141, -427, 428, 39,
	141, 68, 69, 141, 47, 141, 109, 69, 141, 69,
	47, -171, 140, 404, -275, -438, 69, -359, 141, 224,
	140, 140, -335, 352, -274, -337, 20, 499, -256, 38,
	-262, -261, 74, 570, 69, -302, -302, 98, -299, -296,
	69, 106, -301, 104, -198, -200, 368, 369, -199, -205,
	137, 175, 237, 174, 173, 171, 368, 369, -215, -275,
	-301, -301, 69, -301, -301, 15, -275, -215, -297, -301,
	-158, 69, -366, -367, -366, 69, 69, 69, 69, -366,
	69, 69, 69, 69, 69, 69, 69, 69, 68, -420,
	-427, -301, -301, -155, -154, 43, 154, 360, 69, 141,
	-256, 69, 141, -200, 34, -487, 430, 376, 386, -272,
	-293, -292, 328, 41, -407, 397, 382, 383, -336, 251,
	-275, -263, 81, 109, 65, 316, 317, 318, 319, -317,
	-318, -316, -320, -481, 68, 68, 68, -387, 306, -200,
	-194, -145, -275, 15, 141, -480, 140, -1, -275, -329,
	-286, -240, -511, -240, -286, -286, -288, -275, 34, -231,
	-235, 44, 46, -197, -200, -191, -452, -453, -319, -275,
	94, -452, 94, 68, -275, -275, -275, 94, 94, -275,
	-234, -285, 83, 83, 83, -272, -272, 83, 74, 74,
	74, -272, -272, 83, 74, -277, 74, -454, 153, 44,
	45, 83, 83, 83, 83, 40, 74, -220, 40, 271,
	275, 272, 273, 274, 74, 83, 40, 83, 40, 83,
	40, -275, 68, -455, -456, 74, -487, -272, 332, -350,
	109, -293, -135, 78, 31, -167, 217, 214, -481, -341,
	-340, -256, -150, -150, -150, -150, 54, 54, 54, 59,
	54, 59, 54, -248, -341, -152, -163, -277, 69, -497,
	-496, -495, -493, 62, 225, 63, -306, 448, 452, 453,
	-337, -289, 74, -344, 13, -194, -194, -406, 281, 282,
	69, -242, 17, 140, -242, 102, -6, -116, -118, -301,
	-6, -301, 557, 342, 558, 74, 83, 83, -435, 414,
	409, 411, 94, -308, -422, -421, 47, -138, -161, -414,
	-458, -420, -275, 47, -138, -414, -275, 83, 15, -334,
	-329, 128, 128, -275, 353, -345, 74, 375, 74, 220,
	571, 141, 109, -262, -296, -301, 69, -208, 162, 161,
	-208, 69, -392, -392, -391, -394, -391, -208, -208, 69,
	69, 23, 69, 69, 69, -301, 69, 69, 141, -411,
	468, -366, -366, -366, -366, -366, -366, -366, -366, -366,
	-366, -366, -366, -366, -310, -309, 243, -435, 44, 45,
	74, 74, -184, -200, 218, -175, 40, -138, -488, 78,
	-482, 74, -275, -489, 78, 377, 139, 330, 40, 378,
	379, 394, 325, 83, 83, 384, -483, -275, -137, -134,
	82, 109, 74, -194, -316, -266, 136, 262, 309, -187,
	-188, -189, -197, -190, -192, -187, -187, -388, 308, 20,
	83, 127, -164, 66, 140, -146, -195, -275, 128, 69,
	-240, -275, -240, -240, -286, -138, -256, -235, -212, -211,
	-209, 88, 99, 40, 366, -210, 78, 136, 276, 279,
	278, 254, 277, -229, -290, 65, 372, 314, 315, -320,
	227, 93, 94, 354, -291, -450, -275, -448, -450, -275,
	-448, -448, -319, -301, -275, -236, 314, 315, -215, -215,
	74, 74, -196, 69, 141, 109, -488, -482, 109, -351,
	74, -489, 74, 141, -167, -167, -240, 141, 109, -169,
	-168, 65, 66, -170, 65, -168, 54, 54, -240, -495,
	-494, 23, -453, -453, -453, 69, 69, -241, 18, 20,
	128, -241, 106, 104, 106, 106, -275, 69, 69, -398,
	549, -431, -433, 409, 20, 20, 13, 69, -414, -414,
	-329, -345, 397, -194, -261, 74, 571, -301, 69, -301,
	69, 74, -158, 20, -398, -177, -200, -294, 74, -486,
	388, 74, 74, 83, 40, 83, 139, 380, -408, -135,
	-135, 109, 570, 68, -272, -272, -272, -275, 69, 141,
	69, 69, -389, 242, 83, 127, 83, 127, 83, -273,
	-146, -275, -240, -480, 140, -240, -240, -209, 88, -297,
	74, -217, -274, 137, -218, 40, 275, 271, 109, 109,
	-219, 40, 255, 256, -221, 68, 286, 13, 178, 94,
	94, -194, 68, 68, 66, 296, 68, 68, -450, 69,
	69, -456, 74, -486, 74, -353, -481, -158, -340, -420,
	-301, 68, -301, 68, 54, 19, 17, -301, -307, 226,
	-6, 558, 342, -222, 550, 74, 20, 74, -429, 74,
	-341, -112, -425, -373, 69, 69, -366, -369, -368, -372,
	415, 288, 421, -307, -222, 498, 20, 499, 329, 40,
	83, 40, 381, 89, 90, -264, -265, 74, -324, -326,
	-256, 68, -215, -217, 74, -213, -214, -237, -189, -111,
	-110, -213, -390, 145, 83, 127, 83, 83, -240, -240,
	74, 74, 83, 68, -415, 30, -325, 68, -324, -324,
	-451, 316, 317, 318, 320, 319, -451, -324, -324, 68,
	-347, -346, 287, 99, -159, -162, -449, -275, 227, 20,
	20, -275, -275, -259, 551, 83, 74, 411, -399, 552,
	-434, 414, -428, -426, 409, 410, 411, 412, 69, -371,
	101, 380, 384, -295, -298, 83, 86, 170, 139, -259,
	-178, -275, 74, 375, 74, 329, 571, 141, 109, 69,
	141, -391, -301, -361, 243, 141, -237, -112, -361, -405,
	153, 307, 499, 83, 127, 83, -158, 69, -301, -311,
	-272, -224, -223, 495, -324, 69, 69, 69, 69, -324,
	287, 69, 69, 141, 68, 20, 74, -436, 225, -432,
	-433, 413, -426, 20, 411, 20, 20, -370, -371, 384,
	-295, -298, 547, 419, 419, 419, 34, 397, -265, 74,
	-327, -326, -153, 69, -362, 295, 20, -237, -362, 307,
	83, 127, 83, -159, 69, -275, -228, -226, -227, 65,
	426, 284, 285, 69, -327, 66, -327, 66, -327, 66,
	-327, 66, 69, -275, 227, -260, -275, -429, -443, 68,
	83, -431, -430, -432, 20, -429, 20, -429, -429, 98,
	420, 420, 420, 74, -328, 233, 78, 499, 314, 315,
	-153, 20, -363, 288, 289, -364, -377, 291, 83, -346,
	-227, 65, -226, 65, 14, 13, -451, -451, -451, -451,
	-229, 69, 141, -447, 30, 69, -442, -441, -257, -437,
	-275, 414, 415, 74, -429, -370, -272, 74, 313, -256,
	68, -375, 292, 68, -373, 68, -373, 94, 317, -225,
	281, 282, 30, 153, -225, -327, -327, -327, -327, -275,
	-446, -445, -444, 69, 141, 140, 83, -275, -360, -365,
	293, 83, -297, 68, -297, 68, -374, 290, 68, 88,
	40, 283, 141, 109, -441, -275, 69, -379, 68, 20,
	69, -360, 69, -360, 68, 109, -297, -445, 40, -301,
	140, -380, -378, 243, -364, 69, 69, 69, -360, 83,
	69, -275, 69, 141, -275, -376, 294, 69, -378, -381,
	47, 83, -385, -382, 68, -237, 245, 119, -385, -237,
	-384, -383, 293, 246, 68, 69, 141, -275, 242, 68,
	-307, -383, -382, -307, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 776, 777, 778, 779, 780, 781, 0, 0,
	0, 0, 550, 551, 0, 520, 0, 0, 0, 0,
	0, 0, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	351, 352, 353, 354, 355, 356, 0, 285, 281, 206,
	207, 208, 209, 210, 292, 293, 390, 0, 0, 0,
	0, 631, -2, 53, 274, 0, 265, 265, 782, 783,
	784, 785, 786, 787, 788, 789, -2, 563, 0, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 340, 341, 342, 336, 337, 339, 338, -2,
	0, 563, 0, 0, 0, 651, 0, 0, 668, 690,
	23, 0, 7, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 0, 0, 19, 0, 19, 0, 0,
	0, 1104, 1105, 1106, 1107, -2, 1590, 1568, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 0, 258, 256, 1568, 1590,
	1650, 1683, 0, 794, 0, 609, 0, 614, 1058, 609,
	286, 552, 553, 651, 651, 518, 0, 322, 0, 1581,
	326, 0, 0, 0, 515, 316, 317, 318, 319, 320,
	321, 0, 0, 775, 0, 0, 312, 0, 280, 1641,
	0, 0, 0, 0, 0, 0, 150, 878, 152, 880,
	156, 163, 0, 0, 168, 169, 172, 173, 174, 175,
	176, 0, 180, 0, 182, 185, 0, 187, 188, 0,
	191, 192, 193, 0, 203, 204, 205, 881, 882, 883,
	-2, 81, 792, 1502, 1393, 0, 1400, 1401, 1412, 1423,
	1182, 1183, 1184, 1185, 0, 0, 0, 0, 0, 1192,
	1193, 0, 1209, 1744, 0, 1199, 1200, 1201, 1202, 1203,
	90, 102, 103, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 0, 1366, 1169, 1104, 0, 1752, 0,
	1772, 1777, 1778, 1779, 1780, 1771, 0, 0, 1351, 0,
	1341, 0, 0, -2, -2, 0, 0, 1709, -2, 1749,
	1768, 1776, 1753, 1775, 1746, 1747, 1741, 1742, 1743, 1745,
	1754, 1756, 1767, 0, 1763, 1773, 1774, 0, 0, 0,
	0, 104, 105, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1357, -2, 1359, 1360,
	1362, -2, 1364, 1365, -2, 1368, 1369, 1370, -2, -2,
	1373, 1374, 1375, 1376, 1377, 1378, 1381, -2, -2, -2,
	-2, 1353, 1354, 1355, 1356, 1345, 1346, 1347, 1348, 1349,
	1350, -2, -2, -2, 651, 726, 0, -2, 0, 0,
	0, 673, 676, 679, 682, 0, 54, 55, 275, 276,
	264, 266, 0, 270, 0, 263, 0, 0, 0, 910,
	910, 910, 910, 910, 910, 0, 910, 0, 0, 0,
	910, 885, 886, 887, 908, 909, 956, 568, 564, 565,
	566, 567, 639, 0, 641, 644, 495, 442, 0, 0,
	0, 495, 0, 456, 448, 0, 0, 0, 495, 0,
	0, 646, 646, 0, 498, 505, 495, 495, -2, 495,
	495, 495, 0, 0, 462, 463, 464, 448, 448, 467,
	468, 469, 480, 481, 506, 1526, 0, 0, 390, 0,
	390, 0, 390, 390, 570, 1678, 1588, 1655, 1641, 0,
	0, 231, 1709, 236, 0, 1589, 1604, 0, 0, 1622,
	0, -2, 0, 302, 646, 0, 652, 0, 651, 0,
	0, 390, 390, 390, 390, 390, 955, 390, 390, 390,
	0, 0, 0, 390, 390, 0, 0, 691, 692, 687,
	688, 689, 693, 694, 5, 6, 19, 0, 0, 0,
	0, 0, 0, 60, 59, 0, 1503, 1521, 1457, 1458,
	1459, 1508, 1461, 1512, 1512, 1512, 1512, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 0, 0, 1501, 1481,
	1510, 1510, 1510, 1508, 1505, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1515,
	1515, 1518, 1518, 1515, 0, 1391, 0, 0, 0, 0,
	613, 0, 0, 646, -2, 0, 519, 323, 1108, 0,
	0, 327, 328, 0, 0, 343, 0, 346, 331, 332,
	333, 0, 130, 0, 314, 315, 0, 0, 282, 0,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 160,
	157, 164, 167, 177, 184, 0, 196, 198, 201, 158,
	165, 170, 171, 178, 199, 159, 161, 162, 166, 200,
	202, 179, 183, 197, 181, 186, 189, 190, 195, 0,
	131, 0, 0, 0, 0, 0, 1399, 0, 0, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1393, 0, 0, 1188, 1189,
	1190, 1191, 1194, 0, 1210, 0, 0, 0, 1455, 0,
	1391, 1391, 0, 1391, 1387, 0, 0, 0, 0, 0,
	0, 1391, 1327, 0, 0, 1329, 1342, 0, 0, 1331,
	1332, 0, 1335, 1336, 1391, 0, 1391, 1340, 1323, 1324,
	0, 1387, 1387, 0, 0, 1387, 1387, 1387, 1387, 1387,
	1387, 1387, 1387, 1387, 1387, 1387, 1387, 0, 0, 0,
	646, 0, 0, 634, 0, 615, 0, 670, 672, 0,
	674, 675, 677, 678, 680, 681, 683, 684, 56, 0,
	0, 268, 0, 273, 0, 791, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 910, 910,
	910, 0, 570, 569, 0, 640, 0, 0, 699, 0,
	0, 0, 448, 495, 495, 454, 455, 450, 449, 501,
	502, 498, 0, 498, 498, 699, 0, 474, 475, 476,
	495, 495, 482, 647, 483, 484, 498, 0, 503, 504,
	699, 0, 0, 699, 699, 0, 492, 493, 494, 0,
	0, 910, 0, 511, 450, 450, 1527, 1528, 0, 919,
	0, 0, 0, 514, 0, 0, 0, 571, 211, 214,
	0, 217, 0, 1678, 0, 1678, 0, 224, 0, 0,
	0, 0, 0, 0, 254, 255, 0, 0, 0, 0,
	245, 248, 1052, 1053, 875, 876, 249, 250, 294, 295,
	0, 615, 669, 671, 665, 666, 667, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 546, 0, 548, 0,
	0, 0, 707, 701, 703, 770, 90, 707, 8, 77,
	74, 0, 19, 0, 0, 19, 19, 0, 19, 259,
	0, 1524, 1522, 1523, 1460, 1509, 0, 1486, 0, 1487,
	1488, 1489, 0, 0, 1482, 0, 1483, 1484, 1485, 1476,
	0, 1477, 1478, 0, 1479, 1480, 257, 0, 1392, 795,
	0, 588, 601, 583, 0, 590, 0, 1059, 572, 601,
	574, 0, 590, 615, 637, 615, 0, 324, 0, 329,
	0, 0, 345, 347, 348, 349, 334, 335, 516, 310,
	311, 303, 304, 305, 306, 307, 308, 309, 313, 100,
	0, 283, 284, 0, 0, 0, 144, 145, 146, 147,
	148, 149, 151, 135, 537, 539, 867, 879, 0, 870,
	0, 154, 194, 127, 0, 0, 1394, 1395, 1396, 1397,
	1398, 1402, 0, 1404, 1406, 1408, 1410, 0, 1428, -2,
	-2, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1413, 1426, 1427, 0, 0, 0, 0,
	0, 0, 1424, 1424, 1419, 0, 1186, 0, 1207, 1211,
	0, 0, 0, 91, 1386, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 0, 0, 1393, 0, 0, 0,
	1388, 1389, 0, 0, 0, 1282, 0, 0, 1288, 1289,
	1290, 0, 596, 0, 1352, 1328, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 725, 727, 0, 605, 607, 608,
	0, 635, 648, 653, 654, 657, 52, 57, 277, 278,
	0, 0, 272, 0, -2, 809, 0, 644, 0, 0,
	821, 388, 861, 0, 0, 0, 877, 900, 906, 0,
	0, 0, 934, 0, 642, 0, 0, 739, 441, 0,
	496, 497, 445, 1641, 450, 699, 699, 457, 451, 458,
	500, 459, 460, 461, 0, 699, 699, 495, 498, 485,
	499, 498, 488, 489, 0, 507, 512, 508, 0, 510,
	465, 466, 644, 358, 359, 0, 0, 0, 364, 0,
	1529, 1529, 1529, 0, 1529, 1529, 1529, 1529, 0, 0,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 0, 1529, 1529, 1529, 1529, 1529, 1038, 1529, 0,
	920, 0, 385, 0, 0, 0, 388, 850, 712, 0,
	713, 714, 710, 741, 765, 765, 0, 765, 745, 1058,
	0, 0, 222, 223, 212, 0, 213, 0, 225, 226,
	0, 228, 229, 230, 237, 1588, 1655, 232, 234, 0,
	0, 238, 251, 252, 253, 0, 0, 243, 244, 0,
	0, 297, 298, 300, 0, 663, 534, 1056, 535, 536,
	540, 0, 0, 543, 544, 545, 809, 0, 855, 856,
	699, 0, 708, 0, 704, 771, 0, 773, 0, 699,
	0, 75, 19, 0, 68, 65, 0, 0, 0, 0,
	0, 1504, 1456, 1525, 0, 0, 0, 1506, 0, 0,
	0, 0, 58, 617, 579, 0, 582, 598, 0, 602,
	0, 0, 594, 587, 591, 0, 0, 611, 573, 0,
	0, 578, 663, 638, 1109, 0, 330, 344, 0, 0,
	0, 0, 138, 864, 0, 139, 143, 133, 0, 0,
	0, 869, 0, 866, 871, 0, 153, 0, 0, 128,
	129, 925, 930, 0, 1403, 1405, 1407, 1409, 1411, 0,
	1414, 1424, 1424, 1420, 0, 1415, 0, 1417, 0, 1394,
	0, 1212, 0, 0, 0, 0, 0, 0, 1272, 1273,
	0, 0, 1277, 0, 1279, 1280, 1281, 1283, 0, 0,
	0, 1287, 0, 1326, 1344, 1330, 1333, 0, 1337, 0,
	1339, 0, 651, 0, 1249, 1249, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 1204,
	0, 1205, 1206, 0, 728, 617, 0, 0, 0, 660,
	658, 659, 279, 267, 269, 0, 0, 0, 797, 798,
	800, 0, 803, 804, 805, 0, 810, 811, 813, 814,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1573, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 808, 0, 911, 828, 1529, 392, 0,
	0, 863, 0, 838, 0, 0, 0, -2, 0, 0,
	0, 0, 936, 0, 0, 0, 557, 561, 23, 645,
	0, 700, 443, 0, 444, 495, 452, 453, 699, 1058,
	477, 478, 699, 495, 495, 498, 0, 509, 0, 919,
	361, 368, 0, 1067, 1068, 0, 0, 1074, 1083, 910,
	1139, 0, 1083, 0, 0, 1085, 1086, 362, 0, 0,
	374, 0, 0, 0, 363, 0, 0, 0, 1530, 0,
	0, 1529, 1529, 0, 0, 0, 0, 1529, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1029, 0, 0, 0, 0, 0, 0, 0, 1044, 1045,
	828, 1529, 0, 0, 0, 392, 847, 0, 0, 0,
	0, 0, 0, 732, 0, 0, 731, 0, 0, 0,
	0, 0, 644, 766, 0, 768, 769, 743, -2, 0,
	712, 748, 1391, 215, 216, 0, 0, 221, 239, 241,
	0, 0, 0, 240, 242, 246, 247, 296, 299, 301,
	633, 0, 0, 0, 957, 0, 549, 697, 702, 709,
	772, 774, 91, 705, 697, 0, 78, 19, 77, 69,
	70, 0, 19, 0, 0, 0, 0, 1514, 1513, 1499,
	0, 1500, 1511, 1516, 0, 1519, 0, 621, 0, 0,
	601, 603, 0, 0, 601, 0, 0, 610, 0, 0,
	601, 636, 0, 0, 517, 101, 350, 0, 0, 0,
	0, 0, 538, 0, 868, 135, 0, 0, 155, 0,
	0, 928, 0, 930, 1390, 1416, 1418, 0, 1425, 1421,
	1187, 1195, 1208, 0, 0, 1214, 1226, 1226, 0, 1217,
	1512, 1512, 1220, 1508, 1510, 1508, 1226, 1226, 0, 92,
	0, 0, 1278, 0, 0, 0, 597, 0, 0, 0,
	1247, 1249, 1254, 1250, 1255, 1249, 1249, 1249, 1249, 1260,
	1249, 1249, 1249, 1249, 1249, 1249, 1249, 1249, 1245, 606,
	621, 649, 650, 655, 656, 0, 271, 0, 0, 802,
	0, 0, 0, 815, 0, 832, 829, 830, 831, 0,
	858, 393, 394, 395, 396, 0, 0, 0, 862, 0,
	850, 844, 0, 0, 0, 901, 902, 903, 904, 905,
	-2, 914, 0, 0, 1060, 1060, 1060, 944, 0, 935,
	609, 0, -2, 0, 0, 559, 0, 0, 740, 446,
	699, 470, 0, 486, 699, 699, 495, 513, 0, 360,
	366, 369, 0, 368, -2, 1073, 1098, 1084, 1098, 1140,
	1098, 1098, 910, 0, 372, 373, 375, 0, 377, 0,
	365, 371, 1006, 1007, 1008, 0, 0, 1011, 1012, 1013,
	1014, 0, 0, 1017, 1018, 1019, 1020, 1021, 1095, 1096,
	1097, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1046, 1047,
	1048, 1049, 1050, 1051, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 0, 0, 1041, 0, 832, 0, 0, 0,
	0, 858, 849, 0, 851, 852, 0, 0, 580, 699,
	289, 0, 735, 729, 0, 718, 733, 734, 721, 0,
	723, 0, 719, 720, 699, 711, 742, 767, 744, 747,
	749, 750, 756, 0, 0, 0, 0, 218, 219, 220,
	227, 0, 412, 233, 664, 1057, 541, 542, 958, 959,
	547, 695, 0, 0, 695, 73, 76, 0, 71, 0,
	0, 0, 0, 63, 61, 1507, 0, 0, 623, 115,
	0, 0, 0, 599, 0, 604, 601, 586, 595, 585,
	592, 593, 612, 601, 577, 576, 1110, 325, 0, 865,
	135, 140, 141, 142, 136, 134, 872, 0, 874, 0,
	926, 930, 0, 0, 1422, 1213, 1196, 1215, 1227, 1228,
	1216, 1197, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1198,
	1274, 0, 1276, 1284, 1285, 0, 1334, 1338, 0, 0,
	0, 1253, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 651, 1246, 0, 623, 661, 662,
	790, 793, 799, 801, 0, 812, 0, 819, 820, 0,
	0, 823, 824, 834, 0, 0, 0, 398, 399, 0,
	0, 0, 411, 407, 408, 409, 389, 857, 847, 847,
	0, 0, 837, 0, 915, 1529, 1529, 1529, 0, 0,
	1061, 1062, 1064, 1065, 1066, 0, 0, 947, 0, 0,
	938, 0, 765, 0, 0, 699, 558, 561, 562, 643,
	447, 699, 490, 487, 699, 357, 370, 367, 1100, -2,
	1113, 1115, 0, 920, 1118, 1119, 0, 0, 0, 0,
	0, 0, 1161, 1127, 0, 0, 1131, 1132, 1133, 0,
	0, 1440, 1441, 0, 1138, 0, 1099, 0, 1087, 1099,
	0, 0, 1098, 0, 376, 378, 379, 380, 1009, 1010,
	1015, 1016, 0, 1040, 0, 0, 381, 0, 0, 0,
	382, 387, 848, 0, 853, 854, 651, 0, 0, 715,
	736, 0, 0, 716, 0, 717, 722, 724, 288, 751,
	0, 0, 753, 754, 755, 746, 235, 685, 0, 0,
	706, 686, 0, 19, 0, 0, 66, 1517, 1520, 625,
	0, 622, 116, 0, 0, 0, 0, 600, 584, 575,
	137, 132, 873, 118, 929, 931, 927, 0, 1286, 0,
	1249, 1248, 1242, 0, 625, 0, 818, 816, 833, 822,
	0, 859, 860, 0, 400, 401, 0, 404, 410, 835,
	836, 0, 842, 0, 0, 0, 0, 907, -2, 0,
	0, -2, 950, 0, 945, 0, 937, 0, 940, 699,
	699, -2, 555, 560, 0, 471, 491, 1114, 1116, 1117,
	1120, 1121, 1054, 1055, 1122, 1166, 1167, 1168, 0, 0,
	1125, 1163, 1164, 1165, 1126, 0, 0, 0, 0, 1438,
	1439, 1159, 0, 0, 0, 0, 0, 0, 0, 1081,
	1039, 1042, 1043, 386, 383, 384, 581, 646, 290, 291,
	737, 0, 730, 760, 757, 0, 0, 696, 698, 67,
	72, 0, 0, 627, 0, 624, 0, 618, 620, 126,
	589, 88, 109, 0, 1275, 1325, 1252, 0, 1243, 0,
	1237, 1238, 1239, 1244, 627, 0, 0, 0, 397, 402,
	0, 405, 406, 845, 846, 0, 840, 0, 0, 896,
	1508, 0, 916, 917, 918, 960, -2, 1003, 1063, 922,
	118, 960, 941, 0, 948, 0, 946, 939, 651, 556,
	1123, 1124, 0, 0, 1341, 1529, 1154, 0, 0, 0,
	1088, 1090, 1091, 1092, 1093, 1094, 1089, 0, 0, 0,
	1080, 1082, 1135, 0, 287, 0, 0, 761, 763, 758,
	759, 62, 64, 79, 0, 626, 117, 0, 80, 0,
	106, 0, 119, 120, 0, 0, 0, 0, 1251, 1240,
	0, 0, 0, 0, 0, 1442, 1443, 1444, 0, 616,
	0, 817, 825, 0, 827, 403, 839, 842, 0, 889,
	0, 657, 0, 962, 0, 919, 1005, 924, 962, 933,
	0, 943, 0, 952, 0, 949, 646, 1162, 0, 1130,
	0, 1142, 1155, 0, 0, 889, 889, 889, 889, 0,
	1136, 738, 752, 0, 0, 0, 89, 93, 0, 115,
	112, 0, 121, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 1233, 1234, 1235, 1236, 0, 826, 841, 843,
	888, 897, 898, 657, 921, 0, 999, 1004, 923, 942,
	951, 0, 954, 554, 1128, 1134, 1141, 1143, 1144, 0,
	1156, 1157, 1158, 1160, 1069, 0, 1071, 0, 1075, 0,
	1077, 0, 0, 762, 764, 0, 629, 619, 82, 0,
	0, 110, 111, 113, 0, 122, 0, 124, 125, 0,
	1230, 1231, 1232, 806, 890, 1529, 0, 0, 894, 895,
	899, 0, 987, 0, 0, 993, 0, 1000, 953, 1129,
	1145, 0, 1146, 0, 0, 0, 889, 889, 889, 889,
	1079, 628, 0, 932, 0, 94, 0, 96, 98, 99,
	1101, 107, 108, 114, 123, 1241, 0, 892, 0, 963,
	0, 965, 0, 0, 0, 0, 0, 997, 0, 1147,
	1149, 1150, 0, 0, 1148, 1070, 1072, 1076, 1078, 630,
	83, 84, 0, 95, 0, 0, 891, 893, 0, 967,
	0, 988, 0, 0, 0, 0, 0, 0, 0, 1151,
	1153, 1152, 0, 0, 97, 1102, 964, 961, 0, 999,
	989, 0, 991, 0, 0, 0, 0, 85, 86, 87,
	0, 0, 969, 0, 985, 990, 992, 994, 0, 998,
	996, 1103, 968, 0, 981, 966, 0, 995, 970, -2,
	0, 986, 971, -2, 0, 979, 0, 0, 972, 980,
	0, 975, 0, 0, 0, 974, 0, -2, 982, 0,
	0, 976, -2, 0, 984, 983,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 100, 3, 3, 3, 131, 123, 3,
	68, 69, 128, 126, 141, 127, 140, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 569, 568,
	110, 109, 111, 3, 572, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 570, 122, 571, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 101, 102, 103, 104,
	105, 106, 107, 108, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 124, 125, 130, 132, 135, 136,
	137, 138, 139, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:726
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:733
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:739
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:747
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:753
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:757
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:776
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:782
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:787
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:791
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:823
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:830
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:850
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:856
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:863
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:871
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:877
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:886
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:896
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:912
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:920
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:930
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:978
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:984
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:988
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1003
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1013
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1017
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1023
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1032
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1036
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1042
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1063
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1076
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1087
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1093
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1097
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1103
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1110
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1122
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1157
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1163
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1172
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1183
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1187
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1193
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1197
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1203
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1207
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1213
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1237
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1256
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1260
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1264
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1273
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1280
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1288
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1295
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1300
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1307
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1316
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1340
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1344
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1350
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1356
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1374
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1391
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1414
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1422
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1427
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1437
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1450
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1474
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1526
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1533
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1541
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1558
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1562
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1566
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1570
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1577
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1581
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1587
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1594
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1603
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1607
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1649
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1653
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1822
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1829
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1836
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1846
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1850
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1856
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1871
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1879
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1883
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1889
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1956
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1960
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1972
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1976
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1983
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1989
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1993
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2041
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2064
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2087
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2094
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2101
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2132
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2136
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2140
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2146
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2150
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2156
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2160
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2166
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2170
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2181
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2192
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2196
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2200
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2204
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2212
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2216
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2220
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2224
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2234
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2258
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2313
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2324
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2328
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2334
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2350
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2354
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2360
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2366
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2370
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2374
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2378
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2402
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2412
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2416
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2532
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2536
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2542
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2548
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2553
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2554
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2555
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2560
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2575
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2586
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2595
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2599
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2605
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2612
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2616
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2620
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2624
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2628
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2637
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2647
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2653
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2669
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2684
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2691
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2712
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2720
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2729
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2740
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2760
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2768
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2787
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2813
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2818
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2822
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2831
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2847
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2855
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2859
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2863
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2867
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2891
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2913
		{
			yyVAL.item = nil
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2918
		{
			yyVAL.item = nil
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2970
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2983
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2989
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2994
		{
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2998
		{
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3023
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3031
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3037
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3043
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3049
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3061
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3067
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3117
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3127
		{
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3129
		{
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3148
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3165
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3177
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3183
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3198
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3224
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3278
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3282
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3287
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3291
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3297
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3310
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3314
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3345
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3349
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3355
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3361
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3365
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3369
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3375
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3379
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3403
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3430
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3434
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3440
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3474
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3490
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3512
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3523
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3528
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3535
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3564
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3575
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3579
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3585
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3590
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3597
		{
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3599
		{
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3602
		{
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3611
		{
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3615
		{
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3620
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3629
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3642
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3650
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3657
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3664
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3684
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3694
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3698
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3704
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3717
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3725
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3739
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3758
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3762
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3771
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3775
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3781
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3790
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3794
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3800
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3804
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3810
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3814
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3820
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3825
		{
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3836
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3840
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3856
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3862
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3866
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3872
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3876
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3885
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3898
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3905
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3912
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3930
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3949
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3955
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3966
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3979
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3983
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3988
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3992
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3999
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4004
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4011
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4017
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4021
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4025
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4029
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4033
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4037
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4043
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4050
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4059
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4063
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4069
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4081
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4090
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4096
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4100
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4104
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4113
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4119
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4125
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4129
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4135
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4140
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4144
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4148
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4153
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4157
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4161
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4170
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4182
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4186
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4200
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4204
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4214
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4246
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4254
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4271
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4295
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4303
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4335
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4345
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4356
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4370
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4374
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4378
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4387
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4391
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4404
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4422
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4428
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4432
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4438
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4442
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4447
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4451
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4456
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4464
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4478
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4496
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4511
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4520
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4539
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4543
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4553
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4557
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4561
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4565
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4571
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4581
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4585
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4591
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4607
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4613
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4617
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4621
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4627
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4631
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4637
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4641
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4647
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4651
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4657
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4661
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4671
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4684
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4690
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4696
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4709
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4727
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4731
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4737
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4747
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4751
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4755
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4760
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4764
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4768
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4772
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4781
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4785
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4789
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4793
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4798
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4802
		{
			yyVAL.str = yyDollar[1].str
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4806
		{
			yyVAL.str = yyDollar[2].str
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4812
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4822
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4826
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4830
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4834
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4840
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 790:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4874
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4884
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4890
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4896
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4906
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4911
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4917
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4924
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4928
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4934
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4940
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4945
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4949
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4953
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4957
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4964
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4976
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4981
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4994
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4998
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5024
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5030
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5036
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5047
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5059
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5065
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5075
		{
			yyVAL.str = yyDollar[1].str
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5079
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5085
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5092
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5098
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5106
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5112
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5119
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5126
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5134
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5149
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5161
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5173
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credntials:  yyDollar[6].strsUnion(),
				Status:      yyDollar[7].str,
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5186
		{
			yyVAL.str = yyDollar[3].str
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5191
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5195
		{
			yyLOCAL = yyDollar[4].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5201
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5205
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5210
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5214
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5220
		{
			yyVAL.str = "false"
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5224
		{
			yyVAL.str = "true"
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5228
		{
			yyVAL.str = "false"
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5233
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5237
		{
			yyVAL.str = yyDollar[2].str
		}
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5243
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5257
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5263
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5269
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5275
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5284
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5293
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5302
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5307
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5313
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5321
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5427
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5431
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5437
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5447
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5451
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5457
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5467
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5471
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5475
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5484
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5490
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5497
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5512
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5519
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5528
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5532
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5538
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5552
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5556
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5565
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5577
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5583
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5606
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5628
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5632
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5636
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5640
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5644
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5650
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5654
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5660
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5665
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5686
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5692
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5707
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5717
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5721
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5726
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5730
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5736
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5740
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5746
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5750
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5754
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5759
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5763
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5769
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5781
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5790
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5803
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5810
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5820
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5828
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5839
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5843
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5848
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5852
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5859
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5870
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5883
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5897
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5905
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5912
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5919
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5926
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5933
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5949
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5956
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5967
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5974
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5985
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5999
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6006
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6026
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6039
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6053
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6060
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6071
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6084
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6090
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6094
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6100
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6109
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6123
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6129
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6133
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6139
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6146
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6155
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6159
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6168
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6173
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6177
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6182
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6186
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6196
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6200
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6211
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6219
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6227
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6235
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6246
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6255
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6265
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6275
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6279
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6297
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6303
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6307
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6311
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6317
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6321
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6325
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6329
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6333
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6337
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6341
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6346
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6350
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6354
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6358
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6362
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6366
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6370
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6374
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6378
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6382
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6386
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6390
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6394
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6398
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6402
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6406
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6410
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6418
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6422
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6426
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6430
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6434
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6438
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6446
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6450
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6454
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6460
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6464
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6476
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6480
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6486
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6490
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6494
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6498
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6502
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6506
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6520
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6524
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6533
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6538
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6544
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6551
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6555
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6561
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6565
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6569
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6575
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6579
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6585
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6594
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6603
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6626
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6651
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6665
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6680
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6689
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6698
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6707
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6717
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6725
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6731
		{
			yyVAL.str = ""
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6735
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6745
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6751
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6757
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6776
		{
			yyVAL.str = ""
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6780
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6792
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6796
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6800
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6824
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6832
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6841
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6847
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6851
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6873
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6877
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6886
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6902
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6906
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6910
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6914
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6931
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6949
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6953
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6958
		{
			yyVAL.str = ""
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6962
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6968
		{
			yyVAL.str = ""
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6972
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6978
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6990
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6997
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7004
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7011
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7018
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7027
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7033
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7039
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7043
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7047
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7051
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7055
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7060
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7067
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7071
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7075
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7084
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7089
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7093
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7109
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7127
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7131
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7135
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7143
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7147
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7151
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7155
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7159
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7163
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7169
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7173
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7177
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7181
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7185
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7189
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7201
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7205
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7209
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7213
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7218
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7226
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7231
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7235
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7244
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7248
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7252
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7256
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7260
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7274
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7282
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7295
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7304
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7310
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7314
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7320
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7329
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7341
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7358
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7375
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7388
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7401
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7413
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7427
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7442
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7457
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7474
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7489
		{
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7496
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7500
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7504
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7510
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7514
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7518
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7522
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7528
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7532
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7536
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7542
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7550
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7564
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7571
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7580
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7585
		{
			yyVAL.str = ","
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7589
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7601
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7627
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7638
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7657
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7666
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7676
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7686
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7696
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7706
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7716
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7726
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7736
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7746
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7756
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7766
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7776
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7811
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7819
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7835
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7845
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7853
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7862
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7870
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7878
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7886
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7894
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7905
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7915
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7927
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7938
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7960
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7996
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8008
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8020
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8031
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8039
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8046
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8053
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8065
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8073
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8083
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8093
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8101
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8112
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8121
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8130
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8138
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8148
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8156
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8170
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8180
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8199
		{
		}
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8201
		{
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8242
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8253
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8257
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8261
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8267
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8276
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8282
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8286
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8293
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8297
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8301
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8309
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8313
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8317
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8321
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8327
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8331
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8335
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8339
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8343
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8347
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8351
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8355
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8359
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8363
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8371
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8375
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8379
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8383
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8387
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8391
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8395
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8399
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8403
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8407
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8413
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8417
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8423
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8427
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8434
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8438
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8442
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8448
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8452
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8456
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8460
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8464
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8468
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8472
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8478
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8482
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8486
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8490
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8496
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8509
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8514
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8520
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8524
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8537
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8542
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8546
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8550
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8554
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8558
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8562
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8576
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8580
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8587
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8598
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8603
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8609
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8621
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8684
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8697
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8710
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8762
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8775
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8790
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8817
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8859
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8895
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8931
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8948
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8960
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8980
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9000
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9049
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9062
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9075
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9088
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9100
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9112
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9124
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9136
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9148
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9184
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9237
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9245
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9254
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9264
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9287
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9292
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9298
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9305
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9309
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9314
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9318
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9324
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9330
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9337
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9344
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9353
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9360
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9367
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9390
		{
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9392
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9402
		{
			yyVAL.str = ""
		}
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9406
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
